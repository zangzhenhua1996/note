{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e2a\u4eba\u53d1\u5c55\u5b66\u4e60\u7b14\u8bb0","title":"\u4ecb\u7ecd"},{"location":"python-web/001-\u7f51\u7edcudp/","text":"3.1\u7f51\u7edc\u901a\u4fe1\u6982\u8ff0 \u00b6 1. \u4ec0\u4e48\u662f\u7f51\u7edc \u00b6 \u8bf4\u660e \u00b6 \u7f51\u7edc\u5c31\u662f\u4e00\u79cd\u8f85\u52a9\u53cc\u65b9\u6216\u8005\u591a\u65b9\u80fd\u591f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u5de5\u5177 \u5982\u679c\u6ca1\u6709\u7f51\u7edc\u53ef\u60f3 \u5355\u673a \u7684\u4e16\u754c\u662f\u591a\u4e48\u7684\u5b64\u5355 \u5355\u673a\u6e38\u620f\uff08\u4e0d\u80fd\u548c\u8fdc\u5728\u4ed6\u4e61\u7684\u670b\u53cb\u4e00\u8d77\u73a9\uff09 \u00b6 2. \u4f7f\u7528\u7f51\u7edc\u7684\u76ee\u7684 \u00b6 \u5c31\u662f\u4e3a\u4e86\u8054\u901a\u591a\u65b9\u7136\u540e\u8fdb\u884c\u901a\u4fe1\u7528\u7684\uff0c\u5373\u628a\u6570\u636e\u4ece\u4e00\u65b9\u4f20\u9012\u7ed9\u53e6\u5916\u4e00\u65b9 \u524d\u9762\u7684\u5b66\u4e60\u7f16\u5199\u7684\u7a0b\u5e8f\u90fd\u662f\u5355\u673a\u7684\uff0c\u5373\u4e0d\u80fd\u548c\u5176\u4ed6\u7535\u8111\u4e0a\u7684\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1 \u4e3a\u4e86\u8ba9\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u4e4b\u95f4\u80fd\u591f\u4e92\u76f8\u4f20\u9012\u6570\u636e\uff0c\u5c31\u9700\u8981\u501f\u52a9\u7f51\u7edc\u7684\u529f\u80fd \u5c0f\u603b\u7ed3 \u00b6 \u4f7f\u7528\u7f51\u7edc\u80fd\u591f\u628a\u591a\u65b9\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u4f20\u9012 \u6240\u8c13\u7684\u7f51\u7edc\u7f16\u7a0b\u5c31\u662f\uff0c\u8ba9\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u7684\u8f6f\u4ef6\u80fd\u591f\u8fdb\u884c\u6570\u636e\u4f20\u9012\uff0c\u5373\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1 3.2ip\u5730\u5740 \u00b6 1. \u4ec0\u4e48\u662f\u5730\u5740 \u00b6 \u5730\u5740\u5c31\u662f\u7528\u6765\u6807\u8bb0\u5730\u70b9\u7684 2. ip\u5730\u5740\u7684\u4f5c\u7528 \u00b6 ip\u5730\u5740\uff1a\u7528\u6765\u5728\u7f51\u7edc\u4e2d\u6807\u8bb0\u4e00\u53f0\u7535\u8111\uff0c\u6bd4\u5982192.168.1.1\uff1b\u5728\u672c\u5730\u5c40\u57df\u7f51\u4e0a\u662f\u552f\u4e00\u7684\u3002 \u00b6 3. ip\u5730\u5740\u7684\u5206\u7c7b\uff08\u4e86\u89e3\uff09 \u00b6 \u6bcf\u4e00\u4e2aIP\u5730\u5740\u5305\u62ec\u4e24\u90e8\u5206\uff1a\u7f51\u7edc\u5730\u5740\u548c\u4e3b\u673a\u5730\u5740 3.1 A\u7c7bIP\u5730\u5740 \u00b6 \u4e00\u4e2aA\u7c7bIP\u5730\u5740\u75311\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c3\u5b57\u8282\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c0\u201d\uff0c \u5730\u5740\u8303\u56f41.0.0.1-126.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a00000001 00000000 00000000 00000001 - 01111110 11111111 11111111 11111110 \u53ef\u7528\u7684A\u7c7b\u7f51\u7edc\u6709126\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb31677214\u4e2a\u4e3b\u673a 3.2 B\u7c7bIP\u5730\u5740 \u00b6 \u4e00\u4e2aB\u7c7bIP\u5730\u5740\u75312\u4e2a\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c2\u4e2a\u5b57\u8282\u7684\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c10\u201d\uff0c \u5730\u5740\u8303\u56f4128.1.0.1-191.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a10000000 00000001 00000000 00000001 - 10111111 11111111 11111111 11111110 \u53ef\u7528\u7684B\u7c7b\u7f51\u7edc\u670916384\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb365534\u4e3b\u673a 3.3 C\u7c7bIP\u5730\u5740 \u00b6 \u4e00\u4e2aC\u7c7bIP\u5730\u5740\u75313\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c1\u5b57\u8282\u7684\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c110\u201d \u8303\u56f4192.0.1.1-223.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a: 11000000 00000000 00000001 00000001 - 11011111 11111111 11111110 11111110 C\u7c7b\u7f51\u7edc\u53ef\u8fbe2097152\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb3254\u4e2a\u4e3b\u673a 3.4 D\u7c7b\u5730\u5740\u7528\u4e8e\u591a\u70b9\u5e7f\u64ad \u00b6 D\u7c7bIP\u5730\u5740\u7b2c\u4e00\u4e2a\u5b57\u8282\u4ee5\u201c1110\u201d\u5f00\u59cb\uff0c\u5b83\u662f\u4e00\u4e2a\u4e13\u95e8\u4fdd\u7559\u7684\u5730\u5740\u3002 \u5b83\u5e76\u4e0d\u6307\u5411\u7279\u5b9a\u7684\u7f51\u7edc\uff0c\u76ee\u524d\u8fd9\u4e00\u7c7b\u5730\u5740\u88ab\u7528\u5728\u591a\u70b9\u5e7f\u64ad\uff08Multicast\uff09\u4e2d \u591a\u70b9\u5e7f\u64ad\u5730\u5740\u7528\u6765\u4e00\u6b21\u5bfb\u5740\u4e00\u7ec4\u8ba1\u7b97\u673a s \u5730\u5740\u8303\u56f4224.0.0.1-239.255.255.254 3.5 E\u7c7bIP\u5730\u5740 \u00b6 \u4ee5\u201c1111\u201d\u5f00\u59cb\uff0c\u4e3a\u5c06\u6765\u4f7f\u7528\u4fdd\u7559 E\u7c7b\u5730\u5740\u4fdd\u7559\uff0c\u4ec5\u4f5c\u5b9e\u9a8c\u548c\u5f00\u53d1\u7528 3.6 \u79c1\u6709ip \u00b6 \u5728\u8fd9\u4e48\u591a\u7f51\u7edcIP\u4e2d\uff0c\u56fd\u9645\u89c4\u5b9a\u6709\u4e00\u90e8\u5206IP\u5730\u5740\u662f\u7528\u4e8e\u6211\u4eec\u7684\u5c40\u57df\u7f51\u4f7f\u7528\uff0c\u4e5f\u5c31 \u662f\u5c5e\u4e8e\u79c1\u7f51IP\uff0c\u4e0d\u5728\u516c\u7f51\u4e2d\u4f7f\u7528\u7684\uff0c\u5b83\u4eec\u7684\u8303\u56f4\u662f\uff1a 10.0.0.0\uff5e10.255.255.255 172.16.0.0\uff5e172.31.255.255 192.168.0.0\uff5e192.168.255.255 3.7 \u6ce8\u610f \u00b6 IP\u5730\u5740127\uff0e0\uff0e0\uff0e1~127\uff0e255\uff0e255\uff0e255\u7528\u4e8e\u56de\u8def\u6d4b\u8bd5\uff0c \u5982\uff1a127.0.0.1\u53ef\u4ee5\u4ee3\u8868\u672c\u673aIP\u5730\u5740\uff0c\u7528 http://127.0.0.1 \u5c31\u53ef\u4ee5\u6d4b\u8bd5\u672c\u673a\u4e2d\u914d\u7f6e\u7684Web\u670d\u52a1\u5668\u3002 3.3Linux\u547d\u4ee4(ping, ifconfig) \u00b6 \u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f\uff1aifconfig \u00b6 \u5982\u679c\uff0c\u6211\u4eec\u53ea\u662f\u6572\uff1aifconfig\uff0c\u5b83\u4f1a\u663e\u793a\u6240\u6709\u7f51\u5361\u7684\u4fe1\u606f\uff1a \u6d4b\u8bd5\u8fdc\u7a0b\u4e3b\u673a\u8fde\u901a\u6027\uff1aping \u00b6 \u901a\u5e38\u7528ping\u6765\u68c0\u6d4b\u7f51\u7edc\u662f\u5426\u6b63\u5e38 3.4\u7aef\u53e3 \u00b6 1. \u4ec0\u4e48\u662f\u7aef\u53e3 \u00b6 \u7aef\u53e3\u5c31\u597d\u4e00\u4e2a\u623f\u5b50\u7684\u95e8\uff0c\u662f\u51fa\u5165\u8fd9\u95f4\u623f\u5b50\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002 \u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u6536\u53d1\u7f51\u7edc\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6709\u8fd9\u6837\u7684\u7aef\u53e3 \u5728linux\u7cfb\u7edf\u4e2d\uff0c\u7aef\u53e3\u53ef\u4ee5\u670965536\uff082\u768416\u6b21\u65b9\uff09\u4e2a\u4e4b\u591a\uff01 \u65e2\u7136\u6709\u8fd9\u4e48\u591a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7edf\u4e00\u7ba1\u7406\uff0c\u6240\u4ee5\u8fdb\u884c\u4e86\u7f16\u53f7\uff0c\u8fd9\u5c31\u662f \u7aef\u53e3\u53f7 2. \u7aef\u53e3\u53f7 \u00b6 \u7aef\u53e3\u662f\u901a\u8fc7\u7aef\u53e3\u53f7\u6765\u6807\u8bb0\u7684\uff0c\u7aef\u53e3\u53f7\u53ea\u6709\u6574\u6570\uff0c\u8303\u56f4\u662f\u4ece0\u523065535 \u6ce8\u610f\uff1a\u7aef\u53e3\u6570\u4e0d\u4e00\u6837\u7684*nix\u7cfb\u7edf\u4e0d\u4e00\u6837\uff0c\u8fd8\u53ef\u4ee5\u624b\u52a8\u4fee\u6539 3. \u7aef\u53e3\u662f\u600e\u6837\u5206\u914d\u7684 \u00b6 \u7aef\u53e3\u53f7\u4e0d\u662f\u968f\u610f\u4f7f\u7528\u7684\uff0c\u800c\u662f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5b9a\u8fdb\u884c\u5206\u914d\u3002 \u7aef\u53e3\u7684\u5206\u7c7b\u6807\u51c6\u6709\u597d\u51e0\u79cd\uff0c\u6211\u4eec\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u53ea\u4ecb\u7ecd\u4e00\u4e0b\u77e5\u540d\u7aef\u53e3\u548c\u52a8\u6001\u7aef\u53e3 3.1 \u77e5\u540d\u7aef\u53e3\uff08Well Known Ports\uff09 \u00b6 \u77e5\u540d\u7aef\u53e3\u662f\u4f17\u6240\u5468\u77e5\u7684\u7aef\u53e3\u53f7\uff0c\u8303\u56f4\u4ece0\u52301023 80\u7aef\u53e3\u5206\u914d\u7ed9HTTP\u670d\u52a1 21\u7aef\u53e3\u5206\u914d\u7ed9FTP\u670d\u52a1 \u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4e00\u4e9b\u5e38\u7528\u7684\u529f\u80fd\u4f7f\u7528\u7684\u53f7\u7801\u662f\u4f30\u8ba1\u7684\uff0c\u597d\u6bd4 \u7535\u8bdd\u53f7\u7801110\u300110086\u300110010\u4e00\u6837 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u77e5\u540d\u7aef\u53e3\u7684\u9700\u8981\u6709root\u6743\u9650 3.2 \u52a8\u6001\u7aef\u53e3\uff08Dynamic Ports\uff09 \u00b6 \u52a8\u6001\u7aef\u53e3\u7684\u8303\u56f4\u662f\u4ece1024\u523065535 \u4e4b\u6240\u4ee5\u79f0\u4e3a\u52a8\u6001\u7aef\u53e3\uff0c\u662f\u56e0\u4e3a\u5b83\u4e00\u822c\u4e0d\u56fa\u5b9a\u5206\u914d\u67d0\u79cd\u670d\u52a1\uff0c\u800c\u662f\u52a8\u6001\u5206\u914d\u3002 \u52a8\u6001\u5206\u914d\u662f\u6307\u5f53\u4e00\u4e2a\u7cfb\u7edf\u7a0b\u5e8f\u6216\u5e94\u7528\u7a0b\u5e8f\u7a0b\u5e8f\u9700\u8981\u7f51\u7edc\u901a\u4fe1\u65f6\uff0c\u5b83\u5411\u4e3b\u673a\u7533\u8bf7\u4e00\u4e2a\u7aef\u53e3\uff0c\u4e3b\u673a\u4ece\u53ef\u7528\u7684\u7aef\u53e3\u53f7\u4e2d\u5206\u914d\u4e00\u4e2a\u4f9b\u5b83\u4f7f\u7528\u3002 \u5f53\u8fd9\u4e2a\u7a0b\u5e8f\u5173\u95ed\u65f6\uff0c\u540c\u65f6\u4e5f\u5c31\u91ca\u653e\u4e86\u6240\u5360\u7528\u7684\u7aef\u53e3\u53f7 3.3 \u600e\u6837\u67e5\u770b\u7aef\u53e3 \uff1f \u00b6 \u7528\u201cnetstat \uff0dan\u201d\u67e5\u770b\u7aef\u53e3\u72b6\u6001 lsof -i [tcp/udp]:2425 4. \u5c0f\u603b\u7ed3 \u00b6 \u7aef\u53e3\u6709\u4ec0\u4e48\u7528\u5462 \uff1f \u6211\u4eec\u77e5\u9053\uff0c\u4e00\u53f0\u62e5\u6709IP\u5730\u5740\u7684\u4e3b\u673a\u53ef\u4ee5\u63d0\u4f9b\u8bb8\u591a\u670d\u52a1\uff0c\u6bd4\u5982HTTP\uff08\u4e07\u7ef4\u7f51\u670d\u52a1\uff09\u3001FTP\uff08\u6587\u4ef6\u4f20\u8f93\uff09\u3001SMTP\uff08\u7535\u5b50\u90ae\u4ef6\uff09\u7b49\uff0c\u8fd9\u4e9b\u670d\u52a1\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc71\u4e2aIP\u5730\u5740\u6765\u5b9e\u73b0\u3002\u90a3\u4e48\uff0c\u4e3b\u673a\u662f\u600e\u6837\u533a\u5206\u4e0d\u540c\u7684\u7f51\u7edc\u670d\u52a1\u5462\uff1f\u663e\u7136\u4e0d\u80fd\u53ea\u9760IP\u5730\u5740\uff0c\u56e0\u4e3aIP\u5730\u5740\u4e0e\u7f51\u7edc\u670d\u52a1\u7684\u5173\u7cfb\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u201cIP\u5730\u5740+\u7aef\u53e3\u53f7\u201d\u6765\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\u7684\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7aef\u53e3\u5e76\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u6bd4\u5982\u4f60\u7684\u7535\u8111\u4f5c\u4e3a\u5ba2\u6237\u673a\u8bbf\u95ee\u4e00\u53f0WWW\u670d\u52a1\u5668\u65f6\uff0cWWW\u670d\u52a1\u5668\u4f7f\u7528\u201c80\u201d\u7aef\u53e3\u4e0e\u4f60\u7684\u7535\u8111\u901a\u4fe1\uff0c\u4f46\u4f60\u7684\u7535\u8111\u5219\u53ef\u80fd\u4f7f\u7528\u201c3457\u201d\u8fd9\u6837\u7684\u7aef\u53e3\u3002 3.5socket\u7b80\u4ecb \u00b6 1. \u4e0d\u540c\u7535\u8111\u4e0a\u7684\u8fdb\u7a0b\u4e4b\u95f4\u5982\u4f55\u901a\u4fe1 \u00b6 \u9996\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5426\u5219\u901a\u4fe1\u65e0\u4ece\u8c08\u8d77\uff01 \u57281\u53f0\u7535\u8111\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u53f7\uff08PID\uff09\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u4e2d\u8fd9\u662f\u884c\u4e0d\u901a\u7684\u3002 \u5176\u5b9eTCP/IP\u534f\u8bae\u65cf\u5df2\u7ecf\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7f51\u7edc\u5c42\u7684\u201cip\u5730\u5740\u201d\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u7f51\u7edc\u4e2d\u7684\u4e3b\u673a\uff0c\u800c\u4f20\u8f93\u5c42\u7684\u201c\u534f\u8bae+\u7aef\u53e3\u201d\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u4e3b\u673a\u4e2d\u7684\u5e94\u7528\u8fdb\u7a0b\uff08\u8fdb\u7a0b\uff09\u3002 \u8fd9\u6837\u5229\u7528ip\u5730\u5740\uff0c\u534f\u8bae\uff0c\u7aef\u53e3\u5c31\u53ef\u4ee5\u6807\u8bc6\u7f51\u7edc\u7684\u8fdb\u7a0b\u4e86\uff0c\u7f51\u7edc\u4e2d\u7684\u8fdb\u7a0b\u901a\u4fe1\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6807\u5fd7\u4e0e\u5176\u5b83\u8fdb\u7a0b\u8fdb\u884c\u4ea4\u4e92 \u6ce8\u610f\uff1a \u00b6 \u6240\u8c13 \u8fdb\u7a0b \u6307\u7684\u662f\uff1a\u8fd0\u884c\u7684\u7a0b\u5e8f\u4ee5\u53ca\u8fd0\u884c\u65f6\u7528\u5230\u7684\u8d44\u6e90\u8fd9\u4e2a\u6574\u4f53\u79f0\u4e4b\u4e3a\u8fdb\u7a0b\uff08\u5728\u8bb2\u89e3\u591a\u4efb\u52a1\u7f16\u7a0b\u65f6\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\uff09 \u6240\u8c13 \u8fdb\u7a0b\u95f4\u901a\u4fe1 \u6307\u7684\u662f\uff1a\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab \u540e\u9762\u8bfe\u7a0b\u4e2d\u4f1a\u8be6\u7ec6\u8bf4\u5230\uff0c\u50cf\u7f51\u7edc\u5c42\u7b49\u77e5\u8bc6\uff0c\u4e0d\u8981\u7740\u6025 2. \u4ec0\u4e48\u662fsocket \u00b6 socket(\u7b80\u79f0 \u5957\u63a5\u5b57 ) \u662f\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5b83\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u4e2a\u4e3b\u8981\u4e0d\u540c\u662f\uff1a \u5b83\u80fd\u5b9e\u73b0\u4e0d\u540c\u4e3b\u673a\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u6211\u4eec\u7f51\u7edc\u4e0a\u5404\u79cd\u5404\u6837\u7684\u670d\u52a1\u5927\u591a\u90fd\u662f\u57fa\u4e8e Socket \u6765\u5b8c\u6210\u901a\u4fe1\u7684 \u4f8b\u5982\u6211\u4eec\u6bcf\u5929\u6d4f\u89c8\u7f51\u9875\u3001QQ \u804a\u5929\u3001\u6536\u53d1 email \u7b49\u7b49 3. \u521b\u5efasocket \u00b6 \u5728 Python \u4e2d \u4f7f\u7528socket \u6a21\u5757\u7684\u51fd\u6570 socket \u5c31\u53ef\u4ee5\u5b8c\u6210\uff1a import socket socket . socket ( AddressFamily , Type ) \u8bf4\u660e\uff1a \u00b6 \u51fd\u6570 socket.socket \u521b\u5efa\u4e00\u4e2a socket\uff0c\u8be5\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\uff1a Address Family\uff1a\u53ef\u4ee5\u9009\u62e9 AF_INET\uff08\u7528\u4e8e Internet \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff09 \u6216\u8005 AF_UNIX\uff08\u7528\u4e8e\u540c\u4e00\u53f0\u673a\u5668\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff09,\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5e38\u7528AF_INET Type\uff1a\u5957\u63a5\u5b57\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f SOCK_STREAM\uff08\u6d41\u5f0f\u5957\u63a5\u5b57\uff0c\u4e3b\u8981\u7528\u4e8e TCP \u534f\u8bae\uff09\u6216\u8005 SOCK_DGRAM\uff08\u6570\u636e\u62a5\u5957\u63a5\u5b57\uff0c\u4e3b\u8981\u7528\u4e8e UDP \u534f\u8bae\uff09 \u521b\u5efa\u4e00\u4e2atcp socket\uff08tcp\u5957\u63a5\u5b57\uff09 import socket # \u521b\u5efatcp\u7684\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # ...\u8fd9\u91cc\u662f\u4f7f\u7528\u5957\u63a5\u5b57\u7684\u529f\u80fd\uff08\u7701\u7565\uff09... # \u4e0d\u7528\u7684\u65f6\u5019\uff0c\u5173\u95ed\u5957\u63a5\u5b57 s . close () \u521b\u5efa\u4e00\u4e2audp socket\uff08udp\u5957\u63a5\u5b57\uff09 import socket # \u521b\u5efaudp\u7684\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) # ...\u8fd9\u91cc\u662f\u4f7f\u7528\u5957\u63a5\u5b57\u7684\u529f\u80fd\uff08\u7701\u7565\uff09... # \u4e0d\u7528\u7684\u65f6\u5019\uff0c\u5173\u95ed\u5957\u63a5\u5b57 s . close () \u8bf4\u660e \u00b6 \u5957\u63a5\u5b57\u4f7f\u7528\u6d41\u7a0b \u4e0e \u6587\u4ef6\u7684\u4f7f\u7528\u6d41\u7a0b\u5f88\u7c7b\u4f3c \u521b\u5efa\u5957\u63a5\u5b57 \u4f7f\u7528\u5957\u63a5\u5b57\u6536/\u53d1\u6570\u636e \u5173\u95ed\u5957\u63a5\u5b57 3.6udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u3001\u63a5\u6536\u6570\u636e \u00b6 1. udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u6570\u636e \u00b6 \u521b\u5efa\u4e00\u4e2a\u57fa\u4e8eudp\u7684\u7f51\u7edc\u7a0b\u5e8f\u6d41\u7a0b\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u521b\u5efa\u5ba2\u6237\u7aef\u5957\u63a5\u5b57 \u53d1\u9001/\u63a5\u6536\u6570\u636e \u5173\u95ed\u5957\u63a5\u5b57 \u4ee3\u7801\u5982\u4e0b\uff1a #coding=utf-8 from socket import * # 1\\. \u521b\u5efaudp\u5957\u63a5\u5b57 udp_socket = socket ( AF_INET , SOCK_DGRAM ) # 2\\. \u51c6\u5907\u63a5\u6536\u65b9\u7684\u5730\u5740 # '192.168.1.103'\u8868\u793a\u76ee\u7684ip\u5730\u5740 # 8080\u8868\u793a\u76ee\u7684\u7aef\u53e3 dest_addr = ( '192.168.1.103' , 8080 ) # \u6ce8\u610f \u662f\u5143\u7ec4\uff0cip\u662f\u5b57\u7b26\u4e32\uff0c\u7aef\u53e3\u662f\u6570\u5b57 # 3\\. \u4ece\u952e\u76d8\u83b7\u53d6\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 4\\. \u53d1\u9001\u6570\u636e\u5230\u6307\u5b9a\u7684\u7535\u8111\u4e0a\u7684\u6307\u5b9a\u7a0b\u5e8f\u4e2d udp_socket . sendto ( send_data . encode ( 'utf-8' ), dest_addr ) # 5\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket . close () \u8fd0\u884c\u73b0\u8c61\uff1a \u5728Ubuntu\u4e2d\u8fd0\u884c\u811a\u672c\uff1a \u5728windows\u4e2d\u8fd0\u884c\u201c\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u201d\uff1a 2. udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u3001\u63a5\u6536\u6570\u636e \u00b6 #coding=utf-8 from socket import * # 1\\. \u521b\u5efaudp\u5957\u63a5\u5b57 udp_socket = socket ( AF_INET , SOCK_DGRAM ) # 2\\. \u51c6\u5907\u63a5\u6536\u65b9\u7684\u5730\u5740 dest_addr = ( '192.168.236.129' , 8080 ) # 3\\. \u4ece\u952e\u76d8\u83b7\u53d6\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 4\\. \u53d1\u9001\u6570\u636e\u5230\u6307\u5b9a\u7684\u7535\u8111\u4e0a udp_socket . sendto ( send_data . encode ( 'utf-8' ), dest_addr ) # 5\\. \u7b49\u5f85\u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e recv_data = udp_socket . recvfrom ( 1024 ) # 1024\u8868\u793a\u672c\u6b21\u63a5\u6536\u7684\u6700\u5927\u5b57\u8282\u6570 # 6\\. \u663e\u793a\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e # \u63a5\u6536\u5230\u7684\u6570\u636erecv_data\u662f\u4e00\u4e2a\u5143\u7ec4 # \u7b2c1\u4e2a\u5143\u7d20\u662f\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e # \u7b2c2\u4e2a\u5143\u7d20\u662f\u5bf9\u65b9\u7684ip\u548c\u7aef\u53e3 print ( recv_data [ 0 ] . decode ( 'gbk' )) print ( recv_data [ 1 ]) # 7\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket . close () python\u811a\u672c\uff1a \u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u622a\u56fe\uff1a 3.7python3\u7f16\u7801\u8f6c\u6362 \u00b6 str -> bytes : encode\u7f16\u7801 bytes -> str : decode\u89e3\u7801 \u5b57\u7b26\u4e32\u901a\u8fc7\u7f16\u7801\u6210\u4e3a\u5b57\u8282\u7801\uff0c\u5b57\u8282\u7801\u901a\u8fc7\u89e3\u7801\u6210\u4e3a\u5b57\u7b26\u4e32\u3002 >>> text = '\u6211\u662f\u6587\u672c' >>> text '\u6211\u662f\u6587\u672c' >>> print ( text ) \u6211\u662f\u6587\u672c >>> bytesText = text . encode () >>> bytesText b ' \\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe6\\x96\\x87\\xe6\\x9c\\xac ' >>> print ( bytesText ) b ' \\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe6\\x96\\x87\\xe6\\x9c\\xac ' >>> type ( text ) < class ' str '> >>> type ( bytesText ) < class ' bytes '> >>> textDecode = bytesText . decode () >>> textDecode '\u6211\u662f\u6587\u672c' >>> print ( textDecode ) \u6211\u662f\u6587\u672c \u5176\u4e2ddecode()\u4e0eencode()\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\uff0c\u5176\u58f0\u660e\u5206\u522b\u4e3a: bytes . decode ( encoding = \"utf-8\" , errors = \"strict\" ) str . encode ( encoding = \"utf-8\" , errors = \"strict\" ) \u5176\u4e2d\u7684encoding\u662f\u6307\u5728\u89e3\u7801\u7f16\u7801\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u7f16\u7801(\u6b64\u5904\u6307\u201c\u7f16\u7801\u65b9\u6848\u201d\u662f\u540d\u8bcd)\uff0cerrors\u662f\u6307\u9519\u8bef\u7684\u5904\u7406\u65b9\u6848\u3002 \u8be6\u7ec6\u7684\u53ef\u4ee5\u53c2\u7167\u5b98\u65b9\u6587\u6863\uff1a str.encode() bytes.decode() udp\u7ed1\u5b9a\u4fe1\u606f \u00b6 1. udp\u7f51\u7edc\u7a0b\u5e8f-\u7aef\u53e3\u95ee\u9898 \u00b6 \u4f1a\u53d8\u7684\u7aef\u53e3\u53f7 \u91cd\u65b0\u8fd0\u884c\u591a\u6b21\u811a\u672c\uff0c\u7136\u540e\u5728\u201c\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u201d\u4e2d\uff0c\u770b\u5230\u7684\u73b0\u8c61\u5982\u4e0b\uff1a \u8bf4\u660e\uff1a \u6bcf\u91cd\u65b0\u8fd0\u884c\u4e00\u6b21\u7f51\u7edc\u7a0b\u5e8f\uff0c\u4e0a\u56fe\u4e2d\u7ea2\u5708\u4e2d\u7684\u6570\u5b57\uff0c\u4e0d\u4e00\u6837\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u8fd9\u4e2a\u6570\u5b57\u6807\u8bc6\u8fd9\u4e2a\u7f51\u7edc\u7a0b\u5e8f\uff0c\u5f53\u91cd\u65b0\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u786e\u5b9a\u5230\u5e95\u7528\u54ea\u4e2a\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u968f\u673a\u5206\u914d \u8bb0\u4f4f\u4e00\u70b9\uff1a\u8fd9\u4e2a\u7f51\u7edc\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u5c31\u552f\u4e00\u6807\u8bc6\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6240\u4ee5\u5982\u679c\u5176\u4ed6\u7535\u8111\u4e0a\u7684\u7f51\u7edc\u7a0b\u5e8f\u5982\u679c\u60f3\u8981\u5411\u6b64\u7a0b\u5e8f\u53d1\u9001\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5411\u8fd9\u4e2a\u6570\u5b57\uff08\u5373\u7aef\u53e3\uff09\u6807\u8bc6\u7684\u7a0b\u5e8f\u53d1\u9001\u5373\u53ef 2. udp\u7ed1\u5b9a\u4fe1\u606f \u00b6 <1>. \u7ed1\u5b9a\u4fe1\u606f \u00b6 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u53f0\u7535\u8111\u4e0a\u8fd0\u884c\u7684\u7f51\u7edc\u7a0b\u5e8f\u6709\u5f88\u591a\uff0c\u4e3a\u4e86\u4e0d\u4e0e\u5176\u4ed6\u7684\u7f51\u7edc\u7a0b\u5e8f\u5360\u7528\u540c\u4e00\u4e2a\u7aef\u53e3\u53f7\uff0c\u5f80\u5f80\u5728\u7f16\u7a0b\u4e2d\uff0cudp\u7684\u7aef\u53e3\u53f7\u4e00\u822c\u4e0d\u7ed1\u5b9a \u4f46\u662f\u5982\u679c\u9700\u8981\u505a\u6210\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\u7684\u8bdd\uff0c\u662f\u9700\u8981\u7ed1\u5b9a\u7684\uff0c\u60f3\u60f3\u770b\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u62a5\u8b66\u7535\u8bdd\u6bcf\u5929\u90fd\u5728\u53d8\uff0c\u60f3\u5fc5\u4e16\u754c\u5c31\u4f1a\u4e71\u4e86\uff0c\u6240\u4ee5\u4e00\u822c\u670d\u52a1\u6027\u7684\u7a0b\u5e8f\uff0c\u5f80\u5f80\u9700\u8981\u4e00\u4e2a\u56fa\u5b9a\u7684\u7aef\u53e3\u53f7\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7aef\u53e3\u7ed1\u5b9a <2>. \u7ed1\u5b9a\u793a\u4f8b \u00b6 #coding=utf-8 from socket import * # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket(AF_INET, SOCK_DGRAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u7edc\u7a0b\u5e8f\u4e0d\u7ed1\u5b9a\uff0c\u5219\u7cfb\u7edf\u4f1a\u968f\u673a\u5206\u914d local_addr = ('', 7788) # ip\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0cip\u4e00\u822c\u4e0d\u7528\u5199\uff0c\u8868\u793a\u672c\u673a\u7684\u4efb\u4f55\u4e00\u4e2aip udp_socket.bind(local_addr) # 3\\. \u7b49\u5f85\u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e recv_data = udp_socket.recvfrom(1024) # 1024\u8868\u793a\u672c\u6b21\u63a5\u6536\u7684\u6700\u5927\u5b57\u8282\u6570 # 4\\. \u663e\u793a\u63a5\u6536\u5230\u7684\u6570\u636e print(recv_data[0].decode('gbk')) # 5\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket.close() \u8fd0\u884c\u7ed3\u679c\uff1a \u00b6 <3>. \u603b\u7ed3 \u00b6 \u4e00\u4e2audp\u7f51\u7edc\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4e0d\u7ed1\u5b9a\uff0c\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u968f\u673a\u8fdb\u884c\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\uff0c\u5982\u679c\u91cd\u65b0\u8fd0\u884c\u6b64\u7a0b\u5e8f\u7aef\u53e3\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316 \u4e00\u4e2audp\u7f51\u7edc\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u4fe1\u606f\uff08ip\u5730\u5740\uff0c\u7aef\u53e3\u53f7\uff09\uff0c\u5982\u679c\u7ed1\u5b9a\u6210\u529f\uff0c\u90a3\u4e48\u64cd\u4f5c\u7cfb\u7edf\u7528\u8fd9\u4e2a\u7aef\u53e3\u53f7\u6765\u8fdb\u884c\u533a\u522b\u6536\u5230\u7684\u7f51\u7edc\u6570\u636e\u662f\u5426\u662f\u6b64\u8fdb\u7a0b\u7684 3.9\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b(\u7b80\u5355\u7248) \u00b6 \u8bf4\u660e \u00b6 \u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b\u4e2d\uff0c\u4e4b\u6240\u9700\u8981ip\u3001port\u7b49\uff0c\u5c31\u662f\u4e3a\u4e86\u80fd\u591f\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u901a\u4fe1\u8fc7\u7a0b\u8fdb\u884c\u4efb\u52a1\u5212\u5206\uff0c\u4ece\u800c\u4fdd\u8bc1\u6570\u636e\u51c6\u786e\u65e0\u8bef\u7684\u4f20\u9012 3.10\u5e94\u7528\uff1audp\u804a\u5929\u5668 \u00b6 \u8bf4\u660e \u5728\u4e00\u4e2a\u7535\u8111\u4e2d\u7f16\u51991\u4e2a\u7a0b\u5e8f\uff0c\u67092\u4e2a\u529f\u80fd 1.\u83b7\u53d6\u952e\u76d8\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5bf9\u65b9 2.\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a \u5e76\u4e14\u529f\u80fd\u6570\u636e\u8fdb\u884c\u9009\u62e9\u4ee5\u4e0a\u76842\u4e2a\u529f\u80fd\u8c03\u7528 \u8981\u6c42 \u00b6 \u5b9e\u73b0\u4e0a\u8ff0\u7a0b\u5e8f \u53c2\u8003\u4ee3\u7801: import socket def send_msg ( udp_socket ): \"\"\"\u83b7\u53d6\u952e\u76d8\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5bf9\u65b9\"\"\" # 1. \u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e msg = input ( \" \\n \u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 2. \u8f93\u5165\u5bf9\u65b9\u7684ip\u5730\u5740 dest_ip = input ( \" \\n \u8bf7\u8f93\u5165\u5bf9\u65b9\u7684ip\u5730\u5740:\" ) # 3. \u8f93\u5165\u5bf9\u65b9\u7684port dest_port = int ( input ( \" \\n \u8bf7\u8f93\u5165\u5bf9\u65b9\u7684port:\" )) # 4. \u53d1\u9001\u6570\u636e udp_socket . sendto ( msg . encode ( \"utf-8\" ), ( dest_ip , dest_port )) def recv_msg ( udp_socket ): \"\"\"\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a\"\"\" # 1. \u63a5\u6536\u6570\u636e recv_msg = udp_socket . recvfrom ( 1024 ) # 2. \u89e3\u7801 recv_ip = recv_msg [ 1 ] recv_msg = recv_msg [ 0 ] . decode ( \"utf-8\" ) # 3. \u663e\u793a\u63a5\u6536\u5230\u7684\u6570\u636e print ( \">>> %s : %s \" % ( str ( recv_ip ), recv_msg )) def main (): # 1. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f udp_socket . bind (( \"\" , 7890 )) while True : # 3. \u9009\u62e9\u529f\u80fd print ( \"=\" * 30 ) print ( \"1:\u53d1\u9001\u6d88\u606f\" ) print ( \"2:\u63a5\u6536\u6d88\u606f\" ) print ( \"=\" * 30 ) op_num = input ( \"\u8bf7\u8f93\u5165\u8981\u64cd\u4f5c\u7684\u529f\u80fd\u5e8f\u53f7:\" ) # 4. \u6839\u636e\u9009\u62e9\u8c03\u7528\u76f8\u5e94\u7684\u51fd\u6570 if op_num == \"1\" : send_msg ( udp_socket ) elif op_num == \"2\" : recv_msg ( udp_socket ) else : print ( \"\u8f93\u5165\u6709\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165...\" ) if __name__ == \"__main__\" : main () \u60f3\u4e00\u60f3 \u4ee5\u4e0a\u7684\u7a0b\u5e8f\u5982\u679c\u9009\u62e9\u4e86\u63a5\u6536\u6570\u636e\u529f\u80fd\uff0c\u5e76\u4e14\u6b64\u65f6\u6ca1\u6709\u6570\u636e\uff0c\u7a0b\u5e8f\u4f1a\u5835\u585e\u5728\u8fd9\uff0c\u90a3\u4e48\u600e\u6837\u624d\u80fd\u8ba9\u8fd9\u4e2a\u7a0b\u5e8f\u6536\u53d1\u6570\u636e\u4e00\u8d77\u8fdb\u884c\u5462\uff1f\u522b\u7740\u6025\uff0c\u5b66\u4e60\u5b8c\u591a\u4efb\u52a1\u77e5\u8bc6\u4e4b\u540e\u5c31\u89e3\u51b3\u4e86O(\u2229_\u2229)O...","title":"001 \u7f51\u7edcudp"},{"location":"python-web/001-\u7f51\u7edcudp/#31","text":"","title":"3.1\u7f51\u7edc\u901a\u4fe1\u6982\u8ff0"},{"location":"python-web/001-\u7f51\u7edcudp/#146","text":"","title":"1. \u4ec0\u4e48\u662f\u7f51\u7edc"},{"location":"python-web/001-\u7f51\u7edcudp/#_1","text":"\u7f51\u7edc\u5c31\u662f\u4e00\u79cd\u8f85\u52a9\u53cc\u65b9\u6216\u8005\u591a\u65b9\u80fd\u591f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u5de5\u5177 \u5982\u679c\u6ca1\u6709\u7f51\u7edc\u53ef\u60f3 \u5355\u673a \u7684\u4e16\u754c\u662f\u591a\u4e48\u7684\u5b64\u5355","title":"\u8bf4\u660e"},{"location":"python-web/001-\u7f51\u7edcudp/#_2","text":"","title":"\u5355\u673a\u6e38\u620f\uff08\u4e0d\u80fd\u548c\u8fdc\u5728\u4ed6\u4e61\u7684\u670b\u53cb\u4e00\u8d77\u73a9\uff09"},{"location":"python-web/001-\u7f51\u7edcudp/#246","text":"\u5c31\u662f\u4e3a\u4e86\u8054\u901a\u591a\u65b9\u7136\u540e\u8fdb\u884c\u901a\u4fe1\u7528\u7684\uff0c\u5373\u628a\u6570\u636e\u4ece\u4e00\u65b9\u4f20\u9012\u7ed9\u53e6\u5916\u4e00\u65b9 \u524d\u9762\u7684\u5b66\u4e60\u7f16\u5199\u7684\u7a0b\u5e8f\u90fd\u662f\u5355\u673a\u7684\uff0c\u5373\u4e0d\u80fd\u548c\u5176\u4ed6\u7535\u8111\u4e0a\u7684\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1 \u4e3a\u4e86\u8ba9\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u4e4b\u95f4\u80fd\u591f\u4e92\u76f8\u4f20\u9012\u6570\u636e\uff0c\u5c31\u9700\u8981\u501f\u52a9\u7f51\u7edc\u7684\u529f\u80fd","title":"2. \u4f7f\u7528\u7f51\u7edc\u7684\u76ee\u7684"},{"location":"python-web/001-\u7f51\u7edcudp/#_3","text":"\u4f7f\u7528\u7f51\u7edc\u80fd\u591f\u628a\u591a\u65b9\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u4f20\u9012 \u6240\u8c13\u7684\u7f51\u7edc\u7f16\u7a0b\u5c31\u662f\uff0c\u8ba9\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u7684\u8f6f\u4ef6\u80fd\u591f\u8fdb\u884c\u6570\u636e\u4f20\u9012\uff0c\u5373\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1","title":"\u5c0f\u603b\u7ed3"},{"location":"python-web/001-\u7f51\u7edcudp/#32ip","text":"","title":"3.2ip\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#146_1","text":"\u5730\u5740\u5c31\u662f\u7528\u6765\u6807\u8bb0\u5730\u70b9\u7684","title":"1. \u4ec0\u4e48\u662f\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#246-ip","text":"","title":"2. ip\u5730\u5740\u7684\u4f5c\u7528"},{"location":"python-web/001-\u7f51\u7edcudp/#ip19216811","text":"","title":"ip\u5730\u5740\uff1a\u7528\u6765\u5728\u7f51\u7edc\u4e2d\u6807\u8bb0\u4e00\u53f0\u7535\u8111\uff0c\u6bd4\u5982192.168.1.1\uff1b\u5728\u672c\u5730\u5c40\u57df\u7f51\u4e0a\u662f\u552f\u4e00\u7684\u3002"},{"location":"python-web/001-\u7f51\u7edcudp/#346-ip","text":"\u6bcf\u4e00\u4e2aIP\u5730\u5740\u5305\u62ec\u4e24\u90e8\u5206\uff1a\u7f51\u7edc\u5730\u5740\u548c\u4e3b\u673a\u5730\u5740","title":"3. ip\u5730\u5740\u7684\u5206\u7c7b\uff08\u4e86\u89e3\uff09"},{"location":"python-web/001-\u7f51\u7edcudp/#31-aip","text":"\u4e00\u4e2aA\u7c7bIP\u5730\u5740\u75311\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c3\u5b57\u8282\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c0\u201d\uff0c \u5730\u5740\u8303\u56f41.0.0.1-126.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a00000001 00000000 00000000 00000001 - 01111110 11111111 11111111 11111110 \u53ef\u7528\u7684A\u7c7b\u7f51\u7edc\u6709126\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb31677214\u4e2a\u4e3b\u673a","title":"3.1 A\u7c7bIP\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#32-bip","text":"\u4e00\u4e2aB\u7c7bIP\u5730\u5740\u75312\u4e2a\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c2\u4e2a\u5b57\u8282\u7684\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c10\u201d\uff0c \u5730\u5740\u8303\u56f4128.1.0.1-191.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a10000000 00000001 00000000 00000001 - 10111111 11111111 11111111 11111110 \u53ef\u7528\u7684B\u7c7b\u7f51\u7edc\u670916384\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb365534\u4e3b\u673a","title":"3.2 B\u7c7bIP\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#33-cip","text":"\u4e00\u4e2aC\u7c7bIP\u5730\u5740\u75313\u5b57\u8282\u7684\u7f51\u7edc\u5730\u5740\u548c1\u5b57\u8282\u7684\u4e3b\u673a\u5730\u5740\u7ec4\u6210\uff0c\u7f51\u7edc\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u5fc5\u987b\u662f\u201c110\u201d \u8303\u56f4192.0.1.1-223.255.255.254 \u4e8c\u8fdb\u5236\u8868\u793a\u4e3a: 11000000 00000000 00000001 00000001 - 11011111 11111111 11111110 11111110 C\u7c7b\u7f51\u7edc\u53ef\u8fbe2097152\u4e2a\uff0c\u6bcf\u4e2a\u7f51\u7edc\u80fd\u5bb9\u7eb3254\u4e2a\u4e3b\u673a","title":"3.3 C\u7c7bIP\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#34-d","text":"D\u7c7bIP\u5730\u5740\u7b2c\u4e00\u4e2a\u5b57\u8282\u4ee5\u201c1110\u201d\u5f00\u59cb\uff0c\u5b83\u662f\u4e00\u4e2a\u4e13\u95e8\u4fdd\u7559\u7684\u5730\u5740\u3002 \u5b83\u5e76\u4e0d\u6307\u5411\u7279\u5b9a\u7684\u7f51\u7edc\uff0c\u76ee\u524d\u8fd9\u4e00\u7c7b\u5730\u5740\u88ab\u7528\u5728\u591a\u70b9\u5e7f\u64ad\uff08Multicast\uff09\u4e2d \u591a\u70b9\u5e7f\u64ad\u5730\u5740\u7528\u6765\u4e00\u6b21\u5bfb\u5740\u4e00\u7ec4\u8ba1\u7b97\u673a s \u5730\u5740\u8303\u56f4224.0.0.1-239.255.255.254","title":"3.4 D\u7c7b\u5730\u5740\u7528\u4e8e\u591a\u70b9\u5e7f\u64ad"},{"location":"python-web/001-\u7f51\u7edcudp/#35-eip","text":"\u4ee5\u201c1111\u201d\u5f00\u59cb\uff0c\u4e3a\u5c06\u6765\u4f7f\u7528\u4fdd\u7559 E\u7c7b\u5730\u5740\u4fdd\u7559\uff0c\u4ec5\u4f5c\u5b9e\u9a8c\u548c\u5f00\u53d1\u7528","title":"3.5 E\u7c7bIP\u5730\u5740"},{"location":"python-web/001-\u7f51\u7edcudp/#36-ip","text":"\u5728\u8fd9\u4e48\u591a\u7f51\u7edcIP\u4e2d\uff0c\u56fd\u9645\u89c4\u5b9a\u6709\u4e00\u90e8\u5206IP\u5730\u5740\u662f\u7528\u4e8e\u6211\u4eec\u7684\u5c40\u57df\u7f51\u4f7f\u7528\uff0c\u4e5f\u5c31 \u662f\u5c5e\u4e8e\u79c1\u7f51IP\uff0c\u4e0d\u5728\u516c\u7f51\u4e2d\u4f7f\u7528\u7684\uff0c\u5b83\u4eec\u7684\u8303\u56f4\u662f\uff1a 10.0.0.0\uff5e10.255.255.255 172.16.0.0\uff5e172.31.255.255 192.168.0.0\uff5e192.168.255.255","title":"3.6 \u79c1\u6709ip"},{"location":"python-web/001-\u7f51\u7edcudp/#37","text":"IP\u5730\u5740127\uff0e0\uff0e0\uff0e1~127\uff0e255\uff0e255\uff0e255\u7528\u4e8e\u56de\u8def\u6d4b\u8bd5\uff0c \u5982\uff1a127.0.0.1\u53ef\u4ee5\u4ee3\u8868\u672c\u673aIP\u5730\u5740\uff0c\u7528 http://127.0.0.1 \u5c31\u53ef\u4ee5\u6d4b\u8bd5\u672c\u673a\u4e2d\u914d\u7f6e\u7684Web\u670d\u52a1\u5668\u3002","title":"3.7 \u6ce8\u610f"},{"location":"python-web/001-\u7f51\u7edcudp/#33linuxping-ifconfig","text":"","title":"3.3Linux\u547d\u4ee4(ping, ifconfig)"},{"location":"python-web/001-\u7f51\u7edcudp/#ifconfig","text":"\u5982\u679c\uff0c\u6211\u4eec\u53ea\u662f\u6572\uff1aifconfig\uff0c\u5b83\u4f1a\u663e\u793a\u6240\u6709\u7f51\u5361\u7684\u4fe1\u606f\uff1a","title":"\u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f\uff1aifconfig"},{"location":"python-web/001-\u7f51\u7edcudp/#ping","text":"\u901a\u5e38\u7528ping\u6765\u68c0\u6d4b\u7f51\u7edc\u662f\u5426\u6b63\u5e38","title":"\u6d4b\u8bd5\u8fdc\u7a0b\u4e3b\u673a\u8fde\u901a\u6027\uff1aping"},{"location":"python-web/001-\u7f51\u7edcudp/#34","text":"","title":"3.4\u7aef\u53e3"},{"location":"python-web/001-\u7f51\u7edcudp/#146_2","text":"\u7aef\u53e3\u5c31\u597d\u4e00\u4e2a\u623f\u5b50\u7684\u95e8\uff0c\u662f\u51fa\u5165\u8fd9\u95f4\u623f\u5b50\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002 \u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u6536\u53d1\u7f51\u7edc\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6709\u8fd9\u6837\u7684\u7aef\u53e3 \u5728linux\u7cfb\u7edf\u4e2d\uff0c\u7aef\u53e3\u53ef\u4ee5\u670965536\uff082\u768416\u6b21\u65b9\uff09\u4e2a\u4e4b\u591a\uff01 \u65e2\u7136\u6709\u8fd9\u4e48\u591a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7edf\u4e00\u7ba1\u7406\uff0c\u6240\u4ee5\u8fdb\u884c\u4e86\u7f16\u53f7\uff0c\u8fd9\u5c31\u662f \u7aef\u53e3\u53f7","title":"1. \u4ec0\u4e48\u662f\u7aef\u53e3"},{"location":"python-web/001-\u7f51\u7edcudp/#246_1","text":"\u7aef\u53e3\u662f\u901a\u8fc7\u7aef\u53e3\u53f7\u6765\u6807\u8bb0\u7684\uff0c\u7aef\u53e3\u53f7\u53ea\u6709\u6574\u6570\uff0c\u8303\u56f4\u662f\u4ece0\u523065535 \u6ce8\u610f\uff1a\u7aef\u53e3\u6570\u4e0d\u4e00\u6837\u7684*nix\u7cfb\u7edf\u4e0d\u4e00\u6837\uff0c\u8fd8\u53ef\u4ee5\u624b\u52a8\u4fee\u6539","title":"2. \u7aef\u53e3\u53f7"},{"location":"python-web/001-\u7f51\u7edcudp/#346","text":"\u7aef\u53e3\u53f7\u4e0d\u662f\u968f\u610f\u4f7f\u7528\u7684\uff0c\u800c\u662f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5b9a\u8fdb\u884c\u5206\u914d\u3002 \u7aef\u53e3\u7684\u5206\u7c7b\u6807\u51c6\u6709\u597d\u51e0\u79cd\uff0c\u6211\u4eec\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u53ea\u4ecb\u7ecd\u4e00\u4e0b\u77e5\u540d\u7aef\u53e3\u548c\u52a8\u6001\u7aef\u53e3","title":"3. \u7aef\u53e3\u662f\u600e\u6837\u5206\u914d\u7684"},{"location":"python-web/001-\u7f51\u7edcudp/#31-well-known-ports","text":"\u77e5\u540d\u7aef\u53e3\u662f\u4f17\u6240\u5468\u77e5\u7684\u7aef\u53e3\u53f7\uff0c\u8303\u56f4\u4ece0\u52301023 80\u7aef\u53e3\u5206\u914d\u7ed9HTTP\u670d\u52a1 21\u7aef\u53e3\u5206\u914d\u7ed9FTP\u670d\u52a1 \u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4e00\u4e9b\u5e38\u7528\u7684\u529f\u80fd\u4f7f\u7528\u7684\u53f7\u7801\u662f\u4f30\u8ba1\u7684\uff0c\u597d\u6bd4 \u7535\u8bdd\u53f7\u7801110\u300110086\u300110010\u4e00\u6837 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u77e5\u540d\u7aef\u53e3\u7684\u9700\u8981\u6709root\u6743\u9650","title":"3.1 \u77e5\u540d\u7aef\u53e3\uff08Well Known Ports\uff09"},{"location":"python-web/001-\u7f51\u7edcudp/#32-dynamic-ports","text":"\u52a8\u6001\u7aef\u53e3\u7684\u8303\u56f4\u662f\u4ece1024\u523065535 \u4e4b\u6240\u4ee5\u79f0\u4e3a\u52a8\u6001\u7aef\u53e3\uff0c\u662f\u56e0\u4e3a\u5b83\u4e00\u822c\u4e0d\u56fa\u5b9a\u5206\u914d\u67d0\u79cd\u670d\u52a1\uff0c\u800c\u662f\u52a8\u6001\u5206\u914d\u3002 \u52a8\u6001\u5206\u914d\u662f\u6307\u5f53\u4e00\u4e2a\u7cfb\u7edf\u7a0b\u5e8f\u6216\u5e94\u7528\u7a0b\u5e8f\u7a0b\u5e8f\u9700\u8981\u7f51\u7edc\u901a\u4fe1\u65f6\uff0c\u5b83\u5411\u4e3b\u673a\u7533\u8bf7\u4e00\u4e2a\u7aef\u53e3\uff0c\u4e3b\u673a\u4ece\u53ef\u7528\u7684\u7aef\u53e3\u53f7\u4e2d\u5206\u914d\u4e00\u4e2a\u4f9b\u5b83\u4f7f\u7528\u3002 \u5f53\u8fd9\u4e2a\u7a0b\u5e8f\u5173\u95ed\u65f6\uff0c\u540c\u65f6\u4e5f\u5c31\u91ca\u653e\u4e86\u6240\u5360\u7528\u7684\u7aef\u53e3\u53f7","title":"3.2 \u52a8\u6001\u7aef\u53e3\uff08Dynamic Ports\uff09"},{"location":"python-web/001-\u7f51\u7edcudp/#33","text":"\u7528\u201cnetstat \uff0dan\u201d\u67e5\u770b\u7aef\u53e3\u72b6\u6001 lsof -i [tcp/udp]:2425","title":"3.3 \u600e\u6837\u67e5\u770b\u7aef\u53e3 \uff1f"},{"location":"python-web/001-\u7f51\u7edcudp/#446","text":"\u7aef\u53e3\u6709\u4ec0\u4e48\u7528\u5462 \uff1f \u6211\u4eec\u77e5\u9053\uff0c\u4e00\u53f0\u62e5\u6709IP\u5730\u5740\u7684\u4e3b\u673a\u53ef\u4ee5\u63d0\u4f9b\u8bb8\u591a\u670d\u52a1\uff0c\u6bd4\u5982HTTP\uff08\u4e07\u7ef4\u7f51\u670d\u52a1\uff09\u3001FTP\uff08\u6587\u4ef6\u4f20\u8f93\uff09\u3001SMTP\uff08\u7535\u5b50\u90ae\u4ef6\uff09\u7b49\uff0c\u8fd9\u4e9b\u670d\u52a1\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc71\u4e2aIP\u5730\u5740\u6765\u5b9e\u73b0\u3002\u90a3\u4e48\uff0c\u4e3b\u673a\u662f\u600e\u6837\u533a\u5206\u4e0d\u540c\u7684\u7f51\u7edc\u670d\u52a1\u5462\uff1f\u663e\u7136\u4e0d\u80fd\u53ea\u9760IP\u5730\u5740\uff0c\u56e0\u4e3aIP\u5730\u5740\u4e0e\u7f51\u7edc\u670d\u52a1\u7684\u5173\u7cfb\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u201cIP\u5730\u5740+\u7aef\u53e3\u53f7\u201d\u6765\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\u7684\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7aef\u53e3\u5e76\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u6bd4\u5982\u4f60\u7684\u7535\u8111\u4f5c\u4e3a\u5ba2\u6237\u673a\u8bbf\u95ee\u4e00\u53f0WWW\u670d\u52a1\u5668\u65f6\uff0cWWW\u670d\u52a1\u5668\u4f7f\u7528\u201c80\u201d\u7aef\u53e3\u4e0e\u4f60\u7684\u7535\u8111\u901a\u4fe1\uff0c\u4f46\u4f60\u7684\u7535\u8111\u5219\u53ef\u80fd\u4f7f\u7528\u201c3457\u201d\u8fd9\u6837\u7684\u7aef\u53e3\u3002","title":"4. \u5c0f\u603b\u7ed3"},{"location":"python-web/001-\u7f51\u7edcudp/#35socket","text":"","title":"3.5socket\u7b80\u4ecb"},{"location":"python-web/001-\u7f51\u7edcudp/#146_3","text":"\u9996\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5426\u5219\u901a\u4fe1\u65e0\u4ece\u8c08\u8d77\uff01 \u57281\u53f0\u7535\u8111\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u53f7\uff08PID\uff09\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u4e2d\u8fd9\u662f\u884c\u4e0d\u901a\u7684\u3002 \u5176\u5b9eTCP/IP\u534f\u8bae\u65cf\u5df2\u7ecf\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7f51\u7edc\u5c42\u7684\u201cip\u5730\u5740\u201d\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u7f51\u7edc\u4e2d\u7684\u4e3b\u673a\uff0c\u800c\u4f20\u8f93\u5c42\u7684\u201c\u534f\u8bae+\u7aef\u53e3\u201d\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u4e3b\u673a\u4e2d\u7684\u5e94\u7528\u8fdb\u7a0b\uff08\u8fdb\u7a0b\uff09\u3002 \u8fd9\u6837\u5229\u7528ip\u5730\u5740\uff0c\u534f\u8bae\uff0c\u7aef\u53e3\u5c31\u53ef\u4ee5\u6807\u8bc6\u7f51\u7edc\u7684\u8fdb\u7a0b\u4e86\uff0c\u7f51\u7edc\u4e2d\u7684\u8fdb\u7a0b\u901a\u4fe1\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6807\u5fd7\u4e0e\u5176\u5b83\u8fdb\u7a0b\u8fdb\u884c\u4ea4\u4e92","title":"1. \u4e0d\u540c\u7535\u8111\u4e0a\u7684\u8fdb\u7a0b\u4e4b\u95f4\u5982\u4f55\u901a\u4fe1"},{"location":"python-web/001-\u7f51\u7edcudp/#_4","text":"\u6240\u8c13 \u8fdb\u7a0b \u6307\u7684\u662f\uff1a\u8fd0\u884c\u7684\u7a0b\u5e8f\u4ee5\u53ca\u8fd0\u884c\u65f6\u7528\u5230\u7684\u8d44\u6e90\u8fd9\u4e2a\u6574\u4f53\u79f0\u4e4b\u4e3a\u8fdb\u7a0b\uff08\u5728\u8bb2\u89e3\u591a\u4efb\u52a1\u7f16\u7a0b\u65f6\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\uff09 \u6240\u8c13 \u8fdb\u7a0b\u95f4\u901a\u4fe1 \u6307\u7684\u662f\uff1a\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab \u540e\u9762\u8bfe\u7a0b\u4e2d\u4f1a\u8be6\u7ec6\u8bf4\u5230\uff0c\u50cf\u7f51\u7edc\u5c42\u7b49\u77e5\u8bc6\uff0c\u4e0d\u8981\u7740\u6025","title":"\u6ce8\u610f\uff1a"},{"location":"python-web/001-\u7f51\u7edcudp/#246-socket","text":"socket(\u7b80\u79f0 \u5957\u63a5\u5b57 ) \u662f\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5b83\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u4e2a\u4e3b\u8981\u4e0d\u540c\u662f\uff1a \u5b83\u80fd\u5b9e\u73b0\u4e0d\u540c\u4e3b\u673a\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u6211\u4eec\u7f51\u7edc\u4e0a\u5404\u79cd\u5404\u6837\u7684\u670d\u52a1\u5927\u591a\u90fd\u662f\u57fa\u4e8e Socket \u6765\u5b8c\u6210\u901a\u4fe1\u7684 \u4f8b\u5982\u6211\u4eec\u6bcf\u5929\u6d4f\u89c8\u7f51\u9875\u3001QQ \u804a\u5929\u3001\u6536\u53d1 email \u7b49\u7b49","title":"2. \u4ec0\u4e48\u662fsocket"},{"location":"python-web/001-\u7f51\u7edcudp/#3-socket","text":"\u5728 Python \u4e2d \u4f7f\u7528socket \u6a21\u5757\u7684\u51fd\u6570 socket \u5c31\u53ef\u4ee5\u5b8c\u6210\uff1a import socket socket . socket ( AddressFamily , Type )","title":"3.\u00a0\u521b\u5efasocket"},{"location":"python-web/001-\u7f51\u7edcudp/#_5","text":"\u51fd\u6570 socket.socket \u521b\u5efa\u4e00\u4e2a socket\uff0c\u8be5\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\uff1a Address Family\uff1a\u53ef\u4ee5\u9009\u62e9 AF_INET\uff08\u7528\u4e8e Internet \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff09 \u6216\u8005 AF_UNIX\uff08\u7528\u4e8e\u540c\u4e00\u53f0\u673a\u5668\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff09,\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5e38\u7528AF_INET Type\uff1a\u5957\u63a5\u5b57\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f SOCK_STREAM\uff08\u6d41\u5f0f\u5957\u63a5\u5b57\uff0c\u4e3b\u8981\u7528\u4e8e TCP \u534f\u8bae\uff09\u6216\u8005 SOCK_DGRAM\uff08\u6570\u636e\u62a5\u5957\u63a5\u5b57\uff0c\u4e3b\u8981\u7528\u4e8e UDP \u534f\u8bae\uff09 \u521b\u5efa\u4e00\u4e2atcp socket\uff08tcp\u5957\u63a5\u5b57\uff09 import socket # \u521b\u5efatcp\u7684\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # ...\u8fd9\u91cc\u662f\u4f7f\u7528\u5957\u63a5\u5b57\u7684\u529f\u80fd\uff08\u7701\u7565\uff09... # \u4e0d\u7528\u7684\u65f6\u5019\uff0c\u5173\u95ed\u5957\u63a5\u5b57 s . close () \u521b\u5efa\u4e00\u4e2audp socket\uff08udp\u5957\u63a5\u5b57\uff09 import socket # \u521b\u5efaudp\u7684\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) # ...\u8fd9\u91cc\u662f\u4f7f\u7528\u5957\u63a5\u5b57\u7684\u529f\u80fd\uff08\u7701\u7565\uff09... # \u4e0d\u7528\u7684\u65f6\u5019\uff0c\u5173\u95ed\u5957\u63a5\u5b57 s . close ()","title":"\u8bf4\u660e\uff1a"},{"location":"python-web/001-\u7f51\u7edcudp/#_6","text":"\u5957\u63a5\u5b57\u4f7f\u7528\u6d41\u7a0b \u4e0e \u6587\u4ef6\u7684\u4f7f\u7528\u6d41\u7a0b\u5f88\u7c7b\u4f3c \u521b\u5efa\u5957\u63a5\u5b57 \u4f7f\u7528\u5957\u63a5\u5b57\u6536/\u53d1\u6570\u636e \u5173\u95ed\u5957\u63a5\u5b57","title":"\u8bf4\u660e"},{"location":"python-web/001-\u7f51\u7edcudp/#36udp-","text":"","title":"3.6udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u3001\u63a5\u6536\u6570\u636e"},{"location":"python-web/001-\u7f51\u7edcudp/#146-udp-","text":"\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8eudp\u7684\u7f51\u7edc\u7a0b\u5e8f\u6d41\u7a0b\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u521b\u5efa\u5ba2\u6237\u7aef\u5957\u63a5\u5b57 \u53d1\u9001/\u63a5\u6536\u6570\u636e \u5173\u95ed\u5957\u63a5\u5b57 \u4ee3\u7801\u5982\u4e0b\uff1a #coding=utf-8 from socket import * # 1\\. \u521b\u5efaudp\u5957\u63a5\u5b57 udp_socket = socket ( AF_INET , SOCK_DGRAM ) # 2\\. \u51c6\u5907\u63a5\u6536\u65b9\u7684\u5730\u5740 # '192.168.1.103'\u8868\u793a\u76ee\u7684ip\u5730\u5740 # 8080\u8868\u793a\u76ee\u7684\u7aef\u53e3 dest_addr = ( '192.168.1.103' , 8080 ) # \u6ce8\u610f \u662f\u5143\u7ec4\uff0cip\u662f\u5b57\u7b26\u4e32\uff0c\u7aef\u53e3\u662f\u6570\u5b57 # 3\\. \u4ece\u952e\u76d8\u83b7\u53d6\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 4\\. \u53d1\u9001\u6570\u636e\u5230\u6307\u5b9a\u7684\u7535\u8111\u4e0a\u7684\u6307\u5b9a\u7a0b\u5e8f\u4e2d udp_socket . sendto ( send_data . encode ( 'utf-8' ), dest_addr ) # 5\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket . close () \u8fd0\u884c\u73b0\u8c61\uff1a \u5728Ubuntu\u4e2d\u8fd0\u884c\u811a\u672c\uff1a \u5728windows\u4e2d\u8fd0\u884c\u201c\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u201d\uff1a","title":"1. udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u6570\u636e"},{"location":"python-web/001-\u7f51\u7edcudp/#246-udp-","text":"#coding=utf-8 from socket import * # 1\\. \u521b\u5efaudp\u5957\u63a5\u5b57 udp_socket = socket ( AF_INET , SOCK_DGRAM ) # 2\\. \u51c6\u5907\u63a5\u6536\u65b9\u7684\u5730\u5740 dest_addr = ( '192.168.236.129' , 8080 ) # 3\\. \u4ece\u952e\u76d8\u83b7\u53d6\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 4\\. \u53d1\u9001\u6570\u636e\u5230\u6307\u5b9a\u7684\u7535\u8111\u4e0a udp_socket . sendto ( send_data . encode ( 'utf-8' ), dest_addr ) # 5\\. \u7b49\u5f85\u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e recv_data = udp_socket . recvfrom ( 1024 ) # 1024\u8868\u793a\u672c\u6b21\u63a5\u6536\u7684\u6700\u5927\u5b57\u8282\u6570 # 6\\. \u663e\u793a\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e # \u63a5\u6536\u5230\u7684\u6570\u636erecv_data\u662f\u4e00\u4e2a\u5143\u7ec4 # \u7b2c1\u4e2a\u5143\u7d20\u662f\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e # \u7b2c2\u4e2a\u5143\u7d20\u662f\u5bf9\u65b9\u7684ip\u548c\u7aef\u53e3 print ( recv_data [ 0 ] . decode ( 'gbk' )) print ( recv_data [ 1 ]) # 7\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket . close () python\u811a\u672c\uff1a \u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u622a\u56fe\uff1a","title":"2. udp\u7f51\u7edc\u7a0b\u5e8f-\u53d1\u9001\u3001\u63a5\u6536\u6570\u636e"},{"location":"python-web/001-\u7f51\u7edcudp/#37python3","text":"str -> bytes : encode\u7f16\u7801 bytes -> str : decode\u89e3\u7801 \u5b57\u7b26\u4e32\u901a\u8fc7\u7f16\u7801\u6210\u4e3a\u5b57\u8282\u7801\uff0c\u5b57\u8282\u7801\u901a\u8fc7\u89e3\u7801\u6210\u4e3a\u5b57\u7b26\u4e32\u3002 >>> text = '\u6211\u662f\u6587\u672c' >>> text '\u6211\u662f\u6587\u672c' >>> print ( text ) \u6211\u662f\u6587\u672c >>> bytesText = text . encode () >>> bytesText b ' \\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe6\\x96\\x87\\xe6\\x9c\\xac ' >>> print ( bytesText ) b ' \\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe6\\x96\\x87\\xe6\\x9c\\xac ' >>> type ( text ) < class ' str '> >>> type ( bytesText ) < class ' bytes '> >>> textDecode = bytesText . decode () >>> textDecode '\u6211\u662f\u6587\u672c' >>> print ( textDecode ) \u6211\u662f\u6587\u672c \u5176\u4e2ddecode()\u4e0eencode()\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\uff0c\u5176\u58f0\u660e\u5206\u522b\u4e3a: bytes . decode ( encoding = \"utf-8\" , errors = \"strict\" ) str . encode ( encoding = \"utf-8\" , errors = \"strict\" ) \u5176\u4e2d\u7684encoding\u662f\u6307\u5728\u89e3\u7801\u7f16\u7801\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u7f16\u7801(\u6b64\u5904\u6307\u201c\u7f16\u7801\u65b9\u6848\u201d\u662f\u540d\u8bcd)\uff0cerrors\u662f\u6307\u9519\u8bef\u7684\u5904\u7406\u65b9\u6848\u3002 \u8be6\u7ec6\u7684\u53ef\u4ee5\u53c2\u7167\u5b98\u65b9\u6587\u6863\uff1a str.encode() bytes.decode()","title":"3.7python3\u7f16\u7801\u8f6c\u6362"},{"location":"python-web/001-\u7f51\u7edcudp/#udp","text":"","title":"udp\u7ed1\u5b9a\u4fe1\u606f"},{"location":"python-web/001-\u7f51\u7edcudp/#146-udp-_1","text":"\u4f1a\u53d8\u7684\u7aef\u53e3\u53f7 \u91cd\u65b0\u8fd0\u884c\u591a\u6b21\u811a\u672c\uff0c\u7136\u540e\u5728\u201c\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\u201d\u4e2d\uff0c\u770b\u5230\u7684\u73b0\u8c61\u5982\u4e0b\uff1a \u8bf4\u660e\uff1a \u6bcf\u91cd\u65b0\u8fd0\u884c\u4e00\u6b21\u7f51\u7edc\u7a0b\u5e8f\uff0c\u4e0a\u56fe\u4e2d\u7ea2\u5708\u4e2d\u7684\u6570\u5b57\uff0c\u4e0d\u4e00\u6837\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u8fd9\u4e2a\u6570\u5b57\u6807\u8bc6\u8fd9\u4e2a\u7f51\u7edc\u7a0b\u5e8f\uff0c\u5f53\u91cd\u65b0\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u786e\u5b9a\u5230\u5e95\u7528\u54ea\u4e2a\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u4f1a\u968f\u673a\u5206\u914d \u8bb0\u4f4f\u4e00\u70b9\uff1a\u8fd9\u4e2a\u7f51\u7edc\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u5c31\u552f\u4e00\u6807\u8bc6\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6240\u4ee5\u5982\u679c\u5176\u4ed6\u7535\u8111\u4e0a\u7684\u7f51\u7edc\u7a0b\u5e8f\u5982\u679c\u60f3\u8981\u5411\u6b64\u7a0b\u5e8f\u53d1\u9001\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5411\u8fd9\u4e2a\u6570\u5b57\uff08\u5373\u7aef\u53e3\uff09\u6807\u8bc6\u7684\u7a0b\u5e8f\u53d1\u9001\u5373\u53ef","title":"1. udp\u7f51\u7edc\u7a0b\u5e8f-\u7aef\u53e3\u95ee\u9898"},{"location":"python-web/001-\u7f51\u7edcudp/#246-udp","text":"","title":"2. udp\u7ed1\u5b9a\u4fe1\u606f"},{"location":"python-web/001-\u7f51\u7edcudp/#1","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u53f0\u7535\u8111\u4e0a\u8fd0\u884c\u7684\u7f51\u7edc\u7a0b\u5e8f\u6709\u5f88\u591a\uff0c\u4e3a\u4e86\u4e0d\u4e0e\u5176\u4ed6\u7684\u7f51\u7edc\u7a0b\u5e8f\u5360\u7528\u540c\u4e00\u4e2a\u7aef\u53e3\u53f7\uff0c\u5f80\u5f80\u5728\u7f16\u7a0b\u4e2d\uff0cudp\u7684\u7aef\u53e3\u53f7\u4e00\u822c\u4e0d\u7ed1\u5b9a \u4f46\u662f\u5982\u679c\u9700\u8981\u505a\u6210\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\u7684\u8bdd\uff0c\u662f\u9700\u8981\u7ed1\u5b9a\u7684\uff0c\u60f3\u60f3\u770b\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u62a5\u8b66\u7535\u8bdd\u6bcf\u5929\u90fd\u5728\u53d8\uff0c\u60f3\u5fc5\u4e16\u754c\u5c31\u4f1a\u4e71\u4e86\uff0c\u6240\u4ee5\u4e00\u822c\u670d\u52a1\u6027\u7684\u7a0b\u5e8f\uff0c\u5f80\u5f80\u9700\u8981\u4e00\u4e2a\u56fa\u5b9a\u7684\u7aef\u53e3\u53f7\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7aef\u53e3\u7ed1\u5b9a","title":"&lt;1&gt;. \u7ed1\u5b9a\u4fe1\u606f"},{"location":"python-web/001-\u7f51\u7edcudp/#2","text":"#coding=utf-8 from socket import * # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket(AF_INET, SOCK_DGRAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u7edc\u7a0b\u5e8f\u4e0d\u7ed1\u5b9a\uff0c\u5219\u7cfb\u7edf\u4f1a\u968f\u673a\u5206\u914d local_addr = ('', 7788) # ip\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0cip\u4e00\u822c\u4e0d\u7528\u5199\uff0c\u8868\u793a\u672c\u673a\u7684\u4efb\u4f55\u4e00\u4e2aip udp_socket.bind(local_addr) # 3\\. \u7b49\u5f85\u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u7684\u6570\u636e recv_data = udp_socket.recvfrom(1024) # 1024\u8868\u793a\u672c\u6b21\u63a5\u6536\u7684\u6700\u5927\u5b57\u8282\u6570 # 4\\. \u663e\u793a\u63a5\u6536\u5230\u7684\u6570\u636e print(recv_data[0].decode('gbk')) # 5\\. \u5173\u95ed\u5957\u63a5\u5b57 udp_socket.close()","title":"&lt;2&gt;. \u7ed1\u5b9a\u793a\u4f8b"},{"location":"python-web/001-\u7f51\u7edcudp/#_7","text":"","title":"\u8fd0\u884c\u7ed3\u679c\uff1a"},{"location":"python-web/001-\u7f51\u7edcudp/#3","text":"\u4e00\u4e2audp\u7f51\u7edc\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4e0d\u7ed1\u5b9a\uff0c\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u968f\u673a\u8fdb\u884c\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\uff0c\u5982\u679c\u91cd\u65b0\u8fd0\u884c\u6b64\u7a0b\u5e8f\u7aef\u53e3\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316 \u4e00\u4e2audp\u7f51\u7edc\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u4fe1\u606f\uff08ip\u5730\u5740\uff0c\u7aef\u53e3\u53f7\uff09\uff0c\u5982\u679c\u7ed1\u5b9a\u6210\u529f\uff0c\u90a3\u4e48\u64cd\u4f5c\u7cfb\u7edf\u7528\u8fd9\u4e2a\u7aef\u53e3\u53f7\u6765\u8fdb\u884c\u533a\u522b\u6536\u5230\u7684\u7f51\u7edc\u6570\u636e\u662f\u5426\u662f\u6b64\u8fdb\u7a0b\u7684","title":"&lt;3&gt;. \u603b\u7ed3"},{"location":"python-web/001-\u7f51\u7edcudp/#39","text":"","title":"3.9\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b(\u7b80\u5355\u7248)"},{"location":"python-web/001-\u7f51\u7edcudp/#_8","text":"\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b\u4e2d\uff0c\u4e4b\u6240\u9700\u8981ip\u3001port\u7b49\uff0c\u5c31\u662f\u4e3a\u4e86\u80fd\u591f\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u901a\u4fe1\u8fc7\u7a0b\u8fdb\u884c\u4efb\u52a1\u5212\u5206\uff0c\u4ece\u800c\u4fdd\u8bc1\u6570\u636e\u51c6\u786e\u65e0\u8bef\u7684\u4f20\u9012","title":"\u8bf4\u660e"},{"location":"python-web/001-\u7f51\u7edcudp/#310udp","text":"\u8bf4\u660e \u5728\u4e00\u4e2a\u7535\u8111\u4e2d\u7f16\u51991\u4e2a\u7a0b\u5e8f\uff0c\u67092\u4e2a\u529f\u80fd 1.\u83b7\u53d6\u952e\u76d8\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5bf9\u65b9 2.\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a \u5e76\u4e14\u529f\u80fd\u6570\u636e\u8fdb\u884c\u9009\u62e9\u4ee5\u4e0a\u76842\u4e2a\u529f\u80fd\u8c03\u7528","title":"3.10\u5e94\u7528\uff1audp\u804a\u5929\u5668"},{"location":"python-web/001-\u7f51\u7edcudp/#_9","text":"\u5b9e\u73b0\u4e0a\u8ff0\u7a0b\u5e8f \u53c2\u8003\u4ee3\u7801: import socket def send_msg ( udp_socket ): \"\"\"\u83b7\u53d6\u952e\u76d8\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5bf9\u65b9\"\"\" # 1. \u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e msg = input ( \" \\n \u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\" ) # 2. \u8f93\u5165\u5bf9\u65b9\u7684ip\u5730\u5740 dest_ip = input ( \" \\n \u8bf7\u8f93\u5165\u5bf9\u65b9\u7684ip\u5730\u5740:\" ) # 3. \u8f93\u5165\u5bf9\u65b9\u7684port dest_port = int ( input ( \" \\n \u8bf7\u8f93\u5165\u5bf9\u65b9\u7684port:\" )) # 4. \u53d1\u9001\u6570\u636e udp_socket . sendto ( msg . encode ( \"utf-8\" ), ( dest_ip , dest_port )) def recv_msg ( udp_socket ): \"\"\"\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a\"\"\" # 1. \u63a5\u6536\u6570\u636e recv_msg = udp_socket . recvfrom ( 1024 ) # 2. \u89e3\u7801 recv_ip = recv_msg [ 1 ] recv_msg = recv_msg [ 0 ] . decode ( \"utf-8\" ) # 3. \u663e\u793a\u63a5\u6536\u5230\u7684\u6570\u636e print ( \">>> %s : %s \" % ( str ( recv_ip ), recv_msg )) def main (): # 1. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f udp_socket . bind (( \"\" , 7890 )) while True : # 3. \u9009\u62e9\u529f\u80fd print ( \"=\" * 30 ) print ( \"1:\u53d1\u9001\u6d88\u606f\" ) print ( \"2:\u63a5\u6536\u6d88\u606f\" ) print ( \"=\" * 30 ) op_num = input ( \"\u8bf7\u8f93\u5165\u8981\u64cd\u4f5c\u7684\u529f\u80fd\u5e8f\u53f7:\" ) # 4. \u6839\u636e\u9009\u62e9\u8c03\u7528\u76f8\u5e94\u7684\u51fd\u6570 if op_num == \"1\" : send_msg ( udp_socket ) elif op_num == \"2\" : recv_msg ( udp_socket ) else : print ( \"\u8f93\u5165\u6709\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165...\" ) if __name__ == \"__main__\" : main () \u60f3\u4e00\u60f3 \u4ee5\u4e0a\u7684\u7a0b\u5e8f\u5982\u679c\u9009\u62e9\u4e86\u63a5\u6536\u6570\u636e\u529f\u80fd\uff0c\u5e76\u4e14\u6b64\u65f6\u6ca1\u6709\u6570\u636e\uff0c\u7a0b\u5e8f\u4f1a\u5835\u585e\u5728\u8fd9\uff0c\u90a3\u4e48\u600e\u6837\u624d\u80fd\u8ba9\u8fd9\u4e2a\u7a0b\u5e8f\u6536\u53d1\u6570\u636e\u4e00\u8d77\u8fdb\u884c\u5462\uff1f\u522b\u7740\u6025\uff0c\u5b66\u4e60\u5b8c\u591a\u4efb\u52a1\u77e5\u8bc6\u4e4b\u540e\u5c31\u89e3\u51b3\u4e86O(\u2229_\u2229)O...","title":"\u8981\u6c42"},{"location":"python-web/002-\u7f51\u7edctcp/","text":"4.1TCP\u7b80\u4ecb \u00b6 TCP\u4ecb\u7ecd \u00b6 **TCP\u534f\u8bae\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff08\u82f1\u8bed\uff1aTransmission Control Protocol\uff0c\u7f29\u5199\u4e3a TCP\uff09**\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u7531IETF\u7684RFC 793\u5b9a\u4e49\u3002 TCP\u901a\u4fe1\u9700\u8981\u7ecf\u8fc7**\u521b\u5efa\u8fde\u63a5\u3001\u6570\u636e\u4f20\u9001\u3001\u7ec8\u6b62\u8fde\u63a5**\u4e09\u4e2a\u6b65\u9aa4\u3002 TCP\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u5148\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u624d\u80fd\u53d1\u9001\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u6253\u7535\u8bdd\"\" TCP\u7279\u70b9 \u00b6 1. \u9762\u5411\u8fde\u63a5 \u00b6 \u901a\u4fe1\u53cc\u65b9\u5fc5\u987b\u5148\u5efa\u7acb\u8fde\u63a5\u624d\u80fd\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93\uff0c\u53cc\u65b9\u90fd\u5fc5\u987b\u4e3a\u8be5\u8fde\u63a5\u5206\u914d\u5fc5\u8981\u7684\u7cfb\u7edf\u5185\u6838\u8d44\u6e90\uff0c\u4ee5\u7ba1\u7406\u8fde\u63a5\u7684\u72b6\u6001\u548c\u8fde\u63a5\u4e0a\u7684\u4f20\u8f93\u3002 \u53cc\u65b9\u95f4\u7684\u6570\u636e\u4f20\u8f93\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e00\u4e2a\u8fde\u63a5\u8fdb\u884c\u3002 \u5b8c\u6210\u6570\u636e\u4ea4\u6362\u540e\uff0c\u53cc\u65b9\u5fc5\u987b\u65ad\u5f00\u6b64\u8fde\u63a5\uff0c\u4ee5\u91ca\u653e\u7cfb\u7edf\u8d44\u6e90\u3002 \u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u56e0\u6b64TCP\u4e0d\u9002\u7528\u4e8e\u5e7f\u64ad\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u57fa\u4e8e\u5e7f\u64ad\u7684\u5e94\u7528\u7a0b\u5e8f\u8bf7\u4f7f\u7528UDP\u534f\u8bae\u3002 2. \u53ef\u9760\u4f20\u8f93 \u00b6 1\uff09 TCP\u91c7\u7528\u53d1\u9001\u5e94\u7b54\u673a\u5236 TCP\u53d1\u9001\u7684\u6bcf\u4e2a\u62a5\u6587\u6bb5\u90fd\u5fc5\u987b\u5f97\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54\u624d\u8ba4\u4e3a\u8fd9\u4e2aTCP\u62a5\u6587\u6bb5\u4f20\u8f93\u6210\u529f 2\uff09 \u8d85\u65f6\u91cd\u4f20 \u53d1\u9001\u7aef\u53d1\u51fa\u4e00\u4e2a\u62a5\u6587\u6bb5\u4e4b\u540e\u5c31\u542f\u52a8\u5b9a\u65f6\u5668\uff0c\u5982\u679c\u5728\u5b9a\u65f6\u65f6\u95f4\u5185\u6ca1\u6709\u6536\u5230\u5e94\u7b54\u5c31\u91cd\u65b0\u53d1\u9001\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002 TCP\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u53d1\u751f\u4e22\u5305\uff0c\u5c31\u7ed9\u6bcf\u4e2a\u5305\u4e00\u4e2a\u5e8f\u53f7\uff0c\u540c\u65f6\u5e8f\u53f7\u4e5f\u4fdd\u8bc1\u4e86\u4f20\u9001\u5230\u63a5\u6536\u7aef\u5b9e\u4f53\u7684\u5305\u7684\u6309\u5e8f\u63a5\u6536\u3002\u7136\u540e\u63a5\u6536\u7aef\u5b9e\u4f53\u5bf9\u5df2\u6210\u529f\u6536\u5230\u7684\u5305\u53d1\u56de\u4e00\u4e2a\u76f8\u5e94\u7684\u786e\u8ba4\uff08ACK\uff09\uff1b\u5982\u679c\u53d1\u9001\u7aef\u5b9e\u4f53\u5728\u5408\u7406\u7684\u5f80\u8fd4\u65f6\u5ef6\uff08RTT\uff09\u5185\u672a\u6536\u5230\u786e\u8ba4\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6570\u636e\u5305\u5c31\u88ab\u5047\u8bbe\u4e3a\u5df2\u4e22\u5931\u5c06\u4f1a\u88ab\u8fdb\u884c\u91cd\u4f20\u3002 3\uff09 \u9519\u8bef\u6821\u9a8c TCP\u7528\u4e00\u4e2a\u6821\u9a8c\u548c\u51fd\u6570\u6765\u68c0\u9a8c\u6570\u636e\u662f\u5426\u6709\u9519\u8bef\uff1b\u5728\u53d1\u9001\u548c\u63a5\u6536\u65f6\u90fd\u8981\u8ba1\u7b97\u6821\u9a8c\u548c\u3002 4) \u6d41\u91cf\u63a7\u5236\u548c\u963b\u585e\u7ba1\u7406 \u6d41\u91cf\u63a7\u5236\u7528\u6765\u907f\u514d\u4e3b\u673a\u53d1\u9001\u5f97\u8fc7\u5feb\u800c\u4f7f\u63a5\u6536\u65b9\u6765\u4e0d\u53ca\u5b8c\u5168\u6536\u4e0b\u3002 TCP\u4e0eUDP\u7684\u4e0d\u540c\u70b9 \u00b6 \u9762\u5411\u8fde\u63a5\uff08\u786e\u8ba4\u6709\u521b\u5efa\u4e09\u65b9\u4ea4\u63e1\uff0c\u8fde\u63a5\u5df2\u521b\u5efa\u624d\u4f5c\u4f20\u8f93\u3002\uff09 \u6709\u5e8f\u6570\u636e\u4f20\u8f93 \u91cd\u53d1\u4e22\u5931\u7684\u6570\u636e\u5305 \u820d\u5f03\u91cd\u590d\u7684\u6570\u636e\u5305 \u65e0\u5dee\u9519\u7684\u6570\u636e\u4f20\u8f93 \u963b\u585e/\u6d41\u91cf\u63a7\u5236 udp\u901a\u4fe1\u6a21\u578b \u00b6 udp\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e0d\u9700\u8981\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u53ea\u9700\u8981\u53d1\u9001\u6570\u636e\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u5199\u4fe1\"\" TCP\u901a\u4fe1\u6a21\u578b \u00b6 udp\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u5148\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u624d\u80fd\u53d1\u9001\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u6253\u7535\u8bdd\"\" 4.2tcp\u5ba2\u6237\u7aef \u00b6 tcp\u5ba2\u6237\u7aef\uff0c\u5e76\u4e0d\u662f\u50cf\u4e4b\u524d\u4e00\u4e2a\u6bb5\u5b50\uff1a\u4e00\u4e2a\u987e\u5ba2\u53bb\u996d\u9986\u5403\u996d\uff0c\u8fd9\u4e2a\u987e\u5ba2\u8981\u70b9\u83dc\uff0c\u5c31\u95ee\u670d\u52a1\u5458\u54b1\u4eec\u996d\u5e97\u6709\u5ba2\u6237\u7aef\u4e48\uff0c\u7136\u540e\u8fd9\u4e2a\u670d\u52a1\u5458\u975e\u5e38\u5ba2\u6c14\u7684\u8bf4\u9053\uff1a\u5148\u751f \u6211\u4eec\u996d\u5e97\u4e0d\u7528\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u76f4\u63a5\u9001\u5230\u60a8\u7684\u9910\u684c\u4e0a \u5982\u679c\uff0c\u4e0d\u5b66\u4e60\u7f51\u7edc\u7684\u77e5\u8bc6\u662f\u4e0d\u662f \u8bf4\u4e0d\u5b9a\u4e5f\u4f1a\u53d1\u751f\u90a3\u6837\u7684\u7b11\u8bdd \uff0c\u54c8\u54c8 \u6240\u8c13\u7684\u670d\u52a1\u5668\u7aef\uff1a\u5c31\u662f\u63d0\u4f9b\u670d\u52a1\u7684\u4e00\u65b9\uff0c\u800c\u5ba2\u6237\u7aef\uff0c\u5c31\u662f\u9700\u8981\u88ab\u670d\u52a1\u7684\u4e00\u65b9 tcp\u5ba2\u6237\u7aef\u6784\u5efa\u6d41\u7a0b \u00b6 tcp\u7684\u5ba2\u6237\u7aef\u8981\u6bd4\u670d\u52a1\u5668\u7aef\u7b80\u5355\u5f88\u591a\uff0c\u5982\u679c\u8bf4\u670d\u52a1\u5668\u7aef\u662f\u9700\u8981\u81ea\u5df1\u4e70\u624b\u673a\u3001\u67e5\u624b\u673a\u5361\u3001\u8bbe\u7f6e\u94c3\u58f0\u3001\u7b49\u5f85\u522b\u4eba\u6253\u7535\u8bdd\u6d41\u7a0b\u7684\u8bdd\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u5c31\u53ea\u9700\u8981\u627e\u4e00\u4e2a\u7535\u8bdd\u4ead\uff0c\u62ff\u8d77\u7535\u8bdd\u62e8\u6253\u5373\u53ef\uff0c\u6d41\u7a0b\u8981\u5c11\u5f88\u591a \u793a\u4f8b\u4ee3\u7801\uff1a from socket import * # \u521b\u5efasocket tcp_client_socket = socket ( AF_INET , SOCK_STREAM ) # \u76ee\u7684\u4fe1\u606f server_ip = input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:\" ) server_port = int ( input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668port:\" )) # \u94fe\u63a5\u670d\u52a1\u5668 tcp_client_socket . connect (( server_ip , server_port )) # \u63d0\u793a\u7528\u6237\u8f93\u5165\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e\uff1a\" ) tcp_client_socket . send ( send_data . encode ( \"gbk\" )) # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\uff0c\u6700\u5927\u63a5\u65361024\u4e2a\u5b57\u8282 recvData = tcp_client_socket . recv ( 1024 ) print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recvData . decode ( 'gbk' )) # \u5173\u95ed\u5957\u63a5\u5b57 tcp_client_socket . close () \u8fd0\u884c\u6d41\u7a0b\uff1a \u00b6 <1>tcp\u5ba2\u6237\u7aef \u00b6 \u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:10.10.0.47 \u8bf7\u8f93\u5165\u670d\u52a1\u5668port:8080 \u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e\uff1a\u4f60\u597d\u554a \u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a: \u6211\u5f88\u597d\uff0c\u4f60\u5462 <2>\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\uff1a \u00b6 4.3tcp\u670d\u52a1\u5668 \u00b6 \u751f\u6d3b\u4e2d\u7684\u7535\u8bdd\u673a \u00b6 \u5982\u679c\u60f3\u8ba9\u522b\u4eba\u80fd\u66f4\u591f\u6253\u901a\u54b1\u4eec\u7684\u7535\u8bdd\u83b7\u53d6\u76f8\u5e94\u670d\u52a1\u7684\u8bdd\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\u60c5\uff1a \u4e70\u4e2a\u624b\u673a \u63d2\u4e0a\u624b\u673a\u5361 \u8bbe\u8ba1\u624b\u673a\u4e3a\u6b63\u5e38\u63a5\u542c\u72b6\u6001\uff08\u5373\u80fd\u591f\u54cd\u94c3\uff09 \u9759\u9759\u7684\u7b49\u7740\u522b\u4eba\u62e8\u6253 tcp\u670d\u52a1\u5668 \u00b6 \u5982\u540c\u4e0a\u9762\u7684\u7535\u8bdd\u673a\u8fc7\u7a0b\u4e00\u6837\uff0c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u60f3\u8981\u5b8c\u6210\u4e00\u4e2atcp\u670d\u52a1\u5668\u7684\u529f\u80fd\uff0c\u9700\u8981\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a socket\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57 bind\u7ed1\u5b9aip\u548cport listen\u4f7f\u5957\u63a5\u5b57\u53d8\u4e3a\u53ef\u4ee5\u88ab\u52a8\u94fe\u63a5 accept\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 recv/send\u63a5\u6536\u53d1\u9001\u6570\u636e \u4e00\u4e2a\u5f88\u7b80\u5355\u7684tcp\u670d\u52a1\u5668\u5982\u4e0b\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.124.42' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close () \u8fd0\u884c\u6d41\u7a0b\uff1a \u00b6 <1>tcp\u670d\u52a1\u5668 \u00b6 \u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a: \u4f60\u5728\u4e48\uff1f <2>\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\uff1a \u00b6 \u5b9e\u4f8b:while\u5faa\u73af\u5b9e\u73b0\u4e00\u76f4\u63a5\u6536: # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.124.42' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) while True : # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 print ( '\u7b49\u5f85\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u94fe\u63a5' ) client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close () \u6848\u4f8b,\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\u591a\u6b21 \u00b6 # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.43.72' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) while True : # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 print ( '\u7b49\u5f85\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u94fe\u63a5' ) client_socket , clientAddr = tcp_server_socket . accept () print ( '\u4e00\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u5230\u6765' ) while True : # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) #\u5982\u679crecv\u89e3\u5835\u585e\u90a3\u4e48\u6709\u4e24\u79cd\u65b9\u6cd5 #1: \u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u6570\u636e #2: \u5ba2\u6237\u7aef\u8c03\u7528\u4e86close if recv_data : # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) else : #\u5ba2\u6237\u7aef\u5173\u95ed\u4ee5\u540e,recv_data\u7684\u6570\u636e\u5c31\u662f\u7a7a.\u90a3\u4e48\u5c31\u4f1a\u8df3\u8f6c\u5230else,\u90a3\u4e48\u8df3\u51fa\u8fd9\u4e2a\u5faa\u73af break # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close () 4.4 tcp\u6ce8\u610f\u70b9 \u00b6 tcp\u670d\u52a1\u5668\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u7ed1\u5b9a\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u627e\u4e0d\u5230\u8fd9\u4e2a\u670d\u52a1\u5668 tcp\u5ba2\u6237\u7aef\u4e00\u822c\u4e0d\u7ed1\u5b9a\uff0c\u56e0\u4e3a\u662f\u4e3b\u52a8\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u6240\u4ee5\u53ea\u8981\u786e\u5b9a\u597d\u670d\u52a1\u5668\u7684ip\u3001port\u7b49\u4fe1\u606f\u5c31\u597d\uff0c\u672c\u5730\u5ba2\u6237\u7aef\u53ef\u4ee5\u968f\u673a tcp\u670d\u52a1\u5668\u4e2d\u901a\u8fc7listen\u53ef\u4ee5\u5c06socket\u521b\u5efa\u51fa\u6765\u7684\u4e3b\u52a8\u5957\u63a5\u5b57\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u662f\u505atcp\u670d\u52a1\u5668\u65f6\u5fc5\u987b\u8981\u505a\u7684 \u5f53\u5ba2\u6237\u7aef\u9700\u8981\u94fe\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u5c31\u9700\u8981\u4f7f\u7528connect\u8fdb\u884c\u94fe\u63a5\uff0cudp\u662f\u4e0d\u9700\u8981\u94fe\u63a5\u7684\u800c\u662f\u76f4\u63a5\u53d1\u9001\uff0c\u4f46\u662ftcp\u5fc5\u987b\u5148\u94fe\u63a5\uff0c\u53ea\u6709\u94fe\u63a5\u6210\u529f\u624d\u80fd\u901a\u4fe1 \u5f53\u4e00\u4e2atcp\u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u7aef\u4f1a\u67091\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u8fd9\u4e2a\u5957\u63a5\u5b57\u7528\u6765\u6807\u8bb0\u8fd9\u4e2a\u5ba2\u6237\u7aef\uff0c\u5355\u72ec\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 listen\u540e\u7684\u5957\u63a5\u5b57\u662f\u88ab\u52a8\u5957\u63a5\u5b57\uff0c\u7528\u6765\u63a5\u6536\u65b0\u7684\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u8bf7\u6c42\u7684\uff0c\u800caccept\u8fd4\u56de\u7684\u65b0\u5957\u63a5\u5b57\u662f\u6807\u8bb0\u8fd9\u4e2a\u65b0\u5ba2\u6237\u7aef\u7684 \u5173\u95edlisten\u540e\u7684\u5957\u63a5\u5b57\u610f\u5473\u7740\u88ab\u52a8\u5957\u63a5\u5b57\u5173\u95ed\u4e86\uff0c\u4f1a\u5bfc\u81f4\u65b0\u7684\u5ba2\u6237\u7aef\u4e0d\u80fd\u591f\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4e4b\u524d\u5df2\u7ecf\u94fe\u63a5\u6210\u529f\u7684\u5ba2\u6237\u7aef\u6b63\u5e38\u901a\u4fe1\u3002 \u5173\u95edaccept\u8fd4\u56de\u7684\u5957\u63a5\u5b57\u610f\u5473\u7740\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u670d\u52a1\u5b8c\u6bd5 \u5f53\u5ba2\u6237\u7aef\u7684\u5957\u63a5\u5b57\u8c03\u7528close\u540e\uff0c\u670d\u52a1\u5668\u7aef\u4f1arecv\u89e3\u5835\u585e\uff0c\u5e76\u4e14\u8fd4\u56de\u7684\u957f\u5ea6\u4e3a0\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u6570\u636e\u7684\u957f\u5ea6\u6765\u533a\u522b\u5ba2\u6237\u7aef\u662f\u5426\u5df2\u7ecf\u4e0b\u7ebf 4.5 \u6848\u4f8b:\u6587\u4ef6\u4e0b\u8f7d\u5668 \u00b6 \u670d\u52a1\u5668 \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * import sys def get_file_content ( file_name ): \"\"\"\u83b7\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\"\"\" try : with open ( file_name , \"rb\" ) as f : content = f . read () return content except : print ( \"\u6ca1\u6709\u4e0b\u8f7d\u7684\u6587\u4ef6: %s \" % file_name ) def main (): if len ( sys . argv ) != 2 : print ( \"\u8bf7\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fd0\u884c\uff1apython3 xxx.py 7890\" ) return else : # \u8fd0\u884c\u65b9\u5f0f\u4e3apython3 xxx.py 7890 port = int ( sys . argv [ 1 ]) # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.43.72' , port ) #\u8fd9\u91cc\u7684port\u662f\u8fd0\u884c\u7a0b\u5e8f\u83b7\u5f97\u7684 # \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f tcp_server_socket . bind ( address ) # \u5c06\u4e3b\u52a8\u5957\u63a5\u5b57\u53d8\u4e3a\u88ab\u52a8\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # \u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\uff0c\u5373\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u53d1\u9001\u6587\u4ef6 client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 file_name = recv_data . decode ( \"utf-8\" ) print ( \"\u5bf9\u65b9\u8bf7\u6c42\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u4e3a: %s \" % file_name ) file_content = get_file_content ( file_name ) # \u53d1\u9001\u6587\u4ef6\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef # \u56e0\u4e3a\u83b7\u53d6\u6253\u5f00\u6587\u4ef6\u65f6\u662f\u4ee5rb\u65b9\u5f0f\u6253\u5f00\uff0c\u6240\u4ee5file_content\u4e2d\u7684\u6570\u636e\u5df2\u7ecf\u662f\u4e8c\u8fdb\u5236\u7684\u683c\u5f0f\uff0c\u56e0\u6b64\u4e0d\u9700\u8981encode\u7f16\u7801 if file_content : client_socket . send ( file_content ) # \u5173\u95ed\u8fd9\u4e2a\u5957\u63a5\u5b57 client_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u5ba2\u6237\u7aef \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: from socket import * def main (): # \u521b\u5efasocket tcp_client_socket = socket ( AF_INET , SOCK_STREAM ) # \u76ee\u7684\u4fe1\u606f server_ip = input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:\" ) server_port = int ( input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668port:\" )) # \u94fe\u63a5\u670d\u52a1\u5668 tcp_client_socket . connect (( server_ip , server_port )) # \u8f93\u5165\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d file_name = input ( \"\u8bf7\u8f93\u5165\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\uff1a\" ) # \u53d1\u9001\u6587\u4ef6\u4e0b\u8f7d\u8bf7\u6c42 tcp_client_socket . send ( file_name . encode ( \"utf-8\" )) # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\uff0c\u6700\u5927\u63a5\u65361024\u4e2a\u5b57\u8282\uff081K\uff09 recv_data = tcp_client_socket . recv ( 1024 ) # print('\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:', recv_data.decode('utf-8')) # \u5982\u679c\u63a5\u6536\u5230\u6570\u636e\u518d\u521b\u5efa\u6587\u4ef6\uff0c\u5426\u5219\u4e0d\u521b\u5efa if recv_data : with open ( \"[\u63a5\u6536]\" + file_name , \"wb\" ) as f : f . write ( recv_data ) # \u5173\u95ed\u5957\u63a5\u5b57 tcp_client_socket . close () if __name__ == \"__main__\" : main () 4.6 tcp\u76843\u6b21\u63e1\u624b \u00b6 4.7 tcp\u76844\u6b21\u6325\u624b \u00b6 \u670d\u52a1\u5668\u4e0d\u80fd\u5148\u5173\u95ed,\u518d\u6b21\u542f\u52a8\u5bb9\u6613\u5360\u7528\u8fd9\u4e2a\u7aef\u53e3,\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528 \u7b2c\u4e00\u6b21\u6325\u624b\uff1a Client \uff08\u53ef\u4ee5\u4f7f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef\uff09\uff0c\u8bbe\u7f6eSequence Number\u548cAcknowledgment Number\uff0c\u5411 Server\u53d1\u9001\u4e00\u4e2aFIN\u62a5\u6587\u6bb5\uff1b\u6b64\u65f6\uff0cClient \u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a Client \u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9 Server\u4e86\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u7b2c\u4e00\u6b21\u6325\u624b\u540e\uff0c\u5c31\u4e0d\u80fd\u5728\u5411 \u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\u4e86\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a Server \u6536\u5230\u4e86 Client \u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411 Client \u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5\uff0cAcknowledgment Number \u4e3a Sequence Number \u52a0 1\uff1bClient \u8fdb\u5165 FIN_WAIT_2 \u72b6\u6001\uff1bServer \u544a\u8bc9 Client \uff0c\u6211\u201c\u540c\u610f\u201d\u4f60\u7684\u5173\u95ed\u8bf7\u6c42\uff1b Server \u7b2c\u4e00\u6b21\u54cd\u5e94\u540e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u5411 Client \u53d1\u9001\u6570\u636e\uff0c\u8fd9\u91cc\u53ea\u662f\u544a\u8bc9 Client \uff0c\u6211\u6536\u5230\u4f60\u53d1\u9001\u7684\u5173\u95ed\u8bf7\u6c42\u3002 \u7b2c\u4e09\u6b21\u6325\u624b Server \u5411 Client \u53d1\u9001 FIN \u62a5\u6587\u6bb5\uff0c\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6 Server \u8fdb\u5165 CLOSE_WAIT \u72b6\u6001\uff1b \u5f53 Server \u7684\u6570\u636e\u54cd\u5e94\u5b8c\u6210\u540e\uff0c\u518d\u544a\u8bc9 Client\uff0c\u6211\u8fd9\u8fb9\u4e5f\u53ef\u4ee5\u5173\u95ed\u8bf7\u6c42\u4e86\uff0c \u8fd9\u65f6 Server \u5c31\u4e0d\u80fd\u518d\u5411 Client \u53d1\u9001\u6570\u636e\u4e86 \u7b2c\u56db\u6b21\u6325\u624b Client \u6536\u5230 Server \u53d1\u9001\u7684 FIN \u62a5\u6587\u6bb5\uff0c\u5411 Server \u53d1\u9001 ACK \u62a5\u6587\u6bb5\uff0c\u7136\u540e Client \u8fdb\u5165 TIME_WAIT \u72b6\u6001\uff1bServer \u6536\u5230 Client \u7684 ACK \u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0cClient \u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660e Server \u7aef\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0cClient \u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002 \u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u5efa\u7acb\u8fde\u63a5\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u800c\u5173\u95ed\u8fde\u63a5\u5374\u662f\u56db\u6b21\u6325\u624b\u5462\uff1f \u5efa\u7acb\u8fde\u63a5 \u56e0\u4e3a\u670d\u52a1\u7aef\u5728LISTEN\u72b6\u6001\u4e0b\uff0c\u6536\u5230\u5efa\u7acb\u8fde\u63a5\u8bf7\u6c42\u7684SYN\u62a5\u6587\u540e\uff0c\u628aACK\u548cSYN\u653e\u5728\u4e00\u4e2a\u62a5\u6587\u91cc\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \u5173\u95ed\u8fde\u63a5 \u5f53\u6536\u5230\u5bf9\u65b9\u7684FIN\u62a5\u6587\u65f6\uff0c\u4ec5\u8868\u793a\u5bf9\u65b9\u4e0d\u518d\u53d1\u9001\u6570\u636e\u4f46\u8fd8\u80fd\u63a5\u6536\u6536\u636e\uff0c\u6211\u4eec\u4e5f\u672a\u5fc5\u628a\u5168\u90e8\u6570\u636e\u90fd\u53d1\u7ed9\u4e86\u5bf9\u65b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7acb\u5373close\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e00\u4e9b\u6570\u636e\u7ed9\u5bf9\u65b9\u540e\uff0c\u518d\u53d1\u9001FIN\u62a5\u6587\u7ed9\u5bf9\u65b9\u8868\u793a\u540c\u610f\u5173\u95ed\u8fde\u63a5\u3002\u56e0\u6b64\u6211\u4eec\u7684ACK\u548cFIN\u4e00\u822c\u4f1a\u5206\u5f00\u53d1\u9001\u3002 TCP\u534f\u8bae\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u91c7\u7528\u5168\u53cc\u5de5\u901a\u4fe1\u3002 \u90a3\u4e3a\u4ec0\u4e48\u9700\u8981\u4e09\u6b21\u63e1\u624b\u5462\uff1f\u8bf7\u770b\u5982\u4e0b\u7684\u8fc7\u7a0b\uff1a A\u5411B\u53d1\u8d77\u5efa\u7acb\u8fde\u63a5\u8bf7\u6c42\uff1aA\u2014\u2014>B\uff1b B\u6536\u5230A\u7684\u53d1\u9001\u4fe1\u53f7\uff0c\u5e76\u4e14\u5411A\u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff1aB\u2014\u2014>A\uff1b A\u6536\u5230B\u7684\u786e\u8ba4\u4fe1\u53f7\uff0c\u5e76\u5411B\u53d1\u9001\u786e\u8ba4\u4fe1\u53f7\uff1aA\u2014\u2014>B\u3002 \u4e09\u6b21\u63e1\u624b\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u4e2a\u8fc7\u7a0b\u3002 \u901a\u8fc7\u7b2c\u4e00\u6b21\u63e1\u624b\uff0cB\u77e5\u9053A\u80fd\u591f\u53d1\u9001\u6570\u636e\u3002\u901a\u8fc7\u7b2c\u4e8c\u6b21\u63e1\u624b\uff0cA\u77e5\u9053B\u80fd\u53d1\u9001\u6570\u636e\u3002\u7ed3\u5408\u7b2c\u4e00\u6b21\u63e1\u624b\u548c\u7b2c\u4e8c\u6b21\u63e1\u624b\uff0cA\u77e5\u9053B\u80fd\u63a5\u6536\u6570\u636e\u3002\u7ed3\u5408\u7b2c\u4e09\u6b21\u63e1\u624b\uff0cB\u77e5\u9053A\u80fd\u591f\u63a5\u6536\u6570\u636e\u3002 \u81f3\u6b64\uff0c\u5b8c\u6210\u4e86\u63e1\u624b\u8fc7\u7a0b\uff0cA\u77e5\u9053B\u80fd\u6536\u80fd\u53d1\uff0cB\u77e5\u9053A\u80fd\u6536\u80fd\u53d1\uff0c\u901a\u4fe1\u8fde\u63a5\u81f3\u6b64\u5efa\u7acb\u3002\u4e09\u6b21\u8fde\u63a5\u662f\u4fdd\u8bc1\u53ef\u9760\u7684\u6700\u5c0f\u63e1\u624b\u6b21\u6570\uff0c\u518d\u591a\u6b21\u63e1\u624b\u4e5f\u4e0d\u80fd\u63d0\u9ad8\u901a\u4fe1\u6210\u529f\u7684\u6982\u7387\uff0c\u53cd\u800c\u6d6a\u8d39\u8d44\u6e90\u3002 \u90a3\u4e3a\u4ec0\u4e48\u9700\u8981\u56db\u6b21\u6325\u624b\u5462\uff1f\u8bf7\u770b\u5982\u4e0b\u8fc7\u7a0b\uff1a A\u5411B\u53d1\u8d77\u8bf7\u6c42\uff0c\u8868\u793aA\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff1aA\u2014\u2014>B\uff1b B\u5411A\u53d1\u9001\u4fe1\u53f7\uff0c\u786e\u8ba4A\u7684\u65ad\u5f00\u8bf7\u6c42\u8bf7\u6c42\uff1aB\u2014\u2014>A\uff1b B\u5411A\u53d1\u9001\u4fe1\u53f7\uff0c\u8bf7\u6c42\u65ad\u5f00\u8fde\u63a5\uff0c\u8868\u793aB\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff1aB\u2014\u2014>A\uff1b A\u5411B\u53d1\u9001\u786e\u8ba4\u4fe1\u53f7\uff0c\u540c\u610f\u65ad\u5f00\uff1aA\u2014\u2014>B\u3002 B\u6536\u5230\u786e\u8ba4\u4fe1\u53f7\uff0c\u65ad\u5f00\u8fde\u63a5\uff0c\u800cA\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6536\u5230B\u7684\u4fe1\u53f7\uff0c\u8868\u660eB\u5df2\u7ecf\u65ad\u5f00\u4e86\uff0c\u4e8e\u662fA\u4e5f\u65ad\u5f00\u4e86\u8fde\u63a5\u3002\u81f3\u6b64\uff0c\u5b8c\u6210\u6325\u624b\u8fc7\u7a0b\u3002 \u53ef\u80fd\u6709\u6367\u6cb9\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e482\u30013\u6b21\u6325\u624b\u4e0d\u80fd\u5408\u5728\u4e00\u6b21\u6325\u624b\u4e2d\uff1f\u90a3\u662f\u56e0\u4e3a\u6b64\u65f6A\u867d\u7136\u4e0d\u518d\u53d1\u9001\u6570\u636e\u4e86\uff0c\u4f46\u662f\u8fd8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff0cB\u53ef\u80fd\u8fd8\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9A\uff0c\u6240\u4ee5\u4e24\u6b21\u6325\u624b\u4e0d\u80fd\u5408\u5e76\u4e3a\u4e00\u6b21\u3002 \u6325\u624b\u6b21\u6570\u6bd4\u63e1\u624b\u591a\u4e00\u6b21\uff0c\u662f\u56e0\u4e3a\u63e1\u624b\u8fc7\u7a0b\uff0c\u901a\u4fe1\u53ea\u9700\u8981\u5904\u7406\u8fde\u63a5\u3002\u800c\u6325\u624b\u8fc7\u7a0b\uff0c\u901a\u4fe1\u9700\u8981\u5904\u7406\u6570\u636e+\u8fde\u63a5\u3002 TCP\u5728\u771f\u6b63\u7684\u8bfb\u5199\u64cd\u4f5c\u4e4b\u524d\uff0cserver\u4e0eclient\u4e4b\u95f4\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c \u5f53\u8bfb\u5199\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53cc\u65b9\u4e0d\u518d\u9700\u8981\u8fd9\u4e2a\u8fde\u63a5\u65f6\u5b83\u4eec\u53ef\u4ee5\u91ca\u653e\u8fd9\u4e2a\u8fde\u63a5\uff0c \u8fde\u63a5\u7684\u5efa\u7acb\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\uff0c\u91ca\u653e\u5219\u9700\u8981\u56db\u6b21\u6325\u624b\uff0c \u6240\u4ee5\u8bf4\u6bcf\u4e2a\u8fde\u63a5\u7684\u5efa\u7acb\u90fd\u662f\u9700\u8981\u8d44\u6e90\u6d88\u8017\u548c\u65f6\u95f4\u6d88\u8017\u7684\u3002 TCP\u901a\u4fe1\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u5982\u4e0b\u56fe: \u00b6 1. TCP\u77ed\u8fde\u63a5 \u00b6 \u6a21\u62df\u4e00\u79cdTCP\u77ed\u8fde\u63a5\u7684\u60c5\u51b5: client \u5411 server \u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42 server \u63a5\u5230\u8bf7\u6c42\uff0c\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5 client \u5411 server \u53d1\u9001\u6d88\u606f server \u56de\u5e94 client \u4e00\u6b21\u8bfb\u5199\u5b8c\u6210\uff0c\u6b64\u65f6\u53cc\u65b9\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u53d1\u8d77 close \u64cd\u4f5c \u5728\u6b65\u9aa45\u4e2d\uff0c\u4e00\u822c\u90fd\u662f client \u5148\u53d1\u8d77 close \u64cd\u4f5c\u3002\u5f53\u7136\u4e5f\u4e0d\u6392\u9664\u6709\u7279\u6b8a\u7684\u60c5\u51b5\u3002 \u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u770b\uff0c\u77ed\u8fde\u63a5\u4e00\u822c\u53ea\u4f1a\u5728 client/server \u95f4\u4f20\u9012\u4e00\u6b21\u8bfb\u5199\u64cd\u4f5c\uff01 2. TCP\u957f\u8fde\u63a5 \u00b6 \u518d\u6a21\u62df\u4e00\u79cd\u957f\u8fde\u63a5\u7684\u60c5\u51b5: client \u5411 server \u53d1\u8d77\u8fde\u63a5 server \u63a5\u5230\u8bf7\u6c42\uff0c\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5 client \u5411 server \u53d1\u9001\u6d88\u606f server \u56de\u5e94 client \u4e00\u6b21\u8bfb\u5199\u5b8c\u6210\uff0c\u8fde\u63a5\u4e0d\u5173\u95ed \u540e\u7eed\u8bfb\u5199\u64cd\u4f5c... \u957f\u65f6\u95f4\u64cd\u4f5c\u4e4b\u540eclient\u53d1\u8d77\u5173\u95ed\u8bf7\u6c42 3. TCP\u957f/\u77ed\u8fde\u63a5\u64cd\u4f5c\u8fc7\u7a0b \u00b6 3.1 \u77ed\u8fde\u63a5\u7684\u64cd\u4f5c\u6b65\u9aa4\u662f\uff1a \u00b6 \u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5...\u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5 3.2 \u957f\u8fde\u63a5\u7684\u64cd\u4f5c\u6b65\u9aa4\u662f\uff1a \u00b6 \u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93...\uff08\u4fdd\u6301\u8fde\u63a5\uff09...\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5 4. TCP\u957f/\u77ed\u8fde\u63a5\u7684\u4f18\u70b9\u548c\u7f3a\u70b9 \u00b6 \u957f\u8fde\u63a5\u53ef\u4ee5\u7701\u53bb\u8f83\u591a\u7684TCP\u5efa\u7acb\u548c\u5173\u95ed\u7684\u64cd\u4f5c\uff0c\u51cf\u5c11\u6d6a\u8d39\uff0c\u8282\u7ea6\u65f6\u95f4\u3002 \u5bf9\u4e8e\u9891\u7e41\u8bf7\u6c42\u8d44\u6e90\u7684\u5ba2\u6237\u6765\u8bf4\uff0c\u8f83\u9002\u7528\u957f\u8fde\u63a5\u3002 client\u4e0eserver\u4e4b\u95f4\u7684\u8fde\u63a5\u5982\u679c\u4e00\u76f4\u4e0d\u5173\u95ed\u7684\u8bdd\uff0c\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c \u968f\u7740\u5ba2\u6237\u7aef\u8fde\u63a5\u8d8a\u6765\u8d8a\u591a\uff0cserver\u65e9\u665a\u6709\u625b\u4e0d\u4f4f\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u5019server\u7aef\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u7b56\u7565\uff0c \u5982\u5173\u95ed\u4e00\u4e9b\u957f\u65f6\u95f4\u6ca1\u6709\u8bfb\u5199\u4e8b\u4ef6\u53d1\u751f\u7684\u8fde\u63a5\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u6076\u610f\u8fde\u63a5\u5bfc\u81f4server\u7aef\u670d\u52a1\u53d7\u635f\uff1b \u5982\u679c\u6761\u4ef6\u518d\u5141\u8bb8\u5c31\u53ef\u4ee5\u4ee5\u5ba2\u6237\u7aef\u673a\u5668\u4e3a\u9897\u7c92\u5ea6\uff0c\u9650\u5236\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u6700\u5927\u957f\u8fde\u63a5\u6570\uff0c \u8fd9\u6837\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u67d0\u4e2a\u86cb\u75bc\u7684\u5ba2\u6237\u7aef\u8fde\u7d2f\u540e\u7aef\u670d\u52a1\u3002 \u77ed\u8fde\u63a5\u5bf9\u4e8e\u670d\u52a1\u5668\u6765\u8bf4\u7ba1\u7406\u8f83\u4e3a\u7b80\u5355\uff0c\u5b58\u5728\u7684\u8fde\u63a5\u90fd\u662f\u6709\u7528\u7684\u8fde\u63a5\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u624b\u6bb5\u3002 \u4f46\u5982\u679c\u5ba2\u6237\u8bf7\u6c42\u9891\u7e41\uff0c\u5c06\u5728TCP\u7684\u5efa\u7acb\u548c\u5173\u95ed\u64cd\u4f5c\u4e0a\u6d6a\u8d39\u65f6\u95f4\u548c\u5e26\u5bbd\u3002 5. TCP\u957f/\u77ed\u8fde\u63a5\u7684\u5e94\u7528\u573a\u666f \u00b6 \u957f\u8fde\u63a5\u591a\u7528\u4e8e\u64cd\u4f5c\u9891\u7e41\uff0c\u70b9\u5bf9\u70b9\u7684\u901a\u8baf\uff0c\u800c\u4e14\u8fde\u63a5\u6570\u4e0d\u80fd\u592a\u591a\u60c5\u51b5\u3002 \u6bcf\u4e2aTCP\u8fde\u63a5\u90fd\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff0c\u8fd9\u9700\u8981\u65f6\u95f4\uff0c\u5982\u679c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u5148\u8fde\u63a5\uff0c \u518d\u64cd\u4f5c\u7684\u8bdd\u90a3\u4e48\u5904\u7406\u901f\u5ea6\u4f1a\u964d\u4f4e\u5f88\u591a\uff0c\u6240\u4ee5\u6bcf\u4e2a\u64cd\u4f5c\u5b8c\u540e\u90fd\u4e0d\u65ad\u5f00\uff0c \u518d\u6b21\u5904\u7406\u65f6\u76f4\u63a5\u53d1\u9001\u6570\u636e\u5305\u5c31OK\u4e86\uff0c\u4e0d\u7528\u5efa\u7acbTCP\u8fde\u63a5\u3002 \u4f8b\u5982\uff1a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7528\u957f\u8fde\u63a5\uff0c\u5982\u679c\u7528\u77ed\u8fde\u63a5\u9891\u7e41\u7684\u901a\u4fe1\u4f1a\u9020\u6210socket\u9519\u8bef\uff0c \u800c\u4e14\u9891\u7e41\u7684socket \u521b\u5efa\u4e5f\u662f\u5bf9\u8d44\u6e90\u7684\u6d6a\u8d39\u3002 \u800c\u50cfWEB\u7f51\u7ad9\u7684http\u670d\u52a1\u4e00\u822c\u90fd\u7528\u77ed\u94fe\u63a5\uff0c\u56e0\u4e3a\u957f\u8fde\u63a5\u5bf9\u4e8e\u670d\u52a1\u7aef\u6765\u8bf4\u4f1a\u8017\u8d39\u4e00\u5b9a\u7684\u8d44\u6e90\uff0c \u800c\u50cfWEB\u7f51\u7ad9\u8fd9\u4e48\u9891\u7e41\u7684\u6210\u5343\u4e0a\u4e07\u751a\u81f3\u4e0a\u4ebf\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u7528\u77ed\u8fde\u63a5\u4f1a\u66f4\u7701\u4e00\u4e9b\u8d44\u6e90\uff0c \u5982\u679c\u7528\u957f\u8fde\u63a5\uff0c\u800c\u4e14\u540c\u65f6\u6709\u6210\u5343\u4e0a\u4e07\u7684\u7528\u6237\uff0c\u5982\u679c\u6bcf\u4e2a\u7528\u6237\u90fd\u5360\u7528\u4e00\u4e2a\u8fde\u63a5\u7684\u8bdd\uff0c \u90a3\u53ef\u60f3\u800c\u77e5\u5427\u3002\u6240\u4ee5\u5e76\u53d1\u91cf\u5927\uff0c\u4f46\u6bcf\u4e2a\u7528\u6237\u65e0\u9700\u9891\u7e41\u64cd\u4f5c\u60c5\u51b5\u4e0b\u9700\u7528\u77ed\u8fde\u597d\u3002 wireshark\u6293\u5305\u5de5\u5177\u4f7f\u7528 \u00b6 1. \u5b89\u88c5wireshark \u00b6 2. wireshark\u7684\u4f7f\u7528 \u00b6 4.10tcp-ip\u7b80\u4ecb \u00b6 \u4f5c\u4e3a\u65b0\u65f6\u4ee3\u6807\u6746\u7684\u6211\u4eec\uff0c\u5df2\u7ecf\u79bb\u4e0d\u5f00\u624b\u673a\u3001\u79bb\u4e0d\u5f00\u7f51\u7edc\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u5927\u5bb6\u53ef\u80fd\u8033\u719f\u80fd\u8be6\uff0c\u4f46\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u51fa\u73b0\u6bd4\u4e92\u8054\u7f51\u8981\u65e9\u5f88\u591a 1. \u4ec0\u4e48\u662f\u534f\u8bae \u00b6 \u6709\u7684\u8bf4\u82f1\u8bed\uff0c\u6709\u7684\u8bf4\u4e2d\u6587\uff0c\u6709\u7684\u8bf4\u5fb7\u8bed\uff0c\u8bf4\u540c\u4e00\u79cd\u8bed\u8a00\u7684\u4eba\u53ef\u4ee5\u4ea4\u6d41\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u4e4b\u95f4\u5c31\u4e0d\u884c\u4e86 \u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u79cd\u65cf\u4eba\u4e4b\u95f4\u7684\u8bed\u8a00\u6c9f\u901a\u969c\u788d\uff0c\u73b0\u89c4\u5b9a\u56fd\u9645\u901a\u7528\u8bed\u8a00\u662f\u82f1\u8bed\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u89c4\u5b9a\uff0c\u8fd9\u5c31\u662f\u534f\u8bae 2. \u8ba1\u7b97\u673a\u7f51\u7edc\u6c9f\u901a\u7528\u4ec0\u4e48 \u00b6 \u73b0\u5728\u7684\u751f\u6d3b\u4e2d\uff0c\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u53ea\u9700\u8981\u80fd\u591f\u8054\u7f51\uff08\u6709\u7ebf\u65e0\u7ebf\u90fd\u53ef\u4ee5\uff09\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f8\u4e92\u8fdb\u884c\u4f20\u9012\u6570\u636e \u90a3\u4e48\u4e0d\u540c\u79cd\u7c7b\u4e4b\u95f4\u7684\u8ba1\u7b97\u673a\u5230\u5e95\u662f\u600e\u4e48\u8fdb\u884c\u6570\u636e\u4f20\u9012\u7684\u5462\uff1f \u5c31\u50cf\u8bf4\u4e0d\u540c\u8bed\u8a00\u7684\u4eba\u6c9f\u901a\u4e00\u6837\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u5927\u5bb6\u90fd\u8ba4\u53ef\u90fd\u9075\u5b88\u7684\u534f\u8bae\u5373\u53ef\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8ba1\u7b97\u673a\u90fd\u9075\u5b88\u7684\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\u53eb\u505a TCP/IP\u534f\u8bae 3. TCP/IP\u534f\u8bae(\u65cf) \u00b6 \u65e9\u671f\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\uff0c\u90fd\u662f\u7531\u5404\u5382\u5546\u81ea\u5df1\u89c4\u5b9a\u4e00\u5957\u534f\u8bae\uff0cIBM\u3001Apple\u548cMicrosoft\u90fd\u6709\u5404\u81ea\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u4e92\u4e0d\u517c\u5bb9 \u4e3a\u4e86\u628a\u5168\u4e16\u754c\u7684\u6240\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u90fd\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u5fc5\u987b\u89c4\u5b9a\u4e00\u5957\u5168\u7403\u901a\u7528\u7684\u534f\u8bae\uff0c\u4e3a\u4e86\u5b9e\u73b0\u4e92\u8054\u7f51\u8fd9\u4e2a\u76ee\u6807\uff0c\u4e92\u8054\u7f51\u534f\u8bae\u65cf\uff08Internet Protocol Suite\uff09\u5c31\u662f\u901a\u7528\u534f\u8bae\u6807\u51c6\u3002 \u56e0\u4e3a\u4e92\u8054\u7f51\u534f\u8bae\u5305\u542b\u4e86\u4e0a\u767e\u79cd\u534f\u8bae\u6807\u51c6\uff0c\u4f46\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u534f\u8bae\u662fTCP\u548cIP\u534f\u8bae\uff0c\u6240\u4ee5\uff0c\u5927\u5bb6\u628a\u4e92\u8054\u7f51\u7684\u534f\u8bae\u7b80\u79f0TCP/IP\u534f\u8bae(\u65cf) \u5e38\u7528\u7684\u7f51\u7edc\u534f\u8bae\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bf4\u660e\uff1a \u7f51\u9645\u5c42\u4e5f\u79f0\u4e3a\uff1a\u7f51\u7edc\u5c42 \u7f51\u7edc\u63a5\u53e3\u5c42\u4e5f\u79f0\u4e3a\uff1a\u94fe\u8def\u5c42 \u53e6\u5916\u4e00\u5957\u6807\u51c6 \u00b6","title":"002 \u7f51\u7edctcp"},{"location":"python-web/002-\u7f51\u7edctcp/#41tcp","text":"","title":"4.1TCP\u7b80\u4ecb"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp","text":"**TCP\u534f\u8bae\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff08\u82f1\u8bed\uff1aTransmission Control Protocol\uff0c\u7f29\u5199\u4e3a TCP\uff09**\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u7531IETF\u7684RFC 793\u5b9a\u4e49\u3002 TCP\u901a\u4fe1\u9700\u8981\u7ecf\u8fc7**\u521b\u5efa\u8fde\u63a5\u3001\u6570\u636e\u4f20\u9001\u3001\u7ec8\u6b62\u8fde\u63a5**\u4e09\u4e2a\u6b65\u9aa4\u3002 TCP\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u5148\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u624d\u80fd\u53d1\u9001\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u6253\u7535\u8bdd\"\"","title":"TCP\u4ecb\u7ecd"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp_1","text":"","title":"TCP\u7279\u70b9"},{"location":"python-web/002-\u7f51\u7edctcp/#146","text":"\u901a\u4fe1\u53cc\u65b9\u5fc5\u987b\u5148\u5efa\u7acb\u8fde\u63a5\u624d\u80fd\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93\uff0c\u53cc\u65b9\u90fd\u5fc5\u987b\u4e3a\u8be5\u8fde\u63a5\u5206\u914d\u5fc5\u8981\u7684\u7cfb\u7edf\u5185\u6838\u8d44\u6e90\uff0c\u4ee5\u7ba1\u7406\u8fde\u63a5\u7684\u72b6\u6001\u548c\u8fde\u63a5\u4e0a\u7684\u4f20\u8f93\u3002 \u53cc\u65b9\u95f4\u7684\u6570\u636e\u4f20\u8f93\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e00\u4e2a\u8fde\u63a5\u8fdb\u884c\u3002 \u5b8c\u6210\u6570\u636e\u4ea4\u6362\u540e\uff0c\u53cc\u65b9\u5fc5\u987b\u65ad\u5f00\u6b64\u8fde\u63a5\uff0c\u4ee5\u91ca\u653e\u7cfb\u7edf\u8d44\u6e90\u3002 \u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u56e0\u6b64TCP\u4e0d\u9002\u7528\u4e8e\u5e7f\u64ad\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u57fa\u4e8e\u5e7f\u64ad\u7684\u5e94\u7528\u7a0b\u5e8f\u8bf7\u4f7f\u7528UDP\u534f\u8bae\u3002","title":"1. \u9762\u5411\u8fde\u63a5"},{"location":"python-web/002-\u7f51\u7edctcp/#246","text":"1\uff09 TCP\u91c7\u7528\u53d1\u9001\u5e94\u7b54\u673a\u5236 TCP\u53d1\u9001\u7684\u6bcf\u4e2a\u62a5\u6587\u6bb5\u90fd\u5fc5\u987b\u5f97\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54\u624d\u8ba4\u4e3a\u8fd9\u4e2aTCP\u62a5\u6587\u6bb5\u4f20\u8f93\u6210\u529f 2\uff09 \u8d85\u65f6\u91cd\u4f20 \u53d1\u9001\u7aef\u53d1\u51fa\u4e00\u4e2a\u62a5\u6587\u6bb5\u4e4b\u540e\u5c31\u542f\u52a8\u5b9a\u65f6\u5668\uff0c\u5982\u679c\u5728\u5b9a\u65f6\u65f6\u95f4\u5185\u6ca1\u6709\u6536\u5230\u5e94\u7b54\u5c31\u91cd\u65b0\u53d1\u9001\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002 TCP\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u53d1\u751f\u4e22\u5305\uff0c\u5c31\u7ed9\u6bcf\u4e2a\u5305\u4e00\u4e2a\u5e8f\u53f7\uff0c\u540c\u65f6\u5e8f\u53f7\u4e5f\u4fdd\u8bc1\u4e86\u4f20\u9001\u5230\u63a5\u6536\u7aef\u5b9e\u4f53\u7684\u5305\u7684\u6309\u5e8f\u63a5\u6536\u3002\u7136\u540e\u63a5\u6536\u7aef\u5b9e\u4f53\u5bf9\u5df2\u6210\u529f\u6536\u5230\u7684\u5305\u53d1\u56de\u4e00\u4e2a\u76f8\u5e94\u7684\u786e\u8ba4\uff08ACK\uff09\uff1b\u5982\u679c\u53d1\u9001\u7aef\u5b9e\u4f53\u5728\u5408\u7406\u7684\u5f80\u8fd4\u65f6\u5ef6\uff08RTT\uff09\u5185\u672a\u6536\u5230\u786e\u8ba4\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6570\u636e\u5305\u5c31\u88ab\u5047\u8bbe\u4e3a\u5df2\u4e22\u5931\u5c06\u4f1a\u88ab\u8fdb\u884c\u91cd\u4f20\u3002 3\uff09 \u9519\u8bef\u6821\u9a8c TCP\u7528\u4e00\u4e2a\u6821\u9a8c\u548c\u51fd\u6570\u6765\u68c0\u9a8c\u6570\u636e\u662f\u5426\u6709\u9519\u8bef\uff1b\u5728\u53d1\u9001\u548c\u63a5\u6536\u65f6\u90fd\u8981\u8ba1\u7b97\u6821\u9a8c\u548c\u3002 4) \u6d41\u91cf\u63a7\u5236\u548c\u963b\u585e\u7ba1\u7406 \u6d41\u91cf\u63a7\u5236\u7528\u6765\u907f\u514d\u4e3b\u673a\u53d1\u9001\u5f97\u8fc7\u5feb\u800c\u4f7f\u63a5\u6536\u65b9\u6765\u4e0d\u53ca\u5b8c\u5168\u6536\u4e0b\u3002","title":"2. \u53ef\u9760\u4f20\u8f93"},{"location":"python-web/002-\u7f51\u7edctcp/#tcpudp","text":"\u9762\u5411\u8fde\u63a5\uff08\u786e\u8ba4\u6709\u521b\u5efa\u4e09\u65b9\u4ea4\u63e1\uff0c\u8fde\u63a5\u5df2\u521b\u5efa\u624d\u4f5c\u4f20\u8f93\u3002\uff09 \u6709\u5e8f\u6570\u636e\u4f20\u8f93 \u91cd\u53d1\u4e22\u5931\u7684\u6570\u636e\u5305 \u820d\u5f03\u91cd\u590d\u7684\u6570\u636e\u5305 \u65e0\u5dee\u9519\u7684\u6570\u636e\u4f20\u8f93 \u963b\u585e/\u6d41\u91cf\u63a7\u5236","title":"TCP\u4e0eUDP\u7684\u4e0d\u540c\u70b9"},{"location":"python-web/002-\u7f51\u7edctcp/#udp","text":"udp\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e0d\u9700\u8981\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u53ea\u9700\u8981\u53d1\u9001\u6570\u636e\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u5199\u4fe1\"\"","title":"udp\u901a\u4fe1\u6a21\u578b"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp_2","text":"udp\u901a\u4fe1\u6a21\u578b\u4e2d\uff0c\u5728\u901a\u4fe1\u5f00\u59cb\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u5148\u5efa\u7acb\u76f8\u5173\u7684\u94fe\u63a5\uff0c\u624d\u80fd\u53d1\u9001\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\uff0c\"\u6253\u7535\u8bdd\"\"","title":"TCP\u901a\u4fe1\u6a21\u578b"},{"location":"python-web/002-\u7f51\u7edctcp/#42tcp","text":"tcp\u5ba2\u6237\u7aef\uff0c\u5e76\u4e0d\u662f\u50cf\u4e4b\u524d\u4e00\u4e2a\u6bb5\u5b50\uff1a\u4e00\u4e2a\u987e\u5ba2\u53bb\u996d\u9986\u5403\u996d\uff0c\u8fd9\u4e2a\u987e\u5ba2\u8981\u70b9\u83dc\uff0c\u5c31\u95ee\u670d\u52a1\u5458\u54b1\u4eec\u996d\u5e97\u6709\u5ba2\u6237\u7aef\u4e48\uff0c\u7136\u540e\u8fd9\u4e2a\u670d\u52a1\u5458\u975e\u5e38\u5ba2\u6c14\u7684\u8bf4\u9053\uff1a\u5148\u751f \u6211\u4eec\u996d\u5e97\u4e0d\u7528\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u76f4\u63a5\u9001\u5230\u60a8\u7684\u9910\u684c\u4e0a \u5982\u679c\uff0c\u4e0d\u5b66\u4e60\u7f51\u7edc\u7684\u77e5\u8bc6\u662f\u4e0d\u662f \u8bf4\u4e0d\u5b9a\u4e5f\u4f1a\u53d1\u751f\u90a3\u6837\u7684\u7b11\u8bdd \uff0c\u54c8\u54c8 \u6240\u8c13\u7684\u670d\u52a1\u5668\u7aef\uff1a\u5c31\u662f\u63d0\u4f9b\u670d\u52a1\u7684\u4e00\u65b9\uff0c\u800c\u5ba2\u6237\u7aef\uff0c\u5c31\u662f\u9700\u8981\u88ab\u670d\u52a1\u7684\u4e00\u65b9","title":"4.2tcp\u5ba2\u6237\u7aef"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp_3","text":"tcp\u7684\u5ba2\u6237\u7aef\u8981\u6bd4\u670d\u52a1\u5668\u7aef\u7b80\u5355\u5f88\u591a\uff0c\u5982\u679c\u8bf4\u670d\u52a1\u5668\u7aef\u662f\u9700\u8981\u81ea\u5df1\u4e70\u624b\u673a\u3001\u67e5\u624b\u673a\u5361\u3001\u8bbe\u7f6e\u94c3\u58f0\u3001\u7b49\u5f85\u522b\u4eba\u6253\u7535\u8bdd\u6d41\u7a0b\u7684\u8bdd\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u5c31\u53ea\u9700\u8981\u627e\u4e00\u4e2a\u7535\u8bdd\u4ead\uff0c\u62ff\u8d77\u7535\u8bdd\u62e8\u6253\u5373\u53ef\uff0c\u6d41\u7a0b\u8981\u5c11\u5f88\u591a \u793a\u4f8b\u4ee3\u7801\uff1a from socket import * # \u521b\u5efasocket tcp_client_socket = socket ( AF_INET , SOCK_STREAM ) # \u76ee\u7684\u4fe1\u606f server_ip = input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:\" ) server_port = int ( input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668port:\" )) # \u94fe\u63a5\u670d\u52a1\u5668 tcp_client_socket . connect (( server_ip , server_port )) # \u63d0\u793a\u7528\u6237\u8f93\u5165\u6570\u636e send_data = input ( \"\u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e\uff1a\" ) tcp_client_socket . send ( send_data . encode ( \"gbk\" )) # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\uff0c\u6700\u5927\u63a5\u65361024\u4e2a\u5b57\u8282 recvData = tcp_client_socket . recv ( 1024 ) print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recvData . decode ( 'gbk' )) # \u5173\u95ed\u5957\u63a5\u5b57 tcp_client_socket . close ()","title":"tcp\u5ba2\u6237\u7aef\u6784\u5efa\u6d41\u7a0b"},{"location":"python-web/002-\u7f51\u7edctcp/#_1","text":"","title":"\u8fd0\u884c\u6d41\u7a0b\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#1tcp","text":"\u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:10.10.0.47 \u8bf7\u8f93\u5165\u670d\u52a1\u5668port:8080 \u8bf7\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e\uff1a\u4f60\u597d\u554a \u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a: \u6211\u5f88\u597d\uff0c\u4f60\u5462","title":"&lt;1&gt;tcp\u5ba2\u6237\u7aef"},{"location":"python-web/002-\u7f51\u7edctcp/#2","text":"","title":"&lt;2&gt;\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#43tcp","text":"","title":"4.3tcp\u670d\u52a1\u5668"},{"location":"python-web/002-\u7f51\u7edctcp/#_2","text":"\u5982\u679c\u60f3\u8ba9\u522b\u4eba\u80fd\u66f4\u591f\u6253\u901a\u54b1\u4eec\u7684\u7535\u8bdd\u83b7\u53d6\u76f8\u5e94\u670d\u52a1\u7684\u8bdd\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\u60c5\uff1a \u4e70\u4e2a\u624b\u673a \u63d2\u4e0a\u624b\u673a\u5361 \u8bbe\u8ba1\u624b\u673a\u4e3a\u6b63\u5e38\u63a5\u542c\u72b6\u6001\uff08\u5373\u80fd\u591f\u54cd\u94c3\uff09 \u9759\u9759\u7684\u7b49\u7740\u522b\u4eba\u62e8\u6253","title":"\u751f\u6d3b\u4e2d\u7684\u7535\u8bdd\u673a"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp_4","text":"\u5982\u540c\u4e0a\u9762\u7684\u7535\u8bdd\u673a\u8fc7\u7a0b\u4e00\u6837\uff0c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u60f3\u8981\u5b8c\u6210\u4e00\u4e2atcp\u670d\u52a1\u5668\u7684\u529f\u80fd\uff0c\u9700\u8981\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a socket\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57 bind\u7ed1\u5b9aip\u548cport listen\u4f7f\u5957\u63a5\u5b57\u53d8\u4e3a\u53ef\u4ee5\u88ab\u52a8\u94fe\u63a5 accept\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 recv/send\u63a5\u6536\u53d1\u9001\u6570\u636e \u4e00\u4e2a\u5f88\u7b80\u5355\u7684tcp\u670d\u52a1\u5668\u5982\u4e0b\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.124.42' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close ()","title":"tcp\u670d\u52a1\u5668"},{"location":"python-web/002-\u7f51\u7edctcp/#_3","text":"","title":"\u8fd0\u884c\u6d41\u7a0b\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#1tcp_1","text":"\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a: \u4f60\u5728\u4e48\uff1f","title":"&lt;1&gt;tcp\u670d\u52a1\u5668"},{"location":"python-web/002-\u7f51\u7edctcp/#2_1","text":"\u5b9e\u4f8b:while\u5faa\u73af\u5b9e\u73b0\u4e00\u76f4\u63a5\u6536: # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.124.42' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) while True : # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 print ( '\u7b49\u5f85\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u94fe\u63a5' ) client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close ()","title":"&lt;2&gt;\u7f51\u7edc\u8c03\u8bd5\u52a9\u624b\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#_4","text":"# -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.43.72' , 7788 ) # \u7ed1\u5b9a tcp_server_socket . bind ( address ) # \u4f7f\u7528socket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u9ed8\u8ba4\u7684\u5c5e\u6027\u662f\u4e3b\u52a8\u7684\uff0c\u4f7f\u7528listen\u5c06\u5176\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a5\u6536\u522b\u4eba\u7684\u94fe\u63a5\u4e86 tcp_server_socket . listen ( 128 ) while True : # \u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u6765\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u4e13\u95e8\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # client_socket\u7528\u6765\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 # tcp_server_socket\u5c31\u53ef\u4ee5\u7701\u4e0b\u6765\u4e13\u95e8\u7b49\u5f85\u5176\u4ed6\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 print ( '\u7b49\u5f85\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u94fe\u63a5' ) client_socket , clientAddr = tcp_server_socket . accept () print ( '\u4e00\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u5230\u6765' ) while True : # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 print ( '\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:' , recv_data . decode ( 'utf-8' )) #\u5982\u679crecv\u89e3\u5835\u585e\u90a3\u4e48\u6709\u4e24\u79cd\u65b9\u6cd5 #1: \u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u6570\u636e #2: \u5ba2\u6237\u7aef\u8c03\u7528\u4e86close if recv_data : # \u53d1\u9001\u4e00\u4e9b\u6570\u636e\u5230\u5ba2\u6237\u7aef client_socket . send ( \"thank you !\" . encode ( 'utf-8' )) else : #\u5ba2\u6237\u7aef\u5173\u95ed\u4ee5\u540e,recv_data\u7684\u6570\u636e\u5c31\u662f\u7a7a.\u90a3\u4e48\u5c31\u4f1a\u8df3\u8f6c\u5230else,\u90a3\u4e48\u8df3\u51fa\u8fd9\u4e2a\u5faa\u73af break # \u5173\u95ed\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u5957\u63a5\u5b57\uff0c\u53ea\u8981\u5173\u95ed\u4e86\uff0c\u5c31\u610f\u5473\u7740\u4e3a\u4e0d\u80fd\u518d\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u4e86\uff0c\u5982\u679c\u8fd8\u9700\u8981\u670d\u52a1\uff0c\u53ea\u80fd\u518d\u6b21\u91cd\u65b0\u8fde\u63a5 client_socket . close () #\u5173\u95ed\u6574\u4e2a\u7684\u670d\u52a1\u7aef tcp_server_socket . close ()","title":"\u6848\u4f8b,\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\u591a\u6b21"},{"location":"python-web/002-\u7f51\u7edctcp/#44-tcp","text":"tcp\u670d\u52a1\u5668\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u7ed1\u5b9a\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u627e\u4e0d\u5230\u8fd9\u4e2a\u670d\u52a1\u5668 tcp\u5ba2\u6237\u7aef\u4e00\u822c\u4e0d\u7ed1\u5b9a\uff0c\u56e0\u4e3a\u662f\u4e3b\u52a8\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u6240\u4ee5\u53ea\u8981\u786e\u5b9a\u597d\u670d\u52a1\u5668\u7684ip\u3001port\u7b49\u4fe1\u606f\u5c31\u597d\uff0c\u672c\u5730\u5ba2\u6237\u7aef\u53ef\u4ee5\u968f\u673a tcp\u670d\u52a1\u5668\u4e2d\u901a\u8fc7listen\u53ef\u4ee5\u5c06socket\u521b\u5efa\u51fa\u6765\u7684\u4e3b\u52a8\u5957\u63a5\u5b57\u53d8\u4e3a\u88ab\u52a8\u7684\uff0c\u8fd9\u662f\u505atcp\u670d\u52a1\u5668\u65f6\u5fc5\u987b\u8981\u505a\u7684 \u5f53\u5ba2\u6237\u7aef\u9700\u8981\u94fe\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u5c31\u9700\u8981\u4f7f\u7528connect\u8fdb\u884c\u94fe\u63a5\uff0cudp\u662f\u4e0d\u9700\u8981\u94fe\u63a5\u7684\u800c\u662f\u76f4\u63a5\u53d1\u9001\uff0c\u4f46\u662ftcp\u5fc5\u987b\u5148\u94fe\u63a5\uff0c\u53ea\u6709\u94fe\u63a5\u6210\u529f\u624d\u80fd\u901a\u4fe1 \u5f53\u4e00\u4e2atcp\u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u7aef\u4f1a\u67091\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u8fd9\u4e2a\u5957\u63a5\u5b57\u7528\u6765\u6807\u8bb0\u8fd9\u4e2a\u5ba2\u6237\u7aef\uff0c\u5355\u72ec\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 listen\u540e\u7684\u5957\u63a5\u5b57\u662f\u88ab\u52a8\u5957\u63a5\u5b57\uff0c\u7528\u6765\u63a5\u6536\u65b0\u7684\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u8bf7\u6c42\u7684\uff0c\u800caccept\u8fd4\u56de\u7684\u65b0\u5957\u63a5\u5b57\u662f\u6807\u8bb0\u8fd9\u4e2a\u65b0\u5ba2\u6237\u7aef\u7684 \u5173\u95edlisten\u540e\u7684\u5957\u63a5\u5b57\u610f\u5473\u7740\u88ab\u52a8\u5957\u63a5\u5b57\u5173\u95ed\u4e86\uff0c\u4f1a\u5bfc\u81f4\u65b0\u7684\u5ba2\u6237\u7aef\u4e0d\u80fd\u591f\u94fe\u63a5\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4e4b\u524d\u5df2\u7ecf\u94fe\u63a5\u6210\u529f\u7684\u5ba2\u6237\u7aef\u6b63\u5e38\u901a\u4fe1\u3002 \u5173\u95edaccept\u8fd4\u56de\u7684\u5957\u63a5\u5b57\u610f\u5473\u7740\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u670d\u52a1\u5b8c\u6bd5 \u5f53\u5ba2\u6237\u7aef\u7684\u5957\u63a5\u5b57\u8c03\u7528close\u540e\uff0c\u670d\u52a1\u5668\u7aef\u4f1arecv\u89e3\u5835\u585e\uff0c\u5e76\u4e14\u8fd4\u56de\u7684\u957f\u5ea6\u4e3a0\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u6570\u636e\u7684\u957f\u5ea6\u6765\u533a\u522b\u5ba2\u6237\u7aef\u662f\u5426\u5df2\u7ecf\u4e0b\u7ebf","title":"4.4 tcp\u6ce8\u610f\u70b9"},{"location":"python-web/002-\u7f51\u7edctcp/#45","text":"\u670d\u52a1\u5668 \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: # -*- coding: utf-8 -*- \"\"\" Created on Sun Jun 9 11:38:45 2019 @author: zangz \"\"\" from socket import * import sys def get_file_content ( file_name ): \"\"\"\u83b7\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\"\"\" try : with open ( file_name , \"rb\" ) as f : content = f . read () return content except : print ( \"\u6ca1\u6709\u4e0b\u8f7d\u7684\u6587\u4ef6: %s \" % file_name ) def main (): if len ( sys . argv ) != 2 : print ( \"\u8bf7\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fd0\u884c\uff1apython3 xxx.py 7890\" ) return else : # \u8fd0\u884c\u65b9\u5f0f\u4e3apython3 xxx.py 7890 port = int ( sys . argv [ 1 ]) # \u521b\u5efasocket tcp_server_socket = socket ( AF_INET , SOCK_STREAM ) # \u672c\u5730\u4fe1\u606f address = ( '192.168.43.72' , port ) #\u8fd9\u91cc\u7684port\u662f\u8fd0\u884c\u7a0b\u5e8f\u83b7\u5f97\u7684 # \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f tcp_server_socket . bind ( address ) # \u5c06\u4e3b\u52a8\u5957\u63a5\u5b57\u53d8\u4e3a\u88ab\u52a8\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # \u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\uff0c\u5373\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u53d1\u9001\u6587\u4ef6 client_socket , clientAddr = tcp_server_socket . accept () # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e recv_data = client_socket . recv ( 1024 ) # \u63a5\u65361024\u4e2a\u5b57\u8282 file_name = recv_data . decode ( \"utf-8\" ) print ( \"\u5bf9\u65b9\u8bf7\u6c42\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u4e3a: %s \" % file_name ) file_content = get_file_content ( file_name ) # \u53d1\u9001\u6587\u4ef6\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef # \u56e0\u4e3a\u83b7\u53d6\u6253\u5f00\u6587\u4ef6\u65f6\u662f\u4ee5rb\u65b9\u5f0f\u6253\u5f00\uff0c\u6240\u4ee5file_content\u4e2d\u7684\u6570\u636e\u5df2\u7ecf\u662f\u4e8c\u8fdb\u5236\u7684\u683c\u5f0f\uff0c\u56e0\u6b64\u4e0d\u9700\u8981encode\u7f16\u7801 if file_content : client_socket . send ( file_content ) # \u5173\u95ed\u8fd9\u4e2a\u5957\u63a5\u5b57 client_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u5ba2\u6237\u7aef \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: from socket import * def main (): # \u521b\u5efasocket tcp_client_socket = socket ( AF_INET , SOCK_STREAM ) # \u76ee\u7684\u4fe1\u606f server_ip = input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668ip:\" ) server_port = int ( input ( \"\u8bf7\u8f93\u5165\u670d\u52a1\u5668port:\" )) # \u94fe\u63a5\u670d\u52a1\u5668 tcp_client_socket . connect (( server_ip , server_port )) # \u8f93\u5165\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d file_name = input ( \"\u8bf7\u8f93\u5165\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\uff1a\" ) # \u53d1\u9001\u6587\u4ef6\u4e0b\u8f7d\u8bf7\u6c42 tcp_client_socket . send ( file_name . encode ( \"utf-8\" )) # \u63a5\u6536\u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\uff0c\u6700\u5927\u63a5\u65361024\u4e2a\u5b57\u8282\uff081K\uff09 recv_data = tcp_client_socket . recv ( 1024 ) # print('\u63a5\u6536\u5230\u7684\u6570\u636e\u4e3a:', recv_data.decode('utf-8')) # \u5982\u679c\u63a5\u6536\u5230\u6570\u636e\u518d\u521b\u5efa\u6587\u4ef6\uff0c\u5426\u5219\u4e0d\u521b\u5efa if recv_data : with open ( \"[\u63a5\u6536]\" + file_name , \"wb\" ) as f : f . write ( recv_data ) # \u5173\u95ed\u5957\u63a5\u5b57 tcp_client_socket . close () if __name__ == \"__main__\" : main ()","title":"4.5 \u6848\u4f8b:\u6587\u4ef6\u4e0b\u8f7d\u5668"},{"location":"python-web/002-\u7f51\u7edctcp/#46-tcp3","text":"","title":"4.6 tcp\u76843\u6b21\u63e1\u624b"},{"location":"python-web/002-\u7f51\u7edctcp/#47-tcp4","text":"\u670d\u52a1\u5668\u4e0d\u80fd\u5148\u5173\u95ed,\u518d\u6b21\u542f\u52a8\u5bb9\u6613\u5360\u7528\u8fd9\u4e2a\u7aef\u53e3,\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528 \u7b2c\u4e00\u6b21\u6325\u624b\uff1a Client \uff08\u53ef\u4ee5\u4f7f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef\uff09\uff0c\u8bbe\u7f6eSequence Number\u548cAcknowledgment Number\uff0c\u5411 Server\u53d1\u9001\u4e00\u4e2aFIN\u62a5\u6587\u6bb5\uff1b\u6b64\u65f6\uff0cClient \u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a Client \u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9 Server\u4e86\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u7b2c\u4e00\u6b21\u6325\u624b\u540e\uff0c\u5c31\u4e0d\u80fd\u5728\u5411 \u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\u4e86\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a Server \u6536\u5230\u4e86 Client \u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411 Client \u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5\uff0cAcknowledgment Number \u4e3a Sequence Number \u52a0 1\uff1bClient \u8fdb\u5165 FIN_WAIT_2 \u72b6\u6001\uff1bServer \u544a\u8bc9 Client \uff0c\u6211\u201c\u540c\u610f\u201d\u4f60\u7684\u5173\u95ed\u8bf7\u6c42\uff1b Server \u7b2c\u4e00\u6b21\u54cd\u5e94\u540e\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u5411 Client \u53d1\u9001\u6570\u636e\uff0c\u8fd9\u91cc\u53ea\u662f\u544a\u8bc9 Client \uff0c\u6211\u6536\u5230\u4f60\u53d1\u9001\u7684\u5173\u95ed\u8bf7\u6c42\u3002 \u7b2c\u4e09\u6b21\u6325\u624b Server \u5411 Client \u53d1\u9001 FIN \u62a5\u6587\u6bb5\uff0c\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6 Server \u8fdb\u5165 CLOSE_WAIT \u72b6\u6001\uff1b \u5f53 Server \u7684\u6570\u636e\u54cd\u5e94\u5b8c\u6210\u540e\uff0c\u518d\u544a\u8bc9 Client\uff0c\u6211\u8fd9\u8fb9\u4e5f\u53ef\u4ee5\u5173\u95ed\u8bf7\u6c42\u4e86\uff0c \u8fd9\u65f6 Server \u5c31\u4e0d\u80fd\u518d\u5411 Client \u53d1\u9001\u6570\u636e\u4e86 \u7b2c\u56db\u6b21\u6325\u624b Client \u6536\u5230 Server \u53d1\u9001\u7684 FIN \u62a5\u6587\u6bb5\uff0c\u5411 Server \u53d1\u9001 ACK \u62a5\u6587\u6bb5\uff0c\u7136\u540e Client \u8fdb\u5165 TIME_WAIT \u72b6\u6001\uff1bServer \u6536\u5230 Client \u7684 ACK \u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0cClient \u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660e Server \u7aef\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0cClient \u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002 \u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u5efa\u7acb\u8fde\u63a5\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u800c\u5173\u95ed\u8fde\u63a5\u5374\u662f\u56db\u6b21\u6325\u624b\u5462\uff1f \u5efa\u7acb\u8fde\u63a5 \u56e0\u4e3a\u670d\u52a1\u7aef\u5728LISTEN\u72b6\u6001\u4e0b\uff0c\u6536\u5230\u5efa\u7acb\u8fde\u63a5\u8bf7\u6c42\u7684SYN\u62a5\u6587\u540e\uff0c\u628aACK\u548cSYN\u653e\u5728\u4e00\u4e2a\u62a5\u6587\u91cc\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \u5173\u95ed\u8fde\u63a5 \u5f53\u6536\u5230\u5bf9\u65b9\u7684FIN\u62a5\u6587\u65f6\uff0c\u4ec5\u8868\u793a\u5bf9\u65b9\u4e0d\u518d\u53d1\u9001\u6570\u636e\u4f46\u8fd8\u80fd\u63a5\u6536\u6536\u636e\uff0c\u6211\u4eec\u4e5f\u672a\u5fc5\u628a\u5168\u90e8\u6570\u636e\u90fd\u53d1\u7ed9\u4e86\u5bf9\u65b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7acb\u5373close\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e00\u4e9b\u6570\u636e\u7ed9\u5bf9\u65b9\u540e\uff0c\u518d\u53d1\u9001FIN\u62a5\u6587\u7ed9\u5bf9\u65b9\u8868\u793a\u540c\u610f\u5173\u95ed\u8fde\u63a5\u3002\u56e0\u6b64\u6211\u4eec\u7684ACK\u548cFIN\u4e00\u822c\u4f1a\u5206\u5f00\u53d1\u9001\u3002 TCP\u534f\u8bae\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u91c7\u7528\u5168\u53cc\u5de5\u901a\u4fe1\u3002 \u90a3\u4e3a\u4ec0\u4e48\u9700\u8981\u4e09\u6b21\u63e1\u624b\u5462\uff1f\u8bf7\u770b\u5982\u4e0b\u7684\u8fc7\u7a0b\uff1a A\u5411B\u53d1\u8d77\u5efa\u7acb\u8fde\u63a5\u8bf7\u6c42\uff1aA\u2014\u2014>B\uff1b B\u6536\u5230A\u7684\u53d1\u9001\u4fe1\u53f7\uff0c\u5e76\u4e14\u5411A\u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff1aB\u2014\u2014>A\uff1b A\u6536\u5230B\u7684\u786e\u8ba4\u4fe1\u53f7\uff0c\u5e76\u5411B\u53d1\u9001\u786e\u8ba4\u4fe1\u53f7\uff1aA\u2014\u2014>B\u3002 \u4e09\u6b21\u63e1\u624b\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u4e2a\u8fc7\u7a0b\u3002 \u901a\u8fc7\u7b2c\u4e00\u6b21\u63e1\u624b\uff0cB\u77e5\u9053A\u80fd\u591f\u53d1\u9001\u6570\u636e\u3002\u901a\u8fc7\u7b2c\u4e8c\u6b21\u63e1\u624b\uff0cA\u77e5\u9053B\u80fd\u53d1\u9001\u6570\u636e\u3002\u7ed3\u5408\u7b2c\u4e00\u6b21\u63e1\u624b\u548c\u7b2c\u4e8c\u6b21\u63e1\u624b\uff0cA\u77e5\u9053B\u80fd\u63a5\u6536\u6570\u636e\u3002\u7ed3\u5408\u7b2c\u4e09\u6b21\u63e1\u624b\uff0cB\u77e5\u9053A\u80fd\u591f\u63a5\u6536\u6570\u636e\u3002 \u81f3\u6b64\uff0c\u5b8c\u6210\u4e86\u63e1\u624b\u8fc7\u7a0b\uff0cA\u77e5\u9053B\u80fd\u6536\u80fd\u53d1\uff0cB\u77e5\u9053A\u80fd\u6536\u80fd\u53d1\uff0c\u901a\u4fe1\u8fde\u63a5\u81f3\u6b64\u5efa\u7acb\u3002\u4e09\u6b21\u8fde\u63a5\u662f\u4fdd\u8bc1\u53ef\u9760\u7684\u6700\u5c0f\u63e1\u624b\u6b21\u6570\uff0c\u518d\u591a\u6b21\u63e1\u624b\u4e5f\u4e0d\u80fd\u63d0\u9ad8\u901a\u4fe1\u6210\u529f\u7684\u6982\u7387\uff0c\u53cd\u800c\u6d6a\u8d39\u8d44\u6e90\u3002 \u90a3\u4e3a\u4ec0\u4e48\u9700\u8981\u56db\u6b21\u6325\u624b\u5462\uff1f\u8bf7\u770b\u5982\u4e0b\u8fc7\u7a0b\uff1a A\u5411B\u53d1\u8d77\u8bf7\u6c42\uff0c\u8868\u793aA\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff1aA\u2014\u2014>B\uff1b B\u5411A\u53d1\u9001\u4fe1\u53f7\uff0c\u786e\u8ba4A\u7684\u65ad\u5f00\u8bf7\u6c42\u8bf7\u6c42\uff1aB\u2014\u2014>A\uff1b B\u5411A\u53d1\u9001\u4fe1\u53f7\uff0c\u8bf7\u6c42\u65ad\u5f00\u8fde\u63a5\uff0c\u8868\u793aB\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff1aB\u2014\u2014>A\uff1b A\u5411B\u53d1\u9001\u786e\u8ba4\u4fe1\u53f7\uff0c\u540c\u610f\u65ad\u5f00\uff1aA\u2014\u2014>B\u3002 B\u6536\u5230\u786e\u8ba4\u4fe1\u53f7\uff0c\u65ad\u5f00\u8fde\u63a5\uff0c\u800cA\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6536\u5230B\u7684\u4fe1\u53f7\uff0c\u8868\u660eB\u5df2\u7ecf\u65ad\u5f00\u4e86\uff0c\u4e8e\u662fA\u4e5f\u65ad\u5f00\u4e86\u8fde\u63a5\u3002\u81f3\u6b64\uff0c\u5b8c\u6210\u6325\u624b\u8fc7\u7a0b\u3002 \u53ef\u80fd\u6709\u6367\u6cb9\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e482\u30013\u6b21\u6325\u624b\u4e0d\u80fd\u5408\u5728\u4e00\u6b21\u6325\u624b\u4e2d\uff1f\u90a3\u662f\u56e0\u4e3a\u6b64\u65f6A\u867d\u7136\u4e0d\u518d\u53d1\u9001\u6570\u636e\u4e86\uff0c\u4f46\u662f\u8fd8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff0cB\u53ef\u80fd\u8fd8\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9A\uff0c\u6240\u4ee5\u4e24\u6b21\u6325\u624b\u4e0d\u80fd\u5408\u5e76\u4e3a\u4e00\u6b21\u3002 \u6325\u624b\u6b21\u6570\u6bd4\u63e1\u624b\u591a\u4e00\u6b21\uff0c\u662f\u56e0\u4e3a\u63e1\u624b\u8fc7\u7a0b\uff0c\u901a\u4fe1\u53ea\u9700\u8981\u5904\u7406\u8fde\u63a5\u3002\u800c\u6325\u624b\u8fc7\u7a0b\uff0c\u901a\u4fe1\u9700\u8981\u5904\u7406\u6570\u636e+\u8fde\u63a5\u3002 TCP\u5728\u771f\u6b63\u7684\u8bfb\u5199\u64cd\u4f5c\u4e4b\u524d\uff0cserver\u4e0eclient\u4e4b\u95f4\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c \u5f53\u8bfb\u5199\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53cc\u65b9\u4e0d\u518d\u9700\u8981\u8fd9\u4e2a\u8fde\u63a5\u65f6\u5b83\u4eec\u53ef\u4ee5\u91ca\u653e\u8fd9\u4e2a\u8fde\u63a5\uff0c \u8fde\u63a5\u7684\u5efa\u7acb\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\uff0c\u91ca\u653e\u5219\u9700\u8981\u56db\u6b21\u6325\u624b\uff0c \u6240\u4ee5\u8bf4\u6bcf\u4e2a\u8fde\u63a5\u7684\u5efa\u7acb\u90fd\u662f\u9700\u8981\u8d44\u6e90\u6d88\u8017\u548c\u65f6\u95f4\u6d88\u8017\u7684\u3002","title":"4.7 tcp\u76844\u6b21\u6325\u624b"},{"location":"python-web/002-\u7f51\u7edctcp/#tcp_5","text":"","title":"TCP\u901a\u4fe1\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u5982\u4e0b\u56fe:"},{"location":"python-web/002-\u7f51\u7edctcp/#146-tcp","text":"\u6a21\u62df\u4e00\u79cdTCP\u77ed\u8fde\u63a5\u7684\u60c5\u51b5: client \u5411 server \u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42 server \u63a5\u5230\u8bf7\u6c42\uff0c\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5 client \u5411 server \u53d1\u9001\u6d88\u606f server \u56de\u5e94 client \u4e00\u6b21\u8bfb\u5199\u5b8c\u6210\uff0c\u6b64\u65f6\u53cc\u65b9\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u53d1\u8d77 close \u64cd\u4f5c \u5728\u6b65\u9aa45\u4e2d\uff0c\u4e00\u822c\u90fd\u662f client \u5148\u53d1\u8d77 close \u64cd\u4f5c\u3002\u5f53\u7136\u4e5f\u4e0d\u6392\u9664\u6709\u7279\u6b8a\u7684\u60c5\u51b5\u3002 \u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u770b\uff0c\u77ed\u8fde\u63a5\u4e00\u822c\u53ea\u4f1a\u5728 client/server \u95f4\u4f20\u9012\u4e00\u6b21\u8bfb\u5199\u64cd\u4f5c\uff01","title":"1. TCP\u77ed\u8fde\u63a5"},{"location":"python-web/002-\u7f51\u7edctcp/#246-tcp","text":"\u518d\u6a21\u62df\u4e00\u79cd\u957f\u8fde\u63a5\u7684\u60c5\u51b5: client \u5411 server \u53d1\u8d77\u8fde\u63a5 server \u63a5\u5230\u8bf7\u6c42\uff0c\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5 client \u5411 server \u53d1\u9001\u6d88\u606f server \u56de\u5e94 client \u4e00\u6b21\u8bfb\u5199\u5b8c\u6210\uff0c\u8fde\u63a5\u4e0d\u5173\u95ed \u540e\u7eed\u8bfb\u5199\u64cd\u4f5c... \u957f\u65f6\u95f4\u64cd\u4f5c\u4e4b\u540eclient\u53d1\u8d77\u5173\u95ed\u8bf7\u6c42","title":"2. TCP\u957f\u8fde\u63a5"},{"location":"python-web/002-\u7f51\u7edctcp/#346-tcp","text":"","title":"3. TCP\u957f/\u77ed\u8fde\u63a5\u64cd\u4f5c\u8fc7\u7a0b"},{"location":"python-web/002-\u7f51\u7edctcp/#31","text":"\u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5...\u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5","title":"3.1 \u77ed\u8fde\u63a5\u7684\u64cd\u4f5c\u6b65\u9aa4\u662f\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#32","text":"\u5efa\u7acb\u8fde\u63a5\u2014\u2014\u6570\u636e\u4f20\u8f93...\uff08\u4fdd\u6301\u8fde\u63a5\uff09...\u6570\u636e\u4f20\u8f93\u2014\u2014\u5173\u95ed\u8fde\u63a5","title":"3.2 \u957f\u8fde\u63a5\u7684\u64cd\u4f5c\u6b65\u9aa4\u662f\uff1a"},{"location":"python-web/002-\u7f51\u7edctcp/#446-tcp","text":"\u957f\u8fde\u63a5\u53ef\u4ee5\u7701\u53bb\u8f83\u591a\u7684TCP\u5efa\u7acb\u548c\u5173\u95ed\u7684\u64cd\u4f5c\uff0c\u51cf\u5c11\u6d6a\u8d39\uff0c\u8282\u7ea6\u65f6\u95f4\u3002 \u5bf9\u4e8e\u9891\u7e41\u8bf7\u6c42\u8d44\u6e90\u7684\u5ba2\u6237\u6765\u8bf4\uff0c\u8f83\u9002\u7528\u957f\u8fde\u63a5\u3002 client\u4e0eserver\u4e4b\u95f4\u7684\u8fde\u63a5\u5982\u679c\u4e00\u76f4\u4e0d\u5173\u95ed\u7684\u8bdd\uff0c\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c \u968f\u7740\u5ba2\u6237\u7aef\u8fde\u63a5\u8d8a\u6765\u8d8a\u591a\uff0cserver\u65e9\u665a\u6709\u625b\u4e0d\u4f4f\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u5019server\u7aef\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u7b56\u7565\uff0c \u5982\u5173\u95ed\u4e00\u4e9b\u957f\u65f6\u95f4\u6ca1\u6709\u8bfb\u5199\u4e8b\u4ef6\u53d1\u751f\u7684\u8fde\u63a5\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u6076\u610f\u8fde\u63a5\u5bfc\u81f4server\u7aef\u670d\u52a1\u53d7\u635f\uff1b \u5982\u679c\u6761\u4ef6\u518d\u5141\u8bb8\u5c31\u53ef\u4ee5\u4ee5\u5ba2\u6237\u7aef\u673a\u5668\u4e3a\u9897\u7c92\u5ea6\uff0c\u9650\u5236\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u6700\u5927\u957f\u8fde\u63a5\u6570\uff0c \u8fd9\u6837\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u67d0\u4e2a\u86cb\u75bc\u7684\u5ba2\u6237\u7aef\u8fde\u7d2f\u540e\u7aef\u670d\u52a1\u3002 \u77ed\u8fde\u63a5\u5bf9\u4e8e\u670d\u52a1\u5668\u6765\u8bf4\u7ba1\u7406\u8f83\u4e3a\u7b80\u5355\uff0c\u5b58\u5728\u7684\u8fde\u63a5\u90fd\u662f\u6709\u7528\u7684\u8fde\u63a5\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u624b\u6bb5\u3002 \u4f46\u5982\u679c\u5ba2\u6237\u8bf7\u6c42\u9891\u7e41\uff0c\u5c06\u5728TCP\u7684\u5efa\u7acb\u548c\u5173\u95ed\u64cd\u4f5c\u4e0a\u6d6a\u8d39\u65f6\u95f4\u548c\u5e26\u5bbd\u3002","title":"4. TCP\u957f/\u77ed\u8fde\u63a5\u7684\u4f18\u70b9\u548c\u7f3a\u70b9"},{"location":"python-web/002-\u7f51\u7edctcp/#546-tcp","text":"\u957f\u8fde\u63a5\u591a\u7528\u4e8e\u64cd\u4f5c\u9891\u7e41\uff0c\u70b9\u5bf9\u70b9\u7684\u901a\u8baf\uff0c\u800c\u4e14\u8fde\u63a5\u6570\u4e0d\u80fd\u592a\u591a\u60c5\u51b5\u3002 \u6bcf\u4e2aTCP\u8fde\u63a5\u90fd\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff0c\u8fd9\u9700\u8981\u65f6\u95f4\uff0c\u5982\u679c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u5148\u8fde\u63a5\uff0c \u518d\u64cd\u4f5c\u7684\u8bdd\u90a3\u4e48\u5904\u7406\u901f\u5ea6\u4f1a\u964d\u4f4e\u5f88\u591a\uff0c\u6240\u4ee5\u6bcf\u4e2a\u64cd\u4f5c\u5b8c\u540e\u90fd\u4e0d\u65ad\u5f00\uff0c \u518d\u6b21\u5904\u7406\u65f6\u76f4\u63a5\u53d1\u9001\u6570\u636e\u5305\u5c31OK\u4e86\uff0c\u4e0d\u7528\u5efa\u7acbTCP\u8fde\u63a5\u3002 \u4f8b\u5982\uff1a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7528\u957f\u8fde\u63a5\uff0c\u5982\u679c\u7528\u77ed\u8fde\u63a5\u9891\u7e41\u7684\u901a\u4fe1\u4f1a\u9020\u6210socket\u9519\u8bef\uff0c \u800c\u4e14\u9891\u7e41\u7684socket \u521b\u5efa\u4e5f\u662f\u5bf9\u8d44\u6e90\u7684\u6d6a\u8d39\u3002 \u800c\u50cfWEB\u7f51\u7ad9\u7684http\u670d\u52a1\u4e00\u822c\u90fd\u7528\u77ed\u94fe\u63a5\uff0c\u56e0\u4e3a\u957f\u8fde\u63a5\u5bf9\u4e8e\u670d\u52a1\u7aef\u6765\u8bf4\u4f1a\u8017\u8d39\u4e00\u5b9a\u7684\u8d44\u6e90\uff0c \u800c\u50cfWEB\u7f51\u7ad9\u8fd9\u4e48\u9891\u7e41\u7684\u6210\u5343\u4e0a\u4e07\u751a\u81f3\u4e0a\u4ebf\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u7528\u77ed\u8fde\u63a5\u4f1a\u66f4\u7701\u4e00\u4e9b\u8d44\u6e90\uff0c \u5982\u679c\u7528\u957f\u8fde\u63a5\uff0c\u800c\u4e14\u540c\u65f6\u6709\u6210\u5343\u4e0a\u4e07\u7684\u7528\u6237\uff0c\u5982\u679c\u6bcf\u4e2a\u7528\u6237\u90fd\u5360\u7528\u4e00\u4e2a\u8fde\u63a5\u7684\u8bdd\uff0c \u90a3\u53ef\u60f3\u800c\u77e5\u5427\u3002\u6240\u4ee5\u5e76\u53d1\u91cf\u5927\uff0c\u4f46\u6bcf\u4e2a\u7528\u6237\u65e0\u9700\u9891\u7e41\u64cd\u4f5c\u60c5\u51b5\u4e0b\u9700\u7528\u77ed\u8fde\u597d\u3002","title":"5. TCP\u957f/\u77ed\u8fde\u63a5\u7684\u5e94\u7528\u573a\u666f"},{"location":"python-web/002-\u7f51\u7edctcp/#wireshark","text":"","title":"wireshark\u6293\u5305\u5de5\u5177\u4f7f\u7528"},{"location":"python-web/002-\u7f51\u7edctcp/#146-wireshark","text":"","title":"1. \u5b89\u88c5wireshark"},{"location":"python-web/002-\u7f51\u7edctcp/#246-wireshark","text":"","title":"2. wireshark\u7684\u4f7f\u7528"},{"location":"python-web/002-\u7f51\u7edctcp/#410tcp-ip","text":"\u4f5c\u4e3a\u65b0\u65f6\u4ee3\u6807\u6746\u7684\u6211\u4eec\uff0c\u5df2\u7ecf\u79bb\u4e0d\u5f00\u624b\u673a\u3001\u79bb\u4e0d\u5f00\u7f51\u7edc\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u5927\u5bb6\u53ef\u80fd\u8033\u719f\u80fd\u8be6\uff0c\u4f46\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u51fa\u73b0\u6bd4\u4e92\u8054\u7f51\u8981\u65e9\u5f88\u591a","title":"4.10tcp-ip\u7b80\u4ecb"},{"location":"python-web/002-\u7f51\u7edctcp/#146_1","text":"\u6709\u7684\u8bf4\u82f1\u8bed\uff0c\u6709\u7684\u8bf4\u4e2d\u6587\uff0c\u6709\u7684\u8bf4\u5fb7\u8bed\uff0c\u8bf4\u540c\u4e00\u79cd\u8bed\u8a00\u7684\u4eba\u53ef\u4ee5\u4ea4\u6d41\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u4e4b\u95f4\u5c31\u4e0d\u884c\u4e86 \u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u79cd\u65cf\u4eba\u4e4b\u95f4\u7684\u8bed\u8a00\u6c9f\u901a\u969c\u788d\uff0c\u73b0\u89c4\u5b9a\u56fd\u9645\u901a\u7528\u8bed\u8a00\u662f\u82f1\u8bed\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u89c4\u5b9a\uff0c\u8fd9\u5c31\u662f\u534f\u8bae","title":"1. \u4ec0\u4e48\u662f\u534f\u8bae"},{"location":"python-web/002-\u7f51\u7edctcp/#246_1","text":"\u73b0\u5728\u7684\u751f\u6d3b\u4e2d\uff0c\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u53ea\u9700\u8981\u80fd\u591f\u8054\u7f51\uff08\u6709\u7ebf\u65e0\u7ebf\u90fd\u53ef\u4ee5\uff09\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f8\u4e92\u8fdb\u884c\u4f20\u9012\u6570\u636e \u90a3\u4e48\u4e0d\u540c\u79cd\u7c7b\u4e4b\u95f4\u7684\u8ba1\u7b97\u673a\u5230\u5e95\u662f\u600e\u4e48\u8fdb\u884c\u6570\u636e\u4f20\u9012\u7684\u5462\uff1f \u5c31\u50cf\u8bf4\u4e0d\u540c\u8bed\u8a00\u7684\u4eba\u6c9f\u901a\u4e00\u6837\uff0c\u53ea\u8981\u6709\u4e00\u79cd\u5927\u5bb6\u90fd\u8ba4\u53ef\u90fd\u9075\u5b88\u7684\u534f\u8bae\u5373\u53ef\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8ba1\u7b97\u673a\u90fd\u9075\u5b88\u7684\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\u53eb\u505a TCP/IP\u534f\u8bae","title":"2. \u8ba1\u7b97\u673a\u7f51\u7edc\u6c9f\u901a\u7528\u4ec0\u4e48"},{"location":"python-web/002-\u7f51\u7edctcp/#346-tcpip","text":"\u65e9\u671f\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\uff0c\u90fd\u662f\u7531\u5404\u5382\u5546\u81ea\u5df1\u89c4\u5b9a\u4e00\u5957\u534f\u8bae\uff0cIBM\u3001Apple\u548cMicrosoft\u90fd\u6709\u5404\u81ea\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u4e92\u4e0d\u517c\u5bb9 \u4e3a\u4e86\u628a\u5168\u4e16\u754c\u7684\u6240\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u90fd\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u5fc5\u987b\u89c4\u5b9a\u4e00\u5957\u5168\u7403\u901a\u7528\u7684\u534f\u8bae\uff0c\u4e3a\u4e86\u5b9e\u73b0\u4e92\u8054\u7f51\u8fd9\u4e2a\u76ee\u6807\uff0c\u4e92\u8054\u7f51\u534f\u8bae\u65cf\uff08Internet Protocol Suite\uff09\u5c31\u662f\u901a\u7528\u534f\u8bae\u6807\u51c6\u3002 \u56e0\u4e3a\u4e92\u8054\u7f51\u534f\u8bae\u5305\u542b\u4e86\u4e0a\u767e\u79cd\u534f\u8bae\u6807\u51c6\uff0c\u4f46\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u534f\u8bae\u662fTCP\u548cIP\u534f\u8bae\uff0c\u6240\u4ee5\uff0c\u5927\u5bb6\u628a\u4e92\u8054\u7f51\u7684\u534f\u8bae\u7b80\u79f0TCP/IP\u534f\u8bae(\u65cf) \u5e38\u7528\u7684\u7f51\u7edc\u534f\u8bae\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bf4\u660e\uff1a \u7f51\u9645\u5c42\u4e5f\u79f0\u4e3a\uff1a\u7f51\u7edc\u5c42 \u7f51\u7edc\u63a5\u53e3\u5c42\u4e5f\u79f0\u4e3a\uff1a\u94fe\u8def\u5c42","title":"3. TCP/IP\u534f\u8bae(\u65cf)"},{"location":"python-web/002-\u7f51\u7edctcp/#_5","text":"","title":"\u53e6\u5916\u4e00\u5957\u6807\u51c6"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/","text":"9.1. http\u534f\u8bae \u00b6 HTTP\u534f\u8bae\u7b80\u4ecb \u00b6 1. \u4f7f\u7528\u8c37\u6b4c/\u706b\u72d0\u6d4f\u89c8\u5668\u5206\u6790 \u00b6 \u5728Web\u5e94\u7528\u4e2d\uff0c\u670d\u52a1\u5668\u628a\u7f51\u9875\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u7f51\u9875\u7684HTML\u4ee3\u7801\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\uff0c\u8ba9\u6d4f\u89c8\u5668\u663e\u793a\u51fa\u6765\u3002\u800c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4f20\u8f93\u534f\u8bae\u662fHTTP\uff0c\u6240\u4ee5\uff1a HTML\u662f\u4e00\u79cd\u7528\u6765\u5b9a\u4e49\u7f51\u9875\u7684\u6587\u672c\uff0c\u4f1aHTML\uff0c\u5c31\u53ef\u4ee5\u7f16\u5199\u7f51\u9875\uff1b HTTP\u662f\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93HTML\u7684\u534f\u8bae\uff0c\u7528\u4e8e\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u901a\u4fe1\u3002 Chrome\u6d4f\u89c8\u5668\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u5730\u8c03\u8bd5\u5de5\u5177\uff0c\u975e\u5e38\u9002\u5408Web\u5f00\u53d1\u3002 \u5b89\u88c5\u597dChrome\u6d4f\u89c8\u5668\u540e\uff0c\u6253\u5f00Chrome\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u89c6\u56fe\u201d\uff0c\u201c\u5f00\u53d1\u8005\u201d\uff0c\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\uff0c\u5c31\u53ef\u4ee5\u663e\u793a\u5f00\u53d1\u8005\u5de5\u5177\uff1a \u8bf4\u660e \u00b6 Elements\u663e\u793a\u7f51\u9875\u7684\u7ed3\u6784 Network\u663e\u793a\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u901a\u4fe1 \u6211\u4eec\u70b9Network\uff0c\u786e\u4fdd\u7b2c\u4e00\u4e2a\u5c0f\u7ea2\u706f\u4eae\u7740\uff0cChrome\u5c31\u4f1a\u8bb0\u5f55\u6240\u6709\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\uff1a 2. http\u534f\u8bae\u7684\u5206\u6790 \u00b6 \u5f53\u6211\u4eec\u5728\u5730\u5740\u680f\u8f93\u5165www.sina.com\u65f6\uff0c\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u65b0\u6d6a\u7684\u9996\u9875\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6d4f\u89c8\u5668\u90fd\u5e72\u4e86\u54ea\u4e9b\u4e8b\u60c5\u5462\uff1f\u901a\u8fc7Network\u7684\u8bb0\u5f55\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u3002\u5728Network\u4e2d\uff0c\u627e\u5230www.sina.com\u90a3\u6761\u8bb0\u5f55\uff0c\u70b9\u51fb\uff0c\u53f3\u4fa7\u5c06\u663e\u793aRequest Headers\uff0c\u70b9\u51fb\u53f3\u4fa7\u7684view source\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6d4f\u89c8\u5668\u53d1\u7ed9\u65b0\u6d6a\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff1a 2.1 \u6d4f\u89c8\u5668\u8bf7\u6c42 \u00b6 \u8bf4\u660e \u00b6 \u6700\u4e3b\u8981\u7684\u5934\u4e24\u884c\u5206\u6790\u5982\u4e0b\uff0c\u7b2c\u4e00\u884c\uff1a GET / HTTP/1.1 GET\u8868\u793a\u4e00\u4e2a\u8bfb\u53d6\u8bf7\u6c42\uff0c\u5c06\u4ece\u670d\u52a1\u5668\u83b7\u5f97\u7f51\u9875\u6570\u636e\uff0c/\u8868\u793aURL\u7684\u8def\u5f84\uff0cURL\u603b\u662f\u4ee5/\u5f00\u5934\uff0c/\u5c31\u8868\u793a\u9996\u9875\uff0c\u6700\u540e\u7684HTTP/1.1\u6307\u793a\u91c7\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\u662f1.1\u3002\u76ee\u524dHTTP\u534f\u8bae\u7684\u7248\u672c\u5c31\u662f1.1\uff0c\u4f46\u662f\u5927\u90e8\u5206\u670d\u52a1\u5668\u4e5f\u652f\u63011.0\u7248\u672c\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e1.1\u7248\u672c\u5141\u8bb8\u591a\u4e2aHTTP\u8bf7\u6c42\u590d\u7528\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u4ee5\u52a0\u5feb\u4f20\u8f93\u901f\u5ea6\u3002 \u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\uff0c\u6bcf\u4e00\u884c\u90fd\u7c7b\u4f3c\u4e8eXxx: abcdefg\uff1a Host: www.sina.com \u8868\u793a\u8bf7\u6c42\u7684\u57df\u540d\u662fwww.sina.com\u3002\u5982\u679c\u4e00\u53f0\u670d\u52a1\u5668\u6709\u591a\u4e2a\u7f51\u7ad9\uff0c\u670d\u52a1\u5668\u5c31\u9700\u8981\u901a\u8fc7Host\u6765\u533a\u5206\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u662f\u54ea\u4e2a\u7f51\u7ad9\u3002 2.2 \u670d\u52a1\u5668\u54cd\u5e94 \u00b6 \u7ee7\u7eed\u5f80\u4e0b\u627e\u5230Response Headers\uff0c\u70b9\u51fbview source\uff0c\u663e\u793a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u539f\u59cb\u54cd\u5e94\u6570\u636e\uff1a HTTP\u54cd\u5e94\u5206\u4e3aHeader\u548cBody\u4e24\u90e8\u5206\uff08Body\u662f\u53ef\u9009\u9879\uff09\uff0c\u6211\u4eec\u5728Network\u4e2d\u770b\u5230\u7684Header\u6700\u91cd\u8981\u7684\u51e0\u884c\u5982\u4e0b\uff1a HTTP/1.1 200 OK 200\u8868\u793a\u4e00\u4e2a\u6210\u529f\u7684\u54cd\u5e94\uff0c\u540e\u9762\u7684OK\u662f\u8bf4\u660e\u3002 \u5982\u679c\u8fd4\u56de\u7684\u4e0d\u662f200\uff0c\u90a3\u4e48\u5f80\u5f80\u6709\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u4f8b\u5982 \u5931\u8d25\u7684\u54cd\u5e94\u6709404 Not Found\uff1a\u7f51\u9875\u4e0d\u5b58\u5728 500 Internal Server Error\uff1a\u670d\u52a1\u5668\u5185\u90e8\u51fa\u9519 ...\u7b49\u7b49... Content-Type: text/html Content-Type\u6307\u793a\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u662ftext/html\u8868\u793aHTML\u7f51\u9875\u3002 \u8bf7\u6ce8\u610f\uff0c\u6d4f\u89c8\u5668\u5c31\u662f\u4f9d\u9760Content-Type\u6765\u5224\u65ad\u54cd\u5e94\u7684\u5185\u5bb9\u662f\u7f51\u9875\u8fd8\u662f\u56fe\u7247\uff0c\u662f\u89c6\u9891\u8fd8\u662f\u97f3\u4e50\u3002\u6d4f\u89c8\u5668\u5e76\u4e0d\u9760URL\u6765\u5224\u65ad\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\uff0c\u5373\u4f7fURL\u662f http://www.baidu.com/meimei.jpg \uff0c\u5b83\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u662f\u56fe\u7247\u3002 HTTP\u54cd\u5e94\u7684Body\u5c31\u662fHTML\u6e90\u7801\uff0c\u6211\u4eec\u5728\u83dc\u5355\u680f\u9009\u62e9\u201c\u89c6\u56fe\u201d\uff0c\u201c\u5f00\u53d1\u8005\u201d\uff0c\u201c\u67e5\u770b\u7f51\u9875\u6e90\u7801\u201d\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u76f4\u63a5\u67e5\u770bHTML\u6e90\u7801\uff1a \u6d4f\u89c8\u5668\u89e3\u6790\u8fc7\u7a0b \u00b6 \u5f53\u6d4f\u89c8\u5668\u8bfb\u53d6\u5230\u65b0\u6d6a\u9996\u9875\u7684HTML\u6e90\u7801\u540e\uff0c\u5b83\u4f1a\u89e3\u6790HTML\uff0c\u663e\u793a\u9875\u9762\uff0c\u7136\u540e\uff0c\u6839\u636eHTML\u91cc\u9762\u7684\u5404\u79cd\u94fe\u63a5\uff0c\u518d\u53d1\u9001HTTP\u8bf7\u6c42\u7ed9\u65b0\u6d6a\u670d\u52a1\u5668\uff0c\u62ff\u5230\u76f8\u5e94\u7684\u56fe\u7247\u3001\u89c6\u9891\u3001Flash\u3001JavaScript\u811a\u672c\u3001CSS\u7b49\u5404\u79cd\u8d44\u6e90\uff0c\u6700\u7ec8\u663e\u793a\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762\u3002\u6240\u4ee5\u6211\u4eec\u5728Network\u4e0b\u9762\u80fd\u770b\u5230\u5f88\u591a\u989d\u5916\u7684HTTP\u8bf7\u6c42\u3002 3. \u603b\u7ed3 \u00b6 3.1 HTTP\u8bf7\u6c42 \u00b6 \u8ddf\u8e2a\u4e86\u65b0\u6d6a\u7684\u9996\u9875\uff0c\u6211\u4eec\u6765\u603b\u7ed3\u4e00\u4e0bHTTP\u8bf7\u6c42\u7684\u6d41\u7a0b\uff1a 3.1.1 \u6b65\u9aa41\uff1a\u6d4f\u89c8\u5668\u9996\u5148\u5411\u670d\u52a1\u5668\u53d1\u9001HTTP\u8bf7\u6c42\uff0c\u8bf7\u6c42\u5305\u62ec\uff1a \u00b6 \u65b9\u6cd5\uff1aGET\u8fd8\u662fPOST\uff0cGET\u4ec5\u8bf7\u6c42\u8d44\u6e90\uff0cPOST\u4f1a\u9644\u5e26\u7528\u6237\u6570\u636e\uff1b \u8def\u5f84\uff1a/full/url/path\uff1b \u57df\u540d\uff1a\u7531Host\u5934\u6307\u5b9a\uff1aHost: www.sina.com \u4ee5\u53ca\u5176\u4ed6\u76f8\u5173\u7684Header\uff1b \u5982\u679c\u662fPOST\uff0c\u90a3\u4e48\u8bf7\u6c42\u8fd8\u5305\u62ec\u4e00\u4e2aBody\uff0c\u5305\u542b\u7528\u6237\u6570\u636e 3.1.1 \u6b65\u9aa42\uff1a\u670d\u52a1\u5668\u5411\u6d4f\u89c8\u5668\u8fd4\u56deHTTP\u54cd\u5e94\uff0c\u54cd\u5e94\u5305\u62ec\uff1a \u00b6 \u54cd\u5e94\u4ee3\u7801\uff1a200\u8868\u793a\u6210\u529f\uff0c3xx\u8868\u793a\u91cd\u5b9a\u5411\uff0c4xx\u8868\u793a\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c5xx\u8868\u793a\u670d\u52a1\u5668\u7aef\u5904\u7406\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff1b \u54cd\u5e94\u7c7b\u578b\uff1a\u7531Content-Type\u6307\u5b9a\uff1b \u4ee5\u53ca\u5176\u4ed6\u76f8\u5173\u7684Header\uff1b \u901a\u5e38\u670d\u52a1\u5668\u7684HTTP\u54cd\u5e94\u4f1a\u643a\u5e26\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u6709\u4e00\u4e2aBody\uff0c\u5305\u542b\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u7f51\u9875\u7684HTML\u6e90\u7801\u5c31\u5728Body\u4e2d\u3002 3.1.1 \u6b65\u9aa43\uff1a\u5982\u679c\u6d4f\u89c8\u5668\u8fd8\u9700\u8981\u7ee7\u7eed\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u56fe\u7247\uff0c\u5c31\u518d\u6b21\u53d1\u51faHTTP\u8bf7\u6c42\uff0c\u91cd\u590d\u6b65\u9aa41\u30012\u3002 \u00b6 Web\u91c7\u7528\u7684HTTP\u534f\u8bae\u91c7\u7528\u4e86\u975e\u5e38\u7b80\u5355\u7684\u8bf7\u6c42-\u54cd\u5e94\u6a21\u5f0f\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u5f00\u53d1\u3002\u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728HTTP\u8bf7\u6c42\u4e2d\u628aHTML\u53d1\u9001\u51fa\u53bb\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5982\u4f55\u9644\u5e26\u56fe\u7247\u3001\u89c6\u9891\u7b49\uff0c\u6d4f\u89c8\u5668\u5982\u679c\u9700\u8981\u8bf7\u6c42\u56fe\u7247\u548c\u89c6\u9891\uff0c\u5b83\u4f1a\u53d1\u9001\u53e6\u4e00\u4e2aHTTP\u8bf7\u6c42\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ea\u5904\u7406\u4e00\u4e2a\u8d44\u6e90(\u6b64\u65f6\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3aTCP\u534f\u8bae\u4e2d\u7684\u77ed\u8fde\u63a5\uff0c\u6bcf\u4e2a\u94fe\u63a5\u53ea\u83b7\u53d6\u4e00\u4e2a\u8d44\u6e90\uff0c\u5982\u9700\u8981\u591a\u4e2a\u5c31\u9700\u8981\u5efa\u7acb\u591a\u4e2a\u94fe\u63a5) HTTP\u534f\u8bae\u540c\u65f6\u5177\u5907\u6781\u5f3a\u7684\u6269\u5c55\u6027\uff0c\u867d\u7136\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u662f http://www.sina.com \u7684\u9996\u9875\uff0c\u4f46\u662f\u65b0\u6d6a\u5728HTML\u4e2d\u53ef\u4ee5\u94fe\u5165\u5176\u4ed6\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u6bd4\u5982 <img src=\"http://i1.sinaimg.cn/home/2013/1008/U8455P30DT20131008135420.png\"> \uff0c\u4ece\u800c\u5c06\u8bf7\u6c42\u538b\u529b\u5206\u6563\u5230\u5404\u4e2a\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u4e14\uff0c\u4e00\u4e2a\u7ad9\u70b9\u53ef\u4ee5\u94fe\u63a5\u5230\u5176\u4ed6\u7ad9\u70b9\uff0c\u65e0\u6570\u4e2a\u7ad9\u70b9\u4e92\u76f8\u94fe\u63a5\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86World Wide Web\uff0c\u7b80\u79f0WWW\u3002 3.2 HTTP\u683c\u5f0f \u00b6 \u6bcf\u4e2aHTTP\u8bf7\u6c42\u548c\u54cd\u5e94\u90fd\u9075\u5faa\u76f8\u540c\u7684\u683c\u5f0f\uff0c\u4e00\u4e2aHTTP\u5305\u542bHeader\u548cBody\u4e24\u90e8\u5206\uff0c\u5176\u4e2dBody\u662f\u53ef\u9009\u7684\u3002 HTTP\u534f\u8bae\u662f\u4e00\u79cd\u6587\u672c\u534f\u8bae\uff0c\u6240\u4ee5\uff0c\u5b83\u7684\u683c\u5f0f\u4e5f\u975e\u5e38\u7b80\u5355\u3002 3.2.1 HTTP GET\u8bf7\u6c42\u7684\u683c\u5f0f\uff1a \u00b6 GET /path HTTP/1.1 Header1: Value1 Header2: Value2 Header3: Value3 \u6bcf\u4e2aHeader\u4e00\u884c\u4e00\u4e2a\uff0c\u6362\u884c\u7b26\u662f\\r\\n\u3002 3.2.2 HTTP POST\u8bf7\u6c42\u7684\u683c\u5f0f\uff1a \u00b6 POST /path HTTP/1.1 Header1: Value1 Header2: Value2 Header3: Value3 body data goes here... \u5f53\u9047\u5230\u8fde\u7eed\u4e24\u4e2a\\r\\n(\u6709\u4e00\u4e2a\u7a7a\u884c)\u65f6\uff0cHeader\u90e8\u5206\u7ed3\u675f\uff0c\u540e\u9762\u7684\u6570\u636e\u5168\u90e8\u662fBody\u3002 3.2.3 HTTP\u54cd\u5e94\u7684\u683c\u5f0f\uff1a \u00b6 200 OK Header1: Value1 Header2: Value2 Header3: Value3 body data goes here... HTTP\u54cd\u5e94\u5982\u679c\u5305\u542bbody\uff0c\u4e5f\u662f\u901a\u8fc7\\r\\n\\r\\n\u6765\u5206\u9694\u7684\u3002 \u8bf7\u518d\u6b21\u6ce8\u610f\uff0cBody\u7684\u6570\u636e\u7c7b\u578b\u7531Content-Type\u5934\u6765\u786e\u5b9a\uff0c\u5982\u679c\u662f\u7f51\u9875\uff0cBody\u5c31\u662f\u6587\u672c\uff0c\u5982\u679c\u662f\u56fe\u7247\uff0cBody\u5c31\u662f\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u5f53\u5b58\u5728Content-Encoding\u65f6\uff0cBody\u6570\u636e\u662f\u88ab\u538b\u7f29\u7684\uff0c\u6700\u5e38\u89c1\u7684\u538b\u7f29\u65b9\u5f0f\u662fgzip\uff0c\u6240\u4ee5\uff0c\u770b\u5230Content-Encoding: gzip\u65f6\uff0c\u9700\u8981\u5c06Body\u6570\u636e\u5148\u89e3\u538b\u7f29\uff0c\u624d\u80fd\u5f97\u5230\u771f\u6b63\u7684\u6570\u636e\u3002\u538b\u7f29\u7684\u76ee\u7684\u5728\u4e8e\u51cf\u5c11Body\u7684\u5927\u5c0f\uff0c\u52a0\u5feb\u7f51\u7edc\u4f20\u8f93\u3002 \u6d4f\u89c8\u5668---->\u670d\u52a1\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u683c\u5f0f\u5982\u4e0b\uff1a GET / HTTP/1.1 //\u8bf7\u6c42\u7684\u65f6\u5019\u5fc5\u987b\u6709 Host: 127.0.0.1:8080 Connection: keep-alive Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 Accept-Encoding: gzip, deflate, sdch Accept-Language: zh-CN,zh;q=0.8 \u670d\u52a1\u5668--->\u6d4f\u89c8\u5668\u56de\u9001\u7684\u6570\u636e\u683c\u5f0f\u5982\u4e0b: HTTP/1.1 200 OK //\u8fd4\u56de\u5fc5\u987b\u8981\u6709 Bdpagetype: 1 Bdqid: 0xe87cb3f700023783 Bduserid: 0 Cache-Control: private Connection: Keep-Alive Content-Encoding: gzip Content-Type: text/html; charset=utf-8 Cxy_all: baidu+55617f8533383cbe48d5d2b7dc84b7f0 Date: Fri, 20 Oct 2017 00:59:55 GMT Expires: Fri, 20 Oct 2017 00:59:11 GMT Server: BWS/1.1 Set-Cookie: BDSVRTM=0; path=/ Set-Cookie: BD_HOME=0; path=/ Set-Cookie: H_PS_PSSID=1463_21080_17001_20929; path=/; domain=.baidu.com Strict-Transport-Security: max-age=172800 Vary: Accept-Encoding X-Powered-By: HPHP X-Ua-Compatible: IE=Edge,chrome=1 Transfer-Encoding: chunked < h1 > haha </ h1 > //\u8fd9\u662f\u8fd4\u56de\u7684\u5185\u5bb9 9.2. Web\u9759\u6001\u670d\u52a1\u5668-1-\u663e\u793a\u56fa\u5b9a\u7684\u9875\u9762 \u00b6 Web\u9759\u6001\u670d\u52a1\u5668-1-\u663e\u793a\u56fa\u5b9a\u7684\u9875\u9762 \u00b6 #coding=utf-8 import socket def handle_client ( client_socket ): \"\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( \"utf-8\" ) request_header_lines = recv_data . splitlines () for line in request_header_lines : print ( line ) # \u7ec4\u7ec7\u76f8\u5e94 \u5934\u4fe1\u606f(header) response_headers = \"HTTP/1.1 200 OK \\r\\n \" # 200\u8868\u793a\u627e\u5230\u8fd9\u4e2a\u8d44\u6e90 response_headers += \" \\r\\n \" # \u7528\u4e00\u4e2a\u7a7a\u7684\u884c\u4e0ebody\u8fdb\u884c\u9694\u5f00 # \u7ec4\u7ec7 \u5185\u5bb9(body) response_body = \"hello world\" response = response_headers + response_body client_socket . send ( response . encode ( \"utf-8\" )) client_socket . close () def main (): \"\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u4e3b\u63a7\u5236\u5165\u53e3\" server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u8bbe\u7f6e\u5f53\u670d\u52a1\u5668\u5148close \u5373\u670d\u52a1\u5668\u7aef4\u6b21\u6325\u624b\u4e4b\u540e\u8d44\u6e90\u80fd\u591f\u7acb\u5373\u91ca\u653e\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\uff0c\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6 \u53ef\u4ee5\u7acb\u5373\u7ed1\u5b9a7788\u7aef\u53e3 server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) server_socket . bind (( \"\" , 7788 )) server_socket . listen ( 128 ) while True : client_socket , client_addr = server_socket . accept () handle_client ( client_socket ) if __name__ == \"__main__\" : main () \u670d\u52a1\u5668\u7aef \u00b6 \u5ba2\u6237\u7aef \u00b6 \u624b\u6572\u4ee3\u7801: # -*- coding: utf-8 -*- import socket def service_client ( new_socket ): \"\"\"\u4e3a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1.\u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42,\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # .... request = new_socket . recv ( 1024 ) #\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u6570\u636e print ( request ) # 2.\u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e # 2.1\u51c6\u5907\u7ed9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u6570\u636e --header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u7ed9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u6570\u636e --boday response += \"hehe\" new_socket . send ( response . encode ( \"gbk\" )) #\u6570\u636e\u7684\u8fd4\u56de #\u5173\u95ed\u5957\u63a5\u5b57 new_socket . close () def main (): \"\"\"\u7528\u6765\u8fdb\u884c\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1.\u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #AF_INET ipv4 stream\u65f6\u6d41\u7684\u610f\u601d # \u8bbe\u7f6e\u5f53\u670d\u52a1\u5668\u5148close \u5373\u670d\u52a1\u5668\u7aef4\u6b21\u6325\u624b\u4e4b\u540e\u8d44\u6e90\u80fd\u591f\u7acb\u5373\u91ca\u653e\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\uff0c\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6 \u53ef\u4ee5\u7acb\u5373\u7ed1\u5b9a7890\u7aef\u53e3 server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) #\u7ed1\u5b9a\u9ed8\u8ba4\u7684ip\u4ee5\u53ca\u7aef\u53e3\u53f7 # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 service_client ( new_socket ) #\u5c06\u63a5\u6536\u5230\u7684\u5ba2\u6237\u5bf9\u8c61\u8fdb\u884c\u63a5\u6536 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () 9.3. Web\u9759\u6001\u670d\u52a1\u5668-2-\u663e\u793a\u9700\u8981\u7684\u9875\u9762 \u00b6 Web\u9759\u6001\u670d\u52a1\u5668-2-\u663e\u793a\u9700\u8981\u7684\u9875\u9762 \u00b6 03-\u8fd4\u56deinde.html\u9875\u9762.py import socket def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) print ( \">>>\" * 50 ) print ( request ) # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" f = open ( \"./html/index.html\" , \"rb\" ) html_content = f . read () f . close () # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 service_client ( new_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u670d\u52a1\u5668\u7aef \u00b6 \u5ba2\u6237\u7aef \u00b6 04-\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u8fd4\u56de\u76f8\u5e94\u7684\u9875\u9762.py import socket import re def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) #\u5bf9\u63a5\u6536\u7684\u6570\u636e\u8fdb\u884c\u89e3\u7801 # print(\">>>\"*50) # print(request) request_lines = request . splitlines () #\u5c06\u5b57\u7b26\u4e32\u6bcf\u4e00\u884c\u5207\u5272\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) #[^/]+\u5339\u914d\u4e0d\u662f/\u6709\u591a\u4e2a,[^ ]* \u5339\u914d\u975e\u7a7a\u683c\u5b57\u7b26\u96f6\u4e2a\u6216\u591a\u4e2a #\u5982\u679c\u5339\u914d\u5230\u4e86\u6570\u636e\u7684\u8bdd\u90a3\u4e48\u5c31\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 #\u5c1d\u8bd5\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6 try : f = open ( \"./html\" + file_name , \"rb\" ) except : #try\u4e0d\u80fd\u6b63\u5e38\u7684\u6267\u884c\u5c31\u662f\u8bf4\u660e\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u7684\u8bdd\u5c31\u8fd4\u56de404 response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : #else\u6267\u884c\u7684\u6761\u4ef6\u662ftry\u80fd\u591f\u6b63\u5e38\u6267\u884c #finally\u662f\u4e00\u5b9a\u4f1a\u6267\u884c html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 service_client ( new_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u66f4\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re def handle_client ( client_socket ): \"\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' , errors = \"ignore\" ) request_header_lines = recv_data . splitlines () for line in request_header_lines : print ( line ) http_request_line = request_header_lines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , http_request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8bbf\u95ee\u54ea\u4e2a\u9875\u9762\u3002\u4f8b\u5982index.html # GET / HTTP/1.1 if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) #for test try : f = open ( get_file_name , \"rb\" ) except IOError : # 404\u8868\u793a\u6ca1\u6709\u8fd9\u4e2a\u9875\u9762 response_headers = \"HTTP/1.1 404 not found \\r\\n \" response_headers += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_headers = \"HTTP/1.1 200 OK \\r\\n \" response_headers += \" \\r\\n \" response_body = f . read () f . close () finally : # \u56e0\u4e3a\u5934\u4fe1\u606f\u5728\u7ec4\u7ec7\u7684\u65f6\u5019\uff0c\u662f\u6309\u7167\u5b57\u7b26\u4e32\u7ec4\u7ec7\u7684\uff0c\u4e0d\u80fd\u4e0e\u4ee5\u4e8c\u8fdb\u5236\u6253\u5f00\u6587\u4ef6\u8bfb\u53d6\u7684\u6570\u636e\u5408\u5e76\uff0c\u56e0\u6b64\u5206\u5f00\u53d1\u9001 # \u5148\u53d1\u9001response\u7684\u5934\u4fe1\u606f client_socket . send ( response_headers . encode ( 'utf-8' )) # \u518d\u53d1\u9001body client_socket . send ( response_body ) client_socket . close () def main (): \"\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u4e3b\u63a7\u5236\u5165\u53e3\" server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) server_socket . bind (( \"\" , 7788 )) server_socket . listen ( 128 ) while True : client_socket , clien_cAddr = server_socket . accept () handle_client ( client_socket ) #\u8fd9\u91cc\u914d\u7f6e\u670d\u52a1\u5668 DOCUMENTS_ROOT = \"./html\" if __name__ == \"__main__\" : main () 9.4. Web\u9759\u6001\u670d\u52a1\u5668-3-\u591a\u8fdb\u7a0b \u00b6 import socket import re import multiprocessing #\u5bfc\u5165\u591a\u8fdb\u7a0b\u7684\u5305 def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b,\u76ee\u6807\u662fservice_client\u51fd\u6570,\u4f20\u5165\u7684\u53c2\u6570\u662f\u65b0\u7684\u5ba2\u6237\u7aef,\u6ce8\u610f\u7684\u662f\u540e\u9762\u6709\u4e00\u4e2a, p = multiprocessing . Process ( target = service_client , args = ( new_socket ,)) p . start () new_socket . close () #\u8fd9\u91cc\u4e00\u5b9a\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u590d\u5236\u4e86\u4e00\u4efd\u7236\u8fdb\u7a0b(new_socket)\u6240\u4ee5\u5148\u628a\u7236\u7684\u5173\u4e86,\u540e\u9762\u5b50\u8fdb\u7a0b\u5173\u95ed\u7684\u65f6\u5019\u624d\u80fd\u5173\u95ed # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u4e3a\u4ec0\u4e48\u7236\u8fdb\u7a0b\u4e5f\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u662f\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u7236\u8fdb\u7a0b\u90fd\u4f1a\u6307\u5411\u8fd9\u4e2a\u5ba2\u6237\u7aef,\u7236\u8fdb\u7a0b\u5173\u95ed\u4e0d\u4f1a\u771f\u7684\u5173\u4e86\u5ba2\u6237\u7aef\u53ea\u7528\u5b50\u8fdb\u7a0b\u5173\u95ed\u4e86\u4e4b\u540e\u624d\u4f1a\u771f\u7684\u5173\u95ed\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u56db\u6b21\u6325\u624b\u7684\u64cd\u4f5c. \u66f4\u52a0\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re import multiprocessing class WSGIServer ( object ): def __init__ ( self , server_address ): # \u521b\u5efa\u4e00\u4e2atcp\u5957\u63a5\u5b57 self . listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u5141\u8bb8\u7acb\u5373\u4f7f\u7528\u4e0a\u6b21\u7ed1\u5b9a\u7684port self . listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a self . listen_socket . bind ( server_address ) # \u53d8\u4e3a\u88ab\u52a8\uff0c\u5e76\u5236\u5b9a\u961f\u5217\u7684\u957f\u5ea6 self . listen_socket . listen ( 128 ) def serve_forever ( self ): \"\u5faa\u73af\u8fd0\u884cweb\u670d\u52a1\u5668\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u5e76\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\" while True : # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u5230\u6765 client_socket , client_address = self . listen_socket . accept () print ( client_address ) # for test new_process = multiprocessing . Process ( target = self . handleRequest , args = ( client_socket ,)) new_process . start () # \u56e0\u4e3a\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u7684\u5957\u63a5\u5b57\u7b49\u8d44\u6e90\uff0c\u6240\u4ee5\u7236\u8fdb\u7a0b\u8c03\u7528close\u4e0d\u4f1a\u5c06\u4ed6\u4eec\u5bf9\u5e94\u7684\u8fd9\u4e2a\u94fe\u63a5\u5173\u95ed\u7684 client_socket . close () def handleRequest ( self , client_socket ): \"\u7528\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) print ( recv_data ) requestHeaderLines = recv_data . splitlines () for line in requestHeaderLines : print ( line ) request_line = requestHeaderLines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) # for test try : f = open ( get_file_name , \"rb\" ) except IOError : response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \" \\r\\n \" response_body = f . read () f . close () finally : client_socket . send ( response_header . encode ( 'utf-8' )) client_socket . send ( response_body ) client_socket . close () # \u8bbe\u5b9a\u670d\u52a1\u5668\u7684\u7aef\u53e3 SERVER_ADDR = ( HOST , PORT ) = \"\" , 8888 # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): httpd = WSGIServer ( SERVER_ADDR ) print ( \"web Server: Serving HTTP on port %d ... \\n \" % PORT ) httpd . serve_forever () if __name__ == \"__main__\" : main () 9.5. Web\u9759\u6001\u670d\u52a1\u5668-4-\u591a\u7ebf\u7a0b \u00b6 Web\u9759\u6001\u670d\u52a1\u5668-4-\u591a\u7ebf\u7a0b \u00b6 \u4f7f\u7528\u7ebf\u7a0b\u7684\u65f6\u5019\u662f\u4e0d\u7528\u5728\u4e3b\u4ee3\u7801\u4e2d\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u76f4\u63a5\u5728\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u5173\u95ed\u5c31\u597d\u4e86 import socket import re import threading #\u5bfc\u5165\u7684\u662f\u591a\u7ebf\u7a0b\u7684\u5305 def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = threading . Thread ( target = service_client , args = ( new_socket ,)) #\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u8ddf\u8fdb\u7a0b\u4f20\u9012\u7684\u53c2\u6570\u90fd\u662f\u4e00\u6837\u7684 p . start () # new_socket.close() #\u7ebf\u7a0b\u4e0d\u9700\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u7ebf\u7a0b\u91cc\u8fdb\u884c\u5173\u95ed\u5c31\u597d\u4e86,\u8ddf\u8fdb\u7a0b\u8fdb\u884c\u533a\u5206 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u66f4\u52a0\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re import threading class WSGIServer ( object ): def __init__ ( self , server_address ): # \u521b\u5efa\u4e00\u4e2atcp\u5957\u63a5\u5b57 self . listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u5141\u8bb8\u7acb\u5373\u4f7f\u7528\u4e0a\u6b21\u7ed1\u5b9a\u7684port self . listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a self . listen_socket . bind ( server_address ) # \u53d8\u4e3a\u88ab\u52a8\uff0c\u5e76\u5236\u5b9a\u961f\u5217\u7684\u957f\u5ea6 self . listen_socket . listen ( 128 ) def serve_forever ( self ): \"\u5faa\u73af\u8fd0\u884cweb\u670d\u52a1\u5668\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u5e76\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\" while True : # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u5230\u6765 client_socket , client_address = self . listen_socket . accept () print ( client_address ) new_process = threading . Thread ( target = self . handleRequest , args = ( client_socket ,)) new_process . start () # \u56e0\u4e3a\u7ebf\u7a0b\u662f\u5171\u4eab\u540c\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u6240\u4ee5\u4e3b\u7ebf\u7a0b\u4e0d\u80fd\u5173\u95ed\uff0c\u5426\u5219\u5b50\u7ebf\u7a0b\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e86 # client_socket.close() def handleRequest ( self , client_socket ): \"\u7528\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) print ( recv_data ) requestHeaderLines = recv_data . splitlines () for line in requestHeaderLines : print ( line ) request_line = requestHeaderLines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) # for test try : f = open ( get_file_name , \"rb\" ) except IOError : response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \" \\r\\n \" response_body = f . read () f . close () finally : client_socket . send ( response_header . encode ( 'utf-8' )) client_socket . send ( response_body ) client_socket . close () # \u8bbe\u5b9a\u670d\u52a1\u5668\u7684\u7aef\u53e3 SERVER_ADDR = ( HOST , PORT ) = \"\" , 8888 # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): httpd = WSGIServer ( SERVER_ADDR ) print ( \"web Server: Serving HTTP on port %d ... \\n \" % PORT ) httpd . serve_forever () if __name__ == \"__main__\" : main () \u534f\u7a0b\u7684\u5b9e\u73b0 \u00b6 import socket import re import gevent #\u5bfc\u5165\u534f\u7a0b\u7684\u5305 from gevent import monkey monkey . patch_all () def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 gevent . spawn ( service_client , new_socket ) #\u534f\u7a0b\u7684\u5b9e\u73b0\u8fd9\u91cc\u5b9e\u73b0\u7684\u8ddf\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u8fd8\u662f\u4e0d\u4e00\u6837\u7684,\u76f4\u63a5\u4f20\u9012\u51fd\u6570\u8ddf\u5ba2\u6237\u7aef # new_socket.close() #\u534f\u7a0b\u8ddf\u7ebf\u7a0b\u90fd\u662f\u5171\u4eab\u7684\u56e0\u6b64\u4e0d\u7528\u8fdb\u884c\u5173\u95ed # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main ()","title":"003 9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#91-http","text":"","title":"9.1. http\u534f\u8bae"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#http","text":"","title":"HTTP\u534f\u8bae\u7b80\u4ecb"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#146","text":"\u5728Web\u5e94\u7528\u4e2d\uff0c\u670d\u52a1\u5668\u628a\u7f51\u9875\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u7f51\u9875\u7684HTML\u4ee3\u7801\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\uff0c\u8ba9\u6d4f\u89c8\u5668\u663e\u793a\u51fa\u6765\u3002\u800c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4f20\u8f93\u534f\u8bae\u662fHTTP\uff0c\u6240\u4ee5\uff1a HTML\u662f\u4e00\u79cd\u7528\u6765\u5b9a\u4e49\u7f51\u9875\u7684\u6587\u672c\uff0c\u4f1aHTML\uff0c\u5c31\u53ef\u4ee5\u7f16\u5199\u7f51\u9875\uff1b HTTP\u662f\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93HTML\u7684\u534f\u8bae\uff0c\u7528\u4e8e\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u901a\u4fe1\u3002 Chrome\u6d4f\u89c8\u5668\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u5730\u8c03\u8bd5\u5de5\u5177\uff0c\u975e\u5e38\u9002\u5408Web\u5f00\u53d1\u3002 \u5b89\u88c5\u597dChrome\u6d4f\u89c8\u5668\u540e\uff0c\u6253\u5f00Chrome\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u89c6\u56fe\u201d\uff0c\u201c\u5f00\u53d1\u8005\u201d\uff0c\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\uff0c\u5c31\u53ef\u4ee5\u663e\u793a\u5f00\u53d1\u8005\u5de5\u5177\uff1a","title":"1. \u4f7f\u7528\u8c37\u6b4c/\u706b\u72d0\u6d4f\u89c8\u5668\u5206\u6790"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_1","text":"Elements\u663e\u793a\u7f51\u9875\u7684\u7ed3\u6784 Network\u663e\u793a\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u901a\u4fe1 \u6211\u4eec\u70b9Network\uff0c\u786e\u4fdd\u7b2c\u4e00\u4e2a\u5c0f\u7ea2\u706f\u4eae\u7740\uff0cChrome\u5c31\u4f1a\u8bb0\u5f55\u6240\u6709\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\uff1a","title":"\u8bf4\u660e"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#246-http","text":"\u5f53\u6211\u4eec\u5728\u5730\u5740\u680f\u8f93\u5165www.sina.com\u65f6\uff0c\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u65b0\u6d6a\u7684\u9996\u9875\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6d4f\u89c8\u5668\u90fd\u5e72\u4e86\u54ea\u4e9b\u4e8b\u60c5\u5462\uff1f\u901a\u8fc7Network\u7684\u8bb0\u5f55\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u3002\u5728Network\u4e2d\uff0c\u627e\u5230www.sina.com\u90a3\u6761\u8bb0\u5f55\uff0c\u70b9\u51fb\uff0c\u53f3\u4fa7\u5c06\u663e\u793aRequest Headers\uff0c\u70b9\u51fb\u53f3\u4fa7\u7684view source\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6d4f\u89c8\u5668\u53d1\u7ed9\u65b0\u6d6a\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff1a","title":"2. http\u534f\u8bae\u7684\u5206\u6790"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#21","text":"","title":"2.1 \u6d4f\u89c8\u5668\u8bf7\u6c42"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_2","text":"\u6700\u4e3b\u8981\u7684\u5934\u4e24\u884c\u5206\u6790\u5982\u4e0b\uff0c\u7b2c\u4e00\u884c\uff1a GET / HTTP/1.1 GET\u8868\u793a\u4e00\u4e2a\u8bfb\u53d6\u8bf7\u6c42\uff0c\u5c06\u4ece\u670d\u52a1\u5668\u83b7\u5f97\u7f51\u9875\u6570\u636e\uff0c/\u8868\u793aURL\u7684\u8def\u5f84\uff0cURL\u603b\u662f\u4ee5/\u5f00\u5934\uff0c/\u5c31\u8868\u793a\u9996\u9875\uff0c\u6700\u540e\u7684HTTP/1.1\u6307\u793a\u91c7\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\u662f1.1\u3002\u76ee\u524dHTTP\u534f\u8bae\u7684\u7248\u672c\u5c31\u662f1.1\uff0c\u4f46\u662f\u5927\u90e8\u5206\u670d\u52a1\u5668\u4e5f\u652f\u63011.0\u7248\u672c\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e1.1\u7248\u672c\u5141\u8bb8\u591a\u4e2aHTTP\u8bf7\u6c42\u590d\u7528\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u4ee5\u52a0\u5feb\u4f20\u8f93\u901f\u5ea6\u3002 \u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\uff0c\u6bcf\u4e00\u884c\u90fd\u7c7b\u4f3c\u4e8eXxx: abcdefg\uff1a Host: www.sina.com \u8868\u793a\u8bf7\u6c42\u7684\u57df\u540d\u662fwww.sina.com\u3002\u5982\u679c\u4e00\u53f0\u670d\u52a1\u5668\u6709\u591a\u4e2a\u7f51\u7ad9\uff0c\u670d\u52a1\u5668\u5c31\u9700\u8981\u901a\u8fc7Host\u6765\u533a\u5206\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u662f\u54ea\u4e2a\u7f51\u7ad9\u3002","title":"\u8bf4\u660e"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#22","text":"\u7ee7\u7eed\u5f80\u4e0b\u627e\u5230Response Headers\uff0c\u70b9\u51fbview source\uff0c\u663e\u793a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u539f\u59cb\u54cd\u5e94\u6570\u636e\uff1a HTTP\u54cd\u5e94\u5206\u4e3aHeader\u548cBody\u4e24\u90e8\u5206\uff08Body\u662f\u53ef\u9009\u9879\uff09\uff0c\u6211\u4eec\u5728Network\u4e2d\u770b\u5230\u7684Header\u6700\u91cd\u8981\u7684\u51e0\u884c\u5982\u4e0b\uff1a HTTP/1.1 200 OK 200\u8868\u793a\u4e00\u4e2a\u6210\u529f\u7684\u54cd\u5e94\uff0c\u540e\u9762\u7684OK\u662f\u8bf4\u660e\u3002 \u5982\u679c\u8fd4\u56de\u7684\u4e0d\u662f200\uff0c\u90a3\u4e48\u5f80\u5f80\u6709\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u4f8b\u5982 \u5931\u8d25\u7684\u54cd\u5e94\u6709404 Not Found\uff1a\u7f51\u9875\u4e0d\u5b58\u5728 500 Internal Server Error\uff1a\u670d\u52a1\u5668\u5185\u90e8\u51fa\u9519 ...\u7b49\u7b49... Content-Type: text/html Content-Type\u6307\u793a\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u662ftext/html\u8868\u793aHTML\u7f51\u9875\u3002 \u8bf7\u6ce8\u610f\uff0c\u6d4f\u89c8\u5668\u5c31\u662f\u4f9d\u9760Content-Type\u6765\u5224\u65ad\u54cd\u5e94\u7684\u5185\u5bb9\u662f\u7f51\u9875\u8fd8\u662f\u56fe\u7247\uff0c\u662f\u89c6\u9891\u8fd8\u662f\u97f3\u4e50\u3002\u6d4f\u89c8\u5668\u5e76\u4e0d\u9760URL\u6765\u5224\u65ad\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\uff0c\u5373\u4f7fURL\u662f http://www.baidu.com/meimei.jpg \uff0c\u5b83\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u662f\u56fe\u7247\u3002 HTTP\u54cd\u5e94\u7684Body\u5c31\u662fHTML\u6e90\u7801\uff0c\u6211\u4eec\u5728\u83dc\u5355\u680f\u9009\u62e9\u201c\u89c6\u56fe\u201d\uff0c\u201c\u5f00\u53d1\u8005\u201d\uff0c\u201c\u67e5\u770b\u7f51\u9875\u6e90\u7801\u201d\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u76f4\u63a5\u67e5\u770bHTML\u6e90\u7801\uff1a","title":"2.2 \u670d\u52a1\u5668\u54cd\u5e94"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_3","text":"\u5f53\u6d4f\u89c8\u5668\u8bfb\u53d6\u5230\u65b0\u6d6a\u9996\u9875\u7684HTML\u6e90\u7801\u540e\uff0c\u5b83\u4f1a\u89e3\u6790HTML\uff0c\u663e\u793a\u9875\u9762\uff0c\u7136\u540e\uff0c\u6839\u636eHTML\u91cc\u9762\u7684\u5404\u79cd\u94fe\u63a5\uff0c\u518d\u53d1\u9001HTTP\u8bf7\u6c42\u7ed9\u65b0\u6d6a\u670d\u52a1\u5668\uff0c\u62ff\u5230\u76f8\u5e94\u7684\u56fe\u7247\u3001\u89c6\u9891\u3001Flash\u3001JavaScript\u811a\u672c\u3001CSS\u7b49\u5404\u79cd\u8d44\u6e90\uff0c\u6700\u7ec8\u663e\u793a\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762\u3002\u6240\u4ee5\u6211\u4eec\u5728Network\u4e0b\u9762\u80fd\u770b\u5230\u5f88\u591a\u989d\u5916\u7684HTTP\u8bf7\u6c42\u3002","title":"\u6d4f\u89c8\u5668\u89e3\u6790\u8fc7\u7a0b"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#346","text":"","title":"3. \u603b\u7ed3"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#31-http","text":"\u8ddf\u8e2a\u4e86\u65b0\u6d6a\u7684\u9996\u9875\uff0c\u6211\u4eec\u6765\u603b\u7ed3\u4e00\u4e0bHTTP\u8bf7\u6c42\u7684\u6d41\u7a0b\uff1a","title":"3.1 HTTP\u8bf7\u6c42"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#311-1http","text":"\u65b9\u6cd5\uff1aGET\u8fd8\u662fPOST\uff0cGET\u4ec5\u8bf7\u6c42\u8d44\u6e90\uff0cPOST\u4f1a\u9644\u5e26\u7528\u6237\u6570\u636e\uff1b \u8def\u5f84\uff1a/full/url/path\uff1b \u57df\u540d\uff1a\u7531Host\u5934\u6307\u5b9a\uff1aHost: www.sina.com \u4ee5\u53ca\u5176\u4ed6\u76f8\u5173\u7684Header\uff1b \u5982\u679c\u662fPOST\uff0c\u90a3\u4e48\u8bf7\u6c42\u8fd8\u5305\u62ec\u4e00\u4e2aBody\uff0c\u5305\u542b\u7528\u6237\u6570\u636e","title":"3.1.1 \u6b65\u9aa41\uff1a\u6d4f\u89c8\u5668\u9996\u5148\u5411\u670d\u52a1\u5668\u53d1\u9001HTTP\u8bf7\u6c42\uff0c\u8bf7\u6c42\u5305\u62ec\uff1a"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#311-2http","text":"\u54cd\u5e94\u4ee3\u7801\uff1a200\u8868\u793a\u6210\u529f\uff0c3xx\u8868\u793a\u91cd\u5b9a\u5411\uff0c4xx\u8868\u793a\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c5xx\u8868\u793a\u670d\u52a1\u5668\u7aef\u5904\u7406\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff1b \u54cd\u5e94\u7c7b\u578b\uff1a\u7531Content-Type\u6307\u5b9a\uff1b \u4ee5\u53ca\u5176\u4ed6\u76f8\u5173\u7684Header\uff1b \u901a\u5e38\u670d\u52a1\u5668\u7684HTTP\u54cd\u5e94\u4f1a\u643a\u5e26\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u6709\u4e00\u4e2aBody\uff0c\u5305\u542b\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u7f51\u9875\u7684HTML\u6e90\u7801\u5c31\u5728Body\u4e2d\u3002","title":"3.1.1 \u6b65\u9aa42\uff1a\u670d\u52a1\u5668\u5411\u6d4f\u89c8\u5668\u8fd4\u56deHTTP\u54cd\u5e94\uff0c\u54cd\u5e94\u5305\u62ec\uff1a"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#311-3http12","text":"Web\u91c7\u7528\u7684HTTP\u534f\u8bae\u91c7\u7528\u4e86\u975e\u5e38\u7b80\u5355\u7684\u8bf7\u6c42-\u54cd\u5e94\u6a21\u5f0f\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u5f00\u53d1\u3002\u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728HTTP\u8bf7\u6c42\u4e2d\u628aHTML\u53d1\u9001\u51fa\u53bb\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5982\u4f55\u9644\u5e26\u56fe\u7247\u3001\u89c6\u9891\u7b49\uff0c\u6d4f\u89c8\u5668\u5982\u679c\u9700\u8981\u8bf7\u6c42\u56fe\u7247\u548c\u89c6\u9891\uff0c\u5b83\u4f1a\u53d1\u9001\u53e6\u4e00\u4e2aHTTP\u8bf7\u6c42\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ea\u5904\u7406\u4e00\u4e2a\u8d44\u6e90(\u6b64\u65f6\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3aTCP\u534f\u8bae\u4e2d\u7684\u77ed\u8fde\u63a5\uff0c\u6bcf\u4e2a\u94fe\u63a5\u53ea\u83b7\u53d6\u4e00\u4e2a\u8d44\u6e90\uff0c\u5982\u9700\u8981\u591a\u4e2a\u5c31\u9700\u8981\u5efa\u7acb\u591a\u4e2a\u94fe\u63a5) HTTP\u534f\u8bae\u540c\u65f6\u5177\u5907\u6781\u5f3a\u7684\u6269\u5c55\u6027\uff0c\u867d\u7136\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u662f http://www.sina.com \u7684\u9996\u9875\uff0c\u4f46\u662f\u65b0\u6d6a\u5728HTML\u4e2d\u53ef\u4ee5\u94fe\u5165\u5176\u4ed6\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u6bd4\u5982 <img src=\"http://i1.sinaimg.cn/home/2013/1008/U8455P30DT20131008135420.png\"> \uff0c\u4ece\u800c\u5c06\u8bf7\u6c42\u538b\u529b\u5206\u6563\u5230\u5404\u4e2a\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u4e14\uff0c\u4e00\u4e2a\u7ad9\u70b9\u53ef\u4ee5\u94fe\u63a5\u5230\u5176\u4ed6\u7ad9\u70b9\uff0c\u65e0\u6570\u4e2a\u7ad9\u70b9\u4e92\u76f8\u94fe\u63a5\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86World Wide Web\uff0c\u7b80\u79f0WWW\u3002","title":"3.1.1 \u6b65\u9aa43\uff1a\u5982\u679c\u6d4f\u89c8\u5668\u8fd8\u9700\u8981\u7ee7\u7eed\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u56fe\u7247\uff0c\u5c31\u518d\u6b21\u53d1\u51faHTTP\u8bf7\u6c42\uff0c\u91cd\u590d\u6b65\u9aa41\u30012\u3002"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#32-http","text":"\u6bcf\u4e2aHTTP\u8bf7\u6c42\u548c\u54cd\u5e94\u90fd\u9075\u5faa\u76f8\u540c\u7684\u683c\u5f0f\uff0c\u4e00\u4e2aHTTP\u5305\u542bHeader\u548cBody\u4e24\u90e8\u5206\uff0c\u5176\u4e2dBody\u662f\u53ef\u9009\u7684\u3002 HTTP\u534f\u8bae\u662f\u4e00\u79cd\u6587\u672c\u534f\u8bae\uff0c\u6240\u4ee5\uff0c\u5b83\u7684\u683c\u5f0f\u4e5f\u975e\u5e38\u7b80\u5355\u3002","title":"3.2 HTTP\u683c\u5f0f"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#321-http-get","text":"GET /path HTTP/1.1 Header1: Value1 Header2: Value2 Header3: Value3 \u6bcf\u4e2aHeader\u4e00\u884c\u4e00\u4e2a\uff0c\u6362\u884c\u7b26\u662f\\r\\n\u3002","title":"3.2.1 HTTP GET\u8bf7\u6c42\u7684\u683c\u5f0f\uff1a"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#322-http-post","text":"POST /path HTTP/1.1 Header1: Value1 Header2: Value2 Header3: Value3 body data goes here... \u5f53\u9047\u5230\u8fde\u7eed\u4e24\u4e2a\\r\\n(\u6709\u4e00\u4e2a\u7a7a\u884c)\u65f6\uff0cHeader\u90e8\u5206\u7ed3\u675f\uff0c\u540e\u9762\u7684\u6570\u636e\u5168\u90e8\u662fBody\u3002","title":"3.2.2 HTTP POST\u8bf7\u6c42\u7684\u683c\u5f0f\uff1a"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#323-http","text":"200 OK Header1: Value1 Header2: Value2 Header3: Value3 body data goes here... HTTP\u54cd\u5e94\u5982\u679c\u5305\u542bbody\uff0c\u4e5f\u662f\u901a\u8fc7\\r\\n\\r\\n\u6765\u5206\u9694\u7684\u3002 \u8bf7\u518d\u6b21\u6ce8\u610f\uff0cBody\u7684\u6570\u636e\u7c7b\u578b\u7531Content-Type\u5934\u6765\u786e\u5b9a\uff0c\u5982\u679c\u662f\u7f51\u9875\uff0cBody\u5c31\u662f\u6587\u672c\uff0c\u5982\u679c\u662f\u56fe\u7247\uff0cBody\u5c31\u662f\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u5f53\u5b58\u5728Content-Encoding\u65f6\uff0cBody\u6570\u636e\u662f\u88ab\u538b\u7f29\u7684\uff0c\u6700\u5e38\u89c1\u7684\u538b\u7f29\u65b9\u5f0f\u662fgzip\uff0c\u6240\u4ee5\uff0c\u770b\u5230Content-Encoding: gzip\u65f6\uff0c\u9700\u8981\u5c06Body\u6570\u636e\u5148\u89e3\u538b\u7f29\uff0c\u624d\u80fd\u5f97\u5230\u771f\u6b63\u7684\u6570\u636e\u3002\u538b\u7f29\u7684\u76ee\u7684\u5728\u4e8e\u51cf\u5c11Body\u7684\u5927\u5c0f\uff0c\u52a0\u5feb\u7f51\u7edc\u4f20\u8f93\u3002 \u6d4f\u89c8\u5668---->\u670d\u52a1\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u683c\u5f0f\u5982\u4e0b\uff1a GET / HTTP/1.1 //\u8bf7\u6c42\u7684\u65f6\u5019\u5fc5\u987b\u6709 Host: 127.0.0.1:8080 Connection: keep-alive Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 Accept-Encoding: gzip, deflate, sdch Accept-Language: zh-CN,zh;q=0.8 \u670d\u52a1\u5668--->\u6d4f\u89c8\u5668\u56de\u9001\u7684\u6570\u636e\u683c\u5f0f\u5982\u4e0b: HTTP/1.1 200 OK //\u8fd4\u56de\u5fc5\u987b\u8981\u6709 Bdpagetype: 1 Bdqid: 0xe87cb3f700023783 Bduserid: 0 Cache-Control: private Connection: Keep-Alive Content-Encoding: gzip Content-Type: text/html; charset=utf-8 Cxy_all: baidu+55617f8533383cbe48d5d2b7dc84b7f0 Date: Fri, 20 Oct 2017 00:59:55 GMT Expires: Fri, 20 Oct 2017 00:59:11 GMT Server: BWS/1.1 Set-Cookie: BDSVRTM=0; path=/ Set-Cookie: BD_HOME=0; path=/ Set-Cookie: H_PS_PSSID=1463_21080_17001_20929; path=/; domain=.baidu.com Strict-Transport-Security: max-age=172800 Vary: Accept-Encoding X-Powered-By: HPHP X-Ua-Compatible: IE=Edge,chrome=1 Transfer-Encoding: chunked < h1 > haha </ h1 > //\u8fd9\u662f\u8fd4\u56de\u7684\u5185\u5bb9","title":"3.2.3 HTTP\u54cd\u5e94\u7684\u683c\u5f0f\uff1a"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#92-web-1-","text":"","title":"9.2. Web\u9759\u6001\u670d\u52a1\u5668-1-\u663e\u793a\u56fa\u5b9a\u7684\u9875\u9762"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#web-1-","text":"#coding=utf-8 import socket def handle_client ( client_socket ): \"\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( \"utf-8\" ) request_header_lines = recv_data . splitlines () for line in request_header_lines : print ( line ) # \u7ec4\u7ec7\u76f8\u5e94 \u5934\u4fe1\u606f(header) response_headers = \"HTTP/1.1 200 OK \\r\\n \" # 200\u8868\u793a\u627e\u5230\u8fd9\u4e2a\u8d44\u6e90 response_headers += \" \\r\\n \" # \u7528\u4e00\u4e2a\u7a7a\u7684\u884c\u4e0ebody\u8fdb\u884c\u9694\u5f00 # \u7ec4\u7ec7 \u5185\u5bb9(body) response_body = \"hello world\" response = response_headers + response_body client_socket . send ( response . encode ( \"utf-8\" )) client_socket . close () def main (): \"\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u4e3b\u63a7\u5236\u5165\u53e3\" server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u8bbe\u7f6e\u5f53\u670d\u52a1\u5668\u5148close \u5373\u670d\u52a1\u5668\u7aef4\u6b21\u6325\u624b\u4e4b\u540e\u8d44\u6e90\u80fd\u591f\u7acb\u5373\u91ca\u653e\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\uff0c\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6 \u53ef\u4ee5\u7acb\u5373\u7ed1\u5b9a7788\u7aef\u53e3 server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) server_socket . bind (( \"\" , 7788 )) server_socket . listen ( 128 ) while True : client_socket , client_addr = server_socket . accept () handle_client ( client_socket ) if __name__ == \"__main__\" : main ()","title":"Web\u9759\u6001\u670d\u52a1\u5668-1-\u663e\u793a\u56fa\u5b9a\u7684\u9875\u9762"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_4","text":"","title":"\u670d\u52a1\u5668\u7aef"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_5","text":"\u624b\u6572\u4ee3\u7801: # -*- coding: utf-8 -*- import socket def service_client ( new_socket ): \"\"\"\u4e3a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1.\u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42,\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # .... request = new_socket . recv ( 1024 ) #\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u6570\u636e print ( request ) # 2.\u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e # 2.1\u51c6\u5907\u7ed9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u6570\u636e --header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u7ed9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u6570\u636e --boday response += \"hehe\" new_socket . send ( response . encode ( \"gbk\" )) #\u6570\u636e\u7684\u8fd4\u56de #\u5173\u95ed\u5957\u63a5\u5b57 new_socket . close () def main (): \"\"\"\u7528\u6765\u8fdb\u884c\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1.\u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #AF_INET ipv4 stream\u65f6\u6d41\u7684\u610f\u601d # \u8bbe\u7f6e\u5f53\u670d\u52a1\u5668\u5148close \u5373\u670d\u52a1\u5668\u7aef4\u6b21\u6325\u624b\u4e4b\u540e\u8d44\u6e90\u80fd\u591f\u7acb\u5373\u91ca\u653e\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\uff0c\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6 \u53ef\u4ee5\u7acb\u5373\u7ed1\u5b9a7890\u7aef\u53e3 server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) #\u7ed1\u5b9a\u9ed8\u8ba4\u7684ip\u4ee5\u53ca\u7aef\u53e3\u53f7 # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 service_client ( new_socket ) #\u5c06\u63a5\u6536\u5230\u7684\u5ba2\u6237\u5bf9\u8c61\u8fdb\u884c\u63a5\u6536 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main ()","title":"\u5ba2\u6237\u7aef"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#93-web-2-","text":"","title":"9.3. Web\u9759\u6001\u670d\u52a1\u5668-2-\u663e\u793a\u9700\u8981\u7684\u9875\u9762"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#web-2-","text":"03-\u8fd4\u56deinde.html\u9875\u9762.py import socket def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) print ( \">>>\" * 50 ) print ( request ) # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" f = open ( \"./html/index.html\" , \"rb\" ) html_content = f . read () f . close () # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 service_client ( new_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main ()","title":"Web\u9759\u6001\u670d\u52a1\u5668-2-\u663e\u793a\u9700\u8981\u7684\u9875\u9762"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_6","text":"","title":"\u670d\u52a1\u5668\u7aef"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_7","text":"04-\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u8fd4\u56de\u76f8\u5e94\u7684\u9875\u9762.py import socket import re def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) #\u5bf9\u63a5\u6536\u7684\u6570\u636e\u8fdb\u884c\u89e3\u7801 # print(\">>>\"*50) # print(request) request_lines = request . splitlines () #\u5c06\u5b57\u7b26\u4e32\u6bcf\u4e00\u884c\u5207\u5272\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) #[^/]+\u5339\u914d\u4e0d\u662f/\u6709\u591a\u4e2a,[^ ]* \u5339\u914d\u975e\u7a7a\u683c\u5b57\u7b26\u96f6\u4e2a\u6216\u591a\u4e2a #\u5982\u679c\u5339\u914d\u5230\u4e86\u6570\u636e\u7684\u8bdd\u90a3\u4e48\u5c31\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 #\u5c1d\u8bd5\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6 try : f = open ( \"./html\" + file_name , \"rb\" ) except : #try\u4e0d\u80fd\u6b63\u5e38\u7684\u6267\u884c\u5c31\u662f\u8bf4\u660e\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u7684\u8bdd\u5c31\u8fd4\u56de404 response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : #else\u6267\u884c\u7684\u6761\u4ef6\u662ftry\u80fd\u591f\u6b63\u5e38\u6267\u884c #finally\u662f\u4e00\u5b9a\u4f1a\u6267\u884c html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 service_client ( new_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u66f4\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re def handle_client ( client_socket ): \"\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' , errors = \"ignore\" ) request_header_lines = recv_data . splitlines () for line in request_header_lines : print ( line ) http_request_line = request_header_lines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , http_request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8bbf\u95ee\u54ea\u4e2a\u9875\u9762\u3002\u4f8b\u5982index.html # GET / HTTP/1.1 if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) #for test try : f = open ( get_file_name , \"rb\" ) except IOError : # 404\u8868\u793a\u6ca1\u6709\u8fd9\u4e2a\u9875\u9762 response_headers = \"HTTP/1.1 404 not found \\r\\n \" response_headers += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_headers = \"HTTP/1.1 200 OK \\r\\n \" response_headers += \" \\r\\n \" response_body = f . read () f . close () finally : # \u56e0\u4e3a\u5934\u4fe1\u606f\u5728\u7ec4\u7ec7\u7684\u65f6\u5019\uff0c\u662f\u6309\u7167\u5b57\u7b26\u4e32\u7ec4\u7ec7\u7684\uff0c\u4e0d\u80fd\u4e0e\u4ee5\u4e8c\u8fdb\u5236\u6253\u5f00\u6587\u4ef6\u8bfb\u53d6\u7684\u6570\u636e\u5408\u5e76\uff0c\u56e0\u6b64\u5206\u5f00\u53d1\u9001 # \u5148\u53d1\u9001response\u7684\u5934\u4fe1\u606f client_socket . send ( response_headers . encode ( 'utf-8' )) # \u518d\u53d1\u9001body client_socket . send ( response_body ) client_socket . close () def main (): \"\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u4e3b\u63a7\u5236\u5165\u53e3\" server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) server_socket . bind (( \"\" , 7788 )) server_socket . listen ( 128 ) while True : client_socket , clien_cAddr = server_socket . accept () handle_client ( client_socket ) #\u8fd9\u91cc\u914d\u7f6e\u670d\u52a1\u5668 DOCUMENTS_ROOT = \"./html\" if __name__ == \"__main__\" : main ()","title":"\u5ba2\u6237\u7aef"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#94-web-3-","text":"import socket import re import multiprocessing #\u5bfc\u5165\u591a\u8fdb\u7a0b\u7684\u5305 def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b,\u76ee\u6807\u662fservice_client\u51fd\u6570,\u4f20\u5165\u7684\u53c2\u6570\u662f\u65b0\u7684\u5ba2\u6237\u7aef,\u6ce8\u610f\u7684\u662f\u540e\u9762\u6709\u4e00\u4e2a, p = multiprocessing . Process ( target = service_client , args = ( new_socket ,)) p . start () new_socket . close () #\u8fd9\u91cc\u4e00\u5b9a\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u590d\u5236\u4e86\u4e00\u4efd\u7236\u8fdb\u7a0b(new_socket)\u6240\u4ee5\u5148\u628a\u7236\u7684\u5173\u4e86,\u540e\u9762\u5b50\u8fdb\u7a0b\u5173\u95ed\u7684\u65f6\u5019\u624d\u80fd\u5173\u95ed # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u4e3a\u4ec0\u4e48\u7236\u8fdb\u7a0b\u4e5f\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u662f\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u7236\u8fdb\u7a0b\u90fd\u4f1a\u6307\u5411\u8fd9\u4e2a\u5ba2\u6237\u7aef,\u7236\u8fdb\u7a0b\u5173\u95ed\u4e0d\u4f1a\u771f\u7684\u5173\u4e86\u5ba2\u6237\u7aef\u53ea\u7528\u5b50\u8fdb\u7a0b\u5173\u95ed\u4e86\u4e4b\u540e\u624d\u4f1a\u771f\u7684\u5173\u95ed\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u56db\u6b21\u6325\u624b\u7684\u64cd\u4f5c. \u66f4\u52a0\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re import multiprocessing class WSGIServer ( object ): def __init__ ( self , server_address ): # \u521b\u5efa\u4e00\u4e2atcp\u5957\u63a5\u5b57 self . listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u5141\u8bb8\u7acb\u5373\u4f7f\u7528\u4e0a\u6b21\u7ed1\u5b9a\u7684port self . listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a self . listen_socket . bind ( server_address ) # \u53d8\u4e3a\u88ab\u52a8\uff0c\u5e76\u5236\u5b9a\u961f\u5217\u7684\u957f\u5ea6 self . listen_socket . listen ( 128 ) def serve_forever ( self ): \"\u5faa\u73af\u8fd0\u884cweb\u670d\u52a1\u5668\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u5e76\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\" while True : # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u5230\u6765 client_socket , client_address = self . listen_socket . accept () print ( client_address ) # for test new_process = multiprocessing . Process ( target = self . handleRequest , args = ( client_socket ,)) new_process . start () # \u56e0\u4e3a\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u7684\u5957\u63a5\u5b57\u7b49\u8d44\u6e90\uff0c\u6240\u4ee5\u7236\u8fdb\u7a0b\u8c03\u7528close\u4e0d\u4f1a\u5c06\u4ed6\u4eec\u5bf9\u5e94\u7684\u8fd9\u4e2a\u94fe\u63a5\u5173\u95ed\u7684 client_socket . close () def handleRequest ( self , client_socket ): \"\u7528\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) print ( recv_data ) requestHeaderLines = recv_data . splitlines () for line in requestHeaderLines : print ( line ) request_line = requestHeaderLines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) # for test try : f = open ( get_file_name , \"rb\" ) except IOError : response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \" \\r\\n \" response_body = f . read () f . close () finally : client_socket . send ( response_header . encode ( 'utf-8' )) client_socket . send ( response_body ) client_socket . close () # \u8bbe\u5b9a\u670d\u52a1\u5668\u7684\u7aef\u53e3 SERVER_ADDR = ( HOST , PORT ) = \"\" , 8888 # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): httpd = WSGIServer ( SERVER_ADDR ) print ( \"web Server: Serving HTTP on port %d ... \\n \" % PORT ) httpd . serve_forever () if __name__ == \"__main__\" : main ()","title":"9.4. Web\u9759\u6001\u670d\u52a1\u5668-3-\u591a\u8fdb\u7a0b"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#95-web-4-","text":"","title":"9.5. Web\u9759\u6001\u670d\u52a1\u5668-4-\u591a\u7ebf\u7a0b"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#web-4-","text":"\u4f7f\u7528\u7ebf\u7a0b\u7684\u65f6\u5019\u662f\u4e0d\u7528\u5728\u4e3b\u4ee3\u7801\u4e2d\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u76f4\u63a5\u5728\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u5173\u95ed\u5c31\u597d\u4e86 import socket import re import threading #\u5bfc\u5165\u7684\u662f\u591a\u7ebf\u7a0b\u7684\u5305 def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = threading . Thread ( target = service_client , args = ( new_socket ,)) #\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u8ddf\u8fdb\u7a0b\u4f20\u9012\u7684\u53c2\u6570\u90fd\u662f\u4e00\u6837\u7684 p . start () # new_socket.close() #\u7ebf\u7a0b\u4e0d\u9700\u8981\u8fdb\u884c\u5ba2\u6237\u7aef\u7684\u5173\u95ed,\u7ebf\u7a0b\u91cc\u8fdb\u884c\u5173\u95ed\u5c31\u597d\u4e86,\u8ddf\u8fdb\u7a0b\u8fdb\u884c\u533a\u5206 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u66f4\u52a0\u8be6\u7ec6\u7684\u4ee3\u7801 #coding=utf-8 import socket import re import threading class WSGIServer ( object ): def __init__ ( self , server_address ): # \u521b\u5efa\u4e00\u4e2atcp\u5957\u63a5\u5b57 self . listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u5141\u8bb8\u7acb\u5373\u4f7f\u7528\u4e0a\u6b21\u7ed1\u5b9a\u7684port self . listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a self . listen_socket . bind ( server_address ) # \u53d8\u4e3a\u88ab\u52a8\uff0c\u5e76\u5236\u5b9a\u961f\u5217\u7684\u957f\u5ea6 self . listen_socket . listen ( 128 ) def serve_forever ( self ): \"\u5faa\u73af\u8fd0\u884cweb\u670d\u52a1\u5668\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u5e76\u4e3a\u5ba2\u6237\u7aef\u670d\u52a1\" while True : # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u5230\u6765 client_socket , client_address = self . listen_socket . accept () print ( client_address ) new_process = threading . Thread ( target = self . handleRequest , args = ( client_socket ,)) new_process . start () # \u56e0\u4e3a\u7ebf\u7a0b\u662f\u5171\u4eab\u540c\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u6240\u4ee5\u4e3b\u7ebf\u7a0b\u4e0d\u80fd\u5173\u95ed\uff0c\u5426\u5219\u5b50\u7ebf\u7a0b\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e86 # client_socket.close() def handleRequest ( self , client_socket ): \"\u7528\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1\" recv_data = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) print ( recv_data ) requestHeaderLines = recv_data . splitlines () for line in requestHeaderLines : print ( line ) request_line = requestHeaderLines [ 0 ] get_file_name = re . match ( \"[^/]+(/[^ ]*)\" , request_line ) . group ( 1 ) print ( \"file name is ===> %s \" % get_file_name ) # for test if get_file_name == \"/\" : get_file_name = DOCUMENTS_ROOT + \"/index.html\" else : get_file_name = DOCUMENTS_ROOT + get_file_name print ( \"file name is ===2> %s \" % get_file_name ) # for test try : f = open ( get_file_name , \"rb\" ) except IOError : response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \" \\r\\n \" response_body = \"====sorry ,file not found====\" else : response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \" \\r\\n \" response_body = f . read () f . close () finally : client_socket . send ( response_header . encode ( 'utf-8' )) client_socket . send ( response_body ) client_socket . close () # \u8bbe\u5b9a\u670d\u52a1\u5668\u7684\u7aef\u53e3 SERVER_ADDR = ( HOST , PORT ) = \"\" , 8888 # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): httpd = WSGIServer ( SERVER_ADDR ) print ( \"web Server: Serving HTTP on port %d ... \\n \" % PORT ) httpd . serve_forever () if __name__ == \"__main__\" : main ()","title":"Web\u9759\u6001\u670d\u52a1\u5668-4-\u591a\u7ebf\u7a0b"},{"location":"python-web/003-9--http\u534f\u8bae\u3001web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56681/#_8","text":"import socket import re import gevent #\u5bfc\u5165\u534f\u7a0b\u7684\u5305 from gevent import monkey monkey . patch_all () def service_client ( new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 gevent . spawn ( service_client , new_socket ) #\u534f\u7a0b\u7684\u5b9e\u73b0\u8fd9\u91cc\u5b9e\u73b0\u7684\u8ddf\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u8fd8\u662f\u4e0d\u4e00\u6837\u7684,\u76f4\u63a5\u4f20\u9012\u51fd\u6570\u8ddf\u5ba2\u6237\u7aef # new_socket.close() #\u534f\u7a0b\u8ddf\u7ebf\u7a0b\u90fd\u662f\u5171\u4eab\u7684\u56e0\u6b64\u4e0d\u7528\u8fdb\u884c\u5173\u95ed # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main ()","title":"\u534f\u7a0b\u7684\u5b9e\u73b0"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/","text":"10.1. Web\u9759\u6001\u670d\u52a1\u5668-5-\u975e\u5835\u585e\u6a21\u5f0f \u00b6 Web\u9759\u6001\u670d\u52a1\u5668-5-\u975e\u5835\u585e\u6a21\u5f0f \u00b6 \u5355\u8fdb\u7a0b\u975e\u5835\u585e \u6a21\u578b \u00b6 \u8bfe\u7a0b\u4ee3\u7801 import socket import time tcp_server_tcp = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #\u5efa\u7acbtcp\u670d\u52a1\u7aef tcp_server_tcp . bind (( \"\" , 7899 )) #\u7ed1\u5b9a\u7aef\u53e3 tcp_server_tcp . listen ( 128 ) #\u8bbe\u7f6e\u76d1\u542c tcp_server_tcp . setblocking ( False ) # \u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u5835\u585e\u7684\u65b9\u5f0f,\u670d\u52a1\u7aef\u8bbe\u7f6e\u4e3a\u8d39\u5835\u585e client_socket_list = list () #\u5efa\u7acb\u5ba2\u6237\u7aef\u5217\u8868,\u5982\u679c\u8fde\u5ba2\u6237\u7aef\u90fd\u6ca1\u6709\u90a3\u4e48\u4e0d\u7ba1\u600e\u4e48\u6837\u4f60\u90fd\u63a5\u6536\u4e0d\u5230\u6570\u636e,\u4f60try\u4e5f\u4e0d\u884c,\u56e0\u6b64\u4f7f\u7528\u5217\u8868 while True : # time.sleep(0.5) try : #\u5faa\u73af\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42,\u5982\u679c\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5c31\u4ea7\u751f\u5f02\u5e38\u5c31\u597d\u4e86 new_socket , new_addr = tcp_server_tcp . accept () except Exception as ret : #\u4ea7\u751f\u5f02\u5e38 print ( \"---\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765---\" ) else : #\u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765\u4e86 print ( \"---\u53ea\u8981\u6ca1\u6709\u4ea7\u751f\u5f02\u5e38\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740 \u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef----\" ) new_socket . setblocking ( False ) # \u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u5835\u585e\u7684\u65b9\u5f0f(True\u5c31\u662f\u9ed8\u8ba4\u5835\u585e),\u5ba2\u6237\u7aef\u4e5f\u8981\u8bbe\u7f6e\u6210\u8d39\u5835\u585e\u7684\u65b9\u5f0f #\u5982\u679c\u4e0d\u8bbe\u7f6e\u5ba2\u6237\u7aef\u662f\u8d39\u5835\u585e\u7684\u8bdd\u90a3\u4e48\u53ea\u6709\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u6570\u636e\u624d\u80fd\u89e3\u5835\u585e\u662f\u4e0d\u884c\u7684 client_socket_list . append ( new_socket ) #\u5ba2\u6237\u7aef\u6765\u4e86\u90a3\u5c31\u5b58\u50a8\u5230\u670d\u52a1\u5217\u8868\u4e2d for client_socket in client_socket_list : #\u4e3a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 try : recv_data = client_socket . recv ( 1024 ) except Exception as ret : print ( ret ) print ( \"----\u8fd9\u4e2a\u5ba2\u6237\u7aef\u6ca1\u6709\u53d1\u9001\u8fc7\u6765\u6570\u636e----\" ) else : #try\u6267\u884c\u662f\u6b63\u786e\u7684\u624d\u4f1a\u8fdb\u5165else print ( \"-----\u6ca1\u6709\u5f02\u5e38-----\" ) print ( recv_data ) if recv_data : # \u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u6570\u636e print ( \"----\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u4e86\u6570\u636e-----\" ) else : # \u5bf9\u65b9\u8c03\u7528close \u5bfc\u81f4\u4e86 recv\u8fd4\u56de client_socket . close () client_socket_list . remove ( client_socket ) #\u670d\u52a1\u5b8c\u6210\u7684\u5ba2\u6237\u7aef\u5c31\u7ed9\u5173\u95ed print ( \"---\u5ba2\u6237\u7aef\u5df2\u7ecf\u5173\u95ed----\" ) \u8be6\u7ec6\u4ee3\u7801 #coding=utf-8 from socket import * import time # \u7528\u6765\u5b58\u50a8\u6240\u6709\u7684\u65b0\u94fe\u63a5\u7684socket g_socket_list = list () def main (): server_socket = socket ( AF_INET , SOCK_STREAM ) server_socket . setsockopt ( SOL_SOCKET , SO_REUSEADDR , 1 ) server_socket . bind (( '' , 7890 )) server_socket . listen ( 128 ) # \u5c06\u5957\u63a5\u5b57\u8bbe\u7f6e\u4e3a\u975e\u5835\u585e # \u8bbe\u7f6e\u4e3a\u975e\u5835\u585e\u540e\uff0c\u5982\u679caccept\u65f6\uff0c\u6070\u5de7\u6ca1\u6709\u5ba2\u6237\u7aefconnect\uff0c\u90a3\u4e48accept\u4f1a # \u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\uff0c\u6240\u4ee5\u9700\u8981try\u6765\u8fdb\u884c\u5904\u7406 server_socket . setblocking ( False ) while True : # \u7528\u6765\u6d4b\u8bd5 time . sleep ( 0.5 ) try : newClientInfo = server_socket . accept () except Exception as result : pass else : print ( \"\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765: %s \" % str ( newClientInfo )) newClientInfo [ 0 ] . setblocking ( False ) # \u8bbe\u7f6e\u4e3a\u975e\u5835\u585e g_socket_list . append ( newClientInfo ) for client_socket , client_addr in g_socket_list : try : recvData = client_socket . recv ( 1024 ) if recvData : print ( 'recv[ %s ]: %s ' % ( str ( client_addr ), recvData )) else : print ( '[ %s ]\u5ba2\u6237\u7aef\u5df2\u7ecf\u5173\u95ed' % str ( client_addr )) client_socket . close () g_socket_list . remove (( client_socket , client_addr )) except Exception as result : pass print ( g_socket_list ) # for test if __name__ == '__main__' : main () web\u9759\u6001\u670d\u52a1\u5668-\u5355\u8fdb\u7a0b\u975e\u5835\u585e(\u957f\u94fe\u63a5) \u00b6 \u4e0a\u8bfe\u7248\u672c import socket import re def service_client ( new_socket , request ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... # request = new_socket.recv(1024).decode(\"utf-8\") # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () response_body = html_content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) #\u544a\u8bc9\u5ba2\u6237\u7aef\u63a5\u6536\u591a\u957f\u7684body,\u8fd9\u6837\u6d4f\u89c8\u5668\u63a5\u6536\u5230\u4e86\u5c31\u4e0d\u7528\u4e00\u76f4\u8f6c\u5708\u4e86 response_header += \" \\r\\n \" response = response_header . encode ( \"utf-8\" ) + response_body new_socket . send ( response ) #\u5173\u95ed\u5957\u63a5 # new_socket.close()#\u8fd9\u91cc\u4e0d\u518d\u5173\u95ed,\u653e\u5927\u4e3b\u51fd\u6570\u91cc\u8fdb\u884c\u5173\u95ed\u5b9e\u73b0\u957f\u94fe\u63a5 def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #\u521b\u5efa\u670d\u52a1\u7aef tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) #\u8bbe\u7f6e\u5173\u95ed\u94fe\u63a5\u8fd8\u662f\u5565\u6765\u7740 # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) #\u7ed1\u5b9a\u7aef\u53e3 # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) tcp_server_socket . setblocking ( False ) # \u5c06\u5957\u63a5\u5b57\u53d8\u4e3a\u975e\u5835\u585e client_socket_list = list () #\u521b\u5efa\u670d\u52a1\u5217\u8868 while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 try : new_socket , client_addr = tcp_server_socket . accept () except Exception as ret : pass else : new_socket . setblocking ( False ) #\u8bbe\u7f6e\u5ba2\u6237\u7aef\u975e\u5835\u585e client_socket_list . append ( new_socket ) #\u6dfb\u52a0\u5230\u5217\u8868 for client_socket in client_socket_list : try : recv_data = client_socket . recv ( 1024 ) . decode ( \"utf-8\" ) #\u63a5\u6536\u6570\u636e except Exception as ret : pass else : if recv_data : service_client ( client_socket , recv_data ) else : #\u6240\u6709\u7684\u6570\u636e\u8bf7\u6c42\u5b8c\u4e86\u5728\u8fd9\u91cc\u5c06\u5ba2\u6237\u7aef\u5173\u95ed client_socket . close () client_socket_list . remove ( client_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u8be6\u7ec6\u7248\u672c import time import socket import sys import re class WSGIServer ( object ): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__ ( self , port , documents_root ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self . server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) self . server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . server_socket . listen ( 128 ) self . server_socket . setblocking ( False ) self . client_socket_list = list () self . documents_root = documents_root def run_forever ( self ): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True : # time.sleep(0.5) # for test try : new_socket , new_addr = self . server_socket . accept () except Exception as ret : print ( \"-----1----\" , ret ) # for test else : new_socket . setblocking ( False ) self . client_socket_list . append ( new_socket ) for client_socket in self . client_socket_list : try : request = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) except Exception as ret : print ( \"------2----\" , ret ) # for test else : if request : self . deal_with_request ( request , client_socket ) else : client_socket . close () self . client_socket_list . remove ( client_socket ) print ( self . client_socket_list ) def deal_with_request ( self , request , client_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" if not request : return request_lines = request . splitlines () for i , line in enumerate ( request_lines ): print ( i , line ) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re . match ( r \"([^/]*)([^ ]+)\" , request_lines [ 0 ]) if ret : print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 1 )) print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 2 )) file_name = ret . group ( 2 ) if file_name == \"/\" : file_name = \"/index.html\" # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try : f = open ( self . documents_root + file_name , \"rb\" ) except : response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \"Content-Type: text/html; charset=utf-8 \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % ( len ( response_body )) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' )) # \u5c06body\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_body . encode ( \"utf-8\" )) else : content = f . read () f . close () response_body = content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % ( len ( response_body )) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' ) + response_body ) # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len ( sys . argv ) == 2 : port = sys . argv [ 1 ] if port . isdigit (): port = int ( port ) else : print ( \"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890\" ) return print ( \"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port: %s \" % port ) http_server = WSGIServer ( port , DOCUMENTS_ROOT ) http_server . run_forever () if __name__ == \"__main__\" : main () 10.2. Web\u9759\u6001\u670d\u52a1\u5668-6-epoll \u00b6 Web\u9759\u6001\u670d\u52a1\u5668-6-epoll \u00b6 IO \u591a\u8def\u590d\u7528 \u00b6 \u5c31\u662f\u6211\u4eec\u8bf4\u7684select\uff0cpoll\uff0cepoll\uff0c\u6709\u4e9b\u5730\u65b9\u4e5f\u79f0\u8fd9\u79cdIO\u65b9\u5f0f\u4e3aevent driven IO\u3002 select/epoll\u7684\u597d\u5904\u5c31\u5728\u4e8e\u5355\u4e2aprocess\u5c31\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u7f51\u7edc\u8fde\u63a5\u7684IO\u3002 \u5b83\u7684\u57fa\u672c\u539f\u7406\u5c31\u662fselect\uff0cpoll\uff0cepoll\u8fd9\u4e2afunction\u4f1a\u4e0d\u65ad\u7684\u8f6e\u8be2\u6240\u8d1f\u8d23\u7684\u6240\u6709socket\uff0c\u5f53\u67d0\u4e2asocket\u6709\u6570\u636e\u5230\u8fbe\u4e86\uff0c\u5c31\u901a\u77e5\u7528\u6237\u8fdb\u7a0b\u3002 \u8bfe\u4e0a\u5b9e\u73b0 import socket import re import select #\u5bfc\u5165select\u5305 def service_client ( new_socket , request ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... # request = new_socket.recv(1024).decode(\"utf-8\") # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () response_body = html_content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" response = response_header . encode ( \"utf-8\" ) + response_body new_socket . send ( response ) def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) tcp_server_socket . setblocking ( False ) # \u5c06\u5957\u63a5\u5b57\u53d8\u4e3a\u975e\u5835\u585e # \u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61(\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5171\u4eab) epl = select . epoll () #\u4f7f\u7528select\u7684epoll\u7c7b\u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61 # \u5c06\u76d1\u542c\u5957\u63a5\u5b57\u5bf9\u5e94\u7684fd(\u6587\u4ef6\u6807\u5fd7\u7b26)\u6ce8\u518c\u5230epoll\u4e2d epl . register ( tcp_server_socket . fileno (), select . EPOLLIN ) #fileno()\u6587\u4ef6\u6807\u8bc6\u7b26 select.EPOLLIN\u6807\u8bc6\u7684\u662f\u68c0\u6d4b\u8fd9\u4e2a\u670d\u52a1\u7aef\u662f\u5426\u6709\u8f93\u5165 fd_event_dict = dict () while True : fd_event_list = epl . poll () # \u9ed8\u8ba4\u4f1a\u5835\u585e\uff0c\u76f4\u5230 os\u76d1\u6d4b\u5230\u6570\u636e\u5230\u6765 \u901a\u8fc7\u4e8b\u4ef6\u901a\u77e5\u65b9\u5f0f \u544a\u8bc9\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6b64\u65f6\u624d\u4f1a\u89e3\u5835\u585e # [(fd, event), (\u5957\u63a5\u5b57\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26, \u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5230\u5e95\u662f\u4ec0\u4e48\u4e8b\u4ef6 \u4f8b\u5982 \u53ef\u4ee5\u8c03\u7528recv\u63a5\u6536\u7b49)](\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\u5c06\u591a\u4e2a\u7b49\u5f85\u5904\u7406\u7684\u4e8b\u4ef6\u4e00\u5757\u4f20\u9012) for fd , event in fd_event_list : #(\u52a8\u4f5c\u7684\u5957\u63a5\u5b57\u4f1a\u8fd4\u56de\u5230\u8fd9\u4e2alist\u4e2d\u6bcf\u4e00\u4e2alist\u662f\u4e00\u4e2a\u5143\u7956(\u5143\u7956\u4e2d\u662f\u6807\u5fd7\u7b26\u548c\u4e8b\u4ef6)) # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5(\u76d1\u542c\u5957\u63a5\u5b57\u52a8\u4f5c\u8d70\u7684\u662fif,\u8fdb\u884c\u6dfb\u52a0\u65b0\u7684\u5ba2\u6237\u7aef) if fd == tcp_server_socket . fileno (): #\u6807\u5fd7\u7b26\u662f\u76d1\u542c\u5957\u63a5\u5b57\u7684\u90a3\u4e48\u5c31\u8981\u63a5\u53d7\u5ba2\u6237\u7aef new_socket , client_addr = tcp_server_socket . accept () epl . register ( new_socket . fileno (), select . EPOLLIN ) #\u63a5\u6536\u5230\u7684\u65b0\u7684\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u8fdb\u884c\u6ce8\u518c(\u8fd9\u4e2a\u4e3b\u8981\u662f\u76d1\u542c\u5957\u63a5\u5b57\u7684) fd_event_dict [ new_socket . fileno ()] = new_socket #\u5b58\u50a8\u5230\u5b57\u5178\u4e2d,\u5c06\u6587\u4ef6\u6807\u5fd7\u7b26\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u5bf9\u5e94 elif event == select . EPOLLIN : #\u8fd9\u91cc\u5c31\u4e0d\u662f\u5224\u65ad\u6807\u5fd7\u7b26\u4e86,\u800c\u662f\u5224\u65ad\u6709\u6ca1\u6709\u6570\u636e\u7684\u5230\u6765(\u8fd9\u91cc\u4e0d\u80fd\u4f7f\u7528\u6587\u4ef6\u6807\u5fd7\u7b26,\u4e0d\u80fd\u5224\u65ad\u662f\u54ea\u4e2a\u5ba2\u6237\u7aef) #\u5ba2\u6237\u7aef\u8fdb\u884c\u4f20\u6570\u636e\u7684\u65f6\u5019\u8d70\u7684\u662f\u8fd9\u4e2aelse,\u56e0\u4e3a\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u94fe\u63a5,\u800c\u662f\u5ba2\u6237\u7aef\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93 # \u5224\u65ad\u5df2\u7ecf\u94fe\u63a5\u7684\u5ba2\u6237\u7aef\u662f\u5426\u6709\u6570\u636e\u53d1\u9001\u8fc7\u6765 recv_data = fd_event_dict [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) #\u4ece\u5b57\u5178\u4e2d\u53d6\u51fa\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 if recv_data : #\u6709\u6570\u636e\u5230\u6765 service_client ( fd_event_dict [ fd ], recv_data ) else : #\u7ed3\u675f\u4e86\u94fe\u63a5 fd_event_dict [ fd ] . close () #\u5173\u95ed\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 epl . unregister ( fd ) #\u53d6\u6d88\u6ce8\u518c del fd_event_dict [ fd ] #\u5220\u9664\u5b57\u5178\u4e2d\u7684\u952e\u503c\u5bf9 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () epoll\u7b80\u5355\u6a21\u578b \u00b6 import socket import select # \u521b\u5efa\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u8bbe\u7f6e\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7ed1\u5b9a\u7684\u4fe1\u606f s . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a\u672c\u673a\u4fe1\u606f s . bind (( \"\" , 7788 )) # \u53d8\u4e3a\u88ab\u52a8 s . listen ( 10 ) # \u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61 epoll = select . epoll () # \u6d4b\u8bd5\uff0c\u7528\u6765\u6253\u5370\u5957\u63a5\u5b57\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 # print(s.fileno()) # print(select.EPOLLIN|select.EPOLLET) # \u6ce8\u518c\u4e8b\u4ef6\u5230epoll\u4e2d # epoll.register(fd[, eventmask]) # \u6ce8\u610f\uff0c\u5982\u679cfd\u5df2\u7ecf\u6ce8\u518c\u8fc7\uff0c\u5219\u4f1a\u53d1\u751f\u5f02\u5e38 # \u5c06\u521b\u5efa\u7684\u5957\u63a5\u5b57\u6dfb\u52a0\u5230epoll\u7684\u4e8b\u4ef6\u76d1\u542c\u4e2d epoll . register ( s . fileno (), select . EPOLLIN | select . EPOLLET ) connections = {} addresses = {} # \u5faa\u73af\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u5230\u6765\u6216\u8005\u5bf9\u65b9\u53d1\u9001\u6570\u636e while True : # epoll \u8fdb\u884c fd \u626b\u63cf\u7684\u5730\u65b9 -- \u672a\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u5219\u4e3a\u963b\u585e\u7b49\u5f85 epoll_list = epoll . poll () # \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5224\u65ad for fd , events in epoll_list : # print fd # print events # \u5982\u679c\u662fsocket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u88ab\u6fc0\u6d3b if fd == s . fileno (): new_socket , new_addr = s . accept () print ( '\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765 %s ' % str ( new_addr )) # \u5c06 conn \u548c addr \u4fe1\u606f\u5206\u522b\u4fdd\u5b58\u8d77\u6765 connections [ new_socket . fileno ()] = new_socket addresses [ new_socket . fileno ()] = new_addr # \u5411 epoll \u4e2d\u6ce8\u518c \u65b0socket \u7684 \u53ef\u8bfb \u4e8b\u4ef6 epoll . register ( new_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u5982\u679c\u662f\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e elif events == select . EPOLLIN : # \u4ece\u6fc0\u6d3b fd \u4e0a\u63a5\u6536 recvData = connections [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) if recvData : print ( 'recv: %s ' % recvData ) else : # \u4ece epoll \u4e2d\u79fb\u9664\u8be5 \u8fde\u63a5 fd epoll . unregister ( fd ) # server \u4fa7\u4e3b\u52a8\u5173\u95ed\u8be5 \u8fde\u63a5 fd connections [ fd ] . close () print ( \" %s ---offline---\" % str ( addresses [ fd ])) del connections [ fd ] del addresses [ fd ] \u8bf4\u660e \u00b6 EPOLLIN \uff08\u53ef\u8bfb\uff09 EPOLLOUT \uff08\u53ef\u5199\uff09 EPOLLET \uff08ET\u6a21\u5f0f\uff09 epoll\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\u6a21\u5f0f\uff1aLT\uff08level trigger\uff09\u548cET\uff08edge trigger\uff09\u3002LT\u6a21\u5f0f\u662f\u9ed8\u8ba4\u6a21\u5f0f\uff0cLT\u6a21\u5f0f\u4e0eET\u6a21\u5f0f\u7684\u533a\u522b\u5982\u4e0b\uff1a LT\u6a21\u5f0f\uff1a\u5f53epoll\u68c0\u6d4b\u5230\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u4e0b\u6b21\u8c03\u7528epoll\u65f6\uff0c\u4f1a\u518d\u6b21\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\u5e76\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002 ET\u6a21\u5f0f\uff1a\u5f53epoll\u68c0\u6d4b\u5230\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u4e0b\u6b21\u8c03\u7528epoll\u65f6\uff0c\u4e0d\u4f1a\u518d\u6b21\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\u5e76\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002 web\u9759\u6001\u670d\u52a1\u5668-epool \u00b6 \u4ee5\u4e0b\u4ee3\u7801\uff0c\u652f\u6301http\u7684\u957f\u8fde\u63a5\uff0c\u5373\u4f7f\u7528\u4e86 Content-Length import socket import time import sys import re import select class WSGIServer ( object ): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__ ( self , port , documents_root ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self . server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) self . server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . server_socket . listen ( 128 ) self . documents_root = documents_root # \u521b\u5efaepoll\u5bf9\u8c61 self . epoll = select . epoll () # \u5c06tcp\u670d\u52a1\u5668\u5957\u63a5\u5b57\u52a0\u5165\u5230epoll\u4e2d\u8fdb\u884c\u76d1\u542c self . epoll . register ( self . server_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u521b\u5efa\u6dfb\u52a0\u7684fd\u5bf9\u5e94\u7684\u5957\u63a5\u5b57 self . fd_socket = dict () def run_forever ( self ): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True : # epoll \u8fdb\u884c fd \u626b\u63cf\u7684\u5730\u65b9 -- \u672a\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u5219\u4e3a\u963b\u585e\u7b49\u5f85 epoll_list = self . epoll . poll () # \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5224\u65ad for fd , event in epoll_list : # \u5982\u679c\u662f\u670d\u52a1\u5668\u5957\u63a5\u5b57\u53ef\u4ee5\u6536\u6570\u636e\uff0c\u90a3\u4e48\u610f\u5473\u7740\u53ef\u4ee5\u8fdb\u884caccept if fd == self . server_socket . fileno (): new_socket , new_addr = self . server_socket . accept () # \u5411 epoll \u4e2d\u6ce8\u518c \u8fde\u63a5 socket \u7684 \u53ef\u8bfb \u4e8b\u4ef6 self . epoll . register ( new_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u8bb0\u5f55\u8fd9\u4e2a\u4fe1\u606f self . fd_socket [ new_socket . fileno ()] = new_socket # \u63a5\u6536\u5230\u6570\u636e elif event == select . EPOLLIN : request = self . fd_socket [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) if request : self . deal_with_request ( request , self . fd_socket [ fd ]) else : # \u5728epoll\u4e2d\u6ce8\u9500\u5ba2\u6237\u7aef\u7684\u4fe1\u606f self . epoll . unregister ( fd ) # \u5173\u95ed\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u53e5\u67c4 self . fd_socket [ fd ] . close () # \u5728\u5b57\u5178\u4e2d\u5220\u9664\u4e0e\u5df2\u5173\u95ed\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u4fe1\u606f del self . fd_socket [ fd ] def deal_with_request ( self , request , client_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" if not request : return request_lines = request . splitlines () for i , line in enumerate ( request_lines ): print ( i , line ) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re . match ( r \"([^/]*)([^ ]+)\" , request_lines [ 0 ]) if ret : print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 1 )) print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 2 )) file_name = ret . group ( 2 ) if file_name == \"/\" : file_name = \"/index.html\" # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try : f = open ( self . documents_root + file_name , \"rb\" ) except : response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \"Content-Type: text/html; charset=utf-8 \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' )) # \u5c06body\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_body . encode ( \"utf-8\" )) else : content = f . read () f . close () response_body = content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" # \u5c06\u6570\u636e\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( \"utf-8\" ) + response_body ) # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len ( sys . argv ) == 2 : port = sys . argv [ 1 ] if port . isdigit (): port = int ( port ) else : print ( \"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890\" ) return print ( \"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port: %s \" % port ) http_server = WSGIServer ( port , DOCUMENTS_ROOT ) http_server . run_forever () if __name__ == \"__main__\" : main () \u5c0f\u603b\u7ed3 \u00b6 I/O \u591a\u8def\u590d\u7528\u7684\u7279\u70b9\uff1a \u901a\u8fc7\u4e00\u79cd\u673a\u5236\u4f7f\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u540c\u65f6\u7b49\u5f85\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u800c\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\uff09\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8fdb\u5165\u8bfb\u5c31\u7eea\u72b6\u6001\uff0cepoll()\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd4\u56de\u3002 \u6240\u4ee5, IO\u591a\u8def\u590d\u7528\uff0c\u672c\u8d28\u4e0a\u4e0d\u4f1a\u6709\u5e76\u53d1\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u4efb\u4f55\u65f6\u5019\u8fd8\u662f\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u8fdb\u884c\u5de5\u4f5c\uff0c\u5b83\u4e4b\u6240\u4ee5\u80fd\u63d0\u9ad8\u6548\u7387\u662f\u56e0\u4e3aselect\\epoll \u628a\u8fdb\u6765\u7684socket\u653e\u5230\u4ed6\u4eec\u7684 '\u76d1\u89c6' \u5217\u8868\u91cc\u9762\uff0c\u5f53\u4efb\u4f55socket\u6709\u53ef\u8bfb\u53ef\u5199\u6570\u636e\u7acb\u9a6c\u5904\u7406\uff0c\u90a3\u5982\u679cselect\\epoll \u624b\u91cc\u540c\u65f6\u68c0\u6d4b\u7740\u5f88\u591asocket\uff0c \u4e00\u6709\u52a8\u9759\u9a6c\u4e0a\u8fd4\u56de\u7ed9\u8fdb\u7a0b\u5904\u7406\uff0c\u603b\u6bd4\u4e00\u4e2a\u4e00\u4e2asocket\u8fc7\u6765,\u963b\u585e\u7b49\u5f85,\u5904\u7406\u9ad8\u6548\u7387\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u591a\u7ebf\u7a0b/\u591a\u8fdb\u7a0b\u65b9\u5f0f\uff0c\u4e00\u4e2a\u8fde\u63a5\u8fc7\u6765\u5f00\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u5904\u7406\uff0c\u8fd9\u6837\u6d88\u8017\u7684\u5185\u5b58\u548c\u8fdb\u7a0b\u5207\u6362\u9875\u4f1a\u8017\u6389\u66f4\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408IO\u591a\u8def\u590d\u7528\u548c\u591a\u8fdb\u7a0b/\u591a\u7ebf\u7a0b \u6765\u9ad8\u6027\u80fd\u5e76\u53d1\uff0cIO\u590d\u7528\u8d1f\u8d23\u63d0\u9ad8\u63a5\u53d7socket\u7684\u901a\u77e5\u6548\u7387\uff0c\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4ea4\u7ed9\u8fdb\u7a0b\u6c60/\u7ebf\u7a0b\u6c60\u6765\u5904\u7406\u903b\u8f91\u3002 \u53c2\u8003\u8d44\u6599 \u00b6 \u5982\u679c\u60f3\u4e86\u89e3\u4e0bepoll\u5728Linux\u4e2d\u7684\u5b9e\u73b0\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u8003\uff1a http://blog.csdn.net/xiajun07061225/article/details/9250579 10.4. \u77e5\u8bc6\u6269\u5c55-C10K\u95ee\u9898 \u00b6 \u77e5\u8bc6\u6269\u5c55-C10K\u95ee\u9898 \u00b6 \u53c2\u8003\u6587\u7ae0 : \u300a\u5355\u53f0\u670d\u52a1\u5668\u5e76\u53d1TCP\u8fde\u63a5\u6570\u5230\u5e95\u53ef\u4ee5\u6709\u591a\u5c11\u300b http://www.52im.net/thread-561-1-1.html \u300a\u4e0a\u4e00\u4e2a10\u5e74\uff0c\u8457\u540d\u7684C10K\u5e76\u53d1\u8fde\u63a5\u95ee\u9898\u300b http://www.52im.net/thread-566-1-1.html","title":"004  10-web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#101-web-5-","text":"","title":"10.1. Web\u9759\u6001\u670d\u52a1\u5668-5-\u975e\u5835\u585e\u6a21\u5f0f"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#web-5-","text":"","title":"Web\u9759\u6001\u670d\u52a1\u5668-5-\u975e\u5835\u585e\u6a21\u5f0f"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#_1","text":"\u8bfe\u7a0b\u4ee3\u7801 import socket import time tcp_server_tcp = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #\u5efa\u7acbtcp\u670d\u52a1\u7aef tcp_server_tcp . bind (( \"\" , 7899 )) #\u7ed1\u5b9a\u7aef\u53e3 tcp_server_tcp . listen ( 128 ) #\u8bbe\u7f6e\u76d1\u542c tcp_server_tcp . setblocking ( False ) # \u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u5835\u585e\u7684\u65b9\u5f0f,\u670d\u52a1\u7aef\u8bbe\u7f6e\u4e3a\u8d39\u5835\u585e client_socket_list = list () #\u5efa\u7acb\u5ba2\u6237\u7aef\u5217\u8868,\u5982\u679c\u8fde\u5ba2\u6237\u7aef\u90fd\u6ca1\u6709\u90a3\u4e48\u4e0d\u7ba1\u600e\u4e48\u6837\u4f60\u90fd\u63a5\u6536\u4e0d\u5230\u6570\u636e,\u4f60try\u4e5f\u4e0d\u884c,\u56e0\u6b64\u4f7f\u7528\u5217\u8868 while True : # time.sleep(0.5) try : #\u5faa\u73af\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42,\u5982\u679c\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5c31\u4ea7\u751f\u5f02\u5e38\u5c31\u597d\u4e86 new_socket , new_addr = tcp_server_tcp . accept () except Exception as ret : #\u4ea7\u751f\u5f02\u5e38 print ( \"---\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765---\" ) else : #\u5982\u679c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765\u4e86 print ( \"---\u53ea\u8981\u6ca1\u6709\u4ea7\u751f\u5f02\u5e38\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740 \u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef----\" ) new_socket . setblocking ( False ) # \u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u5835\u585e\u7684\u65b9\u5f0f(True\u5c31\u662f\u9ed8\u8ba4\u5835\u585e),\u5ba2\u6237\u7aef\u4e5f\u8981\u8bbe\u7f6e\u6210\u8d39\u5835\u585e\u7684\u65b9\u5f0f #\u5982\u679c\u4e0d\u8bbe\u7f6e\u5ba2\u6237\u7aef\u662f\u8d39\u5835\u585e\u7684\u8bdd\u90a3\u4e48\u53ea\u6709\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u6570\u636e\u624d\u80fd\u89e3\u5835\u585e\u662f\u4e0d\u884c\u7684 client_socket_list . append ( new_socket ) #\u5ba2\u6237\u7aef\u6765\u4e86\u90a3\u5c31\u5b58\u50a8\u5230\u670d\u52a1\u5217\u8868\u4e2d for client_socket in client_socket_list : #\u4e3a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 try : recv_data = client_socket . recv ( 1024 ) except Exception as ret : print ( ret ) print ( \"----\u8fd9\u4e2a\u5ba2\u6237\u7aef\u6ca1\u6709\u53d1\u9001\u8fc7\u6765\u6570\u636e----\" ) else : #try\u6267\u884c\u662f\u6b63\u786e\u7684\u624d\u4f1a\u8fdb\u5165else print ( \"-----\u6ca1\u6709\u5f02\u5e38-----\" ) print ( recv_data ) if recv_data : # \u5bf9\u65b9\u53d1\u9001\u8fc7\u6765\u6570\u636e print ( \"----\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u4e86\u6570\u636e-----\" ) else : # \u5bf9\u65b9\u8c03\u7528close \u5bfc\u81f4\u4e86 recv\u8fd4\u56de client_socket . close () client_socket_list . remove ( client_socket ) #\u670d\u52a1\u5b8c\u6210\u7684\u5ba2\u6237\u7aef\u5c31\u7ed9\u5173\u95ed print ( \"---\u5ba2\u6237\u7aef\u5df2\u7ecf\u5173\u95ed----\" ) \u8be6\u7ec6\u4ee3\u7801 #coding=utf-8 from socket import * import time # \u7528\u6765\u5b58\u50a8\u6240\u6709\u7684\u65b0\u94fe\u63a5\u7684socket g_socket_list = list () def main (): server_socket = socket ( AF_INET , SOCK_STREAM ) server_socket . setsockopt ( SOL_SOCKET , SO_REUSEADDR , 1 ) server_socket . bind (( '' , 7890 )) server_socket . listen ( 128 ) # \u5c06\u5957\u63a5\u5b57\u8bbe\u7f6e\u4e3a\u975e\u5835\u585e # \u8bbe\u7f6e\u4e3a\u975e\u5835\u585e\u540e\uff0c\u5982\u679caccept\u65f6\uff0c\u6070\u5de7\u6ca1\u6709\u5ba2\u6237\u7aefconnect\uff0c\u90a3\u4e48accept\u4f1a # \u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\uff0c\u6240\u4ee5\u9700\u8981try\u6765\u8fdb\u884c\u5904\u7406 server_socket . setblocking ( False ) while True : # \u7528\u6765\u6d4b\u8bd5 time . sleep ( 0.5 ) try : newClientInfo = server_socket . accept () except Exception as result : pass else : print ( \"\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765: %s \" % str ( newClientInfo )) newClientInfo [ 0 ] . setblocking ( False ) # \u8bbe\u7f6e\u4e3a\u975e\u5835\u585e g_socket_list . append ( newClientInfo ) for client_socket , client_addr in g_socket_list : try : recvData = client_socket . recv ( 1024 ) if recvData : print ( 'recv[ %s ]: %s ' % ( str ( client_addr ), recvData )) else : print ( '[ %s ]\u5ba2\u6237\u7aef\u5df2\u7ecf\u5173\u95ed' % str ( client_addr )) client_socket . close () g_socket_list . remove (( client_socket , client_addr )) except Exception as result : pass print ( g_socket_list ) # for test if __name__ == '__main__' : main ()","title":"\u5355\u8fdb\u7a0b\u975e\u5835\u585e \u6a21\u578b"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#web-","text":"\u4e0a\u8bfe\u7248\u672c import socket import re def service_client ( new_socket , request ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... # request = new_socket.recv(1024).decode(\"utf-8\") # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () response_body = html_content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) #\u544a\u8bc9\u5ba2\u6237\u7aef\u63a5\u6536\u591a\u957f\u7684body,\u8fd9\u6837\u6d4f\u89c8\u5668\u63a5\u6536\u5230\u4e86\u5c31\u4e0d\u7528\u4e00\u76f4\u8f6c\u5708\u4e86 response_header += \" \\r\\n \" response = response_header . encode ( \"utf-8\" ) + response_body new_socket . send ( response ) #\u5173\u95ed\u5957\u63a5 # new_socket.close()#\u8fd9\u91cc\u4e0d\u518d\u5173\u95ed,\u653e\u5927\u4e3b\u51fd\u6570\u91cc\u8fdb\u884c\u5173\u95ed\u5b9e\u73b0\u957f\u94fe\u63a5 def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) #\u521b\u5efa\u670d\u52a1\u7aef tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) #\u8bbe\u7f6e\u5173\u95ed\u94fe\u63a5\u8fd8\u662f\u5565\u6765\u7740 # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) #\u7ed1\u5b9a\u7aef\u53e3 # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) tcp_server_socket . setblocking ( False ) # \u5c06\u5957\u63a5\u5b57\u53d8\u4e3a\u975e\u5835\u585e client_socket_list = list () #\u521b\u5efa\u670d\u52a1\u5217\u8868 while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 try : new_socket , client_addr = tcp_server_socket . accept () except Exception as ret : pass else : new_socket . setblocking ( False ) #\u8bbe\u7f6e\u5ba2\u6237\u7aef\u975e\u5835\u585e client_socket_list . append ( new_socket ) #\u6dfb\u52a0\u5230\u5217\u8868 for client_socket in client_socket_list : try : recv_data = client_socket . recv ( 1024 ) . decode ( \"utf-8\" ) #\u63a5\u6536\u6570\u636e except Exception as ret : pass else : if recv_data : service_client ( client_socket , recv_data ) else : #\u6240\u6709\u7684\u6570\u636e\u8bf7\u6c42\u5b8c\u4e86\u5728\u8fd9\u91cc\u5c06\u5ba2\u6237\u7aef\u5173\u95ed client_socket . close () client_socket_list . remove ( client_socket ) # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main () \u8be6\u7ec6\u7248\u672c import time import socket import sys import re class WSGIServer ( object ): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__ ( self , port , documents_root ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self . server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) self . server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . server_socket . listen ( 128 ) self . server_socket . setblocking ( False ) self . client_socket_list = list () self . documents_root = documents_root def run_forever ( self ): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True : # time.sleep(0.5) # for test try : new_socket , new_addr = self . server_socket . accept () except Exception as ret : print ( \"-----1----\" , ret ) # for test else : new_socket . setblocking ( False ) self . client_socket_list . append ( new_socket ) for client_socket in self . client_socket_list : try : request = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) except Exception as ret : print ( \"------2----\" , ret ) # for test else : if request : self . deal_with_request ( request , client_socket ) else : client_socket . close () self . client_socket_list . remove ( client_socket ) print ( self . client_socket_list ) def deal_with_request ( self , request , client_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" if not request : return request_lines = request . splitlines () for i , line in enumerate ( request_lines ): print ( i , line ) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re . match ( r \"([^/]*)([^ ]+)\" , request_lines [ 0 ]) if ret : print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 1 )) print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 2 )) file_name = ret . group ( 2 ) if file_name == \"/\" : file_name = \"/index.html\" # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try : f = open ( self . documents_root + file_name , \"rb\" ) except : response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \"Content-Type: text/html; charset=utf-8 \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % ( len ( response_body )) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' )) # \u5c06body\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_body . encode ( \"utf-8\" )) else : content = f . read () f . close () response_body = content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % ( len ( response_body )) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' ) + response_body ) # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len ( sys . argv ) == 2 : port = sys . argv [ 1 ] if port . isdigit (): port = int ( port ) else : print ( \"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890\" ) return print ( \"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port: %s \" % port ) http_server = WSGIServer ( port , DOCUMENTS_ROOT ) http_server . run_forever () if __name__ == \"__main__\" : main ()","title":"web\u9759\u6001\u670d\u52a1\u5668-\u5355\u8fdb\u7a0b\u975e\u5835\u585e(\u957f\u94fe\u63a5)"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#102-web-6-epoll","text":"","title":"10.2. Web\u9759\u6001\u670d\u52a1\u5668-6-epoll"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#web-6-epoll","text":"","title":"Web\u9759\u6001\u670d\u52a1\u5668-6-epoll"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#io","text":"\u5c31\u662f\u6211\u4eec\u8bf4\u7684select\uff0cpoll\uff0cepoll\uff0c\u6709\u4e9b\u5730\u65b9\u4e5f\u79f0\u8fd9\u79cdIO\u65b9\u5f0f\u4e3aevent driven IO\u3002 select/epoll\u7684\u597d\u5904\u5c31\u5728\u4e8e\u5355\u4e2aprocess\u5c31\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u7f51\u7edc\u8fde\u63a5\u7684IO\u3002 \u5b83\u7684\u57fa\u672c\u539f\u7406\u5c31\u662fselect\uff0cpoll\uff0cepoll\u8fd9\u4e2afunction\u4f1a\u4e0d\u65ad\u7684\u8f6e\u8be2\u6240\u8d1f\u8d23\u7684\u6240\u6709socket\uff0c\u5f53\u67d0\u4e2asocket\u6709\u6570\u636e\u5230\u8fbe\u4e86\uff0c\u5c31\u901a\u77e5\u7528\u6237\u8fdb\u7a0b\u3002 \u8bfe\u4e0a\u5b9e\u73b0 import socket import re import select #\u5bfc\u5165select\u5305 def service_client ( new_socket , request ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... # request = new_socket.recv(1024).decode(\"utf-8\") # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () response_body = html_content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" response = response_header . encode ( \"utf-8\" ) + response_body new_socket . send ( response ) def main (): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . listen ( 128 ) tcp_server_socket . setblocking ( False ) # \u5c06\u5957\u63a5\u5b57\u53d8\u4e3a\u975e\u5835\u585e # \u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61(\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5171\u4eab) epl = select . epoll () #\u4f7f\u7528select\u7684epoll\u7c7b\u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61 # \u5c06\u76d1\u542c\u5957\u63a5\u5b57\u5bf9\u5e94\u7684fd(\u6587\u4ef6\u6807\u5fd7\u7b26)\u6ce8\u518c\u5230epoll\u4e2d epl . register ( tcp_server_socket . fileno (), select . EPOLLIN ) #fileno()\u6587\u4ef6\u6807\u8bc6\u7b26 select.EPOLLIN\u6807\u8bc6\u7684\u662f\u68c0\u6d4b\u8fd9\u4e2a\u670d\u52a1\u7aef\u662f\u5426\u6709\u8f93\u5165 fd_event_dict = dict () while True : fd_event_list = epl . poll () # \u9ed8\u8ba4\u4f1a\u5835\u585e\uff0c\u76f4\u5230 os\u76d1\u6d4b\u5230\u6570\u636e\u5230\u6765 \u901a\u8fc7\u4e8b\u4ef6\u901a\u77e5\u65b9\u5f0f \u544a\u8bc9\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6b64\u65f6\u624d\u4f1a\u89e3\u5835\u585e # [(fd, event), (\u5957\u63a5\u5b57\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26, \u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5230\u5e95\u662f\u4ec0\u4e48\u4e8b\u4ef6 \u4f8b\u5982 \u53ef\u4ee5\u8c03\u7528recv\u63a5\u6536\u7b49)](\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\u5c06\u591a\u4e2a\u7b49\u5f85\u5904\u7406\u7684\u4e8b\u4ef6\u4e00\u5757\u4f20\u9012) for fd , event in fd_event_list : #(\u52a8\u4f5c\u7684\u5957\u63a5\u5b57\u4f1a\u8fd4\u56de\u5230\u8fd9\u4e2alist\u4e2d\u6bcf\u4e00\u4e2alist\u662f\u4e00\u4e2a\u5143\u7956(\u5143\u7956\u4e2d\u662f\u6807\u5fd7\u7b26\u548c\u4e8b\u4ef6)) # \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5(\u76d1\u542c\u5957\u63a5\u5b57\u52a8\u4f5c\u8d70\u7684\u662fif,\u8fdb\u884c\u6dfb\u52a0\u65b0\u7684\u5ba2\u6237\u7aef) if fd == tcp_server_socket . fileno (): #\u6807\u5fd7\u7b26\u662f\u76d1\u542c\u5957\u63a5\u5b57\u7684\u90a3\u4e48\u5c31\u8981\u63a5\u53d7\u5ba2\u6237\u7aef new_socket , client_addr = tcp_server_socket . accept () epl . register ( new_socket . fileno (), select . EPOLLIN ) #\u63a5\u6536\u5230\u7684\u65b0\u7684\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u8fdb\u884c\u6ce8\u518c(\u8fd9\u4e2a\u4e3b\u8981\u662f\u76d1\u542c\u5957\u63a5\u5b57\u7684) fd_event_dict [ new_socket . fileno ()] = new_socket #\u5b58\u50a8\u5230\u5b57\u5178\u4e2d,\u5c06\u6587\u4ef6\u6807\u5fd7\u7b26\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u5bf9\u5e94 elif event == select . EPOLLIN : #\u8fd9\u91cc\u5c31\u4e0d\u662f\u5224\u65ad\u6807\u5fd7\u7b26\u4e86,\u800c\u662f\u5224\u65ad\u6709\u6ca1\u6709\u6570\u636e\u7684\u5230\u6765(\u8fd9\u91cc\u4e0d\u80fd\u4f7f\u7528\u6587\u4ef6\u6807\u5fd7\u7b26,\u4e0d\u80fd\u5224\u65ad\u662f\u54ea\u4e2a\u5ba2\u6237\u7aef) #\u5ba2\u6237\u7aef\u8fdb\u884c\u4f20\u6570\u636e\u7684\u65f6\u5019\u8d70\u7684\u662f\u8fd9\u4e2aelse,\u56e0\u4e3a\u6ca1\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u94fe\u63a5,\u800c\u662f\u5ba2\u6237\u7aef\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93 # \u5224\u65ad\u5df2\u7ecf\u94fe\u63a5\u7684\u5ba2\u6237\u7aef\u662f\u5426\u6709\u6570\u636e\u53d1\u9001\u8fc7\u6765 recv_data = fd_event_dict [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) #\u4ece\u5b57\u5178\u4e2d\u53d6\u51fa\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u670d\u52a1 if recv_data : #\u6709\u6570\u636e\u5230\u6765 service_client ( fd_event_dict [ fd ], recv_data ) else : #\u7ed3\u675f\u4e86\u94fe\u63a5 fd_event_dict [ fd ] . close () #\u5173\u95ed\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 epl . unregister ( fd ) #\u53d6\u6d88\u6ce8\u518c del fd_event_dict [ fd ] #\u5220\u9664\u5b57\u5178\u4e2d\u7684\u952e\u503c\u5bf9 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 tcp_server_socket . close () if __name__ == \"__main__\" : main ()","title":"IO \u591a\u8def\u590d\u7528"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#epoll","text":"import socket import select # \u521b\u5efa\u5957\u63a5\u5b57 s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # \u8bbe\u7f6e\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7ed1\u5b9a\u7684\u4fe1\u606f s . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # \u7ed1\u5b9a\u672c\u673a\u4fe1\u606f s . bind (( \"\" , 7788 )) # \u53d8\u4e3a\u88ab\u52a8 s . listen ( 10 ) # \u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61 epoll = select . epoll () # \u6d4b\u8bd5\uff0c\u7528\u6765\u6253\u5370\u5957\u63a5\u5b57\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 # print(s.fileno()) # print(select.EPOLLIN|select.EPOLLET) # \u6ce8\u518c\u4e8b\u4ef6\u5230epoll\u4e2d # epoll.register(fd[, eventmask]) # \u6ce8\u610f\uff0c\u5982\u679cfd\u5df2\u7ecf\u6ce8\u518c\u8fc7\uff0c\u5219\u4f1a\u53d1\u751f\u5f02\u5e38 # \u5c06\u521b\u5efa\u7684\u5957\u63a5\u5b57\u6dfb\u52a0\u5230epoll\u7684\u4e8b\u4ef6\u76d1\u542c\u4e2d epoll . register ( s . fileno (), select . EPOLLIN | select . EPOLLET ) connections = {} addresses = {} # \u5faa\u73af\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u5230\u6765\u6216\u8005\u5bf9\u65b9\u53d1\u9001\u6570\u636e while True : # epoll \u8fdb\u884c fd \u626b\u63cf\u7684\u5730\u65b9 -- \u672a\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u5219\u4e3a\u963b\u585e\u7b49\u5f85 epoll_list = epoll . poll () # \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5224\u65ad for fd , events in epoll_list : # print fd # print events # \u5982\u679c\u662fsocket\u521b\u5efa\u7684\u5957\u63a5\u5b57\u88ab\u6fc0\u6d3b if fd == s . fileno (): new_socket , new_addr = s . accept () print ( '\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u5230\u6765 %s ' % str ( new_addr )) # \u5c06 conn \u548c addr \u4fe1\u606f\u5206\u522b\u4fdd\u5b58\u8d77\u6765 connections [ new_socket . fileno ()] = new_socket addresses [ new_socket . fileno ()] = new_addr # \u5411 epoll \u4e2d\u6ce8\u518c \u65b0socket \u7684 \u53ef\u8bfb \u4e8b\u4ef6 epoll . register ( new_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u5982\u679c\u662f\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e elif events == select . EPOLLIN : # \u4ece\u6fc0\u6d3b fd \u4e0a\u63a5\u6536 recvData = connections [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) if recvData : print ( 'recv: %s ' % recvData ) else : # \u4ece epoll \u4e2d\u79fb\u9664\u8be5 \u8fde\u63a5 fd epoll . unregister ( fd ) # server \u4fa7\u4e3b\u52a8\u5173\u95ed\u8be5 \u8fde\u63a5 fd connections [ fd ] . close () print ( \" %s ---offline---\" % str ( addresses [ fd ])) del connections [ fd ] del addresses [ fd ]","title":"epoll\u7b80\u5355\u6a21\u578b"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#_2","text":"EPOLLIN \uff08\u53ef\u8bfb\uff09 EPOLLOUT \uff08\u53ef\u5199\uff09 EPOLLET \uff08ET\u6a21\u5f0f\uff09 epoll\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\u6a21\u5f0f\uff1aLT\uff08level trigger\uff09\u548cET\uff08edge trigger\uff09\u3002LT\u6a21\u5f0f\u662f\u9ed8\u8ba4\u6a21\u5f0f\uff0cLT\u6a21\u5f0f\u4e0eET\u6a21\u5f0f\u7684\u533a\u522b\u5982\u4e0b\uff1a LT\u6a21\u5f0f\uff1a\u5f53epoll\u68c0\u6d4b\u5230\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u4e0b\u6b21\u8c03\u7528epoll\u65f6\uff0c\u4f1a\u518d\u6b21\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\u5e76\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002 ET\u6a21\u5f0f\uff1a\u5f53epoll\u68c0\u6d4b\u5230\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u4e0b\u6b21\u8c03\u7528epoll\u65f6\uff0c\u4e0d\u4f1a\u518d\u6b21\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\u5e76\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002","title":"\u8bf4\u660e"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#web-epool","text":"\u4ee5\u4e0b\u4ee3\u7801\uff0c\u652f\u6301http\u7684\u957f\u8fde\u63a5\uff0c\u5373\u4f7f\u7528\u4e86 Content-Length import socket import time import sys import re import select class WSGIServer ( object ): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__ ( self , port , documents_root ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self . server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) self . server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . server_socket . listen ( 128 ) self . documents_root = documents_root # \u521b\u5efaepoll\u5bf9\u8c61 self . epoll = select . epoll () # \u5c06tcp\u670d\u52a1\u5668\u5957\u63a5\u5b57\u52a0\u5165\u5230epoll\u4e2d\u8fdb\u884c\u76d1\u542c self . epoll . register ( self . server_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u521b\u5efa\u6dfb\u52a0\u7684fd\u5bf9\u5e94\u7684\u5957\u63a5\u5b57 self . fd_socket = dict () def run_forever ( self ): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True : # epoll \u8fdb\u884c fd \u626b\u63cf\u7684\u5730\u65b9 -- \u672a\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u5219\u4e3a\u963b\u585e\u7b49\u5f85 epoll_list = self . epoll . poll () # \u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5224\u65ad for fd , event in epoll_list : # \u5982\u679c\u662f\u670d\u52a1\u5668\u5957\u63a5\u5b57\u53ef\u4ee5\u6536\u6570\u636e\uff0c\u90a3\u4e48\u610f\u5473\u7740\u53ef\u4ee5\u8fdb\u884caccept if fd == self . server_socket . fileno (): new_socket , new_addr = self . server_socket . accept () # \u5411 epoll \u4e2d\u6ce8\u518c \u8fde\u63a5 socket \u7684 \u53ef\u8bfb \u4e8b\u4ef6 self . epoll . register ( new_socket . fileno (), select . EPOLLIN | select . EPOLLET ) # \u8bb0\u5f55\u8fd9\u4e2a\u4fe1\u606f self . fd_socket [ new_socket . fileno ()] = new_socket # \u63a5\u6536\u5230\u6570\u636e elif event == select . EPOLLIN : request = self . fd_socket [ fd ] . recv ( 1024 ) . decode ( \"utf-8\" ) if request : self . deal_with_request ( request , self . fd_socket [ fd ]) else : # \u5728epoll\u4e2d\u6ce8\u9500\u5ba2\u6237\u7aef\u7684\u4fe1\u606f self . epoll . unregister ( fd ) # \u5173\u95ed\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u53e5\u67c4 self . fd_socket [ fd ] . close () # \u5728\u5b57\u5178\u4e2d\u5220\u9664\u4e0e\u5df2\u5173\u95ed\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u4fe1\u606f del self . fd_socket [ fd ] def deal_with_request ( self , request , client_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" if not request : return request_lines = request . splitlines () for i , line in enumerate ( request_lines ): print ( i , line ) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re . match ( r \"([^/]*)([^ ]+)\" , request_lines [ 0 ]) if ret : print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 1 )) print ( \"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\" , ret . group ( 2 )) file_name = ret . group ( 2 ) if file_name == \"/\" : file_name = \"/index.html\" # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try : f = open ( self . documents_root + file_name , \"rb\" ) except : response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found \\r\\n \" response_header += \"Content-Type: text/html; charset=utf-8 \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( 'utf-8' )) # \u5c06body\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_body . encode ( \"utf-8\" )) else : content = f . read () f . close () response_body = content response_header = \"HTTP/1.1 200 OK \\r\\n \" response_header += \"Content-Length: %d \\r\\n \" % len ( response_body ) response_header += \" \\r\\n \" # \u5c06\u6570\u636e\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket . send ( response_header . encode ( \"utf-8\" ) + response_body ) # \u8bbe\u7f6e\u670d\u52a1\u5668\u670d\u52a1\u9759\u6001\u8d44\u6e90\u65f6\u7684\u8def\u5f84 DOCUMENTS_ROOT = \"./html\" def main (): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len ( sys . argv ) == 2 : port = sys . argv [ 1 ] if port . isdigit (): port = int ( port ) else : print ( \"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890\" ) return print ( \"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port: %s \" % port ) http_server = WSGIServer ( port , DOCUMENTS_ROOT ) http_server . run_forever () if __name__ == \"__main__\" : main ()","title":"web\u9759\u6001\u670d\u52a1\u5668-epool"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#_3","text":"I/O \u591a\u8def\u590d\u7528\u7684\u7279\u70b9\uff1a \u901a\u8fc7\u4e00\u79cd\u673a\u5236\u4f7f\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u540c\u65f6\u7b49\u5f85\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u800c\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\uff09\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8fdb\u5165\u8bfb\u5c31\u7eea\u72b6\u6001\uff0cepoll()\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd4\u56de\u3002 \u6240\u4ee5, IO\u591a\u8def\u590d\u7528\uff0c\u672c\u8d28\u4e0a\u4e0d\u4f1a\u6709\u5e76\u53d1\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u4efb\u4f55\u65f6\u5019\u8fd8\u662f\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u8fdb\u884c\u5de5\u4f5c\uff0c\u5b83\u4e4b\u6240\u4ee5\u80fd\u63d0\u9ad8\u6548\u7387\u662f\u56e0\u4e3aselect\\epoll \u628a\u8fdb\u6765\u7684socket\u653e\u5230\u4ed6\u4eec\u7684 '\u76d1\u89c6' \u5217\u8868\u91cc\u9762\uff0c\u5f53\u4efb\u4f55socket\u6709\u53ef\u8bfb\u53ef\u5199\u6570\u636e\u7acb\u9a6c\u5904\u7406\uff0c\u90a3\u5982\u679cselect\\epoll \u624b\u91cc\u540c\u65f6\u68c0\u6d4b\u7740\u5f88\u591asocket\uff0c \u4e00\u6709\u52a8\u9759\u9a6c\u4e0a\u8fd4\u56de\u7ed9\u8fdb\u7a0b\u5904\u7406\uff0c\u603b\u6bd4\u4e00\u4e2a\u4e00\u4e2asocket\u8fc7\u6765,\u963b\u585e\u7b49\u5f85,\u5904\u7406\u9ad8\u6548\u7387\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u591a\u7ebf\u7a0b/\u591a\u8fdb\u7a0b\u65b9\u5f0f\uff0c\u4e00\u4e2a\u8fde\u63a5\u8fc7\u6765\u5f00\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u5904\u7406\uff0c\u8fd9\u6837\u6d88\u8017\u7684\u5185\u5b58\u548c\u8fdb\u7a0b\u5207\u6362\u9875\u4f1a\u8017\u6389\u66f4\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408IO\u591a\u8def\u590d\u7528\u548c\u591a\u8fdb\u7a0b/\u591a\u7ebf\u7a0b \u6765\u9ad8\u6027\u80fd\u5e76\u53d1\uff0cIO\u590d\u7528\u8d1f\u8d23\u63d0\u9ad8\u63a5\u53d7socket\u7684\u901a\u77e5\u6548\u7387\uff0c\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4ea4\u7ed9\u8fdb\u7a0b\u6c60/\u7ebf\u7a0b\u6c60\u6765\u5904\u7406\u903b\u8f91\u3002","title":"\u5c0f\u603b\u7ed3"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#_4","text":"\u5982\u679c\u60f3\u4e86\u89e3\u4e0bepoll\u5728Linux\u4e2d\u7684\u5b9e\u73b0\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u8003\uff1a http://blog.csdn.net/xiajun07061225/article/details/9250579","title":"\u53c2\u8003\u8d44\u6599"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#104-c10k","text":"","title":"10.4. \u77e5\u8bc6\u6269\u5c55-C10K\u95ee\u9898"},{"location":"python-web/004--10--web\u670d\u52a1\u5668-\u5e76\u53d1\u670d\u52a1\u56682/#-c10k","text":"\u53c2\u8003\u6587\u7ae0 : \u300a\u5355\u53f0\u670d\u52a1\u5668\u5e76\u53d1TCP\u8fde\u63a5\u6570\u5230\u5e95\u53ef\u4ee5\u6709\u591a\u5c11\u300b http://www.52im.net/thread-561-1-1.html \u300a\u4e0a\u4e00\u4e2a10\u5e74\uff0c\u8457\u540d\u7684C10K\u5e76\u53d1\u8fde\u63a5\u95ee\u9898\u300b http://www.52im.net/thread-566-1-1.html","title":"\u77e5\u8bc6\u6269\u5c55-C10K\u95ee\u9898"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/","text":"\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b \u00b6 1. 2\u53f0\u7535\u8111\u7684\u7f51\u7edc \u00b6 \u8bf4\u660e \u00b6 \u5982\u679c\u4e24\u53f0\u7535\u8111\u4e4b\u95f4\u901a\u8fc7\u7f51\u7ebf\u8fde\u63a5\u662f\u53ef\u4ee5\u76f4\u63a5\u901a\u4fe1\u7684\uff0c\u4f46\u662f\u9700\u8981\u63d0\u524d\u8bbe\u7f6e\u597dip\u5730\u5740\u4ee5\u53ca\u7f51\u7edc\u63a9\u7801 \u5e76\u4e14ip\u5730\u5740\u9700\u8981\u63a7\u5236\u5728\u540c\u4e00\u7f51\u6bb5\u5185\uff0c\u4f8b\u5982 \u4e00\u53f0\u4e3a 192.168.1.1 \u53e6\u4e00\u53f0\u4e3a 192.168.1.2 \u5219\u53ef\u4ee5\u8fdb\u884c\u901a\u4fe1 2. \u4f7f\u7528\u96c6\u7ebf\u5668\u7ec4\u6210\u4e00\u4e2a\u7f51\u7edc \u00b6 \u8bf4\u660e \u00b6 \u5f53\u6709\u591a\u6001\u7535\u8111\u9700\u8981\u7ec4\u6210\u4e00\u4e2a\u7f51\u65f6\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u96c6\u7ebf\u5668\uff08Hub\uff09\u5c06\u5176\u94fe\u63a5\u5728\u4e00\u8d77 \u4e00\u822c\u60c5\u51b5\u4e0b\u96c6\u7ebf\u5668\u7684\u63a5\u53e3\u8f83\u5c11 \u96c6\u7ebf\u5668\u6709\u4e2a\u7f3a\u70b9\uff0c\u5b83\u4ee5\u5e7f\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u53d1\u9001\u4efb\u4f55\u6570\u636e\uff0c\u5373\u5982\u679c\u96c6\u7ebf\u5668\u63a5\u6536\u5230\u6765\u81eaA\u7535\u8111\u7684\u6570\u636e\u672c\u6765\u662f\u60f3\u8f6c\u53d1\u7ed9B\u7535\u8111\uff0c\u5982\u679c\u6b64\u65f6\u5b83\u8fd8\u8fde\u63a5\u7740\u53e6\u5916\u4e24\u53f0\u7535\u8111C\u3001D\uff0c\u90a3\u4e48\u5b83\u4f1a\u628a\u8fd9\u4e2a\u6570\u636e\u7ed9\u6bcf\u4e2a\u7535\u8111\u90fd\u53d1\u9001\u4e00\u4efd\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u7f51\u7edc\u62e5\u5835 3. \u4f7f\u7528\u4ea4\u6362\u673a\u7ec4\u6210\u4e00\u4e2a\u7f51\u7edc \u00b6 \u8bf4\u660e \u00b6 \u514b\u670d\u4e86\u96c6\u7ebf\u5668\u4ee5\u5e7f\u64ad\u53d1\u9001\u6570\u636e\u7684\u7f3a\u70b9\uff0c\u5f53\u9700\u8981\u5e7f\u64ad\u7684\u65f6\u5019\u53d1\u9001\u5e7f\u64ad\uff0c\u5f53\u9700\u8981\u5355\u64ad\u7684\u65f6\u5019\u53c8\u80fd\u591f\u4ee5\u5355\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u53d1\u9001 \u5b83\u5df2\u7ecf\u66ff\u4ee3\u4e86\u4e4b\u524d\u7684\u96c6\u7ebf\u5668 \u4f01\u4e1a\u4e2d\u5c31\u662f\u7528\u4ea4\u6362\u673a\u6765\u5b8c\u6210\u591a\u6001\u7535\u8111\u8bbe\u5907\u7684\u94fe\u63a5\u6210\u7f51\u7edc\u7684 4. \u4f7f\u7528\u8def\u7531\u5668\u8fde\u63a5\u591a\u4e2a\u7f51\u7edc \u00b6 5. \u901a\u4fe1\u8fc7\u7a0b\uff08\u590d\u6742\uff09 \u00b6 \u8f83\u4e3a\u590d\u6742\u7684\u901a\u4fe1\u8fc7\u7a0b\u5982\uff1a\u8bbf\u95ee www.itheima.com \u9996\u5148\u7535\u8111\u83b7\u5f97\u57df\u540d\u4ee5\u540e\uff0c\u5148\u5411\u7f51\u5173\u4f7f\u7528arp\u8bf7\u6c42\u7f51\u5173\u7684mac\u5730\u5740\uff0c\u7136\u540e\u83b7\u53d6mac\u5730\u5740\u540e\u5c06\u57df\u540d\u53d1\u9001\u7ed9\u7f51\u5173\uff0c\u7f51\u5173\u8fde\u63a5\u4e92\u8054\u7f51\u8fde\u63a5dns\u670d\u52a1\u5668\uff0c\u7136\u540e\u4f20\u56de\u57df\u540d\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u7ecf\u8fc7\u7f51\u5173\u8ddf\u670d\u52a1\u7aef\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\u8fdb\u884c\u8fde\u63a5\u3002\u7136\u540e\u8fdb\u884c\u6570\u636e\u7684\u4ea4\u4e92\u3002\u6570\u636e\u4ea4\u4e92\u5b8c\u6210\u8fdb\u884c\u56db\u6b21\u6325\u624b\u5b8c\u6210\u6570\u636e\u64cd\u4f5c \u8bf4\u660e \u00b6 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4e00\u4e2a\u7f51\u5740\u65f6\uff0c\u9700\u8981\u5c06\u5b83\u5148\u89e3\u6790\u51faip\u5730\u5740\u6765 \u5f53\u5f97\u5230ip\u5730\u5740\u4e4b\u540e\uff0c\u6d4f\u89c8\u5668\u4ee5tcp\u7684\u65b9\u5f0f3\u6b21\u63e1\u624b\u94fe\u63a5\u670d\u52a1\u5668 \u4ee5tcp\u7684\u65b9\u5f0f\u53d1\u9001http\u534f\u8bae\u7684\u8bf7\u6c42\u6570\u636e \u7ed9 \u670d\u52a1\u5668 \u670d\u52a1\u5668tcp\u7684\u65b9\u5f0f\u56de\u5e94http\u534f\u8bae\u7684\u5e94\u7b54\u6570\u636e \u7ed9\u6d4f\u89c8\u5668 5 ip\u76f8\u5f53\u4e8e\u76ee\u7684\u5730\u3002mac\u76f8\u5f53\u4e8e\u8def\u53e3 \u603b\u7ed3 MAC\u5730\u5740\uff1a\u5728\u8bbe\u5907\u4e0e\u8bbe\u5907\u4e4b\u95f4\u6570\u636e\u901a\u4fe1\u65f6\u7528\u6765\u6807\u8bb0\u6536\u53d1\u53cc\u65b9\uff08\u7f51\u5361\u7684\u5e8f\u5217\u53f7\uff09 IP\u5730\u5740\uff1a\u5728\u903b\u8f91\u4e0a\u6807\u8bb0\u4e00\u53f0\u7535\u8111\uff0c\u7528\u6765\u6307\u5f15\u6570\u636e\u5305\u7684\u6536\u53d1\u65b9\u5411\uff08\u76f8\u5f53\u4e8e\u7535\u8111\u7684\u5e8f\u5217\u53f7\uff09 \u7f51\u7edc\u63a9\u7801\uff1a\u7528\u6765\u533a\u5206ip\u5730\u5740\u7684\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7 \u9ed8\u8ba4\u7f51\u5173\uff1a\u5f53\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u7684\u76ee\u7684ip\u4e0d\u5728\u672c\u7f51\u6bb5\u5185\u65f6\uff0c\u5c31\u4f1a\u53d1\u9001\u7ed9\u9ed8\u8ba4\u7684\u4e00\u53f0\u7535\u8111\uff0c\u6210\u4e3a\u7f51\u5173\uff08\u4e00\u822c\u90fd\u662f\u8def\u7531\u5668\uff09 \u96c6\u7ebf\u5668\uff1a\u5df2\u8fc7\u65f6\uff0c\u7528\u6765\u8fde\u63a5\u591a\u6001\u7535\u8111\uff0c\u7f3a\u70b9\uff1a\u6bcf\u6b21\u6536\u53d1\u6570\u636e\u90fd\u8fdb\u884c\u5e7f\u64ad\uff0c\u7f51\u7edc\u4f1a\u53d8\u7684\u62e5\u5835 \u4ea4\u6362\u673a\uff1a\u96c6\u7ebf\u5668\u7684\u5347\u7ea7\u7248\uff0c\u6709\u5b66\u4e60\u529f\u80fd\u77e5\u9053\u9700\u8981\u53d1\u9001\u7ed9\u54ea\u53f0\u8bbe\u5907\uff0c\u6839\u636e\u9700\u8981\u8fdb\u884c\u5355\u64ad\u3001\u5e7f\u64ad \u8def\u7531\u5668\uff1a\u8fde\u63a5\u591a\u4e2a\u4e0d\u540c\u7684\u7f51\u6bb5\uff0c\u8ba9\u4ed6\u4eec\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u6536\u53d1\u6570\u636e\uff0c\u6bcf\u6b21\u6536\u5230\u6570\u636e\u540e\uff0cip\u4e0d\u53d8\uff0c\u4f46\u662fMAC\u5730\u5740\u4f1a\u53d8\u5316 DNS\uff1a\u7528\u6765\u89e3\u6790\u51faIP\uff08\u7c7b\u4f3c\u7535\u8bdd\u7c3f\uff09 http\u670d\u52a1\u5668\uff1a\u63d0\u4f9b\u6d4f\u89c8\u5668\u80fd\u591f\u8bbf\u95ee\u5230\u7684\u6570\u636e 11.2 NAT \u00b6 NAT(\u7f51\u7edc\u5730\u5740\u8f6c\u6362\u5668) \u00b6 \u8bf4\u660e \u00b6 \u5f53\u5728\u5bb6\u91cc\u7528\u5bbd\u5e26\u94fe\u63a5\u4e0a\u7f51\u65f6\uff0c\u4f1a\u628a\u7535\u8bdd\u7ebf(\u4eca\u5929\u5f88\u591a\u5730\u65b9\u90fd\u662f\u5149\u7ea4)---->\u8c03\u5236\u89e3\u8c03\u5236(\u7b80\u79f0\u732b)------->\u7535\u8111\u7b49\u8bbe\u5907 \u7535\u8111\u4f1a\u5f97\u5230\u6765\u81ea\u7535\u4fe1\u670d\u52a1\u5546\u7684\u4e00\u4e2a\u516c\u7f51ip\u5730\u5740\uff08\u5207\u8bb0\u53ea\u6709\u516c\u7f51ip\u5730\u5740\u624d\u80fd\u4e0a\u7f51\uff09\uff0c\u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u4e0a\u7f51happy... \u4e3a\u4e86\u80fd\u591f\u8ba9\u591a\u53f0\u8bbe\u5907\u90fd\u53ef\u4ee5\u4e0a\u7f51\uff0c\u9700\u8981\u5c06\u6570\u636e\u8fdb\u884c\u201c\u5206\u6d41\u201d \u7535\u8bdd\u7ebf(\u4eca\u5929\u5f88\u591a\u5730\u65b9\u90fd\u662f\u5149\u7ea4)---->\u8c03\u5236\u89e3\u8c03\u5236(\u7b80\u79f0\u732b)------->\u8def\u7531\u5668------>\u7535\u8111\u7b49\u8bbe\u5907 \u6b64\u65f6\u8def\u7531\u5668\u7684\u4e00\u7aef\u6709\u4e00\u4e2a\u516c\u7f51ip\u5730\u5740\uff0c\u5269\u4e0b\u76844\u4e2a\uff08\u8def\u7531\u5668\u578b\u53f7\u4e0d\u540c\u4e2a\u6570\u4e0d\u540c\uff09\u53ef\u4ee5\u63a5\u5165\u7535\u8111\u7b49\u8bbe\u5907 \u5e76\u4e14 \u5b83\u4eec\u7684ip\u662f\u79c1\u6709ip(\u4f8b\u5982 192.168.1.2) \u5f53\u4e00\u4e2a\u7535\u8111\uff08192.168.1.2\uff09\u4e0a\u7f51\u65f6\uff0c\u5148\u901a\u8fc7DNS\u534f\u8bae\u89e3\u6790\u51fa\u67d0\u4e2a\u57df\u540d\u5bf9\u5e94\u7684ip\uff0c\u7136\u540e \u53d1\u9001\u6570\u636e\u65f6,\u5728\u7ecf\u8fc7\u8def\u7531\u5668\u65f6\u8f6c\u6362\u4e3a\u516c\u7f51ip\u4ee5\u53ca\u8def\u7531\u5668\u81ea\u5df1\u5206\u914d\u7684\u4e34\u65f6\u7aef\u53e3 192.168.1.2:6789----->192.168.1.1 \u8def\u7531\u5668 116.226.52.212:6539------->\u732b---->\u4e07\u7ef4\u7f51 \u63a5\u6536\u6570\u636e\u65f6,\u5728\u7ecf\u8fc7\u8def\u7531\u5668\u65f6\u8f6c\u6362\u4e3a\u8def\u7531\u5668\u4e4b\u524d\u8bb0\u5f55\u7684ip\u4ee5\u53caport \u4e07\u7ef4\u7f51------->\u732b----->116.226.52.212:6539 \u8def\u7531\u5668 192.168.1.1 ---->192.168.1.2:6789","title":"005  11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_1","text":"","title":"\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#146-2","text":"","title":"1. 2\u53f0\u7535\u8111\u7684\u7f51\u7edc"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_2","text":"\u5982\u679c\u4e24\u53f0\u7535\u8111\u4e4b\u95f4\u901a\u8fc7\u7f51\u7ebf\u8fde\u63a5\u662f\u53ef\u4ee5\u76f4\u63a5\u901a\u4fe1\u7684\uff0c\u4f46\u662f\u9700\u8981\u63d0\u524d\u8bbe\u7f6e\u597dip\u5730\u5740\u4ee5\u53ca\u7f51\u7edc\u63a9\u7801 \u5e76\u4e14ip\u5730\u5740\u9700\u8981\u63a7\u5236\u5728\u540c\u4e00\u7f51\u6bb5\u5185\uff0c\u4f8b\u5982 \u4e00\u53f0\u4e3a 192.168.1.1 \u53e6\u4e00\u53f0\u4e3a 192.168.1.2 \u5219\u53ef\u4ee5\u8fdb\u884c\u901a\u4fe1","title":"\u8bf4\u660e"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#246","text":"","title":"2. \u4f7f\u7528\u96c6\u7ebf\u5668\u7ec4\u6210\u4e00\u4e2a\u7f51\u7edc"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_3","text":"\u5f53\u6709\u591a\u6001\u7535\u8111\u9700\u8981\u7ec4\u6210\u4e00\u4e2a\u7f51\u65f6\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u96c6\u7ebf\u5668\uff08Hub\uff09\u5c06\u5176\u94fe\u63a5\u5728\u4e00\u8d77 \u4e00\u822c\u60c5\u51b5\u4e0b\u96c6\u7ebf\u5668\u7684\u63a5\u53e3\u8f83\u5c11 \u96c6\u7ebf\u5668\u6709\u4e2a\u7f3a\u70b9\uff0c\u5b83\u4ee5\u5e7f\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u53d1\u9001\u4efb\u4f55\u6570\u636e\uff0c\u5373\u5982\u679c\u96c6\u7ebf\u5668\u63a5\u6536\u5230\u6765\u81eaA\u7535\u8111\u7684\u6570\u636e\u672c\u6765\u662f\u60f3\u8f6c\u53d1\u7ed9B\u7535\u8111\uff0c\u5982\u679c\u6b64\u65f6\u5b83\u8fd8\u8fde\u63a5\u7740\u53e6\u5916\u4e24\u53f0\u7535\u8111C\u3001D\uff0c\u90a3\u4e48\u5b83\u4f1a\u628a\u8fd9\u4e2a\u6570\u636e\u7ed9\u6bcf\u4e2a\u7535\u8111\u90fd\u53d1\u9001\u4e00\u4efd\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u7f51\u7edc\u62e5\u5835","title":"\u8bf4\u660e"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#346","text":"","title":"3. \u4f7f\u7528\u4ea4\u6362\u673a\u7ec4\u6210\u4e00\u4e2a\u7f51\u7edc"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_4","text":"\u514b\u670d\u4e86\u96c6\u7ebf\u5668\u4ee5\u5e7f\u64ad\u53d1\u9001\u6570\u636e\u7684\u7f3a\u70b9\uff0c\u5f53\u9700\u8981\u5e7f\u64ad\u7684\u65f6\u5019\u53d1\u9001\u5e7f\u64ad\uff0c\u5f53\u9700\u8981\u5355\u64ad\u7684\u65f6\u5019\u53c8\u80fd\u591f\u4ee5\u5355\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u53d1\u9001 \u5b83\u5df2\u7ecf\u66ff\u4ee3\u4e86\u4e4b\u524d\u7684\u96c6\u7ebf\u5668 \u4f01\u4e1a\u4e2d\u5c31\u662f\u7528\u4ea4\u6362\u673a\u6765\u5b8c\u6210\u591a\u6001\u7535\u8111\u8bbe\u5907\u7684\u94fe\u63a5\u6210\u7f51\u7edc\u7684","title":"\u8bf4\u660e"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#446","text":"","title":"4. \u4f7f\u7528\u8def\u7531\u5668\u8fde\u63a5\u591a\u4e2a\u7f51\u7edc"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#546","text":"\u8f83\u4e3a\u590d\u6742\u7684\u901a\u4fe1\u8fc7\u7a0b\u5982\uff1a\u8bbf\u95ee www.itheima.com \u9996\u5148\u7535\u8111\u83b7\u5f97\u57df\u540d\u4ee5\u540e\uff0c\u5148\u5411\u7f51\u5173\u4f7f\u7528arp\u8bf7\u6c42\u7f51\u5173\u7684mac\u5730\u5740\uff0c\u7136\u540e\u83b7\u53d6mac\u5730\u5740\u540e\u5c06\u57df\u540d\u53d1\u9001\u7ed9\u7f51\u5173\uff0c\u7f51\u5173\u8fde\u63a5\u4e92\u8054\u7f51\u8fde\u63a5dns\u670d\u52a1\u5668\uff0c\u7136\u540e\u4f20\u56de\u57df\u540d\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u7ecf\u8fc7\u7f51\u5173\u8ddf\u670d\u52a1\u7aef\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\u8fdb\u884c\u8fde\u63a5\u3002\u7136\u540e\u8fdb\u884c\u6570\u636e\u7684\u4ea4\u4e92\u3002\u6570\u636e\u4ea4\u4e92\u5b8c\u6210\u8fdb\u884c\u56db\u6b21\u6325\u624b\u5b8c\u6210\u6570\u636e\u64cd\u4f5c","title":"5. \u901a\u4fe1\u8fc7\u7a0b\uff08\u590d\u6742\uff09"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_5","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4e00\u4e2a\u7f51\u5740\u65f6\uff0c\u9700\u8981\u5c06\u5b83\u5148\u89e3\u6790\u51faip\u5730\u5740\u6765 \u5f53\u5f97\u5230ip\u5730\u5740\u4e4b\u540e\uff0c\u6d4f\u89c8\u5668\u4ee5tcp\u7684\u65b9\u5f0f3\u6b21\u63e1\u624b\u94fe\u63a5\u670d\u52a1\u5668 \u4ee5tcp\u7684\u65b9\u5f0f\u53d1\u9001http\u534f\u8bae\u7684\u8bf7\u6c42\u6570\u636e \u7ed9 \u670d\u52a1\u5668 \u670d\u52a1\u5668tcp\u7684\u65b9\u5f0f\u56de\u5e94http\u534f\u8bae\u7684\u5e94\u7b54\u6570\u636e \u7ed9\u6d4f\u89c8\u5668 5 ip\u76f8\u5f53\u4e8e\u76ee\u7684\u5730\u3002mac\u76f8\u5f53\u4e8e\u8def\u53e3 \u603b\u7ed3 MAC\u5730\u5740\uff1a\u5728\u8bbe\u5907\u4e0e\u8bbe\u5907\u4e4b\u95f4\u6570\u636e\u901a\u4fe1\u65f6\u7528\u6765\u6807\u8bb0\u6536\u53d1\u53cc\u65b9\uff08\u7f51\u5361\u7684\u5e8f\u5217\u53f7\uff09 IP\u5730\u5740\uff1a\u5728\u903b\u8f91\u4e0a\u6807\u8bb0\u4e00\u53f0\u7535\u8111\uff0c\u7528\u6765\u6307\u5f15\u6570\u636e\u5305\u7684\u6536\u53d1\u65b9\u5411\uff08\u76f8\u5f53\u4e8e\u7535\u8111\u7684\u5e8f\u5217\u53f7\uff09 \u7f51\u7edc\u63a9\u7801\uff1a\u7528\u6765\u533a\u5206ip\u5730\u5740\u7684\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7 \u9ed8\u8ba4\u7f51\u5173\uff1a\u5f53\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u7684\u76ee\u7684ip\u4e0d\u5728\u672c\u7f51\u6bb5\u5185\u65f6\uff0c\u5c31\u4f1a\u53d1\u9001\u7ed9\u9ed8\u8ba4\u7684\u4e00\u53f0\u7535\u8111\uff0c\u6210\u4e3a\u7f51\u5173\uff08\u4e00\u822c\u90fd\u662f\u8def\u7531\u5668\uff09 \u96c6\u7ebf\u5668\uff1a\u5df2\u8fc7\u65f6\uff0c\u7528\u6765\u8fde\u63a5\u591a\u6001\u7535\u8111\uff0c\u7f3a\u70b9\uff1a\u6bcf\u6b21\u6536\u53d1\u6570\u636e\u90fd\u8fdb\u884c\u5e7f\u64ad\uff0c\u7f51\u7edc\u4f1a\u53d8\u7684\u62e5\u5835 \u4ea4\u6362\u673a\uff1a\u96c6\u7ebf\u5668\u7684\u5347\u7ea7\u7248\uff0c\u6709\u5b66\u4e60\u529f\u80fd\u77e5\u9053\u9700\u8981\u53d1\u9001\u7ed9\u54ea\u53f0\u8bbe\u5907\uff0c\u6839\u636e\u9700\u8981\u8fdb\u884c\u5355\u64ad\u3001\u5e7f\u64ad \u8def\u7531\u5668\uff1a\u8fde\u63a5\u591a\u4e2a\u4e0d\u540c\u7684\u7f51\u6bb5\uff0c\u8ba9\u4ed6\u4eec\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u6536\u53d1\u6570\u636e\uff0c\u6bcf\u6b21\u6536\u5230\u6570\u636e\u540e\uff0cip\u4e0d\u53d8\uff0c\u4f46\u662fMAC\u5730\u5740\u4f1a\u53d8\u5316 DNS\uff1a\u7528\u6765\u89e3\u6790\u51faIP\uff08\u7c7b\u4f3c\u7535\u8bdd\u7c3f\uff09 http\u670d\u52a1\u5668\uff1a\u63d0\u4f9b\u6d4f\u89c8\u5668\u80fd\u591f\u8bbf\u95ee\u5230\u7684\u6570\u636e","title":"\u8bf4\u660e"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#112-nat","text":"","title":"11.2 NAT"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#nat","text":"","title":"NAT(\u7f51\u7edc\u5730\u5740\u8f6c\u6362\u5668)"},{"location":"python-web/005--11-\u7f51\u7edc\u901a\u4fe1\u8fc7\u7a0b/#_6","text":"\u5f53\u5728\u5bb6\u91cc\u7528\u5bbd\u5e26\u94fe\u63a5\u4e0a\u7f51\u65f6\uff0c\u4f1a\u628a\u7535\u8bdd\u7ebf(\u4eca\u5929\u5f88\u591a\u5730\u65b9\u90fd\u662f\u5149\u7ea4)---->\u8c03\u5236\u89e3\u8c03\u5236(\u7b80\u79f0\u732b)------->\u7535\u8111\u7b49\u8bbe\u5907 \u7535\u8111\u4f1a\u5f97\u5230\u6765\u81ea\u7535\u4fe1\u670d\u52a1\u5546\u7684\u4e00\u4e2a\u516c\u7f51ip\u5730\u5740\uff08\u5207\u8bb0\u53ea\u6709\u516c\u7f51ip\u5730\u5740\u624d\u80fd\u4e0a\u7f51\uff09\uff0c\u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u4e0a\u7f51happy... \u4e3a\u4e86\u80fd\u591f\u8ba9\u591a\u53f0\u8bbe\u5907\u90fd\u53ef\u4ee5\u4e0a\u7f51\uff0c\u9700\u8981\u5c06\u6570\u636e\u8fdb\u884c\u201c\u5206\u6d41\u201d \u7535\u8bdd\u7ebf(\u4eca\u5929\u5f88\u591a\u5730\u65b9\u90fd\u662f\u5149\u7ea4)---->\u8c03\u5236\u89e3\u8c03\u5236(\u7b80\u79f0\u732b)------->\u8def\u7531\u5668------>\u7535\u8111\u7b49\u8bbe\u5907 \u6b64\u65f6\u8def\u7531\u5668\u7684\u4e00\u7aef\u6709\u4e00\u4e2a\u516c\u7f51ip\u5730\u5740\uff0c\u5269\u4e0b\u76844\u4e2a\uff08\u8def\u7531\u5668\u578b\u53f7\u4e0d\u540c\u4e2a\u6570\u4e0d\u540c\uff09\u53ef\u4ee5\u63a5\u5165\u7535\u8111\u7b49\u8bbe\u5907 \u5e76\u4e14 \u5b83\u4eec\u7684ip\u662f\u79c1\u6709ip(\u4f8b\u5982 192.168.1.2) \u5f53\u4e00\u4e2a\u7535\u8111\uff08192.168.1.2\uff09\u4e0a\u7f51\u65f6\uff0c\u5148\u901a\u8fc7DNS\u534f\u8bae\u89e3\u6790\u51fa\u67d0\u4e2a\u57df\u540d\u5bf9\u5e94\u7684ip\uff0c\u7136\u540e \u53d1\u9001\u6570\u636e\u65f6,\u5728\u7ecf\u8fc7\u8def\u7531\u5668\u65f6\u8f6c\u6362\u4e3a\u516c\u7f51ip\u4ee5\u53ca\u8def\u7531\u5668\u81ea\u5df1\u5206\u914d\u7684\u4e34\u65f6\u7aef\u53e3 192.168.1.2:6789----->192.168.1.1 \u8def\u7531\u5668 116.226.52.212:6539------->\u732b---->\u4e07\u7ef4\u7f51 \u63a5\u6536\u6570\u636e\u65f6,\u5728\u7ecf\u8fc7\u8def\u7531\u5668\u65f6\u8f6c\u6362\u4e3a\u8def\u7531\u5668\u4e4b\u524d\u8bb0\u5f55\u7684ip\u4ee5\u53caport \u4e07\u7ef4\u7f51------->\u732b----->116.226.52.212:6539 \u8def\u7531\u5668 192.168.1.1 ---->192.168.1.2:6789","title":"\u8bf4\u660e"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/","text":"\u591a\u8fdb\u7a0b\u7684\u9762\u5411\u5bf9\u8c61\u7684web\u670d\u52a1\u5668 \u00b6 import socket import re import multiprocessing class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) #\u670d\u52a1\u5668\u6302\u4e86\u4e5f\u4e0d\u4f1a\u7b49\u51e0\u5206\u949f\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3 # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () #\u591a\u8fdb\u7a0b\u7248\u672c\u9700\u8981\u5173\u95ed,\u7ebf\u7a0b\u4e0d\u9700\u8981,\u7ebf\u7a0b\u662f\u8d44\u6e90\u5171\u4eab\u7684 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () 1.\u9759\u6001\u8d44\u6e90\u548c\u52a8\u6001\u8d44\u6e90\u7684\u6982\u5ff5 \u00b6 \u7b80\u5355\u6765\u8bf4\uff1a \u9759\u6001\u8d44\u6e90\uff1a\u4e00\u822c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230web\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u4ece\u5185\u5b58\u5728\u53d6\u5230\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u89e3\u6790\u5e76\u6e32\u67d3\u663e\u793a\u51fa\u6765\u3002 \u52a8\u6001\u8d44\u6e90\uff1a\u4e00\u822c\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u52a8\u6001\u8d44\u6e90\uff0c\u5148\u5c06\u8bf7\u6c42\u4ea4\u4e8eweb\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u5904\u7406\u6570\u636e\u4e4b\u540e\uff0c\u5c06\u5185\u5bb9\u4ea4\u7ed9web\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u89e3\u6790\u6e32\u67d3\u5904\u7406\u3002 2.\u9759\u6001\u8d44\u6e90\u548c\u52a8\u6001\u8d44\u6e90\u7684\u533a\u522b a.\u9759\u6001\u8d44\u6e90\u4e00\u822c\u90fd\u662f\u8bbe\u8ba1\u597d\u7684html\u9875\u9762\uff0c\u800c\u52a8\u6001\u8d44\u6e90\u4f9d\u9760\u8bbe\u8ba1\u597d\u7684\u7a0b\u5e8f\u6765\u5b9e\u73b0\u6309\u7167\u9700\u6c42\u7684\u52a8\u6001\u54cd\u5e94\uff1b b.\u9759\u6001\u8d44\u6e90\u7684\u4ea4\u4e92\u6027\u5dee\uff0c\u52a8\u6001\u8d44\u6e90\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9e\u73b0\uff1b c.\u5728\u670d\u52a1\u5668\u7684\u8fd0\u884c\u72b6\u6001\u4e0d\u540c\uff0c\u9759\u6001\u8d44\u6e90\u4e0d\u9700\u8981\u4e0e\u6570\u636e\u5e93\u53c2\u4e8e\u7a0b\u5e8f\u5904\u7406\uff0c\u52a8\u6001\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u6570\u636e\u5e93\u7684\u53c2\u4e0e\u8fd0\u7b97\u3002 02-web\u670d\u52a1\u5668\u91cc\u96c6\u6210\u4e86\u89e3\u6790\u52a8\u6001\u8bf7\u6c42\u7684\u529f\u80fd \u00b6 import socket import re import multiprocessing import time class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" body = \"hahahah %s \" % time . ctime () #ctime\u662f\u5f53\u524d\u65f6\u95f4 response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () 03-\u5c06web\u670d\u52a1\u5668\u548c\u903b\u8f91\u5904\u7406\u7684\u4ee3\u7801\u5206\u5f00 \u00b6 \u670d\u52a1\u5668\u4ee3\u7801 web_server.py \u00b6 import socket import re import multiprocessing import time import mini_frame #\u5bfc\u5165\u6211\u4eec\u52a8\u6001\u8d44\u6e90\u52a0\u8f7d\u7684\u5305 class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" # body = \"hahahah %s \" % time.ctime() if file_name == \"/login.py\" : body = mini_frame . login () #\u8fd9\u91cc\u7684body\u5c31\u662f\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u751f\u6210\u4e86 elif file_name == \"/register.py\" : body = mini_frame . register () response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () web\u6846\u67b6\u4ee3\u7801 mini_frame.py import time def login (): return \"welcome hahahh to our website.......time: %s \" % time . ctime () 04-\u5c06web\u670d\u52a1\u5668\u548c\u903b\u8f91\u5904\u7406\u7684\u4ee3\u7801\u5206\u5f00-\u5347\u7ea7\u7248\u672c \u00b6 web_server.py import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" # body = \"hahahah %s \" % time.ctime() # if file_name == \"/login.py\": # body = mini_frame.login() # elif file_name == \"/register.py\": # body = mini_frame.register() body = mini_frame . application ( file_name ) #\u8fd9\u91cc\u5c31\u53ea\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u4f20\u9012\u51fd\u6570\u540d\u5373\u53ef response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py import time def login (): return \"i----login--welcome hahahh to our website.......time: %s \" % time . ctime () def register (): return \"-----register---welcome hahahh to our website.......time: %s \" % time . ctime () def profile (): return \"-----profile----welcome hahahh to our website.......time: %s \" % time . ctime () def application ( file_name ): if file_name == \"/login.py\" : return login () #\u8fd4\u56de\u8bf7\u6c42 elif file_name == \"/register.py\" : return register () else : return \"not found you page....\" \u4e0a\u9762\u7684\u53ea\u662f\u7528\u6765\u7406\u89e3,\u5b9e\u9645\u4e0a\u600e\u4e48\u4f1a\u7528\u81ea\u5df1\u5199\u7684\u8fd9\u4e9b\u73a9\u610f\u505a\u5f00\u53d1\u5462 18.1. \u670d\u52a1\u5668\u52a8\u6001\u8d44\u6e90\u8bf7\u6c42 \u00b6 \u670d\u52a1\u5668\u52a8\u6001\u8d44\u6e90\u8bf7\u6c42 \u00b6 1. \u6d4f\u89c8\u5668\u8bf7\u6c42\u52a8\u6001\u9875\u9762\u8fc7\u7a0b \u00b6 2. WSGI \u00b6 \u600e\u4e48\u5728\u4f60\u521a\u5efa\u7acb\u7684Web\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u4e00\u4e2a Django\u5e94\u7528 \u548c Flask\u5e94\u7528 \uff0c\u5982\u4f55\u4e0d\u505a\u4efb\u4f55\u6539\u53d8\u800c\u9002\u5e94\u4e0d\u540c\u7684web\u67b6\u6784\u5462\uff1f \u5728\u4ee5\u524d\uff0c\u9009\u62e9 Python web \u67b6\u6784 \u4f1a\u53d7\u5236\u4e8e\u53ef\u7528\u7684 web\u670d\u52a1\u5668 \uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5982\u679c\u67b6\u6784\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\uff0c\u90a3\u5c31\u597d\u4e86\uff1a \u4f46\u6709\u53ef\u80fd\u9762\u5bf9\uff08\u6216\u8005\u66fe\u6709\u8fc7\uff09\u4e0b\u9762\u7684\u95ee\u9898\uff0c\u5f53\u8981\u628a\u4e00\u4e2a\u670d\u52a1\u5668\u548c\u4e00\u4e2a\u67b6\u6784\u7ed3\u5408\u8d77\u6765\u65f6\uff0c\u5374\u53d1\u73b0\u4ed6\u4eec\u4e0d\u662f\u88ab\u8bbe\u8ba1\u6210\u534f\u540c\u5de5\u4f5c\u7684\uff1a \u90a3\u4e48\uff0c\u600e\u4e48\u53ef\u4ee5\u4e0d\u4fee\u6539\u670d\u52a1\u5668\u548c\u67b6\u6784\u4ee3\u7801\u800c\u786e\u4fdd\u53ef\u4ee5\u5728\u591a\u4e2a\u67b6\u6784\u4e0b\u8fd0\u884cweb\u670d\u52a1\u5668\u5462\uff1f\u7b54\u6848\u5c31\u662f Python Web Server Gateway Interface (\u6216\u7b80\u79f0 WSGI\uff0c\u8bfb\u4f5c\u201cwizgy\u201d)\u3002 WSGI\u5141\u8bb8\u5f00\u53d1\u8005\u5c06\u9009\u62e9web\u6846\u67b6\u548cweb\u670d\u52a1\u5668\u5206\u5f00\u3002\u53ef\u4ee5\u6df7\u5408\u5339\u914dweb\u670d\u52a1\u5668\u548cweb\u6846\u67b6\uff0c\u9009\u62e9\u4e00\u4e2a\u9002\u5408\u7684\u914d\u5bf9\u3002\u6bd4\u5982,\u53ef\u4ee5\u5728Gunicorn \u6216\u8005 Nginx/uWSGI \u6216\u8005 Waitress\u4e0a\u8fd0\u884c Django, Flask, \u6216 Pyramid\u3002\u771f\u6b63\u7684\u6df7\u5408\u5339\u914d\uff0c\u5f97\u76ca\u4e8eWSGI\u540c\u65f6\u652f\u6301\u670d\u52a1\u5668\u548c\u67b6\u6784\uff1a web\u670d\u52a1\u5668\u5fc5\u987b\u5177\u5907WSGI\u63a5\u53e3\uff0c\u6240\u6709\u7684\u73b0\u4ee3Python Web\u6846\u67b6\u90fd\u5df2\u5177\u5907WSGI\u63a5\u53e3\uff0c\u5b83\u8ba9\u4f60\u4e0d\u5bf9\u4ee3\u7801\u4f5c\u4fee\u6539\u5c31\u80fd\u4f7f\u670d\u52a1\u5668\u548c\u7279\u70b9\u7684web\u6846\u67b6\u534f\u540c\u5de5\u4f5c\u3002 WSGI\u7531web\u670d\u52a1\u5668\u652f\u6301\uff0c\u800cweb\u6846\u67b6\u5141\u8bb8\u4f60\u9009\u62e9\u9002\u5408\u81ea\u5df1\u7684\u914d\u5bf9\uff0c\u4f46\u5b83\u540c\u6837\u5bf9\u4e8e\u670d\u52a1\u5668\u548c\u6846\u67b6\u5f00\u53d1\u8005\u63d0\u4f9b\u4fbf\u5229\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u81ea\u5df1\u504f\u7231\u7684\u9886\u57df\u548c\u4e13\u957f\u800c\u4e0d\u81f3\u4e8e\u76f8\u4e92\u7275\u5236\u3002\u5176\u4ed6\u8bed\u8a00\u4e5f\u6709\u7c7b\u4f3c\u63a5\u53e3\uff1ajava\u6709Servlet API\uff0cRuby \u6709 Rack\u3002 3.\u5b9a\u4e49WSGI\u63a5\u53e3 \u00b6 WSGI\u63a5\u53e3\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u8981\u6c42Web\u5f00\u53d1\u8005\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u54cd\u5e94HTTP\u8bf7\u6c42\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6700\u7b80\u5355\u7684Web\u7248\u672c\u7684\u201cHello World!\u201d\uff1a def application ( environ , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html' )]) return 'Hello World!' \u4e0a\u9762\u7684 application() \u51fd\u6570\u5c31\u662f\u7b26\u5408WSGI\u6807\u51c6\u7684\u4e00\u4e2aHTTP\u5904\u7406\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a environ\uff1a\u4e00\u4e2a\u5305\u542b\u6240\u6709HTTP\u8bf7\u6c42\u4fe1\u606f\u7684dict\u5bf9\u8c61\uff1b start_response\uff1a\u4e00\u4e2a\u53d1\u9001HTTP\u54cd\u5e94\u7684\u51fd\u6570\u3002 \u6574\u4e2a application() \u51fd\u6570\u672c\u8eab\u6ca1\u6709\u6d89\u53ca\u5230\u4efb\u4f55\u89e3\u6790HTTP\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a\u5e95\u5c42web\u670d\u52a1\u5668\u89e3\u6790\u90e8\u5206\u548c\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u90e8\u5206\u8fdb\u884c\u4e86\u5206\u79bb\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5c31\u53ef\u4ee5\u4e13\u5fc3\u505a\u4e00\u4e2a\u9886\u57df\u4e86 \u4e0d\u8fc7\uff0c\u7b49\u7b49\uff0c\u8fd9\u4e2a application() \u51fd\u6570\u600e\u4e48\u8c03\u7528\uff1f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u8c03\u7528\uff0c\u4e24\u4e2a\u53c2\u6570environ\u548cstart_response\u6211\u4eec\u6ca1\u6cd5\u63d0\u4f9b\uff0c\u8fd4\u56de\u7684str\u4e5f\u6ca1\u6cd5\u53d1\u7ed9\u6d4f\u89c8\u5668\u3002 \u6240\u4ee5 application() \u51fd\u6570\u5fc5\u987b\u7531WSGI\u670d\u52a1\u5668\u6765\u8c03\u7528\u3002\u6709\u5f88\u591a\u7b26\u5408WSGI\u89c4\u8303\u7684\u670d\u52a1\u5668\u3002\u800c\u6211\u4eec\u6b64\u65f6\u7684web\u670d\u52a1\u5668\u9879\u76ee\u7684\u76ee\u7684\u5c31\u662f\u505a\u4e00\u4e2a\u65e2\u80fd\u89e3\u6790\u9759\u6001\u7f51\u9875\u8fd8\u53ef\u4ee5\u89e3\u6790\u52a8\u6001\u7f51\u9875\u7684\u670d\u52a1\u5668 4. web\u670d\u52a1\u5668-----WSGI\u534f\u8bae---->web\u6846\u67b6 \u4f20\u9012\u7684\u5b57\u5178 \u00b6 { 'HTTP_ACCEPT_LANGUAGE' : 'zh-cn' , 'wsgi.file_wrapper' : < built - infunctionuwsgi_sendfile > , 'HTTP_UPGRADE_INSECURE_REQUESTS' : '1' , 'uwsgi.version' : b '2.0.15' , 'REMOTE_ADDR' : '172.16.7.1' , 'wsgi.errors' : < _io . TextIOWrappername = 2 mode = 'w' encoding = 'UTF-8' > , 'wsgi.version' : ( 1 , 0 ), 'REMOTE_PORT' : '40432' , 'REQUEST_URI' : '/' , 'SERVER_PORT' : '8000' , 'wsgi.multithread' : False , 'HTTP_ACCEPT' : 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' , 'HTTP_HOST' : '172.16.7.152: 8000' , 'wsgi.run_once' : False , 'wsgi.input' : < uwsgi . _Inputobjectat0x7f7faecdc9c0 > , 'SERVER_PROTOCOL' : 'HTTP/1.1' , 'REQUEST_METHOD' : 'GET' , 'HTTP_ACCEPT_ENCODING' : 'gzip,deflate' , 'HTTP_CONNECTION' : 'keep-alive' , 'uwsgi.node' : b 'ubuntu' , 'HTTP_DNT' : '1' , 'UWSGI_ROUTER' : 'http' , 'SCRIPT_NAME' : '' , 'wsgi.multiprocess' : False , 'QUERY_STRING' : '' , 'PATH_INFO' : '/index.html' , 'wsgi.url_scheme' : 'http' , 'HTTP_USER_AGENT' : 'Mozilla/5.0(Macintosh;IntelMacOSX10_12_5)AppleWebKit/603.2.4(KHTML,likeGecko)Version/10.1.1Safari/603.2.4' , 'SERVER_NAME' : 'ubuntu' } 18.2. \u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b \u00b6 \u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b import time def application ( environ , start_response ): status = '200 OK' response_headers = [( 'Content-Type' , 'text/html' )] start_response ( status , response_headers ) return str ( environ ) + '==Hello world from a simple WSGI application!---> %s \\n ' % time . ctime () web_server.py import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () body = mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py def application ( environ , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' 06-\u901a\u8fc7\u4f20\u9012\u5b57\u5178\u5b9e\u73b0\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4e00\u6837\u76f8\u5e94\u7684\u4e0d\u4e00\u6837 \u00b6 import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} body = mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status #\u5c06\u72b6\u6001\u4fe1\u606f\u5199\u5230\u5934\u4e0a for temp in self . headers : #\u5c06\u5176\u4ed6\u7684\u6846\u67b6\u8fd4\u56de\u7684\u5143\u7ec4\u901a\u8fc7for\u5faa\u73af\u7ed9\u53d8\u6210 .. : ..\u7684\u5f62\u5f0f,\u4e00\u4e2a\u5143\u7ec4\u5360\u4e00\u884c header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () #\u628a\u670d\u52a1\u5668\u7684\u4fe1\u606f\u8ddf\u6846\u67b6\u7684\u4fe1\u606f\u8fd4\u56de def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] #\u670d\u52a1\u5668\u7248\u672c\u7684\u4fe1\u606f\u5199\u5728\u670d\u52a1\u5668\u4ee3\u7801\u4e2d self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame def index (): return \"\u8fd9\u662f\u4e3b\u9875\" def login (): return \"\u8fd9\u662f\u767b\u5f55\u9875\u9762\" def application ( env , start_response ): #charset=utf-8\u8bbe\u7f6e\u6d4f\u89c8\u5668\u7f16\u7801 start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) #\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u76f4\u63a5\u5bf9\u53d8\u91cf\u8fdb\u884c \u8d4b\u503c\u7684,\u5389\u5bb3\u4e86 file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/login.py\" : return login () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' 07-\u5b9e\u73b0\u6a21\u677f\u6587\u4ef6 \u00b6 web_server.py import socket import re import multiprocessing import time import dynamic.mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./static\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} body = dynamic . mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py def index (): with open ( \"./templates/index.html\" , encoding = \"utf-8\" ) as f : #\u6ce8\u610f\u7f16\u7801\u7684\u683c\u5f0f content = f . read () return content def center (): with open ( \"./templates/center.html\" , encoding = \"utf-8\" ) as f : return f . read () def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' 09-\u8fd0\u884cweb\u670d\u52a1\u5668\u65f6\u6307\u5b9a\u7aef\u53e3\u4ee5\u53ca\u6846\u67b6 \u00b6 mini_frame.py import re def index (): with open ( \"./templates/index.html\" ) as f : content = f . read () my_stock_info = \"\u54c8\u54c8\u54c8\u54c8 \u8fd9\u662f\u4f60\u7684\u672c\u6708\u540d\u79f0.....\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def center (): with open ( \"./templates/center.html\" ) as f : content = f . read () my_stock_info = \"\u8fd9\u91cc\u662f\u4ecemysql\u67e5\u8be2\u51fa\u6765\u7684\u6570\u636e\u3002\u3002\u3002\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' web_server.py import socket import re import multiprocessing import time # import dynamic.mini_frame import sys class WSGIServer ( object ): def __init__ ( self , port , app ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) self . application = app def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./static\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} # body = dynamic.mini_frame.application(env, self.set_response_header) body = self . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" if len ( sys . argv ) == 3 : try : port = int ( sys . argv [ 1 ]) # 7890 frame_app_name = sys . argv [ 2 ] # mini_frame:application except Exception as ret : print ( \"\u7aef\u53e3\u8f93\u5165\u9519\u8bef\u3002\u3002\u3002\u3002\u3002\" ) return else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return # mini_frame:application ret = re . match ( r \"([^:]+):(.*)\" , frame_app_name ) if ret : frame_name = ret . group ( 1 ) # mini_frame app_name = ret . group ( 2 ) # application else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return sys . path . append ( \"./dynamic\" ) #\u6dfb\u52a0\u8fd9\u4e2a\u8def\u5f84.\u4e0b\u9762\u5bfc\u6a21\u5757\u7684\u65f6\u5019\u624d\u77e5\u9053\u6709\u8fd9\u4e48\u4e2a\u8def\u5f84\u53ef\u4ee5\u4f7f\u7528 # import frame_name --->\u627eframe_name.py frame = __import__ ( frame_name ) # \u8fd4\u56de\u503c\u6807\u8bb0\u8fd9 \u5bfc\u5165\u7684\u8fd9\u4e2a\u6a21\u5757(\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528import,\u5c31\u4f1a\u8ba4\u4e3a\u4f7f\u7528\u7684\u662fframe_name\u5305\u800c\u4e0d\u662f\u53d8\u91cf\u4ee3\u8868\u7684\u610f\u601d) #\u4e0a\u9762\u662f\u5bfc\u5305,\u4e0b\u9762\u662f\u627e\u51fd\u6570(\u4f7f\u7528\u7684\u662fgetattr\u51fd\u6570) app = getattr ( frame , app_name ) # \u6b64\u65f6app\u5c31\u6307\u5411\u4e86 dynamic/mini_frame\u6a21\u5757\u4e2d\u7684application\u8fd9\u4e2a\u51fd\u6570 # print(app) wsgi_server = WSGIServer ( port , app ) #\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f20\u9012\u8fdb\u53bb wsgi_server . run_forever () if __name__ == \"__main__\" : main () 10-\u8ba9web\u670d\u52a1\u5668\u652f\u6301\u914d\u7f6e\u6587\u4ef6 \u00b6 run.sh \u8fd0\u884c\u811a\u672c python3 web_server.py 7890 mini_frame:application web_server.conf \u8def\u5f84\u914d\u7f6e\u6587\u4ef6 { \"static_path\" : \"./static\" , \"dynamic_path\" : \"./dynamic\" } web_server.py import socket import re import multiprocessing import time # import dynamic.mini_frame import sys class WSGIServer ( object ): def __init__ ( self , port , app , static_path ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) self . application = app self . static_path = static_path #\u9759\u6001\u8d44\u6e90\u7684\u8def\u5f84 def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( self . static_path + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} # body = dynamic.mini_frame.application(env, self.set_response_header) body = self . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" if len ( sys . argv ) == 3 : try : port = int ( sys . argv [ 1 ]) # 7890 frame_app_name = sys . argv [ 2 ] # mini_frame:application except Exception as ret : print ( \"\u7aef\u53e3\u8f93\u5165\u9519\u8bef\u3002\u3002\u3002\u3002\u3002\" ) return else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return # mini_frame:application ret = re . match ( r \"([^:]+):(.*)\" , frame_app_name ) if ret : frame_name = ret . group ( 1 ) # mini_frame app_name = ret . group ( 2 ) # application else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return with open ( \"./web_server.conf\" ) as f : conf_info = eval ( f . read ()) #\u4f7f\u7528eval\u53d8\u6210\u6211\u4eec\u60f3\u8981\u7684\u5b57\u5178,\u540e\u9762\u770bpython\u4e2deval\u51fd\u6570 # \u6b64\u65f6 conf_info\u662f\u4e00\u4e2a\u5b57\u5178\u91cc\u9762\u7684\u6570\u636e\u4e3a\uff1a # { # \"static_path\":\"./static\", # \"dynamic_path\":\"./dynamic\" # } sys . path . append ( conf_info [ 'dynamic_path' ]) #\u8def\u5f84\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8def\u5f84 # import frame_name --->\u627eframe_name.py frame = __import__ ( frame_name ) # \u8fd4\u56de\u503c\u6807\u8bb0\u8fd9 \u5bfc\u5165\u7684\u8fd9\u4e2a\u6a21\u677f app = getattr ( frame , app_name ) # \u6b64\u65f6app\u5c31\u6307\u5411\u4e86 dynamic/mini_frame\u6a21\u5757\u4e2d\u7684application\u8fd9\u4e2a\u51fd\u6570 # print(app) wsgi_server = WSGIServer ( port , app , conf_info [ 'static_path' ]) #\u4ece\u5b57\u5178\u4e2d\u5f97\u5230\u9759\u6001\u8d44\u6e90\u7684\u8def\u5f84 wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py import re def index (): with open ( \"./templates/index.html\" ) as f : content = f . read () my_stock_info = \"\u54c8\u54c8\u54c8\u54c8 \u8fd9\u662f\u4f60\u7684\u672c\u6708\u540d\u79f0.....\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def center (): with open ( \"./templates/center.html\" ) as f : content = f . read () my_stock_info = \"\u8fd9\u91cc\u662f\u4ecemysql\u67e5\u8be2\u51fa\u6765\u7684\u6570\u636e\u3002\u3002\u3002\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' 18.3. Web\u52a8\u6001\u670d\u52a1\u5668-\u57fa\u672c\u5b9e\u73b0 \u00b6 python\u9ad8\u7ea7 \u00b6 Web\u52a8\u6001\u670d\u52a1\u5668-\u57fa\u672c\u5b9e\u73b0 \u00b6 \u6587\u4ef6\u7ed3\u6784 \u00b6 \u251c\u2500\u2500 web_server.py \u251c\u2500\u2500 web \u2502 \u2514\u2500\u2500 my_web.py \u2514\u2500\u2500 html \u2514\u2500\u2500 index.html ..... web/my_web.py \u00b6 import time def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime() web_server.py \u00b6 import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = {} # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.ctime()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./html\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./web\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:application\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main() \u8fd0\u884c \u00b6 1. \u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5f00\u59cb\u670d\u52a1\u5668 \u00b6 python3 web_server.py my_web:application 2. \u6253\u5f00\u6d4f\u89c8\u5668 \u00b6 18.4. mini-web\u6846\u67b6-1-\u6587\u4ef6\u7ed3\u6784 \u00b6 python\u9ad8\u7ea7 \u00b6 mini web\u6846\u67b6-1-\u6587\u4ef6\u7ed3\u6784 \u00b6 \u6587\u4ef6\u7ed3\u6784 \u00b6 \u251c\u2500\u2500 dynamic ---\u5b58\u653epy\u6a21\u5757 \u2502 \u2514\u2500\u2500 my_web.py \u251c\u2500\u2500 templates ---\u5b58\u653e\u6a21\u677f\u6587\u4ef6 \u2502 \u251c\u2500\u2500 center.html \u2502 \u251c\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 location.html \u2502 \u2514\u2500\u2500 update.html \u251c\u2500\u2500 static ---\u5b58\u653e\u9759\u6001\u7684\u8d44\u6e90\u6587\u4ef6 \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u2502 \u251c\u2500\u2500 main.css \u2502 \u2502 \u2514\u2500\u2500 swiper.min.css \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 a.js \u2502 \u251c\u2500\u2500 bootstrap.min.js \u2502 \u251c\u2500\u2500 jquery-1.12.4.js \u2502 \u251c\u2500\u2500 jquery-1.12.4.min.js \u2502 \u251c\u2500\u2500 jquery.animate-colors.js \u2502 \u251c\u2500\u2500 jquery.animate-colors-min.js \u2502 \u251c\u2500\u2500 jquery.cookie.js \u2502 \u251c\u2500\u2500 jquery-ui.min.js \u2502 \u251c\u2500\u2500 server.js \u2502 \u251c\u2500\u2500 swiper.jquery.min.js \u2502 \u251c\u2500\u2500 swiper.min.js \u2502 \u2514\u2500\u2500 zepto.min.js \u2514\u2500\u2500 web_server.py ---mini web\u670d\u52a1\u5668 my_web.py \u00b6 import time def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime() web_server.py \u00b6 import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = dict() # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.time()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./static\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./dynamic\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:application\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main() 18.5. mini-web\u6846\u67b6-2-\u663e\u793a\u9875\u9762 \u00b6 mini web\u6846\u67b6-2-\u663e\u793a\u9875\u9762 \u00b6 dynamic/my_web.py (\u66f4\u65b0) \u00b6 import time import os template_root = \"./templates\" def index(file_name): \"\"\"\u8fd4\u56deindex.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() return content def center(file_name): \"\"\"\u8fd4\u56decenter.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() return content def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) file_name = environ['PATH_INFO'] if file_name == \"/index.py\": return index(file_name) elif file_name == \"/center.py\": return center(file_name) else: return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime() web_server.py (\u66f4\u65b0) \u00b6 import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: print(self.documents_root+file_name) f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = dict() # ----------\u66f4\u65b0--------- env['PATH_INFO'] = file_name # \u4f8b\u5982 index.py # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body.encode(\"utf-8\")) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.time()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./static\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./dynamic\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:app\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main() \u6d4f\u89c8\u5668\u6253\u5f00\u770b\u6548\u679c \u00b6 18.6. mini-web\u6846\u67b6-3-\u66ff\u6362\u6a21\u677f \u00b6 mini web\u6846\u67b6-3-\u66ff\u6362\u6a21\u677f \u00b6 dynamic/my_web.py \u00b6 import time import os import re template_root = \"./templates\" def index(file_name): \"\"\"\u8fd4\u56deindex.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() # --------\u66f4\u65b0------- data_from_mysql = \"\u6570\u636e\u8fd8\u6ca1\u6709\u656c\u8bf7\u671f\u5f85....\" content = re.sub(r\"\\{%content%\\}\", data_from_mysql, content) return content def center(file_name): \"\"\"\u8fd4\u56decenter.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() # --------\u66f4\u65b0------- data_from_mysql = \"\u6682\u65f6\u6ca1\u6709\u6570\u636e,,,,~~~~(>_<)~~~~ \" content = re.sub(r\"\\{%content%\\}\", data_from_mysql, content) return content def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) file_name = environ['PATH_INFO'] if file_name == \"/index.py\": return index(file_name) elif file_name == \"/center.py\": return center(file_name) else: return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime() \u6d4f\u89c8\u5668\u6253\u5f00\u770b\u6548\u679c \u00b6","title":"006 18. WSGI\u3001mini-web\u6846\u67b6"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web","text":"import socket import re import multiprocessing class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) #\u670d\u52a1\u5668\u6302\u4e86\u4e5f\u4e0d\u4f1a\u7b49\u51e0\u5206\u949f\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3 # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () #\u591a\u8fdb\u7a0b\u7248\u672c\u9700\u8981\u5173\u95ed,\u7ebf\u7a0b\u4e0d\u9700\u8981,\u7ebf\u7a0b\u662f\u8d44\u6e90\u5171\u4eab\u7684 # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main ()","title":"\u591a\u8fdb\u7a0b\u7684\u9762\u5411\u5bf9\u8c61\u7684web\u670d\u52a1\u5668"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#1","text":"\u7b80\u5355\u6765\u8bf4\uff1a \u9759\u6001\u8d44\u6e90\uff1a\u4e00\u822c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230web\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u4ece\u5185\u5b58\u5728\u53d6\u5230\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u89e3\u6790\u5e76\u6e32\u67d3\u663e\u793a\u51fa\u6765\u3002 \u52a8\u6001\u8d44\u6e90\uff1a\u4e00\u822c\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u52a8\u6001\u8d44\u6e90\uff0c\u5148\u5c06\u8bf7\u6c42\u4ea4\u4e8eweb\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u5904\u7406\u6570\u636e\u4e4b\u540e\uff0c\u5c06\u5185\u5bb9\u4ea4\u7ed9web\u670d\u52a1\u5668\uff0cweb\u670d\u52a1\u5668\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u89e3\u6790\u6e32\u67d3\u5904\u7406\u3002 2.\u9759\u6001\u8d44\u6e90\u548c\u52a8\u6001\u8d44\u6e90\u7684\u533a\u522b a.\u9759\u6001\u8d44\u6e90\u4e00\u822c\u90fd\u662f\u8bbe\u8ba1\u597d\u7684html\u9875\u9762\uff0c\u800c\u52a8\u6001\u8d44\u6e90\u4f9d\u9760\u8bbe\u8ba1\u597d\u7684\u7a0b\u5e8f\u6765\u5b9e\u73b0\u6309\u7167\u9700\u6c42\u7684\u52a8\u6001\u54cd\u5e94\uff1b b.\u9759\u6001\u8d44\u6e90\u7684\u4ea4\u4e92\u6027\u5dee\uff0c\u52a8\u6001\u8d44\u6e90\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9e\u73b0\uff1b c.\u5728\u670d\u52a1\u5668\u7684\u8fd0\u884c\u72b6\u6001\u4e0d\u540c\uff0c\u9759\u6001\u8d44\u6e90\u4e0d\u9700\u8981\u4e0e\u6570\u636e\u5e93\u53c2\u4e8e\u7a0b\u5e8f\u5904\u7406\uff0c\u52a8\u6001\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u6570\u636e\u5e93\u7684\u53c2\u4e0e\u8fd0\u7b97\u3002","title":"1.\u9759\u6001\u8d44\u6e90\u548c\u52a8\u6001\u8d44\u6e90\u7684\u6982\u5ff5"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#02-web","text":"import socket import re import multiprocessing import time class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" body = \"hahahah %s \" % time . ctime () #ctime\u662f\u5f53\u524d\u65f6\u95f4 response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main ()","title":"02-web\u670d\u52a1\u5668\u91cc\u96c6\u6210\u4e86\u89e3\u6790\u52a8\u6001\u8bf7\u6c42\u7684\u529f\u80fd"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#03-web","text":"","title":"03-\u5c06web\u670d\u52a1\u5668\u548c\u903b\u8f91\u5904\u7406\u7684\u4ee3\u7801\u5206\u5f00"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web_serverpy","text":"import socket import re import multiprocessing import time import mini_frame #\u5bfc\u5165\u6211\u4eec\u52a8\u6001\u8d44\u6e90\u52a0\u8f7d\u7684\u5305 class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" # body = \"hahahah %s \" % time.ctime() if file_name == \"/login.py\" : body = mini_frame . login () #\u8fd9\u91cc\u7684body\u5c31\u662f\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u751f\u6210\u4e86 elif file_name == \"/register.py\" : body = mini_frame . register () response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () web\u6846\u67b6\u4ee3\u7801 mini_frame.py import time def login (): return \"welcome hahahh to our website.......time: %s \" % time . ctime ()","title":"\u670d\u52a1\u5668\u4ee3\u7801 web_server.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#04-web-","text":"web_server.py import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 header = \"HTTP/1.1 200 OK \\r\\n \" header += \" \\r\\n \" # body = \"hahahah %s \" % time.ctime() # if file_name == \"/login.py\": # body = mini_frame.login() # elif file_name == \"/register.py\": # body = mini_frame.register() body = mini_frame . application ( file_name ) #\u8fd9\u91cc\u5c31\u53ea\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u4f20\u9012\u51fd\u6570\u540d\u5373\u53ef response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py import time def login (): return \"i----login--welcome hahahh to our website.......time: %s \" % time . ctime () def register (): return \"-----register---welcome hahahh to our website.......time: %s \" % time . ctime () def profile (): return \"-----profile----welcome hahahh to our website.......time: %s \" % time . ctime () def application ( file_name ): if file_name == \"/login.py\" : return login () #\u8fd4\u56de\u8bf7\u6c42 elif file_name == \"/register.py\" : return register () else : return \"not found you page....\" \u4e0a\u9762\u7684\u53ea\u662f\u7528\u6765\u7406\u89e3,\u5b9e\u9645\u4e0a\u600e\u4e48\u4f1a\u7528\u81ea\u5df1\u5199\u7684\u8fd9\u4e9b\u73a9\u610f\u505a\u5f00\u53d1\u5462","title":"04-\u5c06web\u670d\u52a1\u5668\u548c\u903b\u8f91\u5904\u7406\u7684\u4ee3\u7801\u5206\u5f00-\u5347\u7ea7\u7248\u672c"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#181","text":"","title":"18.1. \u670d\u52a1\u5668\u52a8\u6001\u8d44\u6e90\u8bf7\u6c42"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_1","text":"","title":"\u670d\u52a1\u5668\u52a8\u6001\u8d44\u6e90\u8bf7\u6c42"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#146","text":"","title":"1. \u6d4f\u89c8\u5668\u8bf7\u6c42\u52a8\u6001\u9875\u9762\u8fc7\u7a0b"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#2-wsgi","text":"\u600e\u4e48\u5728\u4f60\u521a\u5efa\u7acb\u7684Web\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u4e00\u4e2a Django\u5e94\u7528 \u548c Flask\u5e94\u7528 \uff0c\u5982\u4f55\u4e0d\u505a\u4efb\u4f55\u6539\u53d8\u800c\u9002\u5e94\u4e0d\u540c\u7684web\u67b6\u6784\u5462\uff1f \u5728\u4ee5\u524d\uff0c\u9009\u62e9 Python web \u67b6\u6784 \u4f1a\u53d7\u5236\u4e8e\u53ef\u7528\u7684 web\u670d\u52a1\u5668 \uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5982\u679c\u67b6\u6784\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\uff0c\u90a3\u5c31\u597d\u4e86\uff1a \u4f46\u6709\u53ef\u80fd\u9762\u5bf9\uff08\u6216\u8005\u66fe\u6709\u8fc7\uff09\u4e0b\u9762\u7684\u95ee\u9898\uff0c\u5f53\u8981\u628a\u4e00\u4e2a\u670d\u52a1\u5668\u548c\u4e00\u4e2a\u67b6\u6784\u7ed3\u5408\u8d77\u6765\u65f6\uff0c\u5374\u53d1\u73b0\u4ed6\u4eec\u4e0d\u662f\u88ab\u8bbe\u8ba1\u6210\u534f\u540c\u5de5\u4f5c\u7684\uff1a \u90a3\u4e48\uff0c\u600e\u4e48\u53ef\u4ee5\u4e0d\u4fee\u6539\u670d\u52a1\u5668\u548c\u67b6\u6784\u4ee3\u7801\u800c\u786e\u4fdd\u53ef\u4ee5\u5728\u591a\u4e2a\u67b6\u6784\u4e0b\u8fd0\u884cweb\u670d\u52a1\u5668\u5462\uff1f\u7b54\u6848\u5c31\u662f Python Web Server Gateway Interface (\u6216\u7b80\u79f0 WSGI\uff0c\u8bfb\u4f5c\u201cwizgy\u201d)\u3002 WSGI\u5141\u8bb8\u5f00\u53d1\u8005\u5c06\u9009\u62e9web\u6846\u67b6\u548cweb\u670d\u52a1\u5668\u5206\u5f00\u3002\u53ef\u4ee5\u6df7\u5408\u5339\u914dweb\u670d\u52a1\u5668\u548cweb\u6846\u67b6\uff0c\u9009\u62e9\u4e00\u4e2a\u9002\u5408\u7684\u914d\u5bf9\u3002\u6bd4\u5982,\u53ef\u4ee5\u5728Gunicorn \u6216\u8005 Nginx/uWSGI \u6216\u8005 Waitress\u4e0a\u8fd0\u884c Django, Flask, \u6216 Pyramid\u3002\u771f\u6b63\u7684\u6df7\u5408\u5339\u914d\uff0c\u5f97\u76ca\u4e8eWSGI\u540c\u65f6\u652f\u6301\u670d\u52a1\u5668\u548c\u67b6\u6784\uff1a web\u670d\u52a1\u5668\u5fc5\u987b\u5177\u5907WSGI\u63a5\u53e3\uff0c\u6240\u6709\u7684\u73b0\u4ee3Python Web\u6846\u67b6\u90fd\u5df2\u5177\u5907WSGI\u63a5\u53e3\uff0c\u5b83\u8ba9\u4f60\u4e0d\u5bf9\u4ee3\u7801\u4f5c\u4fee\u6539\u5c31\u80fd\u4f7f\u670d\u52a1\u5668\u548c\u7279\u70b9\u7684web\u6846\u67b6\u534f\u540c\u5de5\u4f5c\u3002 WSGI\u7531web\u670d\u52a1\u5668\u652f\u6301\uff0c\u800cweb\u6846\u67b6\u5141\u8bb8\u4f60\u9009\u62e9\u9002\u5408\u81ea\u5df1\u7684\u914d\u5bf9\uff0c\u4f46\u5b83\u540c\u6837\u5bf9\u4e8e\u670d\u52a1\u5668\u548c\u6846\u67b6\u5f00\u53d1\u8005\u63d0\u4f9b\u4fbf\u5229\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u81ea\u5df1\u504f\u7231\u7684\u9886\u57df\u548c\u4e13\u957f\u800c\u4e0d\u81f3\u4e8e\u76f8\u4e92\u7275\u5236\u3002\u5176\u4ed6\u8bed\u8a00\u4e5f\u6709\u7c7b\u4f3c\u63a5\u53e3\uff1ajava\u6709Servlet API\uff0cRuby \u6709 Rack\u3002","title":"2. WSGI"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#3wsgi","text":"WSGI\u63a5\u53e3\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u8981\u6c42Web\u5f00\u53d1\u8005\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u54cd\u5e94HTTP\u8bf7\u6c42\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6700\u7b80\u5355\u7684Web\u7248\u672c\u7684\u201cHello World!\u201d\uff1a def application ( environ , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html' )]) return 'Hello World!' \u4e0a\u9762\u7684 application() \u51fd\u6570\u5c31\u662f\u7b26\u5408WSGI\u6807\u51c6\u7684\u4e00\u4e2aHTTP\u5904\u7406\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a environ\uff1a\u4e00\u4e2a\u5305\u542b\u6240\u6709HTTP\u8bf7\u6c42\u4fe1\u606f\u7684dict\u5bf9\u8c61\uff1b start_response\uff1a\u4e00\u4e2a\u53d1\u9001HTTP\u54cd\u5e94\u7684\u51fd\u6570\u3002 \u6574\u4e2a application() \u51fd\u6570\u672c\u8eab\u6ca1\u6709\u6d89\u53ca\u5230\u4efb\u4f55\u89e3\u6790HTTP\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a\u5e95\u5c42web\u670d\u52a1\u5668\u89e3\u6790\u90e8\u5206\u548c\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u90e8\u5206\u8fdb\u884c\u4e86\u5206\u79bb\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5c31\u53ef\u4ee5\u4e13\u5fc3\u505a\u4e00\u4e2a\u9886\u57df\u4e86 \u4e0d\u8fc7\uff0c\u7b49\u7b49\uff0c\u8fd9\u4e2a application() \u51fd\u6570\u600e\u4e48\u8c03\u7528\uff1f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u8c03\u7528\uff0c\u4e24\u4e2a\u53c2\u6570environ\u548cstart_response\u6211\u4eec\u6ca1\u6cd5\u63d0\u4f9b\uff0c\u8fd4\u56de\u7684str\u4e5f\u6ca1\u6cd5\u53d1\u7ed9\u6d4f\u89c8\u5668\u3002 \u6240\u4ee5 application() \u51fd\u6570\u5fc5\u987b\u7531WSGI\u670d\u52a1\u5668\u6765\u8c03\u7528\u3002\u6709\u5f88\u591a\u7b26\u5408WSGI\u89c4\u8303\u7684\u670d\u52a1\u5668\u3002\u800c\u6211\u4eec\u6b64\u65f6\u7684web\u670d\u52a1\u5668\u9879\u76ee\u7684\u76ee\u7684\u5c31\u662f\u505a\u4e00\u4e2a\u65e2\u80fd\u89e3\u6790\u9759\u6001\u7f51\u9875\u8fd8\u53ef\u4ee5\u89e3\u6790\u52a8\u6001\u7f51\u9875\u7684\u670d\u52a1\u5668","title":"3.\u5b9a\u4e49WSGI\u63a5\u53e3"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#446-web-wsgi-web","text":"{ 'HTTP_ACCEPT_LANGUAGE' : 'zh-cn' , 'wsgi.file_wrapper' : < built - infunctionuwsgi_sendfile > , 'HTTP_UPGRADE_INSECURE_REQUESTS' : '1' , 'uwsgi.version' : b '2.0.15' , 'REMOTE_ADDR' : '172.16.7.1' , 'wsgi.errors' : < _io . TextIOWrappername = 2 mode = 'w' encoding = 'UTF-8' > , 'wsgi.version' : ( 1 , 0 ), 'REMOTE_PORT' : '40432' , 'REQUEST_URI' : '/' , 'SERVER_PORT' : '8000' , 'wsgi.multithread' : False , 'HTTP_ACCEPT' : 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' , 'HTTP_HOST' : '172.16.7.152: 8000' , 'wsgi.run_once' : False , 'wsgi.input' : < uwsgi . _Inputobjectat0x7f7faecdc9c0 > , 'SERVER_PROTOCOL' : 'HTTP/1.1' , 'REQUEST_METHOD' : 'GET' , 'HTTP_ACCEPT_ENCODING' : 'gzip,deflate' , 'HTTP_CONNECTION' : 'keep-alive' , 'uwsgi.node' : b 'ubuntu' , 'HTTP_DNT' : '1' , 'UWSGI_ROUTER' : 'http' , 'SCRIPT_NAME' : '' , 'wsgi.multiprocess' : False , 'QUERY_STRING' : '' , 'PATH_INFO' : '/index.html' , 'wsgi.url_scheme' : 'http' , 'HTTP_USER_AGENT' : 'Mozilla/5.0(Macintosh;IntelMacOSX10_12_5)AppleWebKit/603.2.4(KHTML,likeGecko)Version/10.1.1Safari/603.2.4' , 'SERVER_NAME' : 'ubuntu' }","title":"4. web\u670d\u52a1\u5668-----WSGI\u534f\u8bae----&gt;web\u6846\u67b6 \u4f20\u9012\u7684\u5b57\u5178"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#182","text":"\u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b import time def application ( environ , start_response ): status = '200 OK' response_headers = [( 'Content-Type' , 'text/html' )] start_response ( status , response_headers ) return str ( environ ) + '==Hello world from a simple WSGI application!---> %s \\n ' % time . ctime () web_server.py import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () body = mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py def application ( environ , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....'","title":"18.2. \u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#06-","text":"import socket import re import multiprocessing import time import mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./html\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} body = mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status #\u5c06\u72b6\u6001\u4fe1\u606f\u5199\u5230\u5934\u4e0a for temp in self . headers : #\u5c06\u5176\u4ed6\u7684\u6846\u67b6\u8fd4\u56de\u7684\u5143\u7ec4\u901a\u8fc7for\u5faa\u73af\u7ed9\u53d8\u6210 .. : ..\u7684\u5f62\u5f0f,\u4e00\u4e2a\u5143\u7ec4\u5360\u4e00\u884c header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () #\u628a\u670d\u52a1\u5668\u7684\u4fe1\u606f\u8ddf\u6846\u67b6\u7684\u4fe1\u606f\u8fd4\u56de def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] #\u670d\u52a1\u5668\u7248\u672c\u7684\u4fe1\u606f\u5199\u5728\u670d\u52a1\u5668\u4ee3\u7801\u4e2d self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame def index (): return \"\u8fd9\u662f\u4e3b\u9875\" def login (): return \"\u8fd9\u662f\u767b\u5f55\u9875\u9762\" def application ( env , start_response ): #charset=utf-8\u8bbe\u7f6e\u6d4f\u89c8\u5668\u7f16\u7801 start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) #\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u76f4\u63a5\u5bf9\u53d8\u91cf\u8fdb\u884c \u8d4b\u503c\u7684,\u5389\u5bb3\u4e86 file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/login.py\" : return login () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....'","title":"06-\u901a\u8fc7\u4f20\u9012\u5b57\u5178\u5b9e\u73b0\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4e00\u6837\u76f8\u5e94\u7684\u4e0d\u4e00\u6837"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#07-","text":"web_server.py import socket import re import multiprocessing import time import dynamic.mini_frame class WSGIServer ( object ): def __init__ ( self ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , 7890 )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./static\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} body = dynamic . mini_frame . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" wsgi_server = WSGIServer () wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py def index (): with open ( \"./templates/index.html\" , encoding = \"utf-8\" ) as f : #\u6ce8\u610f\u7f16\u7801\u7684\u683c\u5f0f content = f . read () return content def center (): with open ( \"./templates/center.html\" , encoding = \"utf-8\" ) as f : return f . read () def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....'","title":"07-\u5b9e\u73b0\u6a21\u677f\u6587\u4ef6"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#09-web","text":"mini_frame.py import re def index (): with open ( \"./templates/index.html\" ) as f : content = f . read () my_stock_info = \"\u54c8\u54c8\u54c8\u54c8 \u8fd9\u662f\u4f60\u7684\u672c\u6708\u540d\u79f0.....\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def center (): with open ( \"./templates/center.html\" ) as f : content = f . read () my_stock_info = \"\u8fd9\u91cc\u662f\u4ecemysql\u67e5\u8be2\u51fa\u6765\u7684\u6570\u636e\u3002\u3002\u3002\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....' web_server.py import socket import re import multiprocessing import time # import dynamic.mini_frame import sys class WSGIServer ( object ): def __init__ ( self , port , app ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) self . application = app def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( \"./static\" + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} # body = dynamic.mini_frame.application(env, self.set_response_header) body = self . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" if len ( sys . argv ) == 3 : try : port = int ( sys . argv [ 1 ]) # 7890 frame_app_name = sys . argv [ 2 ] # mini_frame:application except Exception as ret : print ( \"\u7aef\u53e3\u8f93\u5165\u9519\u8bef\u3002\u3002\u3002\u3002\u3002\" ) return else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return # mini_frame:application ret = re . match ( r \"([^:]+):(.*)\" , frame_app_name ) if ret : frame_name = ret . group ( 1 ) # mini_frame app_name = ret . group ( 2 ) # application else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return sys . path . append ( \"./dynamic\" ) #\u6dfb\u52a0\u8fd9\u4e2a\u8def\u5f84.\u4e0b\u9762\u5bfc\u6a21\u5757\u7684\u65f6\u5019\u624d\u77e5\u9053\u6709\u8fd9\u4e48\u4e2a\u8def\u5f84\u53ef\u4ee5\u4f7f\u7528 # import frame_name --->\u627eframe_name.py frame = __import__ ( frame_name ) # \u8fd4\u56de\u503c\u6807\u8bb0\u8fd9 \u5bfc\u5165\u7684\u8fd9\u4e2a\u6a21\u5757(\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528import,\u5c31\u4f1a\u8ba4\u4e3a\u4f7f\u7528\u7684\u662fframe_name\u5305\u800c\u4e0d\u662f\u53d8\u91cf\u4ee3\u8868\u7684\u610f\u601d) #\u4e0a\u9762\u662f\u5bfc\u5305,\u4e0b\u9762\u662f\u627e\u51fd\u6570(\u4f7f\u7528\u7684\u662fgetattr\u51fd\u6570) app = getattr ( frame , app_name ) # \u6b64\u65f6app\u5c31\u6307\u5411\u4e86 dynamic/mini_frame\u6a21\u5757\u4e2d\u7684application\u8fd9\u4e2a\u51fd\u6570 # print(app) wsgi_server = WSGIServer ( port , app ) #\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f20\u9012\u8fdb\u53bb wsgi_server . run_forever () if __name__ == \"__main__\" : main ()","title":"09-\u8fd0\u884cweb\u670d\u52a1\u5668\u65f6\u6307\u5b9a\u7aef\u53e3\u4ee5\u53ca\u6846\u67b6"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#10-web","text":"run.sh \u8fd0\u884c\u811a\u672c python3 web_server.py 7890 mini_frame:application web_server.conf \u8def\u5f84\u914d\u7f6e\u6587\u4ef6 { \"static_path\" : \"./static\" , \"dynamic_path\" : \"./dynamic\" } web_server.py import socket import re import multiprocessing import time # import dynamic.mini_frame import sys class WSGIServer ( object ): def __init__ ( self , port , app , static_path ): # 1. \u521b\u5efa\u5957\u63a5\u5b57 self . tcp_server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . tcp_server_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # 2. \u7ed1\u5b9a self . tcp_server_socket . bind (( \"\" , port )) # 3. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . listen ( 128 ) self . application = app self . static_path = static_path #\u9759\u6001\u8d44\u6e90\u7684\u8def\u5f84 def service_client ( self , new_socket ): \"\"\"\u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u8fd4\u56de\u6570\u636e\"\"\" # 1. \u63a5\u6536\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8bf7\u6c42 \uff0c\u5373http\u8bf7\u6c42 # GET / HTTP/1.1 # ..... request = new_socket . recv ( 1024 ) . decode ( \"utf-8\" ) # print(\">>>\"*50) # print(request) request_lines = request . splitlines () print ( \"\" ) print ( \">\" * 20 ) print ( request_lines ) # GET /index.html HTTP/1.1 # get post put del file_name = \"\" ret = re . match ( r \"[^/]+(/[^ ]*)\" , request_lines [ 0 ]) if ret : file_name = ret . group ( 1 ) # print(\"*\"*50, file_name) if file_name == \"/\" : file_name = \"/index.html\" # 2. \u8fd4\u56dehttp\u683c\u5f0f\u7684\u6570\u636e\uff0c\u7ed9\u6d4f\u89c8\u5668 # 2.1 \u5982\u679c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u9759\u6001\u8d44\u6e90\uff08html/css/js/png\uff0cjpg\u7b49\uff09 if not file_name . endswith ( \".py\" ): try : f = open ( self . static_path + file_name , \"rb\" ) except : response = \"HTTP/1.1 404 NOT FOUND \\r\\n \" response += \" \\r\\n \" response += \"------file not found-----\" new_socket . send ( response . encode ( \"utf-8\" )) else : html_content = f . read () f . close () # 2.1 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---header response = \"HTTP/1.1 200 OK \\r\\n \" response += \" \\r\\n \" # 2.2 \u51c6\u5907\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u7684\u6570\u636e---boy # response += \"hahahhah\" # \u5c06response header\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5c06response ic.mini_frame.applicationbody\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( html_content ) else : # 2.2 \u5982\u679c\u662f\u4ee5.py\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662f\u52a8\u6001\u8d44\u6e90\u7684\u8bf7\u6c42 env = dict () # \u8fd9\u4e2a\u5b57\u5178\u4e2d\u5b58\u653e\u7684\u662fweb\u670d\u52a1\u5668\u8981\u4f20\u9012\u7ed9 web\u6846\u67b6\u7684\u6570\u636e\u4fe1\u606f env [ 'PATH_INFO' ] = file_name # {\"PATH_INFO\": \"/index.py\"} # body = dynamic.mini_frame.application(env, self.set_response_header) body = self . application ( env , self . set_response_header ) header = \"HTTP/1.1 %s \\r\\n \" % self . status for temp in self . headers : header += \" %s : %s \\r\\n \" % ( temp [ 0 ], temp [ 1 ]) header += \" \\r\\n \" response = header + body # \u53d1\u9001response\u7ed9\u6d4f\u89c8\u5668 new_socket . send ( response . encode ( \"utf-8\" )) # \u5173\u95ed\u5957\u63a5 new_socket . close () def set_response_header ( self , status , headers ): self . status = status self . headers = [( \"server\" , \"mini_web v8.8\" )] self . headers += headers def run_forever ( self ): \"\"\"\u7528\u6765\u5b8c\u6210\u6574\u4f53\u7684\u63a7\u5236\"\"\" while True : # 4. \u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u7684\u94fe\u63a5 new_socket , client_addr = self . tcp_server_socket . accept () # 5. \u4e3a\u8fd9\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1 p = multiprocessing . Process ( target = self . service_client , args = ( new_socket ,)) p . start () new_socket . close () # \u5173\u95ed\u76d1\u542c\u5957\u63a5\u5b57 self . tcp_server_socket . close () def main (): \"\"\"\u63a7\u5236\u6574\u4f53\uff0c\u521b\u5efa\u4e00\u4e2aweb \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684run_forever\u65b9\u6cd5\u8fd0\u884c\"\"\" if len ( sys . argv ) == 3 : try : port = int ( sys . argv [ 1 ]) # 7890 frame_app_name = sys . argv [ 2 ] # mini_frame:application except Exception as ret : print ( \"\u7aef\u53e3\u8f93\u5165\u9519\u8bef\u3002\u3002\u3002\u3002\u3002\" ) return else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return # mini_frame:application ret = re . match ( r \"([^:]+):(.*)\" , frame_app_name ) if ret : frame_name = ret . group ( 1 ) # mini_frame app_name = ret . group ( 2 ) # application else : print ( \"\u8bf7\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c:\" ) print ( \"python3 xxxx.py 7890 mini_frame:application\" ) return with open ( \"./web_server.conf\" ) as f : conf_info = eval ( f . read ()) #\u4f7f\u7528eval\u53d8\u6210\u6211\u4eec\u60f3\u8981\u7684\u5b57\u5178,\u540e\u9762\u770bpython\u4e2deval\u51fd\u6570 # \u6b64\u65f6 conf_info\u662f\u4e00\u4e2a\u5b57\u5178\u91cc\u9762\u7684\u6570\u636e\u4e3a\uff1a # { # \"static_path\":\"./static\", # \"dynamic_path\":\"./dynamic\" # } sys . path . append ( conf_info [ 'dynamic_path' ]) #\u8def\u5f84\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8def\u5f84 # import frame_name --->\u627eframe_name.py frame = __import__ ( frame_name ) # \u8fd4\u56de\u503c\u6807\u8bb0\u8fd9 \u5bfc\u5165\u7684\u8fd9\u4e2a\u6a21\u677f app = getattr ( frame , app_name ) # \u6b64\u65f6app\u5c31\u6307\u5411\u4e86 dynamic/mini_frame\u6a21\u5757\u4e2d\u7684application\u8fd9\u4e2a\u51fd\u6570 # print(app) wsgi_server = WSGIServer ( port , app , conf_info [ 'static_path' ]) #\u4ece\u5b57\u5178\u4e2d\u5f97\u5230\u9759\u6001\u8d44\u6e90\u7684\u8def\u5f84 wsgi_server . run_forever () if __name__ == \"__main__\" : main () mini_frame.py import re def index (): with open ( \"./templates/index.html\" ) as f : content = f . read () my_stock_info = \"\u54c8\u54c8\u54c8\u54c8 \u8fd9\u662f\u4f60\u7684\u672c\u6708\u540d\u79f0.....\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def center (): with open ( \"./templates/center.html\" ) as f : content = f . read () my_stock_info = \"\u8fd9\u91cc\u662f\u4ecemysql\u67e5\u8be2\u51fa\u6765\u7684\u6570\u636e\u3002\u3002\u3002\" content = re . sub ( r \"\\{ %c ontent%\\}\" , my_stock_info , content ) return content def application ( env , start_response ): start_response ( '200 OK' , [( 'Content-Type' , 'text/html;charset=utf-8' )]) file_name = env [ 'PATH_INFO' ] # file_name = \"/index.py\" if file_name == \"/index.py\" : return index () elif file_name == \"/center.py\" : return center () else : return 'Hello World! \u6211\u7231\u4f60\u4e2d\u56fd....'","title":"10-\u8ba9web\u670d\u52a1\u5668\u652f\u6301\u914d\u7f6e\u6587\u4ef6"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#183-web-","text":"","title":"18.3. Web\u52a8\u6001\u670d\u52a1\u5668-\u57fa\u672c\u5b9e\u73b0"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#python","text":"","title":"python\u9ad8\u7ea7"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web-","text":"","title":"Web\u52a8\u6001\u670d\u52a1\u5668-\u57fa\u672c\u5b9e\u73b0"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_2","text":"\u251c\u2500\u2500 web_server.py \u251c\u2500\u2500 web \u2502 \u2514\u2500\u2500 my_web.py \u2514\u2500\u2500 html \u2514\u2500\u2500 index.html .....","title":"\u6587\u4ef6\u7ed3\u6784"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#webmy_webpy","text":"import time def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime()","title":"web/my_web.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web_serverpy_1","text":"import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = {} # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.ctime()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./html\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./web\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:application\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main()","title":"web_server.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_3","text":"","title":"\u8fd0\u884c"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#146_1","text":"python3 web_server.py my_web:application","title":"1. \u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5f00\u59cb\u670d\u52a1\u5668"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#246","text":"","title":"2. \u6253\u5f00\u6d4f\u89c8\u5668"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#184-mini-web-1-","text":"","title":"18.4. mini-web\u6846\u67b6-1-\u6587\u4ef6\u7ed3\u6784"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#python_1","text":"","title":"python\u9ad8\u7ea7"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#mini-web-1-","text":"","title":"mini web\u6846\u67b6-1-\u6587\u4ef6\u7ed3\u6784"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_4","text":"\u251c\u2500\u2500 dynamic ---\u5b58\u653epy\u6a21\u5757 \u2502 \u2514\u2500\u2500 my_web.py \u251c\u2500\u2500 templates ---\u5b58\u653e\u6a21\u677f\u6587\u4ef6 \u2502 \u251c\u2500\u2500 center.html \u2502 \u251c\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 location.html \u2502 \u2514\u2500\u2500 update.html \u251c\u2500\u2500 static ---\u5b58\u653e\u9759\u6001\u7684\u8d44\u6e90\u6587\u4ef6 \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u2502 \u251c\u2500\u2500 main.css \u2502 \u2502 \u2514\u2500\u2500 swiper.min.css \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 a.js \u2502 \u251c\u2500\u2500 bootstrap.min.js \u2502 \u251c\u2500\u2500 jquery-1.12.4.js \u2502 \u251c\u2500\u2500 jquery-1.12.4.min.js \u2502 \u251c\u2500\u2500 jquery.animate-colors.js \u2502 \u251c\u2500\u2500 jquery.animate-colors-min.js \u2502 \u251c\u2500\u2500 jquery.cookie.js \u2502 \u251c\u2500\u2500 jquery-ui.min.js \u2502 \u251c\u2500\u2500 server.js \u2502 \u251c\u2500\u2500 swiper.jquery.min.js \u2502 \u251c\u2500\u2500 swiper.min.js \u2502 \u2514\u2500\u2500 zepto.min.js \u2514\u2500\u2500 web_server.py ---mini web\u670d\u52a1\u5668","title":"\u6587\u4ef6\u7ed3\u6784"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#my_webpy","text":"import time def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime()","title":"my_web.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web_serverpy_2","text":"import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = dict() # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.time()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./static\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./dynamic\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:application\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main()","title":"web_server.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#185-mini-web-2-","text":"","title":"18.5. mini-web\u6846\u67b6-2-\u663e\u793a\u9875\u9762"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#mini-web-2-","text":"","title":"mini web\u6846\u67b6-2-\u663e\u793a\u9875\u9762"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#dynamicmy_webpy","text":"import time import os template_root = \"./templates\" def index(file_name): \"\"\"\u8fd4\u56deindex.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() return content def center(file_name): \"\"\"\u8fd4\u56decenter.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() return content def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) file_name = environ['PATH_INFO'] if file_name == \"/index.py\": return index(file_name) elif file_name == \"/center.py\": return center(file_name) else: return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime()","title":"dynamic/my_web.py (\u66f4\u65b0)"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#web_serverpy_3","text":"import select import time import socket import sys import re import multiprocessing class WSGIServer(object): \"\"\"\u5b9a\u4e49\u4e00\u4e2aWSGI\u670d\u52a1\u5668\u7684\u7c7b\"\"\" def __init__(self, port, documents_root, app): # 1\\. \u521b\u5efa\u5957\u63a5\u5b57 self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 2\\. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f self.server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.server_socket.bind((\"\", port)) # 3\\. \u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57 self.server_socket.listen(128) # \u8bbe\u5b9a\u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84 self.documents_root = documents_root # \u8bbe\u5b9aweb\u6846\u67b6\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) self.app = app def run_forever(self): \"\"\"\u8fd0\u884c\u670d\u52a1\u5668\"\"\" # \u7b49\u5f85\u5bf9\u65b9\u94fe\u63a5 while True: new_socket, new_addr = self.server_socket.accept() # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u4efb\u52a1 new_socket.settimeout(3) # 3s new_process = multiprocessing.Process(target=self.deal_with_request, args=(new_socket,)) new_process.start() new_socket.close() def deal_with_request(self, client_socket): \"\"\"\u4ee5\u957f\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u4e3a\u8fd9\u4e2a\u6d4f\u89c8\u5668\u670d\u52a1\u5668\"\"\" while True: try: request = client_socket.recv(1024).decode(\"utf-8\") except Exception as ret: print(\"========>\", ret) client_socket.close() return # \u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u5173\u95ed if not request: client_socket.close() return request_lines = request.splitlines() for i, line in enumerate(request_lines): print(i, line) # \u63d0\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6(index.html) # GET /a/b/c/d/e/index.html HTTP/1.1 ret = re.match(r\"([^/]*)([^ ]+)\", request_lines[0]) if ret: print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(1)) print(\"\u6b63\u5219\u63d0\u53d6\u6570\u636e:\", ret.group(2)) file_name = ret.group(2) if file_name == \"/\": file_name = \"/index.html\" # \u5982\u679c\u4e0d\u662f\u4ee5py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u8ba4\u4e3a\u662f\u666e\u901a\u7684\u6587\u4ef6 if not file_name.endswith(\".py\"): # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e try: print(self.documents_root+file_name) f = open(self.documents_root+file_name, \"rb\") except: response_body = \"file not found, \u8bf7\u8f93\u5165\u6b63\u786e\u7684url\" response_header = \"HTTP/1.1 404 not found\\r\\n\" response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" response = response_header + response_body # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response.encode('utf-8')) else: content = f.read() f.close() response_body = content response_header = \"HTTP/1.1 200 OK\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % (len(response_body)) response_header += \"\\r\\n\" # \u5c06header\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 client_socket.send(response_header.encode('utf-8') + response_body) # \u4ee5.py\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5c31\u8ba4\u4e3a\u662f\u6d4f\u89c8\u9700\u8981\u52a8\u6001\u7684\u9875\u9762 else: # \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u91cc\u9762\u5b58\u653e\u9700\u8981\u4f20\u9012\u7ed9web\u6846\u67b6\u7684\u6570\u636e env = dict() # ----------\u66f4\u65b0--------- env['PATH_INFO'] = file_name # \u4f8b\u5982 index.py # \u5b58web\u8fd4\u56de\u7684\u6570\u636e response_body = self.app(env, self.set_response_headers) # \u5408\u5e76header\u548cbody response_header = \"HTTP/1.1 {status}\\r\\n\".format(status=self.headers[0]) response_header += \"Content-Type: text/html; charset=utf-8\\r\\n\" response_header += \"Content-Length: %d\\r\\n\" % len(response_body.encode(\"utf-8\")) for temp_head in self.headers[1]: response_header += \"{0}:{1}\\r\\n\".format(*temp_head) response = response_header + \"\\r\\n\" response += response_body client_socket.send(response.encode('utf-8')) def set_response_headers(self, status, headers): \"\"\"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f1a\u5728 web\u6846\u67b6\u4e2d\u88ab\u9ed8\u8ba4\u8c03\u7528\"\"\" response_header_default = [ (\"Data\", time.time()), (\"Server\", \"ItCast-python mini web server\") ] # \u5c06\u72b6\u6001\u7801/\u76f8\u5e94\u5934\u4fe1\u606f\u5b58\u50a8\u8d77\u6765 # [\u5b57\u7b26\u4e32, [xxxxx, xxx2]] self.headers = [status, response_header_default + headers] # \u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_static_document_root = \"./static\" # \u8bbe\u7f6e\u52a8\u6001\u8d44\u6e90\u8bbf\u95ee\u7684\u8def\u5f84 g_dynamic_document_root = \"./dynamic\" def main(): \"\"\"\u63a7\u5236web\u670d\u52a1\u5668\u6574\u4f53\"\"\" # python3 xxxx.py 7890 if len(sys.argv) == 3: # \u83b7\u53d6web\u670d\u52a1\u5668\u7684port port = sys.argv[1] if port.isdigit(): port = int(port) # \u83b7\u53d6web\u670d\u52a1\u5668\u9700\u8981\u52a8\u6001\u8d44\u6e90\u65f6\uff0c\u8bbf\u95ee\u7684web\u6846\u67b6\u540d\u5b57 web_frame_module_app_name = sys.argv[2] else: print(\"\u8fd0\u884c\u65b9\u5f0f\u5982: python3 xxx.py 7890 my_web_frame_name:app\") return print(\"http\u670d\u52a1\u5668\u4f7f\u7528\u7684port:%s\" % port) # \u5c06\u52a8\u6001\u8def\u5f84\u5373\u5b58\u653epy\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6dfb\u52a0\u5230path\u4e2d\uff0c\u8fd9\u6837python\u5c31\u80fd\u591f\u627e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e86 sys.path.append(g_dynamic_document_root) ret = re.match(r\"([^:]*):(.*)\", web_frame_module_app_name) if ret: # \u83b7\u53d6\u6a21\u5757\u540d web_frame_module_name = ret.group(1) # \u83b7\u53d6\u53ef\u4ee5\u8c03\u7528web\u6846\u67b6\u7684\u5e94\u7528\u540d\u79f0 app_name = ret.group(2) # \u5bfc\u5165web\u6846\u67b6\u7684\u4e3b\u6a21\u5757 web_frame_module = __import__(web_frame_module_name) # \u83b7\u53d6\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u7684\u51fd\u6570(\u5bf9\u8c61) app = getattr(web_frame_module, app_name) # print(app) # for test # \u542f\u52a8http\u670d\u52a1\u5668 http_server = WSGIServer(port, g_static_document_root, app) # \u8fd0\u884chttp\u670d\u52a1\u5668 http_server.run_forever() if __name__ == \"__main__\": main()","title":"web_server.py (\u66f4\u65b0)"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_5","text":"","title":"\u6d4f\u89c8\u5668\u6253\u5f00\u770b\u6548\u679c"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#186-mini-web-3-","text":"","title":"18.6. mini-web\u6846\u67b6-3-\u66ff\u6362\u6a21\u677f"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#mini-web-3-","text":"","title":"mini web\u6846\u67b6-3-\u66ff\u6362\u6a21\u677f"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#dynamicmy_webpy_1","text":"import time import os import re template_root = \"./templates\" def index(file_name): \"\"\"\u8fd4\u56deindex.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() # --------\u66f4\u65b0------- data_from_mysql = \"\u6570\u636e\u8fd8\u6ca1\u6709\u656c\u8bf7\u671f\u5f85....\" content = re.sub(r\"\\{%content%\\}\", data_from_mysql, content) return content def center(file_name): \"\"\"\u8fd4\u56decenter.py\u9700\u8981\u7684\u9875\u9762\u5185\u5bb9\"\"\" # return \"hahha\" + os.getcwd() # for test \u8def\u5f84\u95ee\u9898 try: file_name = file_name.replace(\".py\", \".html\") f = open(template_root + file_name) except Exception as ret: return \"%s\" % ret else: content = f.read() f.close() # --------\u66f4\u65b0------- data_from_mysql = \"\u6682\u65f6\u6ca1\u6709\u6570\u636e,,,,~~~~(>_<)~~~~ \" content = re.sub(r\"\\{%content%\\}\", data_from_mysql, content) return content def application(environ, start_response): status = '200 OK' response_headers = [('Content-Type', 'text/html')] start_response(status, response_headers) file_name = environ['PATH_INFO'] if file_name == \"/index.py\": return index(file_name) elif file_name == \"/center.py\": return center(file_name) else: return str(environ) + '==Hello world from a simple WSGI application!--->%s\\n' % time.ctime()","title":"dynamic/my_web.py"},{"location":"python-web/006 18. WSGI\u3001mini-web\u6846\u67b6/#_6","text":"","title":"\u6d4f\u89c8\u5668\u6253\u5f00\u770b\u6548\u679c"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/","text":"\u95ed\u5305 \u00b6 1. \u51fd\u6570\u5f15\u7528 \u00b6 def test1 (): print ( \"--- in test1 func----\" ) # \u8c03\u7528\u51fd\u6570 test1 () # \u5f15\u7528\u51fd\u6570 ret = test1 print ( id ( ret )) print ( id ( test1 )) #\u901a\u8fc7\u5f15\u7528\u8c03\u7528\u51fd\u6570 ret () \u8fd0\u884c\u7ed3\u679c: --- in test1 func ---- 140212571149040 140212571149040 --- in test1 func ---- 2. \u4ec0\u4e48\u662f\u95ed\u5305 \u00b6 # \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 def test ( number ): # \u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u7528\u5230\u4e86\u5916\u8fb9\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u51fd\u6570\u4ee5\u53ca\u7528\u5230\u7684\u4e00\u4e9b\u53d8\u91cf\u79f0\u4e4b\u4e3a\u95ed\u5305 def test_in ( number_in ): print ( \"in test_in \u51fd\u6570, number_in is %d \" % number_in ) return number + number_in # \u5176\u5b9e\u8fd9\u91cc\u8fd4\u56de\u7684\u5c31\u662f\u95ed\u5305\u7684\u7ed3\u679c return test_in # \u7ed9test\u51fd\u6570\u8d4b\u503c\uff0c\u8fd9\u4e2a20\u5c31\u662f\u7ed9\u53c2\u6570number ret = test ( 20 ) # \u6ce8\u610f\u8fd9\u91cc\u7684100\u5176\u5b9e\u7ed9\u53c2\u6570number_in print ( ret ( 100 )) #\u6ce8 \u610f\u8fd9\u91cc\u7684200\u5176\u5b9e\u7ed9\u53c2\u6570number_in print ( ret ( 200 )) \u8fd0\u884c\u7ed3\u679c\uff1a in test_in \u51fd\u6570 , number_in is 100 120 in test_in \u51fd\u6570 , number_in is 200 220 3. \u770b\u4e00\u4e2a\u95ed\u5305\u7684\u5b9e\u9645\u4f8b\u5b50\uff1a \u00b6 def line_conf ( a , b ): def line ( x ): return a * x + b return line line1 = line_conf ( 1 , 1 ) line2 = line_conf ( 4 , 5 ) print ( line1 ( 5 )) print ( line2 ( 5 )) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570line\u4e0e\u53d8\u91cfa,b\u6784\u6210\u95ed\u5305\u3002\u5728\u521b\u5efa\u95ed\u5305\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc7line_conf\u7684\u53c2\u6570a,b\u8bf4\u660e\u4e86\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u51fd\u6570\u7684\u6700\u7ec8\u5f62\u5f0f(y = x + 1\u548cy = 4x + 5)\u3002\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u53c2\u6570a,b\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u76f4\u7ebf\u8868\u8fbe\u51fd\u6570\u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u95ed\u5305\u4e5f\u5177\u6709\u63d0\u9ad8\u4ee3\u7801\u53ef\u590d\u7528\u6027\u7684\u4f5c\u7528\u3002 \u5982\u679c\u6ca1\u6709\u95ed\u5305\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u6b21\u521b\u5efa\u76f4\u7ebf\u51fd\u6570\u7684\u65f6\u5019\u540c\u65f6\u8bf4\u660ea,b,x\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u9700\u8981\u66f4\u591a\u7684\u53c2\u6570\u4f20\u9012\uff0c\u4e5f\u51cf\u5c11\u4e86\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\u3002 \u6ce8\u610f\u70b9: \u7531\u4e8e\u95ed\u5305\u5f15\u7528\u4e86\u5916\u90e8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u5916\u90e8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u6ca1\u6709\u53ca\u65f6\u91ca\u653e\uff0c\u6d88\u8017\u5185\u5b58 4. \u4fee\u6539\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf \u00b6 python3\u7684\u65b9\u6cd5 \u00b6 def counter ( start = 0 ): def incr (): nonlocal start start += 1 return start return incr c1 = counter ( 5 ) print ( c1 ()) print ( c1 ()) c2 = counter ( 50 ) print ( c2 ()) print ( c2 ()) print ( c1 ()) print ( c1 ()) print ( c2 ()) print ( c2 ()) python2\u7684\u65b9\u6cd5 \u00b6 def counter ( start = 0 ): count = [ start ] def incr (): count [ 0 ] += 1 return count [ 0 ] return incr c1 = closeure . counter ( 5 ) print ( c1 ()) # 6 print ( c1 ()) # 7 c2 = closeure . counter ( 100 ) print ( c2 ()) # 101 print ( c2 ()) # 102 \u8bb2\u8bfe\u7684\u4ee3\u7801 # \u95ee\u9898\uff1a\u521d\u4e2d\u91cc\u5b66\u8fc7\u51fd\u6570\uff0c\u4f8b\u5982 y=kx+b, y=ax^2 + bx + c # \u4ee5y=kx+b\u4e3a\u4f8b\uff0c\u8bf7\u8ba1\u7b97\u4e00\u6761\u7ebf\u4e0a\u7684\u8fc7\u4e2a\u70b9 \u5373 \u7ed9x\u503c \u8ba1\u7b97\u51fay\u503c # \u7b2c1\u79cd # k = 1 # b = 2 # y = k*x+b # \u7f3a\u70b9\uff1a\u5982\u679c\u9700\u8981\u591a\u6b21\u8ba1\u7b97\uff0c\u90a3\u4e48\u5c31\u7684\u5199\u591a\u6b21y = k*x+b\u8fd9\u6837\u7684\u5f0f\u5b50 # \u7b2c2\u79cd def line_2 ( k , b , x ): print ( k * x + b ) line_2 ( 1 , 2 , 0 ) line_2 ( 1 , 2 , 1 ) line_2 ( 1 , 2 , 2 ) # \u7f3a\u70b9\uff1a\u5982\u679c\u60f3\u8981\u8ba1\u7b97\u591a\u6b21\u8fd9\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u9700\u8981\u4f20\u9012k\uff0cb\u7684\u503c\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c3\u79cd: \u5168\u5c40\u53d8\u91cf(\u4e0d\u4fee\u6539\u53d8\u91cf\u7684\u8bdd\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u7684\u4e0d\u7528\u58f0\u660e\u53d8\u91cf) k = 1 b = 2 def line_3 ( x ): print ( k * x + b ) line_3 ( 0 ) line_3 ( 1 ) line_3 ( 2 ) k = 11 b = 22 line_3 ( 0 ) line_3 ( 1 ) line_3 ( 2 ) # \u7f3a\u70b9\uff1a\u5982\u679c\u8981\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u9700\u8981\u6bcf\u6b21\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u4fee\u6539\uff0c\u4ee3\u7801\u4f1a\u589e\u591a\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c4\u79cd\uff1a\u7f3a\u7701\u53c2\u6570 def line_4 ( x , k = 1 , b = 2 ): print ( k * x + b ) line_4 ( 0 ) line_4 ( 1 ) line_4 ( 2 ) line_4 ( 0 , k = 11 , b = 22 ) line_4 ( 1 , k = 11 , b = 22 ) line_4 ( 2 , k = 11 , b = 22 ) # \u4f18\u70b9\uff1a\u6bd4\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f\u597d\u5728\uff1ak, b\u662f\u51fd\u6570line_4\u7684\u4e00\u90e8\u5206 \u800c\u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u4efb\u610f\u7684\u88ab\u5176\u4ed6\u51fd\u6570\u6240\u4fee\u6539 # \u7f3a\u70b9\uff1a\u5982\u679c\u8981\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u9700\u8981\u5728\u8c03\u7528\u7684\u65f6\u5019\u8fdb\u884c\u4f20\u9012\u53c2\u6570\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c5\u79cd\uff1a\u5b9e\u4f8b\u5bf9\u8c61 class Line5 ( object ): def __init__ ( self , k , b ): self . k = k self . b = b def __call__ ( self , x ): #call\u9b54\u6cd5\u5c5e\u6027\u53ef\u4ee5\u4f20\u9012\u5f88\u591a\u7684\u4e0d\u5b9a\u957f\u7684\u53c2\u6570 print ( self . k * x + self . b ) line_5_1 = Line5 ( 1 , 2 ) # \u5bf9\u8c61.\u65b9\u6cd5() # \u5bf9\u8c61() line_5_1 ( 0 ) line_5_1 ( 1 ) line_5_1 ( 2 ) line_5_2 = Line5 ( 11 , 22 ) line_5_2 ( 0 ) line_5_2 ( 1 ) line_5_2 ( 2 ) # \u7f3a\u70b9\uff1a\u4e3a\u4e86\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u5b58\u591a\u4e2ak, b\u7684\u503c\uff0c\u56e0\u6b64\u7528\u4e86\u5f88\u591a\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c \u6d6a\u8d39\u8d44\u6e90 print ( \"-\" * 50 ) # \u7b2c6\u79cd\uff1a\u95ed\u5305 def line_6 ( k , b ): def create_y ( x ): print ( k * x + b ) return create_y line_6_1 = line_6 ( 1 , 2 ) line_6_1 ( 0 ) line_6_1 ( 1 ) line_6_1 ( 2 ) line_6_2 = line_6 ( 11 , 22 ) line_6_2 ( 0 ) line_6_2 ( 1 ) line_6_2 ( 2 ) # \u601d\u8003\uff1a\u51fd\u6570\u3001\u533f\u540d\u51fd\u6570\u3001\u95ed\u5305\u3001\u5bf9\u8c61 \u5f53\u505a\u5b9e\u53c2\u65f6 \u6709\u4ec0\u4e48\u533a\u522b\uff1f # 1. \u533f\u540d\u51fd\u6570\u80fd\u591f\u5b8c\u6210\u57fa\u672c\u7684\u7b80\u5355\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5f15\u7528 \u53ea\u6709\u529f\u80fd # 2. \u666e\u901a\u51fd\u6570\u80fd\u591f\u5b8c\u6210\u8f83\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5f15\u7528 \u53ea\u6709\u529f\u80fd # 3. \u95ed\u5305\u80fd\u591f\u5c06\u8f83\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u95ed\u5305\u4e2d\u7684\u51fd\u6570\u4ee5\u53ca\u6570\u636e\uff0c\u56e0\u6b64\u4f20\u9012\u662f\u529f\u80fd+\u6570\u636e # 4. \u5bf9\u8c61\u80fd\u591f\u5b8c\u6210\u6700\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u5f88\u591a\u6570\u636e+\u5f88\u591a\u529f\u80fd\uff0c\u56e0\u6b64\u4f20\u9012\u662f\u529f\u80fd+\u6570\u636e \u4fee\u6539\u95ed\u5305\u4e2d\u7684\u6570\u636e \u00b6 x = 300 def test1 (): x = 200 def test2 (): nonlocal x print ( \"----1----x= %d \" % x ) x = 100 #\u4f7f\u7528nolocal\u5bf9\u95ed\u5305\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u7c7b\u4f3cglobal\u7684\u58f0\u660e print ( \"----2----x= %d \" % x ) return test2 t1 = test1 () t1 () \u6267\u884c\u7ed3\u679c ---- 1 ---- x = 200 ---- 2 ---- x = 100 \u88c5\u9970\u5668 \u00b6 \u88c5\u9970\u5668\u662f\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u7528\u597d\u4e86\u88c5\u9970\u5668\uff0c\u5f00\u53d1\u6548\u7387\u5982\u864e\u6dfb\u7ffc\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662fPython\u9762\u8bd5\u4e2d\u5fc5\u95ee\u7684\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u597d\u591a\u521d\u6b21\u63a5\u89e6\u8fd9\u4e2a\u77e5\u8bc6\u7684\u4eba\u6765\u8bb2\uff0c\u8fd9\u4e2a\u529f\u80fd\u6709\u70b9\u7ed5\uff0c\u81ea\u5b66\u65f6\u76f4\u63a5\u7ed5\u8fc7\u53bb\u4e86\uff0c\u7136\u540e\u9762\u8bd5\u95ee\u5230\u4e86\u5c31\u6302\u4e86\uff0c\u56e0\u4e3a\u88c5\u9970\u5668\u662f\u7a0b\u5e8f\u5f00\u53d1\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u90fd\u4e0d\u4f1a\uff0c\u522b\u8ddf\u4eba\u5bb6\u8bf4\u4f60\u4f1aPython, \u770b\u4e86\u4e0b\u9762\u7684\u6587\u7ae0\uff0c\u4fdd\u8bc1\u4f60\u5b66\u4f1a\u88c5\u9970\u5668\u3002 1\u3001\u5148\u660e\u767d\u8fd9\u6bb5\u4ee3\u7801 \u00b6 #### \u7b2c\u4e00\u6ce2 #### def foo (): print ( 'foo' ) foo # \u8868\u793a\u662f\u51fd\u6570 foo () # \u8868\u793a\u6267\u884cfoo\u51fd\u6570 #### \u7b2c\u4e8c\u6ce2 #### def foo (): print ( 'foo' ) foo = lambda x : x + 1 foo () # \u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u518d\u662f\u539f\u6765\u7684foo\u51fd\u6570\uff0c\u56e0\u4e3afoo\u8fd9\u4e2a\u540d\u5b57\u88ab\u91cd\u65b0\u6307\u5411\u4e86\u53e6\u5916\u4e00\u4e2a\u533f\u540d\u51fd\u6570 \u51fd\u6570\u540d\u4ec5\u4ec5\u662f\u4e2a\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u6307\u5411\u4e86\u5b9a\u4e49\u7684\u51fd\u6570\u800c\u5df2\uff0c\u6240\u4ee5\u624d\u80fd\u901a\u8fc7 \u51fd\u6570\u540d()\u8c03\u7528\uff0c\u5982\u679c \u51fd\u6570\u540d=xxx\u88ab\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u5f53\u5728\u6267\u884c \u51fd\u6570\u540d()\u65f6\uff0c\u8c03\u7528\u7684\u5c31\u4e0d\u77e5\u4e4b\u524d\u7684\u90a3\u4e2a\u51fd\u6570\u4e86 2\u3001\u9700\u6c42\u6765\u4e86 \u00b6 \u521d\u521b\u516c\u53f8\u6709N\u4e2a\u4e1a\u52a1\u90e8\u95e8\uff0c\u57fa\u7840\u5e73\u53f0\u90e8\u95e8\u8d1f\u8d23\u63d0\u4f9b\u5e95\u5c42\u7684\u529f\u80fd\uff0c\u5982\uff1a\u6570\u636e\u5e93\u64cd\u4f5c\u3001redis\u8c03\u7528\u3001\u76d1\u63a7API\u7b49\u529f\u80fd\u3002\u4e1a\u52a1\u90e8\u95e8\u4f7f\u7528\u57fa\u7840\u529f\u80fd\u65f6\uff0c\u53ea\u9700\u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5373\u53ef\u3002\u5982\u4e0b\uff1a ############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def f1 (): print ( 'f1' ) def f2 (): print ( 'f2' ) def f3 (): print ( 'f3' ) def f4 (): print ( 'f4' ) ############### \u4e1a\u52a1\u90e8\u95e8A \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ############### f1 () f2 () f3 () f4 () ############### \u4e1a\u52a1\u90e8\u95e8B \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ############### f1 () f2 () f3 () f4 () \u76ee\u524d\u516c\u53f8\u6709\u6761\u4e0d\u7d0a\u7684\u8fdb\u884c\u7740\uff0c\u4f46\u662f\uff0c\u4ee5\u524d\u57fa\u7840\u5e73\u53f0\u7684\u5f00\u53d1\u4eba\u5458\u5728\u5199\u4ee3\u7801\u65f6\u5019\u6ca1\u6709\u5173\u6ce8\u9a8c\u8bc1\u76f8\u5173\u7684\u95ee\u9898\uff0c\u5373\uff1a\u57fa\u7840\u5e73\u53f0\u7684\u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u88ab\u4efb\u4f55\u4eba\u4f7f\u7528\u3002\u73b0\u5728\u9700\u8981\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u6240\u6709\u529f\u80fd\u8fdb\u884c\u91cd\u6784\uff0c\u4e3a\u5e73\u53f0\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u6dfb\u52a0\u9a8c\u8bc1\u673a\u5236\uff0c\u5373\uff1a\u6267\u884c\u529f\u80fd\u524d\uff0c\u5148\u8fdb\u884c\u9a8c\u8bc1\u3002 \u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low B\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a \u00b6 \u8ddf\u6bcf\u4e2a\u4e1a\u52a1\u90e8\u95e8\u4ea4\u6d89\uff0c\u6bcf\u4e2a\u4e1a\u52a1\u90e8\u95e8\u81ea\u5df1\u5199\u4ee3\u7801\uff0c\u8c03\u7528\u57fa\u7840\u5e73\u53f0\u7684\u529f\u80fd\u4e4b\u524d\u5148\u9a8c\u8bc1\u3002\u8bf6\uff0c\u8fd9\u6837\u4e00\u6765\u57fa\u7840\u5e73\u53f0\u5c31\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4fee\u6539\u4e86\u3002\u592a\u68d2\u4e86\uff0c\u6709\u5145\u8db3\u7684\u65f6\u95f4\u6ce1\u59b9\u5b50... \u5f53\u5929Low B \u88ab\u5f00\u9664\u4e86\u2026 \u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low BB\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a \u00b6 ############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def f1 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f1' ) def f2 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f2' ) def f3 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f3' ) def f4 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f4' ) ############### \u4e1a\u52a1\u90e8\u95e8\u4e0d\u53d8 ############### ### \u4e1a\u52a1\u90e8\u95e8A \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd### f1 () f2 () f3 () f4 () ### \u4e1a\u52a1\u90e8\u95e8B \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ### f1 () f2 () f3 () f4 () \u8fc7\u4e86\u4e00\u5468 Low BB \u88ab\u5f00\u9664\u4e86\u2026 \u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low BBB\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a \u00b6 \u53ea\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\uff0c\u5176\u4ed6\u4e1a\u52a1\u90e8\u95e8\u65e0\u9700\u505a\u4efb\u4f55\u4fee\u6539 ############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def check_login (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 pass def f1 (): check_login () print ( 'f1' ) def f2 (): check_login () print ( 'f2' ) def f3 (): check_login () print ( 'f3' ) def f4 (): check_login () print ( 'f4' ) \u8001\u5927\u770b\u4e86\u4e0bLow BBB \u7684\u5b9e\u73b0\uff0c\u5634\u89d2\u6f0f\u51fa\u4e86\u4e00\u4e1d\u7684\u6b23\u6170\u7684\u7b11\uff0c\u8bed\u91cd\u5fc3\u957f\u7684\u8ddfLow BBB\u804a\u4e86\u4e2a\u5929\uff1a \u8001\u5927\u8bf4\uff1a \u00b6 \u5199\u4ee3\u7801\u8981\u9075\u5faa \u5f00\u653e\u5c01\u95ed \u539f\u5219\uff0c\u867d\u7136\u5728\u8fd9\u4e2a\u539f\u5219\u662f\u7528\u7684\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\uff0c\u4f46\u662f\u4e5f\u9002\u7528\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u89c4\u5b9a\u5df2\u7ecf\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u4e0d\u5141\u8bb8\u88ab\u4fee\u6539\uff0c\u4f46\u53ef\u4ee5\u88ab\u6269\u5c55\uff0c\u5373\uff1a \u5c01\u95ed\uff1a\u5df2\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u5757 \u5f00\u653e\uff1a\u5bf9\u6269\u5c55\u5f00\u53d1 \u5982\u679c\u5c06\u5f00\u653e\u5c01\u95ed\u539f\u5219\u5e94\u7528\u5728\u4e0a\u8ff0\u9700\u6c42\u4e2d\uff0c\u90a3\u4e48\u5c31\u4e0d\u5141\u8bb8\u5728\u51fd\u6570 f1 \u3001f2\u3001f3\u3001f4\u7684\u5185\u90e8\u8fdb\u884c\u4fee\u6539\u4ee3\u7801\uff0c\u8001\u677f\u5c31\u7ed9\u4e86Low BBB\u4e00\u4e2a\u5b9e\u73b0\u65b9\u6848\uff1a def w1 ( func ): def inner (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 func () return inner @w1 def f1 (): print ( 'f1' ) @w1 def f2 (): print ( 'f2' ) @w1 def f3 (): print ( 'f3' ) @w1 def f4 (): print ( 'f4' ) \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\uff0c\u4e5f\u662f\u4ec5\u4ec5\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5728\u5176\u4ed6\u4eba\u8c03\u7528\u51fd\u6570 f1 f2 f3 f4 \u4e4b\u524d\u90fd\u8fdb\u884c\u3010\u9a8c\u8bc1\u3011\u64cd\u4f5c\uff0c\u5e76\u4e14\u5176\u4ed6\u4e1a\u52a1\u90e8\u95e8\u65e0\u9700\u505a\u4efb\u4f55\u64cd\u4f5c\u3002 Low BBB\u5fc3\u60ca\u80c6\u6218\u7684\u95ee\u4e86\u4e0b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u7684\u5185\u90e8\u6267\u884c\u539f\u7406\u662f\u4ec0\u4e48\u5462\uff1f \u8001\u5927\u6b63\u8981\u751f\u6c14\uff0c\u7a81\u7136Low BBB\u7684\u624b\u673a\u6389\u5230\u5730\u4e0a\uff0c\u6070\u5de7\u5c4f\u4fdd\u5c31\u662fLow BBB\u7684\u5973\u53cb\u7167\u7247\uff0c\u8001\u5927\u4e00\u770b\u4e00\u7d27\u4e00\u6296\uff0c\u559c\u7b11\u989c\u5f00\uff0c\u51b3\u5b9a\u548cLow BBB\u4ea4\u4e2a\u597d\u670b\u53cb\u3002 \u8be6\u7ec6\u7684\u5f00\u59cb\u8bb2\u89e3\u4e86\uff1a \u5355\u72ec\u4ee5f1\u4e3a\u4f8b\uff1a def w1 ( func ): def inner (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 func () return inner @w1 def f1 (): print ( 'f1' ) python\u89e3\u91ca\u5668\u5c31\u4f1a\u4ece\u4e0a\u5230\u4e0b\u89e3\u91ca\u4ee3\u7801\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a def w1(func): ==>\u5c06w1\u51fd\u6570\u52a0\u8f7d\u5230\u5185\u5b58 @w1 \u6ca1\u9519\uff0c \u4ece\u8868\u9762\u4e0a\u770b\u89e3\u91ca\u5668\u4ec5\u4ec5\u4f1a\u89e3\u91ca\u8fd9\u4e24\u53e5\u4ee3\u7801\uff0c\u56e0\u4e3a\u51fd\u6570\u5728 \u6ca1\u6709\u88ab\u8c03\u7528\u4e4b\u524d\u5176\u5185\u90e8\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 \u4ece\u8868\u9762\u4e0a\u770b\u89e3\u91ca\u5668\u7740\u5b9e\u4f1a\u6267\u884c\u8fd9\u4e24\u53e5\uff0c\u4f46\u662f @w1 \u8fd9\u4e00\u53e5\u4ee3\u7801\u91cc\u5374\u6709\u5927\u6587\u7ae0\uff0c @\u51fd\u6570\u540d \u662fpython\u7684\u4e00\u79cd\u8bed\u6cd5\u7cd6\u3002 \u4e0a\u4f8b@w1\u5185\u90e8\u4f1a\u6267\u884c\u4e00\u4e0b\u64cd\u4f5c\uff1a \u00b6 \u6267\u884cw1\u51fd\u6570 \u00b6 \u6267\u884cw1\u51fd\u6570 \uff0c\u5e76\u5c06 @w1 \u4e0b\u9762\u7684\u51fd\u6570\u4f5c\u4e3aw1\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5373\uff1a @w1 \u7b49\u4ef7\u4e8e w1(f1) \u6240\u4ee5\uff0c\u5185\u90e8\u5c31\u4f1a\u53bb\u6267\u884c\uff1a def inner (): #\u9a8c\u8bc1 1 #\u9a8c\u8bc1 2 #\u9a8c\u8bc1 3 f1 () # func\u662f\u53c2\u6570\uff0c\u6b64\u65f6 func \u7b49\u4e8e f1 return inner # \u8fd4\u56de\u7684 inner\uff0cinner\u4ee3\u8868\u7684\u662f\u51fd\u6570\uff0c\u975e\u6267\u884c\u51fd\u6570 ,\u5176\u5b9e\u5c31\u662f\u5c06\u539f\u6765\u7684 f1 \u51fd\u6570\u585e\u8fdb\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d w1\u7684\u8fd4\u56de\u503c \u00b6 \u5c06\u6267\u884c\u5b8c\u7684w1\u51fd\u6570\u8fd4\u56de\u503c \u8d4b\u503c \u7ed9@w1\u4e0b\u9762\u7684\u51fd\u6570\u7684\u51fd\u6570\u540df1 \u5373\u5c06w1\u7684\u8fd4\u56de\u503c\u518d\u91cd\u65b0\u8d4b\u503c\u7ed9 f1\uff0c\u5373\uff1a \u65b0 f1 = def inner (): #\u9a8c\u8bc1 1 #\u9a8c\u8bc1 2 #\u9a8c\u8bc1 3 \u539f\u6765 f1 () return inner \u6240\u4ee5\uff0c\u4ee5\u540e\u4e1a\u52a1\u90e8\u95e8\u60f3\u8981\u6267\u884c f1 \u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u6267\u884c \u65b0f1 \u51fd\u6570\uff0c\u5728\u65b0f1 \u51fd\u6570\u5185\u90e8\u5148\u6267\u884c\u9a8c\u8bc1\uff0c\u518d\u6267\u884c\u539f\u6765\u7684f1\u51fd\u6570\uff0c\u7136\u540e\u5c06\u539f\u6765f1 \u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u4e86\u4e1a\u52a1\u8c03\u7528\u8005\u3002 \u5982\u6b64\u4e00\u6765\uff0c \u5373\u6267\u884c\u4e86\u9a8c\u8bc1\u7684\u529f\u80fd\uff0c\u53c8\u6267\u884c\u4e86\u539f\u6765f1\u51fd\u6570\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u539ff1\u51fd\u6570\u8fd4\u56de\u503c \u8fd4\u56de\u7ed9\u4e1a\u52a1\u8c03\u7528\u7740 Low BBB \u4f60\u660e\u767d\u4e86\u5417\uff1f\u8981\u662f\u6ca1\u660e\u767d\u7684\u8bdd\uff0c\u6211\u665a\u4e0a\u53bb\u4f60\u5bb6\u5e2e\u4f60\u89e3\u51b3\u5427\uff01\uff01\uff01 \u88c5\u9970\u5668\u7684\u4e00\u4e2a\u6f14\u793a \u00b6 def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func def test1 (): print ( \"-----test1----\" ) test1 () \u6267\u884c\u7ed3\u679c: --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 04-\u88c5\u9970\u5668\u7684\u5b9e\u73b0\u8fc7\u7a0b.py \u00b6 def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) #\u8fd9\u4e24\u884c\u5c31\u662f\u5b9e\u73b0\u7684\u8fc7\u7a0b # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () test1 () 05-\u88c5\u9970\u5668\u7684\u4f5c\u7528-\u6765\u7edf\u8ba1\u4e00\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4.py \u00b6 import time def set_func ( func ): #\u95ed\u5305 def call_func (): start_time = time . time () #\u5f00\u59cb\u7684\u6267\u884c\u65f6\u95f4 func () stop_time = time . time () #\u7ec8\u6b62\u7684\u6267\u884c\u65f6\u95f4 print ( \"alltimeis %f \" % ( stop_time - start_time )) return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) for i in range ( 10000 ): pass # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () test1 () \u6267\u884c\u7ed3\u679c ----- test1 ---- alltimeis 0.000999 ----- test1 ---- alltimeis 0.000000 06-\u5bf9\u6ca1\u6709\u53c2\u6570\u3001\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 07-\u5bf9\u6709\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def set_func ( func ): def call_func ( a ): #\u8fd9\u91cc\u4e5f\u9700\u8981\u52a0\u53c2\u6570,\u56e0\u4e3a\u8981\u628a\u53c2\u6570\u5728\u4f20\u9012\u7ed9func(a) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) #\u8fd9\u91cc\u9700\u8981\u52a0\u53c2\u6570 return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) test1 ( 100 ) test1 ( 200 ) #\u8ddf\u4f7f\u7528\u88c5\u9970\u5668\u662f\u4e00\u6837\u7684 #xx = set_func(test1) #xx(100) \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 200 3. \u518d\u8bae\u88c5\u9970\u5668 \u00b6 # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeBold ( fn ): def wrapped (): return \"<b>\" + fn () + \"</b>\" return wrapped # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeItalic ( fn ): def wrapped (): return \"<i>\" + fn () + \"</i>\" return wrapped @makeBold def test1 (): return \"hello world-1\" @makeItalic def test2 (): return \"hello world-2\" @makeBold @makeItalic def test3 (): return \"hello world-3\" print ( test1 ()) print ( test2 ()) print ( test3 ()) \u8fd0\u884c\u7ed3\u679c: < b > hello world-1 </ b > < i > hello world-2 </ i > < b >< i > hello world-3 </ i ></ b > 4. \u88c5\u9970\u5668(decorator)\u529f\u80fd \u00b6 \u5f15\u5165\u65e5\u5fd7 \u51fd\u6570\u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u6267\u884c\u51fd\u6570\u524d\u9884\u5907\u5904\u7406 \u6267\u884c\u51fd\u6570\u540e\u6e05\u7406\u529f\u80fd \u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f \u7f13\u5b58 5. \u88c5\u9970\u5668\u793a\u4f8b \u00b6 \u4f8b1:\u65e0\u53c2\u6570\u7684\u51fd\u6570 \u00b6 from time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) foo () sleep ( 2 ) foo () \u4e0a\u9762\u4ee3\u7801\u7406\u89e3\u88c5\u9970\u5668\u6267\u884c\u884c\u4e3a\u53ef\u7406\u89e3\u6210 foo = timefun ( foo ) # foo\u5148\u4f5c\u4e3a\u53c2\u6570\u8d4b\u503c\u7ed9func\u540e,foo\u63a5\u6536\u6307\u5411timefun\u8fd4\u56de\u7684wrapped_func foo () # \u8c03\u7528foo(),\u5373\u7b49\u4ef7\u8c03\u7528wrapped_func() # \u5185\u90e8\u51fd\u6570wrapped_func\u88ab\u5f15\u7528\uff0c\u6240\u4ee5\u5916\u90e8\u51fd\u6570\u7684func\u53d8\u91cf(\u81ea\u7531\u53d8\u91cf)\u5e76\u6ca1\u6709\u91ca\u653e # func\u91cc\u4fdd\u5b58\u7684\u662f\u539ffoo\u51fd\u6570\u5bf9\u8c61 \u4f8b2:\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u53c2\u6570 \u00b6 from time import ctime , sleep def timefun ( func ): def wrapped_func ( a , b ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) print ( a , b ) func ( a , b ) return wrapped_func @timefun def foo ( a , b ): print ( a + b ) foo ( 3 , 5 ) sleep ( 2 ) foo ( 2 , 4 ) 08-\u901a\u4e00\u4e2a\u88c5\u9970\u5668\u5bf9\u591a\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def set_func ( func ): def call_func ( a ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) @set_func # \u76f8\u5f53\u4e8e test2 = set_func(test2) def test2 ( num ): print ( \"-----test2---- %d \" % num ) test1 ( 100 ) test2 ( 200 ) \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test2 ---- 200 09-\u88c5\u9970\u5668\u5728\u6ca1\u6709\u8c03\u7528\u51fd\u6570\u4e4b\u524d\u5df2\u7ecf\u88c5\u9970\u4e86.py \u00b6 def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( a ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) @set_func # \u76f8\u5f53\u4e8e test2 = set_func(test2) def test2 ( num ): print ( \"-----test2---- %d \" % num ) # \u88c5\u9970\u5668\u5728\u8c03\u7528\u51fd\u6570\u4e4b\u524d\uff0c\u5df2\u7ecf\u88abpython\u89e3\u91ca\u5668\u6267\u884c\u4e86\uff0c\u6240\u4ee5\u8981\u7262\u8bb0 \u5f53\u8c03\u7528\u51fd\u6570\u4e4b\u524d \u5176\u5b9e\u5df2\u7ecf\u88c5\u9970\u597d\u4e86\uff0c\u5c3d\u7ba1\u8c03\u7528\u5c31\u53ef\u4ee5\u4e86 # test1(100) # test2(200) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 \u4f8b3:\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u4e0d\u5b9a\u957f\u53c2\u6570 \u00b6 from time import ctime , sleep def timefun ( func ): def wrapped_func ( * args , ** kwargs ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func ( * args , ** kwargs ) return wrapped_func @timefun def foo ( a , b , c ): print ( a + b + c ) foo ( 3 , 5 , 7 ) sleep ( 2 ) foo ( 2 , 4 , 9 ) 10-\u5bf9\u4e0d\u5b9a\u957f\u53c2\u6570\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) # func(args, kwargs) # \u4e0d\u884c\uff0c\u76f8\u5f53\u4e8e\u4f20\u9012\u4e862\u4e2a\u53c2\u6570 \uff1a1\u4e2a\u5143\u7ec4\uff0c1\u4e2a\u5b57\u5178 func ( * args , ** kwargs ) # \u62c6\u5305(\u591a\u4f59\u7684\u53c2\u6570\u7ed9\u5143\u7956,\u591a\u4f59\u7684\u5173\u952e\u5b57\u7ed9\u5b57\u5178) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num , num1 , * args , ** kwargs ): # *args\u5143\u7956,**kwargs \u5b57\u5178 print ( \"-----test1---- %d \" % num , num1 ) print ( \"-----test1----\" , args ) print ( \"-----test1----\" , kwargs ) #test1(100) test1 ( 100 , 200 ) test1 ( 100 , 200 , 300 , mm = 100 ) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 200 ----- test1 ---- () ----- test1 ---- {} --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 200 ----- test1 ---- ( 300 ,) ----- test1 ---- { 'mm' : 100 } \u4f8b4:\u88c5\u9970\u5668\u4e2d\u7684return(\u8981\u5c06func\u7684\u8fd4\u56de\u503c\u7ee7\u7eed\u8fd4\u56de\u52a0\u4e00\u4e2areturn\u5c31\u53ef\u4ee5\u4e86) \u00b6 11-\u5bf9\u5e26\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 \u901a\u7528\u7684\u88c5\u9970\u5668 def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) # func(args, kwargs) # \u4e0d\u884c\uff0c\u76f8\u5f53\u4e8e\u4f20\u9012\u4e862\u4e2a\u53c2\u6570 \uff1a1\u4e2a\u5143\u7ec4\uff0c1\u4e2a\u5b57\u5178 return func ( * args , ** kwargs ) # \u62c6\u5305 return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num , * args , ** kwargs ): print ( \"-----test1---- %d \" % num ) print ( \"-----test1----\" , args ) print ( \"-----test1----\" , kwargs ) return \"ok\" @set_func def test2 (): pass ret = test1 ( 100 ) print ( ret ) ret = test2 () #\u6ca1\u6709\u8fd4\u56de\u503c\u90a3\u4e48\u5c31\u8fd4\u56denone,return\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd print ( ret ) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 ----- test1 ---- () ----- test1 ---- {} ok --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- None \u8bfe\u4ef6\u7684\u4ee3\u7801 from time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) @timefun def getInfo (): return '----hahah---' foo () sleep ( 2 ) foo () print ( getInfo ()) \u6267\u884c\u7ed3\u679c: foo called at Fri Nov 4 21 : 55 : 35 2016 I am foo foo called at Fri Nov 4 21 : 55 : 37 2016 I am foo getInfo called at Fri Nov 4 21 : 55 : 37 2016 None \u5982\u679c\u4fee\u6539\u88c5\u9970\u5668\u4e3a return func() \uff0c\u5219\u8fd0\u884c\u7ed3\u679c\uff1a foo called at Fri Nov 4 21 : 55 : 57 2016 I am foo foo called at Fri Nov 4 21 : 55 : 59 2016 I am foo getInfo called at Fri Nov 4 21 : 55 : 59 2016 ---- hahah --- \u603b\u7ed3\uff1a \u00b6 \u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a\u4e86\u8ba9\u88c5\u9970\u5668\u66f4\u901a\u7528\uff0c\u53ef\u4ee5\u6709return 12-\u591a\u4e2a\u88c5\u9970\u5668\u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def add_qx ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\u6743\u96501\u7684\u529f\u80fd---\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) return func ( * args , ** kwargs ) return call_func def add_xx ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970xxx\u7684\u529f\u80fd---\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662fxxx\u7684\u529f\u80fd----\" ) return func ( * args , ** kwargs ) return call_func @add_qx #\u60f3\u88c5\u4f46\u662f\u4e0b\u9762\u4e0d\u662f\u51fd\u6570\u7b49\u4e0b\u9762\u7684\u88c5\u9970\u5668\u5b8c\u4e8b\u4e86\u5728\u88c5 @add_xx def test1 (): print ( \"------test1------\" ) test1 () #\u7ed3\u679c \u7c7b\u4f3c\u4e8e\u4f7f\u7528\u6808,\u9760\u8fd1\u51fd\u6570\u7684\u5148\u8fdb\u6808,(\u88c5\u9970)\u6267\u884c\u7684\u65f6\u5019\u5148\u8fdb\u7684\u540e\u51fa,\u6216\u8005\u662f\u6267\u884c\u7684\u65f6\u5019\u662f\u6309\u7167\u987a\u5e8f\u6267\u884c\u4ee3\u7801\u7684 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 xxx\u7684\u529f\u80fd --- --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970\u6743\u9650 1 \u7684\u529f\u80fd --- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f xxx\u7684\u529f\u80fd ---- ------ test1 ------ 13-\u5e94\u7528\uff1a\u591a\u4e2a\u88c5\u9970\u5668\u591a\u540c\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py \u00b6 def set_func_1 ( func ): def call_func (): # \"<h1>haha</h1>\" return \"<h1>\" + func () + \"</h1>\" return call_func def set_func_2 ( func ): def call_func (): return \"<td>\" + func () + \"</td>\" return call_func @set_func_1 @set_func_2 def get_str (): return \"haha\" print ( get_str ()) \u6267\u884c < h1 >< td > haha </ td ></ h1 > \u4f8b5:\u88c5\u9970\u5668\u5e26\u53c2\u6570,\u5728\u539f\u6709\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u7f6e\u5916\u90e8\u53d8\u91cf \u00b6 #decorator2.py from time import ctime , sleep def timefun_arg ( pre = \"hello\" ): def timefun ( func ): def wrapped_func (): print ( \" %s called at %s %s \" % ( func . __name__ , ctime (), pre )) return func () return wrapped_func return timefun # \u4e0b\u9762\u7684\u88c5\u9970\u8fc7\u7a0b # 1. \u8c03\u7528timefun_arg(\"itcast\") # 2. \u5c06\u6b65\u9aa41\u5f97\u5230\u7684\u8fd4\u56de\u503c\uff0c\u5373time_fun\u8fd4\u56de\uff0c \u7136\u540etime_fun(foo) # 3. \u5c06time_fun(foo)\u7684\u7ed3\u679c\u8fd4\u56de\uff0c\u5373wrapped_func # 4. \u8ba9foo = wrapped_fun\uff0c\u5373foo\u73b0\u5728\u6307\u5411wrapped_func @timefun_arg ( \"itcast\" ) def foo (): print ( \"I am foo\" ) @timefun_arg ( \"python\" ) def too (): print ( \"I am too\" ) foo () sleep ( 2 ) foo () too () sleep ( 2 ) too () \u53ef\u4ee5\u7406\u89e3\u4e3a foo () == timefun_arg ( \"itcast\" )( foo )() \u4f8b6\uff1a\u7c7b\u88c5\u9970\u5668\uff08\u6269\u5c55\uff0c\u975e\u91cd\u70b9\uff09 \u00b6 \u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u5199\u4e86 __call__() \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002 class Test (): def __call__ ( self ): print ( 'call me!' ) t = Test () t () # call me \u7c7b\u88c5\u9970\u5668demo class Test ( object ): def __init__ ( self , func ): print ( \"---\u521d\u59cb\u5316---\" ) print ( \"func name is %s \" % func . __name__ ) self . __func = func def __call__ ( self ): print ( \"---\u88c5\u9970\u5668\u4e2d\u7684\u529f\u80fd---\" ) self . __func () #\u8bf4\u660e\uff1a #1. \u5f53\u7528Test\u6765\u88c5\u4f5c\u88c5\u9970\u5668\u5bf9test\u51fd\u6570\u8fdb\u884c\u88c5\u9970\u7684\u65f6\u5019\uff0c\u9996\u5148\u4f1a\u521b\u5efaTest\u7684\u5b9e\u4f8b\u5bf9\u8c61 # \u5e76\u4e14\u4f1a\u628atest\u8fd9\u4e2a\u51fd\u6570\u540d\u5f53\u505a\u53c2\u6570\u4f20\u9012\u5230__init__\u65b9\u6cd5\u4e2d # \u5373\u5728__init__\u65b9\u6cd5\u4e2d\u7684\u5c5e\u6027__func\u6307\u5411\u4e86test\u6307\u5411\u7684\u51fd\u6570 # #2. test\u6307\u5411\u4e86\u7528Test\u521b\u5efa\u51fa\u6765\u7684\u5b9e\u4f8b\u5bf9\u8c61 # #3. \u5f53\u5728\u4f7f\u7528test()\u8fdb\u884c\u8c03\u7528\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u8ba9\u8fd9\u4e2a\u5bf9\u8c61()\uff0c\u56e0\u6b64\u4f1a\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684__call__\u65b9\u6cd5 # #4. \u4e3a\u4e86\u80fd\u591f\u5728__call__\u65b9\u6cd5\u4e2d\u8c03\u7528\u539f\u6765test\u6307\u5411\u7684\u51fd\u6570\u4f53\uff0c\u6240\u4ee5\u5728__init__\u65b9\u6cd5\u4e2d\u5c31\u9700\u8981\u4e00\u4e2a\u5b9e\u4f8b\u5c5e\u6027\u6765\u4fdd\u5b58\u8fd9\u4e2a\u51fd\u6570\u4f53\u7684\u5f15\u7528 # \u6240\u4ee5\u624d\u6709\u4e86self.__func = func\u8fd9\u53e5\u4ee3\u7801\uff0c\u4ece\u800c\u5728\u8c03\u7528__call__\u65b9\u6cd5\u4e2d\u80fd\u591f\u8c03\u7528\u5230test\u4e4b\u524d\u7684\u51fd\u6570\u4f53 @Test def test (): print ( \"----test---\" ) test () showpy () #\u5982\u679c\u628a\u8fd9\u53e5\u8bdd\u6ce8\u91ca\uff0c\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f9d\u7136\u4f1a\u770b\u5230\"--\u521d\u59cb\u5316--\" \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a --- \u521d\u59cb\u5316 --- func name is test --- \u88c5\u9970\u5668\u4e2d\u7684\u529f\u80fd --- ---- test --- 14-\u4f7f\u7528\u7c7b\u5f53\u505a\u88c5\u9970\u5668.py \u00b6 # def set_func_1(func): # def call_func(): # # \"<h1>haha</h1>\" # return \"<h1>\" + func() + \"</h1>\" # return call_func class Test ( object ): def __init__ ( self , func ): self . func = func def __call__ ( self ): print ( \"\u8fd9\u91cc\u662f\u88c5\u9970\u5668\u6dfb\u52a0\u7684\u529f\u80fd.....\" ) return self . func () @Test # \u76f8\u5f53\u4e8eget_str = Test(get_str) def get_str (): return \"haha\" print ( get_str ()) \u6267\u884c \u8fd9\u91cc\u662f\u88c5\u9970\u5668\u6dfb\u52a0\u7684\u529f\u80fd ..... haha","title":"007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_1","text":"","title":"\u95ed\u5305"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#1","text":"def test1 (): print ( \"--- in test1 func----\" ) # \u8c03\u7528\u51fd\u6570 test1 () # \u5f15\u7528\u51fd\u6570 ret = test1 print ( id ( ret )) print ( id ( test1 )) #\u901a\u8fc7\u5f15\u7528\u8c03\u7528\u51fd\u6570 ret () \u8fd0\u884c\u7ed3\u679c: --- in test1 func ---- 140212571149040 140212571149040 --- in test1 func ----","title":"1. \u51fd\u6570\u5f15\u7528"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#2","text":"# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 def test ( number ): # \u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u7528\u5230\u4e86\u5916\u8fb9\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u51fd\u6570\u4ee5\u53ca\u7528\u5230\u7684\u4e00\u4e9b\u53d8\u91cf\u79f0\u4e4b\u4e3a\u95ed\u5305 def test_in ( number_in ): print ( \"in test_in \u51fd\u6570, number_in is %d \" % number_in ) return number + number_in # \u5176\u5b9e\u8fd9\u91cc\u8fd4\u56de\u7684\u5c31\u662f\u95ed\u5305\u7684\u7ed3\u679c return test_in # \u7ed9test\u51fd\u6570\u8d4b\u503c\uff0c\u8fd9\u4e2a20\u5c31\u662f\u7ed9\u53c2\u6570number ret = test ( 20 ) # \u6ce8\u610f\u8fd9\u91cc\u7684100\u5176\u5b9e\u7ed9\u53c2\u6570number_in print ( ret ( 100 )) #\u6ce8 \u610f\u8fd9\u91cc\u7684200\u5176\u5b9e\u7ed9\u53c2\u6570number_in print ( ret ( 200 )) \u8fd0\u884c\u7ed3\u679c\uff1a in test_in \u51fd\u6570 , number_in is 100 120 in test_in \u51fd\u6570 , number_in is 200 220","title":"2. \u4ec0\u4e48\u662f\u95ed\u5305"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#3","text":"def line_conf ( a , b ): def line ( x ): return a * x + b return line line1 = line_conf ( 1 , 1 ) line2 = line_conf ( 4 , 5 ) print ( line1 ( 5 )) print ( line2 ( 5 )) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570line\u4e0e\u53d8\u91cfa,b\u6784\u6210\u95ed\u5305\u3002\u5728\u521b\u5efa\u95ed\u5305\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc7line_conf\u7684\u53c2\u6570a,b\u8bf4\u660e\u4e86\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u51fd\u6570\u7684\u6700\u7ec8\u5f62\u5f0f(y = x + 1\u548cy = 4x + 5)\u3002\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u53c2\u6570a,b\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u76f4\u7ebf\u8868\u8fbe\u51fd\u6570\u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u95ed\u5305\u4e5f\u5177\u6709\u63d0\u9ad8\u4ee3\u7801\u53ef\u590d\u7528\u6027\u7684\u4f5c\u7528\u3002 \u5982\u679c\u6ca1\u6709\u95ed\u5305\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u6b21\u521b\u5efa\u76f4\u7ebf\u51fd\u6570\u7684\u65f6\u5019\u540c\u65f6\u8bf4\u660ea,b,x\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u9700\u8981\u66f4\u591a\u7684\u53c2\u6570\u4f20\u9012\uff0c\u4e5f\u51cf\u5c11\u4e86\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\u3002 \u6ce8\u610f\u70b9: \u7531\u4e8e\u95ed\u5305\u5f15\u7528\u4e86\u5916\u90e8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u5916\u90e8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u6ca1\u6709\u53ca\u65f6\u91ca\u653e\uff0c\u6d88\u8017\u5185\u5b58","title":"3. \u770b\u4e00\u4e2a\u95ed\u5305\u7684\u5b9e\u9645\u4f8b\u5b50\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#4","text":"","title":"4. \u4fee\u6539\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#python3","text":"def counter ( start = 0 ): def incr (): nonlocal start start += 1 return start return incr c1 = counter ( 5 ) print ( c1 ()) print ( c1 ()) c2 = counter ( 50 ) print ( c2 ()) print ( c2 ()) print ( c1 ()) print ( c1 ()) print ( c2 ()) print ( c2 ())","title":"python3\u7684\u65b9\u6cd5"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#python2","text":"def counter ( start = 0 ): count = [ start ] def incr (): count [ 0 ] += 1 return count [ 0 ] return incr c1 = closeure . counter ( 5 ) print ( c1 ()) # 6 print ( c1 ()) # 7 c2 = closeure . counter ( 100 ) print ( c2 ()) # 101 print ( c2 ()) # 102 \u8bb2\u8bfe\u7684\u4ee3\u7801 # \u95ee\u9898\uff1a\u521d\u4e2d\u91cc\u5b66\u8fc7\u51fd\u6570\uff0c\u4f8b\u5982 y=kx+b, y=ax^2 + bx + c # \u4ee5y=kx+b\u4e3a\u4f8b\uff0c\u8bf7\u8ba1\u7b97\u4e00\u6761\u7ebf\u4e0a\u7684\u8fc7\u4e2a\u70b9 \u5373 \u7ed9x\u503c \u8ba1\u7b97\u51fay\u503c # \u7b2c1\u79cd # k = 1 # b = 2 # y = k*x+b # \u7f3a\u70b9\uff1a\u5982\u679c\u9700\u8981\u591a\u6b21\u8ba1\u7b97\uff0c\u90a3\u4e48\u5c31\u7684\u5199\u591a\u6b21y = k*x+b\u8fd9\u6837\u7684\u5f0f\u5b50 # \u7b2c2\u79cd def line_2 ( k , b , x ): print ( k * x + b ) line_2 ( 1 , 2 , 0 ) line_2 ( 1 , 2 , 1 ) line_2 ( 1 , 2 , 2 ) # \u7f3a\u70b9\uff1a\u5982\u679c\u60f3\u8981\u8ba1\u7b97\u591a\u6b21\u8fd9\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u9700\u8981\u4f20\u9012k\uff0cb\u7684\u503c\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c3\u79cd: \u5168\u5c40\u53d8\u91cf(\u4e0d\u4fee\u6539\u53d8\u91cf\u7684\u8bdd\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u7684\u4e0d\u7528\u58f0\u660e\u53d8\u91cf) k = 1 b = 2 def line_3 ( x ): print ( k * x + b ) line_3 ( 0 ) line_3 ( 1 ) line_3 ( 2 ) k = 11 b = 22 line_3 ( 0 ) line_3 ( 1 ) line_3 ( 2 ) # \u7f3a\u70b9\uff1a\u5982\u679c\u8981\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u9700\u8981\u6bcf\u6b21\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u4fee\u6539\uff0c\u4ee3\u7801\u4f1a\u589e\u591a\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c4\u79cd\uff1a\u7f3a\u7701\u53c2\u6570 def line_4 ( x , k = 1 , b = 2 ): print ( k * x + b ) line_4 ( 0 ) line_4 ( 1 ) line_4 ( 2 ) line_4 ( 0 , k = 11 , b = 22 ) line_4 ( 1 , k = 11 , b = 22 ) line_4 ( 2 , k = 11 , b = 22 ) # \u4f18\u70b9\uff1a\u6bd4\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f\u597d\u5728\uff1ak, b\u662f\u51fd\u6570line_4\u7684\u4e00\u90e8\u5206 \u800c\u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u4efb\u610f\u7684\u88ab\u5176\u4ed6\u51fd\u6570\u6240\u4fee\u6539 # \u7f3a\u70b9\uff1a\u5982\u679c\u8981\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u90a3\u4e48\u9700\u8981\u5728\u8c03\u7528\u7684\u65f6\u5019\u8fdb\u884c\u4f20\u9012\u53c2\u6570\uff0c\u9ebb\u70e6 print ( \"-\" * 50 ) # \u7b2c5\u79cd\uff1a\u5b9e\u4f8b\u5bf9\u8c61 class Line5 ( object ): def __init__ ( self , k , b ): self . k = k self . b = b def __call__ ( self , x ): #call\u9b54\u6cd5\u5c5e\u6027\u53ef\u4ee5\u4f20\u9012\u5f88\u591a\u7684\u4e0d\u5b9a\u957f\u7684\u53c2\u6570 print ( self . k * x + self . b ) line_5_1 = Line5 ( 1 , 2 ) # \u5bf9\u8c61.\u65b9\u6cd5() # \u5bf9\u8c61() line_5_1 ( 0 ) line_5_1 ( 1 ) line_5_1 ( 2 ) line_5_2 = Line5 ( 11 , 22 ) line_5_2 ( 0 ) line_5_2 ( 1 ) line_5_2 ( 2 ) # \u7f3a\u70b9\uff1a\u4e3a\u4e86\u8ba1\u7b97\u591a\u6761\u7ebf\u4e0a\u7684y\u503c\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u5b58\u591a\u4e2ak, b\u7684\u503c\uff0c\u56e0\u6b64\u7528\u4e86\u5f88\u591a\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c \u6d6a\u8d39\u8d44\u6e90 print ( \"-\" * 50 ) # \u7b2c6\u79cd\uff1a\u95ed\u5305 def line_6 ( k , b ): def create_y ( x ): print ( k * x + b ) return create_y line_6_1 = line_6 ( 1 , 2 ) line_6_1 ( 0 ) line_6_1 ( 1 ) line_6_1 ( 2 ) line_6_2 = line_6 ( 11 , 22 ) line_6_2 ( 0 ) line_6_2 ( 1 ) line_6_2 ( 2 ) # \u601d\u8003\uff1a\u51fd\u6570\u3001\u533f\u540d\u51fd\u6570\u3001\u95ed\u5305\u3001\u5bf9\u8c61 \u5f53\u505a\u5b9e\u53c2\u65f6 \u6709\u4ec0\u4e48\u533a\u522b\uff1f # 1. \u533f\u540d\u51fd\u6570\u80fd\u591f\u5b8c\u6210\u57fa\u672c\u7684\u7b80\u5355\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5f15\u7528 \u53ea\u6709\u529f\u80fd # 2. \u666e\u901a\u51fd\u6570\u80fd\u591f\u5b8c\u6210\u8f83\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5f15\u7528 \u53ea\u6709\u529f\u80fd # 3. \u95ed\u5305\u80fd\u591f\u5c06\u8f83\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u8fd9\u4e2a\u95ed\u5305\u4e2d\u7684\u51fd\u6570\u4ee5\u53ca\u6570\u636e\uff0c\u56e0\u6b64\u4f20\u9012\u662f\u529f\u80fd+\u6570\u636e # 4. \u5bf9\u8c61\u80fd\u591f\u5b8c\u6210\u6700\u4e3a\u590d\u6742\u7684\u529f\u80fd\uff0c\uff0c\uff0c\u4f20\u9012\u662f\u5f88\u591a\u6570\u636e+\u5f88\u591a\u529f\u80fd\uff0c\u56e0\u6b64\u4f20\u9012\u662f\u529f\u80fd+\u6570\u636e","title":"python2\u7684\u65b9\u6cd5"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_2","text":"x = 300 def test1 (): x = 200 def test2 (): nonlocal x print ( \"----1----x= %d \" % x ) x = 100 #\u4f7f\u7528nolocal\u5bf9\u95ed\u5305\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u7c7b\u4f3cglobal\u7684\u58f0\u660e print ( \"----2----x= %d \" % x ) return test2 t1 = test1 () t1 () \u6267\u884c\u7ed3\u679c ---- 1 ---- x = 200 ---- 2 ---- x = 100","title":"\u4fee\u6539\u95ed\u5305\u4e2d\u7684\u6570\u636e"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_3","text":"\u88c5\u9970\u5668\u662f\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u7528\u597d\u4e86\u88c5\u9970\u5668\uff0c\u5f00\u53d1\u6548\u7387\u5982\u864e\u6dfb\u7ffc\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662fPython\u9762\u8bd5\u4e2d\u5fc5\u95ee\u7684\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u597d\u591a\u521d\u6b21\u63a5\u89e6\u8fd9\u4e2a\u77e5\u8bc6\u7684\u4eba\u6765\u8bb2\uff0c\u8fd9\u4e2a\u529f\u80fd\u6709\u70b9\u7ed5\uff0c\u81ea\u5b66\u65f6\u76f4\u63a5\u7ed5\u8fc7\u53bb\u4e86\uff0c\u7136\u540e\u9762\u8bd5\u95ee\u5230\u4e86\u5c31\u6302\u4e86\uff0c\u56e0\u4e3a\u88c5\u9970\u5668\u662f\u7a0b\u5e8f\u5f00\u53d1\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u90fd\u4e0d\u4f1a\uff0c\u522b\u8ddf\u4eba\u5bb6\u8bf4\u4f60\u4f1aPython, \u770b\u4e86\u4e0b\u9762\u7684\u6587\u7ae0\uff0c\u4fdd\u8bc1\u4f60\u5b66\u4f1a\u88c5\u9970\u5668\u3002","title":"\u88c5\u9970\u5668"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#1_1","text":"#### \u7b2c\u4e00\u6ce2 #### def foo (): print ( 'foo' ) foo # \u8868\u793a\u662f\u51fd\u6570 foo () # \u8868\u793a\u6267\u884cfoo\u51fd\u6570 #### \u7b2c\u4e8c\u6ce2 #### def foo (): print ( 'foo' ) foo = lambda x : x + 1 foo () # \u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u518d\u662f\u539f\u6765\u7684foo\u51fd\u6570\uff0c\u56e0\u4e3afoo\u8fd9\u4e2a\u540d\u5b57\u88ab\u91cd\u65b0\u6307\u5411\u4e86\u53e6\u5916\u4e00\u4e2a\u533f\u540d\u51fd\u6570 \u51fd\u6570\u540d\u4ec5\u4ec5\u662f\u4e2a\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u6307\u5411\u4e86\u5b9a\u4e49\u7684\u51fd\u6570\u800c\u5df2\uff0c\u6240\u4ee5\u624d\u80fd\u901a\u8fc7 \u51fd\u6570\u540d()\u8c03\u7528\uff0c\u5982\u679c \u51fd\u6570\u540d=xxx\u88ab\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u5f53\u5728\u6267\u884c \u51fd\u6570\u540d()\u65f6\uff0c\u8c03\u7528\u7684\u5c31\u4e0d\u77e5\u4e4b\u524d\u7684\u90a3\u4e2a\u51fd\u6570\u4e86","title":"1\u3001\u5148\u660e\u767d\u8fd9\u6bb5\u4ee3\u7801"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#2_1","text":"\u521d\u521b\u516c\u53f8\u6709N\u4e2a\u4e1a\u52a1\u90e8\u95e8\uff0c\u57fa\u7840\u5e73\u53f0\u90e8\u95e8\u8d1f\u8d23\u63d0\u4f9b\u5e95\u5c42\u7684\u529f\u80fd\uff0c\u5982\uff1a\u6570\u636e\u5e93\u64cd\u4f5c\u3001redis\u8c03\u7528\u3001\u76d1\u63a7API\u7b49\u529f\u80fd\u3002\u4e1a\u52a1\u90e8\u95e8\u4f7f\u7528\u57fa\u7840\u529f\u80fd\u65f6\uff0c\u53ea\u9700\u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5373\u53ef\u3002\u5982\u4e0b\uff1a ############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def f1 (): print ( 'f1' ) def f2 (): print ( 'f2' ) def f3 (): print ( 'f3' ) def f4 (): print ( 'f4' ) ############### \u4e1a\u52a1\u90e8\u95e8A \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ############### f1 () f2 () f3 () f4 () ############### \u4e1a\u52a1\u90e8\u95e8B \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ############### f1 () f2 () f3 () f4 () \u76ee\u524d\u516c\u53f8\u6709\u6761\u4e0d\u7d0a\u7684\u8fdb\u884c\u7740\uff0c\u4f46\u662f\uff0c\u4ee5\u524d\u57fa\u7840\u5e73\u53f0\u7684\u5f00\u53d1\u4eba\u5458\u5728\u5199\u4ee3\u7801\u65f6\u5019\u6ca1\u6709\u5173\u6ce8\u9a8c\u8bc1\u76f8\u5173\u7684\u95ee\u9898\uff0c\u5373\uff1a\u57fa\u7840\u5e73\u53f0\u7684\u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u88ab\u4efb\u4f55\u4eba\u4f7f\u7528\u3002\u73b0\u5728\u9700\u8981\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u6240\u6709\u529f\u80fd\u8fdb\u884c\u91cd\u6784\uff0c\u4e3a\u5e73\u53f0\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u6dfb\u52a0\u9a8c\u8bc1\u673a\u5236\uff0c\u5373\uff1a\u6267\u884c\u529f\u80fd\u524d\uff0c\u5148\u8fdb\u884c\u9a8c\u8bc1\u3002","title":"2\u3001\u9700\u6c42\u6765\u4e86"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#low-b","text":"\u8ddf\u6bcf\u4e2a\u4e1a\u52a1\u90e8\u95e8\u4ea4\u6d89\uff0c\u6bcf\u4e2a\u4e1a\u52a1\u90e8\u95e8\u81ea\u5df1\u5199\u4ee3\u7801\uff0c\u8c03\u7528\u57fa\u7840\u5e73\u53f0\u7684\u529f\u80fd\u4e4b\u524d\u5148\u9a8c\u8bc1\u3002\u8bf6\uff0c\u8fd9\u6837\u4e00\u6765\u57fa\u7840\u5e73\u53f0\u5c31\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4fee\u6539\u4e86\u3002\u592a\u68d2\u4e86\uff0c\u6709\u5145\u8db3\u7684\u65f6\u95f4\u6ce1\u59b9\u5b50... \u5f53\u5929Low B \u88ab\u5f00\u9664\u4e86\u2026","title":"\u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low B\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#low-bb","text":"############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def f1 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f1' ) def f2 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f2' ) def f3 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f3' ) def f4 (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 print ( 'f4' ) ############### \u4e1a\u52a1\u90e8\u95e8\u4e0d\u53d8 ############### ### \u4e1a\u52a1\u90e8\u95e8A \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd### f1 () f2 () f3 () f4 () ### \u4e1a\u52a1\u90e8\u95e8B \u8c03\u7528\u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd ### f1 () f2 () f3 () f4 () \u8fc7\u4e86\u4e00\u5468 Low BB \u88ab\u5f00\u9664\u4e86\u2026","title":"\u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low BB\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#low-bbb","text":"\u53ea\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\uff0c\u5176\u4ed6\u4e1a\u52a1\u90e8\u95e8\u65e0\u9700\u505a\u4efb\u4f55\u4fee\u6539 ############### \u57fa\u7840\u5e73\u53f0\u63d0\u4f9b\u7684\u529f\u80fd\u5982\u4e0b ############### def check_login (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 pass def f1 (): check_login () print ( 'f1' ) def f2 (): check_login () print ( 'f2' ) def f3 (): check_login () print ( 'f3' ) def f4 (): check_login () print ( 'f4' ) \u8001\u5927\u770b\u4e86\u4e0bLow BBB \u7684\u5b9e\u73b0\uff0c\u5634\u89d2\u6f0f\u51fa\u4e86\u4e00\u4e1d\u7684\u6b23\u6170\u7684\u7b11\uff0c\u8bed\u91cd\u5fc3\u957f\u7684\u8ddfLow BBB\u804a\u4e86\u4e2a\u5929\uff1a","title":"\u8001\u5927\u628a\u5de5\u4f5c\u4ea4\u7ed9 Low BBB\uff0c\u4ed6\u662f\u8fd9\u4e48\u505a\u7684\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_4","text":"\u5199\u4ee3\u7801\u8981\u9075\u5faa \u5f00\u653e\u5c01\u95ed \u539f\u5219\uff0c\u867d\u7136\u5728\u8fd9\u4e2a\u539f\u5219\u662f\u7528\u7684\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\uff0c\u4f46\u662f\u4e5f\u9002\u7528\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u89c4\u5b9a\u5df2\u7ecf\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u4e0d\u5141\u8bb8\u88ab\u4fee\u6539\uff0c\u4f46\u53ef\u4ee5\u88ab\u6269\u5c55\uff0c\u5373\uff1a \u5c01\u95ed\uff1a\u5df2\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u5757 \u5f00\u653e\uff1a\u5bf9\u6269\u5c55\u5f00\u53d1 \u5982\u679c\u5c06\u5f00\u653e\u5c01\u95ed\u539f\u5219\u5e94\u7528\u5728\u4e0a\u8ff0\u9700\u6c42\u4e2d\uff0c\u90a3\u4e48\u5c31\u4e0d\u5141\u8bb8\u5728\u51fd\u6570 f1 \u3001f2\u3001f3\u3001f4\u7684\u5185\u90e8\u8fdb\u884c\u4fee\u6539\u4ee3\u7801\uff0c\u8001\u677f\u5c31\u7ed9\u4e86Low BBB\u4e00\u4e2a\u5b9e\u73b0\u65b9\u6848\uff1a def w1 ( func ): def inner (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 func () return inner @w1 def f1 (): print ( 'f1' ) @w1 def f2 (): print ( 'f2' ) @w1 def f3 (): print ( 'f3' ) @w1 def f4 (): print ( 'f4' ) \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\uff0c\u4e5f\u662f\u4ec5\u4ec5\u5bf9\u57fa\u7840\u5e73\u53f0\u7684\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5728\u5176\u4ed6\u4eba\u8c03\u7528\u51fd\u6570 f1 f2 f3 f4 \u4e4b\u524d\u90fd\u8fdb\u884c\u3010\u9a8c\u8bc1\u3011\u64cd\u4f5c\uff0c\u5e76\u4e14\u5176\u4ed6\u4e1a\u52a1\u90e8\u95e8\u65e0\u9700\u505a\u4efb\u4f55\u64cd\u4f5c\u3002 Low BBB\u5fc3\u60ca\u80c6\u6218\u7684\u95ee\u4e86\u4e0b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u7684\u5185\u90e8\u6267\u884c\u539f\u7406\u662f\u4ec0\u4e48\u5462\uff1f \u8001\u5927\u6b63\u8981\u751f\u6c14\uff0c\u7a81\u7136Low BBB\u7684\u624b\u673a\u6389\u5230\u5730\u4e0a\uff0c\u6070\u5de7\u5c4f\u4fdd\u5c31\u662fLow BBB\u7684\u5973\u53cb\u7167\u7247\uff0c\u8001\u5927\u4e00\u770b\u4e00\u7d27\u4e00\u6296\uff0c\u559c\u7b11\u989c\u5f00\uff0c\u51b3\u5b9a\u548cLow BBB\u4ea4\u4e2a\u597d\u670b\u53cb\u3002 \u8be6\u7ec6\u7684\u5f00\u59cb\u8bb2\u89e3\u4e86\uff1a \u5355\u72ec\u4ee5f1\u4e3a\u4f8b\uff1a def w1 ( func ): def inner (): # \u9a8c\u8bc11 # \u9a8c\u8bc12 # \u9a8c\u8bc13 func () return inner @w1 def f1 (): print ( 'f1' ) python\u89e3\u91ca\u5668\u5c31\u4f1a\u4ece\u4e0a\u5230\u4e0b\u89e3\u91ca\u4ee3\u7801\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a def w1(func): ==>\u5c06w1\u51fd\u6570\u52a0\u8f7d\u5230\u5185\u5b58 @w1 \u6ca1\u9519\uff0c \u4ece\u8868\u9762\u4e0a\u770b\u89e3\u91ca\u5668\u4ec5\u4ec5\u4f1a\u89e3\u91ca\u8fd9\u4e24\u53e5\u4ee3\u7801\uff0c\u56e0\u4e3a\u51fd\u6570\u5728 \u6ca1\u6709\u88ab\u8c03\u7528\u4e4b\u524d\u5176\u5185\u90e8\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 \u4ece\u8868\u9762\u4e0a\u770b\u89e3\u91ca\u5668\u7740\u5b9e\u4f1a\u6267\u884c\u8fd9\u4e24\u53e5\uff0c\u4f46\u662f @w1 \u8fd9\u4e00\u53e5\u4ee3\u7801\u91cc\u5374\u6709\u5927\u6587\u7ae0\uff0c @\u51fd\u6570\u540d \u662fpython\u7684\u4e00\u79cd\u8bed\u6cd5\u7cd6\u3002","title":"\u8001\u5927\u8bf4\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#w1","text":"","title":"\u4e0a\u4f8b@w1\u5185\u90e8\u4f1a\u6267\u884c\u4e00\u4e0b\u64cd\u4f5c\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#w1_1","text":"\u6267\u884cw1\u51fd\u6570 \uff0c\u5e76\u5c06 @w1 \u4e0b\u9762\u7684\u51fd\u6570\u4f5c\u4e3aw1\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5373\uff1a @w1 \u7b49\u4ef7\u4e8e w1(f1) \u6240\u4ee5\uff0c\u5185\u90e8\u5c31\u4f1a\u53bb\u6267\u884c\uff1a def inner (): #\u9a8c\u8bc1 1 #\u9a8c\u8bc1 2 #\u9a8c\u8bc1 3 f1 () # func\u662f\u53c2\u6570\uff0c\u6b64\u65f6 func \u7b49\u4e8e f1 return inner # \u8fd4\u56de\u7684 inner\uff0cinner\u4ee3\u8868\u7684\u662f\u51fd\u6570\uff0c\u975e\u6267\u884c\u51fd\u6570 ,\u5176\u5b9e\u5c31\u662f\u5c06\u539f\u6765\u7684 f1 \u51fd\u6570\u585e\u8fdb\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d","title":"\u6267\u884cw1\u51fd\u6570"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#w1_2","text":"\u5c06\u6267\u884c\u5b8c\u7684w1\u51fd\u6570\u8fd4\u56de\u503c \u8d4b\u503c \u7ed9@w1\u4e0b\u9762\u7684\u51fd\u6570\u7684\u51fd\u6570\u540df1 \u5373\u5c06w1\u7684\u8fd4\u56de\u503c\u518d\u91cd\u65b0\u8d4b\u503c\u7ed9 f1\uff0c\u5373\uff1a \u65b0 f1 = def inner (): #\u9a8c\u8bc1 1 #\u9a8c\u8bc1 2 #\u9a8c\u8bc1 3 \u539f\u6765 f1 () return inner \u6240\u4ee5\uff0c\u4ee5\u540e\u4e1a\u52a1\u90e8\u95e8\u60f3\u8981\u6267\u884c f1 \u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u6267\u884c \u65b0f1 \u51fd\u6570\uff0c\u5728\u65b0f1 \u51fd\u6570\u5185\u90e8\u5148\u6267\u884c\u9a8c\u8bc1\uff0c\u518d\u6267\u884c\u539f\u6765\u7684f1\u51fd\u6570\uff0c\u7136\u540e\u5c06\u539f\u6765f1 \u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u4e86\u4e1a\u52a1\u8c03\u7528\u8005\u3002 \u5982\u6b64\u4e00\u6765\uff0c \u5373\u6267\u884c\u4e86\u9a8c\u8bc1\u7684\u529f\u80fd\uff0c\u53c8\u6267\u884c\u4e86\u539f\u6765f1\u51fd\u6570\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u539ff1\u51fd\u6570\u8fd4\u56de\u503c \u8fd4\u56de\u7ed9\u4e1a\u52a1\u8c03\u7528\u7740 Low BBB \u4f60\u660e\u767d\u4e86\u5417\uff1f\u8981\u662f\u6ca1\u660e\u767d\u7684\u8bdd\uff0c\u6211\u665a\u4e0a\u53bb\u4f60\u5bb6\u5e2e\u4f60\u89e3\u51b3\u5427\uff01\uff01\uff01","title":"w1\u7684\u8fd4\u56de\u503c"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_5","text":"def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func def test1 (): print ( \"-----test1----\" ) test1 () \u6267\u884c\u7ed3\u679c: --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ----","title":"\u88c5\u9970\u5668\u7684\u4e00\u4e2a\u6f14\u793a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#04-py","text":"def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) #\u8fd9\u4e24\u884c\u5c31\u662f\u5b9e\u73b0\u7684\u8fc7\u7a0b # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () test1 ()","title":"04-\u88c5\u9970\u5668\u7684\u5b9e\u73b0\u8fc7\u7a0b.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#05-py","text":"import time def set_func ( func ): #\u95ed\u5305 def call_func (): start_time = time . time () #\u5f00\u59cb\u7684\u6267\u884c\u65f6\u95f4 func () stop_time = time . time () #\u7ec8\u6b62\u7684\u6267\u884c\u65f6\u95f4 print ( \"alltimeis %f \" % ( stop_time - start_time )) return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) for i in range ( 10000 ): pass # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () test1 () \u6267\u884c\u7ed3\u679c ----- test1 ---- alltimeis 0.000999 ----- test1 ---- alltimeis 0.000000","title":"05-\u88c5\u9970\u5668\u7684\u4f5c\u7528-\u6765\u7edf\u8ba1\u4e00\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#06-py","text":"def set_func ( func ): def call_func (): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func () return call_func @set_func # \u7b49\u4ef7\u4e8etest1 = set_func(test1) def test1 (): print ( \"-----test1----\" ) # ret = set_func(test1) # ret() # test1 = set_func(test1) test1 () \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ----","title":"06-\u5bf9\u6ca1\u6709\u53c2\u6570\u3001\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#07-py","text":"def set_func ( func ): def call_func ( a ): #\u8fd9\u91cc\u4e5f\u9700\u8981\u52a0\u53c2\u6570,\u56e0\u4e3a\u8981\u628a\u53c2\u6570\u5728\u4f20\u9012\u7ed9func(a) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) #\u8fd9\u91cc\u9700\u8981\u52a0\u53c2\u6570 return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) test1 ( 100 ) test1 ( 200 ) #\u8ddf\u4f7f\u7528\u88c5\u9970\u5668\u662f\u4e00\u6837\u7684 #xx = set_func(test1) #xx(100) \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 200","title":"07-\u5bf9\u6709\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#3_1","text":"# \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeBold ( fn ): def wrapped (): return \"<b>\" + fn () + \"</b>\" return wrapped # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeItalic ( fn ): def wrapped (): return \"<i>\" + fn () + \"</i>\" return wrapped @makeBold def test1 (): return \"hello world-1\" @makeItalic def test2 (): return \"hello world-2\" @makeBold @makeItalic def test3 (): return \"hello world-3\" print ( test1 ()) print ( test2 ()) print ( test3 ()) \u8fd0\u884c\u7ed3\u679c: < b > hello world-1 </ b > < i > hello world-2 </ i > < b >< i > hello world-3 </ i ></ b >","title":"3. \u518d\u8bae\u88c5\u9970\u5668"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#4-decorator","text":"\u5f15\u5165\u65e5\u5fd7 \u51fd\u6570\u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u6267\u884c\u51fd\u6570\u524d\u9884\u5907\u5904\u7406 \u6267\u884c\u51fd\u6570\u540e\u6e05\u7406\u529f\u80fd \u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f \u7f13\u5b58","title":"4. \u88c5\u9970\u5668(decorator)\u529f\u80fd"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#5","text":"","title":"5. \u88c5\u9970\u5668\u793a\u4f8b"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#1_2","text":"from time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) foo () sleep ( 2 ) foo () \u4e0a\u9762\u4ee3\u7801\u7406\u89e3\u88c5\u9970\u5668\u6267\u884c\u884c\u4e3a\u53ef\u7406\u89e3\u6210 foo = timefun ( foo ) # foo\u5148\u4f5c\u4e3a\u53c2\u6570\u8d4b\u503c\u7ed9func\u540e,foo\u63a5\u6536\u6307\u5411timefun\u8fd4\u56de\u7684wrapped_func foo () # \u8c03\u7528foo(),\u5373\u7b49\u4ef7\u8c03\u7528wrapped_func() # \u5185\u90e8\u51fd\u6570wrapped_func\u88ab\u5f15\u7528\uff0c\u6240\u4ee5\u5916\u90e8\u51fd\u6570\u7684func\u53d8\u91cf(\u81ea\u7531\u53d8\u91cf)\u5e76\u6ca1\u6709\u91ca\u653e # func\u91cc\u4fdd\u5b58\u7684\u662f\u539ffoo\u51fd\u6570\u5bf9\u8c61","title":"\u4f8b1:\u65e0\u53c2\u6570\u7684\u51fd\u6570"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#2_2","text":"from time import ctime , sleep def timefun ( func ): def wrapped_func ( a , b ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) print ( a , b ) func ( a , b ) return wrapped_func @timefun def foo ( a , b ): print ( a + b ) foo ( 3 , 5 ) sleep ( 2 ) foo ( 2 , 4 )","title":"\u4f8b2:\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u53c2\u6570"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#08-py","text":"def set_func ( func ): def call_func ( a ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) @set_func # \u76f8\u5f53\u4e8e test2 = set_func(test2) def test2 ( num ): print ( \"-----test2---- %d \" % num ) test1 ( 100 ) test2 ( 200 ) \u6267\u884c --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test2 ---- 200","title":"08-\u901a\u4e00\u4e2a\u88c5\u9970\u5668\u5bf9\u591a\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#09-py","text":"def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( a ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) func ( a ) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num ): print ( \"-----test1---- %d \" % num ) @set_func # \u76f8\u5f53\u4e8e test2 = set_func(test2) def test2 ( num ): print ( \"-----test2---- %d \" % num ) # \u88c5\u9970\u5668\u5728\u8c03\u7528\u51fd\u6570\u4e4b\u524d\uff0c\u5df2\u7ecf\u88abpython\u89e3\u91ca\u5668\u6267\u884c\u4e86\uff0c\u6240\u4ee5\u8981\u7262\u8bb0 \u5f53\u8c03\u7528\u51fd\u6570\u4e4b\u524d \u5176\u5b9e\u5df2\u7ecf\u88c5\u9970\u597d\u4e86\uff0c\u5c3d\u7ba1\u8c03\u7528\u5c31\u53ef\u4ee5\u4e86 # test1(100) # test2(200) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970","title":"09-\u88c5\u9970\u5668\u5728\u6ca1\u6709\u8c03\u7528\u51fd\u6570\u4e4b\u524d\u5df2\u7ecf\u88c5\u9970\u4e86.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#3_2","text":"from time import ctime , sleep def timefun ( func ): def wrapped_func ( * args , ** kwargs ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func ( * args , ** kwargs ) return wrapped_func @timefun def foo ( a , b , c ): print ( a + b + c ) foo ( 3 , 5 , 7 ) sleep ( 2 ) foo ( 2 , 4 , 9 )","title":"\u4f8b3:\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u4e0d\u5b9a\u957f\u53c2\u6570"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#10-py","text":"def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) # func(args, kwargs) # \u4e0d\u884c\uff0c\u76f8\u5f53\u4e8e\u4f20\u9012\u4e862\u4e2a\u53c2\u6570 \uff1a1\u4e2a\u5143\u7ec4\uff0c1\u4e2a\u5b57\u5178 func ( * args , ** kwargs ) # \u62c6\u5305(\u591a\u4f59\u7684\u53c2\u6570\u7ed9\u5143\u7956,\u591a\u4f59\u7684\u5173\u952e\u5b57\u7ed9\u5b57\u5178) return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num , num1 , * args , ** kwargs ): # *args\u5143\u7956,**kwargs \u5b57\u5178 print ( \"-----test1---- %d \" % num , num1 ) print ( \"-----test1----\" , args ) print ( \"-----test1----\" , kwargs ) #test1(100) test1 ( 100 , 200 ) test1 ( 100 , 200 , 300 , mm = 100 ) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 200 ----- test1 ---- () ----- test1 ---- {} --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 200 ----- test1 ---- ( 300 ,) ----- test1 ---- { 'mm' : 100 }","title":"10-\u5bf9\u4e0d\u5b9a\u957f\u53c2\u6570\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#4returnfuncreturn","text":"","title":"\u4f8b4:\u88c5\u9970\u5668\u4e2d\u7684return(\u8981\u5c06func\u7684\u8fd4\u56de\u503c\u7ee7\u7eed\u8fd4\u56de\u52a0\u4e00\u4e2areturn\u5c31\u53ef\u4ee5\u4e86)"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#11-py","text":"\u901a\u7528\u7684\u88c5\u9970\u5668 def set_func ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc12----\" ) # func(args, kwargs) # \u4e0d\u884c\uff0c\u76f8\u5f53\u4e8e\u4f20\u9012\u4e862\u4e2a\u53c2\u6570 \uff1a1\u4e2a\u5143\u7ec4\uff0c1\u4e2a\u5b57\u5178 return func ( * args , ** kwargs ) # \u62c6\u5305 return call_func @set_func # \u76f8\u5f53\u4e8e test1 = set_func(test1) def test1 ( num , * args , ** kwargs ): print ( \"-----test1---- %d \" % num ) print ( \"-----test1----\" , args ) print ( \"-----test1----\" , kwargs ) return \"ok\" @set_func def test2 (): pass ret = test1 ( 100 ) print ( ret ) ret = test2 () #\u6ca1\u6709\u8fd4\u56de\u503c\u90a3\u4e48\u5c31\u8fd4\u56denone,return\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd print ( ret ) \u6267\u884c --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- ----- test1 ---- 100 ----- test1 ---- () ----- test1 ---- {} ok --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 2 ---- None \u8bfe\u4ef6\u7684\u4ee3\u7801 from time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) @timefun def getInfo (): return '----hahah---' foo () sleep ( 2 ) foo () print ( getInfo ()) \u6267\u884c\u7ed3\u679c: foo called at Fri Nov 4 21 : 55 : 35 2016 I am foo foo called at Fri Nov 4 21 : 55 : 37 2016 I am foo getInfo called at Fri Nov 4 21 : 55 : 37 2016 None \u5982\u679c\u4fee\u6539\u88c5\u9970\u5668\u4e3a return func() \uff0c\u5219\u8fd0\u884c\u7ed3\u679c\uff1a foo called at Fri Nov 4 21 : 55 : 57 2016 I am foo foo called at Fri Nov 4 21 : 55 : 59 2016 I am foo getInfo called at Fri Nov 4 21 : 55 : 59 2016 ---- hahah ---","title":"11-\u5bf9\u5e26\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#_6","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a\u4e86\u8ba9\u88c5\u9970\u5668\u66f4\u901a\u7528\uff0c\u53ef\u4ee5\u6709return","title":"\u603b\u7ed3\uff1a"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#12-py","text":"def add_qx ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970\u6743\u96501\u7684\u529f\u80fd---\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662f\u6743\u9650\u9a8c\u8bc11----\" ) return func ( * args , ** kwargs ) return call_func def add_xx ( func ): print ( \"---\u5f00\u59cb\u8fdb\u884c\u88c5\u9970xxx\u7684\u529f\u80fd---\" ) def call_func ( * args , ** kwargs ): print ( \"---\u8fd9\u662fxxx\u7684\u529f\u80fd----\" ) return func ( * args , ** kwargs ) return call_func @add_qx #\u60f3\u88c5\u4f46\u662f\u4e0b\u9762\u4e0d\u662f\u51fd\u6570\u7b49\u4e0b\u9762\u7684\u88c5\u9970\u5668\u5b8c\u4e8b\u4e86\u5728\u88c5 @add_xx def test1 (): print ( \"------test1------\" ) test1 () #\u7ed3\u679c \u7c7b\u4f3c\u4e8e\u4f7f\u7528\u6808,\u9760\u8fd1\u51fd\u6570\u7684\u5148\u8fdb\u6808,(\u88c5\u9970)\u6267\u884c\u7684\u65f6\u5019\u5148\u8fdb\u7684\u540e\u51fa,\u6216\u8005\u662f\u6267\u884c\u7684\u65f6\u5019\u662f\u6309\u7167\u987a\u5e8f\u6267\u884c\u4ee3\u7801\u7684 --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970 xxx\u7684\u529f\u80fd --- --- \u5f00\u59cb\u8fdb\u884c\u88c5\u9970\u6743\u9650 1 \u7684\u529f\u80fd --- --- \u8fd9\u662f\u6743\u9650\u9a8c\u8bc1 1 ---- --- \u8fd9\u662f xxx\u7684\u529f\u80fd ---- ------ test1 ------","title":"12-\u591a\u4e2a\u88c5\u9970\u5668\u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#13-py","text":"def set_func_1 ( func ): def call_func (): # \"<h1>haha</h1>\" return \"<h1>\" + func () + \"</h1>\" return call_func def set_func_2 ( func ): def call_func (): return \"<td>\" + func () + \"</td>\" return call_func @set_func_1 @set_func_2 def get_str (): return \"haha\" print ( get_str ()) \u6267\u884c < h1 >< td > haha </ td ></ h1 >","title":"13-\u5e94\u7528\uff1a\u591a\u4e2a\u88c5\u9970\u5668\u591a\u540c\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u88c5\u9970.py"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#5_1","text":"#decorator2.py from time import ctime , sleep def timefun_arg ( pre = \"hello\" ): def timefun ( func ): def wrapped_func (): print ( \" %s called at %s %s \" % ( func . __name__ , ctime (), pre )) return func () return wrapped_func return timefun # \u4e0b\u9762\u7684\u88c5\u9970\u8fc7\u7a0b # 1. \u8c03\u7528timefun_arg(\"itcast\") # 2. \u5c06\u6b65\u9aa41\u5f97\u5230\u7684\u8fd4\u56de\u503c\uff0c\u5373time_fun\u8fd4\u56de\uff0c \u7136\u540etime_fun(foo) # 3. \u5c06time_fun(foo)\u7684\u7ed3\u679c\u8fd4\u56de\uff0c\u5373wrapped_func # 4. \u8ba9foo = wrapped_fun\uff0c\u5373foo\u73b0\u5728\u6307\u5411wrapped_func @timefun_arg ( \"itcast\" ) def foo (): print ( \"I am foo\" ) @timefun_arg ( \"python\" ) def too (): print ( \"I am too\" ) foo () sleep ( 2 ) foo () too () sleep ( 2 ) too () \u53ef\u4ee5\u7406\u89e3\u4e3a foo () == timefun_arg ( \"itcast\" )( foo )()","title":"\u4f8b5:\u88c5\u9970\u5668\u5e26\u53c2\u6570,\u5728\u539f\u6709\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u7f6e\u5916\u90e8\u53d8\u91cf"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#6","text":"\u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u5199\u4e86 __call__() \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002 class Test (): def __call__ ( self ): print ( 'call me!' ) t = Test () t () # call me \u7c7b\u88c5\u9970\u5668demo class Test ( object ): def __init__ ( self , func ): print ( \"---\u521d\u59cb\u5316---\" ) print ( \"func name is %s \" % func . __name__ ) self . __func = func def __call__ ( self ): print ( \"---\u88c5\u9970\u5668\u4e2d\u7684\u529f\u80fd---\" ) self . __func () #\u8bf4\u660e\uff1a #1. \u5f53\u7528Test\u6765\u88c5\u4f5c\u88c5\u9970\u5668\u5bf9test\u51fd\u6570\u8fdb\u884c\u88c5\u9970\u7684\u65f6\u5019\uff0c\u9996\u5148\u4f1a\u521b\u5efaTest\u7684\u5b9e\u4f8b\u5bf9\u8c61 # \u5e76\u4e14\u4f1a\u628atest\u8fd9\u4e2a\u51fd\u6570\u540d\u5f53\u505a\u53c2\u6570\u4f20\u9012\u5230__init__\u65b9\u6cd5\u4e2d # \u5373\u5728__init__\u65b9\u6cd5\u4e2d\u7684\u5c5e\u6027__func\u6307\u5411\u4e86test\u6307\u5411\u7684\u51fd\u6570 # #2. test\u6307\u5411\u4e86\u7528Test\u521b\u5efa\u51fa\u6765\u7684\u5b9e\u4f8b\u5bf9\u8c61 # #3. \u5f53\u5728\u4f7f\u7528test()\u8fdb\u884c\u8c03\u7528\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u8ba9\u8fd9\u4e2a\u5bf9\u8c61()\uff0c\u56e0\u6b64\u4f1a\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684__call__\u65b9\u6cd5 # #4. \u4e3a\u4e86\u80fd\u591f\u5728__call__\u65b9\u6cd5\u4e2d\u8c03\u7528\u539f\u6765test\u6307\u5411\u7684\u51fd\u6570\u4f53\uff0c\u6240\u4ee5\u5728__init__\u65b9\u6cd5\u4e2d\u5c31\u9700\u8981\u4e00\u4e2a\u5b9e\u4f8b\u5c5e\u6027\u6765\u4fdd\u5b58\u8fd9\u4e2a\u51fd\u6570\u4f53\u7684\u5f15\u7528 # \u6240\u4ee5\u624d\u6709\u4e86self.__func = func\u8fd9\u53e5\u4ee3\u7801\uff0c\u4ece\u800c\u5728\u8c03\u7528__call__\u65b9\u6cd5\u4e2d\u80fd\u591f\u8c03\u7528\u5230test\u4e4b\u524d\u7684\u51fd\u6570\u4f53 @Test def test (): print ( \"----test---\" ) test () showpy () #\u5982\u679c\u628a\u8fd9\u53e5\u8bdd\u6ce8\u91ca\uff0c\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f9d\u7136\u4f1a\u770b\u5230\"--\u521d\u59cb\u5316--\" \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a --- \u521d\u59cb\u5316 --- func name is test --- \u88c5\u9970\u5668\u4e2d\u7684\u529f\u80fd --- ---- test ---","title":"\u4f8b6\uff1a\u7c7b\u88c5\u9970\u5668\uff08\u6269\u5c55\uff0c\u975e\u91cd\u70b9\uff09"},{"location":"python-web/007 19. \u95ed\u5305\u3001\u88c5\u9970\u5668/#14-py","text":"# def set_func_1(func): # def call_func(): # # \"<h1>haha</h1>\" # return \"<h1>\" + func() + \"</h1>\" # return call_func class Test ( object ): def __init__ ( self , func ): self . func = func def __call__ ( self ): print ( \"\u8fd9\u91cc\u662f\u88c5\u9970\u5668\u6dfb\u52a0\u7684\u529f\u80fd.....\" ) return self . func () @Test # \u76f8\u5f53\u4e8eget_str = Test(get_str) def get_str (): return \"haha\" print ( get_str ()) \u6267\u884c \u8fd9\u91cc\u662f\u88c5\u9970\u5668\u6dfb\u52a0\u7684\u529f\u80fd ..... haha","title":"14-\u4f7f\u7528\u7c7b\u5f53\u505a\u88c5\u9970\u5668.py"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/","text":"12.1. GIL \u00b6 GIL\uff08\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff09 \u00b6 GIL\u9762\u8bd5\u9898\u5982\u4e0b \u00b6 \u63cf\u8ff0Python GIL\u7684\u6982\u5ff5\uff0c \u4ee5\u53ca\u5b83\u5bf9python\u591a\u7ebf\u7a0b\u7684\u5f71\u54cd\uff1f\u7f16\u5199\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u7684\u7a0b\u5e8f\uff0c\u5e76\u9610\u660e\u591a\u7ebf\u7a0b\u6293\u53d6\u7a0b\u5e8f\u662f\u5426\u53ef\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u5e76\u89e3\u91ca\u539f\u56e0\u3002 Guido\u7684\u58f0\u660e\uff1a http://www.artima.com/forums/flat.jsp?forum=106&thread=214235 he language doesn't require the GIL -- it's only the CPython virtual machine that has historically been unable to shed it. \u53c2\u8003\u7b54\u6848: \u00b6 Python\u8bed\u8a00\u548cGIL\u6ca1\u6709\u534a\u6bdb\u94b1\u5173\u7cfb\u3002\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\u5728Cpython\u865a\u62df\u673a(\u89e3\u91ca\u5668)\uff0c\u96be\u4ee5\u79fb\u9664GIL\u3002 GIL\uff1a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u90fd\u9700\u8981\u5148\u83b7\u53d6GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\u3002 \u7ebf\u7a0b\u91ca\u653eGIL\u9501\u7684\u60c5\u51b5\uff1a \u5728IO\u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684system call\u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653eGIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6GIL Python 3.x\u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653eGIL\uff09\u6216Python 2.x\uff0ctickets\u8ba1\u6570\u8fbe\u5230100 Python\u4f7f\u7528\u591a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5229\u7528\u591a\u6838\u7684CPU\u8d44\u6e90\u7684\u3002 \u591a\u7ebf\u7a0b\u722c\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u56e0\u4e3a\u9047\u5230IO\u963b\u585e\u4f1a\u81ea\u52a8\u91ca\u653eGIL\u9501 12.2. \u6df1\u62f7\u8d1d\u3001\u6d45\u62f7\u8d1d \u00b6 \u6df1\u62f7\u8d1d\u3001\u6d45\u62f7\u8d1d \u00b6 1. \u6d45\u62f7\u8d1d \u00b6 \u6d45\u62f7\u8d1d\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u7684\u9876\u5c42\u62f7\u8d1d \u901a\u4fd7\u7684\u7406\u89e3\u662f\uff1a\u62f7\u8d1d\u4e86\u5f15\u7528\uff0c\u5e76\u6ca1\u6709\u62f7\u8d1d\u5185\u5bb9 2. \u6df1\u62f7\u8d1d \u00b6 \u6df1\u62f7\u8d1d\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u6240\u6709\u5c42\u6b21\u7684\u62f7\u8d1d(\u9012\u5f52) \u8fdb\u4e00\u6b65\u7406\u89e3\u6df1\u62f7\u8d1d \u00b6 3. \u62f7\u8d1d\u7684\u5176\u4ed6\u65b9\u5f0f \u00b6 \u5206\u7247\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8d4b\u503c\u4e00\u4e2a\u5e8f\u5217 \u5b57\u5178\u7684copy\u65b9\u6cd5\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u5b57\u5178 4. \u6ce8\u610f\u70b9 \u00b6 \u6d45\u62f7\u8d1d\u5bf9\u4e0d\u53ef\u53d8\u7c7b\u578b\u548c\u53ef\u53d8\u7c7b\u578b\u7684copy\u4e0d\u540c \u00b6 copy.copy\u5bf9\u4e8e\u53ef\u53d8\u7c7b\u578b\uff0c\u4f1a\u8fdb\u884c\u6d45\u62f7\u8d1d copy.copy\u5bf9\u4e8e\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u4e0d\u4f1a\u62f7\u8d1d\uff0c\u4ec5\u4ec5\u662f\u6307\u5411 In [88]: a = [11,22,33] In [89]: b = copy.copy(a) In [90]: id(a) Out[90]: 59275144 In [91]: id(b) Out[91]: 59525600 In [92]: a.append(44) In [93]: a Out[93]: [11, 22, 33, 44] In [94]: b Out[94]: [11, 22, 33] In [95]: a = (11,22,33) In [96]: b = copy.copy(a) In [97]: id(a) Out[97]: 58890680 In [98]: id(b) Out[98]: 58890680 copy.copy\u548ccopy.deepcopy\u7684\u533a\u522b \u00b6 copy.copy copy.deepcopy \u79c1\u6709\u5316 \u00b6 xx: \u516c\u6709\u53d8\u91cf _x: \u5355\u524d\u7f6e\u4e0b\u5212\u7ebf,\u79c1\u6709\u5316\u5c5e\u6027\u6216\u65b9\u6cd5\uff0cfrom somemodule import *\u7981\u6b62\u5bfc\u5165,\u7c7b\u5bf9\u8c61\u548c\u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee __xx\uff1a\u53cc\u524d\u7f6e\u4e0b\u5212\u7ebf,\u907f\u514d\u4e0e\u5b50\u7c7b\u4e2d\u7684\u5c5e\u6027\u547d\u540d\u51b2\u7a81\uff0c\u65e0\u6cd5\u5728\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee(\u540d\u5b57\u91cd\u6574\u6240\u4ee5\u8bbf\u95ee\u4e0d\u5230)(\u5b50\u7c7b\u4e0d\u80fd\u7ee7\u627f) xx :\u53cc\u524d\u540e\u4e0b\u5212\u7ebf,\u7528\u6237\u540d\u5b57\u7a7a\u95f4\u7684\u9b54\u6cd5\u5bf9\u8c61\u6216\u5c5e\u6027\u3002\u4f8b\u5982: __init__ , __ \u4e0d\u8981\u81ea\u5df1\u53d1\u660e\u8fd9\u6837\u7684\u540d\u5b57(\u5b50\u7c7b\u7ee7\u627f) xx_:\u5355\u540e\u7f6e\u4e0b\u5212\u7ebf,\u7528\u4e8e\u907f\u514d\u4e0ePython\u5173\u952e\u8bcd\u7684\u51b2\u7a81 \u901a\u8fc7name mangling\uff08\u540d\u5b57\u91cd\u6574(\u76ee\u7684\u5c31\u662f\u4ee5\u9632\u5b50\u7c7b\u610f\u5916\u91cd\u5199\u57fa\u7c7b\u7684\u65b9\u6cd5\u6216\u8005\u5c5e\u6027)\u5982\uff1a_Class__object\uff09\u673a\u5236\u5c31\u53ef\u4ee5\u8bbf\u95eeprivate\u4e86\u3002 #coding=utf-8 class Person ( object ): def __init__ ( self , name , age , taste ): self . name = name self . _age = age self . __taste = taste def showperson ( self ): print ( self . name ) print ( self . _age ) print ( self . __taste ) def dowork ( self ): self . _work () self . __away () def _work ( self ): print ( 'my _work' ) def __away ( self ): print ( 'my __away' ) class Student ( Person ): def construction ( self , name , age , taste ): self . name = name self . _age = age self . __taste = taste def showstudent ( self ): print ( self . name ) print ( self . _age ) print ( self . __taste ) @staticmethod def testbug (): _Bug . showbug () # \u6a21\u5757\u5185\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5f53from cur_module import *\u65f6\uff0c\u4e0d\u5bfc\u5165 class _Bug ( object ): @staticmethod def showbug (): print ( \"showbug\" ) s1 = Student ( 'jack' , 25 , 'football' ) s1 . showperson () print ( '*' * 20 ) # \u65e0\u6cd5\u8bbf\u95ee__taste,\u5bfc\u81f4\u62a5\u9519 # s1.showstudent() s1 . construction ( 'rose' , 30 , 'basketball' ) s1 . showperson () print ( '*' * 20 ) s1 . showstudent () print ( '*' * 20 ) Student . testbug () \u603b\u7ed3 \u00b6 \u7236\u7c7b\u4e2d\u5c5e\u6027\u540d\u4e3a __\u540d\u5b57 \u7684\uff0c\u5b50\u7c7b\u4e0d\u7ee7\u627f\uff0c\u5b50\u7c7b\u4e0d\u80fd\u8bbf\u95ee \u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5411 __\u540d\u5b57 \u8d4b\u503c\uff0c\u90a3\u4e48\u4f1a\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u4e0e\u7236\u7c7b\u76f8\u540c\u540d\u5b57\u7684\u5c5e\u6027 _\u540d \u7684\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u5728\u4f7f\u7528 from xxx import * \u65f6\u90fd\u4e0d\u4f1a\u88ab\u5bfc\u5165 import\u5bfc\u5165\u6a21\u5757 \u00b6 1. import \u641c\u7d22\u8def\u5f84 \u00b6 \u8def\u5f84\u641c\u7d22 \u00b6 \u4ece\u4e0a\u9762\u5217\u51fa\u7684\u76ee\u5f55\u91cc\u4f9d\u6b21\u67e5\u627e\u8981\u5bfc\u5165\u7684\u6a21\u5757\u6587\u4ef6 '' \u8868\u793a\u5f53\u524d\u8def\u5f84 \u5217\u8868\u4e2d\u7684\u8def\u5f84\u7684\u5148\u540e\u987a\u5e8f\u4ee3\u8868\u4e86python\u89e3\u91ca\u5668\u5728\u641c\u7d22\u6a21\u5757\u65f6\u7684\u5148\u540e\u987a\u5e8f \u7a0b\u5e8f\u6267\u884c\u65f6\u6dfb\u52a0\u65b0\u7684\u6a21\u5757\u8def\u5f84 \u00b6 sys . path . append ( '/home/itcast/xxx' ) sys . path . insert ( 0 , '/home/itcast/xxx' ) # \u53ef\u4ee5\u786e\u4fdd\u5148\u641c\u7d22\u8fd9\u4e2a\u8def\u5f84 In [ 37 ]: sys . path . insert ( 0 , \"/home/python/xxxx\" ) In [ 38 ]: sys . path Out [ 38 ]: [ '/home/python/xxxx' , '' , '/usr/bin' , '/usr/lib/python35.zip' , '/usr/lib/python3.5' , '/usr/lib/python3.5/plat-x86_64-linux-gnu' , '/usr/lib/python3.5/lib-dynload' , '/usr/local/lib/python3.5/dist-packages' , '/usr/lib/python3/dist-packages' , '/usr/lib/python3/dist-packages/IPython/extensions' , '/home/python/.ipython' ] 2. \u91cd\u65b0\u5bfc\u5165\u6a21\u5757 \u00b6 \u6a21\u5757\u88ab\u5bfc\u5165\u540e\uff0c import module \u4e0d\u80fd\u91cd\u65b0\u5bfc\u5165\u6a21\u5757\uff0c\u91cd\u65b0\u5bfc\u5165\u9700\u7528 reload 3. \u591a\u6a21\u5757\u5f00\u53d1\u65f6\u7684\u6ce8\u610f\u70b9 \u00b6 common.py\u6a21\u5757 RECV_DATA_LIST = list () # \u7528\u6765\u5b58\u50a8\u6570\u636e HANDLE_FLAG = False # \u7528\u6765\u6807\u8bb0\u662f\u5426\u5904\u7406\u5b8c\u6210 recv_msg.py\u6a21\u5757 from common import RECV_DATA_LIST # from common import HANDLE_FLAG import common def recv_msg(): \"\"\"\u6a21\u62df\u63a5\u6536\u5230\u6570\u636e\uff0c\u7136\u540e\u6dfb\u52a0\u5230common\u6a21\u5757\u4e2d\u7684\u5217\u8868\u4e2d\"\"\" print(\"--->recv_msg\") for i in range(5): RECV_DATA_LIST.append(i) def test_recv_data(): \"\"\"\u6d4b\u8bd5\u63a5\u6536\u5230\u7684\u6570\u636e\"\"\" print(\"--->test_recv_data\") print(RECV_DATA_LIST) def recv_msg_next(): \"\"\"\u5df2\u7ecf\u5904\u7406\u5b8c\u6210\u540e\uff0c\u518d\u63a5\u6536\u53e6\u5916\u7684\u5176\u4ed6\u6570\u636e\"\"\" print(\"--->recv_msg_next\") # if HANDLE_FLAG: if common.HANDLE_FLAG: print(\"------\u53d1\u73b0\u4e4b\u524d\u7684\u6570\u636e\u5df2\u7ecf\u5904\u7406\u5b8c\u6210\uff0c\u8fd9\u91cc\u8fdb\u884c\u63a5\u6536\u5176\u4ed6\u7684\u6570\u636e(\u6a21\u62df\u8fc7\u7a0b...)----\") else: print(\"------\u53d1\u73b0\u4e4b\u524d\u7684\u6570\u636e\u672a\u5904\u7406\u5b8c\uff0c\u7b49\u5f85\u4e2d....------\") handle_msg.py\u6a21\u5757 from common import RECV_DATA_LIST # from common import HANDLE_FLAG import common def handle_data (): \"\"\"\u6a21\u62df\u5904\u7406recv_msg\u6a21\u5757\u63a5\u6536\u7684\u6570\u636e\"\"\" print ( \"--->handle_data\" ) for i in RECV_DATA_LIST : print ( i ) # \u65e2\u7136\u5904\u7406\u5b8c\u6210\u4e86\uff0c\u90a3\u4e48\u5c06\u53d8\u91cfHANDLE_FLAG\u8bbe\u7f6e\u4e3aTrue\uff0c\u610f\u5473\u7740\u5904\u7406\u5b8c\u6210 # global HANDLE_FLAG # HANDLE_FLAG = True common . HANDLE_FLAG = True def test_handle_data (): \"\"\"\u6d4b\u8bd5\u5904\u7406\u662f\u5426\u5b8c\u6210\uff0c\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u4e3aTrue\"\"\" print ( \"--->test_handle_data\" ) # if HANDLE_FLAG: if common . HANDLE_FLAG : print ( \"=====\u5df2\u7ecf\u5904\u7406\u5b8c\u6210====\" ) else : print ( \"=====\u672a\u5904\u7406\u5b8c\u6210====\" ) main.py\u6a21\u5757 from recv_msg import * from handle_msg import * def main (): # 1. \u63a5\u6536\u6570\u636e recv_msg () # 2. \u6d4b\u8bd5\u662f\u5426\u63a5\u6536\u5b8c\u6bd5 test_recv_data () # 3. \u5224\u65ad\u5982\u679c\u5904\u7406\u5b8c\u6210\uff0c\u5219\u63a5\u6536\u5176\u5b83\u6570\u636e recv_msg_next () # 4. \u5904\u7406\u6570\u636e handle_data () # 5. \u6d4b\u8bd5\u662f\u5426\u5904\u7406\u5b8c\u6bd5 test_handle_data () # 6. \u5224\u65ad\u5982\u679c\u5904\u7406\u5b8c\u6210\uff0c\u5219\u63a5\u6536\u5176\u5b83\u6570\u636e recv_msg_next () if __name__ == \"__main__\" : main () \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u6570\u636e\u7684\u65f6\u5019\u8981\u4f7f\u7528 \u5305\u540d.\u53d8\u91cf (\u7c7b\u4f3c\u4e8e\u53d8\u91cf\u4e0e\u5f15\u7528\u53d8\u91cf\u7684\u533a\u522b,\u76f4\u63a5\u4ece\u53e6\u4e00\u4e2a\u95ee\u4ef7\u4e2d\u5bfc\u5165\u53d8\u91cf,\u5728\u65b0\u7684\u6587\u4ef6\u4e2d\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u6539\u53d8\u7c7b\u4f3c\u4e8e\u5c40\u90e8\u53d8\u91cf\u4e0d\u4f1a\u5f71\u54cd\u539f\u6765\u6587\u4ef6\u53d8\u91cf\u7684\u503c\u5373\u4f7f\u52a0\u4e0aglobal\u4e5f\u4e0d\u884c,\u5217\u8868\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u7684\u6dfb\u52a0\u4f46\u662f\u4e0d\u80fd\u8d4b\u503c,\u6240\u4ee5\u4ee5\u540e\u7528\u7684\u65f6\u5019\u591a\u4e2a\u6587\u4ef6\u5bfc\u5165\u5171\u4eab\u5c31\u76f4\u63a5\u4f7f\u7528\u5305\u540d.\u53d8\u91cf\u540d) \u518d\u8bae \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u00b6 \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u662f\u9762\u5411\u5bf9\u8c61\u76843\u5927\u7279\u6027 \u4e3a\u5565\u8981\u5c01\u88c5 \u00b6 \u597d\u5904 \u00b6 \u5728\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u65f6\uff0c\u5f53\u9700\u8981\u5bf9\u6570\u636e\u5904\u7406\u65f6\uff0c\u9700\u8981\u8003\u8651\u7528\u54ea\u4e2a\u6a21\u677f\u4e2d\u54ea\u4e2a\u51fd\u6570\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662f\u5f53\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5c06\u6570\u636e\u5b58\u50a8\u5230\u4e86\u8fd9\u4e2a\u72ec\u7acb\u7684\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u4e2a\u72ec\u7acb\u7684\u7a7a\u95f4\uff08\u5373\u5bf9\u8c61\uff09\u4e2d\u901a\u8fc7\u4e00\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\uff08 class \uff09\u80fd\u591f\u83b7\u53d6\u5230\u7c7b\uff08\u6a21\u677f\uff09\uff0c\u800c\u4e14\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u662f\u6709\u4e00\u5b9a\u6570\u91cf\u7684\uff0c\u4e0e\u6b64\u7c7b\u65e0\u5173\u7684\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u672c\u7c7b\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u6570\u636e\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u5f88\u5feb\u901f\u7684\u5b9a\u4f4d\u5230\u9700\u8981\u7684\u65b9\u6cd5\u662f\u8c01 \u8fd9\u6837\u66f4\u65b9\u4fbf \u5168\u5c40\u53d8\u91cf\u662f\u53ea\u80fd\u67091\u4efd\u7684\uff0c\u591a\u5f88\u591a\u4e2a\u51fd\u6570\u9700\u8981\u591a\u4e2a\u5907\u4efd\u65f6\uff0c\u5f80\u5f80\u9700\u8981\u5229\u7528\u5176\u5b83\u7684\u53d8\u91cf\u6765\u8fdb\u884c\u50a8\u5b58\uff1b\u800c\u901a\u8fc7\u5c01\u88c5 \u4f1a\u5c06\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u8fd9\u4e2a\u53d8\u91cf \u53d8\u4e3a\u4e86\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u201c\u5168\u5c40\u201d\u53d8\u91cf\uff0c\u53ea\u8981\u5bf9\u8c61\u4e0d\u4e00\u6837\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u5c31\u53ef\u4ee5\u518d\u67091\u4efd\uff0c\u6240\u4ee5\u8fd9\u6837\u66f4\u65b9\u4fbf \u4ee3\u7801\u5212\u5206\u66f4\u6e05\u6670 \u9762\u5411\u8fc7\u7a0b \u5168\u5c40\u53d8\u91cf 1 \u5168\u5c40\u53d8\u91cf 2 \u5168\u5c40\u53d8\u91cf 3 ... def \u51fd\u6570 1 (): pass def \u51fd\u6570 2 (): pass def \u51fd\u6570 3 (): pass def \u51fd\u6570 4 (): pass def \u51fd\u6570 5 (): pass \u9762\u5411\u5bf9\u8c61 class \u7c7b( object ): \u5c5e\u6027 1 \u5c5e\u6027 2 def \u65b9\u6cd5 1 ( self ): pass def \u65b9\u6cd5 2 ( self ): pass class \u7c7b2( object ): \u5c5e\u6027 3 def \u65b9\u6cd5 3 ( self ): pass def \u65b9\u6cd5 4 ( self ): pass def \u65b9\u6cd5 5 ( self ): pass \u4e3a\u5565\u8981\u7ee7\u627f \u00b6 \u8bf4\u660e \u00b6 \u80fd\u591f\u63d0\u5347\u4ee3\u7801\u7684\u91cd\u7528\u7387\uff0c\u5373\u5f00\u53d1\u4e00\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u5b50\u529f\u80fd\u4e2d\u76f4\u63a5\u4f7f\u7528 \u7ee7\u627f\u80fd\u591f\u6709\u6548\u7684\u8fdb\u884c\u4ee3\u7801\u7684\u7ba1\u7406\uff0c\u5f53\u67d0\u4e2a\u7c7b\u6709\u95ee\u9898\u53ea\u8981\u4fee\u6539\u8fd9\u4e2a\u7c7b\u5c31\u884c\uff0c\u800c\u5176\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u7684\u5b50\u7c7b\u5f80\u5f80\u4e0d\u9700\u8981\u5c31\u4fee\u6539 \u600e\u6837\u7406\u89e3\u591a\u6001 \u00b6 class MiniOS ( object ): \"\"\"MiniOS \u64cd\u4f5c\u7cfb\u7edf\u7c7b \"\"\" def __init__ ( self , name ): self . name = name self . apps = [] # \u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u540d\u79f0\u5217\u8868 def __str__ ( self ): return \" %s \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a %s \" % ( self . name , str ( self . apps )) def install_app ( self , app ): # \u5224\u65ad\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u4e86\u8f6f\u4ef6 if app . name in self . apps : print ( \"\u5df2\u7ecf\u5b89\u88c5\u4e86 %s \uff0c\u65e0\u9700\u518d\u6b21\u5b89\u88c5\" % app . name ) else : app . install () self . apps . append ( app . name ) class App ( object ): def __init__ ( self , name , version , desc ): self . name = name self . version = version self . desc = desc def __str__ ( self ): return \" %s \u7684\u5f53\u524d\u7248\u672c\u662f %s - %s \" % ( self . name , self . version , self . desc ) def install ( self ): print ( \"\u5c06 %s [ %s ] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55...\" % ( self . name , self . version )) class PyCharm ( App ): pass class Chrome ( App ): def install ( self ): print ( \"\u6b63\u5728\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f...\" ) super () . install () linux = MiniOS ( \"Linux\" ) print ( linux ) pycharm = PyCharm ( \"PyCharm\" , \"1.0\" , \"python \u5f00\u53d1\u7684 IDE \u73af\u5883\" ) chrome = Chrome ( \"Chrome\" , \"2.0\" , \"\u8c37\u6b4c\u6d4f\u89c8\u5668\" ) linux . install_app ( pycharm ) linux . install_app ( chrome ) linux . install_app ( chrome ) print ( linux ) \u8fd0\u884c\u7ed3\u679c Linux \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a [] \u5c06 PyCharm [1.0] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55... \u6b63\u5728\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f... \u5c06 Chrome [2.0] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55... \u5df2\u7ecf\u5b89\u88c5\u4e86 Chrome\uff0c\u65e0\u9700\u518d\u6b21\u5b89\u88c5 Linux \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a ['PyCharm', 'Chrome'] \u66f4\u52a0\u8d85\u8be6\u7ec6\u7684\u89e3\u91caPython\u7684\u5c01\u88c5,\u7ee7\u627f,\u591a\u6001 \u00b6 ''' \u7ee7\u627f\uff1a \u4e00\u79cd\u521b\u9020\u65b0\u7c7b\u7684\u65b9\u6cd5\uff0c\u65b0\u5efa\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027 \u7236\u7c7b\u53c8\u53ef\u4ee5\u79f0\u4e3a \u57fa\u7c7b\u6216\u8d85\u7c7b\uff1b\u5b50\u7c7b\u53c8\u79f0\u4e3a\u6d3e\u751f\u7c7b \u7ee7\u627f\u7684\u76ee\u7684\uff1a \u4e3a\u4e86\u51cf\u5c11\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u4ee3\u7801\u5197\u4f59 python\u4e2d\u7ee7\u627f\u7684\u7279\u70b9\uff1a 1.\u53ef\u4ee5\u9057\u4f20\u3001\u91cd\u7528\u7236\u7c7b\u7684\u5c5e\u6027 2.\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b 3.\u7ee7\u627f\u80cc\u666f\u4e0b\uff0cpython\u4e2d\u7684\u7c7b\u5206\u4e3a\u4e24\u79cd\uff1a\u65b0\u5f0f\u7c7b\u3001\u7ecf\u5178\u7c7b \u65b0\u5f0f\u7c7b\uff1a\u4f46\u51e1\u7ee7\u627f\u4e86object\u7684\u7c7b\uff0c\u4ee5\u53ca\u8be5\u7c7b\u7684\u5b50\u7c7b\u3001\u5b50\u5b50\u7c7b \u5728python3\u4e2d\u4e00\u4e2a\u7c7b\u5373\u4fbf\u662f\u6ca1\u6709\u663e\u5f0f\u7684\u7ee7\u627f\u4efb\u4f55\u7c7b\uff0c\u5219\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b\u3002 \u5373\uff0cpython3\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u662f\u65b0\u5f0f\u7c7b \u7ecf\u5178\u7c7b\uff1a\u6ca1\u6709\u7ee7\u627fobject \u5728python2\u4e2d\u53d6\u5206\u65b0\u5f0f\u3001\u7ecf\u5178\u7c7b ''' class Parent1 : pass # \u5728python3\u4e2d\u5199\u5165object\u7ee7\u627f\uff0c\u4e3a\u4e86\u80fd\u5728Python2\u4e2d\u517c\u5bb9 class Parent2 ( object ): pass class Sub1 ( Parent1 ): pass class Sub2 ( Parent1 , Parent2 ): pass # \u67e5\u770b\u7c7b\u7684\u7236\u7c7b(\u57fa\u7c7b)\uff0c\u8bbf\u95ee\u5c5e\u6027__bases__ print ( Parent1 . __bases__ ) print ( Parent2 . __bases__ ) # \u9ed8\u8ba4\u7ee7\u627f object\u7c7b print ( Sub1 . __bases__ ) print ( Sub2 . __bases__ ) # \u5224\u65ad\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u5b50\u7c7b\uff0c\u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 issubclass() print ( issubclass ( Sub1 , Parent1 )) # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u662f\u7279\u5b9a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528\u65b9\u6cd5isinstance() s = Sub1 () # \u5bf9\u8c61\u662f\u6240\u5c5e\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , Sub1 )) # \u5bf9\u8c61\u662f\u6240\u5c5e\u7c7b\u7684\u7236\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , Parent1 )) # \u5bf9\u8c61\u662fobject\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , object )) # \u83b7\u6089\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\uff0c\u4f7f\u7528\u5c5e\u6027__class__ print ( s . __class__ ) ''' \u5b50\u7c7b\u5982\u4f55\u91cd\u7528\u7236\u7c7b\uff1f \u65b9\u5f0f\u4e00\u3001\u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u67d0\u4e00\u4e2a\u7c7b\u4e2d\u7684\u51fd\u6570 \uff081\u3001\u4e0e\u7ee7\u627f\u65e0\u5173 2\u3001\u4e14\u8bbf\u95ee\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 \u65b9\u5f0f\u4e8c\u3001\u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 super() \u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7528\u6765\u4e13\u95e8\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u5c5e\u6027 **\u5b8c\u5168\u53c2\u7167mro\u5217\u8868** python2\u4e2d\uff1a\u7c7b\u4e2d\u4f7f\u7528super(\u5f53\u524d\u7c7b\u540d\uff0cself) python3\u4e2d\uff1asuper() \uff081\u3001\u4e25\u683c\u4f9d\u8d56mro\u5217\u8868 2\u3001\u8bbf\u95ee\u7684\u662f\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 \u5728\u7ee7\u627f\u80cc\u666f\u4e0b,\u5c5e\u6027\u7684\u67e5\u627e\u4f18\u5148\u7ea7\uff1a 1.\u5355\u7ee7\u627f\u80cc\u666f\uff1a \u5bf9\u8c61\u5185\u90e8 --\u300b \u5bf9\u8c61\u7684\u7c7b --\u300b \u7236\u7c7b --\u300b \u7236\u7236\u7c7b \u2026\u2026 --\u300bobject 2.\u591a\u7ee7\u627f\u80cc\u666f\uff1a 1\uff09\u82e5\u4e00\u4e2a\u5b50\u7c7b\u7ee7\u627f\u591a\u4e2a\u5206\u652f\uff0c\u975e\u83f1\u5f62\u7ed3\u6784\uff08\u591a\u4e2a\u5206\u652f\u6ca1\u6709\u5171\u540c\u7ee7\u627f\u7ecf\u5178\u7c7b\u3001\u65b0\u5f0f\u7c7b\uff08\u975eobject\u7684\u7c7b\uff09\uff09 \u5bf9\u8c61\u5185\u90e8 --\u300b \u5bf9\u8c61\u7684\u7c7b --\u300b\u7236\u7c7b\uff08\u4ece\u5de6\u5f80\u53f3\uff0c\u5404\u5206\u652f\u67e5\u627e\uff09 --\u300b object 2\uff09\u83f1\u5f62\u7ee7\u627f\u95ee\u9898 -1 py3\uff0cpy2 \u591a\u7236\u7c7b\u6700\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u7c7b\uff0c\u6b64\u7c7b\u4e3a\u65b0\u5f0f\u7c7b\uff1a \u5e7f\u5ea6\u4f18\u5148\u67e5\u627e\uff1a\u5404\u7236\u7c7b\u5206\u652f\u67e5\u627e\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u7236\u7c7b\u67e5\u627e\u5b8c\u6bd5\uff0c\u518d\u53bb\u9876\u7ea7\u7c7b\u67e5\u627e -2 py2 \u591a\u7236\u7c7b\u6700\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u7c7b\uff0c\u6b64\u7c7b\u4e3a\u7ecf\u5178\u7c7b\uff1a \u6df1\u5ea6\u4f18\u5148\u67e5\u627e\uff1a\u5728\u7b2c\u4e00\u4e2a\u7236\u7c7b\u5206\u652f\u67e5\u627e\uff0c\u7b2c\u4e00\u6b21\u5c31\u53bb\u627e\u9876\u7ea7\u7c7b\u67e5\u627e python\u67e5\u627e\u539f\u7406\uff1a \u4f7f\u7528C3\u7ebf\u6027\u7b97\u6cd5\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\uff08MRO\uff09\uff0c\u6b64\u5217\u8868\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6240\u6709\u79ef\u7d2f\u7684\u7ebf\u6027\u987a\u5e8f\u5217\u8868\u3002 \u5982\uff1a>>> f.mro() [<class '__main__.F'>, <class '__main__.D'>, <class '__main__.B'>, <class '__main__.E'>, <class '__main__.C'>, <class '__main__.A'>, <class 'object'>] \u6240\u6709\u7236\u7c7b\u7684MRO\u5217\u8868\u5e76\u9075\u5faa\u5982\u4e0b\u4e09\u6761\u51c6\u5219: 1.\u5b50\u7c7b\u4f1a\u5148\u4e8e\u7236\u7c7b\u88ab\u68c0\u67e5 2.\u591a\u4e2a\u7236\u7c7b\u4f1a\u6839\u636e\u5b83\u4eec\u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u88ab\u68c0\u67e5 3.\u5982\u679c\u5bf9\u4e0b\u4e00\u4e2a\u7c7b\u5b58\u5728\u4e24\u4e2a\u5408\u6cd5\u7684\u9009\u62e9,\u9009\u62e9\u7b2c\u4e00\u4e2a\u7236\u7c7b ''' # \u5229\u7528\u7ee7\u627f\u89e3\u51b3\u4ee3\u7801\u5197\u4f59 class CollegePeople : school = 'college' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex class Stu ( CollegePeople ): def __init__ ( self , name , age , sex , score ): # \u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u7236\u7c7b\u4e2d\u7684\u51fd\u6570 CollegePeople . __init__ ( self , name , age , sex ) self . score = score def choose_course ( self , y ): print ( ' %s choose course' % self . name , y ) class Teacher ( CollegePeople ): def __init__ ( self , name , age , sex , level ): # CollegePeople.__init__(self, name, age, sex) # \u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 super()\u91cd\u7528\u7236\u7c7b super () . __init__ ( name , age , sex ) self . level = level def score ( self , stu , num ): stu . score = num s1 = Stu ( 'name' , 18 , 'male' , 99 ) print ( s1 . __dict__ ) t1 = Teacher ( 'teacher' , 28 , 'female' , 10 ) print ( t1 . __dict__ ) \u65b9\u5f0f\u4e00\u3001\u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u67d0\u4e00\u4e2a\u7c7b\u4e2d\u7684\u51fd\u6570 \uff08 1 \u3001\u4e0e\u7ee7\u627f\u65e0\u5173 2 \u3001\u4e14\u8bbf\u95ee\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 class A : def __init__ ( self , a ): self . a = a class B : def __init__ ( self , b ): self . b = b class C ( A ): def __init__ ( self , a , b , c ): A . __init__ ( self , a ) B . __init__ ( self , b ) self . c = c c1 = C ( 'a' , 'b' , 'c' ) print ( c1 . __dict__ ) # ------------------------------- # \u5355\u7ee7\u627f\u4e0b\u7684\u67e5\u627e\u987a\u5e8f class Pra : def f1 ( self ): print ( 'P --> f1' ) def f2 ( self ): print ( 'P ----> f2' ) self . f1 () class Fo ( Pra ): def f1 ( self ): print ( 'F ---> f1' ) a = Fo () a . f2 () # ----------------------------------------------- ''' \u7ec4\u5408\uff1a\u67d0\u4e00\u4e2a\u5bf9\u8c61\uff0c\u62e5\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u5176\u503c\u6765\u81ea\u4e8e\u53e6\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61 class Foo: xxx = 222 class Bar: yyy = 111 obj = Foo() b = Bar\uff08\uff09 obj.attr = Bar() obj.a = b obj.xxxx #\u8c03\u7528Foo\u5185\u5c5e\u6027 obj.attr.yyyy #\u8c03\u7528Bar\u5185\u5c5e\u6027 \u4f7f\u7528\u7ec4\u5408\u7684\u76ee\u7684\uff1a \u901a\u8fc7\u4e3a\u67d0\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\u7684\u65b9\u5f0f\uff0c\u95f4\u63a5\u5c06\u4e24\u4e2a\u7c7b\u8fdb\u884c\u5173\u8054\uff0c\u51cf\u5c11\u7c7b\u4e0e\u7c7b\u4ee3\u7801\u5197\u4f59 ''' # \u4f7f\u7528\u7ec4\u5408\u51cf\u5c11\u4ee3\u7801\u5197\u4f59 class CollegePeople (): school = 'college' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex class CollegeStudent ( CollegePeople ): def __init__ ( self , name , age , sex , score = 0 ): super () . __init__ ( name , age , sex ) self . score = score self . courses = [] def tell_all_course ( self ): print (( '\u5b66\u751f[ %s ]\u9009\u4fee\u7684\u8bfe\u7a0b\u5982\u4e0b' % self . name ) . center ( 50 , '=' )) for obj in self . courses : obj . tell_course () print ( '=' * 60 ) class CollegeTeacher ( CollegePeople ): def __init__ ( self , name , age , sex , level ): super () . __init__ ( name , age , sex ) self . level = level self . courses = [] def tell_all_course ( self ): print (( '\u8001\u5e08[ %s ]\u6559\u6388\u7684\u8bfe\u7a0b\u5982\u4e0b' % self . name ) . center ( 50 , '*' )) for obj in self . courses : obj . tell_course () print ( '*' * 70 ) # \u521b\u5efa\u8bfe\u7a0b class CollegeCourse : def __init__ ( self , c_name , c_price , c_period ): self . c_name = c_name self . c_price = c_price self . c_period = c_period def tell_course ( self ): print ( 'course:' + self . c_name , self . c_price , self . c_period ) python = CollegeCourse ( 'python\u5168\u6808\u5f00\u53d1' , 1900 , '5mons' ) linux = CollegeCourse ( 'linux\u67b6\u6784\u5e08' , 900 , '3mons' ) # \u5b66\u751f\u6dfb\u52a0\u8bfe\u7a0b stu1 = CollegeStudent ( 'STU1' , 38 , 'male' ) stu1 . courses . append ( python ) stu1 . courses . append ( linux ) stu1 . tell_all_course () # \u6559\u5e08\u6dfb\u52a0\u8bfe\u7a0b tea1 = CollegeTeacher ( 'TEA1' , 18 , 'male' , 10 ) tea1 . courses . append ( linux ) tea1 . tell_all_course () # ------------------------------------------- ''' \u591a\u6001\uff1a\u4e00\u7c7b\u4e8b\u7269\u5b58\u5728\u591a\u79cd\u5f62\u6001 ### Python\u4e2d\u591a\u6001\u7684`\u4f5c\u7528` **\u8ba9\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u5185\u5bb9(\u529f\u80fd)\u7684\u51fd\u6570\u3002** ### Python\u4e2d\u591a\u6001\u7684`\u7279\u70b9` 1\u3001\u53ea\u5173\u5fc3\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u662f\u5426\u540c\u540d\uff0c\u4e0d\u5173\u5fc3\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u578b\uff1b 2\u3001\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u4e4b\u95f4\uff0c\u7ee7\u627f\u5173\u7cfb\u53ef\u6709\u53ef\u65e0\uff1b 3\u3001\u591a\u6001\u7684\u597d\u5904\u53ef\u4ee5\u589e\u52a0\u4ee3\u7801\u7684\u5916\u90e8\u8c03\u7528\u7075\u6d3b\u5ea6\uff0c\u8ba9\u4ee3\u7801\u66f4\u52a0\u901a\u7528\uff0c\u517c\u5bb9\u6027\u6bd4\u8f83\u5f3a\uff1b 4\u3001\u591a\u6001\u662f\u8c03\u7528\u65b9\u6cd5\u7684\u6280\u5de7\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u7c7b\u7684\u5185\u90e8\u8bbe\u8ba1\u3002 \u4f8b\uff1a\u52a8\u7269\u5b58\u5728\u591a\u79cd\u5f62\u6001<\u4eba\uff0c\u72d7\uff0c\u732b> \u591a\u6001\u6027\uff1a\u5728\u591a\u6001\u7684\u80cc\u666f\u4e0b\uff08\u7edf\u4e00\uff09\uff0c\u4e0d\u8003\u8651\u5b9e\u4f8b\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5b9e\u4f8b \u5373\u4e0d\u540c\u7684\u5b9e\u4f8b\uff0c\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e0d\u540c\u7684\u7ed3\u679c \u4f8b\uff1a\u4e0d\u540c\u79cd\u7c7b\u7684\u52a8\u7269\uff0c\u90fd\u53ef\u4ee5\u8c03\u7528\u5403\u559d\u62c9\u6492\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7ed3\u679c\u4e0d\u540c\u3002 \u591a\u6001\u6027\u5206\u4e3a\u9759\u6001\u591a\u6001\u6027\u548c\u52a8\u6001\u591a\u6001\u6027 \u62bd\u8c61\u7c7b\uff1a\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002 \u82e5\u7c7b\u662f\u4e00\u5806\u5bf9\u8c61\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\uff0c\u62bd\u8c61\u7c7b\u5219\u662f\u4ece\u4e00\u5806\u7c7b\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\uff0c\u5185\u5bb9\u5305\u62ec\u4e86\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\uff1a\u62bd\u8c61\u7c7b\u7684\u672c\u8d28\u8fd8\u662f\u7d2f\uff0c\u6307\u7684\u662f\u4e00\u7ec4\u7c7b\u7684\u76f8\u4f3c\u6027\uff0c\u5305\u62ec\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u800c\u63a5\u53e3\u53ea\u5f3a\u8c03\u51fd\u6570\u5c5e\u6027\u7684\u76f8\u4f3c\u6027\u3002 abc\u6a21\u5757\uff1a\u4f7f\u5b50\u7c7b\u5f3a\u5236\u9075\u5faa\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u5373\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 \u6ce8\uff1a\u7236\u7c7b\u53ea\u80fd\u7528\u6765\u5efa\u7acb\u89c4\u8303\uff0c\u4e0d\u80fd\u7528\u6765\u5b9e\u4f8b\u5316\uff0c\u65e0\u9700\u5b9e\u73b0\u5185\u90e8\u65b9\u6cd5 \u4f8b\uff1a class Animal(metaclass = abc.ABCMeta): @abc.abstractmethod def speak(self): pass \u9e2d\u5b50\u7c7b\u578b\uff1a\u5982\u679c\u770b\u8d77\u6765\u50cf\u3001\u53eb\u58f0\u50cf\u800c\u4e14\u8d70\u8d77\u8def\u6765\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u9e2d\u5b50 python\u7a0b\u5e8f\u5458\u901a\u5e38\u6839\u636e\u8fd9\u79cd\u884c\u4e3a\u6765\u7f16\u5199\u7a0b\u5e8f\u3002 \u4f8b\u5982\uff0clinux\u5bf9\u786c\u76d8\u7684\u64cd\u4f5c\u770b\u8d77\u6765\u50cf\u6587\u4ef6\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u7528\u64cd\u4f5c\u6587\u4ef6\u7684\u65b9\u6cd5\u64cd\u4f5c\u786c\u76d8 ''' ''' \u5c01\u88c5\uff1a\u660e\u786e\u7684\u53d6\u5206\u5185\u5916\uff0c\u5c01\u88c5\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u5728\u5185\u90e8\u8c03\u7528\uff0c\u800c\u4e0d\u80fd\u88ab\u5916\u754c\u4f7f\u7528\u3002 \u9690\u85cf\u65b9\u5f0f\uff1a\u5b9a\u4e49\u7684\u5c5e\u6027\u4ee5__\u5f00\u5934\u3002\u4f8b\uff1a__name \u6ce8\u610f\uff1a__xxx__\u4e3a\u5185\u7f6e\u5c5e\u6027\u800c\u4e0d\u662f\u5f71\u85cf \u9690\u85cf\u5b58\u50a8\u7684__dict__\u603b\u7ed3\uff1a 1.__\u5f00\u5934\u7684\u5c5e\u6027\uff0c\u5b9e\u73b0\u7684\u9690\u85cf\u4ec5\u4ec5\u53ea\u662f\u4e00\u79cd\u8bed\u6cd5\u610f\u4e49\u4e0a\u7684\u53d8\u5f62\uff0c\u5e76\u4e0d\u4f1a\u771f\u6b63\u9650\u5236\u7c7b\u5916\u90e8\u7684\u8bbf\u95ee 2.\u6539\u53d8\u5f62\u64cd\u4f5c\u53ea\u5728\u7c7b\u5b9a\u4e49\u9636\u6bb5\u68c0\u6d4b\u8bed\u6cd5\u65f6\u53d1\u751f\u4e00\u6b21\uff0c\u7c7b\u5b9a\u4e49\u9636\u6bb5\u7ed3\u675f\u540e\uff08\u5bf9\u8c61\u3001\u7c7b\u7684\u6dfb\u52a0\u4fee\u6539\u7b49\u64cd\u4f5c\uff09\u5b9a\u4e49\u7684\u5c5e\u6027\u4e0d\u4f1a\u53d8\u5f62 3.\u5c5e\u6027\u6dfb\u52a0__\u5f00\u5934\u53ef\u4ee5\u9632\u6b62\u5b50\u7c7b\u8986\u76d6\u7236\u7c7b\u7684\u65b9\u6cd5\u3002\u4e14\u7236\u7c7b\u5185\u53ea\u4f1a\u67e5\u627e\u5230\u81ea\u8eab\u7684\u9690\u85cf\u5c5e\u6027 \u5c01\u88c5\u6570\u636e\u5c5e\u6027\u76ee\u7684\uff1a\u5c06\u6570\u636e\u5c5e\u6027\u9690\u85cf\uff0c\u7c7b\u5916\u90e8\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u5c5e\u6027\uff0c\u901a\u8fc7\u7c7b\u5185\u90e8\u63a5\u53e3\u95f4\u63a5\u64cd\u4f5c \u63a5\u53e3\u5b9e\u73b0\u5404\u79cd\u903b\u8f91\uff0c\u63a7\u5236\u5916\u90e8\u4f7f\u7528\u63a5\u53e3\u5bf9\u5c5e\u6027\u7684\u64cd\u4f5c \u5c01\u88c5\u65b9\u6cd5\u7684\u76ee\u7684\uff1a\u9694\u79bb\u590d\u6742\u5ea6 ''' class Foo : __x = 111 # _Foo__x __y = 222 # _Foo__y def __init__ ( self , name , age ): self . __name = name self . __age = age def __func ( self ): # _Foo__func pass def get_info ( self ): print ( self . __name , self . __age , self . __x ) # print(self._Foo__name,self._Foo__age,self._Foo__x) # \u5916\u754c\u65e0\u6cd5\u8c03\u7528\u9690\u85cf\u5c5e\u6027 print ( Foo . __x ) print ( Foo . __func ) # \u67e5\u770b\u7c7b\u540d\u79f0\u7a7a\u95f4\uff0c\u53d1\u73b0\u5c5e\u6027\u540d\u79f0\u5728\u5b9a\u4e49\u68c0\u6d4b\u9636\u6bb5\u4fee\u6539 print ( Foo . __dict__ ) # \u4ecd\u7136\u53ef\u4ee5\u8c03\u7528\u4fee\u6539\u540e\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 print ( Foo . _Foo__x ) print ( Foo . _Foo__y ) # \u5728\u7c7b\u5b9a\u4e49\u68c0\u6d4b\u9636\u6bb5\u4e4b\u540e\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u4e0d\u88ab\u4fee\u6539\u5c31\u653e\u5165\u7a7a\u95f4 Foo . __z = 333 print ( Foo . __dict__ ) print ( Foo . __z ) # \u5bf9\u8c61\u4e2d\u4e5f\u4f1a\u4fee\u6539\u5bf9\u5e94\u7684\u9690\u85cf\u5c5e\u6027 obj = Foo ( '123' , 18 ) print ( obj . __dict__ ) print ( obj . __name ) print ( obj . __age ) obj . get_info () # \u5bf9\u8c61\u521b\u5efa\u4e4b\u540e\uff0c\u65b0\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u4e0d\u4f1a\u88ab\u4fee\u6539 obj . __sex = 'male' print ( obj . __dict__ ) print ( obj . __sex ) # ------------------------------------------- # \u5c01\u88c5\u6570\u636e\u5c5e\u6027\u7684\u76ee\u7684\uff1a # \u901a\u8fc7\u63a5\u53e3\uff0c\u5b9e\u73b0\u63a7\u5236\u518d\u95f4\u63a5\u4fee\u6539\u79c1\u6709\u7c7b\u578b class People : def __init__ ( self , name , age ): self . __name = name self . __age = age def get_info ( self ): print ( self . __name , self . __age ) def set_info ( self , name , age ): if type ( name ) is not str : print ( 'name type error!' ) return if type ( age ) is not int : print ( 'age type error' ) return self . __name = name self . __age = age # \u521b\u5efa\u5bf9\u8c61 obj = People ( 'lin' , 12 ) obj . get_info () # \u4f7f\u7528\u63a5\u53e3\u4f5c\u4e3a\u63a7\u5236\u7528\u6237\u8f93\u5165\u7684\u5224\u65ad\uff0c\u8fbe\u5230\u4e0d\u5f71\u54cd\u9690\u85cf\u5c5e\u6027\u7684\u4f5c\u7528 obj . set_info ( 18 , 'LIN' ) obj . set_info ( 'LIN' , '18' ) # \u6210\u529f\u4fee\u6539\u5bf9\u8c61 obj . set_info ( 'LIN' , 18 ) obj . get_info () # -------------------- ''' \u7279\u6027\uff1a\u901a\u8fc7\u5b58\u53d6\u65b9\u6cd5\u5b58\u53d6\u7684\u5c5e\u6027\u79f0\u4e4b\u4e3a\u7279\u6027 property\u88c5\u9970\u5668\uff1a\u4f7f\u7c7b\u5185\u7684\u51fd\u6570\u5c5e\u6027\u4f2a\u88c5\u6210\u6570\u636e\u5c5e\u6027 \u88abproperty\u88c5\u662f\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528@xxx.setter\u548c@xxx.deleter\u8fdb\u884cset\u3001del\u64cd\u4f5c \u6ce8\uff1a\u4ec5\u53ef\u4f7f\u7528\u4e0e\u65b0\u5f0f\u7c7b ''' class People1 : def __init__ ( self , name , weight , height ): self . __name = name self . __weight = weight self . __height = height @property def bmi ( self ): return self . __weight / ( self . __height ** 2 ) # \u51e1\u662f\u88abproperty\u88c5\u9970\u8fc7\u7684\u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u540d.setter\u4f5c\u4e3a\u88c5\u9970\u5668\uff0c\u8ba9\u79c1\u6709\u5c5e\u6027\u53ef\u4ee5\u88ab\u4fee\u6539 @bmi.setter def bmi ( self , obj ): self . __name = obj @bmi.deleter def bmi ( self ): del self . __name p1 = People1 ( 'p1' , 75 , 1.85 ) print ( p1 . bmi )","title":"008 12--python\u63d0\u9ad8-1"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#121-gil","text":"","title":"12.1. GIL"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#gil","text":"","title":"GIL\uff08\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff09"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#gil_1","text":"\u63cf\u8ff0Python GIL\u7684\u6982\u5ff5\uff0c \u4ee5\u53ca\u5b83\u5bf9python\u591a\u7ebf\u7a0b\u7684\u5f71\u54cd\uff1f\u7f16\u5199\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u7684\u7a0b\u5e8f\uff0c\u5e76\u9610\u660e\u591a\u7ebf\u7a0b\u6293\u53d6\u7a0b\u5e8f\u662f\u5426\u53ef\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u5e76\u89e3\u91ca\u539f\u56e0\u3002 Guido\u7684\u58f0\u660e\uff1a http://www.artima.com/forums/flat.jsp?forum=106&thread=214235 he language doesn't require the GIL -- it's only the CPython virtual machine that has historically been unable to shed it.","title":"GIL\u9762\u8bd5\u9898\u5982\u4e0b"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_1","text":"Python\u8bed\u8a00\u548cGIL\u6ca1\u6709\u534a\u6bdb\u94b1\u5173\u7cfb\u3002\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\u5728Cpython\u865a\u62df\u673a(\u89e3\u91ca\u5668)\uff0c\u96be\u4ee5\u79fb\u9664GIL\u3002 GIL\uff1a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u90fd\u9700\u8981\u5148\u83b7\u53d6GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\u3002 \u7ebf\u7a0b\u91ca\u653eGIL\u9501\u7684\u60c5\u51b5\uff1a \u5728IO\u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684system call\u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653eGIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6GIL Python 3.x\u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653eGIL\uff09\u6216Python 2.x\uff0ctickets\u8ba1\u6570\u8fbe\u5230100 Python\u4f7f\u7528\u591a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5229\u7528\u591a\u6838\u7684CPU\u8d44\u6e90\u7684\u3002 \u591a\u7ebf\u7a0b\u722c\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u56e0\u4e3a\u9047\u5230IO\u963b\u585e\u4f1a\u81ea\u52a8\u91ca\u653eGIL\u9501","title":"\u53c2\u8003\u7b54\u6848:"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#122","text":"","title":"12.2. \u6df1\u62f7\u8d1d\u3001\u6d45\u62f7\u8d1d"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_2","text":"","title":"\u6df1\u62f7\u8d1d\u3001\u6d45\u62f7\u8d1d"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#146","text":"\u6d45\u62f7\u8d1d\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u7684\u9876\u5c42\u62f7\u8d1d \u901a\u4fd7\u7684\u7406\u89e3\u662f\uff1a\u62f7\u8d1d\u4e86\u5f15\u7528\uff0c\u5e76\u6ca1\u6709\u62f7\u8d1d\u5185\u5bb9","title":"1. \u6d45\u62f7\u8d1d"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#246","text":"\u6df1\u62f7\u8d1d\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u6240\u6709\u5c42\u6b21\u7684\u62f7\u8d1d(\u9012\u5f52)","title":"2. \u6df1\u62f7\u8d1d"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_3","text":"","title":"\u8fdb\u4e00\u6b65\u7406\u89e3\u6df1\u62f7\u8d1d"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#346","text":"\u5206\u7247\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8d4b\u503c\u4e00\u4e2a\u5e8f\u5217 \u5b57\u5178\u7684copy\u65b9\u6cd5\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u5b57\u5178","title":"3. \u62f7\u8d1d\u7684\u5176\u4ed6\u65b9\u5f0f"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#446","text":"","title":"4. \u6ce8\u610f\u70b9"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#copy","text":"copy.copy\u5bf9\u4e8e\u53ef\u53d8\u7c7b\u578b\uff0c\u4f1a\u8fdb\u884c\u6d45\u62f7\u8d1d copy.copy\u5bf9\u4e8e\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u4e0d\u4f1a\u62f7\u8d1d\uff0c\u4ec5\u4ec5\u662f\u6307\u5411 In [88]: a = [11,22,33] In [89]: b = copy.copy(a) In [90]: id(a) Out[90]: 59275144 In [91]: id(b) Out[91]: 59525600 In [92]: a.append(44) In [93]: a Out[93]: [11, 22, 33, 44] In [94]: b Out[94]: [11, 22, 33] In [95]: a = (11,22,33) In [96]: b = copy.copy(a) In [97]: id(a) Out[97]: 58890680 In [98]: id(b) Out[98]: 58890680","title":"\u6d45\u62f7\u8d1d\u5bf9\u4e0d\u53ef\u53d8\u7c7b\u578b\u548c\u53ef\u53d8\u7c7b\u578b\u7684copy\u4e0d\u540c"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#copycopycopydeepcopy","text":"copy.copy copy.deepcopy","title":"copy.copy\u548ccopy.deepcopy\u7684\u533a\u522b"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_4","text":"xx: \u516c\u6709\u53d8\u91cf _x: \u5355\u524d\u7f6e\u4e0b\u5212\u7ebf,\u79c1\u6709\u5316\u5c5e\u6027\u6216\u65b9\u6cd5\uff0cfrom somemodule import *\u7981\u6b62\u5bfc\u5165,\u7c7b\u5bf9\u8c61\u548c\u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee __xx\uff1a\u53cc\u524d\u7f6e\u4e0b\u5212\u7ebf,\u907f\u514d\u4e0e\u5b50\u7c7b\u4e2d\u7684\u5c5e\u6027\u547d\u540d\u51b2\u7a81\uff0c\u65e0\u6cd5\u5728\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee(\u540d\u5b57\u91cd\u6574\u6240\u4ee5\u8bbf\u95ee\u4e0d\u5230)(\u5b50\u7c7b\u4e0d\u80fd\u7ee7\u627f) xx :\u53cc\u524d\u540e\u4e0b\u5212\u7ebf,\u7528\u6237\u540d\u5b57\u7a7a\u95f4\u7684\u9b54\u6cd5\u5bf9\u8c61\u6216\u5c5e\u6027\u3002\u4f8b\u5982: __init__ , __ \u4e0d\u8981\u81ea\u5df1\u53d1\u660e\u8fd9\u6837\u7684\u540d\u5b57(\u5b50\u7c7b\u7ee7\u627f) xx_:\u5355\u540e\u7f6e\u4e0b\u5212\u7ebf,\u7528\u4e8e\u907f\u514d\u4e0ePython\u5173\u952e\u8bcd\u7684\u51b2\u7a81 \u901a\u8fc7name mangling\uff08\u540d\u5b57\u91cd\u6574(\u76ee\u7684\u5c31\u662f\u4ee5\u9632\u5b50\u7c7b\u610f\u5916\u91cd\u5199\u57fa\u7c7b\u7684\u65b9\u6cd5\u6216\u8005\u5c5e\u6027)\u5982\uff1a_Class__object\uff09\u673a\u5236\u5c31\u53ef\u4ee5\u8bbf\u95eeprivate\u4e86\u3002 #coding=utf-8 class Person ( object ): def __init__ ( self , name , age , taste ): self . name = name self . _age = age self . __taste = taste def showperson ( self ): print ( self . name ) print ( self . _age ) print ( self . __taste ) def dowork ( self ): self . _work () self . __away () def _work ( self ): print ( 'my _work' ) def __away ( self ): print ( 'my __away' ) class Student ( Person ): def construction ( self , name , age , taste ): self . name = name self . _age = age self . __taste = taste def showstudent ( self ): print ( self . name ) print ( self . _age ) print ( self . __taste ) @staticmethod def testbug (): _Bug . showbug () # \u6a21\u5757\u5185\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5f53from cur_module import *\u65f6\uff0c\u4e0d\u5bfc\u5165 class _Bug ( object ): @staticmethod def showbug (): print ( \"showbug\" ) s1 = Student ( 'jack' , 25 , 'football' ) s1 . showperson () print ( '*' * 20 ) # \u65e0\u6cd5\u8bbf\u95ee__taste,\u5bfc\u81f4\u62a5\u9519 # s1.showstudent() s1 . construction ( 'rose' , 30 , 'basketball' ) s1 . showperson () print ( '*' * 20 ) s1 . showstudent () print ( '*' * 20 ) Student . testbug ()","title":"\u79c1\u6709\u5316"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_5","text":"\u7236\u7c7b\u4e2d\u5c5e\u6027\u540d\u4e3a __\u540d\u5b57 \u7684\uff0c\u5b50\u7c7b\u4e0d\u7ee7\u627f\uff0c\u5b50\u7c7b\u4e0d\u80fd\u8bbf\u95ee \u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5411 __\u540d\u5b57 \u8d4b\u503c\uff0c\u90a3\u4e48\u4f1a\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u4e0e\u7236\u7c7b\u76f8\u540c\u540d\u5b57\u7684\u5c5e\u6027 _\u540d \u7684\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u5728\u4f7f\u7528 from xxx import * \u65f6\u90fd\u4e0d\u4f1a\u88ab\u5bfc\u5165","title":"\u603b\u7ed3"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#import","text":"","title":"import\u5bfc\u5165\u6a21\u5757"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#1-import","text":"","title":"1. import \u641c\u7d22\u8def\u5f84"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_6","text":"\u4ece\u4e0a\u9762\u5217\u51fa\u7684\u76ee\u5f55\u91cc\u4f9d\u6b21\u67e5\u627e\u8981\u5bfc\u5165\u7684\u6a21\u5757\u6587\u4ef6 '' \u8868\u793a\u5f53\u524d\u8def\u5f84 \u5217\u8868\u4e2d\u7684\u8def\u5f84\u7684\u5148\u540e\u987a\u5e8f\u4ee3\u8868\u4e86python\u89e3\u91ca\u5668\u5728\u641c\u7d22\u6a21\u5757\u65f6\u7684\u5148\u540e\u987a\u5e8f","title":"\u8def\u5f84\u641c\u7d22"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_7","text":"sys . path . append ( '/home/itcast/xxx' ) sys . path . insert ( 0 , '/home/itcast/xxx' ) # \u53ef\u4ee5\u786e\u4fdd\u5148\u641c\u7d22\u8fd9\u4e2a\u8def\u5f84 In [ 37 ]: sys . path . insert ( 0 , \"/home/python/xxxx\" ) In [ 38 ]: sys . path Out [ 38 ]: [ '/home/python/xxxx' , '' , '/usr/bin' , '/usr/lib/python35.zip' , '/usr/lib/python3.5' , '/usr/lib/python3.5/plat-x86_64-linux-gnu' , '/usr/lib/python3.5/lib-dynload' , '/usr/local/lib/python3.5/dist-packages' , '/usr/lib/python3/dist-packages' , '/usr/lib/python3/dist-packages/IPython/extensions' , '/home/python/.ipython' ]","title":"\u7a0b\u5e8f\u6267\u884c\u65f6\u6dfb\u52a0\u65b0\u7684\u6a21\u5757\u8def\u5f84"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#2","text":"\u6a21\u5757\u88ab\u5bfc\u5165\u540e\uff0c import module \u4e0d\u80fd\u91cd\u65b0\u5bfc\u5165\u6a21\u5757\uff0c\u91cd\u65b0\u5bfc\u5165\u9700\u7528 reload","title":"2. \u91cd\u65b0\u5bfc\u5165\u6a21\u5757"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#3","text":"common.py\u6a21\u5757 RECV_DATA_LIST = list () # \u7528\u6765\u5b58\u50a8\u6570\u636e HANDLE_FLAG = False # \u7528\u6765\u6807\u8bb0\u662f\u5426\u5904\u7406\u5b8c\u6210 recv_msg.py\u6a21\u5757 from common import RECV_DATA_LIST # from common import HANDLE_FLAG import common def recv_msg(): \"\"\"\u6a21\u62df\u63a5\u6536\u5230\u6570\u636e\uff0c\u7136\u540e\u6dfb\u52a0\u5230common\u6a21\u5757\u4e2d\u7684\u5217\u8868\u4e2d\"\"\" print(\"--->recv_msg\") for i in range(5): RECV_DATA_LIST.append(i) def test_recv_data(): \"\"\"\u6d4b\u8bd5\u63a5\u6536\u5230\u7684\u6570\u636e\"\"\" print(\"--->test_recv_data\") print(RECV_DATA_LIST) def recv_msg_next(): \"\"\"\u5df2\u7ecf\u5904\u7406\u5b8c\u6210\u540e\uff0c\u518d\u63a5\u6536\u53e6\u5916\u7684\u5176\u4ed6\u6570\u636e\"\"\" print(\"--->recv_msg_next\") # if HANDLE_FLAG: if common.HANDLE_FLAG: print(\"------\u53d1\u73b0\u4e4b\u524d\u7684\u6570\u636e\u5df2\u7ecf\u5904\u7406\u5b8c\u6210\uff0c\u8fd9\u91cc\u8fdb\u884c\u63a5\u6536\u5176\u4ed6\u7684\u6570\u636e(\u6a21\u62df\u8fc7\u7a0b...)----\") else: print(\"------\u53d1\u73b0\u4e4b\u524d\u7684\u6570\u636e\u672a\u5904\u7406\u5b8c\uff0c\u7b49\u5f85\u4e2d....------\") handle_msg.py\u6a21\u5757 from common import RECV_DATA_LIST # from common import HANDLE_FLAG import common def handle_data (): \"\"\"\u6a21\u62df\u5904\u7406recv_msg\u6a21\u5757\u63a5\u6536\u7684\u6570\u636e\"\"\" print ( \"--->handle_data\" ) for i in RECV_DATA_LIST : print ( i ) # \u65e2\u7136\u5904\u7406\u5b8c\u6210\u4e86\uff0c\u90a3\u4e48\u5c06\u53d8\u91cfHANDLE_FLAG\u8bbe\u7f6e\u4e3aTrue\uff0c\u610f\u5473\u7740\u5904\u7406\u5b8c\u6210 # global HANDLE_FLAG # HANDLE_FLAG = True common . HANDLE_FLAG = True def test_handle_data (): \"\"\"\u6d4b\u8bd5\u5904\u7406\u662f\u5426\u5b8c\u6210\uff0c\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u4e3aTrue\"\"\" print ( \"--->test_handle_data\" ) # if HANDLE_FLAG: if common . HANDLE_FLAG : print ( \"=====\u5df2\u7ecf\u5904\u7406\u5b8c\u6210====\" ) else : print ( \"=====\u672a\u5904\u7406\u5b8c\u6210====\" ) main.py\u6a21\u5757 from recv_msg import * from handle_msg import * def main (): # 1. \u63a5\u6536\u6570\u636e recv_msg () # 2. \u6d4b\u8bd5\u662f\u5426\u63a5\u6536\u5b8c\u6bd5 test_recv_data () # 3. \u5224\u65ad\u5982\u679c\u5904\u7406\u5b8c\u6210\uff0c\u5219\u63a5\u6536\u5176\u5b83\u6570\u636e recv_msg_next () # 4. \u5904\u7406\u6570\u636e handle_data () # 5. \u6d4b\u8bd5\u662f\u5426\u5904\u7406\u5b8c\u6bd5 test_handle_data () # 6. \u5224\u65ad\u5982\u679c\u5904\u7406\u5b8c\u6210\uff0c\u5219\u63a5\u6536\u5176\u5b83\u6570\u636e recv_msg_next () if __name__ == \"__main__\" : main () \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u6570\u636e\u7684\u65f6\u5019\u8981\u4f7f\u7528 \u5305\u540d.\u53d8\u91cf (\u7c7b\u4f3c\u4e8e\u53d8\u91cf\u4e0e\u5f15\u7528\u53d8\u91cf\u7684\u533a\u522b,\u76f4\u63a5\u4ece\u53e6\u4e00\u4e2a\u95ee\u4ef7\u4e2d\u5bfc\u5165\u53d8\u91cf,\u5728\u65b0\u7684\u6587\u4ef6\u4e2d\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u6539\u53d8\u7c7b\u4f3c\u4e8e\u5c40\u90e8\u53d8\u91cf\u4e0d\u4f1a\u5f71\u54cd\u539f\u6765\u6587\u4ef6\u53d8\u91cf\u7684\u503c\u5373\u4f7f\u52a0\u4e0aglobal\u4e5f\u4e0d\u884c,\u5217\u8868\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u7684\u6dfb\u52a0\u4f46\u662f\u4e0d\u80fd\u8d4b\u503c,\u6240\u4ee5\u4ee5\u540e\u7528\u7684\u65f6\u5019\u591a\u4e2a\u6587\u4ef6\u5bfc\u5165\u5171\u4eab\u5c31\u76f4\u63a5\u4f7f\u7528\u5305\u540d.\u53d8\u91cf\u540d)","title":"3. \u591a\u6a21\u5757\u5f00\u53d1\u65f6\u7684\u6ce8\u610f\u70b9"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_8","text":"\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u662f\u9762\u5411\u5bf9\u8c61\u76843\u5927\u7279\u6027","title":"\u518d\u8bae \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_9","text":"","title":"\u4e3a\u5565\u8981\u5c01\u88c5"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_10","text":"\u5728\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u65f6\uff0c\u5f53\u9700\u8981\u5bf9\u6570\u636e\u5904\u7406\u65f6\uff0c\u9700\u8981\u8003\u8651\u7528\u54ea\u4e2a\u6a21\u677f\u4e2d\u54ea\u4e2a\u51fd\u6570\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662f\u5f53\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5c06\u6570\u636e\u5b58\u50a8\u5230\u4e86\u8fd9\u4e2a\u72ec\u7acb\u7684\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u4e2a\u72ec\u7acb\u7684\u7a7a\u95f4\uff08\u5373\u5bf9\u8c61\uff09\u4e2d\u901a\u8fc7\u4e00\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\uff08 class \uff09\u80fd\u591f\u83b7\u53d6\u5230\u7c7b\uff08\u6a21\u677f\uff09\uff0c\u800c\u4e14\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u662f\u6709\u4e00\u5b9a\u6570\u91cf\u7684\uff0c\u4e0e\u6b64\u7c7b\u65e0\u5173\u7684\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u672c\u7c7b\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u6570\u636e\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u5f88\u5feb\u901f\u7684\u5b9a\u4f4d\u5230\u9700\u8981\u7684\u65b9\u6cd5\u662f\u8c01 \u8fd9\u6837\u66f4\u65b9\u4fbf \u5168\u5c40\u53d8\u91cf\u662f\u53ea\u80fd\u67091\u4efd\u7684\uff0c\u591a\u5f88\u591a\u4e2a\u51fd\u6570\u9700\u8981\u591a\u4e2a\u5907\u4efd\u65f6\uff0c\u5f80\u5f80\u9700\u8981\u5229\u7528\u5176\u5b83\u7684\u53d8\u91cf\u6765\u8fdb\u884c\u50a8\u5b58\uff1b\u800c\u901a\u8fc7\u5c01\u88c5 \u4f1a\u5c06\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u8fd9\u4e2a\u53d8\u91cf \u53d8\u4e3a\u4e86\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u201c\u5168\u5c40\u201d\u53d8\u91cf\uff0c\u53ea\u8981\u5bf9\u8c61\u4e0d\u4e00\u6837\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u5c31\u53ef\u4ee5\u518d\u67091\u4efd\uff0c\u6240\u4ee5\u8fd9\u6837\u66f4\u65b9\u4fbf \u4ee3\u7801\u5212\u5206\u66f4\u6e05\u6670 \u9762\u5411\u8fc7\u7a0b \u5168\u5c40\u53d8\u91cf 1 \u5168\u5c40\u53d8\u91cf 2 \u5168\u5c40\u53d8\u91cf 3 ... def \u51fd\u6570 1 (): pass def \u51fd\u6570 2 (): pass def \u51fd\u6570 3 (): pass def \u51fd\u6570 4 (): pass def \u51fd\u6570 5 (): pass \u9762\u5411\u5bf9\u8c61 class \u7c7b( object ): \u5c5e\u6027 1 \u5c5e\u6027 2 def \u65b9\u6cd5 1 ( self ): pass def \u65b9\u6cd5 2 ( self ): pass class \u7c7b2( object ): \u5c5e\u6027 3 def \u65b9\u6cd5 3 ( self ): pass def \u65b9\u6cd5 4 ( self ): pass def \u65b9\u6cd5 5 ( self ): pass","title":"\u597d\u5904"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_11","text":"","title":"\u4e3a\u5565\u8981\u7ee7\u627f"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_12","text":"\u80fd\u591f\u63d0\u5347\u4ee3\u7801\u7684\u91cd\u7528\u7387\uff0c\u5373\u5f00\u53d1\u4e00\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u5b50\u529f\u80fd\u4e2d\u76f4\u63a5\u4f7f\u7528 \u7ee7\u627f\u80fd\u591f\u6709\u6548\u7684\u8fdb\u884c\u4ee3\u7801\u7684\u7ba1\u7406\uff0c\u5f53\u67d0\u4e2a\u7c7b\u6709\u95ee\u9898\u53ea\u8981\u4fee\u6539\u8fd9\u4e2a\u7c7b\u5c31\u884c\uff0c\u800c\u5176\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u7684\u5b50\u7c7b\u5f80\u5f80\u4e0d\u9700\u8981\u5c31\u4fee\u6539","title":"\u8bf4\u660e"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#_13","text":"class MiniOS ( object ): \"\"\"MiniOS \u64cd\u4f5c\u7cfb\u7edf\u7c7b \"\"\" def __init__ ( self , name ): self . name = name self . apps = [] # \u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u540d\u79f0\u5217\u8868 def __str__ ( self ): return \" %s \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a %s \" % ( self . name , str ( self . apps )) def install_app ( self , app ): # \u5224\u65ad\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u4e86\u8f6f\u4ef6 if app . name in self . apps : print ( \"\u5df2\u7ecf\u5b89\u88c5\u4e86 %s \uff0c\u65e0\u9700\u518d\u6b21\u5b89\u88c5\" % app . name ) else : app . install () self . apps . append ( app . name ) class App ( object ): def __init__ ( self , name , version , desc ): self . name = name self . version = version self . desc = desc def __str__ ( self ): return \" %s \u7684\u5f53\u524d\u7248\u672c\u662f %s - %s \" % ( self . name , self . version , self . desc ) def install ( self ): print ( \"\u5c06 %s [ %s ] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55...\" % ( self . name , self . version )) class PyCharm ( App ): pass class Chrome ( App ): def install ( self ): print ( \"\u6b63\u5728\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f...\" ) super () . install () linux = MiniOS ( \"Linux\" ) print ( linux ) pycharm = PyCharm ( \"PyCharm\" , \"1.0\" , \"python \u5f00\u53d1\u7684 IDE \u73af\u5883\" ) chrome = Chrome ( \"Chrome\" , \"2.0\" , \"\u8c37\u6b4c\u6d4f\u89c8\u5668\" ) linux . install_app ( pycharm ) linux . install_app ( chrome ) linux . install_app ( chrome ) print ( linux ) \u8fd0\u884c\u7ed3\u679c Linux \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a [] \u5c06 PyCharm [1.0] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55... \u6b63\u5728\u89e3\u538b\u7f29\u5b89\u88c5\u7a0b\u5e8f... \u5c06 Chrome [2.0] \u7684\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u7a0b\u5e8f\u76ee\u5f55... \u5df2\u7ecf\u5b89\u88c5\u4e86 Chrome\uff0c\u65e0\u9700\u518d\u6b21\u5b89\u88c5 Linux \u5b89\u88c5\u7684\u8f6f\u4ef6\u5217\u8868\u4e3a ['PyCharm', 'Chrome']","title":"\u600e\u6837\u7406\u89e3\u591a\u6001"},{"location":"python-web/008-12--python\u63d0\u9ad8-1/#python","text":"''' \u7ee7\u627f\uff1a \u4e00\u79cd\u521b\u9020\u65b0\u7c7b\u7684\u65b9\u6cd5\uff0c\u65b0\u5efa\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027 \u7236\u7c7b\u53c8\u53ef\u4ee5\u79f0\u4e3a \u57fa\u7c7b\u6216\u8d85\u7c7b\uff1b\u5b50\u7c7b\u53c8\u79f0\u4e3a\u6d3e\u751f\u7c7b \u7ee7\u627f\u7684\u76ee\u7684\uff1a \u4e3a\u4e86\u51cf\u5c11\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u4ee3\u7801\u5197\u4f59 python\u4e2d\u7ee7\u627f\u7684\u7279\u70b9\uff1a 1.\u53ef\u4ee5\u9057\u4f20\u3001\u91cd\u7528\u7236\u7c7b\u7684\u5c5e\u6027 2.\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b 3.\u7ee7\u627f\u80cc\u666f\u4e0b\uff0cpython\u4e2d\u7684\u7c7b\u5206\u4e3a\u4e24\u79cd\uff1a\u65b0\u5f0f\u7c7b\u3001\u7ecf\u5178\u7c7b \u65b0\u5f0f\u7c7b\uff1a\u4f46\u51e1\u7ee7\u627f\u4e86object\u7684\u7c7b\uff0c\u4ee5\u53ca\u8be5\u7c7b\u7684\u5b50\u7c7b\u3001\u5b50\u5b50\u7c7b \u5728python3\u4e2d\u4e00\u4e2a\u7c7b\u5373\u4fbf\u662f\u6ca1\u6709\u663e\u5f0f\u7684\u7ee7\u627f\u4efb\u4f55\u7c7b\uff0c\u5219\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b\u3002 \u5373\uff0cpython3\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u662f\u65b0\u5f0f\u7c7b \u7ecf\u5178\u7c7b\uff1a\u6ca1\u6709\u7ee7\u627fobject \u5728python2\u4e2d\u53d6\u5206\u65b0\u5f0f\u3001\u7ecf\u5178\u7c7b ''' class Parent1 : pass # \u5728python3\u4e2d\u5199\u5165object\u7ee7\u627f\uff0c\u4e3a\u4e86\u80fd\u5728Python2\u4e2d\u517c\u5bb9 class Parent2 ( object ): pass class Sub1 ( Parent1 ): pass class Sub2 ( Parent1 , Parent2 ): pass # \u67e5\u770b\u7c7b\u7684\u7236\u7c7b(\u57fa\u7c7b)\uff0c\u8bbf\u95ee\u5c5e\u6027__bases__ print ( Parent1 . __bases__ ) print ( Parent2 . __bases__ ) # \u9ed8\u8ba4\u7ee7\u627f object\u7c7b print ( Sub1 . __bases__ ) print ( Sub2 . __bases__ ) # \u5224\u65ad\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u5b50\u7c7b\uff0c\u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 issubclass() print ( issubclass ( Sub1 , Parent1 )) # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u662f\u7279\u5b9a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528\u65b9\u6cd5isinstance() s = Sub1 () # \u5bf9\u8c61\u662f\u6240\u5c5e\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , Sub1 )) # \u5bf9\u8c61\u662f\u6240\u5c5e\u7c7b\u7684\u7236\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , Parent1 )) # \u5bf9\u8c61\u662fobject\u7c7b\u7684\u5b9e\u4f8b print ( isinstance ( s , object )) # \u83b7\u6089\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\uff0c\u4f7f\u7528\u5c5e\u6027__class__ print ( s . __class__ ) ''' \u5b50\u7c7b\u5982\u4f55\u91cd\u7528\u7236\u7c7b\uff1f \u65b9\u5f0f\u4e00\u3001\u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u67d0\u4e00\u4e2a\u7c7b\u4e2d\u7684\u51fd\u6570 \uff081\u3001\u4e0e\u7ee7\u627f\u65e0\u5173 2\u3001\u4e14\u8bbf\u95ee\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 \u65b9\u5f0f\u4e8c\u3001\u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 super() \u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7528\u6765\u4e13\u95e8\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u5c5e\u6027 **\u5b8c\u5168\u53c2\u7167mro\u5217\u8868** python2\u4e2d\uff1a\u7c7b\u4e2d\u4f7f\u7528super(\u5f53\u524d\u7c7b\u540d\uff0cself) python3\u4e2d\uff1asuper() \uff081\u3001\u4e25\u683c\u4f9d\u8d56mro\u5217\u8868 2\u3001\u8bbf\u95ee\u7684\u662f\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 \u5728\u7ee7\u627f\u80cc\u666f\u4e0b,\u5c5e\u6027\u7684\u67e5\u627e\u4f18\u5148\u7ea7\uff1a 1.\u5355\u7ee7\u627f\u80cc\u666f\uff1a \u5bf9\u8c61\u5185\u90e8 --\u300b \u5bf9\u8c61\u7684\u7c7b --\u300b \u7236\u7c7b --\u300b \u7236\u7236\u7c7b \u2026\u2026 --\u300bobject 2.\u591a\u7ee7\u627f\u80cc\u666f\uff1a 1\uff09\u82e5\u4e00\u4e2a\u5b50\u7c7b\u7ee7\u627f\u591a\u4e2a\u5206\u652f\uff0c\u975e\u83f1\u5f62\u7ed3\u6784\uff08\u591a\u4e2a\u5206\u652f\u6ca1\u6709\u5171\u540c\u7ee7\u627f\u7ecf\u5178\u7c7b\u3001\u65b0\u5f0f\u7c7b\uff08\u975eobject\u7684\u7c7b\uff09\uff09 \u5bf9\u8c61\u5185\u90e8 --\u300b \u5bf9\u8c61\u7684\u7c7b --\u300b\u7236\u7c7b\uff08\u4ece\u5de6\u5f80\u53f3\uff0c\u5404\u5206\u652f\u67e5\u627e\uff09 --\u300b object 2\uff09\u83f1\u5f62\u7ee7\u627f\u95ee\u9898 -1 py3\uff0cpy2 \u591a\u7236\u7c7b\u6700\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u7c7b\uff0c\u6b64\u7c7b\u4e3a\u65b0\u5f0f\u7c7b\uff1a \u5e7f\u5ea6\u4f18\u5148\u67e5\u627e\uff1a\u5404\u7236\u7c7b\u5206\u652f\u67e5\u627e\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u7236\u7c7b\u67e5\u627e\u5b8c\u6bd5\uff0c\u518d\u53bb\u9876\u7ea7\u7c7b\u67e5\u627e -2 py2 \u591a\u7236\u7c7b\u6700\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u7c7b\uff0c\u6b64\u7c7b\u4e3a\u7ecf\u5178\u7c7b\uff1a \u6df1\u5ea6\u4f18\u5148\u67e5\u627e\uff1a\u5728\u7b2c\u4e00\u4e2a\u7236\u7c7b\u5206\u652f\u67e5\u627e\uff0c\u7b2c\u4e00\u6b21\u5c31\u53bb\u627e\u9876\u7ea7\u7c7b\u67e5\u627e python\u67e5\u627e\u539f\u7406\uff1a \u4f7f\u7528C3\u7ebf\u6027\u7b97\u6cd5\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\uff08MRO\uff09\uff0c\u6b64\u5217\u8868\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6240\u6709\u79ef\u7d2f\u7684\u7ebf\u6027\u987a\u5e8f\u5217\u8868\u3002 \u5982\uff1a>>> f.mro() [<class '__main__.F'>, <class '__main__.D'>, <class '__main__.B'>, <class '__main__.E'>, <class '__main__.C'>, <class '__main__.A'>, <class 'object'>] \u6240\u6709\u7236\u7c7b\u7684MRO\u5217\u8868\u5e76\u9075\u5faa\u5982\u4e0b\u4e09\u6761\u51c6\u5219: 1.\u5b50\u7c7b\u4f1a\u5148\u4e8e\u7236\u7c7b\u88ab\u68c0\u67e5 2.\u591a\u4e2a\u7236\u7c7b\u4f1a\u6839\u636e\u5b83\u4eec\u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u88ab\u68c0\u67e5 3.\u5982\u679c\u5bf9\u4e0b\u4e00\u4e2a\u7c7b\u5b58\u5728\u4e24\u4e2a\u5408\u6cd5\u7684\u9009\u62e9,\u9009\u62e9\u7b2c\u4e00\u4e2a\u7236\u7c7b ''' # \u5229\u7528\u7ee7\u627f\u89e3\u51b3\u4ee3\u7801\u5197\u4f59 class CollegePeople : school = 'college' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex class Stu ( CollegePeople ): def __init__ ( self , name , age , sex , score ): # \u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u7236\u7c7b\u4e2d\u7684\u51fd\u6570 CollegePeople . __init__ ( self , name , age , sex ) self . score = score def choose_course ( self , y ): print ( ' %s choose course' % self . name , y ) class Teacher ( CollegePeople ): def __init__ ( self , name , age , sex , level ): # CollegePeople.__init__(self, name, age, sex) # \u4f7f\u7528\u5185\u7f6e\u65b9\u6cd5 super()\u91cd\u7528\u7236\u7c7b super () . __init__ ( name , age , sex ) self . level = level def score ( self , stu , num ): stu . score = num s1 = Stu ( 'name' , 18 , 'male' , 99 ) print ( s1 . __dict__ ) t1 = Teacher ( 'teacher' , 28 , 'female' , 10 ) print ( t1 . __dict__ ) \u65b9\u5f0f\u4e00\u3001\u6307\u540d\u9053\u59d3\u7684\u5e94\u7528\u67d0\u4e00\u4e2a\u7c7b\u4e2d\u7684\u51fd\u6570 \uff08 1 \u3001\u4e0e\u7ee7\u627f\u65e0\u5173 2 \u3001\u4e14\u8bbf\u95ee\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u7684\u6548\u679c\uff09 class A : def __init__ ( self , a ): self . a = a class B : def __init__ ( self , b ): self . b = b class C ( A ): def __init__ ( self , a , b , c ): A . __init__ ( self , a ) B . __init__ ( self , b ) self . c = c c1 = C ( 'a' , 'b' , 'c' ) print ( c1 . __dict__ ) # ------------------------------- # \u5355\u7ee7\u627f\u4e0b\u7684\u67e5\u627e\u987a\u5e8f class Pra : def f1 ( self ): print ( 'P --> f1' ) def f2 ( self ): print ( 'P ----> f2' ) self . f1 () class Fo ( Pra ): def f1 ( self ): print ( 'F ---> f1' ) a = Fo () a . f2 () # ----------------------------------------------- ''' \u7ec4\u5408\uff1a\u67d0\u4e00\u4e2a\u5bf9\u8c61\uff0c\u62e5\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u5176\u503c\u6765\u81ea\u4e8e\u53e6\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61 class Foo: xxx = 222 class Bar: yyy = 111 obj = Foo() b = Bar\uff08\uff09 obj.attr = Bar() obj.a = b obj.xxxx #\u8c03\u7528Foo\u5185\u5c5e\u6027 obj.attr.yyyy #\u8c03\u7528Bar\u5185\u5c5e\u6027 \u4f7f\u7528\u7ec4\u5408\u7684\u76ee\u7684\uff1a \u901a\u8fc7\u4e3a\u67d0\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\u7684\u65b9\u5f0f\uff0c\u95f4\u63a5\u5c06\u4e24\u4e2a\u7c7b\u8fdb\u884c\u5173\u8054\uff0c\u51cf\u5c11\u7c7b\u4e0e\u7c7b\u4ee3\u7801\u5197\u4f59 ''' # \u4f7f\u7528\u7ec4\u5408\u51cf\u5c11\u4ee3\u7801\u5197\u4f59 class CollegePeople (): school = 'college' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex class CollegeStudent ( CollegePeople ): def __init__ ( self , name , age , sex , score = 0 ): super () . __init__ ( name , age , sex ) self . score = score self . courses = [] def tell_all_course ( self ): print (( '\u5b66\u751f[ %s ]\u9009\u4fee\u7684\u8bfe\u7a0b\u5982\u4e0b' % self . name ) . center ( 50 , '=' )) for obj in self . courses : obj . tell_course () print ( '=' * 60 ) class CollegeTeacher ( CollegePeople ): def __init__ ( self , name , age , sex , level ): super () . __init__ ( name , age , sex ) self . level = level self . courses = [] def tell_all_course ( self ): print (( '\u8001\u5e08[ %s ]\u6559\u6388\u7684\u8bfe\u7a0b\u5982\u4e0b' % self . name ) . center ( 50 , '*' )) for obj in self . courses : obj . tell_course () print ( '*' * 70 ) # \u521b\u5efa\u8bfe\u7a0b class CollegeCourse : def __init__ ( self , c_name , c_price , c_period ): self . c_name = c_name self . c_price = c_price self . c_period = c_period def tell_course ( self ): print ( 'course:' + self . c_name , self . c_price , self . c_period ) python = CollegeCourse ( 'python\u5168\u6808\u5f00\u53d1' , 1900 , '5mons' ) linux = CollegeCourse ( 'linux\u67b6\u6784\u5e08' , 900 , '3mons' ) # \u5b66\u751f\u6dfb\u52a0\u8bfe\u7a0b stu1 = CollegeStudent ( 'STU1' , 38 , 'male' ) stu1 . courses . append ( python ) stu1 . courses . append ( linux ) stu1 . tell_all_course () # \u6559\u5e08\u6dfb\u52a0\u8bfe\u7a0b tea1 = CollegeTeacher ( 'TEA1' , 18 , 'male' , 10 ) tea1 . courses . append ( linux ) tea1 . tell_all_course () # ------------------------------------------- ''' \u591a\u6001\uff1a\u4e00\u7c7b\u4e8b\u7269\u5b58\u5728\u591a\u79cd\u5f62\u6001 ### Python\u4e2d\u591a\u6001\u7684`\u4f5c\u7528` **\u8ba9\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u5185\u5bb9(\u529f\u80fd)\u7684\u51fd\u6570\u3002** ### Python\u4e2d\u591a\u6001\u7684`\u7279\u70b9` 1\u3001\u53ea\u5173\u5fc3\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u662f\u5426\u540c\u540d\uff0c\u4e0d\u5173\u5fc3\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u578b\uff1b 2\u3001\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u4e4b\u95f4\uff0c\u7ee7\u627f\u5173\u7cfb\u53ef\u6709\u53ef\u65e0\uff1b 3\u3001\u591a\u6001\u7684\u597d\u5904\u53ef\u4ee5\u589e\u52a0\u4ee3\u7801\u7684\u5916\u90e8\u8c03\u7528\u7075\u6d3b\u5ea6\uff0c\u8ba9\u4ee3\u7801\u66f4\u52a0\u901a\u7528\uff0c\u517c\u5bb9\u6027\u6bd4\u8f83\u5f3a\uff1b 4\u3001\u591a\u6001\u662f\u8c03\u7528\u65b9\u6cd5\u7684\u6280\u5de7\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u7c7b\u7684\u5185\u90e8\u8bbe\u8ba1\u3002 \u4f8b\uff1a\u52a8\u7269\u5b58\u5728\u591a\u79cd\u5f62\u6001<\u4eba\uff0c\u72d7\uff0c\u732b> \u591a\u6001\u6027\uff1a\u5728\u591a\u6001\u7684\u80cc\u666f\u4e0b\uff08\u7edf\u4e00\uff09\uff0c\u4e0d\u8003\u8651\u5b9e\u4f8b\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5b9e\u4f8b \u5373\u4e0d\u540c\u7684\u5b9e\u4f8b\uff0c\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e0d\u540c\u7684\u7ed3\u679c \u4f8b\uff1a\u4e0d\u540c\u79cd\u7c7b\u7684\u52a8\u7269\uff0c\u90fd\u53ef\u4ee5\u8c03\u7528\u5403\u559d\u62c9\u6492\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7ed3\u679c\u4e0d\u540c\u3002 \u591a\u6001\u6027\u5206\u4e3a\u9759\u6001\u591a\u6001\u6027\u548c\u52a8\u6001\u591a\u6001\u6027 \u62bd\u8c61\u7c7b\uff1a\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002 \u82e5\u7c7b\u662f\u4e00\u5806\u5bf9\u8c61\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\uff0c\u62bd\u8c61\u7c7b\u5219\u662f\u4ece\u4e00\u5806\u7c7b\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\uff0c\u5185\u5bb9\u5305\u62ec\u4e86\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\uff1a\u62bd\u8c61\u7c7b\u7684\u672c\u8d28\u8fd8\u662f\u7d2f\uff0c\u6307\u7684\u662f\u4e00\u7ec4\u7c7b\u7684\u76f8\u4f3c\u6027\uff0c\u5305\u62ec\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u800c\u63a5\u53e3\u53ea\u5f3a\u8c03\u51fd\u6570\u5c5e\u6027\u7684\u76f8\u4f3c\u6027\u3002 abc\u6a21\u5757\uff1a\u4f7f\u5b50\u7c7b\u5f3a\u5236\u9075\u5faa\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u5373\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 \u6ce8\uff1a\u7236\u7c7b\u53ea\u80fd\u7528\u6765\u5efa\u7acb\u89c4\u8303\uff0c\u4e0d\u80fd\u7528\u6765\u5b9e\u4f8b\u5316\uff0c\u65e0\u9700\u5b9e\u73b0\u5185\u90e8\u65b9\u6cd5 \u4f8b\uff1a class Animal(metaclass = abc.ABCMeta): @abc.abstractmethod def speak(self): pass \u9e2d\u5b50\u7c7b\u578b\uff1a\u5982\u679c\u770b\u8d77\u6765\u50cf\u3001\u53eb\u58f0\u50cf\u800c\u4e14\u8d70\u8d77\u8def\u6765\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u9e2d\u5b50 python\u7a0b\u5e8f\u5458\u901a\u5e38\u6839\u636e\u8fd9\u79cd\u884c\u4e3a\u6765\u7f16\u5199\u7a0b\u5e8f\u3002 \u4f8b\u5982\uff0clinux\u5bf9\u786c\u76d8\u7684\u64cd\u4f5c\u770b\u8d77\u6765\u50cf\u6587\u4ef6\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u7528\u64cd\u4f5c\u6587\u4ef6\u7684\u65b9\u6cd5\u64cd\u4f5c\u786c\u76d8 ''' ''' \u5c01\u88c5\uff1a\u660e\u786e\u7684\u53d6\u5206\u5185\u5916\uff0c\u5c01\u88c5\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u5728\u5185\u90e8\u8c03\u7528\uff0c\u800c\u4e0d\u80fd\u88ab\u5916\u754c\u4f7f\u7528\u3002 \u9690\u85cf\u65b9\u5f0f\uff1a\u5b9a\u4e49\u7684\u5c5e\u6027\u4ee5__\u5f00\u5934\u3002\u4f8b\uff1a__name \u6ce8\u610f\uff1a__xxx__\u4e3a\u5185\u7f6e\u5c5e\u6027\u800c\u4e0d\u662f\u5f71\u85cf \u9690\u85cf\u5b58\u50a8\u7684__dict__\u603b\u7ed3\uff1a 1.__\u5f00\u5934\u7684\u5c5e\u6027\uff0c\u5b9e\u73b0\u7684\u9690\u85cf\u4ec5\u4ec5\u53ea\u662f\u4e00\u79cd\u8bed\u6cd5\u610f\u4e49\u4e0a\u7684\u53d8\u5f62\uff0c\u5e76\u4e0d\u4f1a\u771f\u6b63\u9650\u5236\u7c7b\u5916\u90e8\u7684\u8bbf\u95ee 2.\u6539\u53d8\u5f62\u64cd\u4f5c\u53ea\u5728\u7c7b\u5b9a\u4e49\u9636\u6bb5\u68c0\u6d4b\u8bed\u6cd5\u65f6\u53d1\u751f\u4e00\u6b21\uff0c\u7c7b\u5b9a\u4e49\u9636\u6bb5\u7ed3\u675f\u540e\uff08\u5bf9\u8c61\u3001\u7c7b\u7684\u6dfb\u52a0\u4fee\u6539\u7b49\u64cd\u4f5c\uff09\u5b9a\u4e49\u7684\u5c5e\u6027\u4e0d\u4f1a\u53d8\u5f62 3.\u5c5e\u6027\u6dfb\u52a0__\u5f00\u5934\u53ef\u4ee5\u9632\u6b62\u5b50\u7c7b\u8986\u76d6\u7236\u7c7b\u7684\u65b9\u6cd5\u3002\u4e14\u7236\u7c7b\u5185\u53ea\u4f1a\u67e5\u627e\u5230\u81ea\u8eab\u7684\u9690\u85cf\u5c5e\u6027 \u5c01\u88c5\u6570\u636e\u5c5e\u6027\u76ee\u7684\uff1a\u5c06\u6570\u636e\u5c5e\u6027\u9690\u85cf\uff0c\u7c7b\u5916\u90e8\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u5c5e\u6027\uff0c\u901a\u8fc7\u7c7b\u5185\u90e8\u63a5\u53e3\u95f4\u63a5\u64cd\u4f5c \u63a5\u53e3\u5b9e\u73b0\u5404\u79cd\u903b\u8f91\uff0c\u63a7\u5236\u5916\u90e8\u4f7f\u7528\u63a5\u53e3\u5bf9\u5c5e\u6027\u7684\u64cd\u4f5c \u5c01\u88c5\u65b9\u6cd5\u7684\u76ee\u7684\uff1a\u9694\u79bb\u590d\u6742\u5ea6 ''' class Foo : __x = 111 # _Foo__x __y = 222 # _Foo__y def __init__ ( self , name , age ): self . __name = name self . __age = age def __func ( self ): # _Foo__func pass def get_info ( self ): print ( self . __name , self . __age , self . __x ) # print(self._Foo__name,self._Foo__age,self._Foo__x) # \u5916\u754c\u65e0\u6cd5\u8c03\u7528\u9690\u85cf\u5c5e\u6027 print ( Foo . __x ) print ( Foo . __func ) # \u67e5\u770b\u7c7b\u540d\u79f0\u7a7a\u95f4\uff0c\u53d1\u73b0\u5c5e\u6027\u540d\u79f0\u5728\u5b9a\u4e49\u68c0\u6d4b\u9636\u6bb5\u4fee\u6539 print ( Foo . __dict__ ) # \u4ecd\u7136\u53ef\u4ee5\u8c03\u7528\u4fee\u6539\u540e\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 print ( Foo . _Foo__x ) print ( Foo . _Foo__y ) # \u5728\u7c7b\u5b9a\u4e49\u68c0\u6d4b\u9636\u6bb5\u4e4b\u540e\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u4e0d\u88ab\u4fee\u6539\u5c31\u653e\u5165\u7a7a\u95f4 Foo . __z = 333 print ( Foo . __dict__ ) print ( Foo . __z ) # \u5bf9\u8c61\u4e2d\u4e5f\u4f1a\u4fee\u6539\u5bf9\u5e94\u7684\u9690\u85cf\u5c5e\u6027 obj = Foo ( '123' , 18 ) print ( obj . __dict__ ) print ( obj . __name ) print ( obj . __age ) obj . get_info () # \u5bf9\u8c61\u521b\u5efa\u4e4b\u540e\uff0c\u65b0\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u4e0d\u4f1a\u88ab\u4fee\u6539 obj . __sex = 'male' print ( obj . __dict__ ) print ( obj . __sex ) # ------------------------------------------- # \u5c01\u88c5\u6570\u636e\u5c5e\u6027\u7684\u76ee\u7684\uff1a # \u901a\u8fc7\u63a5\u53e3\uff0c\u5b9e\u73b0\u63a7\u5236\u518d\u95f4\u63a5\u4fee\u6539\u79c1\u6709\u7c7b\u578b class People : def __init__ ( self , name , age ): self . __name = name self . __age = age def get_info ( self ): print ( self . __name , self . __age ) def set_info ( self , name , age ): if type ( name ) is not str : print ( 'name type error!' ) return if type ( age ) is not int : print ( 'age type error' ) return self . __name = name self . __age = age # \u521b\u5efa\u5bf9\u8c61 obj = People ( 'lin' , 12 ) obj . get_info () # \u4f7f\u7528\u63a5\u53e3\u4f5c\u4e3a\u63a7\u5236\u7528\u6237\u8f93\u5165\u7684\u5224\u65ad\uff0c\u8fbe\u5230\u4e0d\u5f71\u54cd\u9690\u85cf\u5c5e\u6027\u7684\u4f5c\u7528 obj . set_info ( 18 , 'LIN' ) obj . set_info ( 'LIN' , '18' ) # \u6210\u529f\u4fee\u6539\u5bf9\u8c61 obj . set_info ( 'LIN' , 18 ) obj . get_info () # -------------------- ''' \u7279\u6027\uff1a\u901a\u8fc7\u5b58\u53d6\u65b9\u6cd5\u5b58\u53d6\u7684\u5c5e\u6027\u79f0\u4e4b\u4e3a\u7279\u6027 property\u88c5\u9970\u5668\uff1a\u4f7f\u7c7b\u5185\u7684\u51fd\u6570\u5c5e\u6027\u4f2a\u88c5\u6210\u6570\u636e\u5c5e\u6027 \u88abproperty\u88c5\u662f\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528@xxx.setter\u548c@xxx.deleter\u8fdb\u884cset\u3001del\u64cd\u4f5c \u6ce8\uff1a\u4ec5\u53ef\u4f7f\u7528\u4e0e\u65b0\u5f0f\u7c7b ''' class People1 : def __init__ ( self , name , weight , height ): self . __name = name self . __weight = weight self . __height = height @property def bmi ( self ): return self . __weight / ( self . __height ** 2 ) # \u51e1\u662f\u88abproperty\u88c5\u9970\u8fc7\u7684\u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u540d.setter\u4f5c\u4e3a\u88c5\u9970\u5668\uff0c\u8ba9\u79c1\u6709\u5c5e\u6027\u53ef\u4ee5\u88ab\u4fee\u6539 @bmi.setter def bmi ( self , obj ): self . __name = obj @bmi.deleter def bmi ( self ): del self . __name p1 = People1 ( 'p1' , 75 , 1.85 ) print ( p1 . bmi )","title":"\u66f4\u52a0\u8d85\u8be6\u7ec6\u7684\u89e3\u91caPython\u7684\u5c01\u88c5,\u7ee7\u627f,\u591a\u6001"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/","text":"13.1. \u591a\u7ee7\u627f\u4ee5\u53caMRO\u987a\u5e8f \u00b6 \u591a\u7ee7\u627f\u4ee5\u53caMRO\u987a\u5e8f \u00b6 1. \u5355\u72ec\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u00b6 # coding=utf-8 print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d.__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name ): print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age ): print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age Parent . __init__ ( self , name ) print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son2 ( Parent ): def __init__ ( self , name , gender ): print ( 'Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . gender = gender Parent . __init__ ( self , name ) print ( 'Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 , Son2 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) Son1 . __init__ ( self , name , age ) # \u5355\u72ec\u8c03\u7528\u7236\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5 Son2 . __init__ ( self , name , gender ) print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) print ( '\u6027\u522b\uff1a' , gs . gender ) print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d.__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c: ****** \u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 #\u88ab\u7ee7\u627f\u4e86\u4e24\u6b21 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 \u6027\u522b\uff1a \u7537 ****** \u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** python \u662f\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u56e0\u6b64\u6ca1\u6709\u65b9\u6cd5\u7684\u91cd\u8f7d\u53ea\u6709\u65b9\u6cd5\u7684\u91cd\u5199 2. \u591a\u7ee7\u627f\u4e2dsuper\u8c03\u7528\u6709\u6240\u7236\u7c7b\u7684\u88ab\u91cd\u5199\u7684\u65b9\u6cd5 \u00b6 print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age super () . __init__ ( name , * args , ** kwargs ) # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son2 ( Parent ): def __init__ ( self , name , gender , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . gender = gender super () . __init__ ( name , * args , ** kwargs ) # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 , Son2 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) # \u591a\u7ee7\u627f\u65f6\uff0c\u76f8\u5bf9\u4e8e\u4f7f\u7528\u7c7b\u540d.__init__\u65b9\u6cd5\uff0c\u8981\u628a\u6bcf\u4e2a\u7236\u7c7b\u5168\u90e8\u5199\u4e00\u904d # \u800csuper\u53ea\u7528\u4e00\u53e5\u8bdd\uff0c\u6267\u884c\u4e86\u5168\u90e8\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4f55\u591a\u7ee7\u627f\u9700\u8981\u5168\u90e8\u4f20\u53c2\u7684\u4e00\u4e2a\u539f\u56e0 # super(Grandson, self).__init__(name, age, gender) super () . __init__ ( name , age , gender ) print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) print ( Grandson . __mro__ ) #C3\u7b97\u6cd5\u83b7\u5f97super\u8c03\u7528\u7236\u7c7b\u65f6\u7684\u987a\u5e8f gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) print ( '\u6027\u522b\uff1a' , gs . gender ) print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c\uff1a ****** \u591a\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** ( < class ' __main__ . Grandson '>, <class ' __main__ . Son1 '>, <class ' __main__ . Son2 '>, <class ' __main__ . Parent '>, <class ' object '>) Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 #\u53ea\u88ab\u8c03\u7528\u4e86\u4e00\u6b21 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 \u6027\u522b\uff1a \u7537 ****** \u591a\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** \u6ce8\u610f\uff1a \u00b6 \u4ee5\u4e0a2\u4e2a\u4ee3\u7801\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u540c \u5982\u679c2\u4e2a\u5b50\u7c7b\u4e2d\u90fd\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u5f53\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7\u7236\u7c7b\u540d\u8c03\u7528\u65f6\uff0cparent\u88ab\u6267\u884c\u4e862\u6b21 \u5982\u679c2\u4e2a\u5b50\u7c7b\u4e2d\u90fd\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u5f53\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7super\u8c03\u7528\u65f6\uff0cparent\u88ab\u6267\u884c\u4e861\u6b21 *args, **kwargs \u89e3\u91ca \u00b6 def test2 ( a , b , * args , ** kwargs ): print ( \"------\" ) print ( a ) print ( b ) print ( args ) print ( kwargs ) def test1 ( a , b , * args , ** kwargs ): print ( a ) print ( b ) print ( args ) print ( kwargs ) # test2(a, b, args, kwargs) # \u76f8\u5f53\u4e8etest2(11, 22, (33, 44, 55, 66), {\"name\":\"laowang\", \"age\":18}) # test2(a, b, *args, kwargs) # \u76f8\u5f53\u4e8etest2(11, 22, 33, 44, 55, 66, {\"name\":\"laowang\", \"age\":18}) test2 ( a , b , * args , ** kwargs ) # \u76f8\u5f53\u4e8etest2(11, 22, 33, 44, 55, 66, name=\"laowang\", age=18) #\u6240\u4ee5\u4f20\u9012\u53c2\u6570\u4e5f\u8981\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u7c7b\u4f3c\u4e8e\u81ea\u52a8\u62c6\u5305 #*args, **kwargs\u4e0d\u4ec5\u662f\u53ef\u4ee5\u653e\u5728\u578b\u53c2\u4e2d,\u4e5f\u662f\u53ef\u4ee5\u653e\u5728\u5b9e\u53c2\u4e2d\u7684 test1 ( 11 , 22 , 33 , 44 , 55 , 66 , name = \"laowang\" , age = 18 ) \u8fd0\u884c\u7ed3\u679c 11 22 ( 33 , 44 , 55 , 66 ) { 'name' : 'laowang' , 'age' : 18 } ------ 11 22 ( 33 , 44 , 55 , 66 ) { 'name' : 'laowang' , 'age' : 18 } 3. \u5355\u7ee7\u627f\u4e2dsuper \u00b6 print ( \"******\u5355\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name ): print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age ): print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age super () . __init__ ( name ) # \u5355\u7ee7\u627f\u4e0d\u80fd\u63d0\u4f9b\u5168\u90e8\u53c2\u6570 print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) super () . __init__ ( name , age ) # \u5355\u7ee7\u627f\u4e0d\u80fd\u63d0\u4f9b\u5168\u90e8\u53c2\u6570 print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) #print('\u6027\u522b\uff1a', gs.gender) print ( \"******\u5355\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c ****** \u5355\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 ****** \u5355\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** \u603b\u7ed3 \u00b6 super(). init__\u76f8\u5bf9\u4e8e\u7c7b\u540d.__init \uff0c\u5728\u5355\u7ee7\u627f\u4e0a\u7528\u6cd5\u57fa\u672c\u65e0\u5dee \u4f46\u5728\u591a\u7ee7\u627f\u4e0a\u6709\u533a\u522b\uff0csuper\u65b9\u6cd5\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u7236\u7c7b\u7684\u65b9\u6cd5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u800c\u4f7f\u7528\u7c7b\u540d\u7684\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u65b9\u6cd5\u88ab\u6267\u884c\u591a\u6b21\uff0c\u5177\u4f53\u770b\u524d\u9762\u7684\u8f93\u51fa\u7ed3\u679c \u591a\u7ee7\u627f\u65f6\uff0c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u5bf9\u7236\u7c7b\u7684\u4f20\u53c2\u6570\uff0c\u5e94\u8be5\u662f\u7531\u4e8epython\u4e2dsuper\u7684\u7b97\u6cd5\u5bfc\u81f4\u7684\u539f\u56e0\uff0c\u5fc5\u987b\u628a\u53c2\u6570\u5168\u90e8\u4f20\u9012\uff0c\u5426\u5219\u4f1a\u62a5\u9519 \u5355\u7ee7\u627f\u65f6\uff0c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u5219\u4e0d\u80fd\u5168\u90e8\u4f20\u9012\uff0c\u53ea\u80fd\u4f20\u7236\u7c7b\u65b9\u6cd5\u6240\u9700\u7684\u53c2\u6570\uff0c\u5426\u5219\u4f1a\u62a5\u9519 \u591a\u7ee7\u627f\u65f6\uff0c\u76f8\u5bf9\u4e8e\u4f7f\u7528\u7c7b\u540d.__init__\u65b9\u6cd5\uff0c\u8981\u628a\u6bcf\u4e2a\u7236\u7c7b\u5168\u90e8\u5199\u4e00\u904d, \u800c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u53ea\u9700\u5199\u4e00\u53e5\u8bdd\u4fbf\u6267\u884c\u4e86\u5168\u90e8\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4f55\u591a\u7ee7\u627f\u9700\u8981\u5168\u90e8\u4f20\u53c2\u7684\u4e00\u4e2a\u539f\u56e0 \u5c0f\u8bd5\u725b\u5200(\u4ee5\u4e0b\u4e3a\u9762\u8bd5\u9898) \u00b6 \u4ee5\u4e0b\u7684\u4ee3\u7801\u7684\u8f93\u51fa\u5c06\u662f\u4ec0\u4e48? \u8bf4\u51fa\u4f60\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u3002 class Parent ( object ): x = 1 class Child1 ( Parent ): pass class Child2 ( Parent ): pass print ( Parent . x , Child1 . x , Child2 . x ) Child1 . x = 2 print ( Parent . x , Child1 . x , Child2 . x ) Parent . x = 3 print ( Parent . x , Child1 . x , Child2 . x ) \u7b54\u6848, \u4ee5\u4e0a\u4ee3\u7801\u7684\u8f93\u51fa\u662f\uff1a 1 1 1 1 2 1 3 2 3 \u4f7f\u4f60\u56f0\u60d1\u6216\u662f\u60ca\u5947\u7684\u662f\u5173\u4e8e\u6700\u540e\u4e00\u884c\u7684\u8f93\u51fa\u662f 3 2 3 \u800c\u4e0d\u662f 3 2 1\u3002\u4e3a\u4ec0\u4e48\u6539\u53d8\u4e86 Parent.x \u7684\u503c\u8fd8\u4f1a\u6539\u53d8 Child2.x \u7684\u503c\uff0c\u4f46\u662f\u540c\u65f6 Child1.x \u503c\u5374\u6ca1\u6709\u6539\u53d8\uff1f \u8fd9\u4e2a\u7b54\u6848\u7684\u5173\u952e\u662f\uff0c\u5728 Python \u4e2d\uff0c\u7c7b\u53d8\u91cf\u5728\u5185\u90e8\u662f\u4f5c\u4e3a\u5b57\u5178\u5904\u7406\u7684\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u540d\u5b57\u6ca1\u6709\u5728\u5f53\u524d\u7c7b\u7684\u5b57\u5178\u4e2d\u53d1\u73b0\uff0c\u5c06\u641c\u7d22\u7956\u5148\u7c7b\uff08\u6bd4\u5982\u7236\u7c7b\uff09\u76f4\u5230\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u540d\u88ab\u627e\u5230\uff08\u5982\u679c\u8fd9\u4e2a\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u540d\u65e2\u6ca1\u6709\u5728\u81ea\u5df1\u6240\u5728\u7684\u7c7b\u53c8\u6ca1\u6709\u5728\u7956\u5148\u7c7b\u4e2d\u627e\u5230\uff0c\u4f1a\u5f15\u53d1\u4e00\u4e2a AttributeError \u5f02\u5e38 \uff09\u3002 \u56e0\u6b64\uff0c\u5728\u7236\u7c7b\u4e2d\u8bbe\u7f6e x = 1 \u4f1a\u4f7f\u5f97\u7c7b\u53d8\u91cf x \u5728\u5f15\u7528\u8be5\u7c7b\u548c\u5176\u4efb\u4f55\u5b50\u7c7b\u4e2d\u7684\u503c\u4e3a 1\u3002\u8fd9\u5c31\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2a print \u8bed\u53e5\u7684\u8f93\u51fa\u662f 1 1 1\u3002 \u968f\u540e\uff0c\u5982\u679c\u4efb\u4f55\u5b83\u7684\u5b50\u7c7b\u91cd\u5199\u4e86\u8be5\u503c\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u6267\u884c\u8bed\u53e5 Child1.x = 2\uff09\uff0c\u7136\u540e\uff0c\u8be5\u503c\u4ec5\u4ec5\u5728\u5b50\u7c7b\u4e2d\u88ab\u6539\u53d8\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u4e2a print \u8bed\u53e5\u7684\u8f93\u51fa\u662f 1 2 1\u3002 \u6700\u540e\uff0c\u5982\u679c\u8be5\u503c\u5728\u7236\u7c7b\u4e2d\u88ab\u6539\u53d8\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u6267\u884c\u8bed\u53e5 Parent.x = 3\uff09\uff0c\u8fd9\u4e2a\u6539\u53d8\u4f1a\u5f71\u54cd\u5230\u4efb\u4f55\u672a\u91cd\u5199\u8be5\u503c\u7684\u5b50\u7c7b\u5f53\u4e2d\u7684\u503c\uff08\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u88ab\u5f71\u54cd\u7684\u5b50\u7c7b\u662f Child2\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u4e2a print \u8f93\u51fa\u662f 3 2 3\u3002 13.2 \u518d\u8bba\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u00b6 \u518d\u8bba\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u00b6 1. \u7c7b\u5c5e\u6027\u3001\u5b9e\u4f8b\u5c5e\u6027 \u00b6 \u5b83\u4eec\u5728\u5b9a\u4e49\u548c\u4f7f\u7528\u4e2d\u6709\u6240\u533a\u522b\uff0c\u800c\u6700\u672c\u8d28\u7684\u533a\u522b\u662f\u5185\u5b58\u4e2d\u4fdd\u5b58\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c \u5b9e\u4f8b\u5c5e\u6027\u5c5e\u4e8e\u5bf9\u8c61 \u7c7b\u5c5e\u6027\u5c5e\u4e8e\u7c7b class Province ( object ): # \u7c7b\u5c5e\u6027 country = '\u4e2d\u56fd' def __init__ ( self , name ): # \u5b9e\u4f8b\u5c5e\u6027 self . name = name # \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61 obj = Province ( '\u5c71\u4e1c\u7701' ) # \u76f4\u63a5\u8bbf\u95ee\u5b9e\u4f8b\u5c5e\u6027 print ( obj . name ) # \u76f4\u63a5\u8bbf\u95ee\u7c7b\u5c5e\u6027 Province . country \u7531\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u3010\u5b9e\u4f8b\u5c5e\u6027\u9700\u8981\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u3011\u3010\u7c7b\u5c5e\u6027\u901a\u8fc7\u7c7b\u8bbf\u95ee\u3011\uff0c\u5728\u4f7f\u7528\u4e0a\u53ef\u4ee5\u770b\u51fa\u5b9e\u4f8b\u5c5e\u6027\u548c\u7c7b\u5c5e\u6027\u7684\u5f52\u5c5e\u662f\u4e0d\u540c\u7684\u3002 \u5176\u5728\u5185\u5bb9\u7684\u5b58\u50a8\u65b9\u5f0f\u7c7b\u4f3c\u5982\u4e0b\u56fe\uff1a \u7531\u4e0a\u56fe\u770b\u51fa\uff1a \u7c7b\u5c5e\u6027\u5728\u5185\u5b58\u4e2d\u53ea\u4fdd\u5b58\u4e00\u4efd \u5b9e\u4f8b\u5c5e\u6027\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\u90fd\u8981\u4fdd\u5b58\u4e00\u4efd \u5e94\u7528\u573a\u666f\uff1a \u00b6 \u901a\u8fc7\u7c7b\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u6bcf\u4e2a\u5bf9\u8c61\u9700\u8981\u5177\u6709\u76f8\u540c\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7c7b\u5c5e\u6027\uff0c\u7528\u4e00\u4efd\u65e2\u53ef 2. \u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u00b6 \u65b9\u6cd5\u5305\u62ec\uff1a\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u4e09\u79cd\u65b9\u6cd5\u5728\u5185\u5b58\u4e2d\u90fd\u5f52\u5c5e\u4e8e\u7c7b\uff0c\u533a\u522b\u5728\u4e8e\u8c03\u7528\u65b9\u5f0f\u4e0d\u540c\u3002 \u5b9e\u4f8b\u65b9\u6cd5\uff1a\u7531\u5bf9\u8c61\u8c03\u7528\uff1b\u81f3\u5c11\u4e00\u4e2aself\u53c2\u6570\uff1b\u6267\u884c\u5b9e\u4f8b\u65b9\u6cd5\u65f6\uff0c\u81ea\u52a8\u5c06\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5bf9\u8c61\u8d4b\u503c\u7ed9self\uff1b \u7c7b\u65b9\u6cd5\uff1a\u7531\u7c7b\u8c03\u7528\uff1b \u81f3\u5c11\u4e00\u4e2acls\u53c2\u6570\uff1b\u6267\u884c\u7c7b\u65b9\u6cd5\u65f6\uff0c\u81ea\u52a8\u5c06\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7c7b\u8d4b\u503c\u7ed9cls\uff1b \u9759\u6001\u65b9\u6cd5\uff1a\u7531\u7c7b\u8c03\u7528\uff1b\u65e0\u9ed8\u8ba4\u53c2\u6570\uff1b #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 8 22:52:19 2019 @author: zzh \"\"\" class Foo ( object ): def __init__ ( self , name ): self . name = name def ord_func ( self ): \"\"\" \u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u81f3\u5c11\u6709\u4e00\u4e2aself\u53c2\u6570 \"\"\" # print(self.name) print ( '\u5b9e\u4f8b\u65b9\u6cd5' ) @classmethod def class_func ( cls ): \"\"\" \u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u81f3\u5c11\u6709\u4e00\u4e2acls\u53c2\u6570 \"\"\" print ( '\u7c7b\u65b9\u6cd5' ) @staticmethod def static_func (): #(\u4e3b\u8981\u662f\u9632\u6b62\u51fa\u73b0\u53c8\u6709\u7c7b\u53c8\u6709\u7c7b\u5916\u7684\u51fd\u6570\u51fa\u73b0) \"\"\" \u5b9a\u4e49\u9759\u6001\u65b9\u6cd5 \uff0c\u65e0\u9ed8\u8ba4\u53c2\u6570\"\"\" print ( '\u9759\u6001\u65b9\u6cd5' ) f = Foo ( \"\u4e2d\u56fd\" ) # \u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5 f . ord_func () # \u8c03\u7528\u7c7b\u65b9\u6cd5 Foo . class_func () # \u8c03\u7528\u9759\u6001\u65b9\u6cd5 Foo . static_func () \u8fd0\u884c\u7ed3\u679c \u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u5bf9\u6bd4 \u00b6 \u76f8\u540c\u70b9\uff1a\u5bf9\u4e8e\u6240\u6709\u7684\u65b9\u6cd5\u800c\u8a00\uff0c\u5747\u5c5e\u4e8e\u7c7b\uff0c\u6240\u4ee5 \u5728\u5185\u5b58\u4e2d\u4e5f\u53ea\u4fdd\u5b58\u4e00\u4efd \u4e0d\u540c\u70b9\uff1a\u65b9\u6cd5\u8c03\u7528\u8005\u4e0d\u540c\u3001\u8c03\u7528\u65b9\u6cd5\u65f6\u81ea\u52a8\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u540c\u3002 \u6ce8\u610f: \u7c7b\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u7c7b\u5c5e\u6027\u53ca\u7c7b\u65b9\u6cd5,\u5b9e\u4f8b\u5bf9\u8c61\u4e09\u7c7b\u90fd\u53ef\u8fdb\u884c\u8c03\u7528. property\u5c5e\u6027 \u00b6 1. \u4ec0\u4e48\u662fproperty\u5c5e\u6027 \u00b6 \u4e00\u79cd\u7528\u8d77\u6765\u50cf\u662f\u4f7f\u7528\u7684\u5b9e\u4f8b\u5c5e\u6027\u4e00\u6837\u7684\u7279\u6b8a\u5c5e\u6027\uff0c\u53ef\u4ee5\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u65b9\u6cd5(\u4e0d\u7528\u5bf9\u8fd9\u4e2a\u65b9\u6cd5\u52a0\u62ec\u53f7) # ############### \u5b9a\u4e49 ############### class Foo : def func ( self ): pass # \u5b9a\u4e49property\u5c5e\u6027 @property def prop ( self ): pass # ############### \u8c03\u7528 ############### foo_obj = Foo () foo_obj . func () # \u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5 foo_obj . prop # \u8c03\u7528property\u5c5e\u6027 property\u5c5e\u6027\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\uff1a \u00b6 \u5b9a\u4e49\u65f6\uff0c\u5728\u5b9e\u4f8b\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0 @property \u88c5\u9970\u5668\uff1b\u5e76\u4e14\u4ec5\u6709\u4e00\u4e2aself\u53c2\u6570 \u8c03\u7528\u65f6\uff0c\u65e0\u9700\u62ec\u53f7 \u65b9\u6cd5\uff1a foo_obj . func () property\u5c5e\u6027 \uff1a foo_obj . prop 2. \u7b80\u5355\u7684\u5b9e\u4f8b \u00b6 \u5bf9\u4e8e\u4eac\u4e1c\u5546\u57ce\u4e2d\u663e\u793a\u7535\u8111\u4e3b\u673a\u7684\u5217\u8868\u9875\u9762\uff0c\u6bcf\u6b21\u8bf7\u6c42\u4e0d\u53ef\u80fd\u628a\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u663e\u793a\u5230\u9875\u9762\u4e0a\uff0c\u800c\u662f\u901a\u8fc7\u5206\u9875\u7684\u529f\u80fd\u5c40\u90e8\u663e\u793a\uff0c\u6240\u4ee5\u5728\u5411\u6570\u636e\u5e93\u4e2d\u8bf7\u6c42\u6570\u636e\u65f6\u5c31\u8981\u663e\u793a\u7684\u6307\u5b9a\u83b7\u53d6\u4ece\u7b2cm\u6761\u5230\u7b2cn\u6761\u7684\u6240\u6709\u6570\u636e \u8fd9\u4e2a\u5206\u9875\u7684\u529f\u80fd\u5305\u62ec\uff1a \u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684\u5f53\u524d\u9875\u548c\u603b\u6570\u636e\u6761\u6570\u8ba1\u7b97\u51fa m \u548c n \u6839\u636em \u548c n \u53bb\u6570\u636e\u5e93\u4e2d\u8bf7\u6c42\u6570\u636e #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 8 22:52:19 2019 @author: zzh \"\"\" # ############### \u5b9a\u4e49 ############### class Pager : def __init__ ( self , current_page ): # \u7528\u6237\u5f53\u524d\u8bf7\u6c42\u7684\u9875\u7801\uff08\u7b2c\u4e00\u9875\u3001\u7b2c\u4e8c\u9875...\uff09 self . current_page = current_page # \u6bcf\u9875\u9ed8\u8ba4\u663e\u793a10\u6761\u6570\u636e self . per_items = 10 @property def start ( self ): val = ( self . current_page - 1 ) * self . per_items return val @property def end ( self ): val = self . current_page * self . per_items return val if __name__ == \"__main__\" : # ############### \u8c03\u7528 ############### p = Pager ( 1 ) print ( p . start ) # \u5c31\u662f\u8d77\u59cb\u503c\uff0c\u5373\uff1am print ( p . end ) # \u5c31\u662f\u7ed3\u675f\u503c\uff0c\u5373\uff1an p = Pager ( 100 ) print ( p . start ) # \u5c31\u662f\u8d77\u59cb\u503c\uff0c\u5373\uff1am print ( p . end ) # \u5c31\u662f\u7ed3\u675f\u503c\uff0c\u5373\uff1an \u6267\u884c\u7ed3\u679c 0 10 990 1000 \u4ece\u4e0a\u8ff0\u53ef\u89c1 \u00b6 Python\u7684property\u5c5e\u6027\u7684\u529f\u80fd\u662f\uff1aproperty\u5c5e\u6027\u5185\u90e8\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u903b\u8f91\u8ba1\u7b97\uff0c\u6700\u7ec8\u5c06\u8ba1\u7b97\u7ed3\u679c\u8fd4\u56de\u3002(\u590d\u6742\u7684\u8ba1\u7b97\u5c01\u88c5\u5230\u65b9\u6cd5\u91cc\u8fdb\u884c\u8ba1\u7b97,\u4f46\u662f\u8c03\u7528\u7684\u65f6\u5019\u4f7f\u7528\u5c5e\u6027\u8fdb\u884c\u8c03\u7528.\u8fd9\u662f\u5c01\u88c5\u7684\u597d\u5904,\u800c\u4e14\u6bd4\u4f7f\u7528\u65b9\u6cd5\u7684\u597d\u5904\u662f\u4e0d\u7528\u8003\u8651\u4f20\u9012\u51e0\u4e2a\u53c2\u6570,\u8fd9\u6837\u4f1a\u65b9\u4fbf\u5f88\u591a) 3. property\u5c5e\u6027\u7684\u6709\u4e24\u79cd\u65b9\u5f0f \u00b6 \u88c5\u9970\u5668 \u5373\uff1a\u5728\u65b9\u6cd5\u4e0a\u5e94\u7528\u88c5\u9970\u5668 \u7c7b\u5c5e\u6027 \u5373\uff1a\u5728\u7c7b\u4e2d\u5b9a\u4e49\u503c\u4e3aproperty\u5bf9\u8c61\u7684\u7c7b\u5c5e\u6027 3.1 \u88c5\u9970\u5668\u65b9\u5f0f \u00b6 \u5728\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4e0a\u5e94\u7528@property\u88c5\u9970\u5668 Python\u4e2d\u7684\u7c7b\u6709 \u7ecf\u5178\u7c7b \u548c \u65b0\u5f0f\u7c7b \uff0c \u65b0\u5f0f\u7c7b \u7684\u5c5e\u6027\u6bd4 \u7ecf\u5178\u7c7b \u7684\u5c5e\u6027\u4e30\u5bcc\u3002\uff08 \u5982\u679c\u7c7b\u7ee7object\uff0c\u90a3\u4e48\u8be5\u7c7b\u662f\u65b0\u5f0f\u7c7b \uff09 \u7ecf\u5178\u7c7b\uff0c\u5177\u6709\u4e00\u79cd@property\u88c5\u9970\u5668 \u00b6 # ############### \u5b9a\u4e49 ############### class Goods : @property def price ( self ): return \"laowang\" # ############### \u8c03\u7528 ############### obj = Goods () result = obj . price # \u81ea\u52a8\u6267\u884c @property \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c print ( result ) \u65b0\u5f0f\u7c7b\uff0c\u5177\u6709\u4e09\u79cd@property\u88c5\u9970\u5668 \u00b6 #coding=utf-8 # ############### \u5b9a\u4e49 ############### class Goods : \"\"\"python3\u4e2d\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b \u4ee5python2\u30013\u6267\u884c\u6b64\u7a0b\u5e8f\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u56e0\u4e3a\u53ea\u6709\u5728python3\u4e2d\u624d\u6709@xxx.setter @xxx.deleter \"\"\" @property def price ( self ): print ( '@property' ) @price.setter def price ( self , value ): print ( '@price.setter' ) @price.deleter def price ( self ): print ( '@price.deleter' ) # ############### \u8c03\u7528 ############### obj = Goods () obj . price # \u81ea\u52a8\u6267\u884c @property \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c obj . price = 123 # \u81ea\u52a8\u6267\u884c @price.setter \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u5c06 123 \u8d4b\u503c\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570 del obj . price # \u81ea\u52a8\u6267\u884c @price.deleter \u4fee\u9970\u7684 price \u65b9\u6cd5 \u6ce8\u610f \u00b6 \u7ecf\u5178\u7c7b\u4e2d\u7684\u5c5e\u6027\u53ea\u6709\u4e00\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5176\u5bf9\u5e94\u88ab @property \u4fee\u9970\u7684\u65b9\u6cd5 \u65b0\u5f0f\u7c7b\u4e2d\u7684\u5c5e\u6027\u6709\u4e09\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5e76\u5206\u522b\u5bf9\u5e94\u4e86\u4e09\u4e2a\u88ab@property\u3001@\u65b9\u6cd5\u540d.setter\u3001@\u65b9\u6cd5\u540d.deleter\u4fee\u9970\u7684\u65b9\u6cd5 \u7531\u4e8e\u65b0\u5f0f\u7c7b\u4e2d\u5177\u6709\u4e09\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b83\u4eec\u51e0\u4e2a\u5c5e\u6027\u7684\u8bbf\u95ee\u7279\u70b9\uff0c\u5206\u522b\u5c06\u4e09\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u5bf9\u540c\u4e00\u4e2a\u5c5e\u6027\uff1a\u83b7\u53d6\u3001\u4fee\u6539\u3001\u5220\u9664(\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u7528\u7684\u65f6\u5019\u7b80\u4ecb) class Goods ( object ): def __init__ ( self ): # \u539f\u4ef7 self . original_price = 100 # \u6298\u6263 self . discount = 0.8 @property def price ( self ): # \u5b9e\u9645\u4ef7\u683c = \u539f\u4ef7 * \u6298\u6263 new_price = self . original_price * self . discount return new_price @price.setter def price ( self , value ): self . original_price = value #\u53ef\u4ee5\u4f5c\u4e00\u4e9b\u4fee\u6539 @price.deleter def price ( self ): del self . original_price #\u5220\u9664\u5b9e\u4f8b\u5c5e\u6027 obj = Goods () obj . price # \u83b7\u53d6\u5546\u54c1\u4ef7\u683c obj . price = 200 # \u4fee\u6539\u5546\u54c1\u539f\u4ef7 del obj . price # \u5220\u9664\u5546\u54c1\u539f\u4ef7 \u4e00\u822c\u7528\u7684\u5c31\u662f\u83b7\u53d6\u6839\u8bbe\u7f6e\u7684\u5c5e\u6027 @property @price.setter(\u8bbe\u7f6e) 3.2 \u7c7b\u5c5e\u6027\u65b9\u5f0f\uff0c\u521b\u5efa\u503c\u4e3aproperty\u5bf9\u8c61\u7684\u7c7b\u5c5e\u6027 \u00b6 \u5f53\u4f7f\u7528\u7c7b\u5c5e\u6027\u7684\u65b9\u5f0f\u521b\u5efaproperty\u5c5e\u6027\u65f6\uff0c \u7ecf\u5178\u7c7b \u548c \u65b0\u5f0f\u7c7b \u65e0\u533a\u522b class Foo : def get_bar ( self ): return 'laowang' BAR = property ( get_bar ) #\u76f8\u5f53\u4e8e\u7c7b\u5c5e\u6027,\u53ea\u4e0d\u8fc7\u662f\u5bf9\u8c61\u65b9\u6cd5\u7684\u8fd4\u56de\u503c obj = Foo () reuslt = obj . BAR # \u81ea\u52a8\u8c03\u7528get_bar\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c print ( reuslt ) property\u65b9\u6cd5\u4e2d\u6709\u4e2a\u56db\u4e2a\u53c2\u6570 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027 \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027 \uff1d XXX \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 del \u5bf9\u8c61.\u5c5e\u6027 \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u56db\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027. doc \uff0c\u6b64\u53c2\u6570\u662f\u8be5\u5c5e\u6027\u7684\u63cf\u8ff0\u4fe1\u606f #coding=utf-8 class Foo ( object ): def get_bar ( self ): print ( \"getter...\" ) return 'laowang' def set_bar ( self , value ): \"\"\"\u5fc5\u987b\u4e24\u4e2a\u53c2\u6570\"\"\" print ( \"setter...\" ) return 'set value' + value def del_bar ( self ): print ( \"deleter...\" ) return 'laowang' BAR = property ( get_bar , set_bar , del_bar , \"description...\" ) obj = Foo () obj . BAR # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1aget_bar obj . BAR = \"alex\" # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1aset_bar\u65b9\u6cd5\uff0c\u5e76\u5c06\u201calex\u201d\u5f53\u4f5c\u53c2\u6570\u4f20\u5165 desc = Foo . BAR . __doc__ # \u81ea\u52a8\u83b7\u53d6\u7b2c\u56db\u4e2a\u53c2\u6570\u4e2d\u8bbe\u7f6e\u7684\u503c\uff1adescription... print ( desc ) del obj . BAR # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1adel_bar\u65b9\u6cd5 \u7531\u4e8e \u7c7b\u5c5e\u6027\u65b9\u5f0f \u521b\u5efaproperty\u5c5e\u6027\u5177\u67093\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b83\u4eec\u51e0\u4e2a\u5c5e\u6027\u7684\u8bbf\u95ee\u7279\u70b9\uff0c\u5206\u522b\u5c06\u4e09\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u5bf9\u540c\u4e00\u4e2a\u5c5e\u6027\uff1a\u83b7\u53d6\u3001\u4fee\u6539\u3001\u5220\u9664 class Goods ( object ): def __init__ ( self ): # \u539f\u4ef7 self . original_price = 100 # \u6298\u6263 self . discount = 0.8 def get_price ( self ): # \u5b9e\u9645\u4ef7\u683c = \u539f\u4ef7 * \u6298\u6263 new_price = self . original_price * self . discount return new_price def set_price ( self , value ): self . original_price = value def del_price ( self ): del self . original_price PRICE = property ( get_price , set_price , del_price , '\u4ef7\u683c\u5c5e\u6027\u63cf\u8ff0...' ) obj = Goods () obj . PRICE # \u83b7\u53d6\u5546\u54c1\u4ef7\u683c obj . PRICE = 200 # \u4fee\u6539\u5546\u54c1\u539f\u4ef7 del obj . PRICE # \u5220\u9664\u5546\u54c1\u539f\u4ef7 4. Django\u6846\u67b6\u4e2d\u5e94\u7528\u4e86property\u5c5e\u6027\uff08\u4e86\u89e3\uff09 \u00b6 WEB\u6846\u67b6 Django \u7684\u89c6\u56fe\u4e2d request.POST \u5c31\u662f\u4f7f\u7528\u7684\u7c7b\u5c5e\u6027\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5c5e\u6027 class WSGIRequest ( http . HttpRequest ): def __init__ ( self , environ ): script_name = get_script_name ( environ ) path_info = get_path_info ( environ ) if not path_info : # Sometimes PATH_INFO exists, but is empty (e.g. accessing # the SCRIPT_NAME URL without a trailing slash). We really need to # operate as if they'd requested '/'. Not amazingly nice to force # the path like this, but should be harmless. path_info = '/' self . environ = environ self . path_info = path_info self . path = ' %s / %s ' % ( script_name . rstrip ( '/' ), path_info . lstrip ( '/' )) self . META = environ self . META [ 'PATH_INFO' ] = path_info self . META [ 'SCRIPT_NAME' ] = script_name self . method = environ [ 'REQUEST_METHOD' ] . upper () _ , content_params = cgi . parse_header ( environ . get ( 'CONTENT_TYPE' , '' )) if 'charset' in content_params : try : codecs . lookup ( content_params [ 'charset' ]) except LookupError : pass else : self . encoding = content_params [ 'charset' ] self . _post_parse_error = False try : content_length = int ( environ . get ( 'CONTENT_LENGTH' )) except ( ValueError , TypeError ): content_length = 0 self . _stream = LimitedStream ( self . environ [ 'wsgi.input' ], content_length ) self . _read_started = False self . resolver_match = None def _get_scheme ( self ): return self . environ . get ( 'wsgi.url_scheme' ) def _get_request ( self ): warnings . warn ( '`request.REQUEST` is deprecated, use `request.GET` or ' '`request.POST` instead.' , RemovedInDjango19Warning , 2 ) if not hasattr ( self , '_request' ): self . _request = datastructures . MergeDict ( self . POST , self . GET ) return self . _request @cached_property def GET ( self ): # The WSGI spec says 'QUERY_STRING' may be absent. raw_query_string = get_bytes_from_wsgi ( self . environ , 'QUERY_STRING' , '' ) return http . QueryDict ( raw_query_string , encoding = self . _encoding ) # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### def _get_post ( self ): if not hasattr ( self , '_post' ): self . _load_post_and_files () return self . _post # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### def _set_post ( self , post ): self . _post = post @cached_property def COOKIES ( self ): raw_cookie = get_str_from_wsgi ( self . environ , 'HTTP_COOKIE' , '' ) return http . parse_cookie ( raw_cookie ) def _get_files ( self ): if not hasattr ( self , '_files' ): self . _load_post_and_files () return self . _files # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### POST = property ( _get_post , _set_post ) FILES = property ( _get_files ) REQUEST = property ( _get_request ) \u7efc\u4e0a\u6240\u8ff0: \u00b6 \u5b9a\u4e49property\u5c5e\u6027\u5171\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u3010\u88c5\u9970\u5668\u3011\u548c\u3010\u7c7b\u5c5e\u6027\u3011\uff0c\u800c\u3010\u88c5\u9970\u5668\u3011\u65b9\u5f0f\u9488\u5bf9\u7ecf\u5178\u7c7b\u548c\u65b0\u5f0f\u7c7b\u53c8\u6709\u6240\u4e0d\u540c\u3002 \u901a\u8fc7\u4f7f\u7528property\u5c5e\u6027\uff0c\u80fd\u591f\u7b80\u5316\u8c03\u7528\u8005\u5728\u83b7\u53d6\u6570\u636e\u7684\u6d41\u7a0b 13.4property\u5c5e\u6027-\u5e94\u7528 \u00b6 1. \u79c1\u6709\u5c5e\u6027\u6dfb\u52a0getter\u548csetter\u65b9\u6cd5(python\u4e00\u822c\u662f\u4e0d\u7528\u7684) \u00b6 class Money ( object ): def __init__ ( self ): self . __money = 0 #\u79c1\u6709\u5c5e\u6027 def getMoney ( self ): #get\u65b9\u6cd5 return self . __money def setMoney ( self , value ): #set\u65b9\u6cd5 if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" ) 2. \u4f7f\u7528property\u5347\u7ea7getter\u548csetter\u65b9\u6cd5 \u00b6 class Money ( object ): def __init__ ( self ): self . __money = 0 def getMoney ( self ): return self . __money def setMoney ( self , value ): if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" ) # \u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\uff0c\u5f53\u5bf9\u8fd9\u4e2amoney\u8bbe\u7f6e\u503c\u65f6\u8c03\u7528setMoney,\u5f53\u83b7\u53d6\u503c\u65f6\u8c03\u7528getMoney money = property ( getMoney , setMoney ) #\u7c7b\u5c5e\u6027 a = Money () a . money = 100 # \u8c03\u7528setMoney\u65b9\u6cd5 print ( a . money ) # \u8c03\u7528getMoney\u65b9\u6cd5 #100 3. \u4f7f\u7528property\u53d6\u4ee3getter\u548csetter\u65b9\u6cd5 \u00b6 \u91cd\u65b0\u5b9e\u73b0\u4e00\u4e2a\u5c5e\u6027\u7684\u8bbe\u7f6e\u548c\u8bfb\u53d6\u65b9\u6cd5,\u53ef\u505a\u8fb9\u754c\u5224\u5b9a class Money ( object ): def __init__ ( self ): self . __money = 0 # \u4f7f\u7528\u88c5\u9970\u5668\u5bf9money\u8fdb\u884c\u88c5\u9970\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u53ebmoney\u7684\u5c5e\u6027\uff0c\u5f53\u8c03\u7528\u83b7\u53d6money\u7684\u503c\u65f6\uff0c\u8c03\u7528\u88c5\u9970\u7684\u65b9\u6cd5 @property def money ( self ): return self . __money # \u4f7f\u7528\u88c5\u9970\u5668\u5bf9money\u8fdb\u884c\u88c5\u9970\uff0c\u5f53\u5bf9money\u8bbe\u7f6e\u503c\u65f6\uff0c\u8c03\u7528\u88c5\u9970\u7684\u65b9\u6cd5 @money.setter def money ( self , value ): if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" ) a = Money () a . money = 100 print ( a . money ) 13.5 \u9b54\u6cd5\u5c5e\u6027 \u00b6 \u65e0\u8bba\u4eba\u6216\u4e8b\u7269\u5f80\u5f80\u90fd\u6709\u4e0d\u6309\u5957\u8def\u51fa\u724c\u7684\u60c5\u51b5\uff0cPython\u7684\u7c7b\u5c5e\u6027\u4e5f\u662f\u5982\u6b64\uff0c\u5b58\u5728\u7740\u4e00\u4e9b\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5c5e\u6027\uff0c\u8be6\u60c5\u5982\u4e0b\uff1a 1. __doc__ \u00b6 \u8868\u793a\u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f class Foo : \"\"\" \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 \"\"\" #\u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f def func ( self ): pass print ( Foo . __doc__ ) \u6267\u884c\u7ed3\u679c \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 \u4e5f\u53ef\u4ee5\u4f7f\u7528help\u51fd\u6570\u83b7\u5f97\u540c\u6837\u7684\u6548\u679c help ( Foo ) Help on class Foo in module __main__ : class Foo ( builtins . object ) | \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 | | Methods defined here : | | func ( self ) | | ---------------------------------------------------------------------- | Data descriptors defined here : | | __dict__ | dictionary for instance variables ( if defined ) | | __weakref__ | list of weak references to the object ( if defined ) 2. __module__ \u548c __class__ \u00b6 module \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u5728\u90a3\u4e2a\u6a21\u5757 class \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u7684\u7c7b\u662f\u4ec0\u4e48 test . py # -*- coding:utf-8 -*- class Person ( object ): def __init__ ( self ): self . name = 'laowang' main . py from test import Person obj = Person () print ( obj . __module__ ) # \u8f93\u51fa test \u5373\uff1a\u8f93\u51fa\u6a21\u5757 print ( obj . __class__ ) # \u8f93\u51fa test.Person \u5373\uff1a\u8f93\u51fa\u7c7b \u6267\u884cmain.py test < class ' test . Person '> 3. __init__ \u00b6 \u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u7c7b\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6267\u884c class Person : def __init__ ( self , name ): self . name = name self . age = 18 obj = Person ( 'laowang' ) # \u81ea\u52a8\u6267\u884c\u7c7b\u4e2d\u7684 __init__ \u65b9\u6cd5 4. __del__ \u00b6 \u5f53\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u88ab\u91ca\u653e\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u3002 \u6ce8\uff1a\u6b64\u65b9\u6cd5\u4e00\u822c\u65e0\u987b\u5b9a\u4e49\uff0c\u56e0\u4e3aPython\u662f\u4e00\u95e8\u9ad8\u7ea7\u8bed\u8a00\uff0c\u7a0b\u5e8f\u5458\u5728\u4f7f\u7528\u65f6\u65e0\u9700\u5173\u5fc3\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\uff0c\u56e0\u4e3a\u6b64\u5de5\u4f5c\u90fd\u662f\u4ea4\u7ed9Python\u89e3\u91ca\u5668\u6765\u6267\u884c\uff0c\u6240\u4ee5\uff0c __del__ \u7684\u8c03\u7528\u662f\u7531\u89e3\u91ca\u5668\u5728\u8fdb\u884c\u5783\u573e\u56de\u6536\u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u7684\u3002 class Foo : def __del__ ( self ): pass 5. __call__ \u00b6 \u5bf9\u8c61\u540e\u9762\u52a0\u62ec\u53f7\uff0c\u89e6\u53d1\u6267\u884c\u3002 \u6ce8\uff1a __init__ \u65b9\u6cd5\u7684\u6267\u884c\u662f\u7531\u521b\u5efa\u5bf9\u8c61\u89e6\u53d1\u7684\uff0c\u5373\uff1a \u5bf9\u8c61 = \u7c7b\u540d() \uff1b\u800c\u5bf9\u4e8e __call__ \u65b9\u6cd5\u7684\u6267\u884c\u662f\u7531\u5bf9\u8c61\u540e\u52a0\u62ec\u53f7\u89e6\u53d1\u7684\uff0c\u5373\uff1a \u5bf9\u8c61() \u6216\u8005 \u7c7b()() class Foo : def __init__ ( self ): pass def __call__ ( self , * args , ** kwargs ): print ( '__call__' ) print ( \"\u6211\u662fcall\u65b9\u6cd5\" ) obj = Foo () # \u6267\u884c __init__ obj () # \u6267\u884c __call__ \u6267\u884c\u7ed3\u679c __call__ \u6211\u662f call\u65b9\u6cd5 6. __dict__ \u00b6 \u7c7b\u6216\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027 \u7c7b\u7684\u5b9e\u4f8b\u5c5e\u6027\u5c5e\u4e8e\u5bf9\u8c61\uff1b\u7c7b\u4e2d\u7684\u7c7b\u5c5e\u6027\u548c\u65b9\u6cd5\u7b49\u5c5e\u4e8e\u7c7b\uff0c\u5373\uff1a class Province ( object ): country = 'China' def __init__ ( self , name , count ): self . name = name self . count = count def func ( self , * args , ** kwargs ): print ( 'func' ) # \u83b7\u53d6\u7c7b\u7684\u5c5e\u6027\uff0c\u5373\uff1a\u7c7b\u5c5e\u6027\u3001\u65b9\u6cd5\u3001 print ( Province . __dict__ ) # \u8f93\u51fa\uff1a{'__dict__': <attribute '__dict__' of 'Province' objects>, '__module__': '__main__', 'country': 'China', '__doc__': None, '__weakref__': <attribute '__weakref__' of 'Province' objects>, 'func': <function Province.func at 0x101897950>, '__init__': <function Province.__init__ at 0x1018978c8>} obj1 = Province ( '\u5c71\u4e1c' , 10000 ) print ( obj1 . __dict__ ) # \u83b7\u53d6 \u5bf9\u8c61obj1 \u7684\u5c5e\u6027 # \u8f93\u51fa\uff1a{'count': 10000, 'name': '\u5c71\u4e1c'} obj2 = Province ( '\u5c71\u897f' , 20000 ) print ( obj2 . __dict__ ) # \u83b7\u53d6 \u5bf9\u8c61obj1 \u7684\u5c5e\u6027 # \u8f93\u51fa\uff1a{'count': 20000, 'name': '\u5c71\u897f'} 7. __str__ \u00b6 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __str__ \u65b9\u6cd5\uff0c\u90a3\u4e48\u5728\u6253\u5370 \u5bf9\u8c61 \u65f6\uff0c\u9ed8\u8ba4\u8f93\u51fa\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002 obj = Foo () # -*- coding: utf-8 -*- #main.py class Foo : def __str__ ( self ): return 'laowang' obj = Foo () print ( obj ) #\u6839\u5bf9\u8c61()\u8fdb\u884c\u533a\u522b # \u8f93\u51fa\uff1alaowang print ( \"\u5bf9\u8c61\u7684\u63cf\u8ff0 % s \" % obj ) #\u4f7f\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e5f\u662f\u53ef\u4ee5\u5f97\u5230\u5bf9\u8c61\u7684str\u63cf\u8ff0\u7684 print ( obj ) #\u6839\u5bf9\u8c61()\u8fdb\u884c\u533a\u522b # \u8f93\u51fa\uff1alaowang \u6267\u884c laowang \u5bf9\u8c61\u7684\u63cf\u8ff0 laowang 8\u3001 __getitem__\u3001__setitem__\u3001__delitem__ \u00b6 \u7528\u4e8e\u7d22\u5f15\u64cd\u4f5c\uff0c\u5982\u5b57\u5178\u3002\u4ee5\u4e0a\u5206\u522b\u8868\u793a\u83b7\u53d6\u3001\u8bbe\u7f6e\u3001\u5220\u9664\u6570\u636e # -*- coding:utf-8 -*- class Foo ( object ): def __getitem__ ( self , key ): print ( '__getitem__' , key ) def __setitem__ ( self , key , value ): print ( '__setitem__' , key , value ) def __delitem__ ( self , key ): print ( '__delitem__' , key ) obj = Foo () result = obj [ 'k1' ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __getitem__ obj [ 'k2' ] = 'laowang' # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __setitem__ del obj [ 'k1' ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __delitem__ 9\u3001 __getslice__\u3001__setslice__\u3001__delslice__ \u00b6 \u8be5\u4e09\u4e2a\u65b9\u6cd5\u7528\u4e8e\u5206\u7247\u64cd\u4f5c\uff0c\u5982\uff1a\u5217\u8868 # -*- coding:utf-8 -*- class Foo ( object ): def __getslice__ ( self , i , j ): print ( '__getslice__' , i , j ) def __setslice__ ( self , i , j , sequence ): print ( '__setslice__' , i , j ) def __delslice__ ( self , i , j ): print ( '__delslice__' , i , j ) obj = Foo () obj [ - 1 : 1 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __getslice__ obj [ 0 : 1 ] = [ 11 , 22 , 33 , 44 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __setslice__ del obj [ 0 : 2 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __delslice__ 13.6 \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1 \u00b6 \u7ee7\u627f - \u662f\u57fa\u4e8ePython\u4e2d\u7684\u5c5e\u6027\u67e5\u627e(\u5982X.name) \u591a\u6001 - \u5728X.method\u65b9\u6cd5\u4e2d\uff0cmethod\u7684\u610f\u4e49\u53d6\u51b3\u4e8eX\u7684\u7c7b\u578b(\u5b50\u7c7b\u91cd\u5199\u4e86\u7528\u5b57\u7c7b\u7684,\u6ca1\u6709\u91cd\u5199\u7528\u7236\u7c7b\u7684.\u540c\u6837\u662f\u5f00\u8f66,\u7236\u4eb2\u5f00\u5927\u8d27\u8f66,\u513f\u5b50\u5f00\u5c0f\u8d27\u8f66.\u8fd9\u5c31\u662f\u591a\u6001) \u5c01\u88c5 - \u65b9\u6cd5\u548c\u8fd0\u7b97\u7b26\u5b9e\u73b0\u884c\u4e3a\uff0c\u6570\u636e\u9690\u85cf\u9ed8\u8ba4\u662f\u4e00\u79cd\u60ef\u4f8b \u53c2\u8003\u5b9e\u4f8b \u00b6 \u817e\u8baf\u5373\u65f6\u901a\u4fe1\u6a21\u5757,\u521d\u7ea7\u5c01\u88c5 #! /usr/bin/env python # coding: utf-8 import random import time class Message ( object ): def __init__ ( self , msgarr = [], toacc = '' ): self . msgbody = msgarr # \u6b64\u5904\u4e3aMsgDict\u5bf9\u8c61\u5b9e\u4f8b\u7684\u5217\u8868\u6216\u8005\u7a7a\u5217\u8868 self . toacc = toacc # toacc\u4e3a\u5b57\u7b26\u4e32(\u5355\u53d1)\u6216\u8005\u5217\u8868(\u6279\u91cf\u53d1) self . msgrandom = random . randint ( 1 , 1000000000 ) self . msgrequest = { 'To_Account' : toacc , # \u6d88\u606f\u63a5\u6536\u65b9\u8d26\u53f7 'MsgRandom' : self . msgrandom , # \u6d88\u606f\u968f\u673a\u6570\uff0c\u7531\u968f\u673a\u51fd\u6570\u4ea7\u751f 'MsgBody' : [ t . msg for t in msgarr ] } def del_option ( self , option ): if option in ( set ( self . msgrequest ) - set ([ 'To_Account' , 'MsgRandom' , 'MsgBody' ])): self . __dict__ . pop ( option ) self . msgrequest . pop ( option ) def append_msg ( self , msg ): self . msgbody . append ( msg ) self . msgrequest [ 'MsgBody' ] . append ( msg . msg ) def insert_msg ( self , index , msg ): self . msgbody . insert ( index , msg ) self . msgrequest [ 'MsgBody' ] . insert ( msg . msg ) def del_msg ( self , index ): if index in range ( len ( self . msgbody )): del self . msgbody [ index ] del sel . msgrequest [ 'MsgBody' ][ index ] def set_from ( self , fromacc ): # \u6307\u5b9a\u6d88\u606f\u7684\u53d1\u9001\u65b9\uff0c\u9ed8\u8ba4\u4e3a\u670d\u52a1\u5668\u53d1\u9001 self . fromacc = fromacc self . msgrequest [ 'From_Account' ] = fromacc def set_to ( self , toacc ): # \u6307\u5b9a\u6d88\u606f\u7684\u63a5\u6536\u65b9\uff0c\u53ef\u4ee5\u4e3aString(\u5355\u53d1),\u53ef\u4ee5\u4e3aList(\u6279\u91cf\u53d1\u9001) self . toacc = toacc self . msgrequest [ 'To_Account' ] = toacc def refresh_random ( self ): self . msgrandom = random . randint ( 1 , 1000000000 ) self . msgrequest [ 'MsgRandom' ] = self . msgrandom , # \u6d88\u606f\u968f\u673a\u6570\uff0c\u7531\u968f\u673a\u51fd\u6570\u4ea7\u751f def set_sync ( self , sync ): # \u540c\u6b65\u9009\u9879\uff1a1, \u628a\u6d88\u606f\u540c\u6b65\u5230From_Account\u5728\u7ebf\u7ec8\u7aef\u548c\u6f2b\u6e38\u4e0a # 2, \u6d88\u606f\u4e0d\u540c\u6b65\u81f3From_Account # \u82e5\u4e0d\u586b\u5199\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5c06\u6d88\u606f\u540c\u6b65 # \u4ec5\u5728\u5355\u53d1\u5355\u804a\u6d88\u606f\u4e2d\u53ef\u8c03\u7528 self . sync = sync self . msgrequest [ 'SyncOtherMachine' ] = sync def set_timestamp ( self ): # \u8bbe\u7f6e\u6d88\u606f\u65f6\u95f4\u6233\uff0cunix\u65f6\u95f4, \u4ec5\u5728\u5355\u53d1\u5355\u804a\u6d88\u606f\u4e2d\u53ef\u4ee5\u8c03\u7528 self . timestamp = int ( time . time ()) self . msgrequest [ 'MsgTimeStamp' ] = self . timestamp def set_offlinepush ( self , pushflag = 0 , desc = '' , ext = '' , sound = '' ): # \u4ec5\u9002\u7528\u4e8eAPNa\u63a8\u9001\uff0c\u4e0d\u9002\u7528\u4e8e\u5b89\u5353\u5382\u5546\u63a8\u9001 self . msgrequest [ 'OfflinePushInfo' ] = { 'PushFlag' : pushflag , 'Desc' : desc , 'Ext' : ext , 'Sound' : sound } class MsgDict ( object ): def __init__ ( self , msgtype = '' , msgcontent = {}): self . msgtype = msgtype self . msgcontent = msgcontent @property def msg ( self ): return { 'MsgType' : self . msgtype , 'MsgContent' : self . msgcontent } def set_content ( self , content ): self . msgcontent = content class TextMsg ( MsgDict ): def __init__ ( self , text = '' , msgtype = 'TIMTextElem' ): self . text = text content = { 'Text' : text } super ( TextMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_text ( self , text ): self . text = text self . msgcontent [ 'Text' ] = text class LocationMsg ( MsgDict ): def __init__ ( self , desc = '' , latitude = 0 , longitude = 0 , msgtype = 'TIMLocationElem' ): self . desc = desc self . latitude = latitude self . longitude = longitude content = { 'Desc' : desc , # \u5730\u7406\u4f4d\u7f6e\u63cf\u8ff0\u4fe1\u606f, String 'Latitude' : latitude , # \u7eac\u5ea6, Number 'Longitude' : longitude # \u7ecf\u5ea6, Number } super ( LocationMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_desc ( self , desc ): self . desc = desc self . msgcontent [ 'Desc' ] = desc def set_location ( self , latitude , longitude ): self . latitude = latitude self . longitude = longitude self . msgcontent [ 'Latitude' ] = latitude self . msgcontent [ 'Longitude' ] = longitude def set_latitude ( self , latitude ): self . latitude = latitude self . msgcontent [ 'Latitude' ] = latitude def set_longitude ( self , longitude ): self . longitude = longitude self . msgcontent [ 'Longitude' ] = longitude class FaceMsg ( MsgDict ): def __init__ ( self , index = 1 , data = '' , msgtype = 'TIMFaceElem' ): self . index = index self . data = data content = { 'Index' : index , # \u8868\u60c5\u7d22\u5f15\uff0c\u7528\u6237\u81ea\u5b9a\u4e49, Number 'Data' : data # \u989d\u5916\u6570\u636e, String } super ( TextMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_index ( self , index ): self . index = index self . msgcontent [ 'Index' ] = index def set_data ( self , data ): self . data = data self . msgcontent [ 'Data' ] = data class CustomMsg ( MsgDict ): def __init__ ( self , data = '' , desc = '' , ext = '' , sound = '' , msgtype = 'TIMCustomElem' ): self . data = data self . desc = desc self . ext = ext self . sound = sound content = { 'Data' : data , # \u81ea\u5b9a\u4e49\u6d88\u606f\u6570\u636e\u3002\u4e0d\u4f5c\u4e3aAPNS\u7684payload\u4e2d\u5b57\u6bb5\u4e0b\u53d1\uff0c\u6545\u4ecepayload\u4e2d\u65e0\u6cd5\u83b7\u53d6Data\u5b57\u6bb5, String 'Desc' : desc , # \u81ea\u5b9a\u4e49\u6d88\u606f\u63cf\u8ff0\uff0c\u5f53\u63a5\u6536\u65b9\u4e3aiphone\u540e\u53f0\u5728\u7ebf\u65f6\uff0c\u505aios\u79bb\u7ebfPush\u65f6\u6587\u672c\u5c55\u793a 'Ext' : ext , # \u6269\u5c55\u5b57\u6bb5\uff0c\u5f53\u63a5\u6536\u65b9\u4e3aios\u7cfb\u7edf\u4e14\u5e94\u7528\u5904\u5728\u540e\u53f0\u65f6\uff0c\u6b64\u5b57\u6bb5\u4f5c\u4e3aAPNS\u8bf7\u6c42\u5305Payloads\u4e2d\u7684ext\u952e\u503c\u4e0b\u53d1\uff0cExt\u7684\u534f\u8bae\u683c\u5f0f\u7531\u4e1a\u52a1\u65b9\u786e\u5b9a\uff0cAPNS\u53ea\u505a\u900f\u4f20 'Sound' : sound # \u81ea\u5b9a\u4e49APNS\u63a8\u9001\u94c3\u58f0 } super ( CustomMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_data ( self , data ): self . data = data self . msgcontent [ 'Data' ] = data def set_desc ( self , desc ): self . desc = desc self . msgcontent [ 'Desc' ] = desc def set_ext ( self , ext ): self . ext = ext self . msgcontent [ 'Ext' ] = ext def set_sound ( self , sound ): self . sound = sound self . msgcontent [ 'Sound' ] = sound class SoundMsg ( MsgDict ): def __init__ ( self , uuid = '' , size = 0 , second = 0 , msgtype = 'TIMSoundElem' ): self . uuid = uuid self . size = size self . second = second content = { 'UUID' : uuid , # \u8bed\u97f3\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'Size' : size , # \u8bed\u97f3\u6570\u636e\u5927\u5c0f, Number 'Second' : second # \u8bed\u97f3\u65f6\u957f\uff0c\u5355\u4f4d\u79d2 Number } super ( SoundMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = uuid def set_size ( self , size ): self . size = size self . msgcontent [ 'Size' ] = size def set_second ( self , second ): self . second = second self . msgcontent [ 'Second' ] = second class ImageMsg ( MsgDict ): def __init__ ( self , uuid = '' , imgformat = 0 , imginfo = [], msgtype = 'TIMImageElem' ): self . uuid = uuid self . imgformat = imgformat self . imginfo = imginfo content = { 'UUID' : uuid , # \u56fe\u7247\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'ImageFormat' : imgformat , # \u56fe\u7247\u683c\u5f0f\uff0c BMP=1, JPG=2, GIF=3, \u5176\u4ed6=0, Number 'ImageInfoArray' : [ t . info for t in imginfo ] # \u539f\u56fe\uff0c\u7f29\u7565\u56fe\u6216\u8005\u5927\u56fe\u4e0b\u8f7d\u4fe1\u606f, Array } super ( ImageMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = uuid def set_format ( self , imgformat ): self . imgformat = imgformat self . msgcontent [ 'ImageFormat' ] = imgformat def append_info ( self , info ): # info \u4e3aImageInfo\u5bf9\u8c61\u5b9e\u4f8b self . imginfo . append ( info ) self . msgcontnet [ 'ImageInfoArray' ] . append ( info . info ) def insert_info ( self , index , info ): self . imginfo . insert ( index , info ) self . msgcontent [ 'ImageInfoArray' ] . insert ( index , info . info ) def del_info ( self , index ): del self . imginfo [ index ] del self . msgcontent [ 'ImageInfoArray' ][ index ] class FileMsg ( MsgDict ): def __init__ ( self , uuid = '' , size = 0 , name = '' , msgtype = 'TIMFileElem' ): self . uuid = uuid self . size = size self . name = name content = { 'UUID' : uuid , # \u6587\u4ef6\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'FileSize' : size , # \u6587\u4ef6\u6570\u636e\u5927\u5c0f, Number 'FileName' : name # \u6587\u4ef6\u540d\u79f0/\u8def\u5f84\uff0c String } super ( FileMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = UUID def set_size ( self , size ): self . size = size self . msgcontent [ 'FileSize' ] = size def set_name ( self , name ): self . name = name self . msgcontent [ 'FileName' ] = name class ImageInfo ( object ): def __init__ ( self , itype = 1 , size = 0 , width = 0 , height = 0 , url = '' ): #\u56fe\u7247\u7c7b\u578b\uff0c 1-\u539f\u56fe\uff0c 2-\u5927\u56fe\uff0c 3-\u7f29\u7565\u56fe, 0-\u5176\u4ed6 self . itype = itype # \u56fe\u7247\u6570\u636e\u5927\u5c0f,Number self . size = size # \u56fe\u7247\u5bbd\u5ea6,Number self . width = width # \u56fe\u7247\u9ad8\u5ea6, Number self . height = height # \u56fe\u7247\u4e0b\u8f7d\u5730\u5740,String self . url = url @property def info ( self ): return { 'Type' : self . itype , 'Size' : self . size , 'Width' : self . width , 'Height' : self . height , 'URL' : self . url } def set_type ( self , itype ): self . itype = itype def set_size ( self , size ): self . size = size def set_width ( self , width ): self . width = width def set_height ( self , height ): self . height = height def set_url ( self , url ): self . url = url \u5fae\u4fe1\u5f00\u53d1\u5305\uff0cpython\u5b9e\u73b0, wechat_sdk\u5f00\u53d1 \u00b6 http://wechat-python-sdk.com/ \u622a\u53d6\u90e8\u5206\u4ee3\u7801\uff0c\u5b66\u4e60\u7c7b\u7684\u8bbe\u8ba1 from __future__ import unicode_literals import time from wechat_sdk.lib.crypto import BasicCrypto from wechat_sdk.lib.request import WechatRequest from wechat_sdk.exceptions import NeedParamError from wechat_sdk.utils import disable_urllib3_warning class WechatConf ( object ): \"\"\" WechatConf \u914d\u7f6e\u7c7b \u8be5\u7c7b\u5c06\u4f1a\u5b58\u50a8\u6240\u6709\u548c\u5fae\u4fe1\u5f00\u53d1\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f, \u540c\u65f6\u4e5f\u4f1a\u7ef4\u62a4\u914d\u7f6e\u4fe1\u606f\u7684\u6709\u6548\u6027. \"\"\" def __init__ ( self , ** kwargs ): \"\"\" :param kwargs: \u914d\u7f6e\u4fe1\u606f\u5b57\u5178, \u53ef\u7528\u5b57\u5178 key \u503c\u53ca\u5bf9\u5e94\u89e3\u91ca\u5982\u4e0b: 'token': \u5fae\u4fe1 Token 'appid': App ID 'appsecret': App Secret 'encrypt_mode': \u52a0\u89e3\u5bc6\u6a21\u5f0f ('normal': \u660e\u6587\u6a21\u5f0f, 'compatible': \u517c\u5bb9\u6a21\u5f0f, 'safe': \u5b89\u5168\u6a21\u5f0f(\u9ed8\u8ba4)) 'encoding_aes_key': EncodingAESKey \u503c (\u4f20\u5165\u6b64\u503c\u5fc5\u987b\u4fdd\u8bc1\u540c\u65f6\u4f20\u5165 token, appid, \u5426\u5219\u629b\u51fa\u5f02\u5e38) 'access_token_getfunc': access token \u83b7\u53d6\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token_setfunc': access token \u5199\u5165\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token_refreshfunc': access token \u5237\u65b0\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token': \u76f4\u63a5\u5bfc\u5165\u7684 access token \u503c, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58\u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d \u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 access_token_getfunc \u548c access_token_setfunc \u51fd\u6570 \u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'access_token_expires_at': \u76f4\u63a5\u5bfc\u5165\u7684 access token \u7684\u8fc7\u671f\u65e5\u671f, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58 \u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d\u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 access_token_getfunc \u548c access_token_setfunc \u51fd\u6570\u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'jsapi_ticket_getfunc': jsapi ticket \u83b7\u53d6\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket_setfunc': jsapi ticket \u5199\u5165\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket_refreshfunc': jsapi ticket \u5237\u65b0\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket': \u76f4\u63a5\u5bfc\u5165\u7684 jsapi ticket \u503c, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58\u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d \u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 jsapi_ticket_getfunc \u548c jsapi_ticket_setfunc \u51fd\u6570 \u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'jsapi_ticket_expires_at': \u76f4\u63a5\u5bfc\u5165\u7684 jsapi ticket \u7684\u8fc7\u671f\u65e5\u671f, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58 \u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d\u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 jsapi_ticket_getfunc \u548c jsapi_ticket_setfunc \u51fd\u6570\u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'partnerid': \u8d22\u4ed8\u901a\u5546\u6237\u8eab\u4efd\u6807\u8bc6, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'partnerkey': \u8d22\u4ed8\u901a\u5546\u6237\u6743\u9650\u5bc6\u94a5 Key, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'paysignkey': \u5546\u6237\u7b7e\u540d\u5bc6\u94a5 Key, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'checkssl': \u662f\u5426\u68c0\u67e5 SSL, \u9ed8\u8ba4\u4e0d\u68c0\u67e5 (False), \u53ef\u907f\u514d urllib3 \u7684 InsecurePlatformWarning \u8b66\u544a :return: \"\"\" self . __request = WechatRequest () if kwargs . get ( 'checkssl' ) is not True : disable_urllib3_warning () # \u53ef\u89e3\u51b3 InsecurePlatformWarning \u8b66\u544a self . __token = kwargs . get ( 'token' ) self . __appid = kwargs . get ( 'appid' ) self . __appsecret = kwargs . get ( 'appsecret' ) self . __encrypt_mode = kwargs . get ( 'encrypt_mode' , 'safe' ) self . __encoding_aes_key = kwargs . get ( 'encoding_aes_key' ) self . __crypto = None self . _update_crypto () self . __access_token_getfunc = kwargs . get ( 'access_token_getfunc' ) self . __access_token_setfunc = kwargs . get ( 'access_token_setfunc' ) self . __access_token_refreshfunc = kwargs . get ( 'access_token_refreshfunc' ) self . __access_token = kwargs . get ( 'access_token' ) self . __access_token_expires_at = kwargs . get ( 'access_token_expires_at' ) self . __jsapi_ticket_getfunc = kwargs . get ( 'jsapi_ticket_getfunc' ) self . __jsapi_ticket_setfunc = kwargs . get ( 'jsapi_ticket_setfunc' ) self . __jsapi_ticket_refreshfunc = kwargs . get ( 'jsapi_ticket_refreshfunc' ) self . __jsapi_ticket = kwargs . get ( 'jsapi_ticket' ) self . __jsapi_ticket_expires_at = kwargs . get ( 'jsapi_ticket_expires_at' ) self . __partnerid = kwargs . get ( 'partnerid' ) self . __partnerkey = kwargs . get ( 'partnerkey' ) self . __paysignkey = kwargs . get ( 'paysignkey' ) @property def token ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d Token \"\"\" self . _check_token () return self . __token @token.setter def token ( self , token ): \"\"\" \u8bbe\u7f6e\u5f53\u524d Token \"\"\" self . __token = token self . _update_crypto () # \u6539\u52a8 Token \u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def appid ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d App ID \"\"\" return self . __appid @property def appsecret ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d App Secret \"\"\" return self . __appsecret def set_appid_appsecret ( self , appid , appsecret ): \"\"\" \u8bbe\u7f6e\u5f53\u524d App ID \u53ca App Secret\"\"\" self . __appid = appid self . __appsecret = appsecret self . _update_crypto () # \u6539\u52a8 App ID \u540e\u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def encoding_aes_key ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d EncodingAESKey \"\"\" return self . __encoding_aes_key @encoding_aes_key.setter def encoding_aes_key ( self , encoding_aes_key ): \"\"\" \u8bbe\u7f6e\u5f53\u524d EncodingAESKey \"\"\" self . __encoding_aes_key = encoding_aes_key self . _update_crypto () # \u6539\u52a8 EncodingAESKey \u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def encrypt_mode ( self ): return self . __encrypt_mode @encrypt_mode.setter def encrypt_mode ( self , encrypt_mode ): \"\"\" \u8bbe\u7f6e\u5f53\u524d\u52a0\u5bc6\u6a21\u5f0f \"\"\" self . __encrypt_mode = encrypt_mode self . _update_crypto () @property def crypto ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d Crypto \u5b9e\u4f8b \"\"\" return self . __crypto @property def access_token ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d access token \u503c, \u672c\u65b9\u6cd5\u4f1a\u81ea\u884c\u7ef4\u62a4 access token \u6709\u6548\u6027 \"\"\" self . _check_appid_appsecret () if callable ( self . __access_token_getfunc ): self . __access_token , self . __access_token_expires_at = self . __access_token_getfunc () if self . __access_token : now = time . time () if self . __access_token_expires_at - now > 60 : return self . __access_token self . grant_access_token () # \u4ece\u817e\u8baf\u670d\u52a1\u5668\u83b7\u53d6 access token \u5e76\u66f4\u65b0 return self . __access_token @property def jsapi_ticket ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d jsapi ticket \u503c, \u672c\u65b9\u6cd5\u4f1a\u81ea\u884c\u7ef4\u62a4 jsapi ticket \u6709\u6548\u6027 \"\"\" self . _check_appid_appsecret () if callable ( self . __jsapi_ticket_getfunc ): self . __jsapi_ticket , self . __jsapi_ticket_expires_at = self . __jsapi_ticket_getfunc () if self . __jsapi_ticket : now = time . time () if self . __jsapi_ticket_expires_at - now > 60 : return self . __jsapi_ticket self . grant_jsapi_ticket () # \u4ece\u817e\u8baf\u670d\u52a1\u5668\u83b7\u53d6 jsapi ticket \u5e76\u66f4\u65b0 return self . __jsapi_ticket @property def partnerid ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d\u8d22\u4ed8\u901a\u5546\u6237\u8eab\u4efd\u6807\u8bc6 \"\"\" return self . __partnerid @property def partnerkey ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d\u8d22\u4ed8\u901a\u5546\u6237\u6743\u9650\u5bc6\u94a5 Key \"\"\" return self . __partnerkey @property def paysignkey ( self ): \"\"\" \u83b7\u53d6\u5546\u6237\u7b7e\u540d\u5bc6\u94a5 Key \"\"\" return self . __paysignkey def grant_access_token ( self ): \"\"\" \u83b7\u53d6 access token \u5e76\u66f4\u65b0\u5f53\u524d\u914d\u7f6e :return: \u8fd4\u56de\u7684 JSON \u6570\u636e\u5305 (\u4f20\u5165 access_token_refreshfunc \u53c2\u6570\u540e\u8fd4\u56de None) \"\"\" self . _check_appid_appsecret () if callable ( self . __access_token_refreshfunc ): self . __access_token , self . __access_token_expires_at = self . __access_token_refreshfunc () return response_json = self . __request . get ( url = \"https://api.weixin.qq.com/cgi-bin/token\" , params = { \"grant_type\" : \"client_credential\" , \"appid\" : self . __appid , \"secret\" : self . __appsecret , }, access_token = self . __access_token ) self . __access_token = response_json [ 'access_token' ] self . __access_token_expires_at = int ( time . time ()) + response_json [ 'expires_in' ] if callable ( self . __access_token_setfunc ): self . __access_token_setfunc ( self . __access_token , self . __access_token_expires_at ) return response_json def grant_jsapi_ticket ( self ): \"\"\" \u83b7\u53d6 jsapi ticket \u5e76\u66f4\u65b0\u5f53\u524d\u914d\u7f6e :return: \u8fd4\u56de\u7684 JSON \u6570\u636e\u5305 (\u4f20\u5165 jsapi_ticket_refreshfunc \u53c2\u6570\u540e\u8fd4\u56de None) \"\"\" self . _check_appid_appsecret () if callable ( self . __jsapi_ticket_refreshfunc ): self . __jsapi_ticket , self . __jsapi_ticket_expires_at = self . __jsapi_ticket_refreshfunc () return response_json = self . __request . get ( url = \"https://api.weixin.qq.com/cgi-bin/ticket/getticket\" , params = { \"type\" : \"jsapi\" , }, access_token = self . access_token , ) self . __jsapi_ticket = response_json [ 'ticket' ] self . __jsapi_ticket_expires_at = int ( time . time ()) + response_json [ 'expires_in' ] if callable ( self . __jsapi_ticket_setfunc ): self . __jsapi_ticket_setfunc ( self . __jsapi_ticket , self . __jsapi_ticket_expires_at ) return response_json def get_access_token ( self ): \"\"\" \u83b7\u53d6 Access Token \u53ca Access Token \u8fc7\u671f\u65e5\u671f, \u4ec5\u4f9b\u7f13\u5b58\u4f7f\u7528, \u5982\u679c\u5e0c\u671b\u5f97\u5230\u539f\u751f\u7684 Access Token \u8bf7\u6c42\u6570\u636e\u8bf7\u4f7f\u7528 :func:`grant_token` **\u4ec5\u4e3a\u517c\u5bb9 v0.6.0 \u4ee5\u524d\u7248\u672c\u4f7f\u7528, \u81ea\u884c\u7ef4\u62a4 access_token \u8bf7\u4f7f\u7528 access_token_setfunc \u548c access_token_getfunc \u8fdb\u884c\u64cd\u4f5c** :return: dict \u5bf9\u8c61, key \u5305\u62ec `access_token` \u53ca `access_token_expires_at` \"\"\" self . _check_appid_appsecret () return { 'access_token' : self . access_token , 'access_token_expires_at' : self . __access_token_expires_at , } def get_jsapi_ticket ( self ): \"\"\" \u83b7\u53d6 Jsapi Ticket \u53ca Jsapi Ticket \u8fc7\u671f\u65e5\u671f, \u4ec5\u4f9b\u7f13\u5b58\u4f7f\u7528, \u5982\u679c\u5e0c\u671b\u5f97\u5230\u539f\u751f\u7684 Jsapi Ticket \u8bf7\u6c42\u6570\u636e\u8bf7\u4f7f\u7528 :func:`grant_jsapi_ticket` **\u4ec5\u4e3a\u517c\u5bb9 v0.6.0 \u4ee5\u524d\u7248\u672c\u4f7f\u7528, \u81ea\u884c\u7ef4\u62a4 jsapi_ticket \u8bf7\u4f7f\u7528 jsapi_ticket_setfunc \u548c jsapi_ticket_getfunc \u8fdb\u884c\u64cd\u4f5c** :return: dict \u5bf9\u8c61, key \u5305\u62ec `jsapi_ticket` \u53ca `jsapi_ticket_expires_at` \"\"\" self . _check_appid_appsecret () return { 'jsapi_ticket' : self . jsapi_ticket , 'jsapi_ticket_expires_at' : self . __jsapi_ticket_expires_at , } def _check_token ( self ): \"\"\" \u68c0\u67e5 Token \u662f\u5426\u5b58\u5728 :raises NeedParamError: Token \u53c2\u6570\u6ca1\u6709\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u63d0\u4f9b \"\"\" if not self . __token : raise NeedParamError ( 'Please provide Token parameter in the construction of class.' ) def _check_appid_appsecret ( self ): \"\"\" \u68c0\u67e5 AppID \u548c AppSecret \u662f\u5426\u5b58\u5728 :raises NeedParamError: AppID \u6216 AppSecret \u53c2\u6570\u6ca1\u6709\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u5b8c\u6574\u63d0\u4f9b \"\"\" if not self . __appid or not self . __appsecret : raise NeedParamError ( 'Please provide app_id and app_secret parameters in the construction of class.' ) def _update_crypto ( self ): \"\"\" \u6839\u636e\u5f53\u524d\u914d\u7f6e\u5185\u5bb9\u66f4\u65b0 Crypto \u7c7b \"\"\" if self . __encrypt_mode in [ 'compatible' , 'safe' ] and self . __encoding_aes_key is not None : if self . __token is None or self . __appid is None : raise NeedParamError ( 'Please provide token and appid parameters in the construction of class.' ) self . __crypto = BasicCrypto ( self . __token , self . __encoding_aes_key , self . __appid ) else : self . __crypto = None \u601d\u7ef4\u953b\u70bc \u00b6 \u8bbe\u8ba1\u8bb2\u5e08\u548c\u5b66\u751f\u7c7b\uff0c\u8bb2\u5e08\u6709\u4e0a\u8bfe\uff0c\u5907\u8bfe\u7b49\u65b9\u6cd5\uff0c\u5b66\u751f\u6709\u542c\u8bfe\uff0c\u505a\u7ec3\u4e60\u7b49\u65b9\u6cd5\uff0c\u5747\u6709\u59d3\u540d\u3001\u6027\u522b\u3001\u5e74\u9f84\u7b49\u57fa\u672c\u5c5e\u6027 \u8bbe\u8ba1\u804a\u5929Message\u7c7b 13.7 with\u4e0e\u201c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u201d \u00b6 \u5982\u679c\u4f60\u6709\u9605\u8bfb\u6e90\u7801\u7684\u4e60\u60ef\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4f18\u79c0\u7684\u4ee3\u7801\u7ecf\u5e38\u51fa\u73b0\u5e26\u6709 \u201cwith\u201d \u5173\u952e\u5b57\u7684\u8bed\u53e5\uff0c\u5b83\u901a\u5e38\u7528\u5728\u4ec0\u4e48\u573a\u666f\u5462\uff1f\u4eca \u5bf9\u4e8e\u7cfb\u7edf\u8d44\u6e90\u5982\u6587\u4ef6\u3001\u6570\u636e\u5e93\u8fde\u63a5\u3001socket \u800c\u8a00\uff0c\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u8fd9\u4e9b\u8d44\u6e90\u5e76\u6267\u884c\u5b8c\u4e1a\u52a1\u903b\u8f91\u4e4b\u540e\uff0c\u5fc5\u987b\u505a\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u8981\u5173\u95ed\uff08\u65ad\u5f00\uff09\u8be5\u8d44\u6e90\u3002 \u6bd4\u5982 Python \u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5f80\u6587\u4ef6\u4e2d\u5199\u5185\u5bb9\uff0c\u5199\u5b8c\u4e4b\u540e\uff0c\u5c31\u8981\u5173\u95ed\u8be5\u6587\u4ef6\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u6781\u7aef\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0 \"Too many open files\" \u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u7cfb\u7edf\u5141\u8bb8\u4f60\u6253\u5f00\u7684\u6700\u5927\u6587\u4ef6\u6570\u91cf\u662f\u6709\u9650\u7684\u3002 \u540c\u6837\uff0c\u5bf9\u4e8e\u6570\u636e\u5e93\uff0c\u5982\u679c\u8fde\u63a5\u6570\u8fc7\u591a\u800c\u6ca1\u6709\u53ca\u65f6\u5173\u95ed\u7684\u8bdd\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0 \"Can not connect to MySQL server Too many connections\"\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u8fde\u63a5\u662f\u4e00\u79cd\u975e\u5e38\u6602\u8d35\u7684\u8d44\u6e90\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u5236\u7684\u88ab\u521b\u5efa\u3002 \u6765\u770b\u770b\u5982\u4f55\u6b63\u786e\u5173\u95ed\u4e00\u4e2a\u6587\u4ef6\u3002 \u666e\u901a\u7248\uff1a \u00b6 def m1 (): f = open ( \"output.txt\" , \"w\" ) f . write ( \"python\u4e4b\u7985\" ) f . close () \u8fd9\u6837\u5199\u6709\u4e00\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5982\u679c\u5728\u8c03\u7528 write \u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u5f02\u5e38\u8fdb\u800c\u5bfc\u81f4\u540e\u7eed\u4ee3\u7801\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0cclose \u65b9\u6cd5\u65e0\u6cd5\u88ab\u6b63\u5e38\u8c03\u7528\uff0c\u56e0\u6b64\u8d44\u6e90\u5c31\u4f1a\u4e00\u76f4\u88ab\u8be5\u7a0b\u5e8f\u5360\u7528\u8005\u91ca\u653e\u3002\u90a3\u4e48\u8be5\u5982\u4f55\u6539\u8fdb\u4ee3\u7801\u5462\uff1f \u8fdb\u9636\u7248\uff1a \u00b6 def m2 (): f = open ( \"output.txt\" , \"w\" ) try : f . write ( \"python\u4e4b\u7985\" ) except IOError : print ( \"oops error\" ) finally : f . close () \u6539\u826f\u7248\u672c\u7684\u7a0b\u5e8f\u662f\u5bf9\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u5904\u8fdb\u884c try \u6355\u83b7\uff0c\u4f7f\u7528 try/finally \u8bed\u53e5\uff0c\u8be5\u8bed\u53e5\u8868\u793a\u5982\u679c\u5728 try \u4ee3\u7801\u5757\u4e2d\u7a0b\u5e8f\u51fa\u73b0\u4e86\u5f02\u5e38\uff0c\u540e\u7eed\u4ee3\u7801\u5c31\u4e0d\u518d\u6267\u884c\uff0c\u800c\u76f4\u63a5\u8df3\u8f6c\u5230 except \u4ee3\u7801\u5757\u3002\u800c\u65e0\u8bba\u5982\u4f55\uff0cfinally \u5757\u7684\u4ee3\u7801\u6700\u7ec8\u90fd\u4f1a\u88ab\u6267\u884c\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u628a close \u653e\u5728 finally \u4ee3\u7801\u4e2d\uff0c\u6587\u4ef6\u5c31\u4e00\u5b9a\u4f1a\u5173\u95ed\u3002 else\u4ec0\u4e48\u65f6\u5019\u6267\u884c? \u53ea\u6709try\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u7684\u5f02\u5e38\u7136\u540e\u6267\u884celse\u4e2d\u7684\u4ee3\u7801 Exception \u8fd9\u4e2a\u5f02\u5e38\u4ee3\u8868\u7684\u662f\u6240\u6709\u7684\u5f02\u5e38,\u5982\u679c\u524d\u9762\u7684\u5f02\u5e38\u90fd\u6ca1\u6709\u6355\u83b7\u5230\u7684\u8bdd\u5c31\u4f1a\u6267\u884c\u8fd9\u4e2a\u5f02\u5e38\u7684\u5904\u7406 \u9ad8\u7ea7\u7248\uff1a \u00b6 def m3 (): with open ( \"output.txt\" , \"r\" ) as f : f . write ( \"Python\u4e4b\u7985\" ) \u4e00\u79cd\u66f4\u52a0\u7b80\u6d01\u3001\u4f18\u96c5\u7684\u65b9\u5f0f\u5c31\u662f\u7528 with \u5173\u952e\u5b57\u3002open \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf f\uff0c\u5f53\u79bb\u5f00 with \u4ee3\u7801\u5757\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528 f.close() \u65b9\u6cd5\uff0c with \u7684\u4f5c\u7528\u548c\u4f7f\u7528 try/finally \u8bed\u53e5\u662f\u4e00\u6837\u7684\u3002\u90a3\u4e48\u5b83\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5728\u8bb2 with \u7684\u539f\u7406\u524d\u8981\u6d89\u53ca\u5230\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\uff0c\u5c31\u662f\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08Context Manager\uff09\u3002 \u4ec0\u4e48\u662f\u4e0a\u4e0b\u6587(context) \u00b6 \u4e0a\u4e0b\u6587\u5728\u4e0d\u540c\u7684\u5730\u65b9\u8868\u793a\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u8981\u611f\u6027\u7406\u89e3\u3002context\u5176\u5b9e\u8bf4\u767d\u4e86\uff0c\u548c\u6587\u7ae0\u7684\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a\u610f\u601d\uff0c\u5728\u901a\u4fd7\u4e00\u70b9\uff0c\u6211\u89c9\u5f97\u53eb\u73af\u5883\u66f4\u597d\u3002.... \u6797\u51b2\u5927\u53eb\u4e00\u58f0\u201c\u554a\u4e5f\uff01\u201d.... \u95ee:\u8fd9\u53e5\u8bdd\u6797\u51b2\u7684\u201c\u554a\u4e5f\u201d\u8868\u8fbe\u4e86\u6797\u51b2\u600e\u6837\u7684\u5fc3\u91cc\uff1f \u7b54:\u554a\u4f60\u5988\u4e2a\u5934\u554a\uff01 \u770b\uff0c\u4e00\u7bc7\u6587\u7ae0\uff0c\u7ed9\u4f60\u6458\u5f55\u4e00\u6bb5\uff0c\u6ca1\u524d\u6ca1\u540e\uff0c\u4f60\u8bfb\u4e0d\u61c2\uff0c\u56e0\u4e3a\u6709\u8bed\u5883\uff0c\u5c31\u662f\u8bed\u8a00\u73af\u5883\u5b58\u5728\uff0c\u4e00\u6bb5\u8bdd\u8bf4\u4e86\u4ec0\u4e48\uff0c\u8981\u901a\u8fc7\u4e0a\u4e0b\u6587(\u6587\u7ae0\u7684\u4e0a\u4e0b\u6587)\u6765\u63a8\u65ad\u3002 app\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u754c\u9762\uff0c\u4e5f\u8981\u4fdd\u5b58\u4f60\u662f\u5728\u54ea\u4e2a\u5c4f\u5e55\u8df3\u8fc7\u6765\u7684\u7b49\u7b49\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4f60\u70b9\u51fb\u8fd4\u56de\u7684\u65f6\u5019\u80fd\u6b63\u786e\u8df3\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u80af\u5b9a\u5c31\u65e0\u6cd5\u6b63\u786e\u8df3\u56de\u4e86\u3002 \u770b\u8fd9\u4e9b\u90fd\u662f\u4e0a\u4e0b\u6587\u7684\u5178\u578b\u4f8b\u5b50\uff0c\u7406\u89e3\u6210\u73af\u5883\u5c31\u53ef\u4ee5\uff0c(\u800c\u4e14\u4e0a\u4e0b\u6587\u867d\u7136\u53eb\u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u7a0b\u5e8f\u91cc\u9762\u4e00\u822c\u90fd\u53ea\u6709\u4e0a\u6587\u800c\u5df2\uff0c\u53ea\u662f\u53eb\u7684\u597d\u542c\u53eb\u4e0a\u4e0b\u6587\u3002\u3002\u8fdb\u7a0b\u4e2d\u65ad\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u662f\u6709\u4e0a\u6709\u4e0b\u7684\uff0c\u4e0d\u8fc7\u4e0d\u8fd9\u4e2a\u9ad8\u6df1\u7684\u95ee\u9898\u5c31\u4e0d\u8981\u6df1\u7a76\u4e86\u3002\u3002\u3002) \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668 \u00b6 \u4efb\u4f55\u5b9e\u73b0\u4e86 enter () \u548c exit () \u65b9\u6cd5\u7684\u5bf9\u8c61\u90fd\u53ef\u79f0\u4e4b\u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 with \u5173\u952e\u5b57\u3002\u663e\u7136\uff0c\u6587\u4ef6\uff08file\uff09\u5bf9\u8c61\u4e5f\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u3002 \u90a3\u4e48\u6587\u4ef6\u5bf9\u8c61\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u6587\u4ef6\u7c7b\uff0c\u8ba9\u8be5\u7c7b\u5b9e\u73b0 enter () \u548c exit () \u65b9\u6cd5\u3002 class File (): def __init__ ( self , filename , mode ): self . filename = filename self . mode = mode def __enter__ ( self ): print ( \"entering\" ) self . f = open ( self . filename , self . mode ) return self . f def __exit__ ( self , * args ): print ( \"will exit\" ) self . f . close () enter () \u65b9\u6cd5\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5c31\u662f\u4f60\u5c06\u8981\u6253\u5f00\u7684\u90a3\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c exit () \u65b9\u6cd5\u5904\u7406\u4e00\u4e9b\u6e05\u9664\u5de5\u4f5c\u3002 \u56e0\u4e3a File \u7c7b\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u4f7f\u7528 with \u8bed\u53e5\u4e86\u3002 with File ( 'out.txt' , 'w' ) as f : print ( \"writing\" ) f . write ( 'hello, python' ) \u8fd9\u6837\uff0c\u4f60\u5c31\u65e0\u9700\u663e\u793a\u5730\u8c03\u7528 close \u65b9\u6cd5\u4e86\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u53bb\u8c03\u7528\uff0c\u54ea\u6015\u4e2d\u95f4\u9047\u5230\u5f02\u5e38 close \u65b9\u6cd5\u4e5f\u4f1a\u88ab\u8c03\u7528\u3002 \u5b9e\u73b0\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7684\u53e6\u5916\u65b9\u5f0f \u00b6 Python \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a contextmanager \u7684\u88c5\u9970\u5668\uff0c\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u901a\u8fc7 yield \u5c06\u51fd\u6570\u5206\u5272\u6210\u4e24\u90e8\u5206\uff0cyield \u4e4b\u524d\u7684\u8bed\u53e5\u5728 enter \u65b9\u6cd5\u4e2d\u6267\u884c\uff0cyield \u4e4b\u540e\u7684\u8bed\u53e5\u5728 exit \u65b9\u6cd5\u4e2d\u6267\u884c\u3002\u7d27\u8ddf\u5728 yield \u540e\u9762\u7684\u503c\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 from contextlib import contextmanager @contextmanager def my_open ( path , mode ): f = open ( path , mode ) yield f f . close () \u8c03\u7528 with my_open('out.txt', 'w') as f: f.write(\"hello , the simplest context manager\") \u603b\u7ed3 \u00b6 Python \u63d0\u4f9b\u4e86 with \u8bed\u6cd5\u7528\u4e8e\u7b80\u5316\u8d44\u6e90\u64cd\u4f5c\u7684\u540e\u7eed\u6e05\u9664\u64cd\u4f5c\uff0c\u662f try/finally \u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u5b9e\u73b0\u539f\u7406\u5efa\u7acb\u5728\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u4e4b\u4e0a\u3002\u6b64\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a contextmanager \u88c5\u9970\u5668\uff0c\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u4e0a\u4e0b\u7ba1\u7406\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002","title":"009 13--python\u63d0\u9ad8-2"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#131-mro","text":"","title":"13.1. \u591a\u7ee7\u627f\u4ee5\u53caMRO\u987a\u5e8f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#mro","text":"","title":"\u591a\u7ee7\u627f\u4ee5\u53caMRO\u987a\u5e8f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#1","text":"# coding=utf-8 print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d.__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name ): print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age ): print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age Parent . __init__ ( self , name ) print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son2 ( Parent ): def __init__ ( self , name , gender ): print ( 'Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . gender = gender Parent . __init__ ( self , name ) print ( 'Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 , Son2 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) Son1 . __init__ ( self , name , age ) # \u5355\u72ec\u8c03\u7528\u7236\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5 Son2 . __init__ ( self , name , gender ) print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) print ( '\u6027\u522b\uff1a' , gs . gender ) print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d.__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c: ****** \u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 #\u88ab\u7ee7\u627f\u4e86\u4e24\u6b21 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 \u6027\u522b\uff1a \u7537 ****** \u591a\u7ee7\u627f\u4f7f\u7528\u7c7b\u540d . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** python \u662f\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u56e0\u6b64\u6ca1\u6709\u65b9\u6cd5\u7684\u91cd\u8f7d\u53ea\u6709\u65b9\u6cd5\u7684\u91cd\u5199","title":"1. \u5355\u72ec\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#2-super","text":"print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age super () . __init__ ( name , * args , ** kwargs ) # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son2 ( Parent ): def __init__ ( self , name , gender , * args , ** kwargs ): # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . gender = gender super () . __init__ ( name , * args , ** kwargs ) # \u4e3a\u907f\u514d\u591a\u7ee7\u627f\u62a5\u9519\uff0c\u4f7f\u7528\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u63a5\u53d7\u53c2\u6570 print ( 'Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 , Son2 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) # \u591a\u7ee7\u627f\u65f6\uff0c\u76f8\u5bf9\u4e8e\u4f7f\u7528\u7c7b\u540d.__init__\u65b9\u6cd5\uff0c\u8981\u628a\u6bcf\u4e2a\u7236\u7c7b\u5168\u90e8\u5199\u4e00\u904d # \u800csuper\u53ea\u7528\u4e00\u53e5\u8bdd\uff0c\u6267\u884c\u4e86\u5168\u90e8\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4f55\u591a\u7ee7\u627f\u9700\u8981\u5168\u90e8\u4f20\u53c2\u7684\u4e00\u4e2a\u539f\u56e0 # super(Grandson, self).__init__(name, age, gender) super () . __init__ ( name , age , gender ) print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) print ( Grandson . __mro__ ) #C3\u7b97\u6cd5\u83b7\u5f97super\u8c03\u7528\u7236\u7c7b\u65f6\u7684\u987a\u5e8f gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) print ( '\u6027\u522b\uff1a' , gs . gender ) print ( \"******\u591a\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c\uff1a ****** \u591a\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** ( < class ' __main__ . Grandson '>, <class ' __main__ . Son1 '>, <class ' __main__ . Son2 '>, <class ' __main__ . Parent '>, <class ' object '>) Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son2\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 #\u53ea\u88ab\u8c03\u7528\u4e86\u4e00\u6b21 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son2\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 \u6027\u522b\uff1a \u7537 ****** \u591a\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ******","title":"2. \u591a\u7ee7\u627f\u4e2dsuper\u8c03\u7528\u6709\u6240\u7236\u7c7b\u7684\u88ab\u91cd\u5199\u7684\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_1","text":"\u4ee5\u4e0a2\u4e2a\u4ee3\u7801\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u540c \u5982\u679c2\u4e2a\u5b50\u7c7b\u4e2d\u90fd\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u5f53\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7\u7236\u7c7b\u540d\u8c03\u7528\u65f6\uff0cparent\u88ab\u6267\u884c\u4e862\u6b21 \u5982\u679c2\u4e2a\u5b50\u7c7b\u4e2d\u90fd\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u5f53\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7super\u8c03\u7528\u65f6\uff0cparent\u88ab\u6267\u884c\u4e861\u6b21","title":"\u6ce8\u610f\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#args-kwargs","text":"def test2 ( a , b , * args , ** kwargs ): print ( \"------\" ) print ( a ) print ( b ) print ( args ) print ( kwargs ) def test1 ( a , b , * args , ** kwargs ): print ( a ) print ( b ) print ( args ) print ( kwargs ) # test2(a, b, args, kwargs) # \u76f8\u5f53\u4e8etest2(11, 22, (33, 44, 55, 66), {\"name\":\"laowang\", \"age\":18}) # test2(a, b, *args, kwargs) # \u76f8\u5f53\u4e8etest2(11, 22, 33, 44, 55, 66, {\"name\":\"laowang\", \"age\":18}) test2 ( a , b , * args , ** kwargs ) # \u76f8\u5f53\u4e8etest2(11, 22, 33, 44, 55, 66, name=\"laowang\", age=18) #\u6240\u4ee5\u4f20\u9012\u53c2\u6570\u4e5f\u8981\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u7c7b\u4f3c\u4e8e\u81ea\u52a8\u62c6\u5305 #*args, **kwargs\u4e0d\u4ec5\u662f\u53ef\u4ee5\u653e\u5728\u578b\u53c2\u4e2d,\u4e5f\u662f\u53ef\u4ee5\u653e\u5728\u5b9e\u53c2\u4e2d\u7684 test1 ( 11 , 22 , 33 , 44 , 55 , 66 , name = \"laowang\" , age = 18 ) \u8fd0\u884c\u7ed3\u679c 11 22 ( 33 , 44 , 55 , 66 ) { 'name' : 'laowang' , 'age' : 18 } ------ 11 22 ( 33 , 44 , 55 , 66 ) { 'name' : 'laowang' , 'age' : 18 }","title":"*args, **kwargs \u89e3\u91ca"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#3-super","text":"print ( \"******\u5355\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001******\" ) class Parent ( object ): def __init__ ( self , name ): print ( 'parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . name = name print ( 'parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Son1 ( Parent ): def __init__ ( self , name , age ): print ( 'Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) self . age = age super () . __init__ ( name ) # \u5355\u7ee7\u627f\u4e0d\u80fd\u63d0\u4f9b\u5168\u90e8\u53c2\u6570 print ( 'Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) class Grandson ( Son1 ): def __init__ ( self , name , age , gender ): print ( 'Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528' ) super () . __init__ ( name , age ) # \u5355\u7ee7\u627f\u4e0d\u80fd\u63d0\u4f9b\u5168\u90e8\u53c2\u6570 print ( 'Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528' ) gs = Grandson ( 'grandson' , 12 , '\u7537' ) print ( '\u59d3\u540d\uff1a' , gs . name ) print ( '\u5e74\u9f84\uff1a' , gs . age ) #print('\u6027\u522b\uff1a', gs.gender) print ( \"******\u5355\u7ee7\u627f\u4f7f\u7528super().__init__ \u53d1\u751f\u7684\u72b6\u6001****** \\n\\n \" ) \u8fd0\u884c\u7ed3\u679c ****** \u5355\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ****** Grandson\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 Son1\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u5f00\u59cb\u88ab\u8c03\u7528 parent\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Son1\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 Grandson\u7684init\u7ed3\u675f\u88ab\u8c03\u7528 \u59d3\u540d\uff1a grandson \u5e74\u9f84\uff1a 12 ****** \u5355\u7ee7\u627f\u4f7f\u7528 super () . __init__ \u53d1\u751f\u7684\u72b6\u6001 ******","title":"3. \u5355\u7ee7\u627f\u4e2dsuper"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_2","text":"super(). init__\u76f8\u5bf9\u4e8e\u7c7b\u540d.__init \uff0c\u5728\u5355\u7ee7\u627f\u4e0a\u7528\u6cd5\u57fa\u672c\u65e0\u5dee \u4f46\u5728\u591a\u7ee7\u627f\u4e0a\u6709\u533a\u522b\uff0csuper\u65b9\u6cd5\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u7236\u7c7b\u7684\u65b9\u6cd5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u800c\u4f7f\u7528\u7c7b\u540d\u7684\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u65b9\u6cd5\u88ab\u6267\u884c\u591a\u6b21\uff0c\u5177\u4f53\u770b\u524d\u9762\u7684\u8f93\u51fa\u7ed3\u679c \u591a\u7ee7\u627f\u65f6\uff0c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u5bf9\u7236\u7c7b\u7684\u4f20\u53c2\u6570\uff0c\u5e94\u8be5\u662f\u7531\u4e8epython\u4e2dsuper\u7684\u7b97\u6cd5\u5bfc\u81f4\u7684\u539f\u56e0\uff0c\u5fc5\u987b\u628a\u53c2\u6570\u5168\u90e8\u4f20\u9012\uff0c\u5426\u5219\u4f1a\u62a5\u9519 \u5355\u7ee7\u627f\u65f6\uff0c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u5219\u4e0d\u80fd\u5168\u90e8\u4f20\u9012\uff0c\u53ea\u80fd\u4f20\u7236\u7c7b\u65b9\u6cd5\u6240\u9700\u7684\u53c2\u6570\uff0c\u5426\u5219\u4f1a\u62a5\u9519 \u591a\u7ee7\u627f\u65f6\uff0c\u76f8\u5bf9\u4e8e\u4f7f\u7528\u7c7b\u540d.__init__\u65b9\u6cd5\uff0c\u8981\u628a\u6bcf\u4e2a\u7236\u7c7b\u5168\u90e8\u5199\u4e00\u904d, \u800c\u4f7f\u7528super\u65b9\u6cd5\uff0c\u53ea\u9700\u5199\u4e00\u53e5\u8bdd\u4fbf\u6267\u884c\u4e86\u5168\u90e8\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4f55\u591a\u7ee7\u627f\u9700\u8981\u5168\u90e8\u4f20\u53c2\u7684\u4e00\u4e2a\u539f\u56e0","title":"\u603b\u7ed3"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_3","text":"\u4ee5\u4e0b\u7684\u4ee3\u7801\u7684\u8f93\u51fa\u5c06\u662f\u4ec0\u4e48? \u8bf4\u51fa\u4f60\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u3002 class Parent ( object ): x = 1 class Child1 ( Parent ): pass class Child2 ( Parent ): pass print ( Parent . x , Child1 . x , Child2 . x ) Child1 . x = 2 print ( Parent . x , Child1 . x , Child2 . x ) Parent . x = 3 print ( Parent . x , Child1 . x , Child2 . x ) \u7b54\u6848, \u4ee5\u4e0a\u4ee3\u7801\u7684\u8f93\u51fa\u662f\uff1a 1 1 1 1 2 1 3 2 3 \u4f7f\u4f60\u56f0\u60d1\u6216\u662f\u60ca\u5947\u7684\u662f\u5173\u4e8e\u6700\u540e\u4e00\u884c\u7684\u8f93\u51fa\u662f 3 2 3 \u800c\u4e0d\u662f 3 2 1\u3002\u4e3a\u4ec0\u4e48\u6539\u53d8\u4e86 Parent.x \u7684\u503c\u8fd8\u4f1a\u6539\u53d8 Child2.x \u7684\u503c\uff0c\u4f46\u662f\u540c\u65f6 Child1.x \u503c\u5374\u6ca1\u6709\u6539\u53d8\uff1f \u8fd9\u4e2a\u7b54\u6848\u7684\u5173\u952e\u662f\uff0c\u5728 Python \u4e2d\uff0c\u7c7b\u53d8\u91cf\u5728\u5185\u90e8\u662f\u4f5c\u4e3a\u5b57\u5178\u5904\u7406\u7684\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u540d\u5b57\u6ca1\u6709\u5728\u5f53\u524d\u7c7b\u7684\u5b57\u5178\u4e2d\u53d1\u73b0\uff0c\u5c06\u641c\u7d22\u7956\u5148\u7c7b\uff08\u6bd4\u5982\u7236\u7c7b\uff09\u76f4\u5230\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u540d\u88ab\u627e\u5230\uff08\u5982\u679c\u8fd9\u4e2a\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u540d\u65e2\u6ca1\u6709\u5728\u81ea\u5df1\u6240\u5728\u7684\u7c7b\u53c8\u6ca1\u6709\u5728\u7956\u5148\u7c7b\u4e2d\u627e\u5230\uff0c\u4f1a\u5f15\u53d1\u4e00\u4e2a AttributeError \u5f02\u5e38 \uff09\u3002 \u56e0\u6b64\uff0c\u5728\u7236\u7c7b\u4e2d\u8bbe\u7f6e x = 1 \u4f1a\u4f7f\u5f97\u7c7b\u53d8\u91cf x \u5728\u5f15\u7528\u8be5\u7c7b\u548c\u5176\u4efb\u4f55\u5b50\u7c7b\u4e2d\u7684\u503c\u4e3a 1\u3002\u8fd9\u5c31\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2a print \u8bed\u53e5\u7684\u8f93\u51fa\u662f 1 1 1\u3002 \u968f\u540e\uff0c\u5982\u679c\u4efb\u4f55\u5b83\u7684\u5b50\u7c7b\u91cd\u5199\u4e86\u8be5\u503c\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u6267\u884c\u8bed\u53e5 Child1.x = 2\uff09\uff0c\u7136\u540e\uff0c\u8be5\u503c\u4ec5\u4ec5\u5728\u5b50\u7c7b\u4e2d\u88ab\u6539\u53d8\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u4e2a print \u8bed\u53e5\u7684\u8f93\u51fa\u662f 1 2 1\u3002 \u6700\u540e\uff0c\u5982\u679c\u8be5\u503c\u5728\u7236\u7c7b\u4e2d\u88ab\u6539\u53d8\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u6267\u884c\u8bed\u53e5 Parent.x = 3\uff09\uff0c\u8fd9\u4e2a\u6539\u53d8\u4f1a\u5f71\u54cd\u5230\u4efb\u4f55\u672a\u91cd\u5199\u8be5\u503c\u7684\u5b50\u7c7b\u5f53\u4e2d\u7684\u503c\uff08\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u88ab\u5f71\u54cd\u7684\u5b50\u7c7b\u662f Child2\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u4e2a print \u8f93\u51fa\u662f 3 2 3\u3002","title":"\u5c0f\u8bd5\u725b\u5200(\u4ee5\u4e0b\u4e3a\u9762\u8bd5\u9898)"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#132","text":"","title":"13.2 \u518d\u8bba\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_4","text":"","title":"\u518d\u8bba\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#1_1","text":"\u5b83\u4eec\u5728\u5b9a\u4e49\u548c\u4f7f\u7528\u4e2d\u6709\u6240\u533a\u522b\uff0c\u800c\u6700\u672c\u8d28\u7684\u533a\u522b\u662f\u5185\u5b58\u4e2d\u4fdd\u5b58\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c \u5b9e\u4f8b\u5c5e\u6027\u5c5e\u4e8e\u5bf9\u8c61 \u7c7b\u5c5e\u6027\u5c5e\u4e8e\u7c7b class Province ( object ): # \u7c7b\u5c5e\u6027 country = '\u4e2d\u56fd' def __init__ ( self , name ): # \u5b9e\u4f8b\u5c5e\u6027 self . name = name # \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61 obj = Province ( '\u5c71\u4e1c\u7701' ) # \u76f4\u63a5\u8bbf\u95ee\u5b9e\u4f8b\u5c5e\u6027 print ( obj . name ) # \u76f4\u63a5\u8bbf\u95ee\u7c7b\u5c5e\u6027 Province . country \u7531\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u3010\u5b9e\u4f8b\u5c5e\u6027\u9700\u8981\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u3011\u3010\u7c7b\u5c5e\u6027\u901a\u8fc7\u7c7b\u8bbf\u95ee\u3011\uff0c\u5728\u4f7f\u7528\u4e0a\u53ef\u4ee5\u770b\u51fa\u5b9e\u4f8b\u5c5e\u6027\u548c\u7c7b\u5c5e\u6027\u7684\u5f52\u5c5e\u662f\u4e0d\u540c\u7684\u3002 \u5176\u5728\u5185\u5bb9\u7684\u5b58\u50a8\u65b9\u5f0f\u7c7b\u4f3c\u5982\u4e0b\u56fe\uff1a \u7531\u4e0a\u56fe\u770b\u51fa\uff1a \u7c7b\u5c5e\u6027\u5728\u5185\u5b58\u4e2d\u53ea\u4fdd\u5b58\u4e00\u4efd \u5b9e\u4f8b\u5c5e\u6027\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\u90fd\u8981\u4fdd\u5b58\u4e00\u4efd","title":"1. \u7c7b\u5c5e\u6027\u3001\u5b9e\u4f8b\u5c5e\u6027"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_5","text":"\u901a\u8fc7\u7c7b\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u6bcf\u4e2a\u5bf9\u8c61\u9700\u8981\u5177\u6709\u76f8\u540c\u540d\u5b57\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7c7b\u5c5e\u6027\uff0c\u7528\u4e00\u4efd\u65e2\u53ef","title":"\u5e94\u7528\u573a\u666f\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#2","text":"\u65b9\u6cd5\u5305\u62ec\uff1a\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u4e09\u79cd\u65b9\u6cd5\u5728\u5185\u5b58\u4e2d\u90fd\u5f52\u5c5e\u4e8e\u7c7b\uff0c\u533a\u522b\u5728\u4e8e\u8c03\u7528\u65b9\u5f0f\u4e0d\u540c\u3002 \u5b9e\u4f8b\u65b9\u6cd5\uff1a\u7531\u5bf9\u8c61\u8c03\u7528\uff1b\u81f3\u5c11\u4e00\u4e2aself\u53c2\u6570\uff1b\u6267\u884c\u5b9e\u4f8b\u65b9\u6cd5\u65f6\uff0c\u81ea\u52a8\u5c06\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5bf9\u8c61\u8d4b\u503c\u7ed9self\uff1b \u7c7b\u65b9\u6cd5\uff1a\u7531\u7c7b\u8c03\u7528\uff1b \u81f3\u5c11\u4e00\u4e2acls\u53c2\u6570\uff1b\u6267\u884c\u7c7b\u65b9\u6cd5\u65f6\uff0c\u81ea\u52a8\u5c06\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7c7b\u8d4b\u503c\u7ed9cls\uff1b \u9759\u6001\u65b9\u6cd5\uff1a\u7531\u7c7b\u8c03\u7528\uff1b\u65e0\u9ed8\u8ba4\u53c2\u6570\uff1b #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 8 22:52:19 2019 @author: zzh \"\"\" class Foo ( object ): def __init__ ( self , name ): self . name = name def ord_func ( self ): \"\"\" \u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u81f3\u5c11\u6709\u4e00\u4e2aself\u53c2\u6570 \"\"\" # print(self.name) print ( '\u5b9e\u4f8b\u65b9\u6cd5' ) @classmethod def class_func ( cls ): \"\"\" \u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u81f3\u5c11\u6709\u4e00\u4e2acls\u53c2\u6570 \"\"\" print ( '\u7c7b\u65b9\u6cd5' ) @staticmethod def static_func (): #(\u4e3b\u8981\u662f\u9632\u6b62\u51fa\u73b0\u53c8\u6709\u7c7b\u53c8\u6709\u7c7b\u5916\u7684\u51fd\u6570\u51fa\u73b0) \"\"\" \u5b9a\u4e49\u9759\u6001\u65b9\u6cd5 \uff0c\u65e0\u9ed8\u8ba4\u53c2\u6570\"\"\" print ( '\u9759\u6001\u65b9\u6cd5' ) f = Foo ( \"\u4e2d\u56fd\" ) # \u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5 f . ord_func () # \u8c03\u7528\u7c7b\u65b9\u6cd5 Foo . class_func () # \u8c03\u7528\u9759\u6001\u65b9\u6cd5 Foo . static_func () \u8fd0\u884c\u7ed3\u679c \u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5","title":"2. \u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_6","text":"\u76f8\u540c\u70b9\uff1a\u5bf9\u4e8e\u6240\u6709\u7684\u65b9\u6cd5\u800c\u8a00\uff0c\u5747\u5c5e\u4e8e\u7c7b\uff0c\u6240\u4ee5 \u5728\u5185\u5b58\u4e2d\u4e5f\u53ea\u4fdd\u5b58\u4e00\u4efd \u4e0d\u540c\u70b9\uff1a\u65b9\u6cd5\u8c03\u7528\u8005\u4e0d\u540c\u3001\u8c03\u7528\u65b9\u6cd5\u65f6\u81ea\u52a8\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u540c\u3002 \u6ce8\u610f: \u7c7b\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u7c7b\u5c5e\u6027\u53ca\u7c7b\u65b9\u6cd5,\u5b9e\u4f8b\u5bf9\u8c61\u4e09\u7c7b\u90fd\u53ef\u8fdb\u884c\u8c03\u7528.","title":"\u5bf9\u6bd4"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#property","text":"","title":"property\u5c5e\u6027"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#1-property","text":"\u4e00\u79cd\u7528\u8d77\u6765\u50cf\u662f\u4f7f\u7528\u7684\u5b9e\u4f8b\u5c5e\u6027\u4e00\u6837\u7684\u7279\u6b8a\u5c5e\u6027\uff0c\u53ef\u4ee5\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u65b9\u6cd5(\u4e0d\u7528\u5bf9\u8fd9\u4e2a\u65b9\u6cd5\u52a0\u62ec\u53f7) # ############### \u5b9a\u4e49 ############### class Foo : def func ( self ): pass # \u5b9a\u4e49property\u5c5e\u6027 @property def prop ( self ): pass # ############### \u8c03\u7528 ############### foo_obj = Foo () foo_obj . func () # \u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5 foo_obj . prop # \u8c03\u7528property\u5c5e\u6027","title":"1. \u4ec0\u4e48\u662fproperty\u5c5e\u6027"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#property_1","text":"\u5b9a\u4e49\u65f6\uff0c\u5728\u5b9e\u4f8b\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0 @property \u88c5\u9970\u5668\uff1b\u5e76\u4e14\u4ec5\u6709\u4e00\u4e2aself\u53c2\u6570 \u8c03\u7528\u65f6\uff0c\u65e0\u9700\u62ec\u53f7 \u65b9\u6cd5\uff1a foo_obj . func () property\u5c5e\u6027 \uff1a foo_obj . prop","title":"property\u5c5e\u6027\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#2_1","text":"\u5bf9\u4e8e\u4eac\u4e1c\u5546\u57ce\u4e2d\u663e\u793a\u7535\u8111\u4e3b\u673a\u7684\u5217\u8868\u9875\u9762\uff0c\u6bcf\u6b21\u8bf7\u6c42\u4e0d\u53ef\u80fd\u628a\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u663e\u793a\u5230\u9875\u9762\u4e0a\uff0c\u800c\u662f\u901a\u8fc7\u5206\u9875\u7684\u529f\u80fd\u5c40\u90e8\u663e\u793a\uff0c\u6240\u4ee5\u5728\u5411\u6570\u636e\u5e93\u4e2d\u8bf7\u6c42\u6570\u636e\u65f6\u5c31\u8981\u663e\u793a\u7684\u6307\u5b9a\u83b7\u53d6\u4ece\u7b2cm\u6761\u5230\u7b2cn\u6761\u7684\u6240\u6709\u6570\u636e \u8fd9\u4e2a\u5206\u9875\u7684\u529f\u80fd\u5305\u62ec\uff1a \u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684\u5f53\u524d\u9875\u548c\u603b\u6570\u636e\u6761\u6570\u8ba1\u7b97\u51fa m \u548c n \u6839\u636em \u548c n \u53bb\u6570\u636e\u5e93\u4e2d\u8bf7\u6c42\u6570\u636e #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 8 22:52:19 2019 @author: zzh \"\"\" # ############### \u5b9a\u4e49 ############### class Pager : def __init__ ( self , current_page ): # \u7528\u6237\u5f53\u524d\u8bf7\u6c42\u7684\u9875\u7801\uff08\u7b2c\u4e00\u9875\u3001\u7b2c\u4e8c\u9875...\uff09 self . current_page = current_page # \u6bcf\u9875\u9ed8\u8ba4\u663e\u793a10\u6761\u6570\u636e self . per_items = 10 @property def start ( self ): val = ( self . current_page - 1 ) * self . per_items return val @property def end ( self ): val = self . current_page * self . per_items return val if __name__ == \"__main__\" : # ############### \u8c03\u7528 ############### p = Pager ( 1 ) print ( p . start ) # \u5c31\u662f\u8d77\u59cb\u503c\uff0c\u5373\uff1am print ( p . end ) # \u5c31\u662f\u7ed3\u675f\u503c\uff0c\u5373\uff1an p = Pager ( 100 ) print ( p . start ) # \u5c31\u662f\u8d77\u59cb\u503c\uff0c\u5373\uff1am print ( p . end ) # \u5c31\u662f\u7ed3\u675f\u503c\uff0c\u5373\uff1an \u6267\u884c\u7ed3\u679c 0 10 990 1000","title":"2. \u7b80\u5355\u7684\u5b9e\u4f8b"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_7","text":"Python\u7684property\u5c5e\u6027\u7684\u529f\u80fd\u662f\uff1aproperty\u5c5e\u6027\u5185\u90e8\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u903b\u8f91\u8ba1\u7b97\uff0c\u6700\u7ec8\u5c06\u8ba1\u7b97\u7ed3\u679c\u8fd4\u56de\u3002(\u590d\u6742\u7684\u8ba1\u7b97\u5c01\u88c5\u5230\u65b9\u6cd5\u91cc\u8fdb\u884c\u8ba1\u7b97,\u4f46\u662f\u8c03\u7528\u7684\u65f6\u5019\u4f7f\u7528\u5c5e\u6027\u8fdb\u884c\u8c03\u7528.\u8fd9\u662f\u5c01\u88c5\u7684\u597d\u5904,\u800c\u4e14\u6bd4\u4f7f\u7528\u65b9\u6cd5\u7684\u597d\u5904\u662f\u4e0d\u7528\u8003\u8651\u4f20\u9012\u51e0\u4e2a\u53c2\u6570,\u8fd9\u6837\u4f1a\u65b9\u4fbf\u5f88\u591a)","title":"\u4ece\u4e0a\u8ff0\u53ef\u89c1"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#3-property","text":"\u88c5\u9970\u5668 \u5373\uff1a\u5728\u65b9\u6cd5\u4e0a\u5e94\u7528\u88c5\u9970\u5668 \u7c7b\u5c5e\u6027 \u5373\uff1a\u5728\u7c7b\u4e2d\u5b9a\u4e49\u503c\u4e3aproperty\u5bf9\u8c61\u7684\u7c7b\u5c5e\u6027","title":"3. property\u5c5e\u6027\u7684\u6709\u4e24\u79cd\u65b9\u5f0f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#31","text":"\u5728\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4e0a\u5e94\u7528@property\u88c5\u9970\u5668 Python\u4e2d\u7684\u7c7b\u6709 \u7ecf\u5178\u7c7b \u548c \u65b0\u5f0f\u7c7b \uff0c \u65b0\u5f0f\u7c7b \u7684\u5c5e\u6027\u6bd4 \u7ecf\u5178\u7c7b \u7684\u5c5e\u6027\u4e30\u5bcc\u3002\uff08 \u5982\u679c\u7c7b\u7ee7object\uff0c\u90a3\u4e48\u8be5\u7c7b\u662f\u65b0\u5f0f\u7c7b \uff09","title":"3.1 \u88c5\u9970\u5668\u65b9\u5f0f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#property_2","text":"# ############### \u5b9a\u4e49 ############### class Goods : @property def price ( self ): return \"laowang\" # ############### \u8c03\u7528 ############### obj = Goods () result = obj . price # \u81ea\u52a8\u6267\u884c @property \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c print ( result )","title":"\u7ecf\u5178\u7c7b\uff0c\u5177\u6709\u4e00\u79cd@property\u88c5\u9970\u5668"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#property_3","text":"#coding=utf-8 # ############### \u5b9a\u4e49 ############### class Goods : \"\"\"python3\u4e2d\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b \u4ee5python2\u30013\u6267\u884c\u6b64\u7a0b\u5e8f\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u56e0\u4e3a\u53ea\u6709\u5728python3\u4e2d\u624d\u6709@xxx.setter @xxx.deleter \"\"\" @property def price ( self ): print ( '@property' ) @price.setter def price ( self , value ): print ( '@price.setter' ) @price.deleter def price ( self ): print ( '@price.deleter' ) # ############### \u8c03\u7528 ############### obj = Goods () obj . price # \u81ea\u52a8\u6267\u884c @property \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c obj . price = 123 # \u81ea\u52a8\u6267\u884c @price.setter \u4fee\u9970\u7684 price \u65b9\u6cd5\uff0c\u5e76\u5c06 123 \u8d4b\u503c\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570 del obj . price # \u81ea\u52a8\u6267\u884c @price.deleter \u4fee\u9970\u7684 price \u65b9\u6cd5","title":"\u65b0\u5f0f\u7c7b\uff0c\u5177\u6709\u4e09\u79cd@property\u88c5\u9970\u5668"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_8","text":"\u7ecf\u5178\u7c7b\u4e2d\u7684\u5c5e\u6027\u53ea\u6709\u4e00\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5176\u5bf9\u5e94\u88ab @property \u4fee\u9970\u7684\u65b9\u6cd5 \u65b0\u5f0f\u7c7b\u4e2d\u7684\u5c5e\u6027\u6709\u4e09\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5e76\u5206\u522b\u5bf9\u5e94\u4e86\u4e09\u4e2a\u88ab@property\u3001@\u65b9\u6cd5\u540d.setter\u3001@\u65b9\u6cd5\u540d.deleter\u4fee\u9970\u7684\u65b9\u6cd5 \u7531\u4e8e\u65b0\u5f0f\u7c7b\u4e2d\u5177\u6709\u4e09\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b83\u4eec\u51e0\u4e2a\u5c5e\u6027\u7684\u8bbf\u95ee\u7279\u70b9\uff0c\u5206\u522b\u5c06\u4e09\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u5bf9\u540c\u4e00\u4e2a\u5c5e\u6027\uff1a\u83b7\u53d6\u3001\u4fee\u6539\u3001\u5220\u9664(\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u7528\u7684\u65f6\u5019\u7b80\u4ecb) class Goods ( object ): def __init__ ( self ): # \u539f\u4ef7 self . original_price = 100 # \u6298\u6263 self . discount = 0.8 @property def price ( self ): # \u5b9e\u9645\u4ef7\u683c = \u539f\u4ef7 * \u6298\u6263 new_price = self . original_price * self . discount return new_price @price.setter def price ( self , value ): self . original_price = value #\u53ef\u4ee5\u4f5c\u4e00\u4e9b\u4fee\u6539 @price.deleter def price ( self ): del self . original_price #\u5220\u9664\u5b9e\u4f8b\u5c5e\u6027 obj = Goods () obj . price # \u83b7\u53d6\u5546\u54c1\u4ef7\u683c obj . price = 200 # \u4fee\u6539\u5546\u54c1\u539f\u4ef7 del obj . price # \u5220\u9664\u5546\u54c1\u539f\u4ef7 \u4e00\u822c\u7528\u7684\u5c31\u662f\u83b7\u53d6\u6839\u8bbe\u7f6e\u7684\u5c5e\u6027 @property @price.setter(\u8bbe\u7f6e)","title":"\u6ce8\u610f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#32-property","text":"\u5f53\u4f7f\u7528\u7c7b\u5c5e\u6027\u7684\u65b9\u5f0f\u521b\u5efaproperty\u5c5e\u6027\u65f6\uff0c \u7ecf\u5178\u7c7b \u548c \u65b0\u5f0f\u7c7b \u65e0\u533a\u522b class Foo : def get_bar ( self ): return 'laowang' BAR = property ( get_bar ) #\u76f8\u5f53\u4e8e\u7c7b\u5c5e\u6027,\u53ea\u4e0d\u8fc7\u662f\u5bf9\u8c61\u65b9\u6cd5\u7684\u8fd4\u56de\u503c obj = Foo () reuslt = obj . BAR # \u81ea\u52a8\u8c03\u7528get_bar\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c print ( reuslt ) property\u65b9\u6cd5\u4e2d\u6709\u4e2a\u56db\u4e2a\u53c2\u6570 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027 \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027 \uff1d XXX \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u65b9\u6cd5\u540d\uff0c\u8c03\u7528 del \u5bf9\u8c61.\u5c5e\u6027 \u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u65b9\u6cd5 \u7b2c\u56db\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u8c03\u7528 \u5bf9\u8c61.\u5c5e\u6027. doc \uff0c\u6b64\u53c2\u6570\u662f\u8be5\u5c5e\u6027\u7684\u63cf\u8ff0\u4fe1\u606f #coding=utf-8 class Foo ( object ): def get_bar ( self ): print ( \"getter...\" ) return 'laowang' def set_bar ( self , value ): \"\"\"\u5fc5\u987b\u4e24\u4e2a\u53c2\u6570\"\"\" print ( \"setter...\" ) return 'set value' + value def del_bar ( self ): print ( \"deleter...\" ) return 'laowang' BAR = property ( get_bar , set_bar , del_bar , \"description...\" ) obj = Foo () obj . BAR # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1aget_bar obj . BAR = \"alex\" # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1aset_bar\u65b9\u6cd5\uff0c\u5e76\u5c06\u201calex\u201d\u5f53\u4f5c\u53c2\u6570\u4f20\u5165 desc = Foo . BAR . __doc__ # \u81ea\u52a8\u83b7\u53d6\u7b2c\u56db\u4e2a\u53c2\u6570\u4e2d\u8bbe\u7f6e\u7684\u503c\uff1adescription... print ( desc ) del obj . BAR # \u81ea\u52a8\u8c03\u7528\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1adel_bar\u65b9\u6cd5 \u7531\u4e8e \u7c7b\u5c5e\u6027\u65b9\u5f0f \u521b\u5efaproperty\u5c5e\u6027\u5177\u67093\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b83\u4eec\u51e0\u4e2a\u5c5e\u6027\u7684\u8bbf\u95ee\u7279\u70b9\uff0c\u5206\u522b\u5c06\u4e09\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u5bf9\u540c\u4e00\u4e2a\u5c5e\u6027\uff1a\u83b7\u53d6\u3001\u4fee\u6539\u3001\u5220\u9664 class Goods ( object ): def __init__ ( self ): # \u539f\u4ef7 self . original_price = 100 # \u6298\u6263 self . discount = 0.8 def get_price ( self ): # \u5b9e\u9645\u4ef7\u683c = \u539f\u4ef7 * \u6298\u6263 new_price = self . original_price * self . discount return new_price def set_price ( self , value ): self . original_price = value def del_price ( self ): del self . original_price PRICE = property ( get_price , set_price , del_price , '\u4ef7\u683c\u5c5e\u6027\u63cf\u8ff0...' ) obj = Goods () obj . PRICE # \u83b7\u53d6\u5546\u54c1\u4ef7\u683c obj . PRICE = 200 # \u4fee\u6539\u5546\u54c1\u539f\u4ef7 del obj . PRICE # \u5220\u9664\u5546\u54c1\u539f\u4ef7","title":"3.2 \u7c7b\u5c5e\u6027\u65b9\u5f0f\uff0c\u521b\u5efa\u503c\u4e3aproperty\u5bf9\u8c61\u7684\u7c7b\u5c5e\u6027"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#4-djangoproperty","text":"WEB\u6846\u67b6 Django \u7684\u89c6\u56fe\u4e2d request.POST \u5c31\u662f\u4f7f\u7528\u7684\u7c7b\u5c5e\u6027\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5c5e\u6027 class WSGIRequest ( http . HttpRequest ): def __init__ ( self , environ ): script_name = get_script_name ( environ ) path_info = get_path_info ( environ ) if not path_info : # Sometimes PATH_INFO exists, but is empty (e.g. accessing # the SCRIPT_NAME URL without a trailing slash). We really need to # operate as if they'd requested '/'. Not amazingly nice to force # the path like this, but should be harmless. path_info = '/' self . environ = environ self . path_info = path_info self . path = ' %s / %s ' % ( script_name . rstrip ( '/' ), path_info . lstrip ( '/' )) self . META = environ self . META [ 'PATH_INFO' ] = path_info self . META [ 'SCRIPT_NAME' ] = script_name self . method = environ [ 'REQUEST_METHOD' ] . upper () _ , content_params = cgi . parse_header ( environ . get ( 'CONTENT_TYPE' , '' )) if 'charset' in content_params : try : codecs . lookup ( content_params [ 'charset' ]) except LookupError : pass else : self . encoding = content_params [ 'charset' ] self . _post_parse_error = False try : content_length = int ( environ . get ( 'CONTENT_LENGTH' )) except ( ValueError , TypeError ): content_length = 0 self . _stream = LimitedStream ( self . environ [ 'wsgi.input' ], content_length ) self . _read_started = False self . resolver_match = None def _get_scheme ( self ): return self . environ . get ( 'wsgi.url_scheme' ) def _get_request ( self ): warnings . warn ( '`request.REQUEST` is deprecated, use `request.GET` or ' '`request.POST` instead.' , RemovedInDjango19Warning , 2 ) if not hasattr ( self , '_request' ): self . _request = datastructures . MergeDict ( self . POST , self . GET ) return self . _request @cached_property def GET ( self ): # The WSGI spec says 'QUERY_STRING' may be absent. raw_query_string = get_bytes_from_wsgi ( self . environ , 'QUERY_STRING' , '' ) return http . QueryDict ( raw_query_string , encoding = self . _encoding ) # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### def _get_post ( self ): if not hasattr ( self , '_post' ): self . _load_post_and_files () return self . _post # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### def _set_post ( self , post ): self . _post = post @cached_property def COOKIES ( self ): raw_cookie = get_str_from_wsgi ( self . environ , 'HTTP_COOKIE' , '' ) return http . parse_cookie ( raw_cookie ) def _get_files ( self ): if not hasattr ( self , '_files' ): self . _load_post_and_files () return self . _files # ############### \u770b\u8fd9\u91cc\u770b\u8fd9\u91cc ############### POST = property ( _get_post , _set_post ) FILES = property ( _get_files ) REQUEST = property ( _get_request )","title":"4. Django\u6846\u67b6\u4e2d\u5e94\u7528\u4e86property\u5c5e\u6027\uff08\u4e86\u89e3\uff09"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_9","text":"\u5b9a\u4e49property\u5c5e\u6027\u5171\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u3010\u88c5\u9970\u5668\u3011\u548c\u3010\u7c7b\u5c5e\u6027\u3011\uff0c\u800c\u3010\u88c5\u9970\u5668\u3011\u65b9\u5f0f\u9488\u5bf9\u7ecf\u5178\u7c7b\u548c\u65b0\u5f0f\u7c7b\u53c8\u6709\u6240\u4e0d\u540c\u3002 \u901a\u8fc7\u4f7f\u7528property\u5c5e\u6027\uff0c\u80fd\u591f\u7b80\u5316\u8c03\u7528\u8005\u5728\u83b7\u53d6\u6570\u636e\u7684\u6d41\u7a0b","title":"\u7efc\u4e0a\u6240\u8ff0:"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#134property-","text":"","title":"13.4property\u5c5e\u6027-\u5e94\u7528"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#1-gettersetterpython","text":"class Money ( object ): def __init__ ( self ): self . __money = 0 #\u79c1\u6709\u5c5e\u6027 def getMoney ( self ): #get\u65b9\u6cd5 return self . __money def setMoney ( self , value ): #set\u65b9\u6cd5 if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" )","title":"1. \u79c1\u6709\u5c5e\u6027\u6dfb\u52a0getter\u548csetter\u65b9\u6cd5(python\u4e00\u822c\u662f\u4e0d\u7528\u7684)"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#2-propertygettersetter","text":"class Money ( object ): def __init__ ( self ): self . __money = 0 def getMoney ( self ): return self . __money def setMoney ( self , value ): if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" ) # \u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\uff0c\u5f53\u5bf9\u8fd9\u4e2amoney\u8bbe\u7f6e\u503c\u65f6\u8c03\u7528setMoney,\u5f53\u83b7\u53d6\u503c\u65f6\u8c03\u7528getMoney money = property ( getMoney , setMoney ) #\u7c7b\u5c5e\u6027 a = Money () a . money = 100 # \u8c03\u7528setMoney\u65b9\u6cd5 print ( a . money ) # \u8c03\u7528getMoney\u65b9\u6cd5 #100","title":"2. \u4f7f\u7528property\u5347\u7ea7getter\u548csetter\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#3-propertygettersetter","text":"\u91cd\u65b0\u5b9e\u73b0\u4e00\u4e2a\u5c5e\u6027\u7684\u8bbe\u7f6e\u548c\u8bfb\u53d6\u65b9\u6cd5,\u53ef\u505a\u8fb9\u754c\u5224\u5b9a class Money ( object ): def __init__ ( self ): self . __money = 0 # \u4f7f\u7528\u88c5\u9970\u5668\u5bf9money\u8fdb\u884c\u88c5\u9970\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u53ebmoney\u7684\u5c5e\u6027\uff0c\u5f53\u8c03\u7528\u83b7\u53d6money\u7684\u503c\u65f6\uff0c\u8c03\u7528\u88c5\u9970\u7684\u65b9\u6cd5 @property def money ( self ): return self . __money # \u4f7f\u7528\u88c5\u9970\u5668\u5bf9money\u8fdb\u884c\u88c5\u9970\uff0c\u5f53\u5bf9money\u8bbe\u7f6e\u503c\u65f6\uff0c\u8c03\u7528\u88c5\u9970\u7684\u65b9\u6cd5 @money.setter def money ( self , value ): if isinstance ( value , int ): self . __money = value else : print ( \"error:\u4e0d\u662f\u6574\u578b\u6570\u5b57\" ) a = Money () a . money = 100 print ( a . money )","title":"3. \u4f7f\u7528property\u53d6\u4ee3getter\u548csetter\u65b9\u6cd5"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#135","text":"\u65e0\u8bba\u4eba\u6216\u4e8b\u7269\u5f80\u5f80\u90fd\u6709\u4e0d\u6309\u5957\u8def\u51fa\u724c\u7684\u60c5\u51b5\uff0cPython\u7684\u7c7b\u5c5e\u6027\u4e5f\u662f\u5982\u6b64\uff0c\u5b58\u5728\u7740\u4e00\u4e9b\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5c5e\u6027\uff0c\u8be6\u60c5\u5982\u4e0b\uff1a","title":"13.5 \u9b54\u6cd5\u5c5e\u6027"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#1-__doc__","text":"\u8868\u793a\u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f class Foo : \"\"\" \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 \"\"\" #\u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f def func ( self ): pass print ( Foo . __doc__ ) \u6267\u884c\u7ed3\u679c \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 \u4e5f\u53ef\u4ee5\u4f7f\u7528help\u51fd\u6570\u83b7\u5f97\u540c\u6837\u7684\u6548\u679c help ( Foo ) Help on class Foo in module __main__ : class Foo ( builtins . object ) | \u63cf\u8ff0\u7c7b\u4fe1\u606f\uff0c\u8fd9\u662f\u7528\u4e8e\u770b\u7247\u7684\u795e\u5947 | | Methods defined here : | | func ( self ) | | ---------------------------------------------------------------------- | Data descriptors defined here : | | __dict__ | dictionary for instance variables ( if defined ) | | __weakref__ | list of weak references to the object ( if defined )","title":"1. __doc__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#2-__module__-__class__","text":"module \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u5728\u90a3\u4e2a\u6a21\u5757 class \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u7684\u7c7b\u662f\u4ec0\u4e48 test . py # -*- coding:utf-8 -*- class Person ( object ): def __init__ ( self ): self . name = 'laowang' main . py from test import Person obj = Person () print ( obj . __module__ ) # \u8f93\u51fa test \u5373\uff1a\u8f93\u51fa\u6a21\u5757 print ( obj . __class__ ) # \u8f93\u51fa test.Person \u5373\uff1a\u8f93\u51fa\u7c7b \u6267\u884cmain.py test < class ' test . Person '>","title":"2. __module__ \u548c __class__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#3__init__","text":"\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u7c7b\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6267\u884c class Person : def __init__ ( self , name ): self . name = name self . age = 18 obj = Person ( 'laowang' ) # \u81ea\u52a8\u6267\u884c\u7c7b\u4e2d\u7684 __init__ \u65b9\u6cd5","title":"3.__init__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#4-__del__","text":"\u5f53\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u88ab\u91ca\u653e\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u3002 \u6ce8\uff1a\u6b64\u65b9\u6cd5\u4e00\u822c\u65e0\u987b\u5b9a\u4e49\uff0c\u56e0\u4e3aPython\u662f\u4e00\u95e8\u9ad8\u7ea7\u8bed\u8a00\uff0c\u7a0b\u5e8f\u5458\u5728\u4f7f\u7528\u65f6\u65e0\u9700\u5173\u5fc3\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\uff0c\u56e0\u4e3a\u6b64\u5de5\u4f5c\u90fd\u662f\u4ea4\u7ed9Python\u89e3\u91ca\u5668\u6765\u6267\u884c\uff0c\u6240\u4ee5\uff0c __del__ \u7684\u8c03\u7528\u662f\u7531\u89e3\u91ca\u5668\u5728\u8fdb\u884c\u5783\u573e\u56de\u6536\u65f6\u81ea\u52a8\u89e6\u53d1\u6267\u884c\u7684\u3002 class Foo : def __del__ ( self ): pass","title":"4. __del__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#5-__call__","text":"\u5bf9\u8c61\u540e\u9762\u52a0\u62ec\u53f7\uff0c\u89e6\u53d1\u6267\u884c\u3002 \u6ce8\uff1a __init__ \u65b9\u6cd5\u7684\u6267\u884c\u662f\u7531\u521b\u5efa\u5bf9\u8c61\u89e6\u53d1\u7684\uff0c\u5373\uff1a \u5bf9\u8c61 = \u7c7b\u540d() \uff1b\u800c\u5bf9\u4e8e __call__ \u65b9\u6cd5\u7684\u6267\u884c\u662f\u7531\u5bf9\u8c61\u540e\u52a0\u62ec\u53f7\u89e6\u53d1\u7684\uff0c\u5373\uff1a \u5bf9\u8c61() \u6216\u8005 \u7c7b()() class Foo : def __init__ ( self ): pass def __call__ ( self , * args , ** kwargs ): print ( '__call__' ) print ( \"\u6211\u662fcall\u65b9\u6cd5\" ) obj = Foo () # \u6267\u884c __init__ obj () # \u6267\u884c __call__ \u6267\u884c\u7ed3\u679c __call__ \u6211\u662f call\u65b9\u6cd5","title":"5. __call__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#6-__dict__","text":"\u7c7b\u6216\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027 \u7c7b\u7684\u5b9e\u4f8b\u5c5e\u6027\u5c5e\u4e8e\u5bf9\u8c61\uff1b\u7c7b\u4e2d\u7684\u7c7b\u5c5e\u6027\u548c\u65b9\u6cd5\u7b49\u5c5e\u4e8e\u7c7b\uff0c\u5373\uff1a class Province ( object ): country = 'China' def __init__ ( self , name , count ): self . name = name self . count = count def func ( self , * args , ** kwargs ): print ( 'func' ) # \u83b7\u53d6\u7c7b\u7684\u5c5e\u6027\uff0c\u5373\uff1a\u7c7b\u5c5e\u6027\u3001\u65b9\u6cd5\u3001 print ( Province . __dict__ ) # \u8f93\u51fa\uff1a{'__dict__': <attribute '__dict__' of 'Province' objects>, '__module__': '__main__', 'country': 'China', '__doc__': None, '__weakref__': <attribute '__weakref__' of 'Province' objects>, 'func': <function Province.func at 0x101897950>, '__init__': <function Province.__init__ at 0x1018978c8>} obj1 = Province ( '\u5c71\u4e1c' , 10000 ) print ( obj1 . __dict__ ) # \u83b7\u53d6 \u5bf9\u8c61obj1 \u7684\u5c5e\u6027 # \u8f93\u51fa\uff1a{'count': 10000, 'name': '\u5c71\u4e1c'} obj2 = Province ( '\u5c71\u897f' , 20000 ) print ( obj2 . __dict__ ) # \u83b7\u53d6 \u5bf9\u8c61obj1 \u7684\u5c5e\u6027 # \u8f93\u51fa\uff1a{'count': 20000, 'name': '\u5c71\u897f'}","title":"6. __dict__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#7__str__","text":"\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __str__ \u65b9\u6cd5\uff0c\u90a3\u4e48\u5728\u6253\u5370 \u5bf9\u8c61 \u65f6\uff0c\u9ed8\u8ba4\u8f93\u51fa\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002 obj = Foo () # -*- coding: utf-8 -*- #main.py class Foo : def __str__ ( self ): return 'laowang' obj = Foo () print ( obj ) #\u6839\u5bf9\u8c61()\u8fdb\u884c\u533a\u522b # \u8f93\u51fa\uff1alaowang print ( \"\u5bf9\u8c61\u7684\u63cf\u8ff0 % s \" % obj ) #\u4f7f\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e5f\u662f\u53ef\u4ee5\u5f97\u5230\u5bf9\u8c61\u7684str\u63cf\u8ff0\u7684 print ( obj ) #\u6839\u5bf9\u8c61()\u8fdb\u884c\u533a\u522b # \u8f93\u51fa\uff1alaowang \u6267\u884c laowang \u5bf9\u8c61\u7684\u63cf\u8ff0 laowang","title":"7.__str__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#8__getitem____setitem____delitem__","text":"\u7528\u4e8e\u7d22\u5f15\u64cd\u4f5c\uff0c\u5982\u5b57\u5178\u3002\u4ee5\u4e0a\u5206\u522b\u8868\u793a\u83b7\u53d6\u3001\u8bbe\u7f6e\u3001\u5220\u9664\u6570\u636e # -*- coding:utf-8 -*- class Foo ( object ): def __getitem__ ( self , key ): print ( '__getitem__' , key ) def __setitem__ ( self , key , value ): print ( '__setitem__' , key , value ) def __delitem__ ( self , key ): print ( '__delitem__' , key ) obj = Foo () result = obj [ 'k1' ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __getitem__ obj [ 'k2' ] = 'laowang' # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __setitem__ del obj [ 'k1' ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __delitem__","title":"8\u3001__getitem__\u3001__setitem__\u3001__delitem__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#9__getslice____setslice____delslice__","text":"\u8be5\u4e09\u4e2a\u65b9\u6cd5\u7528\u4e8e\u5206\u7247\u64cd\u4f5c\uff0c\u5982\uff1a\u5217\u8868 # -*- coding:utf-8 -*- class Foo ( object ): def __getslice__ ( self , i , j ): print ( '__getslice__' , i , j ) def __setslice__ ( self , i , j , sequence ): print ( '__setslice__' , i , j ) def __delslice__ ( self , i , j ): print ( '__delslice__' , i , j ) obj = Foo () obj [ - 1 : 1 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __getslice__ obj [ 0 : 1 ] = [ 11 , 22 , 33 , 44 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __setslice__ del obj [ 0 : 2 ] # \u81ea\u52a8\u89e6\u53d1\u6267\u884c __delslice__","title":"9\u3001__getslice__\u3001__setslice__\u3001__delslice__"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#136","text":"\u7ee7\u627f - \u662f\u57fa\u4e8ePython\u4e2d\u7684\u5c5e\u6027\u67e5\u627e(\u5982X.name) \u591a\u6001 - \u5728X.method\u65b9\u6cd5\u4e2d\uff0cmethod\u7684\u610f\u4e49\u53d6\u51b3\u4e8eX\u7684\u7c7b\u578b(\u5b50\u7c7b\u91cd\u5199\u4e86\u7528\u5b57\u7c7b\u7684,\u6ca1\u6709\u91cd\u5199\u7528\u7236\u7c7b\u7684.\u540c\u6837\u662f\u5f00\u8f66,\u7236\u4eb2\u5f00\u5927\u8d27\u8f66,\u513f\u5b50\u5f00\u5c0f\u8d27\u8f66.\u8fd9\u5c31\u662f\u591a\u6001) \u5c01\u88c5 - \u65b9\u6cd5\u548c\u8fd0\u7b97\u7b26\u5b9e\u73b0\u884c\u4e3a\uff0c\u6570\u636e\u9690\u85cf\u9ed8\u8ba4\u662f\u4e00\u79cd\u60ef\u4f8b","title":"13.6 \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_10","text":"\u817e\u8baf\u5373\u65f6\u901a\u4fe1\u6a21\u5757,\u521d\u7ea7\u5c01\u88c5 #! /usr/bin/env python # coding: utf-8 import random import time class Message ( object ): def __init__ ( self , msgarr = [], toacc = '' ): self . msgbody = msgarr # \u6b64\u5904\u4e3aMsgDict\u5bf9\u8c61\u5b9e\u4f8b\u7684\u5217\u8868\u6216\u8005\u7a7a\u5217\u8868 self . toacc = toacc # toacc\u4e3a\u5b57\u7b26\u4e32(\u5355\u53d1)\u6216\u8005\u5217\u8868(\u6279\u91cf\u53d1) self . msgrandom = random . randint ( 1 , 1000000000 ) self . msgrequest = { 'To_Account' : toacc , # \u6d88\u606f\u63a5\u6536\u65b9\u8d26\u53f7 'MsgRandom' : self . msgrandom , # \u6d88\u606f\u968f\u673a\u6570\uff0c\u7531\u968f\u673a\u51fd\u6570\u4ea7\u751f 'MsgBody' : [ t . msg for t in msgarr ] } def del_option ( self , option ): if option in ( set ( self . msgrequest ) - set ([ 'To_Account' , 'MsgRandom' , 'MsgBody' ])): self . __dict__ . pop ( option ) self . msgrequest . pop ( option ) def append_msg ( self , msg ): self . msgbody . append ( msg ) self . msgrequest [ 'MsgBody' ] . append ( msg . msg ) def insert_msg ( self , index , msg ): self . msgbody . insert ( index , msg ) self . msgrequest [ 'MsgBody' ] . insert ( msg . msg ) def del_msg ( self , index ): if index in range ( len ( self . msgbody )): del self . msgbody [ index ] del sel . msgrequest [ 'MsgBody' ][ index ] def set_from ( self , fromacc ): # \u6307\u5b9a\u6d88\u606f\u7684\u53d1\u9001\u65b9\uff0c\u9ed8\u8ba4\u4e3a\u670d\u52a1\u5668\u53d1\u9001 self . fromacc = fromacc self . msgrequest [ 'From_Account' ] = fromacc def set_to ( self , toacc ): # \u6307\u5b9a\u6d88\u606f\u7684\u63a5\u6536\u65b9\uff0c\u53ef\u4ee5\u4e3aString(\u5355\u53d1),\u53ef\u4ee5\u4e3aList(\u6279\u91cf\u53d1\u9001) self . toacc = toacc self . msgrequest [ 'To_Account' ] = toacc def refresh_random ( self ): self . msgrandom = random . randint ( 1 , 1000000000 ) self . msgrequest [ 'MsgRandom' ] = self . msgrandom , # \u6d88\u606f\u968f\u673a\u6570\uff0c\u7531\u968f\u673a\u51fd\u6570\u4ea7\u751f def set_sync ( self , sync ): # \u540c\u6b65\u9009\u9879\uff1a1, \u628a\u6d88\u606f\u540c\u6b65\u5230From_Account\u5728\u7ebf\u7ec8\u7aef\u548c\u6f2b\u6e38\u4e0a # 2, \u6d88\u606f\u4e0d\u540c\u6b65\u81f3From_Account # \u82e5\u4e0d\u586b\u5199\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5c06\u6d88\u606f\u540c\u6b65 # \u4ec5\u5728\u5355\u53d1\u5355\u804a\u6d88\u606f\u4e2d\u53ef\u8c03\u7528 self . sync = sync self . msgrequest [ 'SyncOtherMachine' ] = sync def set_timestamp ( self ): # \u8bbe\u7f6e\u6d88\u606f\u65f6\u95f4\u6233\uff0cunix\u65f6\u95f4, \u4ec5\u5728\u5355\u53d1\u5355\u804a\u6d88\u606f\u4e2d\u53ef\u4ee5\u8c03\u7528 self . timestamp = int ( time . time ()) self . msgrequest [ 'MsgTimeStamp' ] = self . timestamp def set_offlinepush ( self , pushflag = 0 , desc = '' , ext = '' , sound = '' ): # \u4ec5\u9002\u7528\u4e8eAPNa\u63a8\u9001\uff0c\u4e0d\u9002\u7528\u4e8e\u5b89\u5353\u5382\u5546\u63a8\u9001 self . msgrequest [ 'OfflinePushInfo' ] = { 'PushFlag' : pushflag , 'Desc' : desc , 'Ext' : ext , 'Sound' : sound } class MsgDict ( object ): def __init__ ( self , msgtype = '' , msgcontent = {}): self . msgtype = msgtype self . msgcontent = msgcontent @property def msg ( self ): return { 'MsgType' : self . msgtype , 'MsgContent' : self . msgcontent } def set_content ( self , content ): self . msgcontent = content class TextMsg ( MsgDict ): def __init__ ( self , text = '' , msgtype = 'TIMTextElem' ): self . text = text content = { 'Text' : text } super ( TextMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_text ( self , text ): self . text = text self . msgcontent [ 'Text' ] = text class LocationMsg ( MsgDict ): def __init__ ( self , desc = '' , latitude = 0 , longitude = 0 , msgtype = 'TIMLocationElem' ): self . desc = desc self . latitude = latitude self . longitude = longitude content = { 'Desc' : desc , # \u5730\u7406\u4f4d\u7f6e\u63cf\u8ff0\u4fe1\u606f, String 'Latitude' : latitude , # \u7eac\u5ea6, Number 'Longitude' : longitude # \u7ecf\u5ea6, Number } super ( LocationMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_desc ( self , desc ): self . desc = desc self . msgcontent [ 'Desc' ] = desc def set_location ( self , latitude , longitude ): self . latitude = latitude self . longitude = longitude self . msgcontent [ 'Latitude' ] = latitude self . msgcontent [ 'Longitude' ] = longitude def set_latitude ( self , latitude ): self . latitude = latitude self . msgcontent [ 'Latitude' ] = latitude def set_longitude ( self , longitude ): self . longitude = longitude self . msgcontent [ 'Longitude' ] = longitude class FaceMsg ( MsgDict ): def __init__ ( self , index = 1 , data = '' , msgtype = 'TIMFaceElem' ): self . index = index self . data = data content = { 'Index' : index , # \u8868\u60c5\u7d22\u5f15\uff0c\u7528\u6237\u81ea\u5b9a\u4e49, Number 'Data' : data # \u989d\u5916\u6570\u636e, String } super ( TextMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_index ( self , index ): self . index = index self . msgcontent [ 'Index' ] = index def set_data ( self , data ): self . data = data self . msgcontent [ 'Data' ] = data class CustomMsg ( MsgDict ): def __init__ ( self , data = '' , desc = '' , ext = '' , sound = '' , msgtype = 'TIMCustomElem' ): self . data = data self . desc = desc self . ext = ext self . sound = sound content = { 'Data' : data , # \u81ea\u5b9a\u4e49\u6d88\u606f\u6570\u636e\u3002\u4e0d\u4f5c\u4e3aAPNS\u7684payload\u4e2d\u5b57\u6bb5\u4e0b\u53d1\uff0c\u6545\u4ecepayload\u4e2d\u65e0\u6cd5\u83b7\u53d6Data\u5b57\u6bb5, String 'Desc' : desc , # \u81ea\u5b9a\u4e49\u6d88\u606f\u63cf\u8ff0\uff0c\u5f53\u63a5\u6536\u65b9\u4e3aiphone\u540e\u53f0\u5728\u7ebf\u65f6\uff0c\u505aios\u79bb\u7ebfPush\u65f6\u6587\u672c\u5c55\u793a 'Ext' : ext , # \u6269\u5c55\u5b57\u6bb5\uff0c\u5f53\u63a5\u6536\u65b9\u4e3aios\u7cfb\u7edf\u4e14\u5e94\u7528\u5904\u5728\u540e\u53f0\u65f6\uff0c\u6b64\u5b57\u6bb5\u4f5c\u4e3aAPNS\u8bf7\u6c42\u5305Payloads\u4e2d\u7684ext\u952e\u503c\u4e0b\u53d1\uff0cExt\u7684\u534f\u8bae\u683c\u5f0f\u7531\u4e1a\u52a1\u65b9\u786e\u5b9a\uff0cAPNS\u53ea\u505a\u900f\u4f20 'Sound' : sound # \u81ea\u5b9a\u4e49APNS\u63a8\u9001\u94c3\u58f0 } super ( CustomMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_data ( self , data ): self . data = data self . msgcontent [ 'Data' ] = data def set_desc ( self , desc ): self . desc = desc self . msgcontent [ 'Desc' ] = desc def set_ext ( self , ext ): self . ext = ext self . msgcontent [ 'Ext' ] = ext def set_sound ( self , sound ): self . sound = sound self . msgcontent [ 'Sound' ] = sound class SoundMsg ( MsgDict ): def __init__ ( self , uuid = '' , size = 0 , second = 0 , msgtype = 'TIMSoundElem' ): self . uuid = uuid self . size = size self . second = second content = { 'UUID' : uuid , # \u8bed\u97f3\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'Size' : size , # \u8bed\u97f3\u6570\u636e\u5927\u5c0f, Number 'Second' : second # \u8bed\u97f3\u65f6\u957f\uff0c\u5355\u4f4d\u79d2 Number } super ( SoundMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = uuid def set_size ( self , size ): self . size = size self . msgcontent [ 'Size' ] = size def set_second ( self , second ): self . second = second self . msgcontent [ 'Second' ] = second class ImageMsg ( MsgDict ): def __init__ ( self , uuid = '' , imgformat = 0 , imginfo = [], msgtype = 'TIMImageElem' ): self . uuid = uuid self . imgformat = imgformat self . imginfo = imginfo content = { 'UUID' : uuid , # \u56fe\u7247\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'ImageFormat' : imgformat , # \u56fe\u7247\u683c\u5f0f\uff0c BMP=1, JPG=2, GIF=3, \u5176\u4ed6=0, Number 'ImageInfoArray' : [ t . info for t in imginfo ] # \u539f\u56fe\uff0c\u7f29\u7565\u56fe\u6216\u8005\u5927\u56fe\u4e0b\u8f7d\u4fe1\u606f, Array } super ( ImageMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = uuid def set_format ( self , imgformat ): self . imgformat = imgformat self . msgcontent [ 'ImageFormat' ] = imgformat def append_info ( self , info ): # info \u4e3aImageInfo\u5bf9\u8c61\u5b9e\u4f8b self . imginfo . append ( info ) self . msgcontnet [ 'ImageInfoArray' ] . append ( info . info ) def insert_info ( self , index , info ): self . imginfo . insert ( index , info ) self . msgcontent [ 'ImageInfoArray' ] . insert ( index , info . info ) def del_info ( self , index ): del self . imginfo [ index ] del self . msgcontent [ 'ImageInfoArray' ][ index ] class FileMsg ( MsgDict ): def __init__ ( self , uuid = '' , size = 0 , name = '' , msgtype = 'TIMFileElem' ): self . uuid = uuid self . size = size self . name = name content = { 'UUID' : uuid , # \u6587\u4ef6\u5e8f\u5217\u53f7\uff0c\u540e\u53f0\u7528\u4e8e\u7d22\u5f15\u8bed\u97f3\u7684\u952e\u503c\uff0cString 'FileSize' : size , # \u6587\u4ef6\u6570\u636e\u5927\u5c0f, Number 'FileName' : name # \u6587\u4ef6\u540d\u79f0/\u8def\u5f84\uff0c String } super ( FileMsg , self ) . __init__ ( msgtype = msgtype , msgcontent = content ) def set_uuid ( self , uuid ): self . uuid = uuid self . msgcontent [ 'UUID' ] = UUID def set_size ( self , size ): self . size = size self . msgcontent [ 'FileSize' ] = size def set_name ( self , name ): self . name = name self . msgcontent [ 'FileName' ] = name class ImageInfo ( object ): def __init__ ( self , itype = 1 , size = 0 , width = 0 , height = 0 , url = '' ): #\u56fe\u7247\u7c7b\u578b\uff0c 1-\u539f\u56fe\uff0c 2-\u5927\u56fe\uff0c 3-\u7f29\u7565\u56fe, 0-\u5176\u4ed6 self . itype = itype # \u56fe\u7247\u6570\u636e\u5927\u5c0f,Number self . size = size # \u56fe\u7247\u5bbd\u5ea6,Number self . width = width # \u56fe\u7247\u9ad8\u5ea6, Number self . height = height # \u56fe\u7247\u4e0b\u8f7d\u5730\u5740,String self . url = url @property def info ( self ): return { 'Type' : self . itype , 'Size' : self . size , 'Width' : self . width , 'Height' : self . height , 'URL' : self . url } def set_type ( self , itype ): self . itype = itype def set_size ( self , size ): self . size = size def set_width ( self , width ): self . width = width def set_height ( self , height ): self . height = height def set_url ( self , url ): self . url = url","title":"\u53c2\u8003\u5b9e\u4f8b"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#python-wechat_sdk","text":"http://wechat-python-sdk.com/ \u622a\u53d6\u90e8\u5206\u4ee3\u7801\uff0c\u5b66\u4e60\u7c7b\u7684\u8bbe\u8ba1 from __future__ import unicode_literals import time from wechat_sdk.lib.crypto import BasicCrypto from wechat_sdk.lib.request import WechatRequest from wechat_sdk.exceptions import NeedParamError from wechat_sdk.utils import disable_urllib3_warning class WechatConf ( object ): \"\"\" WechatConf \u914d\u7f6e\u7c7b \u8be5\u7c7b\u5c06\u4f1a\u5b58\u50a8\u6240\u6709\u548c\u5fae\u4fe1\u5f00\u53d1\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f, \u540c\u65f6\u4e5f\u4f1a\u7ef4\u62a4\u914d\u7f6e\u4fe1\u606f\u7684\u6709\u6548\u6027. \"\"\" def __init__ ( self , ** kwargs ): \"\"\" :param kwargs: \u914d\u7f6e\u4fe1\u606f\u5b57\u5178, \u53ef\u7528\u5b57\u5178 key \u503c\u53ca\u5bf9\u5e94\u89e3\u91ca\u5982\u4e0b: 'token': \u5fae\u4fe1 Token 'appid': App ID 'appsecret': App Secret 'encrypt_mode': \u52a0\u89e3\u5bc6\u6a21\u5f0f ('normal': \u660e\u6587\u6a21\u5f0f, 'compatible': \u517c\u5bb9\u6a21\u5f0f, 'safe': \u5b89\u5168\u6a21\u5f0f(\u9ed8\u8ba4)) 'encoding_aes_key': EncodingAESKey \u503c (\u4f20\u5165\u6b64\u503c\u5fc5\u987b\u4fdd\u8bc1\u540c\u65f6\u4f20\u5165 token, appid, \u5426\u5219\u629b\u51fa\u5f02\u5e38) 'access_token_getfunc': access token \u83b7\u53d6\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token_setfunc': access token \u5199\u5165\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token_refreshfunc': access token \u5237\u65b0\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'access_token': \u76f4\u63a5\u5bfc\u5165\u7684 access token \u503c, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58\u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d \u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 access_token_getfunc \u548c access_token_setfunc \u51fd\u6570 \u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'access_token_expires_at': \u76f4\u63a5\u5bfc\u5165\u7684 access token \u7684\u8fc7\u671f\u65e5\u671f, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58 \u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d\u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 access_token_getfunc \u548c access_token_setfunc \u51fd\u6570\u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'jsapi_ticket_getfunc': jsapi ticket \u83b7\u53d6\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket_setfunc': jsapi ticket \u5199\u5165\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket_refreshfunc': jsapi ticket \u5237\u65b0\u51fd\u6570 (\u7528\u4e8e\u5355\u673a\u53ca\u5206\u5e03\u5f0f\u73af\u5883\u4e0b, \u5177\u4f53\u683c\u5f0f\u53c2\u89c1\u6587\u6863) 'jsapi_ticket': \u76f4\u63a5\u5bfc\u5165\u7684 jsapi ticket \u503c, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58\u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d \u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 jsapi_ticket_getfunc \u548c jsapi_ticket_setfunc \u51fd\u6570 \u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'jsapi_ticket_expires_at': \u76f4\u63a5\u5bfc\u5165\u7684 jsapi ticket \u7684\u8fc7\u671f\u65e5\u671f, \u8be5\u503c\u9700\u8981\u5728\u4e0a\u4e00\u6b21\u8be5\u7c7b\u5b9e\u4f8b\u5316\u4e4b\u540e\u624b\u52a8\u8fdb\u884c\u7f13\u5b58 \u5e76\u5728\u6b64\u5904\u4f20\u5165, \u5982\u679c\u4e0d\u4f20\u5165, \u5c06\u4f1a\u5728\u9700\u8981\u65f6\u81ea\u52a8\u91cd\u65b0\u83b7\u53d6 (\u4f20\u5165 jsapi_ticket_getfunc \u548c jsapi_ticket_setfunc \u51fd\u6570\u540e\u5c06\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u5904\u7684\u4f20\u5165\u503c) 'partnerid': \u8d22\u4ed8\u901a\u5546\u6237\u8eab\u4efd\u6807\u8bc6, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'partnerkey': \u8d22\u4ed8\u901a\u5546\u6237\u6743\u9650\u5bc6\u94a5 Key, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'paysignkey': \u5546\u6237\u7b7e\u540d\u5bc6\u94a5 Key, \u652f\u4ed8\u6743\u9650\u4e13\u7528 'checkssl': \u662f\u5426\u68c0\u67e5 SSL, \u9ed8\u8ba4\u4e0d\u68c0\u67e5 (False), \u53ef\u907f\u514d urllib3 \u7684 InsecurePlatformWarning \u8b66\u544a :return: \"\"\" self . __request = WechatRequest () if kwargs . get ( 'checkssl' ) is not True : disable_urllib3_warning () # \u53ef\u89e3\u51b3 InsecurePlatformWarning \u8b66\u544a self . __token = kwargs . get ( 'token' ) self . __appid = kwargs . get ( 'appid' ) self . __appsecret = kwargs . get ( 'appsecret' ) self . __encrypt_mode = kwargs . get ( 'encrypt_mode' , 'safe' ) self . __encoding_aes_key = kwargs . get ( 'encoding_aes_key' ) self . __crypto = None self . _update_crypto () self . __access_token_getfunc = kwargs . get ( 'access_token_getfunc' ) self . __access_token_setfunc = kwargs . get ( 'access_token_setfunc' ) self . __access_token_refreshfunc = kwargs . get ( 'access_token_refreshfunc' ) self . __access_token = kwargs . get ( 'access_token' ) self . __access_token_expires_at = kwargs . get ( 'access_token_expires_at' ) self . __jsapi_ticket_getfunc = kwargs . get ( 'jsapi_ticket_getfunc' ) self . __jsapi_ticket_setfunc = kwargs . get ( 'jsapi_ticket_setfunc' ) self . __jsapi_ticket_refreshfunc = kwargs . get ( 'jsapi_ticket_refreshfunc' ) self . __jsapi_ticket = kwargs . get ( 'jsapi_ticket' ) self . __jsapi_ticket_expires_at = kwargs . get ( 'jsapi_ticket_expires_at' ) self . __partnerid = kwargs . get ( 'partnerid' ) self . __partnerkey = kwargs . get ( 'partnerkey' ) self . __paysignkey = kwargs . get ( 'paysignkey' ) @property def token ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d Token \"\"\" self . _check_token () return self . __token @token.setter def token ( self , token ): \"\"\" \u8bbe\u7f6e\u5f53\u524d Token \"\"\" self . __token = token self . _update_crypto () # \u6539\u52a8 Token \u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def appid ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d App ID \"\"\" return self . __appid @property def appsecret ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d App Secret \"\"\" return self . __appsecret def set_appid_appsecret ( self , appid , appsecret ): \"\"\" \u8bbe\u7f6e\u5f53\u524d App ID \u53ca App Secret\"\"\" self . __appid = appid self . __appsecret = appsecret self . _update_crypto () # \u6539\u52a8 App ID \u540e\u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def encoding_aes_key ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d EncodingAESKey \"\"\" return self . __encoding_aes_key @encoding_aes_key.setter def encoding_aes_key ( self , encoding_aes_key ): \"\"\" \u8bbe\u7f6e\u5f53\u524d EncodingAESKey \"\"\" self . __encoding_aes_key = encoding_aes_key self . _update_crypto () # \u6539\u52a8 EncodingAESKey \u9700\u8981\u91cd\u65b0\u66f4\u65b0 Crypto @property def encrypt_mode ( self ): return self . __encrypt_mode @encrypt_mode.setter def encrypt_mode ( self , encrypt_mode ): \"\"\" \u8bbe\u7f6e\u5f53\u524d\u52a0\u5bc6\u6a21\u5f0f \"\"\" self . __encrypt_mode = encrypt_mode self . _update_crypto () @property def crypto ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d Crypto \u5b9e\u4f8b \"\"\" return self . __crypto @property def access_token ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d access token \u503c, \u672c\u65b9\u6cd5\u4f1a\u81ea\u884c\u7ef4\u62a4 access token \u6709\u6548\u6027 \"\"\" self . _check_appid_appsecret () if callable ( self . __access_token_getfunc ): self . __access_token , self . __access_token_expires_at = self . __access_token_getfunc () if self . __access_token : now = time . time () if self . __access_token_expires_at - now > 60 : return self . __access_token self . grant_access_token () # \u4ece\u817e\u8baf\u670d\u52a1\u5668\u83b7\u53d6 access token \u5e76\u66f4\u65b0 return self . __access_token @property def jsapi_ticket ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d jsapi ticket \u503c, \u672c\u65b9\u6cd5\u4f1a\u81ea\u884c\u7ef4\u62a4 jsapi ticket \u6709\u6548\u6027 \"\"\" self . _check_appid_appsecret () if callable ( self . __jsapi_ticket_getfunc ): self . __jsapi_ticket , self . __jsapi_ticket_expires_at = self . __jsapi_ticket_getfunc () if self . __jsapi_ticket : now = time . time () if self . __jsapi_ticket_expires_at - now > 60 : return self . __jsapi_ticket self . grant_jsapi_ticket () # \u4ece\u817e\u8baf\u670d\u52a1\u5668\u83b7\u53d6 jsapi ticket \u5e76\u66f4\u65b0 return self . __jsapi_ticket @property def partnerid ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d\u8d22\u4ed8\u901a\u5546\u6237\u8eab\u4efd\u6807\u8bc6 \"\"\" return self . __partnerid @property def partnerkey ( self ): \"\"\" \u83b7\u53d6\u5f53\u524d\u8d22\u4ed8\u901a\u5546\u6237\u6743\u9650\u5bc6\u94a5 Key \"\"\" return self . __partnerkey @property def paysignkey ( self ): \"\"\" \u83b7\u53d6\u5546\u6237\u7b7e\u540d\u5bc6\u94a5 Key \"\"\" return self . __paysignkey def grant_access_token ( self ): \"\"\" \u83b7\u53d6 access token \u5e76\u66f4\u65b0\u5f53\u524d\u914d\u7f6e :return: \u8fd4\u56de\u7684 JSON \u6570\u636e\u5305 (\u4f20\u5165 access_token_refreshfunc \u53c2\u6570\u540e\u8fd4\u56de None) \"\"\" self . _check_appid_appsecret () if callable ( self . __access_token_refreshfunc ): self . __access_token , self . __access_token_expires_at = self . __access_token_refreshfunc () return response_json = self . __request . get ( url = \"https://api.weixin.qq.com/cgi-bin/token\" , params = { \"grant_type\" : \"client_credential\" , \"appid\" : self . __appid , \"secret\" : self . __appsecret , }, access_token = self . __access_token ) self . __access_token = response_json [ 'access_token' ] self . __access_token_expires_at = int ( time . time ()) + response_json [ 'expires_in' ] if callable ( self . __access_token_setfunc ): self . __access_token_setfunc ( self . __access_token , self . __access_token_expires_at ) return response_json def grant_jsapi_ticket ( self ): \"\"\" \u83b7\u53d6 jsapi ticket \u5e76\u66f4\u65b0\u5f53\u524d\u914d\u7f6e :return: \u8fd4\u56de\u7684 JSON \u6570\u636e\u5305 (\u4f20\u5165 jsapi_ticket_refreshfunc \u53c2\u6570\u540e\u8fd4\u56de None) \"\"\" self . _check_appid_appsecret () if callable ( self . __jsapi_ticket_refreshfunc ): self . __jsapi_ticket , self . __jsapi_ticket_expires_at = self . __jsapi_ticket_refreshfunc () return response_json = self . __request . get ( url = \"https://api.weixin.qq.com/cgi-bin/ticket/getticket\" , params = { \"type\" : \"jsapi\" , }, access_token = self . access_token , ) self . __jsapi_ticket = response_json [ 'ticket' ] self . __jsapi_ticket_expires_at = int ( time . time ()) + response_json [ 'expires_in' ] if callable ( self . __jsapi_ticket_setfunc ): self . __jsapi_ticket_setfunc ( self . __jsapi_ticket , self . __jsapi_ticket_expires_at ) return response_json def get_access_token ( self ): \"\"\" \u83b7\u53d6 Access Token \u53ca Access Token \u8fc7\u671f\u65e5\u671f, \u4ec5\u4f9b\u7f13\u5b58\u4f7f\u7528, \u5982\u679c\u5e0c\u671b\u5f97\u5230\u539f\u751f\u7684 Access Token \u8bf7\u6c42\u6570\u636e\u8bf7\u4f7f\u7528 :func:`grant_token` **\u4ec5\u4e3a\u517c\u5bb9 v0.6.0 \u4ee5\u524d\u7248\u672c\u4f7f\u7528, \u81ea\u884c\u7ef4\u62a4 access_token \u8bf7\u4f7f\u7528 access_token_setfunc \u548c access_token_getfunc \u8fdb\u884c\u64cd\u4f5c** :return: dict \u5bf9\u8c61, key \u5305\u62ec `access_token` \u53ca `access_token_expires_at` \"\"\" self . _check_appid_appsecret () return { 'access_token' : self . access_token , 'access_token_expires_at' : self . __access_token_expires_at , } def get_jsapi_ticket ( self ): \"\"\" \u83b7\u53d6 Jsapi Ticket \u53ca Jsapi Ticket \u8fc7\u671f\u65e5\u671f, \u4ec5\u4f9b\u7f13\u5b58\u4f7f\u7528, \u5982\u679c\u5e0c\u671b\u5f97\u5230\u539f\u751f\u7684 Jsapi Ticket \u8bf7\u6c42\u6570\u636e\u8bf7\u4f7f\u7528 :func:`grant_jsapi_ticket` **\u4ec5\u4e3a\u517c\u5bb9 v0.6.0 \u4ee5\u524d\u7248\u672c\u4f7f\u7528, \u81ea\u884c\u7ef4\u62a4 jsapi_ticket \u8bf7\u4f7f\u7528 jsapi_ticket_setfunc \u548c jsapi_ticket_getfunc \u8fdb\u884c\u64cd\u4f5c** :return: dict \u5bf9\u8c61, key \u5305\u62ec `jsapi_ticket` \u53ca `jsapi_ticket_expires_at` \"\"\" self . _check_appid_appsecret () return { 'jsapi_ticket' : self . jsapi_ticket , 'jsapi_ticket_expires_at' : self . __jsapi_ticket_expires_at , } def _check_token ( self ): \"\"\" \u68c0\u67e5 Token \u662f\u5426\u5b58\u5728 :raises NeedParamError: Token \u53c2\u6570\u6ca1\u6709\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u63d0\u4f9b \"\"\" if not self . __token : raise NeedParamError ( 'Please provide Token parameter in the construction of class.' ) def _check_appid_appsecret ( self ): \"\"\" \u68c0\u67e5 AppID \u548c AppSecret \u662f\u5426\u5b58\u5728 :raises NeedParamError: AppID \u6216 AppSecret \u53c2\u6570\u6ca1\u6709\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u5b8c\u6574\u63d0\u4f9b \"\"\" if not self . __appid or not self . __appsecret : raise NeedParamError ( 'Please provide app_id and app_secret parameters in the construction of class.' ) def _update_crypto ( self ): \"\"\" \u6839\u636e\u5f53\u524d\u914d\u7f6e\u5185\u5bb9\u66f4\u65b0 Crypto \u7c7b \"\"\" if self . __encrypt_mode in [ 'compatible' , 'safe' ] and self . __encoding_aes_key is not None : if self . __token is None or self . __appid is None : raise NeedParamError ( 'Please provide token and appid parameters in the construction of class.' ) self . __crypto = BasicCrypto ( self . __token , self . __encoding_aes_key , self . __appid ) else : self . __crypto = None","title":"\u5fae\u4fe1\u5f00\u53d1\u5305\uff0cpython\u5b9e\u73b0, wechat_sdk\u5f00\u53d1"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_11","text":"\u8bbe\u8ba1\u8bb2\u5e08\u548c\u5b66\u751f\u7c7b\uff0c\u8bb2\u5e08\u6709\u4e0a\u8bfe\uff0c\u5907\u8bfe\u7b49\u65b9\u6cd5\uff0c\u5b66\u751f\u6709\u542c\u8bfe\uff0c\u505a\u7ec3\u4e60\u7b49\u65b9\u6cd5\uff0c\u5747\u6709\u59d3\u540d\u3001\u6027\u522b\u3001\u5e74\u9f84\u7b49\u57fa\u672c\u5c5e\u6027 \u8bbe\u8ba1\u804a\u5929Message\u7c7b","title":"\u601d\u7ef4\u953b\u70bc"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#137-with","text":"\u5982\u679c\u4f60\u6709\u9605\u8bfb\u6e90\u7801\u7684\u4e60\u60ef\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4f18\u79c0\u7684\u4ee3\u7801\u7ecf\u5e38\u51fa\u73b0\u5e26\u6709 \u201cwith\u201d \u5173\u952e\u5b57\u7684\u8bed\u53e5\uff0c\u5b83\u901a\u5e38\u7528\u5728\u4ec0\u4e48\u573a\u666f\u5462\uff1f\u4eca \u5bf9\u4e8e\u7cfb\u7edf\u8d44\u6e90\u5982\u6587\u4ef6\u3001\u6570\u636e\u5e93\u8fde\u63a5\u3001socket \u800c\u8a00\uff0c\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u8fd9\u4e9b\u8d44\u6e90\u5e76\u6267\u884c\u5b8c\u4e1a\u52a1\u903b\u8f91\u4e4b\u540e\uff0c\u5fc5\u987b\u505a\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u8981\u5173\u95ed\uff08\u65ad\u5f00\uff09\u8be5\u8d44\u6e90\u3002 \u6bd4\u5982 Python \u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5f80\u6587\u4ef6\u4e2d\u5199\u5185\u5bb9\uff0c\u5199\u5b8c\u4e4b\u540e\uff0c\u5c31\u8981\u5173\u95ed\u8be5\u6587\u4ef6\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u6781\u7aef\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0 \"Too many open files\" \u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u7cfb\u7edf\u5141\u8bb8\u4f60\u6253\u5f00\u7684\u6700\u5927\u6587\u4ef6\u6570\u91cf\u662f\u6709\u9650\u7684\u3002 \u540c\u6837\uff0c\u5bf9\u4e8e\u6570\u636e\u5e93\uff0c\u5982\u679c\u8fde\u63a5\u6570\u8fc7\u591a\u800c\u6ca1\u6709\u53ca\u65f6\u5173\u95ed\u7684\u8bdd\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0 \"Can not connect to MySQL server Too many connections\"\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u8fde\u63a5\u662f\u4e00\u79cd\u975e\u5e38\u6602\u8d35\u7684\u8d44\u6e90\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u5236\u7684\u88ab\u521b\u5efa\u3002 \u6765\u770b\u770b\u5982\u4f55\u6b63\u786e\u5173\u95ed\u4e00\u4e2a\u6587\u4ef6\u3002","title":"13.7 with\u4e0e\u201c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u201d"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_12","text":"def m1 (): f = open ( \"output.txt\" , \"w\" ) f . write ( \"python\u4e4b\u7985\" ) f . close () \u8fd9\u6837\u5199\u6709\u4e00\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5982\u679c\u5728\u8c03\u7528 write \u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u5f02\u5e38\u8fdb\u800c\u5bfc\u81f4\u540e\u7eed\u4ee3\u7801\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0cclose \u65b9\u6cd5\u65e0\u6cd5\u88ab\u6b63\u5e38\u8c03\u7528\uff0c\u56e0\u6b64\u8d44\u6e90\u5c31\u4f1a\u4e00\u76f4\u88ab\u8be5\u7a0b\u5e8f\u5360\u7528\u8005\u91ca\u653e\u3002\u90a3\u4e48\u8be5\u5982\u4f55\u6539\u8fdb\u4ee3\u7801\u5462\uff1f","title":"\u666e\u901a\u7248\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_13","text":"def m2 (): f = open ( \"output.txt\" , \"w\" ) try : f . write ( \"python\u4e4b\u7985\" ) except IOError : print ( \"oops error\" ) finally : f . close () \u6539\u826f\u7248\u672c\u7684\u7a0b\u5e8f\u662f\u5bf9\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u5904\u8fdb\u884c try \u6355\u83b7\uff0c\u4f7f\u7528 try/finally \u8bed\u53e5\uff0c\u8be5\u8bed\u53e5\u8868\u793a\u5982\u679c\u5728 try \u4ee3\u7801\u5757\u4e2d\u7a0b\u5e8f\u51fa\u73b0\u4e86\u5f02\u5e38\uff0c\u540e\u7eed\u4ee3\u7801\u5c31\u4e0d\u518d\u6267\u884c\uff0c\u800c\u76f4\u63a5\u8df3\u8f6c\u5230 except \u4ee3\u7801\u5757\u3002\u800c\u65e0\u8bba\u5982\u4f55\uff0cfinally \u5757\u7684\u4ee3\u7801\u6700\u7ec8\u90fd\u4f1a\u88ab\u6267\u884c\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u628a close \u653e\u5728 finally \u4ee3\u7801\u4e2d\uff0c\u6587\u4ef6\u5c31\u4e00\u5b9a\u4f1a\u5173\u95ed\u3002 else\u4ec0\u4e48\u65f6\u5019\u6267\u884c? \u53ea\u6709try\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u7684\u5f02\u5e38\u7136\u540e\u6267\u884celse\u4e2d\u7684\u4ee3\u7801 Exception \u8fd9\u4e2a\u5f02\u5e38\u4ee3\u8868\u7684\u662f\u6240\u6709\u7684\u5f02\u5e38,\u5982\u679c\u524d\u9762\u7684\u5f02\u5e38\u90fd\u6ca1\u6709\u6355\u83b7\u5230\u7684\u8bdd\u5c31\u4f1a\u6267\u884c\u8fd9\u4e2a\u5f02\u5e38\u7684\u5904\u7406","title":"\u8fdb\u9636\u7248\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_14","text":"def m3 (): with open ( \"output.txt\" , \"r\" ) as f : f . write ( \"Python\u4e4b\u7985\" ) \u4e00\u79cd\u66f4\u52a0\u7b80\u6d01\u3001\u4f18\u96c5\u7684\u65b9\u5f0f\u5c31\u662f\u7528 with \u5173\u952e\u5b57\u3002open \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf f\uff0c\u5f53\u79bb\u5f00 with \u4ee3\u7801\u5757\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528 f.close() \u65b9\u6cd5\uff0c with \u7684\u4f5c\u7528\u548c\u4f7f\u7528 try/finally \u8bed\u53e5\u662f\u4e00\u6837\u7684\u3002\u90a3\u4e48\u5b83\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5728\u8bb2 with \u7684\u539f\u7406\u524d\u8981\u6d89\u53ca\u5230\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\uff0c\u5c31\u662f\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08Context Manager\uff09\u3002","title":"\u9ad8\u7ea7\u7248\uff1a"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#context","text":"\u4e0a\u4e0b\u6587\u5728\u4e0d\u540c\u7684\u5730\u65b9\u8868\u793a\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u8981\u611f\u6027\u7406\u89e3\u3002context\u5176\u5b9e\u8bf4\u767d\u4e86\uff0c\u548c\u6587\u7ae0\u7684\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a\u610f\u601d\uff0c\u5728\u901a\u4fd7\u4e00\u70b9\uff0c\u6211\u89c9\u5f97\u53eb\u73af\u5883\u66f4\u597d\u3002.... \u6797\u51b2\u5927\u53eb\u4e00\u58f0\u201c\u554a\u4e5f\uff01\u201d.... \u95ee:\u8fd9\u53e5\u8bdd\u6797\u51b2\u7684\u201c\u554a\u4e5f\u201d\u8868\u8fbe\u4e86\u6797\u51b2\u600e\u6837\u7684\u5fc3\u91cc\uff1f \u7b54:\u554a\u4f60\u5988\u4e2a\u5934\u554a\uff01 \u770b\uff0c\u4e00\u7bc7\u6587\u7ae0\uff0c\u7ed9\u4f60\u6458\u5f55\u4e00\u6bb5\uff0c\u6ca1\u524d\u6ca1\u540e\uff0c\u4f60\u8bfb\u4e0d\u61c2\uff0c\u56e0\u4e3a\u6709\u8bed\u5883\uff0c\u5c31\u662f\u8bed\u8a00\u73af\u5883\u5b58\u5728\uff0c\u4e00\u6bb5\u8bdd\u8bf4\u4e86\u4ec0\u4e48\uff0c\u8981\u901a\u8fc7\u4e0a\u4e0b\u6587(\u6587\u7ae0\u7684\u4e0a\u4e0b\u6587)\u6765\u63a8\u65ad\u3002 app\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u754c\u9762\uff0c\u4e5f\u8981\u4fdd\u5b58\u4f60\u662f\u5728\u54ea\u4e2a\u5c4f\u5e55\u8df3\u8fc7\u6765\u7684\u7b49\u7b49\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4f60\u70b9\u51fb\u8fd4\u56de\u7684\u65f6\u5019\u80fd\u6b63\u786e\u8df3\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u80af\u5b9a\u5c31\u65e0\u6cd5\u6b63\u786e\u8df3\u56de\u4e86\u3002 \u770b\u8fd9\u4e9b\u90fd\u662f\u4e0a\u4e0b\u6587\u7684\u5178\u578b\u4f8b\u5b50\uff0c\u7406\u89e3\u6210\u73af\u5883\u5c31\u53ef\u4ee5\uff0c(\u800c\u4e14\u4e0a\u4e0b\u6587\u867d\u7136\u53eb\u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u7a0b\u5e8f\u91cc\u9762\u4e00\u822c\u90fd\u53ea\u6709\u4e0a\u6587\u800c\u5df2\uff0c\u53ea\u662f\u53eb\u7684\u597d\u542c\u53eb\u4e0a\u4e0b\u6587\u3002\u3002\u8fdb\u7a0b\u4e2d\u65ad\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u662f\u6709\u4e0a\u6709\u4e0b\u7684\uff0c\u4e0d\u8fc7\u4e0d\u8fd9\u4e2a\u9ad8\u6df1\u7684\u95ee\u9898\u5c31\u4e0d\u8981\u6df1\u7a76\u4e86\u3002\u3002\u3002)","title":"\u4ec0\u4e48\u662f\u4e0a\u4e0b\u6587(context)"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_15","text":"\u4efb\u4f55\u5b9e\u73b0\u4e86 enter () \u548c exit () \u65b9\u6cd5\u7684\u5bf9\u8c61\u90fd\u53ef\u79f0\u4e4b\u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 with \u5173\u952e\u5b57\u3002\u663e\u7136\uff0c\u6587\u4ef6\uff08file\uff09\u5bf9\u8c61\u4e5f\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u3002 \u90a3\u4e48\u6587\u4ef6\u5bf9\u8c61\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u6587\u4ef6\u7c7b\uff0c\u8ba9\u8be5\u7c7b\u5b9e\u73b0 enter () \u548c exit () \u65b9\u6cd5\u3002 class File (): def __init__ ( self , filename , mode ): self . filename = filename self . mode = mode def __enter__ ( self ): print ( \"entering\" ) self . f = open ( self . filename , self . mode ) return self . f def __exit__ ( self , * args ): print ( \"will exit\" ) self . f . close () enter () \u65b9\u6cd5\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5c31\u662f\u4f60\u5c06\u8981\u6253\u5f00\u7684\u90a3\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c exit () \u65b9\u6cd5\u5904\u7406\u4e00\u4e9b\u6e05\u9664\u5de5\u4f5c\u3002 \u56e0\u4e3a File \u7c7b\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u4f7f\u7528 with \u8bed\u53e5\u4e86\u3002 with File ( 'out.txt' , 'w' ) as f : print ( \"writing\" ) f . write ( 'hello, python' ) \u8fd9\u6837\uff0c\u4f60\u5c31\u65e0\u9700\u663e\u793a\u5730\u8c03\u7528 close \u65b9\u6cd5\u4e86\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u53bb\u8c03\u7528\uff0c\u54ea\u6015\u4e2d\u95f4\u9047\u5230\u5f02\u5e38 close \u65b9\u6cd5\u4e5f\u4f1a\u88ab\u8c03\u7528\u3002","title":"\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_16","text":"Python \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a contextmanager \u7684\u88c5\u9970\u5668\uff0c\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u901a\u8fc7 yield \u5c06\u51fd\u6570\u5206\u5272\u6210\u4e24\u90e8\u5206\uff0cyield \u4e4b\u524d\u7684\u8bed\u53e5\u5728 enter \u65b9\u6cd5\u4e2d\u6267\u884c\uff0cyield \u4e4b\u540e\u7684\u8bed\u53e5\u5728 exit \u65b9\u6cd5\u4e2d\u6267\u884c\u3002\u7d27\u8ddf\u5728 yield \u540e\u9762\u7684\u503c\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 from contextlib import contextmanager @contextmanager def my_open ( path , mode ): f = open ( path , mode ) yield f f . close () \u8c03\u7528 with my_open('out.txt', 'w') as f: f.write(\"hello , the simplest context manager\")","title":"\u5b9e\u73b0\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u7684\u53e6\u5916\u65b9\u5f0f"},{"location":"python-web/009-13--python\u63d0\u9ad8-2/#_17","text":"Python \u63d0\u4f9b\u4e86 with \u8bed\u6cd5\u7528\u4e8e\u7b80\u5316\u8d44\u6e90\u64cd\u4f5c\u7684\u540e\u7eed\u6e05\u9664\u64cd\u4f5c\uff0c\u662f try/finally \u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u5b9e\u73b0\u539f\u7406\u5efa\u7acb\u5728\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u4e4b\u4e0a\u3002\u6b64\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a contextmanager \u88c5\u9970\u5668\uff0c\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u4e0a\u4e0b\u7ba1\u7406\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002","title":"\u603b\u7ed3"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/","text":"\u7f51\u7edc\u77e5\u8bc6\u8865\u5145 \u00b6 \u8f6c\u8f7d \u4e3b\u8981\u8bb0\u5f55 \u4e3b\u673a\u4f20\u8f93\u6570\u636e\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5\u7684\u8fc7\u7a0b TCP\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u5b50\u7f51\u63a9\u7801\u7684\u5212\u5206 DNS\u534f\u8bae\u539f\u7406 \u7b2c\u4e00\u90e8\u5206 \u6570\u636e\u7684\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5 \u00b6 \u5e94\u7528\u5c42 \u8868\u793a\u5c42 --- data \u4f1a\u8bdd\u5c42 \u4f20\u8f93\u5c42 --- TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7f51\u7edc\u5c42 --- IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u94fe\u8def\u5c42 --- MAC\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807mac \u6e90mac\uff09+ IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7269\u7406\u5c42 --- bit\u6d41 0101010101010101010101 \u7f51\u5361 --- \u8c03\u7f6e bit\u6d41---\u9ad8\u4f4e\u7535\u538b \u7f51\u5361 --- \u89e3\u8c03 \u9ad8\u4f4e\u7535\u538b---bit\u6d41 \u7269\u7406\u5c42 --- bit\u6d41 0101010101010101010101 \u94fe\u8def\u5c42 --- MAC\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807mac \u6e90mac\uff09+ IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7f51\u7edc\u5c42 --- IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u4f20\u8f93\u5c42 --- TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data netstat -lntup|grep \u76ee\u6807\u7aef\u53e3 \u5e94\u7528\u5c42 --- data 2.\u5f53A\u4e3b\u673a\u8bbf\u95eeB\u4e3b\u673a\u7684\u670d\u52a1\uff0c\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5\u7684\u8be6\u7ec6\u8fc7\u7a0b \u00b6 \u5c01\u88c5\u8fc7\u7a0b \u8bf4\u660e\uff1a 1.\u5f53PC01\u8981\u8bbf\u95eePC02\u768422\u7aef\u53e3\u65f6\uff0c\u5e94\u7528\u5c42\u7684\u6570\u636e\u6309\u7167TCP/IP\u6a21\u578b\u5728\u4f20\u8f93\u5c42\u5c01\u88c5=TCP\u7684\u5934\u90e8+\u6e90\u7aef\u53e3\uff081000\uff0c\u968f\u673a\uff09+\u76ee\u7684\u7aef\u53e3\uff0822\uff09\u3002 2.\u5230\u8fbe\u7f51\u7edc\u5c42\u8fdb\u884c\u5c01\u88c5\uff0c\u6e90ip\uff08\u81ea\u8eabIP\uff09+\u76ee\u7684IP\uff0802.02\uff0c\u5bf9\u7aefIP)\u3002 3.\u5230\u8fbe\u6570\u636e\u94fe\u8def\u5c42\u8fdb\u884c\u5c01\u88c5\uff0c\u6e90MAC(\u81ea\u8eabMAC)\uff0c\u76ee\u7684MAC(##\u4e3a\u7f51\u5173\u7684MAC\u5730\u5740\uff0c\u56e0\u4e3a\u5230\u8fbe\u4e0d\u540c\u7f51\u6bb5\u8981\u901a\u8fc7\u7f51\u5173\uff0c\u6240\u4ee5\u5c01\u88c5\u7684\u662f\u7f51\u5173\u7684MAC##)\u3002 4.\u6700\u7ec8\u5230\u8fbe\u7269\u7406\u5c42\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\uff0c\u901a\u8fc7\u7f51\u7ebf\u8fdb\u884c\u4f20\u8f93\u3002 \u89e3\u5c01\u88c5\u8fc7\u7a0b \u8bf4\u660e\uff1a\u5230\u8fbe\u8def\u7531\u5668\u4e4b\u540e 1.\u8def\u7531\u5668\u8fdb\u884c\u8fdb\u884c\u62c6\u5305\uff0c\u62c6\u5230\u4e8c\u5c42\u7684\u65f6\u5019\u770b\u6e90\u76eeMAC\u5730\u5740 \u53ef\u4ee5\u770b\u5230\u76ee\u7684MAC\u662f\u8bbf\u95ee\u8def\u7531\u5668\u7684eth0\u7684\u63a5\u53e3\u3002 2.\u7ee7\u7eed\u62c6\u5305\uff0c\u62c6\u5230\u7f51\u7edc\u5c42\u770b\u8bbf\u95ee\u7684IP\u662f02.02\uff0c\u5728\u8def\u7531\u5668\u7684\u8def\u7531\u8868\u4e2d\u3002\u53ef\u4ee5\u8fdb\u884c\u8f6c\u53d1\u3002 3.\u8f6c\u53d1\u4e4b\u524d\u5148\u8fdb\u884c\u5c01\u88c5\uff0c\u6570\u636e\u94fe\u8def\u5c42\u5c06\u6e90MAC\u53d8\u4e3aeth1\u7684mac\u5730\u5740,\u76ee\u7684mac\u56e0\u4e3a\u4e0d\u77e5\u9053\u5148\u8fdb\u884c\u5168F\u5c01\u88c5\u3002 4.\u4eceEth1\u53e3\u51fa\u53bb\u4ee5\u540e\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\u7684\u6a21\u5f0f\u3002 5.\u56e0\u4e3aEth1\u7684\u76ee\u7684mac\u4e3a\u5e7f\u64ad\u7684\u5f62\u5f0f\uff0c\u5728\u540c\u4e00\u7f51\u6bb5\u7684\u8fdb\u884c\u5e7f\u64ad\uff0c\u6536\u5230\u5e7f\u64ad\u7684\u4e3b\u673a\u8fdb\u884c\u62c6\u5305\u3002 \u5f53\u62c6\u5230\u7f51\u7edc\u5c42\u7684\u65f6\u5019\u770b\u5230\u76ee\u7684IP\u4e3a\u81ea\u5df1\u7684IP\u65f6\uff0c\u8fdb\u884c\u5b8c\u6210\u4e0a\u4e00\u5c42\u7684\u89e3\u5c01\u88c5\u3002\u5b8c\u6210\u8bbf\u95ee\u3002 \u4ecePC02\u5230PC01\u56de\u5305\u7684\u8fc7\u7a0b \u00b6 \u8bf4\u660e\uff1a 1.\u4f20\u8f93\u5c42\uff1aTCP\u5305\u5934+\u6e90\u7aef\u53e3\uff08\u81ea\u5df1\uff09+\u76ee\u7684\u7aef\u53e3\uff081000\uff09+date 2.\u7f51\u7edc\u5c42\uff1a\u6e90IP\uff08\u81ea\u5df1\uff09+\u76ee\u7684IP\uff08pc01\uff09+date 3.\u6570\u636e\u94fe\u8def\u5c42\uff1a\u6e90MAC(\u81ea\u5df1)+\u76ee\u7684\uff08\u7f51\u5173\u7684MAC\uff09 4.\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\u4ece\u7f51\u7ebf\u4f20\u8f93\u51fa\u53bb \u5230\u8fbe\u8def\u7531\u5668\uff1a 1.\u8fdb\u884c\u62c6\u5305\uff0c\u5230\u8fbe\u6570\u636e\u94fe\u8def\u5c42\uff0c\u67e5\u770b\u76ee\u7684MAC\u4e3a\u81ea\u5df1\u7684eth1\u53e3\uff0c\u662f\u8bbf\u95ee\u81ea\u5df1\u3002 2.\u7ee7\u7eed\u8fdb\u884c\u62c6\u5305\uff0c\u5230\u8fbe\u7f51\u7edc\u5c42\uff0c\u67e5\u770b\u8bbf\u95ee\u7684IP\u4e3a\u8def\u7531\u5668\u8def\u7531\u8868\u4e2d\u7684\u7f51\u6bb5\uff0c\u53ef\u4ee5\u8fdb\u884c\u8f6c\u53d1\u3002 3.\u8def\u7531\u5668\u8fdb\u884c\u5c01\u88c5\uff0c\u5c06\u6e90MAC\u53d8\u4e3aeth0\u7684mac\u5730\u5740\uff0c\u76ee\u7684MAC\u4e3apc01\u7684mac,(\u56e0\u4e3a\u4e4b\u524dPC01\u5df2\u7ecf\u53d1\u5305\u5230\u8fbePC02,\u6240\u4ee5\u77e5\u9053PC01\u7684mac,\u6240\u4ee5\u4e0d\u9700\u8981\u8fdb\u884c\u5e7f\u64ad\u4e86) 4.pc01\u6536\u5230\u56de\u5305\u4e4b\u540e\u9010\u6e10\u8fdb\u884c\u89e3\u5c01\u88c5\uff0c\u81f3\u6b64\uff0c\u53cc\u65b9\u5b8c\u6210\u901a\u4fe1\u3002 \u7b2c\u4e8c\u90e8\u5206 ARP\u534f\u8bae \u00b6 \u00b6 1.\u5f53\u4e24\u53f0\u4e3b\u673a\u901a\u4fe1\u65f6\uff0c\u5728\u4e8c\u5c42\u5c01\u88c5\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u5f97\u77e5\u5bf9\u7aef\u7684mac\u5730\u5740\uff0c\u8fd9\u65f6\u9700\u8981\u901a\u8fc7arp\u5730\u5740\u89e3\u6790\u534f\u8bae\u53bb\u5f97\u77e5\u5bf9\u7aef\u7684mac\u5730\u5740\uff0c\u5f53\u5bf9\u7aef\u7684\u4e3b\u673a\u8fdb\u884cARP\u56de\u5305\u7684\u65f6\u5019\uff0c\u6765\u5b8c\u6210\u4e8c\u5c42mac\u7684\u5c01\u88c5\u3002 2.\u5f53\u4e3b\u673a\u8fde\u63a5\u4ea4\u6362\u673a\u7684\u65f6\u5019\uff0c\u5f53PC01\u5c01\u88c5\u6210ARP\u7684\u5305\uff0c\u6e90\u76ee\u5730\u5740\u4e3a\u5df2\u77e5\uff0c\u6e90MAC\u4e3a\u81ea\u5df1\uff0c\u76ee\u7684MAC\u4e3a\u4ea4\u6362\u673a\u8fde\u63a5\u7684\u63a5\u53e3\u3002 3.\u5230\u8fbe\u4ea4\u6362\u673a\u7684\u65f6\u5019\uff0c\u4ea4\u6362\u673a\u62c6\u5305\u540e\u8fdb\u884carp\u5e7f\u64ad\uff0c\u6bcf\u53f0\u4e3b\u673a\u90fd\u6536\u5230\u4e86ARP\u7684\u5e7f\u64ad\u540e\uff0c\u6b63\u786e\u7684\u4e3b\u673a\u62c6\u5305\u540e\u5f97\u5230ARP\u7684\u8bf7\u6c42\u5305\u3002 4.\u6b63\u786e\u7684\u4e3b\u673a\u4f1a\u56de\u590dARP\u7684\u54cd\u5e94\u5305\u3002arp+\u6e90\u76eeIP+\u6e90\u76eeMAC\uff08\u6ce8\u4e0d\u662f\u4ea4\u6362\u673a\u63a5\u53e3\u7684MAC\uff0c\u800c\u662fARP\u4e3b\u673a\u8bf7\u6c42\u7684MAC\uff09\u3002\u4e3b\u673a\u4e14\u4f1a\u751f\u6210\u4e00\u4e2aARP\u8868\u3002 5.\u6b64\u65f6\u4ea4\u6362\u673a\u4e5f\u4f1a\u751f\u6210\u4e00\u4e2aMAC\u8868\u3002\uff08\u4e3b\u673a1\u7684IP\u548c\u4e3b\u673a1MAC\uff0c\u4e3b\u673a2\u7684IP\u548c\u4e3b\u673a2\u7684MAC\uff09\u7ecf\u8fc7\u51e0\u6b21\u5e7f\u64ad\u4ee5\u540e\uff0c\u4ea4\u6362\u673a\u7684MAC\u8868\u4f1a\u5b8c\u5584\u8d77\u6765\u3002 6.\u4ea4\u6362\u673a\u56de\u5305\u56de\u5230\u4e3b\u673a01\u540e\uff0c\u4e3b\u673a\u4e5f\u4f1a\u8bb0\u5f55\u4e00\u4e2aarp\u7684\u8868\u3002\uff08\u6700\u540e\u6240\u6709\u7684\u4e3b\u673a\u90fd\u4f1a\u5b8c\u5584\u81ea\u5df1\u548c\u5176\u4ed6\u4e3b\u673a\u901a\u8baf\u8fc7\u7684ARP\u8868\u3002\uff09 7.\u6ca1\u901a\u4fe1\u8fc7\u7684\u4e3b\u673a\u4e5f\u4f1a\u8bb0\u5f55\u4e4b\u524d\u5176\u4ed6\u4e3b\u673a\u7684MAC\u5730\u5740\u3002 ARP\u534f\u8bae\u539f\u7406\uff1a 1. \u53d1\u9001arp\u8bf7\u6c42\u5305 \u83b7\u5f97arp\u54cd\u5e94\u5305 --- \u83b7\u5f97\u4e3b\u673amac\u5730\u5740 2. \u5efa\u7acbarp\u8868 \u5efa\u7acb\u4e3b\u673aip\u5730\u5740\u548cmac\u5730\u5740\u5bf9\u5e94\u5173\u7cfb 3. \u51cf\u5c11\u4ea4\u6362\u7f51\u7edc\u4e2d\u5e7f\u64ad\u5305\u4ea7\u751f ARP\u8868\u751f\u6210\u65b9\u5f0f\uff1a \u52a8\u6001\u751f\u6210\uff1a 1\u4e2a\u5c0f\u65f6 \u6e05\u7a7a 2\u4e2a\u5c0f\u65f6 \u81ea\u52a8\u53d1\u9001\u5e7f\u64ad\u5305\uff0c\u52a8\u6001\u5b8c\u5584arp\u8868 \u7f3a\u70b9\uff1a\u4f1a\u91cd\u65b0\u53d1\u9001\u5e7f\u64ad\u5305 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0arp\u4fe1\u606f \u5e94\u7528\u573a\u666f\uff1a\u529e\u516c\u5ba4 \u6559\u5ba4 \u9759\u6001\u914d\u7f6e\uff1a \u6dfb\u52a0 \u5220\u9664 \u624b\u5de5\u6dfb\u52a0 \u7f3a\u70b9\uff1a \u4e0d\u80fd\u5b9e\u65f6\u66f4\u65b0arp\u4fe1\u606f\uff0c\u5f71\u54cd\u901a\u8baf \u4f18\u70b9\uff1a \u57fa\u672c\u4e0a\u675c\u7edd\u4e86\u5e7f\u64ad\u5305\u7684\u4ea7\u751f \u5e94\u7528\u573a\u666f\uff1a\u673a\u623fIDC \u8bbe\u5907\u4e0d\u4f1a\u7ecf\u5e38\u53d8\u5316 \u7b2c\u4e09\u90e8\u5206 TCP\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u00b6 TCP\u534f\u8bae\uff1a\u4f20\u8f93\u63a7\u5236\u534f\u8bae \u9762\u5411\u8fde\u63a5\u7f51\u7edc\u534f\u8bae \u53ef\u9760\u4f20\u8f93 UDP\u534f\u8bae\uff1a\u7528\u6237\u62a5\u6587\u534f\u8bae \u65e0\u8fde\u63a5\u7f51\u7edc\u534f\u8bae \u4e0d\u53ef\u9760(\u6ce8\u91cd\u4f20\u8f93\u6548\u7387) 1.TCP\u7684\u62a5\u6587\u7ed3\u6784 \u00b6 \u6ce8\u610f\uff1a\u4e3b\u8981\u4e86\u89e3\u6e90\u76ee\u7aef\u53e3\uff0cACK\uff0cSYN\uff0cFIN\u3002 \u63a7\u5236\u4f4d\uff1a syn =1 \u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5 fin =1 \u8bf7\u6c42\u65ad\u5f00\u8fde\u63a5 ack =1 \u53d1\u9001\u786e\u8ba4\u4fe1\u606f 2.\u4e3a\u4ec0\u4e48\u7aef\u53e3\u53f7\u662f1-65535 \u00b6 \u56e0\u4e3a\u7aef\u53e3\u5360\u7528\u7684bit\u4f4d\u662f0-15 \u6240\u4ee56\u662f2\u768416\u7684\u6b21\u65b9\u300265536 \u4f46\u662f0\u662fTCP\u548cUDP\u4e0d\u8bc6\u522b\u7684\u7aef\u53e3\u53f7\u6240\u4ee5\u4e3a65535\u3002 3.TCP\u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b \u00b6 \u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\uff1a \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587 \uff08syn seq=X\uff09 \u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08syn ack ACK=X+1 seq=Y\uff09 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08ack seq=X+1 ACK=Y+1\uff09 4.\u56db\u6b21\u6325\u624b\u7684\u8fc7\u7a0b \u00b6 \u6ce8\uff1a\u56db\u6b21\u6325\u624b\u4e0d\u4e00\u5b9a\u662f\u5ba2\u6237\u7aef\u5148\u53d1\u8d77\u7684 \u56db\u6b21\u6325\u624b\u8fc7\u7a0b\uff08\u4e5f\u6709\u4e09\u6b21\u6325\u624b\u7684\u72b6\u6001\uff0c\u672a\u7b49\u5230\u670d\u52a1\u7aef\u7684ACK\u72b6\u6001\uff0c\u76f4\u63a5\u7b49\u5230\u4e86\u670d\u52a1\u7aef\u7684fin\u72b6\u6001\u3002\uff09\uff1a \u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08fin ack\uff09 \u6ce8:ack \u4e3a\u4e4b\u524d\u8fde\u63a5\u7684ack\u786e\u8ba4\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u670d\u52a1\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08ack\uff09 \u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u670d\u52a1\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08fin \u518d\u786e\u5b9a\u65ad\u5f00 ack \u8fc7\u7a0b\u786e\u8ba4\uff09 \u7b2c\u56db\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08ack\uff09 5.TCP\u768411\u79cd\u72b6\u6001 \u00b6 1.\u5f53\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5f00\u59cb\u90fd\u4e3a\u5173\u95ed\u7684\u65f6\u5019\u4e3aCLOSED(1)\u72b6\u6001 2.\u5f53\u670d\u52a1\u7aef\u542f\u52a8\u597d\u670d\u52a1\u4ee5\u540e\u4e3aLISTENING(2)\u72b6\u6001\uff0c\u522b\u4eba\u8bbf\u95ee\u624d\u80fd\u63a5\u6536\u3002 3.\u5f53\u5ba2\u6237\u7aef\u53d1\u9001\u5b8cSYN\u540e\u53d8\u4e3aSYN_SENT(3)\u72b6\u6001\u3002 4.\u670d\u52a1\u7aef\u6536\u5230syn\u4f1a\u5b8c\u6210\u7b2c\u4e8c\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b \u53d8\u4e3a(4)SYN_RCVD\u72b6\u6001 5.\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u53d1\u9001\u7684SYN ack\u540e\uff0c\u518d\u53d1\u4e2aACK\u7684\u786e\u8ba4\uff0c\u53d8\u4e3a(5)ESTABLISHED\u7684\u72b6\u6001\u3002 6.\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684fin\u540e\uff0c\u670d\u52a1\u7aef\u7531\u539f\u6765\u7684ESTABLISHED\u7684\u72b6\u6001\u53d8\u4e3aCLOSE_WAIT(6) 7.\u5ba2\u6237\u7aef\u53d1\u5b8cFIN\u540e\u53d8\u4e3aFIN_WAIT1\uff087\uff09\u7684\u72b6\u6001\uff0c\u7b49\u5f85\u63a5\u6536\u670d\u52a1\u7aef\u7684ACK\u72b6\u6001\u3002 8.\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684ACK\u4ee5\u540e\uff0c\u4f1a\u53d8\u4e3aFIN_WAIT2\uff088\uff09\u7684\u72b6\u6001\u3002 9.\u5f53\u5ba2\u6237\u7aef\u6536\u5230FIN\u7b2c\u4e09\u6b21\u6325\u624b\u7684\u8fc7\u7a0b\u540e\uff0c\u5ba2\u6237\u7aef\u4f1a\u53d1\u9001ACK\uff0c\u53d8\u4e3aTIME_WAIT\uff089\uff09\u7684\u72b6\u6001\u3002 10.\u670d\u52a1\u7aef\u53d1\u5b8cFIN\u540e\u4f1a\u53d8\u4e3aCLOSE_WAIT\uff0810\uff09\u7684\u72b6\u6001 11.\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684ACK\u4e4b\u540e\uff0c\u670d\u52a1\u7aef\u4f1a\u53d8\u4e3aLAST_ACK(11)\u7684\u72b6\u6001\u3002 \u7b2c\u56db\u90e8\u5206 IP\u5730\u5740\u7684\u5b50\u7f51\u5212\u5206 \u00b6 \u4e3e\u4f8b\uff1a192.16.4.0/27 \u95ee\u9898\uff1a\u53ef\u4ee5\u6709\u51e0\u4e2a\u5b50\u7f51 \u5b50\u7f51\u63a9\u7801 \u6bcf\u4e2a\u5b50\u7f51\u4e3b\u673a\u8303\u56f4 1\\. \u5b50\u7f51\u4e2a\u6570\uff1a2\u7684n\u6b21\u65b9 n\u8868\u793a\u501f\u7528\u591a\u5c11\u4e2a\u4e3b\u673a\u4f4d\u53d8\u4e3a\u5b50\u7f51\u4f4d 2\\. \u7f51\u7edc\u5730\u5740\uff1a\u4e3b\u673a\u4f4d\u5168\u4e3a0\u7684\u5730\u5740 3\\. \u5e7f\u64ad\u5730\u5740\uff1a\u4e3b\u673a\u4f4d\u5168\u4e3a1\u7684\u5730\u5740 \u5206\u6790\uff1a\u5360\u7528\u4e863\u4e2a\u4e3b\u673a\u4f4d \u6240\u4ee5\u5b50\u7f51\u7684\u4e2a\u6570\u4e3a2\u76843\u6b21\u65b9 8\u4e2a\u5b50\u7f51 \u6bcf\u4e2a\u5b50\u7f51\u7684\u8303\u56f4\u7684\u5757\u5927\u5c0f\u662f 256-224=32 \u6240\u4ee5\u6bcf\u4e2a\u5b50\u7f51\u7684\u8303\u56f4 \u6bcf\u4e2a\u5b50\u7f51\u7684\u4e3b\u673a\u8303\u56f4 192.168.4.0-192.168.4.32 192.168.4.1-192.168.4.31 192.168.4.32-192.168.4.64 192.168.4.32-192.168.4.63 192.168.4.64-192.168.4.96 192.168.4.64-192.168.4.95 192.168.4.96-192.168.4.128 192.168.4.96-192.168.4.127 192.168.4.128-192.168.4.160 192.168.4.127-192.168.4.159 192.168.4.160-192.168.4.192 192.168.4.160-192.168.4.191 192.168.4.192-192.168.4.224 192.168.4.191-192.168.4.223 192.168.4.224-192.168.4.255 192.168.4.224-192.168.4.254 \u7b2c\u4e94\u90e8\u5206 DNS\u534f\u8bae\u7684\u539f\u7406 \u00b6 DNS domain name system \u57df\u540d\u89e3\u6790\u7cfb\u7edf \u5e2e\u52a9\u4eba\u7c7b\u5c06\u57df\u540d\u89e3\u6790\u4e3aIP IP\u5730\u5740\u662f\u7f51\u7edc\u901a\u8baf\u65f6\u8981\u4f7f\u7528\u7684\u5730\u5740 \u57df\u540d\u8bbf\u95ee\u7f51\u7ad9\u8bb0\u5f55\u7f51\u7ad9\u670d\u52a1\u5668\u540d\u79f0 \u89e3\u6790\u539f\u7406\uff1a\u5f53\u4e00\u53f0\u4e3b\u673a\u8981\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u65f6\uff08jd.com),\u672c\u5730\u67e5\u8be2\u89e3\u6790\u5173\u7cfb\uff0c\u662f\u5426\u6709\u5bf9\u5e94\u7684\u89e3\u6790\u5173\u7cfb\u3002\u53bb\u67e5DNS\u7f13\u5b58\uff08\u4e4b\u524d\u4e4b\u524d\u6709\u8bb0\u5f55\uff09\u3002 #ipconfig/displaydns \u53bb\u67e5\u770b 2.\u5982\u679c\u6ca1\u6709\u8fd8\u4f1a\u53bb\u672c\u5730\u7684hosts\u53bb\u627e C:\\Windows\\System32\\drivers\\etc #linux /etc/hosts \u67e5\u627e 3.\u53bb\u672c\u5730localdns\u670d\u52a1\u5668\uff08\u7f51\u5361\u91cc\u90fd\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff09114.114.114.114\uff08\u6c5f\u82cf\u7535\u4fe1\uff09 223.5.5.5\uff08\u963f\u91cc\uff09 180.76.76.76\uff08\u767e\u5ea6\uff09\u3002 \u5982\u679cDNS\u670d\u52a1\u5668\u6709\u89e3\u6790\u8bb0\u5f55\u7684\u8bdd\u5c31\u8fd4\u56de\u7ed9\u4e3b\u673a\uff0c\u89e3\u6790\u5b8c\u6210\u3002 4.\u5982\u679c\u6ca1\u6709localdns\u670d\u52a1\u5668\u4f1a\u7ee7\u7eed\u5f80\u4e0a\u8d70\uff0c\u53bb\u8bf7\u6c42\u6839\u57df\u540d\u670d\u52a1\u5668\u3002\uff08\u5168\u7403\u53ea\u670913\u53f0\uff09\u3002 #\u57df\u540d\u7ed3\u6784\uff1awww.oldboy. #.\u4ee3\u8868\u6839\u57df\u540d\u670d\u52a1\u5668 .com .cn \u4e00\u7ea7\u57df\u540d\u7533\u8bf7\u7684\u57df\u540d #.jd.com .baidu.com \u4e8c\u7ea7\u57df\u540d\u670d\u52a1\u5668 5.\u672c\u5730\u57df\u540d\u670d\u52a1\u5668\u8bf7\u6c42\u6839\u57df\u540d\u670d\u52a1\u5668\u662f\u5426\u77e5\u9053jd.com\u7684\u5bf9\u5e94IP\u5730\u5740\u662f\u4ec0\u4e48 6.\u6839\u57df\u540d\u670d\u52a1\u5668\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u53bb\u8bf7\u6c42\u4e00\u7ea7\u57df\u540d\u670d\u52a1\u5668\u662f\u5426\u77e5\u9053\u3002\u4e00\u7ea7\u57df\u540d\u4e0d\u77e5\u9053\u7684\u65f6\u5019\u53bb\u8bf7\u6c42\u4e8c\u7ea7\u57df\u540d\u670d\u52a1\u5668\u3002 7.\u4e8c\u7ea7\u57df\u540d\u77e5\u9053\u53ef\u4ee5\u67e5\u5230jd.com\uff0c\u5e76\u80fd\u5bf9\u5e94\u89e3\u6790IP\u5730\u5740\u3002 #\u4e00\u4e2a\u57df\u540d\u548c\u4e00\u4e2aip\u5730\u5740\u7684\u8bb0\u5f55\uff0c\u53eb\u505aA\u8bb0\u5f55\u3002 8.\u628a\u8bb0\u5f55\u4fe1\u606f\u544a\u77e5\u7ed9localdns\u670d\u52a1\u5668\uff0clocaldns\u4f1a\u5728\u672c\u5730\u7f13\u5b58\u4e00\u4efd\uff0c\u4ee5\u514d\u4e0b\u6b21\u8fd8\u8981\u8fdb\u884c\u540c\u6837\u7684\u89e3\u6790\u3002 9.\u518d\u5c06A\u8bb0\u5f55\u53d1\u9001\u7ed9\u4e3b\u673a\uff0c\u4e3b\u673a\u4e5f\u4f1a\u7f13\u5b58\u4e00\u4efd\u3002\u4ee5\u514d\u4e0b\u6b21\u518d\u8fdb\u884c\u67e5\u8be2\u3002 10.\u4e3b\u673a\u5f97\u5230IP\u5730\u5740\uff0c\u7136\u540e\u8fdb\u884c\u5c01\u88c5\uff0c\u628a\u6570\u636e\u5305\u53d1\u9001\u7ed9\u672c\u5730\u7684\u8def\u7531\u5668\uff0c\u8def\u7531\u5668\u548c\u4e92\u8054\u7f51\u8fde\u63a5\u3002 11.\u6700\u7ec8\u4f1a\u53d1\u9001\u5230\u4eac\u4e1c\u7684\u7f51\u7ad9\u4e0a\uff0c\u4eac\u4e1c\u7f51\u7ad9\u518d\u8fdb\u884c\u56de\u590d\uff0c\u6700\u7ec8\u4f1a\u8bbf\u95ee\u5230\u4eac\u4e1c\u3002 #\u9012\u5f52\u67e5\u8be2\uff1a\u76f4\u63a5\u627elocaldns\u8fdb\u884c\u67e5\u8be2 #\u8fed\u4ee3\u67e5\u8be2\uff1a\u4e2d\u95f4\u4f1a\u7ecf\u8fc7\u5f88\u591a\u670d\u52a1\u5668\u8fdb\u884c\u67e5\u8be2\u3002 \u5c0f\u793c\u7269\u8d70\u4e00\u8d70\uff0c\u6765\u7b80\u4e66\u5173\u6ce8\u6211","title":"010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#_1","text":"\u8f6c\u8f7d \u4e3b\u8981\u8bb0\u5f55 \u4e3b\u673a\u4f20\u8f93\u6570\u636e\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5\u7684\u8fc7\u7a0b TCP\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u5b50\u7f51\u63a9\u7801\u7684\u5212\u5206 DNS\u534f\u8bae\u539f\u7406","title":"\u7f51\u7edc\u77e5\u8bc6\u8865\u5145"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#_2","text":"\u5e94\u7528\u5c42 \u8868\u793a\u5c42 --- data \u4f1a\u8bdd\u5c42 \u4f20\u8f93\u5c42 --- TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7f51\u7edc\u5c42 --- IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u94fe\u8def\u5c42 --- MAC\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807mac \u6e90mac\uff09+ IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7269\u7406\u5c42 --- bit\u6d41 0101010101010101010101 \u7f51\u5361 --- \u8c03\u7f6e bit\u6d41---\u9ad8\u4f4e\u7535\u538b \u7f51\u5361 --- \u89e3\u8c03 \u9ad8\u4f4e\u7535\u538b---bit\u6d41 \u7269\u7406\u5c42 --- bit\u6d41 0101010101010101010101 \u94fe\u8def\u5c42 --- MAC\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807mac \u6e90mac\uff09+ IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u7f51\u7edc\u5c42 --- IP\u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807IP \u6e90IP\uff09 + TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data \u4f20\u8f93\u5c42 --- TCP/UDP \u5934\u90e8\u4fe1\u606f\uff08\u76ee\u6807\u7aef\u53e3 \u6e90\u7aef\u53e3\uff09 + data netstat -lntup|grep \u76ee\u6807\u7aef\u53e3 \u5e94\u7528\u5c42 --- data","title":"\u7b2c\u4e00\u90e8\u5206 \u6570\u636e\u7684\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#2ab","text":"\u5c01\u88c5\u8fc7\u7a0b \u8bf4\u660e\uff1a 1.\u5f53PC01\u8981\u8bbf\u95eePC02\u768422\u7aef\u53e3\u65f6\uff0c\u5e94\u7528\u5c42\u7684\u6570\u636e\u6309\u7167TCP/IP\u6a21\u578b\u5728\u4f20\u8f93\u5c42\u5c01\u88c5=TCP\u7684\u5934\u90e8+\u6e90\u7aef\u53e3\uff081000\uff0c\u968f\u673a\uff09+\u76ee\u7684\u7aef\u53e3\uff0822\uff09\u3002 2.\u5230\u8fbe\u7f51\u7edc\u5c42\u8fdb\u884c\u5c01\u88c5\uff0c\u6e90ip\uff08\u81ea\u8eabIP\uff09+\u76ee\u7684IP\uff0802.02\uff0c\u5bf9\u7aefIP)\u3002 3.\u5230\u8fbe\u6570\u636e\u94fe\u8def\u5c42\u8fdb\u884c\u5c01\u88c5\uff0c\u6e90MAC(\u81ea\u8eabMAC)\uff0c\u76ee\u7684MAC(##\u4e3a\u7f51\u5173\u7684MAC\u5730\u5740\uff0c\u56e0\u4e3a\u5230\u8fbe\u4e0d\u540c\u7f51\u6bb5\u8981\u901a\u8fc7\u7f51\u5173\uff0c\u6240\u4ee5\u5c01\u88c5\u7684\u662f\u7f51\u5173\u7684MAC##)\u3002 4.\u6700\u7ec8\u5230\u8fbe\u7269\u7406\u5c42\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\uff0c\u901a\u8fc7\u7f51\u7ebf\u8fdb\u884c\u4f20\u8f93\u3002 \u89e3\u5c01\u88c5\u8fc7\u7a0b \u8bf4\u660e\uff1a\u5230\u8fbe\u8def\u7531\u5668\u4e4b\u540e 1.\u8def\u7531\u5668\u8fdb\u884c\u8fdb\u884c\u62c6\u5305\uff0c\u62c6\u5230\u4e8c\u5c42\u7684\u65f6\u5019\u770b\u6e90\u76eeMAC\u5730\u5740 \u53ef\u4ee5\u770b\u5230\u76ee\u7684MAC\u662f\u8bbf\u95ee\u8def\u7531\u5668\u7684eth0\u7684\u63a5\u53e3\u3002 2.\u7ee7\u7eed\u62c6\u5305\uff0c\u62c6\u5230\u7f51\u7edc\u5c42\u770b\u8bbf\u95ee\u7684IP\u662f02.02\uff0c\u5728\u8def\u7531\u5668\u7684\u8def\u7531\u8868\u4e2d\u3002\u53ef\u4ee5\u8fdb\u884c\u8f6c\u53d1\u3002 3.\u8f6c\u53d1\u4e4b\u524d\u5148\u8fdb\u884c\u5c01\u88c5\uff0c\u6570\u636e\u94fe\u8def\u5c42\u5c06\u6e90MAC\u53d8\u4e3aeth1\u7684mac\u5730\u5740,\u76ee\u7684mac\u56e0\u4e3a\u4e0d\u77e5\u9053\u5148\u8fdb\u884c\u5168F\u5c01\u88c5\u3002 4.\u4eceEth1\u53e3\u51fa\u53bb\u4ee5\u540e\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\u7684\u6a21\u5f0f\u3002 5.\u56e0\u4e3aEth1\u7684\u76ee\u7684mac\u4e3a\u5e7f\u64ad\u7684\u5f62\u5f0f\uff0c\u5728\u540c\u4e00\u7f51\u6bb5\u7684\u8fdb\u884c\u5e7f\u64ad\uff0c\u6536\u5230\u5e7f\u64ad\u7684\u4e3b\u673a\u8fdb\u884c\u62c6\u5305\u3002 \u5f53\u62c6\u5230\u7f51\u7edc\u5c42\u7684\u65f6\u5019\u770b\u5230\u76ee\u7684IP\u4e3a\u81ea\u5df1\u7684IP\u65f6\uff0c\u8fdb\u884c\u5b8c\u6210\u4e0a\u4e00\u5c42\u7684\u89e3\u5c01\u88c5\u3002\u5b8c\u6210\u8bbf\u95ee\u3002","title":"2.\u5f53A\u4e3b\u673a\u8bbf\u95eeB\u4e3b\u673a\u7684\u670d\u52a1\uff0c\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5\u7684\u8be6\u7ec6\u8fc7\u7a0b"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#pc02pc01","text":"\u8bf4\u660e\uff1a 1.\u4f20\u8f93\u5c42\uff1aTCP\u5305\u5934+\u6e90\u7aef\u53e3\uff08\u81ea\u5df1\uff09+\u76ee\u7684\u7aef\u53e3\uff081000\uff09+date 2.\u7f51\u7edc\u5c42\uff1a\u6e90IP\uff08\u81ea\u5df1\uff09+\u76ee\u7684IP\uff08pc01\uff09+date 3.\u6570\u636e\u94fe\u8def\u5c42\uff1a\u6e90MAC(\u81ea\u5df1)+\u76ee\u7684\uff08\u7f51\u5173\u7684MAC\uff09 4.\u53d8\u4e3a\u9ad8\u4f4e\u7535\u538b\u4ece\u7f51\u7ebf\u4f20\u8f93\u51fa\u53bb \u5230\u8fbe\u8def\u7531\u5668\uff1a 1.\u8fdb\u884c\u62c6\u5305\uff0c\u5230\u8fbe\u6570\u636e\u94fe\u8def\u5c42\uff0c\u67e5\u770b\u76ee\u7684MAC\u4e3a\u81ea\u5df1\u7684eth1\u53e3\uff0c\u662f\u8bbf\u95ee\u81ea\u5df1\u3002 2.\u7ee7\u7eed\u8fdb\u884c\u62c6\u5305\uff0c\u5230\u8fbe\u7f51\u7edc\u5c42\uff0c\u67e5\u770b\u8bbf\u95ee\u7684IP\u4e3a\u8def\u7531\u5668\u8def\u7531\u8868\u4e2d\u7684\u7f51\u6bb5\uff0c\u53ef\u4ee5\u8fdb\u884c\u8f6c\u53d1\u3002 3.\u8def\u7531\u5668\u8fdb\u884c\u5c01\u88c5\uff0c\u5c06\u6e90MAC\u53d8\u4e3aeth0\u7684mac\u5730\u5740\uff0c\u76ee\u7684MAC\u4e3apc01\u7684mac,(\u56e0\u4e3a\u4e4b\u524dPC01\u5df2\u7ecf\u53d1\u5305\u5230\u8fbePC02,\u6240\u4ee5\u77e5\u9053PC01\u7684mac,\u6240\u4ee5\u4e0d\u9700\u8981\u8fdb\u884c\u5e7f\u64ad\u4e86) 4.pc01\u6536\u5230\u56de\u5305\u4e4b\u540e\u9010\u6e10\u8fdb\u884c\u89e3\u5c01\u88c5\uff0c\u81f3\u6b64\uff0c\u53cc\u65b9\u5b8c\u6210\u901a\u4fe1\u3002","title":"\u4ecePC02\u5230PC01\u56de\u5305\u7684\u8fc7\u7a0b"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#arp","text":"","title":"\u7b2c\u4e8c\u90e8\u5206 ARP\u534f\u8bae"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#tcp","text":"TCP\u534f\u8bae\uff1a\u4f20\u8f93\u63a7\u5236\u534f\u8bae \u9762\u5411\u8fde\u63a5\u7f51\u7edc\u534f\u8bae \u53ef\u9760\u4f20\u8f93 UDP\u534f\u8bae\uff1a\u7528\u6237\u62a5\u6587\u534f\u8bae \u65e0\u8fde\u63a5\u7f51\u7edc\u534f\u8bae \u4e0d\u53ef\u9760(\u6ce8\u91cd\u4f20\u8f93\u6548\u7387)","title":"\u7b2c\u4e09\u90e8\u5206 TCP\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#1tcp","text":"\u6ce8\u610f\uff1a\u4e3b\u8981\u4e86\u89e3\u6e90\u76ee\u7aef\u53e3\uff0cACK\uff0cSYN\uff0cFIN\u3002 \u63a7\u5236\u4f4d\uff1a syn =1 \u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5 fin =1 \u8bf7\u6c42\u65ad\u5f00\u8fde\u63a5 ack =1 \u53d1\u9001\u786e\u8ba4\u4fe1\u606f","title":"1.TCP\u7684\u62a5\u6587\u7ed3\u6784"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#21-65535","text":"\u56e0\u4e3a\u7aef\u53e3\u5360\u7528\u7684bit\u4f4d\u662f0-15 \u6240\u4ee56\u662f2\u768416\u7684\u6b21\u65b9\u300265536 \u4f46\u662f0\u662fTCP\u548cUDP\u4e0d\u8bc6\u522b\u7684\u7aef\u53e3\u53f7\u6240\u4ee5\u4e3a65535\u3002","title":"2.\u4e3a\u4ec0\u4e48\u7aef\u53e3\u53f7\u662f1-65535"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#3tcp","text":"\u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\uff1a \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587 \uff08syn seq=X\uff09 \u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08syn ack ACK=X+1 seq=Y\uff09 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08ack seq=X+1 ACK=Y+1\uff09","title":"3.TCP\u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#4","text":"\u6ce8\uff1a\u56db\u6b21\u6325\u624b\u4e0d\u4e00\u5b9a\u662f\u5ba2\u6237\u7aef\u5148\u53d1\u8d77\u7684 \u56db\u6b21\u6325\u624b\u8fc7\u7a0b\uff08\u4e5f\u6709\u4e09\u6b21\u6325\u624b\u7684\u72b6\u6001\uff0c\u672a\u7b49\u5230\u670d\u52a1\u7aef\u7684ACK\u72b6\u6001\uff0c\u76f4\u63a5\u7b49\u5230\u4e86\u670d\u52a1\u7aef\u7684fin\u72b6\u6001\u3002\uff09\uff1a \u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08fin ack\uff09 \u6ce8:ack \u4e3a\u4e4b\u524d\u8fde\u63a5\u7684ack\u786e\u8ba4\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u670d\u52a1\u7aef \u63a5\u6536TCP\u62a5\u6587 \u53d1\u9001TCP\u62a5\u6587\uff08ack\uff09 \u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u670d\u52a1\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08fin \u518d\u786e\u5b9a\u65ad\u5f00 ack \u8fc7\u7a0b\u786e\u8ba4\uff09 \u7b2c\u56db\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef \u53d1\u9001TCP\u62a5\u6587\uff08ack\uff09","title":"4.\u56db\u6b21\u6325\u624b\u7684\u8fc7\u7a0b"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#5tcp11","text":"1.\u5f53\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5f00\u59cb\u90fd\u4e3a\u5173\u95ed\u7684\u65f6\u5019\u4e3aCLOSED(1)\u72b6\u6001 2.\u5f53\u670d\u52a1\u7aef\u542f\u52a8\u597d\u670d\u52a1\u4ee5\u540e\u4e3aLISTENING(2)\u72b6\u6001\uff0c\u522b\u4eba\u8bbf\u95ee\u624d\u80fd\u63a5\u6536\u3002 3.\u5f53\u5ba2\u6237\u7aef\u53d1\u9001\u5b8cSYN\u540e\u53d8\u4e3aSYN_SENT(3)\u72b6\u6001\u3002 4.\u670d\u52a1\u7aef\u6536\u5230syn\u4f1a\u5b8c\u6210\u7b2c\u4e8c\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b \u53d8\u4e3a(4)SYN_RCVD\u72b6\u6001 5.\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u53d1\u9001\u7684SYN ack\u540e\uff0c\u518d\u53d1\u4e2aACK\u7684\u786e\u8ba4\uff0c\u53d8\u4e3a(5)ESTABLISHED\u7684\u72b6\u6001\u3002 6.\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684fin\u540e\uff0c\u670d\u52a1\u7aef\u7531\u539f\u6765\u7684ESTABLISHED\u7684\u72b6\u6001\u53d8\u4e3aCLOSE_WAIT(6) 7.\u5ba2\u6237\u7aef\u53d1\u5b8cFIN\u540e\u53d8\u4e3aFIN_WAIT1\uff087\uff09\u7684\u72b6\u6001\uff0c\u7b49\u5f85\u63a5\u6536\u670d\u52a1\u7aef\u7684ACK\u72b6\u6001\u3002 8.\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684ACK\u4ee5\u540e\uff0c\u4f1a\u53d8\u4e3aFIN_WAIT2\uff088\uff09\u7684\u72b6\u6001\u3002 9.\u5f53\u5ba2\u6237\u7aef\u6536\u5230FIN\u7b2c\u4e09\u6b21\u6325\u624b\u7684\u8fc7\u7a0b\u540e\uff0c\u5ba2\u6237\u7aef\u4f1a\u53d1\u9001ACK\uff0c\u53d8\u4e3aTIME_WAIT\uff089\uff09\u7684\u72b6\u6001\u3002 10.\u670d\u52a1\u7aef\u53d1\u5b8cFIN\u540e\u4f1a\u53d8\u4e3aCLOSE_WAIT\uff0810\uff09\u7684\u72b6\u6001 11.\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684ACK\u4e4b\u540e\uff0c\u670d\u52a1\u7aef\u4f1a\u53d8\u4e3aLAST_ACK(11)\u7684\u72b6\u6001\u3002","title":"5.TCP\u768411\u79cd\u72b6\u6001"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#ip","text":"\u4e3e\u4f8b\uff1a192.16.4.0/27 \u95ee\u9898\uff1a\u53ef\u4ee5\u6709\u51e0\u4e2a\u5b50\u7f51 \u5b50\u7f51\u63a9\u7801 \u6bcf\u4e2a\u5b50\u7f51\u4e3b\u673a\u8303\u56f4 1\\. \u5b50\u7f51\u4e2a\u6570\uff1a2\u7684n\u6b21\u65b9 n\u8868\u793a\u501f\u7528\u591a\u5c11\u4e2a\u4e3b\u673a\u4f4d\u53d8\u4e3a\u5b50\u7f51\u4f4d 2\\. \u7f51\u7edc\u5730\u5740\uff1a\u4e3b\u673a\u4f4d\u5168\u4e3a0\u7684\u5730\u5740 3\\. \u5e7f\u64ad\u5730\u5740\uff1a\u4e3b\u673a\u4f4d\u5168\u4e3a1\u7684\u5730\u5740 \u5206\u6790\uff1a\u5360\u7528\u4e863\u4e2a\u4e3b\u673a\u4f4d \u6240\u4ee5\u5b50\u7f51\u7684\u4e2a\u6570\u4e3a2\u76843\u6b21\u65b9 8\u4e2a\u5b50\u7f51 \u6bcf\u4e2a\u5b50\u7f51\u7684\u8303\u56f4\u7684\u5757\u5927\u5c0f\u662f 256-224=32 \u6240\u4ee5\u6bcf\u4e2a\u5b50\u7f51\u7684\u8303\u56f4 \u6bcf\u4e2a\u5b50\u7f51\u7684\u4e3b\u673a\u8303\u56f4 192.168.4.0-192.168.4.32 192.168.4.1-192.168.4.31 192.168.4.32-192.168.4.64 192.168.4.32-192.168.4.63 192.168.4.64-192.168.4.96 192.168.4.64-192.168.4.95 192.168.4.96-192.168.4.128 192.168.4.96-192.168.4.127 192.168.4.128-192.168.4.160 192.168.4.127-192.168.4.159 192.168.4.160-192.168.4.192 192.168.4.160-192.168.4.191 192.168.4.192-192.168.4.224 192.168.4.191-192.168.4.223 192.168.4.224-192.168.4.255 192.168.4.224-192.168.4.254","title":"\u7b2c\u56db\u90e8\u5206 IP\u5730\u5740\u7684\u5b50\u7f51\u5212\u5206"},{"location":"python-web/010 \u7f51\u7edc\u77e5\u8bc6\u8865\u5145/#dns","text":"DNS domain name system \u57df\u540d\u89e3\u6790\u7cfb\u7edf \u5e2e\u52a9\u4eba\u7c7b\u5c06\u57df\u540d\u89e3\u6790\u4e3aIP IP\u5730\u5740\u662f\u7f51\u7edc\u901a\u8baf\u65f6\u8981\u4f7f\u7528\u7684\u5730\u5740 \u57df\u540d\u8bbf\u95ee\u7f51\u7ad9\u8bb0\u5f55\u7f51\u7ad9\u670d\u52a1\u5668\u540d\u79f0 \u89e3\u6790\u539f\u7406\uff1a\u5f53\u4e00\u53f0\u4e3b\u673a\u8981\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u65f6\uff08jd.com),\u672c\u5730\u67e5\u8be2\u89e3\u6790\u5173\u7cfb\uff0c\u662f\u5426\u6709\u5bf9\u5e94\u7684\u89e3\u6790\u5173\u7cfb\u3002\u53bb\u67e5DNS\u7f13\u5b58\uff08\u4e4b\u524d\u4e4b\u524d\u6709\u8bb0\u5f55\uff09\u3002 #ipconfig/displaydns \u53bb\u67e5\u770b 2.\u5982\u679c\u6ca1\u6709\u8fd8\u4f1a\u53bb\u672c\u5730\u7684hosts\u53bb\u627e C:\\Windows\\System32\\drivers\\etc #linux /etc/hosts \u67e5\u627e 3.\u53bb\u672c\u5730localdns\u670d\u52a1\u5668\uff08\u7f51\u5361\u91cc\u90fd\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff09114.114.114.114\uff08\u6c5f\u82cf\u7535\u4fe1\uff09 223.5.5.5\uff08\u963f\u91cc\uff09 180.76.76.76\uff08\u767e\u5ea6\uff09\u3002 \u5982\u679cDNS\u670d\u52a1\u5668\u6709\u89e3\u6790\u8bb0\u5f55\u7684\u8bdd\u5c31\u8fd4\u56de\u7ed9\u4e3b\u673a\uff0c\u89e3\u6790\u5b8c\u6210\u3002 4.\u5982\u679c\u6ca1\u6709localdns\u670d\u52a1\u5668\u4f1a\u7ee7\u7eed\u5f80\u4e0a\u8d70\uff0c\u53bb\u8bf7\u6c42\u6839\u57df\u540d\u670d\u52a1\u5668\u3002\uff08\u5168\u7403\u53ea\u670913\u53f0\uff09\u3002 #\u57df\u540d\u7ed3\u6784\uff1awww.oldboy. #.\u4ee3\u8868\u6839\u57df\u540d\u670d\u52a1\u5668 .com .cn \u4e00\u7ea7\u57df\u540d\u7533\u8bf7\u7684\u57df\u540d #.jd.com .baidu.com \u4e8c\u7ea7\u57df\u540d\u670d\u52a1\u5668 5.\u672c\u5730\u57df\u540d\u670d\u52a1\u5668\u8bf7\u6c42\u6839\u57df\u540d\u670d\u52a1\u5668\u662f\u5426\u77e5\u9053jd.com\u7684\u5bf9\u5e94IP\u5730\u5740\u662f\u4ec0\u4e48 6.\u6839\u57df\u540d\u670d\u52a1\u5668\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u53bb\u8bf7\u6c42\u4e00\u7ea7\u57df\u540d\u670d\u52a1\u5668\u662f\u5426\u77e5\u9053\u3002\u4e00\u7ea7\u57df\u540d\u4e0d\u77e5\u9053\u7684\u65f6\u5019\u53bb\u8bf7\u6c42\u4e8c\u7ea7\u57df\u540d\u670d\u52a1\u5668\u3002 7.\u4e8c\u7ea7\u57df\u540d\u77e5\u9053\u53ef\u4ee5\u67e5\u5230jd.com\uff0c\u5e76\u80fd\u5bf9\u5e94\u89e3\u6790IP\u5730\u5740\u3002 #\u4e00\u4e2a\u57df\u540d\u548c\u4e00\u4e2aip\u5730\u5740\u7684\u8bb0\u5f55\uff0c\u53eb\u505aA\u8bb0\u5f55\u3002 8.\u628a\u8bb0\u5f55\u4fe1\u606f\u544a\u77e5\u7ed9localdns\u670d\u52a1\u5668\uff0clocaldns\u4f1a\u5728\u672c\u5730\u7f13\u5b58\u4e00\u4efd\uff0c\u4ee5\u514d\u4e0b\u6b21\u8fd8\u8981\u8fdb\u884c\u540c\u6837\u7684\u89e3\u6790\u3002 9.\u518d\u5c06A\u8bb0\u5f55\u53d1\u9001\u7ed9\u4e3b\u673a\uff0c\u4e3b\u673a\u4e5f\u4f1a\u7f13\u5b58\u4e00\u4efd\u3002\u4ee5\u514d\u4e0b\u6b21\u518d\u8fdb\u884c\u67e5\u8be2\u3002 10.\u4e3b\u673a\u5f97\u5230IP\u5730\u5740\uff0c\u7136\u540e\u8fdb\u884c\u5c01\u88c5\uff0c\u628a\u6570\u636e\u5305\u53d1\u9001\u7ed9\u672c\u5730\u7684\u8def\u7531\u5668\uff0c\u8def\u7531\u5668\u548c\u4e92\u8054\u7f51\u8fde\u63a5\u3002 11.\u6700\u7ec8\u4f1a\u53d1\u9001\u5230\u4eac\u4e1c\u7684\u7f51\u7ad9\u4e0a\uff0c\u4eac\u4e1c\u7f51\u7ad9\u518d\u8fdb\u884c\u56de\u590d\uff0c\u6700\u7ec8\u4f1a\u8bbf\u95ee\u5230\u4eac\u4e1c\u3002 #\u9012\u5f52\u67e5\u8be2\uff1a\u76f4\u63a5\u627elocaldns\u8fdb\u884c\u67e5\u8be2 #\u8fed\u4ee3\u67e5\u8be2\uff1a\u4e2d\u95f4\u4f1a\u7ecf\u8fc7\u5f88\u591a\u670d\u52a1\u5668\u8fdb\u884c\u67e5\u8be2\u3002 \u5c0f\u793c\u7269\u8d70\u4e00\u8d70\uff0c\u6765\u7b80\u4e66\u5173\u6ce8\u6211","title":"\u7b2c\u4e94\u90e8\u5206 DNS\u534f\u8bae\u7684\u539f\u7406"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/","text":"1.\u521b\u5efa\u9879\u76ee \u00b6 django - admin startproject \u9879\u76ee\u540d\u79f0 \u4f8b\uff1a django - admin startproject test1 2. \u521b\u5efa\u5e94\u7528 \u00b6 python manage . py startapp booktest 3.\u5b89\u88c5\u5e94\u7528] \u00b6 4.\u5efa\u7acb\u6a21\u677f\u76ee\u5f55 templates \u00b6 5. \u6dfb\u52a0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84 \u00b6 6. \u6570\u636e\u5e93\u7684\u4fee\u6539(\u4f7f\u7528mysql\u6570\u636e\u5e93) \u00b6 (1)\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93 \u00b6 (2) setting\u6587\u4ef6\u7684\u914d\u7f6e (3)__init__\u6587\u4ef6\u7684\u914d\u7f6e (4) \u8fc1\u79fb\u6570\u636e\u5e93 \u8fc1\u79fb\u7531\u4e24\u6b65\u5b8c\u6210: 1.\u751f\u6210\u8fc1\u79fb\u6587\u4ef6\uff1a\u6839\u636e\u6a21\u578b\u7c7b\u751f\u6210\u521b\u5efa\u8868\u7684\u8fc1\u79fb\u6587\u4ef6\u3002 2.\u6267\u884c\u8fc1\u79fb\uff1a\u6839\u636e\u7b2c\u4e00\u6b65\u751f\u6210\u7684\u8fc1\u79fb\u6587\u4ef6\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868\u3002 \u751f\u6210\u8fc1\u79fb\u6587\u4ef6\u547d\u4ee4\u5982\u4e0b\uff1a python manage.py makemigrations \u6267\u884c\u8fc1\u79fb\u547d\u4ee4\u5982\u4e0b\uff1a(\u4e00\u5f00\u59cb\u6ca1\u6709\u6a21\u578b\u7c7b,\u53ea\u8981\u8fc1\u79fb\u5c31\u884c\u4e86\u4e0d\u7528\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6) python manage.py migrate 7.\u8bed\u8a00\u53ca\u5730\u533a\u7684\u4fee\u6539 \u00b6 8. urls \u8def\u7531\u7684\u8bbe\u7f6e \u00b6 (1)\u7236\u8def\u7531 \u00b6 (2)\u5b50\u8def\u7531 \u00b6 01 \u62f7\u8d1d\u7236\u8def\u7531\u5230 booktest \u8fd9\u4e2a\u5e94\u7528\u6587\u4ef6\u5939 02 \u8def\u7531\u7684\u914d\u7f6e \u5220\u9664\u4e0d\u7528\u7684\u4e1c\u897f\u5e72\u5e72\u51c0\u51c0\u7684 9. \u7ed1\u5b9aip\u8ddf\u7aef\u53e3\u5f00\u542f\u670d\u52a1\u5668 \u00b6 \u51fa\u73b0\u8fd9\u91cc\u662f\u56e0\u4e3a\u6ca1\u6709\u8fc1\u79fb\u6570\u636e\u5e93(\u5230\u524d\u9762\u7684\u5730\u65b9\u68c0\u67e5) \u7531\u4e8e\u6ca1\u6709\u521b\u5efa\u6a21\u578b\u7c7b,\u56e0\u6b64\u53ea\u9700\u8981\u8fc1\u79fb\u5c31\u884c 10.\u6d4f\u89c8\u5668\u8f93\u5165ip \u00b6 \u5570\u91cc\u5570\u55e6\u7684\u4f7f\u7528\u8fc7\u7a0b 11 \u6a21\u578b\u7c7b\u7684\u521b\u5efa \u00b6 \u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u4f7f\u7528\u53c2\u8003html\u6587\u6863 \u00b6 \u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u501f\u52a9\u5bcc\u6587\u672c\u7f16\u8f91\u5668\uff0c\u7f51\u7ad9\u7684\u7f16\u8f91\u4eba\u5458\u80fd\u591f\u50cf\u4f7f\u7528offfice\u4e00\u6837\u7f16\u5199\u51fa\u6f02\u4eae\u7684\u3001\u6240\u89c1\u5373\u6240\u5f97\u7684\u9875\u9762\u3002\u6b64\u5904\u4ee5tinymce\u4e3a\u4f8b\uff0c\u5176\u5b83\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u4f7f\u7528\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u5305\u3002 pip install django-tinymce==2.6.0 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728Admin\u7ba1\u7406\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8868\u5355\u4f7f\u7528\u3002 \u793a\u4f8b 1\uff09\u5728test6/settings.py\u4e2d\u4e3aINSTALLED_APPS\u6dfb\u52a0\u7f16\u8f91\u5668\u5e94\u7528\u3002 INSTALLED_APPS = ( ... 'tinymce', ) 2\uff09\u5728test6/settings.py\u4e2d\u6dfb\u52a0\u7f16\u8f91\u5668\u914d\u7f6e\u3002 TINYMCE_DEFAULT_CONFIG = { 'theme': 'advanced', 'width': 600, 'height': 400, } 3\uff09\u5728test6/urls.py\u4e2d\u914d\u7f6e\u7f16\u8f91\u5668url\u3002 urlpatterns = [ ... url(r'^tinymce/', include('tinymce.urls')), ] \u63a5\u4e0b\u6765\u4ecb\u7ecd\u5728Admin\u9875\u9762\u3001\u81ea\u5b9a\u4e49\u8868\u5355\u9875\u9762\u7684\u4f7f\u7528\u65b9\u5f0f\u3002 \u5728Admin\u4e2d\u4f7f\u7528 \u00b6 1\uff09\u5728booktest/models.py\u4e2d\uff0c\u5b9a\u4e49\u6a21\u578b\u7684\u5c5e\u6027\u4e3aHTMLField()\u7c7b\u578b\u3002 \u6570\u636e\u5e93\u8fc1\u79fb \u00b6 \u540e\u53f0\u6ce8\u518c \u00b6 \u540e\u53f0\u7ba1\u7406\u5458\u7684\u521b\u5efa \u00b6 1.\u521b\u5efa\u7ba1\u7406\u5458 \u521b\u5efa\u7ba1\u7406\u5458\u7684\u547d\u4ee4\u5982\u4e0b\uff0c\u6309\u63d0\u793a\u8f93\u5165\u7528\u6237\u540d\u3001\u90ae\u7bb1\u3001\u5bc6\u7801\u3002 python manage.py createsuperuser \u767b\u5f55\u540e\u53f0\u7ba1\u7406 \u8fdb\u5165goods tests \u8fdb\u884c\u6dfb\u52a0(\u4e00\u4e2a\u5546\u54c1\u72b6\u6001,\u4e00\u4e2a\u5546\u54c1\u8be6\u60c5) \u4f7f\u5f97\u663e\u793a\u66f4\u52a0\u4eba\u6027\u5316","title":"011 Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#1","text":"django - admin startproject \u9879\u76ee\u540d\u79f0 \u4f8b\uff1a django - admin startproject test1","title":"1.\u521b\u5efa\u9879\u76ee"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#2","text":"python manage . py startapp booktest","title":"2. \u521b\u5efa\u5e94\u7528"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#3","text":"","title":"3.\u5b89\u88c5\u5e94\u7528]"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#4-templates","text":"","title":"4.\u5efa\u7acb\u6a21\u677f\u76ee\u5f55 templates"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#5","text":"","title":"5. \u6dfb\u52a0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#6-mysql","text":"","title":"6. \u6570\u636e\u5e93\u7684\u4fee\u6539(\u4f7f\u7528mysql\u6570\u636e\u5e93)"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#1_1","text":"(2) setting\u6587\u4ef6\u7684\u914d\u7f6e (3)__init__\u6587\u4ef6\u7684\u914d\u7f6e (4) \u8fc1\u79fb\u6570\u636e\u5e93 \u8fc1\u79fb\u7531\u4e24\u6b65\u5b8c\u6210: 1.\u751f\u6210\u8fc1\u79fb\u6587\u4ef6\uff1a\u6839\u636e\u6a21\u578b\u7c7b\u751f\u6210\u521b\u5efa\u8868\u7684\u8fc1\u79fb\u6587\u4ef6\u3002 2.\u6267\u884c\u8fc1\u79fb\uff1a\u6839\u636e\u7b2c\u4e00\u6b65\u751f\u6210\u7684\u8fc1\u79fb\u6587\u4ef6\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868\u3002 \u751f\u6210\u8fc1\u79fb\u6587\u4ef6\u547d\u4ee4\u5982\u4e0b\uff1a python manage.py makemigrations \u6267\u884c\u8fc1\u79fb\u547d\u4ee4\u5982\u4e0b\uff1a(\u4e00\u5f00\u59cb\u6ca1\u6709\u6a21\u578b\u7c7b,\u53ea\u8981\u8fc1\u79fb\u5c31\u884c\u4e86\u4e0d\u7528\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6) python manage.py migrate","title":"(1)\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#7","text":"","title":"7.\u8bed\u8a00\u53ca\u5730\u533a\u7684\u4fee\u6539"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#8-urls","text":"","title":"8. urls \u8def\u7531\u7684\u8bbe\u7f6e"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#1_2","text":"","title":"(1)\u7236\u8def\u7531"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#2_1","text":"01 \u62f7\u8d1d\u7236\u8def\u7531\u5230 booktest \u8fd9\u4e2a\u5e94\u7528\u6587\u4ef6\u5939 02 \u8def\u7531\u7684\u914d\u7f6e \u5220\u9664\u4e0d\u7528\u7684\u4e1c\u897f\u5e72\u5e72\u51c0\u51c0\u7684","title":"(2)\u5b50\u8def\u7531"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#9-ip","text":"\u51fa\u73b0\u8fd9\u91cc\u662f\u56e0\u4e3a\u6ca1\u6709\u8fc1\u79fb\u6570\u636e\u5e93(\u5230\u524d\u9762\u7684\u5730\u65b9\u68c0\u67e5) \u7531\u4e8e\u6ca1\u6709\u521b\u5efa\u6a21\u578b\u7c7b,\u56e0\u6b64\u53ea\u9700\u8981\u8fc1\u79fb\u5c31\u884c","title":"9. \u7ed1\u5b9aip\u8ddf\u7aef\u53e3\u5f00\u542f\u670d\u52a1\u5668"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#10ip","text":"\u5570\u91cc\u5570\u55e6\u7684\u4f7f\u7528\u8fc7\u7a0b","title":"10.\u6d4f\u89c8\u5668\u8f93\u5165ip"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#11","text":"","title":"11 \u6a21\u578b\u7c7b\u7684\u521b\u5efa"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#html","text":"\u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u501f\u52a9\u5bcc\u6587\u672c\u7f16\u8f91\u5668\uff0c\u7f51\u7ad9\u7684\u7f16\u8f91\u4eba\u5458\u80fd\u591f\u50cf\u4f7f\u7528offfice\u4e00\u6837\u7f16\u5199\u51fa\u6f02\u4eae\u7684\u3001\u6240\u89c1\u5373\u6240\u5f97\u7684\u9875\u9762\u3002\u6b64\u5904\u4ee5tinymce\u4e3a\u4f8b\uff0c\u5176\u5b83\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u4f7f\u7528\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u5305\u3002 pip install django-tinymce==2.6.0 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728Admin\u7ba1\u7406\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8868\u5355\u4f7f\u7528\u3002 \u793a\u4f8b 1\uff09\u5728test6/settings.py\u4e2d\u4e3aINSTALLED_APPS\u6dfb\u52a0\u7f16\u8f91\u5668\u5e94\u7528\u3002 INSTALLED_APPS = ( ... 'tinymce', ) 2\uff09\u5728test6/settings.py\u4e2d\u6dfb\u52a0\u7f16\u8f91\u5668\u914d\u7f6e\u3002 TINYMCE_DEFAULT_CONFIG = { 'theme': 'advanced', 'width': 600, 'height': 400, } 3\uff09\u5728test6/urls.py\u4e2d\u914d\u7f6e\u7f16\u8f91\u5668url\u3002 urlpatterns = [ ... url(r'^tinymce/', include('tinymce.urls')), ] \u63a5\u4e0b\u6765\u4ecb\u7ecd\u5728Admin\u9875\u9762\u3001\u81ea\u5b9a\u4e49\u8868\u5355\u9875\u9762\u7684\u4f7f\u7528\u65b9\u5f0f\u3002","title":"\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u4f7f\u7528\u53c2\u8003html\u6587\u6863"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#admin","text":"1\uff09\u5728booktest/models.py\u4e2d\uff0c\u5b9a\u4e49\u6a21\u578b\u7684\u5c5e\u6027\u4e3aHTMLField()\u7c7b\u578b\u3002","title":"\u5728Admin\u4e2d\u4f7f\u7528"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#_1","text":"","title":"\u6570\u636e\u5e93\u8fc1\u79fb"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#_2","text":"","title":"\u540e\u53f0\u6ce8\u518c"},{"location":"python-web/011-Django\u6846\u67b6\u4f7f\u7528\u6b65\u9aa4/#_3","text":"1.\u521b\u5efa\u7ba1\u7406\u5458 \u521b\u5efa\u7ba1\u7406\u5458\u7684\u547d\u4ee4\u5982\u4e0b\uff0c\u6309\u63d0\u793a\u8f93\u5165\u7528\u6237\u540d\u3001\u90ae\u7bb1\u3001\u5bc6\u7801\u3002 python manage.py createsuperuser \u767b\u5f55\u540e\u53f0\u7ba1\u7406 \u8fdb\u5165goods tests \u8fdb\u884c\u6dfb\u52a0(\u4e00\u4e2a\u5546\u54c1\u72b6\u6001,\u4e00\u4e2a\u5546\u54c1\u8be6\u60c5) \u4f7f\u5f97\u663e\u793a\u66f4\u52a0\u4eba\u6027\u5316","title":"\u540e\u53f0\u7ba1\u7406\u5458\u7684\u521b\u5efa"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/","text":"\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS \u00b6 1.\u4ec0\u4e48\u662fFastDFS \u00b6 FastDFS \u662f\u7528c \u8bed\u8a00\u7f16\u5199\u7684\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002FastDFS \u4e3a\u4e92\u8054\u7f51\u91cf\u8eab\u5b9a\u5236\uff0c\u5145\u5206\u8003\u8651\u4e86\u5197\u4f59\u5907\u4efd\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u7ebf\u6027\u6269\u5bb9\u7b49\u673a\u5236\uff0c\u5e76\u6ce8\u91cd\u9ad8\u53ef\u7528\u3001\u9ad8\u6027\u80fd\u7b49\u6307\u6807\uff0c\u4f7f\u7528FastDFS \u5f88\u5bb9\u6613\u642d\u5efa\u4e00\u5957\u9ad8\u6027\u80fd\u7684\u6587\u4ef6\u670d\u52a1\u5668\u96c6\u7fa4\u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u7b49\u670d\u52a1\u3002 FastDFS \u67b6\u6784\u5305\u62ec Tracker server\u548c Storage server\u3002\u5ba2\u6237\u7aef\u8bf7\u6c42 Tracker server \u8fdb\u884c\u6587 \u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\uff0c\u901a\u8fc7 Tracker server \u8c03\u5ea6\u6700\u7ec8\u7531 Storage server \u5b8c\u6210\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d\u3002 Tracker server \u4f5c\u7528\u662f\u8d1f\u8f7d\u5747\u8861\u548c\u8c03\u5ea6\uff0c\u901a\u8fc7 Tracker server \u5728\u6587\u4ef6\u4e0a\u4f20\u65f6\u53ef\u4ee5\u6839\u636e\u4e00\u4e9b \u7b56\u7565\u627e\u5230 Storage server \u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u3002\u53ef\u4ee5\u5c06 tracker \u79f0\u4e3a\u8ffd\u8e2a\u670d\u52a1\u5668\u6216\u8c03\u5ea6\u670d\u52a1 \u5668\u3002 Storage server \u4f5c\u7528\u662f\u6587\u4ef6\u5b58\u50a8\uff0c\u5ba2\u6237\u7aef\u4e0a\u4f20\u7684\u6587\u4ef6\u6700\u7ec8\u5b58\u50a8\u5728 Storage \u670d\u52a1\u5668\u4e0a\uff0c Storageserver \u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u800c\u662f\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf \u7684\u6587\u4ef6\u7cfb\u7edf\u6765\u7ba1\u7406\u6587\u4ef6\u3002\u53ef\u4ee5\u5c06 storage \u79f0\u4e3a\u5b58\u50a8\u670d\u52a1\u5668\u3002 \u670d\u52a1\u7aef\u4e24\u4e2a\u89d2\u8272: Tracker:\u7ba1\u7406\u96c6\u7fa4\uff0ctracker \u4e5f\u53ef\u4ee5\u5b9e\u73b0\u96c6\u7fa4\u3002\u6bcf\u4e2a tracker \u8282\u70b9\u5730\u4f4d\u5e73\u7b49\u3002\u6536\u96c6 Storage \u96c6\u7fa4\u7684\u72b6\u6001\u3002 Storage:\u5b9e\u9645\u4fdd\u5b58\u6587\u4ef6 Storage \u5206\u4e3a\u591a\u4e2a\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u4e4b\u95f4\u4fdd\u5b58\u7684\u6587\u4ef6\u662f\u4e0d\u540c\u7684\u3002\u6bcf \u4e2a\u7ec4\u5185\u90e8\u53ef\u4ee5\u6709\u591a\u4e2a\u6210\u5458\uff0c\u7ec4\u6210\u5458\u5185\u90e8\u4fdd\u5b58\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u7ec4\u6210\u5458\u7684\u5730\u4f4d\u662f\u4e00\u81f4\u7684\uff0c\u6ca1\u6709 \u4e3b\u4ece\u7684\u6982\u5ff5\u3002 2 \u6587\u4ef6\u4e0a\u4f20\u6d41\u7a0b \u00b6 \u5ba2\u6237\u7aef\u4e0a\u4f20\u6587\u4ef6\u540e\u5b58\u50a8\u670d\u52a1\u5668\u5c06\u6587\u4ef6 ID \u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u6587\u4ef6 ID \u7528\u4e8e\u4ee5\u540e\u8bbf\u95ee\u8be5\u6587 \u4ef6\u7684\u7d22\u5f15\u4fe1\u606f\u3002\u6587\u4ef6\u7d22\u5f15\u4fe1\u606f\u5305\u62ec:\u7ec4\u540d\uff0c\u865a\u62df\u78c1\u76d8\u8def\u5f84\uff0c\u6570\u636e\u4e24\u7ea7\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u3002 \u7ec4\u540d:\u6587\u4ef6\u4e0a\u4f20\u540e\u6240\u5728\u7684 storage \u7ec4\u540d\u79f0\uff0c\u5728\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\u540e\u6709 storage \u670d\u52a1\u5668\u8fd4\u56de\uff0c \u9700\u8981\u5ba2\u6237\u7aef\u81ea\u884c\u4fdd\u5b58\u3002 \u865a\u62df\u78c1\u76d8\u8def\u5f84:storage \u914d\u7f6e\u7684\u865a\u62df\u8def\u5f84\uff0c\u4e0e\u78c1\u76d8\u9009\u9879 store_path*\u5bf9\u5e94\u3002\u5982\u679c\u914d\u7f6e\u4e86 store_path0 \u5219\u662f M00\uff0c\u5982\u679c\u914d\u7f6e\u4e86 store_path1 \u5219\u662f M01\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6570\u636e\u4e24\u7ea7\u76ee\u5f55:storage \u670d\u52a1\u5668\u5728\u6bcf\u4e2a\u865a\u62df\u78c1\u76d8\u8def\u5f84\u4e0b\u521b\u5efa\u7684\u4e24\u7ea7\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e \u6587\u4ef6\u3002 \u6587\u4ef6\u540d:\u4e0e\u6587\u4ef6\u4e0a\u4f20\u65f6\u4e0d\u540c\u3002\u662f\u7531\u5b58\u50a8\u670d\u52a1\u5668\u6839\u636e\u7279\u5b9a\u4fe1\u606f\u751f\u6210\uff0c\u6587\u4ef6\u540d\u5305\u542b:\u6e90\u5b58\u50a8 \u670d\u52a1\u5668 IP \u5730\u5740\u3001\u6587\u4ef6\u521b\u5efa\u65f6\u95f4\u6233\u3001\u6587\u4ef6\u5927\u5c0f\u3001\u968f\u673a\u6570\u548c\u6587\u4ef6\u62d3\u5c55\u540d\u7b49\u4fe1\u606f\u3002 3 \u6587\u4ef6\u4e0b\u8f7d\u6d41\u7a0b \u00b6 4.\u7b80\u6613FastDFS\u67b6\u6784 \u00b6 5 FastDFS\u5b89\u88c5 \u00b6 5.1 \u5b89\u88c5fastdfs\u4f9d\u8d56\u5305 \u89e3\u538b\u7f29 libfastcommon-master.zip \u8fdb\u5165\u5230 libfastcommon-master \u7684\u76ee\u5f55\u4e2d \u6267\u884c ./make.sh \u6267\u884c sudo ./make.sh install 5.2 \u5b89\u88c5fastdfs \u89e3\u538b\u7f29 fastdfs-master.zip \u8fdb\u5165\u5230 fastdfs-master \u76ee\u5f55\u4e2d \u6267\u884c ./make.sh \u6267\u884c sudo ./make.sh install 5.3 \u914d\u7f6e\u8ddf\u8e2a\u670d\u52a1\u5668tracker sudo cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf \u5728 /home/zzh/\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55 fastdfs/tracker mkdir \u2013p /home/zzh/fastdfs/tracker \u7f16\u8f91 /etc/fdfs/tracker.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/tracker.conf \u4fee\u6539 base_path=/home/zzh/fastdfs/tracker #\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u7b49\u7684\u5b58\u50a8\u8def\u5f84 5.4 \u914d\u7f6e\u5b58\u50a8\u670d\u52a1\u5668storage sudo cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf \u5728 /home/zzh/fastdfs/ \u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55storage mkdir \u2013p /home/zzh/fastdfs/storage \u7f16\u8f91 /etc/fdfs/storage.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/storage.conf \u4fee\u6539\u5185\u5bb9\uff1a base_path = /home/zzh/fastdfs/storage store_path0 = /home/zzh/fastdfs/storage tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 #tracker_server=192.168.124.42:22122 5.5 \u542f\u52a8 tracker \u548c storage sudo service fdfs_trackerd start sudo service fdfs_storaged start \u4e0d\u77e5\u9053\u4e3a\u4f55\u4e0d\u884c,\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8 fdfs_trackerd /etc/fdfs/tracker.conf start fdfs_storaged /etc/fdfs/storage.conf start \u542f\u52a8\u67e5\u8be2 ps aux | grep fdfs \u91cd\u542f sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf stop sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf stop \u6ce8\u610f\u70b9\uff1a \u6211\u4eec\u8981\u662f\u4f7f\u7528\u7ec8\u6b62\u547d\u4ee4\u6216\u8005\u4f7f\u7528 kill -9 fdfs\u8fdb\u7a0bid \u6765\u7ec8\u7ed3fdfs_storaged\u670d\u52a1\u7684\uff0c\u7136\u540e\u7528\u4e0a\u9762\u7684\u542f\u52a8\u547d\u4ee4\u662f\u542f\u52a8\u4e0d\u4e86\u7684\uff0c\u56e0\u4e3alog\u65e5\u5fd7\u95ee\u9898\uff0c\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u9519\u8bef 5.6 \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f sudo cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf \u7f16\u8f91 /etc/fdfs/client.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/client.conf \u4fee\u6539\u5185\u5bb9\uff1a base_path = /home/zzh/fastdfs/tracker tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 #tracker_server=192.168.124.42:22122 \u4e0a\u4f20\u6587\u4ef6\u6d4b\u8bd5\uff1a fdfs_upload_file /etc/fdfs/client.conf \u8981\u4e0a\u4f20\u7684\u56fe\u7247\u6587\u4ef6(\u6587\u4ef6\u8def\u5f84\u53ca\u540d\u5b57) \u5982\u679c\u8fd4\u56de\u7c7b\u4f3cgroup1/M00/00/00/rBIK6VcaP0aARXXvAAHrUgHEviQ394.jpg\u7684\u6587\u4ef6id\u5219\u8bf4\u660e\u6587\u4ef6\u4e0a\u4f20\u6210\u529f \u5355\u7eaf\u4f7f\u7528fastdfs\u4e0d\u80fd\u6ee1\u8db3\u6d77\u91cf\u8bf7\u6c42 5.7 \u5b89\u88c5 nginx \u53ca fastdfs-nginx-module web\u670d\u52a1\u5668 epoll \u89e3\u538b\u7f29 nginx-1.8.1.tar.gz \u89e3\u538b\u7f29 fastdfs-nginx-module-master.zip \u8fdb\u5165 nginx-1.8.1 \u76ee\u5f55\u4e2d \u6267\u884c sudo ./configure --prefix=/usr/local/nginx/ --add-module= fastdfs-nginx-module-master\u89e3\u538b\u540e\u7684\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84/src \u8fd9\u4e2a\u5730\u65b9\u8981\u5220\u9664fastdfs-nginx-module-master \u8def\u5f84(\u53ea\u662f\u8def\u5f84)\u4e0d\u8981\u6709\u7a7a\u683c(\u770b\u4e0b\u9762) \u540c\u65f6\u4e0d\u8981\u6709\u4e2d\u6587\u7684\u8def\u5f84,\u4e0d\u7136\u5b89\u88c5\u4e0d\u6210\u529f \u9519\u8bef\u7684\u5b89\u88c5 sudo ./configure --prefix=/usr/local/nginx/ --add-module=/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDginx-module-master/src \u6b63\u786e\u7684\u5b89\u88c5 sudo ./configure --prefix=/usr/local/nginx/ --add-module=/home/zzh/fastdfs-nginx-module-master/src sudo ./make \u8fd9\u91cc\u5e94\u8be5\u6539\u6210 sudo make \u4e0d\u5e78\u7684\u662f\u53c8\u62a5\u9519\u4e86 \u89e3\u51b3\u65b9\u6cd5\uff1a \u76f4\u63a5\u4fee\u6539nginx\u5b89\u88c5\u5305\u4e0b /objs/Makefile \u6587\u4ef6\u4e2d\u7684 -Werror \u3002 \u53bb\u6389\u7ea2\u8272\u90e8\u5206 CC =gcc CFLAGS = -pipe -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g -D_LARGEFILE_SOURCE -DBUILDING_NGINX CPP = gcc -E LINK = $(CC) sudo ./make install \u8fd9\u91cc\u5e94\u8be5\u662f sudo make install sudo cp fastdfs-nginx-module-master\u89e3\u538b\u540e\u7684\u76ee\u5f55\u4e2dsrc\u4e0b\u7684mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf sudo cp mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf sudo gedit /etc/fdfs/mod_fastdfs.conf \u4fee\u6539\u5185\u5bb9\uff1a connect_timeout = 10 tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 url_have_group_name = true #\u5e26\u4e0d\u5e26\u7ec4\u4fe1\u606f store_path0 = /home/zzh/fastdfs/storage sudo cp \u89e3\u538b\u7f29\u7684fastdfs-master/conf\u76ee\u5f55\u4e2d\u7684http.conf /etc/fdfs/http.conf sudo cp '/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDFS/fastdfs-master/conf/http.conf' /etc/fdfs/http.conf sudo cp \u89e3\u538b\u7f29\u7684fastdfs-master\u76ee\u5f55\u4e2d\u7684mime.types /etc/fdfs/mime.types sudo cp '/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDFS/fastdfs-master/conf/mime.types' /etc/fdfs/mime.types sudo gedit /usr/local/nginx/conf/nginx.conf \u5728http\u90e8\u5206\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a # myself add server { listen 8888 ; server_name localhost ; location ~/group [ 0 -9 ] / { ngx_fastdfs_module ; } error_page 500 502 503 504 /50x.html ; location = /50x.html { root html ; } } # myself add \u542f\u52a8nginx \u5148\u770b\u4e0b\u6ca1\u542f\u52a8\u662f\u4ec0\u4e48\u6837\u5b50\u7684 \u542f\u52a8\u7684\u547d\u4ee4 sudo /usr/local/nginx/sbin/nginx \u542f\u52a8\u540e\u505c\u6b62 sudo /usr/local/nginx/sbin/nginx -s stop \u6d4b\u8bd5\u4e00\u4e0bnginx\u662f\u4e0d\u662f\u80fd\u7528\u4e86 \u5728\u6d4f\u89c8\u5668\u4e2d\u6572\u5165\u5730\u5740 http://127.0.0.1:8888/group1/M00/00/00/wKh8Kl2u066AZHnrABYlnmXXzNA082.jpg \u8fd9\u4e2a8888\u7aef\u53e3\u53f7\u540e\u9762\u7684\u5c31\u662f\u6211\u4eec\u4e0a\u4f20\u5230fastdfs\u540e\u8fd4\u56de\u7684\u56fe\u7247\u5730\u5740 \u8fd9\u91cc\u540c\u6837\u53ef\u4ee5\u5199\u672c\u673a\u7684ip\u5730\u5740\u4e5f\u662f\u53ef\u4ee5\u7684 6. \u4f7f\u7528python\u5ba2\u6237\u7aef\u4e0a\u4f20\u6d4b\u8bd5 fastdfs \u00b6 workon django_py3 #\u6fc0\u6d3b\u73af\u5883 source activate django \u8fdb\u5165 fdfs_client-py-master.zip \u6240\u5728\u76ee\u5f55 pip install fdfs_client-py-master.zip \u7f3a\u5c11\u4e24\u4e2apython\u7684\u5305 pip install mutagen pip install requests 4. from fdfs_client.client import Fdfs_client #\u5bfc\u5305 client = Fdfs_client ( '/etc/fdfs/client.conf' ) #\u8fde\u63a5(\u521b\u5efa\u7c7b\u5bf9\u8c61) ret = client . upload_by_filename ( '/home/zzh/\u684c\u9762/123.jpg' ) #\u4e0a\u4f20\u6587\u4ef6 # \u8f93\u51fa <fdfs_client.connection.Connection object at 0x7f94b70b76d8> # <fdfs_client.fdfs_protol.Tracker_header object at 0x7f94b70b76a0> ret >>> ret { 'Group name' : 'group1' , 'Remote file_id' : 'group1/M00/00/00/wKh8Kl2u9KaAOJTxABYlnmXXzNA556.jpg' , 'Status' : 'Upload successed.' , 'Local file name' : '/home/zzh/\u684c\u9762/123.jpg' , 'Uploaded size' : '1.00MB' , 'Storage IP' : '192.168.124.42' } \u6587\u6863 https://github.com/jefforeilly/fdfs_client-py","title":"012 \u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#fastdfs","text":"","title":"\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#1fastdfs","text":"FastDFS \u662f\u7528c \u8bed\u8a00\u7f16\u5199\u7684\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002FastDFS \u4e3a\u4e92\u8054\u7f51\u91cf\u8eab\u5b9a\u5236\uff0c\u5145\u5206\u8003\u8651\u4e86\u5197\u4f59\u5907\u4efd\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u7ebf\u6027\u6269\u5bb9\u7b49\u673a\u5236\uff0c\u5e76\u6ce8\u91cd\u9ad8\u53ef\u7528\u3001\u9ad8\u6027\u80fd\u7b49\u6307\u6807\uff0c\u4f7f\u7528FastDFS \u5f88\u5bb9\u6613\u642d\u5efa\u4e00\u5957\u9ad8\u6027\u80fd\u7684\u6587\u4ef6\u670d\u52a1\u5668\u96c6\u7fa4\u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u7b49\u670d\u52a1\u3002 FastDFS \u67b6\u6784\u5305\u62ec Tracker server\u548c Storage server\u3002\u5ba2\u6237\u7aef\u8bf7\u6c42 Tracker server \u8fdb\u884c\u6587 \u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\uff0c\u901a\u8fc7 Tracker server \u8c03\u5ea6\u6700\u7ec8\u7531 Storage server \u5b8c\u6210\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d\u3002 Tracker server \u4f5c\u7528\u662f\u8d1f\u8f7d\u5747\u8861\u548c\u8c03\u5ea6\uff0c\u901a\u8fc7 Tracker server \u5728\u6587\u4ef6\u4e0a\u4f20\u65f6\u53ef\u4ee5\u6839\u636e\u4e00\u4e9b \u7b56\u7565\u627e\u5230 Storage server \u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u3002\u53ef\u4ee5\u5c06 tracker \u79f0\u4e3a\u8ffd\u8e2a\u670d\u52a1\u5668\u6216\u8c03\u5ea6\u670d\u52a1 \u5668\u3002 Storage server \u4f5c\u7528\u662f\u6587\u4ef6\u5b58\u50a8\uff0c\u5ba2\u6237\u7aef\u4e0a\u4f20\u7684\u6587\u4ef6\u6700\u7ec8\u5b58\u50a8\u5728 Storage \u670d\u52a1\u5668\u4e0a\uff0c Storageserver \u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u800c\u662f\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf \u7684\u6587\u4ef6\u7cfb\u7edf\u6765\u7ba1\u7406\u6587\u4ef6\u3002\u53ef\u4ee5\u5c06 storage \u79f0\u4e3a\u5b58\u50a8\u670d\u52a1\u5668\u3002 \u670d\u52a1\u7aef\u4e24\u4e2a\u89d2\u8272: Tracker:\u7ba1\u7406\u96c6\u7fa4\uff0ctracker \u4e5f\u53ef\u4ee5\u5b9e\u73b0\u96c6\u7fa4\u3002\u6bcf\u4e2a tracker \u8282\u70b9\u5730\u4f4d\u5e73\u7b49\u3002\u6536\u96c6 Storage \u96c6\u7fa4\u7684\u72b6\u6001\u3002 Storage:\u5b9e\u9645\u4fdd\u5b58\u6587\u4ef6 Storage \u5206\u4e3a\u591a\u4e2a\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u4e4b\u95f4\u4fdd\u5b58\u7684\u6587\u4ef6\u662f\u4e0d\u540c\u7684\u3002\u6bcf \u4e2a\u7ec4\u5185\u90e8\u53ef\u4ee5\u6709\u591a\u4e2a\u6210\u5458\uff0c\u7ec4\u6210\u5458\u5185\u90e8\u4fdd\u5b58\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u7ec4\u6210\u5458\u7684\u5730\u4f4d\u662f\u4e00\u81f4\u7684\uff0c\u6ca1\u6709 \u4e3b\u4ece\u7684\u6982\u5ff5\u3002","title":"1.\u4ec0\u4e48\u662fFastDFS"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#2","text":"\u5ba2\u6237\u7aef\u4e0a\u4f20\u6587\u4ef6\u540e\u5b58\u50a8\u670d\u52a1\u5668\u5c06\u6587\u4ef6 ID \u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u6587\u4ef6 ID \u7528\u4e8e\u4ee5\u540e\u8bbf\u95ee\u8be5\u6587 \u4ef6\u7684\u7d22\u5f15\u4fe1\u606f\u3002\u6587\u4ef6\u7d22\u5f15\u4fe1\u606f\u5305\u62ec:\u7ec4\u540d\uff0c\u865a\u62df\u78c1\u76d8\u8def\u5f84\uff0c\u6570\u636e\u4e24\u7ea7\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u3002 \u7ec4\u540d:\u6587\u4ef6\u4e0a\u4f20\u540e\u6240\u5728\u7684 storage \u7ec4\u540d\u79f0\uff0c\u5728\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\u540e\u6709 storage \u670d\u52a1\u5668\u8fd4\u56de\uff0c \u9700\u8981\u5ba2\u6237\u7aef\u81ea\u884c\u4fdd\u5b58\u3002 \u865a\u62df\u78c1\u76d8\u8def\u5f84:storage \u914d\u7f6e\u7684\u865a\u62df\u8def\u5f84\uff0c\u4e0e\u78c1\u76d8\u9009\u9879 store_path*\u5bf9\u5e94\u3002\u5982\u679c\u914d\u7f6e\u4e86 store_path0 \u5219\u662f M00\uff0c\u5982\u679c\u914d\u7f6e\u4e86 store_path1 \u5219\u662f M01\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6570\u636e\u4e24\u7ea7\u76ee\u5f55:storage \u670d\u52a1\u5668\u5728\u6bcf\u4e2a\u865a\u62df\u78c1\u76d8\u8def\u5f84\u4e0b\u521b\u5efa\u7684\u4e24\u7ea7\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e \u6587\u4ef6\u3002 \u6587\u4ef6\u540d:\u4e0e\u6587\u4ef6\u4e0a\u4f20\u65f6\u4e0d\u540c\u3002\u662f\u7531\u5b58\u50a8\u670d\u52a1\u5668\u6839\u636e\u7279\u5b9a\u4fe1\u606f\u751f\u6210\uff0c\u6587\u4ef6\u540d\u5305\u542b:\u6e90\u5b58\u50a8 \u670d\u52a1\u5668 IP \u5730\u5740\u3001\u6587\u4ef6\u521b\u5efa\u65f6\u95f4\u6233\u3001\u6587\u4ef6\u5927\u5c0f\u3001\u968f\u673a\u6570\u548c\u6587\u4ef6\u62d3\u5c55\u540d\u7b49\u4fe1\u606f\u3002","title":"2 \u6587\u4ef6\u4e0a\u4f20\u6d41\u7a0b"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#3","text":"","title":"3 \u6587\u4ef6\u4e0b\u8f7d\u6d41\u7a0b"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#4fastdfs","text":"","title":"4.\u7b80\u6613FastDFS\u67b6\u6784"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#5-fastdfs","text":"5.1 \u5b89\u88c5fastdfs\u4f9d\u8d56\u5305 \u89e3\u538b\u7f29 libfastcommon-master.zip \u8fdb\u5165\u5230 libfastcommon-master \u7684\u76ee\u5f55\u4e2d \u6267\u884c ./make.sh \u6267\u884c sudo ./make.sh install 5.2 \u5b89\u88c5fastdfs \u89e3\u538b\u7f29 fastdfs-master.zip \u8fdb\u5165\u5230 fastdfs-master \u76ee\u5f55\u4e2d \u6267\u884c ./make.sh \u6267\u884c sudo ./make.sh install 5.3 \u914d\u7f6e\u8ddf\u8e2a\u670d\u52a1\u5668tracker sudo cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf \u5728 /home/zzh/\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55 fastdfs/tracker mkdir \u2013p /home/zzh/fastdfs/tracker \u7f16\u8f91 /etc/fdfs/tracker.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/tracker.conf \u4fee\u6539 base_path=/home/zzh/fastdfs/tracker #\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u7b49\u7684\u5b58\u50a8\u8def\u5f84 5.4 \u914d\u7f6e\u5b58\u50a8\u670d\u52a1\u5668storage sudo cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf \u5728 /home/zzh/fastdfs/ \u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55storage mkdir \u2013p /home/zzh/fastdfs/storage \u7f16\u8f91 /etc/fdfs/storage.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/storage.conf \u4fee\u6539\u5185\u5bb9\uff1a base_path = /home/zzh/fastdfs/storage store_path0 = /home/zzh/fastdfs/storage tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 #tracker_server=192.168.124.42:22122 5.5 \u542f\u52a8 tracker \u548c storage sudo service fdfs_trackerd start sudo service fdfs_storaged start \u4e0d\u77e5\u9053\u4e3a\u4f55\u4e0d\u884c,\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8 fdfs_trackerd /etc/fdfs/tracker.conf start fdfs_storaged /etc/fdfs/storage.conf start \u542f\u52a8\u67e5\u8be2 ps aux | grep fdfs \u91cd\u542f sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf stop sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf stop \u6ce8\u610f\u70b9\uff1a \u6211\u4eec\u8981\u662f\u4f7f\u7528\u7ec8\u6b62\u547d\u4ee4\u6216\u8005\u4f7f\u7528 kill -9 fdfs\u8fdb\u7a0bid \u6765\u7ec8\u7ed3fdfs_storaged\u670d\u52a1\u7684\uff0c\u7136\u540e\u7528\u4e0a\u9762\u7684\u542f\u52a8\u547d\u4ee4\u662f\u542f\u52a8\u4e0d\u4e86\u7684\uff0c\u56e0\u4e3alog\u65e5\u5fd7\u95ee\u9898\uff0c\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u9519\u8bef 5.6 \u6d4b\u8bd5\u662f\u5426\u5b89\u88c5\u6210\u529f sudo cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf \u7f16\u8f91 /etc/fdfs/client.conf \u914d\u7f6e\u6587\u4ef6 sudo gedit /etc/fdfs/client.conf \u4fee\u6539\u5185\u5bb9\uff1a base_path = /home/zzh/fastdfs/tracker tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 #tracker_server=192.168.124.42:22122 \u4e0a\u4f20\u6587\u4ef6\u6d4b\u8bd5\uff1a fdfs_upload_file /etc/fdfs/client.conf \u8981\u4e0a\u4f20\u7684\u56fe\u7247\u6587\u4ef6(\u6587\u4ef6\u8def\u5f84\u53ca\u540d\u5b57) \u5982\u679c\u8fd4\u56de\u7c7b\u4f3cgroup1/M00/00/00/rBIK6VcaP0aARXXvAAHrUgHEviQ394.jpg\u7684\u6587\u4ef6id\u5219\u8bf4\u660e\u6587\u4ef6\u4e0a\u4f20\u6210\u529f \u5355\u7eaf\u4f7f\u7528fastdfs\u4e0d\u80fd\u6ee1\u8db3\u6d77\u91cf\u8bf7\u6c42 5.7 \u5b89\u88c5 nginx \u53ca fastdfs-nginx-module web\u670d\u52a1\u5668 epoll \u89e3\u538b\u7f29 nginx-1.8.1.tar.gz \u89e3\u538b\u7f29 fastdfs-nginx-module-master.zip \u8fdb\u5165 nginx-1.8.1 \u76ee\u5f55\u4e2d \u6267\u884c sudo ./configure --prefix=/usr/local/nginx/ --add-module= fastdfs-nginx-module-master\u89e3\u538b\u540e\u7684\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84/src \u8fd9\u4e2a\u5730\u65b9\u8981\u5220\u9664fastdfs-nginx-module-master \u8def\u5f84(\u53ea\u662f\u8def\u5f84)\u4e0d\u8981\u6709\u7a7a\u683c(\u770b\u4e0b\u9762) \u540c\u65f6\u4e0d\u8981\u6709\u4e2d\u6587\u7684\u8def\u5f84,\u4e0d\u7136\u5b89\u88c5\u4e0d\u6210\u529f \u9519\u8bef\u7684\u5b89\u88c5 sudo ./configure --prefix=/usr/local/nginx/ --add-module=/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDginx-module-master/src \u6b63\u786e\u7684\u5b89\u88c5 sudo ./configure --prefix=/usr/local/nginx/ --add-module=/home/zzh/fastdfs-nginx-module-master/src sudo ./make \u8fd9\u91cc\u5e94\u8be5\u6539\u6210 sudo make \u4e0d\u5e78\u7684\u662f\u53c8\u62a5\u9519\u4e86 \u89e3\u51b3\u65b9\u6cd5\uff1a \u76f4\u63a5\u4fee\u6539nginx\u5b89\u88c5\u5305\u4e0b /objs/Makefile \u6587\u4ef6\u4e2d\u7684 -Werror \u3002 \u53bb\u6389\u7ea2\u8272\u90e8\u5206 CC =gcc CFLAGS = -pipe -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g -D_LARGEFILE_SOURCE -DBUILDING_NGINX CPP = gcc -E LINK = $(CC) sudo ./make install \u8fd9\u91cc\u5e94\u8be5\u662f sudo make install sudo cp fastdfs-nginx-module-master\u89e3\u538b\u540e\u7684\u76ee\u5f55\u4e2dsrc\u4e0b\u7684mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf sudo cp mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf sudo gedit /etc/fdfs/mod_fastdfs.conf \u4fee\u6539\u5185\u5bb9\uff1a connect_timeout = 10 tracker_server = \u81ea\u5df1ubuntu\u865a\u62df\u673a\u7684ip\u5730\u5740:22122 url_have_group_name = true #\u5e26\u4e0d\u5e26\u7ec4\u4fe1\u606f store_path0 = /home/zzh/fastdfs/storage sudo cp \u89e3\u538b\u7f29\u7684fastdfs-master/conf\u76ee\u5f55\u4e2d\u7684http.conf /etc/fdfs/http.conf sudo cp '/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDFS/fastdfs-master/conf/http.conf' /etc/fdfs/http.conf sudo cp \u89e3\u538b\u7f29\u7684fastdfs-master\u76ee\u5f55\u4e2d\u7684mime.types /etc/fdfs/mime.types sudo cp '/media/zzh/zzh/\u529e\u516c\u79fb\u52a8/\u5e38\u7528\u8d44\u6599/\u9ed1\u9a6cpython/Django\u8bfe\u4ef6V3.1/FastDFS/fastdfs-master/conf/mime.types' /etc/fdfs/mime.types sudo gedit /usr/local/nginx/conf/nginx.conf \u5728http\u90e8\u5206\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a # myself add server { listen 8888 ; server_name localhost ; location ~/group [ 0 -9 ] / { ngx_fastdfs_module ; } error_page 500 502 503 504 /50x.html ; location = /50x.html { root html ; } } # myself add \u542f\u52a8nginx \u5148\u770b\u4e0b\u6ca1\u542f\u52a8\u662f\u4ec0\u4e48\u6837\u5b50\u7684 \u542f\u52a8\u7684\u547d\u4ee4 sudo /usr/local/nginx/sbin/nginx \u542f\u52a8\u540e\u505c\u6b62 sudo /usr/local/nginx/sbin/nginx -s stop \u6d4b\u8bd5\u4e00\u4e0bnginx\u662f\u4e0d\u662f\u80fd\u7528\u4e86 \u5728\u6d4f\u89c8\u5668\u4e2d\u6572\u5165\u5730\u5740 http://127.0.0.1:8888/group1/M00/00/00/wKh8Kl2u066AZHnrABYlnmXXzNA082.jpg \u8fd9\u4e2a8888\u7aef\u53e3\u53f7\u540e\u9762\u7684\u5c31\u662f\u6211\u4eec\u4e0a\u4f20\u5230fastdfs\u540e\u8fd4\u56de\u7684\u56fe\u7247\u5730\u5740 \u8fd9\u91cc\u540c\u6837\u53ef\u4ee5\u5199\u672c\u673a\u7684ip\u5730\u5740\u4e5f\u662f\u53ef\u4ee5\u7684","title":"5 FastDFS\u5b89\u88c5"},{"location":"python-web/012-\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668FastDFS/#6-python-fastdfs","text":"workon django_py3 #\u6fc0\u6d3b\u73af\u5883 source activate django \u8fdb\u5165 fdfs_client-py-master.zip \u6240\u5728\u76ee\u5f55 pip install fdfs_client-py-master.zip \u7f3a\u5c11\u4e24\u4e2apython\u7684\u5305 pip install mutagen pip install requests 4. from fdfs_client.client import Fdfs_client #\u5bfc\u5305 client = Fdfs_client ( '/etc/fdfs/client.conf' ) #\u8fde\u63a5(\u521b\u5efa\u7c7b\u5bf9\u8c61) ret = client . upload_by_filename ( '/home/zzh/\u684c\u9762/123.jpg' ) #\u4e0a\u4f20\u6587\u4ef6 # \u8f93\u51fa <fdfs_client.connection.Connection object at 0x7f94b70b76d8> # <fdfs_client.fdfs_protol.Tracker_header object at 0x7f94b70b76a0> ret >>> ret { 'Group name' : 'group1' , 'Remote file_id' : 'group1/M00/00/00/wKh8Kl2u9KaAOJTxABYlnmXXzNA556.jpg' , 'Status' : 'Upload successed.' , 'Local file name' : '/home/zzh/\u684c\u9762/123.jpg' , 'Uploaded size' : '1.00MB' , 'Storage IP' : '192.168.124.42' } \u6587\u6863 https://github.com/jefforeilly/fdfs_client-py","title":"6. \u4f7f\u7528python\u5ba2\u6237\u7aef\u4e0a\u4f20\u6d4b\u8bd5 fastdfs"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/","text":"1.\u9879\u76ee\u67b6\u6784 \u00b6 2. \u6570\u636e\u5e93\u8868\u7ed3\u6784 \u00b6 3.\u9879\u76ee\u6846\u67b6\u642d\u5efa \u00b6 1.\u521b\u5efa\u9879\u76ee 2.\u521b\u5efa\u591a\u4e2a\u5e94\u7528 \u4f7f\u7528idea\u6253\u5f00\u9879\u76ee,\u7136\u540e\u5c06\u5efa\u7acb\u7684\u591a\u4e2a\u5e94\u7528\u653e\u5230\u4e00\u4e2a\u5305\u4e2d \u6ce8\u518c\u5e94\u7528 \u8fd9\u6837\u5728\u540e\u9762\u8def\u7531\u7684\u914d\u7f6e\u7684\u65f6\u5019\u4e5f\u662f\u9700\u8981\u8fdb\u884c\u6dfb\u52a0\u5305\u540d\u7684 import os import sys BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . insert ( 0 , os . path . join ( BASE_DIR , 'apps' ) ) \u521b\u5efa\u6a21\u677f\u6587\u4ef6 \u914d\u7f6e\u6a21\u677f\u6587\u4ef6\u7684\u8def\u5f84 \u914d\u7f6e\u6570\u636e\u5e93 \u521b\u5efa\u6570\u636e\u5e93 settings \u914d\u7f6e __init__\u6587\u4ef6\u5bfc\u5165mysql\u6570\u636e\u5e93 import pymysql pymysql.install_as_MySQLdb() \u6570\u636e\u5e93\u7684\u8fc1\u79fb \u8bed\u8a00\u65f6\u533a\u7684\u66f4\u6539 9.\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e \u9996\u5148\u521b\u5efa\u4e00\u4e2astatic\u6587\u4ef6\u5728 \u9759\u6001\u6587\u4ef6\u76ee\u5f55\u7684\u914d\u7f6e \u4e3b\u8def\u7531\u7684\u914d\u7f6e \u6dfb\u52a0namespace \u4e3b\u8981\u662f\u5728\u8fdb\u884c\u52a8\u6001\u7684\u89e3\u6790\u65f6,\u9632\u6b62\u9891\u7e41\u53d8\u66f4\u540d\u5b57. \u5b50\u8def\u7531\u7684\u590d\u5236\u4e0e\u914d\u7f6e(\u6bcf\u4e00\u4e2a\u5e94\u7528\u90fd\u8981\u8fdb\u884c\u8d4b\u503c) basemodel\u7684\u521b\u5efa,\u8ba9\u6240\u6709\u7684\u5e94\u7528\u7684\u6a21\u578b\u7c7b\u7ee7\u627f\u8fd9\u4e2abasemodel \u521b\u5efa\u4e00\u4e2abase_model\u6587\u4ef6 from django.db import models class BaseModel ( models . Model ): '''\u6a21\u578b\u62bd\u8c61\u7c7b''' create_time = models . DateTimeField ( auto_now_add = True , verbose_name = '\u521b\u5efa\u65f6\u95f4' ) update_time = models . DateTimeField ( auto_now = True , verbose_name = '\u66f4\u65b0\u65f6\u95f4' ) is_delete = models . BooleanField ( default = False , verbose_name = '\u5220\u9664\u6807\u8bb0' ) class Meta : #\u8bf4\u660e\u8fd9\u662f\u4e2a\u62bd\u8c61\u6a21\u578b\u7c7b abstract = True \u5176\u5b83models\u6a21\u578b\u7c7b\u7684\u521b\u5efa user \u4e2d\u7684models .... 14 \u7531\u4e8e\u4f7f\u7528\u4e86\u5bcc\u6587\u672c\u7f16\u8f91\u5668,\u6240\u4ee5\u8fdb\u884c\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u6ce8\u518c TINYMCE_DEFAULT_CONFIG = { 'theme' : 'advanced' , 'width' : 600 , 'height' : 400 , } 3\uff09\u5728test6/urls.py\u4e2d\u914d\u7f6e\u7f16\u8f91\u5668url\u3002 urlpatterns = [ ... url ( r '^tinymce/' , include ( 'tinymce.urls' )), ] 15 . \u6307\u5b9a\u81ea\u5df1\u7684\u8ba4\u8bc1\u7cfb\u7edf \u6ce8\u610f\uff1a AUTH_USER_MODEL\u914d\u7f6e\u53c2\u6570\u8981\u5728\u7b2c\u4e00\u6b21\u8fc1\u79fb\u6570\u636e\u5e93\u4e4b\u524d\u914d\u7f6e\uff0c\u5426\u5219\u53ef\u80fddjango\u7684\u8ba4\u8bc1\u7cfb\u7edf\u5de5\u4f5c\u4e0d\u6b63\u5e38 \u8fdb\u884c\u6570\u636e\u5e93\u6587\u4ef6\u7684\u8fc1\u79fb 17 \u9759\u6001\u9875\u9762 18 \u6ce8\u518c\u9875\u9762\u7684\u8bbe\u8ba1(register) \u5728user\u7684view\u4e2d\u5199\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u663e\u793a \u8def\u7531\u7684\u914d\u7f6e \u7f51\u9875\u7684\u663e\u793a \u6ca1\u6709\u6b63\u5e38\u7684\u56fe\u7247 \u8868\u5355\u63d0\u4ea4\u7684\u8bbe\u7f6e \u63d0\u4ea4\u8868\u5355\u4ee5\u540e \u7684\u5904\u7406 view\u4e2dregister_handle\u51fd\u6570\u7f16\u5199 \u8def\u7531\u7684\u914d\u7f6e(\u4ee5\u540e\u4e0d\u518d\u52a0\u8fd9\u4e00\u9879\u7684\u8be6\u7ec6) \u9996\u9875\u7684\u8bbe\u7f6e \u6ce8\u518c\u5b8c\u6210\u540e\u7684\u9875\u9762\u8df3\u8f6c \u6570\u636e\u5e93\u7684\u53d8\u5316 19 \u4e00\u822c\u89c6\u56fe\u51fd\u6570\u6709\u65f6\u5019\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42,\u56e0\u6b64\u5462\u9700\u8981\u8fdb\u884c\u7c7b\u89c6\u56fe\u7684\u5b9a\u4e49 20 \u6fc0\u6d3b\u90ae\u4ef6 \u4f7f\u7528 itsdangerous \u52a0\u5bc6\u7528\u6237\u7684\u8eab\u4efd\u4fe1\u606f \u8fc7\u671f\u7684\u52a0\u5bc6\u89e3\u5bc6\u4f1a\u62a5\u5f02\u5e38 \u6fc0\u6d3b\u90ae\u4ef6\u53d1\u9001,\u63a5\u53d7,\u7136\u540e\u8fdb\u884c\u6fc0\u6d3b(\u4e13\u95e8\u7684\u6fc0\u6d3b\u7c7b\u89c6\u56fe),\u6fc0\u6d3b\u4ee5\u540e\u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762 \u6ce8\u518c\u603b\u7ed3: \u63a5\u6536\u6570\u636e \u6570\u636e\u6821\u9a8c \u53d1\u9001\u6fc0\u6d3b\u90ae\u4ef6 \u8df3\u8f6c\u5230\u9996\u9875 \u6fc0\u6d3b \u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762 21 \u90ae\u4ef6\u53d1\u9001\u662f\u963b\u585e\u7c7b\u578b,\u5728\u53d1\u9001\u5230smtp\u670d\u52a1\u5668\u7684\u65f6\u95f4\u4f1a\u957f\u65f6\u95f4\u963b\u585e\u5f71\u54cd\u7528\u6237\u4f53\u9a8c,\u56e0\u6b64\u5462\u4f7f\u7528celery\u4ee3\u66ff\u6b64\u51fd\u6570\u53d1\u9001\u90ae\u4ef6(\u770b\u8bfe\u4ef6celery) 22 celery\u4f7f\u7528 \u00b6 \u5728\u9879\u76ee\u76ee\u5f55\u4e2d\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5b58\u653e\u8017\u65f6\u8f83\u957f\u7684\u4efb\u52a1 \u5c06\u9879\u76ee\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d \u7136\u540e\u53d6\u6d88\u6ce8\u91ca \u8fd9\u91cc\u4f7f\u7528\u4e00\u4e9b\u5b89\u88c5\u5305\u6ce8\u610f\u7248\u672c django\u662f1.8.2 pip install celery==3.1.18 pip install redis==2.10.6 \u5173\u4e8eredis\u7684\u4f7f\u7528\u770b\u8bfe\u4ef6\u4f46\u662f\u6ce8\u610f\u5982\u4f55\u542f\u52a8redis\u7684\u670d\u52a1\u7aef(windows\u4e0b) redis-server.exe redis.windows.conf (\u5230\u5b89\u88c5redis\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b\u4f7f\u7528cmd) \u5728\u65b0\u590d\u5236\u7684\u9879\u76ee\u4e2d\u8fdb\u5165\u5230dailyfresh\u8fd9\u4e2a\u6587\u4ef6\u5939,\u542f\u52a8cmd\u7a97\u53e3 celery -A celery_tasks.tasks worker -l info \u8fdb\u884c\u542f\u52a8\u5c31\u53ef\u4ee5\u4e86(-l info \u662f\u8bbe\u7f6e\u663e\u793a\u7684\u4fe1\u606f) \u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u4ee5\u4e0d\u7528\u590d\u5236\u4e00\u4efd\u65b0\u7684\u9879\u76ee\u5230\u522b\u7684\u6587\u4ef6\u5939\u4e2d,\u590d\u5236\u5230\u522b\u7684\u6587\u4ef6\u5939\u662f\u56e0\u4e3a\u53ef\u80fd\u662f\u9700\u8981\u4e24\u53f0\u7535\u8111\u7684\u65f6\u5019\u5f97\u64cd\u4f5c,\u4e0d\u9700\u8981\u590d\u5236\u7684\u65f6\u5019,\u4e5f\u9700\u8981\u6ce8\u610f\u7684\u662f\u5fc5\u987b\u628a\u6ce8\u91ca\u7684\u90a3\u90e8\u5206\u53d6\u6d88,\u4e0d\u7136\u4e5f\u662f\u627e\u4e0d\u5230\u914d\u7f6e\u7684,\u6bd5\u7adf\u662f\u4e24\u4e2a\u4e0d\u540c\u7684cmd\u7a97\u53e3\u542f\u52a8,\u7136\u540e\u8fd8\u662f\u540c\u6837\u7684\u64cd\u4f5c\u6b65\u9aa4\u5373\u53ef. \u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u7535\u8111\u4e2d,\u5fc5\u987b\u80fd\u591f\u8fdb\u884c\u901a\u4fe1 23 \u767b\u5f55\u51fd\u6570 24 \u8bb0\u5f55session\u7f13\u5b58 https://django-redis-chs.readthedocs.io/zh_CN/latest/ \u00b6 \u5b89\u88c5\u4f7f\u7528 pip install django-redis==4.4.2 \u5426\u5219\u4f1a\u8ddfDjango\u7248\u672c\u4e0d\u5339\u914d 25 cookie\u7684\u8bbe\u7f6e 26 \u7528\u6237\u4e2d\u5fc3-\u7236\u6a21\u677f\u9875\u62bd\u8c61 \u00b6 \u9875\u9762\u76f8\u540c\u7684\u62bd\u8c61\u6210\u4e00\u4e2a\u7236\u6a21\u677f,\u4e0d\u540c\u7684\u5730\u65b9\u9884\u7559\u4e00\u4e2ablock\u5757,\u4e0d\u80fd\u4e0d\u9884\u7559,\u56e0\u6b64\u4e0d\u9884\u7559\u5c31\u6ca1\u6cd5\u5728\u522b\u7684\u5730\u65b9\u5199 \u7ee7\u627f\u7684\u9875\u9762\u5728\u9884\u7559\u7684\u5757\u4e2d\u4e66\u5199\u5c31ok\u4e86 27 \u7528\u6237\u4e2d\u5fc3\u9875\u9762\u663e\u793a \u7ee7\u627f\u7684\u662fbase_user_center.html \u7236\u6a21\u677f \u6ca1\u6709\u767b\u5f55\u8fdb\u884c\u767b\u5f55\u7684\u5730\u5740\u8fd4\u56de 28 from django.contrib.auth.decorators import login_required \u5305\u88f9url\u5730\u5740\u770b\u8d77\u6765\u592a\u590d\u6742\u600e\u4e48\u529e? \u7ee7\u627f\u8fd9\u4e2a\u7c7b\u4f1a\u5728\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u7684\u65f6\u5019\u8fd4\u56de\u7684\u662f\u5305\u88c5\u597d\u7684\u7c7b \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ee7\u627f\u7c7b\u7684\u987a\u5e8f,\u8981\u5148\u8c03\u7528LoginRequiredMixin\u7684as_view()\u51fd\u6570 29 \u5982\u4f55\u901a\u8fc7\u5224\u65ad\u7528\u6237\u662f\u5426\u767b\u5f55\u663e\u793a\u4e0d\u540c\u7684\u754c\u9762 \u8fd9\u91cc\u8ddf\u4e0a\u9762login_required \u88c5\u9970\u5176\u5b9e\u529f\u80fd\u7c7b\u4f3c(login_required(\u5fc5\u987b\u662f\u5185\u7f6e\u7684\u8ba4\u8bc1\u7cfb\u7edf\u624d\u80fd\u7528) \u4e0d\u767b\u5f55\u4e0d\u80fd\u663e\u793a,\u5982\u679c\u8fd9\u4e2a\u9875\u9762\u6ca1\u6709\u52a0\u5b83\u90a3\u4e48\u8fd9\u4e2a29\u5c31\u53ef\u4ee5\u8d77\u4f5c\u7528\u4e86,\u81ea\u5df1\u4f53\u4f1a\u4e00\u4e0b\u5c31\u597d\u4e86,\u4e00\u4e2a\u662f\u4e0d\u767b\u5f55\u5c31\u4e0d\u80fd\u663e\u793a,\u4e00\u4e2a\u662f\u6839\u636e\u767b\u5f55\u4e0e\u5426\u663e\u793a\u4e0d\u540c\u7684\u4fe1\u606f) 29 \u9000\u51fa 30 \u7528\u6237\u4e2d\u5fc3\u5730\u5740\u9875 \u4f7f\u7528get\u83b7\u53d6\u9875\u9762 post\u63d0\u4ea4\u4fe1\u606f \u8fd9\u4e00\u4e2a\u83b7\u53d6\u9ed8\u8ba4\u5730\u5740\u4f7f\u7528\u7684\u662fDjango\u5185\u7f6e\u7684\u67e5\u8be2\u65b9\u5f0f \u800c\u4e0a\u9762\u4f7f\u7528\u7684\u51fd\u6570\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684,\u5728model\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7ba1\u7406\u7c7b \u5728\u8c03\u7528\u7684\u65f6\u5019\u5176\u5b9eself\u5c31\u662fAddress.object 31 \u7528\u6237\u4e2d\u5fc3_\u4e2a\u4eba\u4fe1\u606f\u9875 32 \u5386\u53f2\u8bb0\u5f55\u5b58\u50a8\u683c\u5f0f\u8bbe\u8ba1 redis\u5b58\u50a8\u5386\u53f2\u6d4f\u89c8\u8bb0\u5f55\u5206\u6790 \u4e00\u4e2a\u7528\u6237\u5bf9\u5e94\u4e00\u4e2alist(\u952e(\u7528\u6237\u540d):\u503c(\u5386\u53f2\u6570\u636e)) \u8fd9\u662f\u539f\u6765\u6570\u636e\u5e93redis\u4e0epython\u4ea4\u4e92\u7684\u4f7f\u7528\u65b9\u6cd5(\u67e5\u770bredis\u8bfe\u4ef6) \u4f46\u662fDjango_redis\u5185\u7f6e\u4e86\u83b7\u53d6redis\u6570\u636e\u7684\u65b9\u6cd5 FastDFS\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb \u00b6 32 FastDFS\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb(\u5177\u4f53\u7684\u67e5\u770b\u6587\u6863) \u771f\u7684\u662f\u6309\u7167\u6559\u7a0b\u4ee5\u53ca\u6587\u6863\u81ea\u5df1\u641e\u5e9f\u4e86\u65f6\u95f4\u52d2 \u00b6 \u89e3\u51b3\u5185\u5bb9\u91cd\u590d\u4f7f\u7528\u7684\u662fhash\u503c,\u91cd\u590d\u6587\u4ef6\u53ea\u662f\u8fd4\u56de\u4e86\u5730\u5740 33 .\u542f\u52a8FastDFS\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u7684\u64cd\u4f5c\uff1a 1. \u4fee\u6539\u5982\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6 \uff08\u5728/etc/fdfs\u76ee\u5f55\u4e2d\uff09(\u8bfe\u7a0b\u7ed9\u4e86\u4e2a\u865a\u62df\u673a,\u6211\u662f\u81ea\u5df1\u5b9e\u4f53\u673a\u642d\u5efa\u7684) ![image.png](011-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a.image/14555448-2716c6028eab8a3b.png) `tracker_server=\u81ea\u5df1\u7684ip\u5730\u5740:22122` 2. \u542f\u52a8`tracker\u3001storage\u3001nginx`\u670d\u52a1\uff1a fdfs_trackerd /etc/fdfs/tracker.conf start fdfs_storaged /etc/fdfs/storage.conf start sudo /usr/local/nginx/sbin/nginx \u8981\u52a0\u8def\u5f84(\u4e0a\u9762\u7684\u662f\u5bf9\u7684,\u8fd9\u4e2a\u56fe\u7247\u662f\u6ca1\u52a0\u8def\u5f84\u65f6\u5019\u7684\u9519\u8bef\u4fe1\u606f) 3. \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6210\u529f fdfs_upload_file /etc/fdfs/client.conf \u8981\u4e0a\u4f20\u7684\u56fe\u7247\u6587\u4ef6 \u5982\u679c\u8fd4\u56de\u7c7b\u4f3c group1/M00/00/00/wKh8Kl2u066AZHnrABYlnmXXzNA082.jpg \u7684\u6587\u4ef6id\u5219\u8bf4\u660e\u6587\u4ef6\u4e0a\u4f20\u6210\u529f \u5728\u6d4f\u89c8\u5668\u4e2d\u53ef\u4ee5\u7528 127.0.0.1:8888/\u8fd4\u56de\u7684\u6587\u4ef6id \u8bbf\u95ee\u56fe\u7247 \u8be6\u7ec6\u7684\u914d\u7f6e\u770b\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5c31\u597d\u4e86 34 \u9879\u76ee\u4e2d\u4e0a\u4f20\u548c\u4f7f\u7528\u56fe\u7247\u7684\u6d41\u7a0b \u6d77\u91cf\u5b58\u50a8\uff0c\u5b58\u50a8\u5bb9\u91cf\u6269\u5c55\u65b9\u4fbf\u3002 \u6587\u4ef6\u5185\u5bb9\u91cd\u590d\u3002 \u7ed3\u5408nginx\u63d0\u9ad8\u7f51\u7ad9\u8bbf\u95ee\u56fe\u7247\u7684\u6548\u7387\u3002 35 Django\u4e8c\u6b21\u5f00\u53d1\u5bf9\u63a5FastDFS https://yiyibooks.cn/xx/django_182/ref/files/storage.html \u9ed8\u8ba4\u7684\u6587\u4ef6\u4e0a\u4f20\u4f7f\u7528\u7684\u7c7b \u6211\u4eec\u4f7f\u7528fastdfs\u5c31\u4e0d\u80fd\u4f7f\u7528\u9ed8\u8ba4\u7684,\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u5b9a\u4e49\u5b58\u50a8\u7cfb\u7edf https://yiyibooks.cn/xx/django_182/howto/custom-file-storage.html \u9700\u8981\u7684\u914d\u7f6e\u6587\u4ef6 \u540e\u9762\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u7ed9\u7684\u8fd9\u4e2aclient.conf\u6587\u4ef6\u662f\u6709\u95ee\u9898\u7684,\u7136\u540e\u76f4\u63a5\u62f7\u8d1d\u7684etc\u4e2d\u7684client.conf \u8fd9\u91cc\u7684\u914d\u7f6e\u592alow \u540e\u9762\u4f1a\u8fdb\u884c\u914d\u7f6e \u8fdb\u884c\u914d\u7f6e\u5904\u7406 \u6307\u5b9a\u81ea\u5df1\u7684\u4e0a\u4f20\u7c7b,\u8fdb\u884c\u914d\u7f6e(\u6307\u5b9a\u6211\u4eec\u81ea\u5df1\u7684\u6587\u4ef6) \u4f18\u5316\u914d\u7f6e,\u52a8\u6001\u5904\u7406 \u8fd9\u91cc\u7684FDFS_URL\u6700\u597d\u662f\u5199\u6210\u81ea\u5df1\u7684ip\u5730\u5740,\u56e0\u4e3a\u4f60\u7528127....\u522b\u7684\u7535\u8111\u540e\u9762\u5c31\u8bbf\u95ee\u4e0d\u4e86\u4e86 nginx\u4e00\u822c\u662f127. \u4ee5\u53ca\u81ea\u5df1\u7684ip\u90fd\u53ef\u4ee5\u8fdb\u884c\u8bbf\u95ee,\u4f46\u662f\u540e\u9762\u4f1a\u751f\u6210\u9759\u6001\u7684index.html,\u4f7f\u7528127,\u522b\u7684\u7535\u8111\u5c31\u8bbf\u95ee\u4e0d\u5230\u4e86. \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd4\u56deurl\u5462? \u662f\u8fd9\u6837\u7684 \u4f46\u662f\u6211\u4eec\u6700\u7ec8\u9700\u8981\u8bbf\u95ee\u7684\u662f\u4e0b\u9762\u8fd9\u6837\u7684\u683c\u5f0f,\u56e0\u6b64\u9700\u8981\u52a0\u4e0a\u6211\u4eec\u7684base_url\u624d\u884c \u6700\u540e\u6211\u4eec\u9700\u8981\u7684img\u5730\u5740\u5e94\u8be5\u662f\u4e0a\u9762\u8fd9\u6837\u7684 \u53ef\u4ee5\u770b\u4e0b\u540e\u9762\u9700\u8981\u751f\u6210\u9759\u6001index.html\u65f6\u7684\u8c03\u7528 \u8fdb\u884c\u56fe\u7247\u4e0a\u4f20\u7684\u6d4b\u8bd5 \u521b\u5efa\u7ba1\u7406\u5458 \u00b6","title":"013 \u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#1","text":"","title":"1.\u9879\u76ee\u67b6\u6784"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#2","text":"","title":"2. \u6570\u636e\u5e93\u8868\u7ed3\u6784"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#3","text":"1.\u521b\u5efa\u9879\u76ee 2.\u521b\u5efa\u591a\u4e2a\u5e94\u7528 \u4f7f\u7528idea\u6253\u5f00\u9879\u76ee,\u7136\u540e\u5c06\u5efa\u7acb\u7684\u591a\u4e2a\u5e94\u7528\u653e\u5230\u4e00\u4e2a\u5305\u4e2d \u6ce8\u518c\u5e94\u7528 \u8fd9\u6837\u5728\u540e\u9762\u8def\u7531\u7684\u914d\u7f6e\u7684\u65f6\u5019\u4e5f\u662f\u9700\u8981\u8fdb\u884c\u6dfb\u52a0\u5305\u540d\u7684 import os import sys BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . insert ( 0 , os . path . join ( BASE_DIR , 'apps' ) ) \u521b\u5efa\u6a21\u677f\u6587\u4ef6 \u914d\u7f6e\u6a21\u677f\u6587\u4ef6\u7684\u8def\u5f84 \u914d\u7f6e\u6570\u636e\u5e93 \u521b\u5efa\u6570\u636e\u5e93 settings \u914d\u7f6e __init__\u6587\u4ef6\u5bfc\u5165mysql\u6570\u636e\u5e93 import pymysql pymysql.install_as_MySQLdb() \u6570\u636e\u5e93\u7684\u8fc1\u79fb \u8bed\u8a00\u65f6\u533a\u7684\u66f4\u6539 9.\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e \u9996\u5148\u521b\u5efa\u4e00\u4e2astatic\u6587\u4ef6\u5728 \u9759\u6001\u6587\u4ef6\u76ee\u5f55\u7684\u914d\u7f6e \u4e3b\u8def\u7531\u7684\u914d\u7f6e \u6dfb\u52a0namespace \u4e3b\u8981\u662f\u5728\u8fdb\u884c\u52a8\u6001\u7684\u89e3\u6790\u65f6,\u9632\u6b62\u9891\u7e41\u53d8\u66f4\u540d\u5b57. \u5b50\u8def\u7531\u7684\u590d\u5236\u4e0e\u914d\u7f6e(\u6bcf\u4e00\u4e2a\u5e94\u7528\u90fd\u8981\u8fdb\u884c\u8d4b\u503c) basemodel\u7684\u521b\u5efa,\u8ba9\u6240\u6709\u7684\u5e94\u7528\u7684\u6a21\u578b\u7c7b\u7ee7\u627f\u8fd9\u4e2abasemodel \u521b\u5efa\u4e00\u4e2abase_model\u6587\u4ef6 from django.db import models class BaseModel ( models . Model ): '''\u6a21\u578b\u62bd\u8c61\u7c7b''' create_time = models . DateTimeField ( auto_now_add = True , verbose_name = '\u521b\u5efa\u65f6\u95f4' ) update_time = models . DateTimeField ( auto_now = True , verbose_name = '\u66f4\u65b0\u65f6\u95f4' ) is_delete = models . BooleanField ( default = False , verbose_name = '\u5220\u9664\u6807\u8bb0' ) class Meta : #\u8bf4\u660e\u8fd9\u662f\u4e2a\u62bd\u8c61\u6a21\u578b\u7c7b abstract = True \u5176\u5b83models\u6a21\u578b\u7c7b\u7684\u521b\u5efa user \u4e2d\u7684models .... 14 \u7531\u4e8e\u4f7f\u7528\u4e86\u5bcc\u6587\u672c\u7f16\u8f91\u5668,\u6240\u4ee5\u8fdb\u884c\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u7684\u6ce8\u518c TINYMCE_DEFAULT_CONFIG = { 'theme' : 'advanced' , 'width' : 600 , 'height' : 400 , } 3\uff09\u5728test6/urls.py\u4e2d\u914d\u7f6e\u7f16\u8f91\u5668url\u3002 urlpatterns = [ ... url ( r '^tinymce/' , include ( 'tinymce.urls' )), ] 15 . \u6307\u5b9a\u81ea\u5df1\u7684\u8ba4\u8bc1\u7cfb\u7edf \u6ce8\u610f\uff1a AUTH_USER_MODEL\u914d\u7f6e\u53c2\u6570\u8981\u5728\u7b2c\u4e00\u6b21\u8fc1\u79fb\u6570\u636e\u5e93\u4e4b\u524d\u914d\u7f6e\uff0c\u5426\u5219\u53ef\u80fddjango\u7684\u8ba4\u8bc1\u7cfb\u7edf\u5de5\u4f5c\u4e0d\u6b63\u5e38 \u8fdb\u884c\u6570\u636e\u5e93\u6587\u4ef6\u7684\u8fc1\u79fb 17 \u9759\u6001\u9875\u9762 18 \u6ce8\u518c\u9875\u9762\u7684\u8bbe\u8ba1(register) \u5728user\u7684view\u4e2d\u5199\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u663e\u793a \u8def\u7531\u7684\u914d\u7f6e \u7f51\u9875\u7684\u663e\u793a \u6ca1\u6709\u6b63\u5e38\u7684\u56fe\u7247 \u8868\u5355\u63d0\u4ea4\u7684\u8bbe\u7f6e \u63d0\u4ea4\u8868\u5355\u4ee5\u540e \u7684\u5904\u7406 view\u4e2dregister_handle\u51fd\u6570\u7f16\u5199 \u8def\u7531\u7684\u914d\u7f6e(\u4ee5\u540e\u4e0d\u518d\u52a0\u8fd9\u4e00\u9879\u7684\u8be6\u7ec6) \u9996\u9875\u7684\u8bbe\u7f6e \u6ce8\u518c\u5b8c\u6210\u540e\u7684\u9875\u9762\u8df3\u8f6c \u6570\u636e\u5e93\u7684\u53d8\u5316 19 \u4e00\u822c\u89c6\u56fe\u51fd\u6570\u6709\u65f6\u5019\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42,\u56e0\u6b64\u5462\u9700\u8981\u8fdb\u884c\u7c7b\u89c6\u56fe\u7684\u5b9a\u4e49 20 \u6fc0\u6d3b\u90ae\u4ef6 \u4f7f\u7528 itsdangerous \u52a0\u5bc6\u7528\u6237\u7684\u8eab\u4efd\u4fe1\u606f \u8fc7\u671f\u7684\u52a0\u5bc6\u89e3\u5bc6\u4f1a\u62a5\u5f02\u5e38 \u6fc0\u6d3b\u90ae\u4ef6\u53d1\u9001,\u63a5\u53d7,\u7136\u540e\u8fdb\u884c\u6fc0\u6d3b(\u4e13\u95e8\u7684\u6fc0\u6d3b\u7c7b\u89c6\u56fe),\u6fc0\u6d3b\u4ee5\u540e\u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762 \u6ce8\u518c\u603b\u7ed3: \u63a5\u6536\u6570\u636e \u6570\u636e\u6821\u9a8c \u53d1\u9001\u6fc0\u6d3b\u90ae\u4ef6 \u8df3\u8f6c\u5230\u9996\u9875 \u6fc0\u6d3b \u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762 21 \u90ae\u4ef6\u53d1\u9001\u662f\u963b\u585e\u7c7b\u578b,\u5728\u53d1\u9001\u5230smtp\u670d\u52a1\u5668\u7684\u65f6\u95f4\u4f1a\u957f\u65f6\u95f4\u963b\u585e\u5f71\u54cd\u7528\u6237\u4f53\u9a8c,\u56e0\u6b64\u5462\u4f7f\u7528celery\u4ee3\u66ff\u6b64\u51fd\u6570\u53d1\u9001\u90ae\u4ef6(\u770b\u8bfe\u4ef6celery)","title":"3.\u9879\u76ee\u6846\u67b6\u642d\u5efa"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#22-celery","text":"\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5b58\u653e\u8017\u65f6\u8f83\u957f\u7684\u4efb\u52a1 \u5c06\u9879\u76ee\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d \u7136\u540e\u53d6\u6d88\u6ce8\u91ca \u8fd9\u91cc\u4f7f\u7528\u4e00\u4e9b\u5b89\u88c5\u5305\u6ce8\u610f\u7248\u672c django\u662f1.8.2 pip install celery==3.1.18 pip install redis==2.10.6 \u5173\u4e8eredis\u7684\u4f7f\u7528\u770b\u8bfe\u4ef6\u4f46\u662f\u6ce8\u610f\u5982\u4f55\u542f\u52a8redis\u7684\u670d\u52a1\u7aef(windows\u4e0b) redis-server.exe redis.windows.conf (\u5230\u5b89\u88c5redis\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b\u4f7f\u7528cmd) \u5728\u65b0\u590d\u5236\u7684\u9879\u76ee\u4e2d\u8fdb\u5165\u5230dailyfresh\u8fd9\u4e2a\u6587\u4ef6\u5939,\u542f\u52a8cmd\u7a97\u53e3 celery -A celery_tasks.tasks worker -l info \u8fdb\u884c\u542f\u52a8\u5c31\u53ef\u4ee5\u4e86(-l info \u662f\u8bbe\u7f6e\u663e\u793a\u7684\u4fe1\u606f) \u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u4ee5\u4e0d\u7528\u590d\u5236\u4e00\u4efd\u65b0\u7684\u9879\u76ee\u5230\u522b\u7684\u6587\u4ef6\u5939\u4e2d,\u590d\u5236\u5230\u522b\u7684\u6587\u4ef6\u5939\u662f\u56e0\u4e3a\u53ef\u80fd\u662f\u9700\u8981\u4e24\u53f0\u7535\u8111\u7684\u65f6\u5019\u5f97\u64cd\u4f5c,\u4e0d\u9700\u8981\u590d\u5236\u7684\u65f6\u5019,\u4e5f\u9700\u8981\u6ce8\u610f\u7684\u662f\u5fc5\u987b\u628a\u6ce8\u91ca\u7684\u90a3\u90e8\u5206\u53d6\u6d88,\u4e0d\u7136\u4e5f\u662f\u627e\u4e0d\u5230\u914d\u7f6e\u7684,\u6bd5\u7adf\u662f\u4e24\u4e2a\u4e0d\u540c\u7684cmd\u7a97\u53e3\u542f\u52a8,\u7136\u540e\u8fd8\u662f\u540c\u6837\u7684\u64cd\u4f5c\u6b65\u9aa4\u5373\u53ef. \u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u7535\u8111\u4e2d,\u5fc5\u987b\u80fd\u591f\u8fdb\u884c\u901a\u4fe1 23 \u767b\u5f55\u51fd\u6570","title":"22 celery\u4f7f\u7528"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#24-session-httpsdjango-redis-chsreadthedocsiozh_cnlatest","text":"\u5b89\u88c5\u4f7f\u7528 pip install django-redis==4.4.2 \u5426\u5219\u4f1a\u8ddfDjango\u7248\u672c\u4e0d\u5339\u914d 25 cookie\u7684\u8bbe\u7f6e","title":"24 \u8bb0\u5f55session\u7f13\u5b58  https://django-redis-chs.readthedocs.io/zh_CN/latest/"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#26-","text":"\u9875\u9762\u76f8\u540c\u7684\u62bd\u8c61\u6210\u4e00\u4e2a\u7236\u6a21\u677f,\u4e0d\u540c\u7684\u5730\u65b9\u9884\u7559\u4e00\u4e2ablock\u5757,\u4e0d\u80fd\u4e0d\u9884\u7559,\u56e0\u6b64\u4e0d\u9884\u7559\u5c31\u6ca1\u6cd5\u5728\u522b\u7684\u5730\u65b9\u5199 \u7ee7\u627f\u7684\u9875\u9762\u5728\u9884\u7559\u7684\u5757\u4e2d\u4e66\u5199\u5c31ok\u4e86 27 \u7528\u6237\u4e2d\u5fc3\u9875\u9762\u663e\u793a \u7ee7\u627f\u7684\u662fbase_user_center.html \u7236\u6a21\u677f \u6ca1\u6709\u767b\u5f55\u8fdb\u884c\u767b\u5f55\u7684\u5730\u5740\u8fd4\u56de 28 from django.contrib.auth.decorators import login_required \u5305\u88f9url\u5730\u5740\u770b\u8d77\u6765\u592a\u590d\u6742\u600e\u4e48\u529e? \u7ee7\u627f\u8fd9\u4e2a\u7c7b\u4f1a\u5728\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u7684\u65f6\u5019\u8fd4\u56de\u7684\u662f\u5305\u88c5\u597d\u7684\u7c7b \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ee7\u627f\u7c7b\u7684\u987a\u5e8f,\u8981\u5148\u8c03\u7528LoginRequiredMixin\u7684as_view()\u51fd\u6570 29 \u5982\u4f55\u901a\u8fc7\u5224\u65ad\u7528\u6237\u662f\u5426\u767b\u5f55\u663e\u793a\u4e0d\u540c\u7684\u754c\u9762 \u8fd9\u91cc\u8ddf\u4e0a\u9762login_required \u88c5\u9970\u5176\u5b9e\u529f\u80fd\u7c7b\u4f3c(login_required(\u5fc5\u987b\u662f\u5185\u7f6e\u7684\u8ba4\u8bc1\u7cfb\u7edf\u624d\u80fd\u7528) \u4e0d\u767b\u5f55\u4e0d\u80fd\u663e\u793a,\u5982\u679c\u8fd9\u4e2a\u9875\u9762\u6ca1\u6709\u52a0\u5b83\u90a3\u4e48\u8fd9\u4e2a29\u5c31\u53ef\u4ee5\u8d77\u4f5c\u7528\u4e86,\u81ea\u5df1\u4f53\u4f1a\u4e00\u4e0b\u5c31\u597d\u4e86,\u4e00\u4e2a\u662f\u4e0d\u767b\u5f55\u5c31\u4e0d\u80fd\u663e\u793a,\u4e00\u4e2a\u662f\u6839\u636e\u767b\u5f55\u4e0e\u5426\u663e\u793a\u4e0d\u540c\u7684\u4fe1\u606f) 29 \u9000\u51fa 30 \u7528\u6237\u4e2d\u5fc3\u5730\u5740\u9875 \u4f7f\u7528get\u83b7\u53d6\u9875\u9762 post\u63d0\u4ea4\u4fe1\u606f \u8fd9\u4e00\u4e2a\u83b7\u53d6\u9ed8\u8ba4\u5730\u5740\u4f7f\u7528\u7684\u662fDjango\u5185\u7f6e\u7684\u67e5\u8be2\u65b9\u5f0f \u800c\u4e0a\u9762\u4f7f\u7528\u7684\u51fd\u6570\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684,\u5728model\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7ba1\u7406\u7c7b \u5728\u8c03\u7528\u7684\u65f6\u5019\u5176\u5b9eself\u5c31\u662fAddress.object 31 \u7528\u6237\u4e2d\u5fc3_\u4e2a\u4eba\u4fe1\u606f\u9875 32 \u5386\u53f2\u8bb0\u5f55\u5b58\u50a8\u683c\u5f0f\u8bbe\u8ba1 redis\u5b58\u50a8\u5386\u53f2\u6d4f\u89c8\u8bb0\u5f55\u5206\u6790 \u4e00\u4e2a\u7528\u6237\u5bf9\u5e94\u4e00\u4e2alist(\u952e(\u7528\u6237\u540d):\u503c(\u5386\u53f2\u6570\u636e)) \u8fd9\u662f\u539f\u6765\u6570\u636e\u5e93redis\u4e0epython\u4ea4\u4e92\u7684\u4f7f\u7528\u65b9\u6cd5(\u67e5\u770bredis\u8bfe\u4ef6) \u4f46\u662fDjango_redis\u5185\u7f6e\u4e86\u83b7\u53d6redis\u6570\u636e\u7684\u65b9\u6cd5","title":"26 \u7528\u6237\u4e2d\u5fc3-\u7236\u6a21\u677f\u9875\u62bd\u8c61"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#fastdfs","text":"","title":"FastDFS\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#32-fastdfs","text":"\u89e3\u51b3\u5185\u5bb9\u91cd\u590d\u4f7f\u7528\u7684\u662fhash\u503c,\u91cd\u590d\u6587\u4ef6\u53ea\u662f\u8fd4\u56de\u4e86\u5730\u5740 33 .\u542f\u52a8FastDFS\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u7684\u64cd\u4f5c\uff1a 1. \u4fee\u6539\u5982\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6 \uff08\u5728/etc/fdfs\u76ee\u5f55\u4e2d\uff09(\u8bfe\u7a0b\u7ed9\u4e86\u4e2a\u865a\u62df\u673a,\u6211\u662f\u81ea\u5df1\u5b9e\u4f53\u673a\u642d\u5efa\u7684) ![image.png](011-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a.image/14555448-2716c6028eab8a3b.png) `tracker_server=\u81ea\u5df1\u7684ip\u5730\u5740:22122` 2. \u542f\u52a8`tracker\u3001storage\u3001nginx`\u670d\u52a1\uff1a fdfs_trackerd /etc/fdfs/tracker.conf start fdfs_storaged /etc/fdfs/storage.conf start sudo /usr/local/nginx/sbin/nginx \u8981\u52a0\u8def\u5f84(\u4e0a\u9762\u7684\u662f\u5bf9\u7684,\u8fd9\u4e2a\u56fe\u7247\u662f\u6ca1\u52a0\u8def\u5f84\u65f6\u5019\u7684\u9519\u8bef\u4fe1\u606f) 3. \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6210\u529f fdfs_upload_file /etc/fdfs/client.conf \u8981\u4e0a\u4f20\u7684\u56fe\u7247\u6587\u4ef6 \u5982\u679c\u8fd4\u56de\u7c7b\u4f3c group1/M00/00/00/wKh8Kl2u066AZHnrABYlnmXXzNA082.jpg \u7684\u6587\u4ef6id\u5219\u8bf4\u660e\u6587\u4ef6\u4e0a\u4f20\u6210\u529f \u5728\u6d4f\u89c8\u5668\u4e2d\u53ef\u4ee5\u7528 127.0.0.1:8888/\u8fd4\u56de\u7684\u6587\u4ef6id \u8bbf\u95ee\u56fe\u7247 \u8be6\u7ec6\u7684\u914d\u7f6e\u770b\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5c31\u597d\u4e86 34 \u9879\u76ee\u4e2d\u4e0a\u4f20\u548c\u4f7f\u7528\u56fe\u7247\u7684\u6d41\u7a0b \u6d77\u91cf\u5b58\u50a8\uff0c\u5b58\u50a8\u5bb9\u91cf\u6269\u5c55\u65b9\u4fbf\u3002 \u6587\u4ef6\u5185\u5bb9\u91cd\u590d\u3002 \u7ed3\u5408nginx\u63d0\u9ad8\u7f51\u7ad9\u8bbf\u95ee\u56fe\u7247\u7684\u6548\u7387\u3002 35 Django\u4e8c\u6b21\u5f00\u53d1\u5bf9\u63a5FastDFS https://yiyibooks.cn/xx/django_182/ref/files/storage.html \u9ed8\u8ba4\u7684\u6587\u4ef6\u4e0a\u4f20\u4f7f\u7528\u7684\u7c7b \u6211\u4eec\u4f7f\u7528fastdfs\u5c31\u4e0d\u80fd\u4f7f\u7528\u9ed8\u8ba4\u7684,\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u5b9a\u4e49\u5b58\u50a8\u7cfb\u7edf https://yiyibooks.cn/xx/django_182/howto/custom-file-storage.html \u9700\u8981\u7684\u914d\u7f6e\u6587\u4ef6 \u540e\u9762\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u7ed9\u7684\u8fd9\u4e2aclient.conf\u6587\u4ef6\u662f\u6709\u95ee\u9898\u7684,\u7136\u540e\u76f4\u63a5\u62f7\u8d1d\u7684etc\u4e2d\u7684client.conf \u8fd9\u91cc\u7684\u914d\u7f6e\u592alow \u540e\u9762\u4f1a\u8fdb\u884c\u914d\u7f6e \u8fdb\u884c\u914d\u7f6e\u5904\u7406 \u6307\u5b9a\u81ea\u5df1\u7684\u4e0a\u4f20\u7c7b,\u8fdb\u884c\u914d\u7f6e(\u6307\u5b9a\u6211\u4eec\u81ea\u5df1\u7684\u6587\u4ef6) \u4f18\u5316\u914d\u7f6e,\u52a8\u6001\u5904\u7406 \u8fd9\u91cc\u7684FDFS_URL\u6700\u597d\u662f\u5199\u6210\u81ea\u5df1\u7684ip\u5730\u5740,\u56e0\u4e3a\u4f60\u7528127....\u522b\u7684\u7535\u8111\u540e\u9762\u5c31\u8bbf\u95ee\u4e0d\u4e86\u4e86 nginx\u4e00\u822c\u662f127. \u4ee5\u53ca\u81ea\u5df1\u7684ip\u90fd\u53ef\u4ee5\u8fdb\u884c\u8bbf\u95ee,\u4f46\u662f\u540e\u9762\u4f1a\u751f\u6210\u9759\u6001\u7684index.html,\u4f7f\u7528127,\u522b\u7684\u7535\u8111\u5c31\u8bbf\u95ee\u4e0d\u5230\u4e86. \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd4\u56deurl\u5462? \u662f\u8fd9\u6837\u7684 \u4f46\u662f\u6211\u4eec\u6700\u7ec8\u9700\u8981\u8bbf\u95ee\u7684\u662f\u4e0b\u9762\u8fd9\u6837\u7684\u683c\u5f0f,\u56e0\u6b64\u9700\u8981\u52a0\u4e0a\u6211\u4eec\u7684base_url\u624d\u884c \u6700\u540e\u6211\u4eec\u9700\u8981\u7684img\u5730\u5740\u5e94\u8be5\u662f\u4e0a\u9762\u8fd9\u6837\u7684 \u53ef\u4ee5\u770b\u4e0b\u540e\u9762\u9700\u8981\u751f\u6210\u9759\u6001index.html\u65f6\u7684\u8c03\u7528 \u8fdb\u884c\u56fe\u7247\u4e0a\u4f20\u7684\u6d4b\u8bd5","title":"32 FastDFS\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb(\u5177\u4f53\u7684\u67e5\u770b\u6587\u6863) \u771f\u7684\u662f\u6309\u7167\u6559\u7a0b\u4ee5\u53ca\u6587\u6863\u81ea\u5df1\u641e\u5e9f\u4e86\u65f6\u95f4\u52d2"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e0a/#_1","text":"","title":"\u521b\u5efa\u7ba1\u7406\u5458"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/","text":"36\u5546\u54c1\u6a21\u578b\u7c7b\u6982\u8ff0(\u5176\u5b9e\u8fd9\u4e2a\u6211\u770b\u5b8c\u9875\u9762\u9759\u6001\u5316\u624d\u8fc7\u6765\u770b\u7684,\u767e\u5ea6\u4e91\u7684\u89c6\u9891\u628a\u8fd9\u4e24\u5757\u5f04\u6df7\u4e86,\u8981\u5148\u770b\u9996\u9875,\u624d\u770b\u9759\u6001\u5316) \u00b6 \u9996\u5148\u662findex\u9875\u9762\u7684\u7ee7\u627f(base.html) \u7136\u540e\u662fview\u89c6\u56fe url\u7684\u914d\u7f6e \u4e0b\u9762\u8fdb\u884c\u8be6\u7ec6\u7684\u914d\u7f6e 37 \u9996\u9875\u5185\u5bb9\u83b7\u53d6\u548c\u5c55\u793a 38 redis\u5b58\u50a8\u8d2d\u7269\u8f66\u8bb0\u5f55\u5206\u6790 \u4fdd\u5b58\u8d2d\u7269\u8f66\u4fe1\u606f\u7684\u6570\u636e\u8bbe\u8ba1 HLEN key http://redis.cn/commands/hlen.html \u4e0b\u9762\u8fdb\u884c\u4e00\u4e2a\u6a21\u62df:\u5206\u522b\u770b\u4e00\u4e0b\u672a\u767b\u5f55\u8ddf\u767b\u5f55\u7684\u72b6\u6001 \u6211\u4eec\u9996\u5148\u8fde\u63a5mysql\u6570\u636e\u5e93\u770b\u4e00\u4e0b\u6211\u4eec\u7528\u6237\u7684id 39 \u9996\u9875\u7684 \u00b6 39 \u9996\u9875\u9875\u9762\u9759\u6001\u5316 (\u7528\u6237\u6ca1\u767b\u5f55\u65f6\u663e\u793a\u7684\u754c\u9762\u9759\u6001\u7684) \u5199\u4e00\u4e2a\u65b0\u7684celery\u7684tasks\u4efb\u52a1 \u8fd9\u91cc\u9700\u8981\u5728\u6a21\u677f\u4e2d\u65b0\u5efa\u4e24\u4e2a\u6a21\u677fhtml 40 \u914d\u7f6engnix\u63d0\u4ea4\u9759\u6001\u9875\u9762 \u4e0a\u9762\u7684\u6709\u4e2d\u6587\u8def\u5f84\u4e0d\u884c \u8fd9\u4e2a\u968f\u624b\u6d4b\u8bd5 \u8fd9\u4e2a\u5c31\u662f\u5427\u9879\u76ee\u62f7\u8d1d\u4e00\u4efd\u653e\u7f6e\u5230\u82f1\u6587\u8def\u5f84\u4e0b \u91cd\u542fnginx \u53ef\u4ee5\u770b\u5230\u6709\u4e24\u4e2a\u76d1\u542c\u4e00\u4e2a\u662f80\u7aef\u53e3,\u4e00\u4e2a\u662f8888\u7aef\u53e3,\u8fd9\u4e2a\u9875\u9762\u4e2d\u7684\u56fe\u7247\u662fnginx\u8fdb\u884c\u63d0\u4f9b\u7684 \u7531\u4e8e\u81ea\u5df1\u4f7f\u7528windows\u6bd4\u8f83\u591a\uff0c\u8fd8\u662f\u9700\u8981\u628a\u9664\u4e86django\u670d\u52a1\u5668\u4e4b\u5916\u7684\u7ec4\u4ef6\u653e\u5230\u53e6\u4e00\u53f0\u7535\u8111\u7684\u865a\u62df\u673a\u4e0a\uff0c\u4e0b\u9762\u662f\u6539\u52a8\u7684\u5730\u65b9 \u00b6 \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 \u5b89\u88c5\u9700\u8981\u7684\u5305(\u5c31\u662f\u90a3\u4e00\u4e9bdjango\u7b49\u524d\u9762\u7528\u5230\u7684) \u5b89\u88c5fdfs(\u6ce8\u610f\u65b0\u5efa\u7684\u865a\u62df\u673a\u6ca1\u6709GCC,\u4ee5\u53camake\u9700\u8981\u8fdb\u884c\u5b89\u88c5\uff0c\u5e76\u4e14\u6ce8\u610f\u5b89\u88c5\u8fc7\u4e00\u6b21\u7684\u662f\u9700\u8981\u91cd\u65b0\u89e3\u538b\u7684\uff0c\u6709\u4e9b\u5305\u88ab\u526a\u5207\u4e86) 3.\u7531\u4e8e\u662f\u65b0\u5b89\u88c5\u7684\u865a\u62df\u673a\u4e00\u4e9b\u4f9d\u8d56\u6ca1\u6709\u5b89\u88c5,\u8981\u8fdb\u884c\u5b89\u88c5 \u53c2\u8003\u7f51\u5740https:// www.jb51.net/article/80468.htm \u4ee5\u53cahttps://blog.csdn.net/wu_cai_/article/details/80278611 mysql\u6570\u636e\u5e93\u7684\u914d\u7f6e \u00b6 \u8fdc\u7a0b\u865a\u62df\u673a\u521b\u5efa\u6570\u636e\u5e93 \u8bbe\u7f6e\u8fdc\u7a0b\u767b\u5f55\u7684\u6743\u9650 \u672c\u673a\u8fdc\u7a0b\u767b\u5f55\u6d4b\u8bd5 \u9879\u76ee\u6570\u636e\u5e93\u7684\u66f4\u6539 redis\u6570\u636e\u5e93\u7684\u914d\u7f6e(\u53c2\u8003redis\u7684\u8bfe\u4ef6) \u00b6 \u9996\u5148\u7ed1\u5b9a\u865a\u62df\u673a\u7684ip Redis\u7684\u914d\u7f6e\u4fe1\u606f\u5728/etc/redis/redis.conf\u4e0b\u3002 \u67e5\u770b sudo gedit /etc/redis/redis.conf \u7ed1\u5b9aip\uff1a\u5982\u679c\u9700\u8981\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u53ef\u5c06\u6b64\u2f8f\u6ce8\u91ca\uff0c\u6216\u7ed1\u5b9a\u2f00\u4e2a\u771f\u5b9eip bind 127.0.0.1 \u6539\u6210 bind 192.168.124.77 \u81ea\u5df1\u7684\u865a\u62df\u673aip\u5730\u5740 \u91cd\u542fredis \u91cd\u542f sudo service redis restart \u53ef\u4ee5\u770b\u5230ip\u5730\u5740\u5df2\u7ecf\u6539\u53d8 4.\u4fee\u6539celery\u53d1\u9001\u90ae\u4ef6\u7ed1\u5b9a\u7684redis\u7684ip \u540c\u65f6\u6539\u53d8\u90ae\u4ef6\u6fc0\u6d3b\u7ed1\u5b9a\u7684ip \u6539\u53d8redis\u7f13\u5b58\u7ed1\u5b9a\u7684ip \u914d\u7f6eDjango\u7f13\u5b58\u6570\u636e\u5e93 \u914d\u7f6efdfs\u670d\u52a1\u5668\u7684ip \u00b6 \u8fc1\u79fb\u6570\u636e\u5e93 \u00b6 \u5c06\u9879\u76ee\u590d\u5236\u4e00\u4efd\u653e\u5230\u865a\u62df\u673a\u4e0a\uff0c\u5f00\u542fceler\u4efb\u52a1 \u00b6 \u6ce8\u518c\u6d4b\u8bd5 \u00b6 \u6536\u5230\u6ce8\u518c\u6fc0\u6d3b\u90ae\u4ef6 redis\u7f13\u5b58\u914d\u7f6e\u67e5\u770b \u00b6 1.\u8fdc\u7a0b\u8fde\u63a5redis\u7684\u547d\u4ee4 redis-cli -h 192.168.124.77 -p 6379 2.\u67e5\u770b \u521b\u5efa\u540e\u53f0\u7ba1\u7406\u5458 \u00b6 \u914d\u7f6enginx80\u7aef\u53e3\u7684\u914d\u7f6e \u00b6 \u91cd\u542fnginx \u751f\u6210\u4e00\u4e2a\u9759\u6001\u7684index\u9875\u9762 \u00b6 \u5728\u672c\u673a\u7684\u6d4f\u89c8\u5668\u6d4b\u8bd5 \u00b6 \u7ec8\u4e8e\u914d\u7f6e\u597d\u4e86\u6211\u7684ubuntu\u865a\u62df\u673a\u4ee5\u53cawindows \u65e5\u5e38\u4f7f\u7528\u4e0d\u5f97\u4e0d\u7528windows\u4e5f\u662f\u5f88\u65e0\u5948\u554a 41 admin\u7ba1\u7406\u66f4\u65b0\u9996\u9875\u6570\u636e\u8868\u65f6\u91cd\u65b0\u751f\u6210index\u9759\u6001\u9875\u9762 \u00b6 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u6211\u4eec\u9700\u8981\u5728admin\u4e2d\u8fdb\u884cadmin.Modeladmin\u7684\u7ee7\u627f\u7c7b.\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd \u53ef\u4ee5\u770b\u5230\u53c8\u591a\u4e86\u4e00\u5f20\u56fe\u7247 \u4e0b\u9762\u5728\u8bd5\u4e00\u6b21 \u518d\u6b21\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\u9759\u6001\u9875\u9762\u53d1\u751f\u4e86\u6539\u53d8 \u770b\u4e00\u4e0bcelery\u7684\u4efb\u52a1\u6539\u53d8 \u4f46\u662f\u6211\u4eec\u7528\u591a\u4e86\u597d\u591a\u7684\u8868,\u4f46\u662f\u6211\u4eec\u8981\u662f\u6240\u6709\u7684\u7ba1\u7406\u7c7b\u9700\u8981\u91cd\u5199\u5c31\u5f88\u9ebb\u70e6,\u5c31\u62bd\u8c61\u7236\u7c7b\u7136\u540e\u8fdb\u884c\u7ee7\u627f \u5176\u5b9e\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u6d41\u7a0b 42 \u9759\u6001index\u9875\u9762\u548c index View\u7684\u8c03\u5ea6 \u5b9e\u9645\u90e8\u7f72\u670d\u52a1\u5668,\u4e0d\u80fd\u8ba9\u7528\u6237\u76f4\u63a5\u8bbf\u95eenginx\u670d\u52a1\u5668\u7684ip\u5730\u5740 \u8fd9\u91cc\u5c31\u7275\u626f\u4e00\u4e2a\u95ee\u9898,\u6211\u4eec\u9996\u9875\u7684\u8fd4\u56de\u662f\u9759\u6001\u9875\u9762\u8fd8\u662f\u6211\u4eec\u7684index view\u7684\u89c6\u56fe \u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4e00\u4e2anginx\u8c03\u5ea6\u670d\u52a1\u5668 \u7ed9\u7528\u6237\u66b4\u9732\u7684ip\u5c31\u662fnginx\u7684ip \u6700\u540e\u7684\u4efb\u52a1\u8c03\u5ea6\u5e94\u8be5\u662f\u8fd9\u6837\u7684 \u76ee\u524d\u5148\u505a\u5230\u8fd9\u6837\u5c31ok\u4e86,\u540e\u9762\u4f1a\u7ee7\u7eed\u505a\u7684 43 \u9996\u9875\u6570\u636e\u7f13\u5b58\u8bbe\u7f6e\u548c\u83b7\u53d6 \u9875\u9762\u6570\u636e\u7684\u7f13\u5b58: \u628a\u9875\u9762\u4f7f\u7528\u7684\u6570\u636e\u5b58\u653e\u5728\u7f13\u5b58\u4e2d,\u5f53\u518d\u6b21\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u7684\u65f6,\u5148\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6,\u5982\u679c\u83b7\u53d6\u4e0d\u5230,\u518d\u53bb\u67e5\u8be2\u6570\u636e\u5e93,\u51cf\u5c11\u6570\u636e\u5e93\u67e5\u8be2\u7684\u6b21\u6570 \u53c2\u8003: https://yiyibooks.cn/xx/django_182/topics/cache.html \u5f00\u59cb\u8bbe\u7f6e\u7f13\u5b58 \u66f4\u65b0\u7f13\u5b58 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u66f4\u65b0\u9996\u9875\u7684\u7f13\u5b58\u6570\u636e? \u5f53\u7ba1\u7406\u5458\u540e\u53f0\u4fee\u6539\u9996\u9875\u4fe1\u606f\u5bf9\u5e94\u7684\u8868\u683c\u4e2d\u7684\u6570\u636e\u7684\u65f6\u5019,\u9700\u8981\u66f4\u65b0\u9996\u9875\u7684\u7f13\u5b58\u6570\u636e \u76f4\u63a5\u5728admin\u524d\u9762\u914d\u7f6e\u7684\u66f4\u65b0index\u9759\u6001\u9875\u9762\u7684\u65f6\u5019\u8fdb\u884c\u7f13\u5b58\u7684\u6e05\u9664\u5c31ok\u4e86 \u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u7f13\u5b58\u9875\u9762\u7684\u8fc7\u671f\u65f6\u95f4\u5462? \u5047\u8bbe\u540e\u53f0\u7ba1\u7406\u5458\u8fd9\u91cc\u6ca1\u6709\u6e05\u9664\u7f13\u5b58,\u6211\u4eec\u8bbe\u7f6e\u4e86\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4,\u90a3\u4e48\u8fc7\u671f\u4e86\u6211\u4eec\u5c31\u53ef\u4ee5\u907f\u514d\u4e00\u76f4\u4e0d\u66f4\u65b0\u540e\u53f0\u7684\u6570\u636e 44 \u603b\u7ed3 \u00b6 1.\u7f51\u7ad9\u672c\u8eab\u6027\u80fd\u7684\u4f18\u5316,\u51cf\u5c11\u6570\u636e\u7684\u67e5\u8be2\u7684\u6b21\u6570. \u9996\u9875\u9875\u9762\u7684\u9759\u6001\u5316,\u9875\u9762\u6570\u636e\u7684\u7f13\u5b58 2.\u9632\u6b62\u6076\u610f\u7684\u529f\u80fd,DDOS\u653b\u51fb \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7f13\u5b58,\u90a3\u4e48\u8fd9\u4e48\u591a\u7684\u8bf7\u6c42\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u76f4\u63a5\u5c31\u5d29\u4e86 45 \u8be6\u60c5\u9875\u7684\u8bbe\u8ba1 \u00b6 46 \u5546\u54c1\u8be6\u60c5\u4fe1\u606f\u7684\u83b7\u53d6\u548c\u663e\u793a \u6700\u7ec8\u8981\u5b9e\u73b0\u7684\u6548\u679c \u7b80\u5355\u7684\u8bbe\u8ba1 \u7531\u4e8e\u6570\u636e\u5e93\u7684\u6570\u636e\u6ca1\u6709,\u540e\u9762\u8981\u81ea\u5df1\u6dfb\u52a0,\u4e3b\u8981\u5f97\u4fee\u6539\u5f88\u591a\u5730\u65b9,\u4ee5\u540e\u4e0d\u66f4\u65b0\u4e86,\u5269\u4e0b\u7684\u5176\u5b9e\u5c31\u662f\u90e8\u7f72\u6bd4\u8f83\u91cd\u8981,\u5176\u4ed6\u7684\u5570\u91cc\u5570\u55e6\u6ca1\u5565\u5927\u7684\u7528\u5904","title":"013 \u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#36","text":"\u9996\u5148\u662findex\u9875\u9762\u7684\u7ee7\u627f(base.html) \u7136\u540e\u662fview\u89c6\u56fe url\u7684\u914d\u7f6e \u4e0b\u9762\u8fdb\u884c\u8be6\u7ec6\u7684\u914d\u7f6e 37 \u9996\u9875\u5185\u5bb9\u83b7\u53d6\u548c\u5c55\u793a 38 redis\u5b58\u50a8\u8d2d\u7269\u8f66\u8bb0\u5f55\u5206\u6790 \u4fdd\u5b58\u8d2d\u7269\u8f66\u4fe1\u606f\u7684\u6570\u636e\u8bbe\u8ba1 HLEN key http://redis.cn/commands/hlen.html \u4e0b\u9762\u8fdb\u884c\u4e00\u4e2a\u6a21\u62df:\u5206\u522b\u770b\u4e00\u4e0b\u672a\u767b\u5f55\u8ddf\u767b\u5f55\u7684\u72b6\u6001 \u6211\u4eec\u9996\u5148\u8fde\u63a5mysql\u6570\u636e\u5e93\u770b\u4e00\u4e0b\u6211\u4eec\u7528\u6237\u7684id","title":"36\u5546\u54c1\u6a21\u578b\u7c7b\u6982\u8ff0(\u5176\u5b9e\u8fd9\u4e2a\u6211\u770b\u5b8c\u9875\u9762\u9759\u6001\u5316\u624d\u8fc7\u6765\u770b\u7684,\u767e\u5ea6\u4e91\u7684\u89c6\u9891\u628a\u8fd9\u4e24\u5757\u5f04\u6df7\u4e86,\u8981\u5148\u770b\u9996\u9875,\u624d\u770b\u9759\u6001\u5316)"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#39","text":"39 \u9996\u9875\u9875\u9762\u9759\u6001\u5316 (\u7528\u6237\u6ca1\u767b\u5f55\u65f6\u663e\u793a\u7684\u754c\u9762\u9759\u6001\u7684) \u5199\u4e00\u4e2a\u65b0\u7684celery\u7684tasks\u4efb\u52a1 \u8fd9\u91cc\u9700\u8981\u5728\u6a21\u677f\u4e2d\u65b0\u5efa\u4e24\u4e2a\u6a21\u677fhtml 40 \u914d\u7f6engnix\u63d0\u4ea4\u9759\u6001\u9875\u9762 \u4e0a\u9762\u7684\u6709\u4e2d\u6587\u8def\u5f84\u4e0d\u884c \u8fd9\u4e2a\u968f\u624b\u6d4b\u8bd5 \u8fd9\u4e2a\u5c31\u662f\u5427\u9879\u76ee\u62f7\u8d1d\u4e00\u4efd\u653e\u7f6e\u5230\u82f1\u6587\u8def\u5f84\u4e0b \u91cd\u542fnginx \u53ef\u4ee5\u770b\u5230\u6709\u4e24\u4e2a\u76d1\u542c\u4e00\u4e2a\u662f80\u7aef\u53e3,\u4e00\u4e2a\u662f8888\u7aef\u53e3,\u8fd9\u4e2a\u9875\u9762\u4e2d\u7684\u56fe\u7247\u662fnginx\u8fdb\u884c\u63d0\u4f9b\u7684","title":"39 \u9996\u9875\u7684"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#windowsdjango","text":"","title":"\u7531\u4e8e\u81ea\u5df1\u4f7f\u7528windows\u6bd4\u8f83\u591a\uff0c\u8fd8\u662f\u9700\u8981\u628a\u9664\u4e86django\u670d\u52a1\u5668\u4e4b\u5916\u7684\u7ec4\u4ef6\u653e\u5230\u53e6\u4e00\u53f0\u7535\u8111\u7684\u865a\u62df\u673a\u4e0a\uff0c\u4e0b\u9762\u662f\u6539\u52a8\u7684\u5730\u65b9"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#_1","text":"\u5b89\u88c5\u9700\u8981\u7684\u5305(\u5c31\u662f\u90a3\u4e00\u4e9bdjango\u7b49\u524d\u9762\u7528\u5230\u7684) \u5b89\u88c5fdfs(\u6ce8\u610f\u65b0\u5efa\u7684\u865a\u62df\u673a\u6ca1\u6709GCC,\u4ee5\u53camake\u9700\u8981\u8fdb\u884c\u5b89\u88c5\uff0c\u5e76\u4e14\u6ce8\u610f\u5b89\u88c5\u8fc7\u4e00\u6b21\u7684\u662f\u9700\u8981\u91cd\u65b0\u89e3\u538b\u7684\uff0c\u6709\u4e9b\u5305\u88ab\u526a\u5207\u4e86) 3.\u7531\u4e8e\u662f\u65b0\u5b89\u88c5\u7684\u865a\u62df\u673a\u4e00\u4e9b\u4f9d\u8d56\u6ca1\u6709\u5b89\u88c5,\u8981\u8fdb\u884c\u5b89\u88c5 \u53c2\u8003\u7f51\u5740https:// www.jb51.net/article/80468.htm \u4ee5\u53cahttps://blog.csdn.net/wu_cai_/article/details/80278611","title":"\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#mysql","text":"\u8fdc\u7a0b\u865a\u62df\u673a\u521b\u5efa\u6570\u636e\u5e93 \u8bbe\u7f6e\u8fdc\u7a0b\u767b\u5f55\u7684\u6743\u9650 \u672c\u673a\u8fdc\u7a0b\u767b\u5f55\u6d4b\u8bd5 \u9879\u76ee\u6570\u636e\u5e93\u7684\u66f4\u6539","title":"mysql\u6570\u636e\u5e93\u7684\u914d\u7f6e"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#redisredis","text":"\u9996\u5148\u7ed1\u5b9a\u865a\u62df\u673a\u7684ip Redis\u7684\u914d\u7f6e\u4fe1\u606f\u5728/etc/redis/redis.conf\u4e0b\u3002 \u67e5\u770b sudo gedit /etc/redis/redis.conf \u7ed1\u5b9aip\uff1a\u5982\u679c\u9700\u8981\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u53ef\u5c06\u6b64\u2f8f\u6ce8\u91ca\uff0c\u6216\u7ed1\u5b9a\u2f00\u4e2a\u771f\u5b9eip bind 127.0.0.1 \u6539\u6210 bind 192.168.124.77 \u81ea\u5df1\u7684\u865a\u62df\u673aip\u5730\u5740 \u91cd\u542fredis \u91cd\u542f sudo service redis restart \u53ef\u4ee5\u770b\u5230ip\u5730\u5740\u5df2\u7ecf\u6539\u53d8 4.\u4fee\u6539celery\u53d1\u9001\u90ae\u4ef6\u7ed1\u5b9a\u7684redis\u7684ip \u540c\u65f6\u6539\u53d8\u90ae\u4ef6\u6fc0\u6d3b\u7ed1\u5b9a\u7684ip \u6539\u53d8redis\u7f13\u5b58\u7ed1\u5b9a\u7684ip \u914d\u7f6eDjango\u7f13\u5b58\u6570\u636e\u5e93","title":"redis\u6570\u636e\u5e93\u7684\u914d\u7f6e(\u53c2\u8003redis\u7684\u8bfe\u4ef6)"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#fdfsip","text":"","title":"\u914d\u7f6efdfs\u670d\u52a1\u5668\u7684ip"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#_2","text":"","title":"\u8fc1\u79fb\u6570\u636e\u5e93"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#celer","text":"","title":"\u5c06\u9879\u76ee\u590d\u5236\u4e00\u4efd\u653e\u5230\u865a\u62df\u673a\u4e0a\uff0c\u5f00\u542fceler\u4efb\u52a1"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#_3","text":"\u6536\u5230\u6ce8\u518c\u6fc0\u6d3b\u90ae\u4ef6","title":"\u6ce8\u518c\u6d4b\u8bd5"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#redis","text":"1.\u8fdc\u7a0b\u8fde\u63a5redis\u7684\u547d\u4ee4 redis-cli -h 192.168.124.77 -p 6379 2.\u67e5\u770b","title":"redis\u7f13\u5b58\u914d\u7f6e\u67e5\u770b"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#_4","text":"","title":"\u521b\u5efa\u540e\u53f0\u7ba1\u7406\u5458"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#nginx80","text":"\u91cd\u542fnginx","title":"\u914d\u7f6enginx80\u7aef\u53e3\u7684\u914d\u7f6e"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#index","text":"","title":"\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7684index\u9875\u9762"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#_5","text":"\u7ec8\u4e8e\u914d\u7f6e\u597d\u4e86\u6211\u7684ubuntu\u865a\u62df\u673a\u4ee5\u53cawindows \u65e5\u5e38\u4f7f\u7528\u4e0d\u5f97\u4e0d\u7528windows\u4e5f\u662f\u5f88\u65e0\u5948\u554a","title":"\u5728\u672c\u673a\u7684\u6d4f\u89c8\u5668\u6d4b\u8bd5"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#41-adminindex","text":"\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u6211\u4eec\u9700\u8981\u5728admin\u4e2d\u8fdb\u884cadmin.Modeladmin\u7684\u7ee7\u627f\u7c7b.\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd \u53ef\u4ee5\u770b\u5230\u53c8\u591a\u4e86\u4e00\u5f20\u56fe\u7247 \u4e0b\u9762\u5728\u8bd5\u4e00\u6b21 \u518d\u6b21\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\u9759\u6001\u9875\u9762\u53d1\u751f\u4e86\u6539\u53d8 \u770b\u4e00\u4e0bcelery\u7684\u4efb\u52a1\u6539\u53d8 \u4f46\u662f\u6211\u4eec\u7528\u591a\u4e86\u597d\u591a\u7684\u8868,\u4f46\u662f\u6211\u4eec\u8981\u662f\u6240\u6709\u7684\u7ba1\u7406\u7c7b\u9700\u8981\u91cd\u5199\u5c31\u5f88\u9ebb\u70e6,\u5c31\u62bd\u8c61\u7236\u7c7b\u7136\u540e\u8fdb\u884c\u7ee7\u627f \u5176\u5b9e\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u6d41\u7a0b 42 \u9759\u6001index\u9875\u9762\u548c index View\u7684\u8c03\u5ea6 \u5b9e\u9645\u90e8\u7f72\u670d\u52a1\u5668,\u4e0d\u80fd\u8ba9\u7528\u6237\u76f4\u63a5\u8bbf\u95eenginx\u670d\u52a1\u5668\u7684ip\u5730\u5740 \u8fd9\u91cc\u5c31\u7275\u626f\u4e00\u4e2a\u95ee\u9898,\u6211\u4eec\u9996\u9875\u7684\u8fd4\u56de\u662f\u9759\u6001\u9875\u9762\u8fd8\u662f\u6211\u4eec\u7684index view\u7684\u89c6\u56fe \u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4e00\u4e2anginx\u8c03\u5ea6\u670d\u52a1\u5668 \u7ed9\u7528\u6237\u66b4\u9732\u7684ip\u5c31\u662fnginx\u7684ip \u6700\u540e\u7684\u4efb\u52a1\u8c03\u5ea6\u5e94\u8be5\u662f\u8fd9\u6837\u7684 \u76ee\u524d\u5148\u505a\u5230\u8fd9\u6837\u5c31ok\u4e86,\u540e\u9762\u4f1a\u7ee7\u7eed\u505a\u7684 43 \u9996\u9875\u6570\u636e\u7f13\u5b58\u8bbe\u7f6e\u548c\u83b7\u53d6 \u9875\u9762\u6570\u636e\u7684\u7f13\u5b58: \u628a\u9875\u9762\u4f7f\u7528\u7684\u6570\u636e\u5b58\u653e\u5728\u7f13\u5b58\u4e2d,\u5f53\u518d\u6b21\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u7684\u65f6,\u5148\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6,\u5982\u679c\u83b7\u53d6\u4e0d\u5230,\u518d\u53bb\u67e5\u8be2\u6570\u636e\u5e93,\u51cf\u5c11\u6570\u636e\u5e93\u67e5\u8be2\u7684\u6b21\u6570 \u53c2\u8003: https://yiyibooks.cn/xx/django_182/topics/cache.html \u5f00\u59cb\u8bbe\u7f6e\u7f13\u5b58 \u66f4\u65b0\u7f13\u5b58 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u66f4\u65b0\u9996\u9875\u7684\u7f13\u5b58\u6570\u636e? \u5f53\u7ba1\u7406\u5458\u540e\u53f0\u4fee\u6539\u9996\u9875\u4fe1\u606f\u5bf9\u5e94\u7684\u8868\u683c\u4e2d\u7684\u6570\u636e\u7684\u65f6\u5019,\u9700\u8981\u66f4\u65b0\u9996\u9875\u7684\u7f13\u5b58\u6570\u636e \u76f4\u63a5\u5728admin\u524d\u9762\u914d\u7f6e\u7684\u66f4\u65b0index\u9759\u6001\u9875\u9762\u7684\u65f6\u5019\u8fdb\u884c\u7f13\u5b58\u7684\u6e05\u9664\u5c31ok\u4e86 \u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u7f13\u5b58\u9875\u9762\u7684\u8fc7\u671f\u65f6\u95f4\u5462? \u5047\u8bbe\u540e\u53f0\u7ba1\u7406\u5458\u8fd9\u91cc\u6ca1\u6709\u6e05\u9664\u7f13\u5b58,\u6211\u4eec\u8bbe\u7f6e\u4e86\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4,\u90a3\u4e48\u8fc7\u671f\u4e86\u6211\u4eec\u5c31\u53ef\u4ee5\u907f\u514d\u4e00\u76f4\u4e0d\u66f4\u65b0\u540e\u53f0\u7684\u6570\u636e","title":"41 admin\u7ba1\u7406\u66f4\u65b0\u9996\u9875\u6570\u636e\u8868\u65f6\u91cd\u65b0\u751f\u6210index\u9759\u6001\u9875\u9762"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#44","text":"1.\u7f51\u7ad9\u672c\u8eab\u6027\u80fd\u7684\u4f18\u5316,\u51cf\u5c11\u6570\u636e\u7684\u67e5\u8be2\u7684\u6b21\u6570. \u9996\u9875\u9875\u9762\u7684\u9759\u6001\u5316,\u9875\u9762\u6570\u636e\u7684\u7f13\u5b58 2.\u9632\u6b62\u6076\u610f\u7684\u529f\u80fd,DDOS\u653b\u51fb \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7f13\u5b58,\u90a3\u4e48\u8fd9\u4e48\u591a\u7684\u8bf7\u6c42\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u76f4\u63a5\u5c31\u5d29\u4e86","title":"44 \u603b\u7ed3"},{"location":"python-web/013-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u7b80\u7565\u4e2d/#45","text":"46 \u5546\u54c1\u8be6\u60c5\u4fe1\u606f\u7684\u83b7\u53d6\u548c\u663e\u793a \u6700\u7ec8\u8981\u5b9e\u73b0\u7684\u6548\u679c \u7b80\u5355\u7684\u8bbe\u8ba1 \u7531\u4e8e\u6570\u636e\u5e93\u7684\u6570\u636e\u6ca1\u6709,\u540e\u9762\u8981\u81ea\u5df1\u6dfb\u52a0,\u4e3b\u8981\u5f97\u4fee\u6539\u5f88\u591a\u5730\u65b9,\u4ee5\u540e\u4e0d\u66f4\u65b0\u4e86,\u5269\u4e0b\u7684\u5176\u5b9e\u5c31\u662f\u90e8\u7f72\u6bd4\u8f83\u91cd\u8981,\u5176\u4ed6\u7684\u5570\u91cc\u5570\u55e6\u6ca1\u5565\u5927\u7684\u7528\u5904","title":"45 \u8be6\u60c5\u9875\u7684\u8bbe\u8ba1"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/","text":"windows\u4e0b\u4f7f\u7528 fdfs_client \u4e0a\u4f20\u6587\u4ef6 \u00b6 \u76ee\u5f55 windows \u4e0b\u4f7f\u7528 fdfs_client \u5b9e\u73b0\u6587\u4ef6\u4e0a\u4f20 1\u3001\u5b89\u88c5 fdfs_client \u6a21\u5757 2\u3001\u4fee\u6539 fdfs_client/storage_client.py \u6587\u4ef6 3\u3001\u5b89\u88c5 mutagen \u548c requests 4\u3001\u4fee\u6539 fastdfs \u914d\u7f6e\u6587\u4ef6: client_config 5\u3001\u6587\u4ef6\u4e0a\u4f20\u6d4b\u8bd5 \u5728\u4e0a\u4e00\u7bc7\u4e2d\u4ecb\u7ecd\u4e86\u4f7f\u7528 FastDFS \u4e0e Nginx \u5728 Linux \u7cfb\u7edf\u4e0a\u5b9e\u73b0\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668\uff0c\u73b0\u5728\u4ecb\u7ecd\u5728 windows \u7cfb\u7edf\u4e0b\u4f7f\u7528\u8be5\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668\u3002 \u9700\u8981\u5b89\u88c5 fdfs_client \u6a21\u5757\u548c\u914d\u7f6e client.conf \u914d\u7f6e\u6587\u4ef6\u3002 \u4e0b\u8f7d fdfs_client \u6a21\u5757\u548c client.conf \u914d\u7f6e\u6587\u4ef6\uff1a \u70b9\u6211\u4e0b\u8f7d windows \u4e0b\u4f7f\u7528 fdfs_client \u5b9e\u73b0\u6587\u4ef6\u4e0a\u4f20 \u00b6 1\u3001\u5b89\u88c5 fdfs_client \u6a21\u5757 \u00b6 \u5728 windows \u73af\u5883\u4e0b\u4f7f\u7528 pip install fdfs_client \u4f1a\u62a5\u9519\uff0c\u6240\u4ee5\u76f4\u63a5\u5b89\u88c5\u662f\u4e0d\u884c\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u76f4\u63a5\u628a\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684 fdfs_client \u6a21\u5757 copy \u5230 python\u89e3\u91ca\u5668\u7684 /lib \u6587\u4ef6\u5939\u4e2d\u3002 2\u3001\u4fee\u6539 fdfs_client/storage_client.py \u6587\u4ef6 \u00b6 \u9700\u8981\u4fee\u6539 fdfs_client \u6a21\u5757\u4e2d\u7684 storage_client.py \u6587\u4ef6\uff0c\u5c06\u7b2c12\u884c\u5220\u9664\u6216\u6ce8\u91ca\uff08\u5426\u5219\u4f7f\u7528\u65f6\u4f1a\u62a5\u9519 ImportError: No module named sendfile\uff09 3\u3001\u5b89\u88c5 mutagen \u548c requests \u00b6 pip install mutagen pip install requests 4\u3001\u4fee\u6539 fastdfs \u914d\u7f6e\u6587\u4ef6: client_config \u00b6 \u2460 \u4fee\u6539 base_path \u4e3a\u4f60 windows \u7535\u8111\u4e00\u4e2a\u771f\u5b9e\u5b58\u5728\u7684\u6587\u4ef6\u5939 \u4f8b\u5982\uff1a base_path=E:\\fdfs_log \u2461 \u4fee\u6539 tracker_server \u4e3a\u4f60 Linux \u7cfb\u7edf\u7684 IP \u5730\u5740 + :22122 \u4f8b\u5982\uff1a tracker_server=192.168.159.140:22122 # connect timeout in seconds # default value is 30s connect_timeout=30 # network timeout in seconds # default value is 30s network_timeout=60 # the base path to store log files base_path=E:\\fdfs_log # tracker_server can ocur more than once, and tracker_server format is # \"host:port\", host can be hostname or ip address tracker_server=192.168.159.140:22122 #standard log level as syslog, case insensitive, value list: ### emerg for emergency ### alert ### crit for critical ### error ### warn for warning ### notice ### info ### debug log_level=info # if use connection pool # default value is false # since V4.05 use_connection_pool = false # connections whose the idle time exceeds this time will be closed # unit: second # default value is 3600 # since V4.05 connection_pool_max_idle_time = 3600 # if load FastDFS parameters from tracker server # since V4.05 # default value is false load_fdfs_parameters_from_tracker=false # if use storage ID instead of IP address # same as tracker.conf # valid only when load_fdfs_parameters_from_tracker is false # default value is false # since V4.05 use_storage_id = false # specify storage ids filename, can use relative or absolute path # same as tracker.conf # valid only when load_fdfs_parameters_from_tracker is false # since V4.05 storage_ids_filename = storage_ids.conf #HTTP settings http.tracker_server_port=80 #use \"#include\" directive to include HTTP other settiongs ##include http.conf 5\u3001\u6587\u4ef6\u4e0a\u4f20\u6d4b\u8bd5 \u00b6 \u5bfc\u5165\u6a21\u5757\uff1a from fdfs_client.client import Fdfs_client \u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\uff1a \u6ce8\u610f\uff1awindows\u73af\u5883\u4e0b\u7edd\u5bf9\u8def\u5f84\u4f1a\u53d1\u751f\u8f6c\u4e49\uff0c\u9700\u8981\u52a0\u4e0a \"r\" \u8bf4\u660e\u662f\u539f\u751f\u5b57\u7b26\u4e32 client = Fdfs_client(r'\u914d\u7f6e\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84') \u4e0a\u4f20\u56fe\u7247\uff1a \u6ce8\u610f\uff1awindows\u73af\u5883\u4e0b\u7edd\u5bf9\u8def\u5f84\u4f1a\u53d1\u751f\u8f6c\u4e49\uff0c\u9700\u8981\u52a0\u4e0a \"r\" \u8bf4\u660e\u662f\u539f\u751f\u5b57\u7b26\u4e32 client.upload_by_filename(r'\u56fe\u7247\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84') \u5982\u679c\u4f60\u770b\u5230\u5982\u4e0b\u753b\u9762\u4f60\u5c31\u6210\u529f\u4e86\uff01\uff01\uff01","title":"014 windows\u4e0b\u4f7f\u7528_fdfs_client-\u4e0a\u4f20\u6587\u4ef6"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#windows-fdfs_client","text":"\u76ee\u5f55 windows \u4e0b\u4f7f\u7528 fdfs_client \u5b9e\u73b0\u6587\u4ef6\u4e0a\u4f20 1\u3001\u5b89\u88c5 fdfs_client \u6a21\u5757 2\u3001\u4fee\u6539 fdfs_client/storage_client.py \u6587\u4ef6 3\u3001\u5b89\u88c5 mutagen \u548c requests 4\u3001\u4fee\u6539 fastdfs \u914d\u7f6e\u6587\u4ef6: client_config 5\u3001\u6587\u4ef6\u4e0a\u4f20\u6d4b\u8bd5 \u5728\u4e0a\u4e00\u7bc7\u4e2d\u4ecb\u7ecd\u4e86\u4f7f\u7528 FastDFS \u4e0e Nginx \u5728 Linux \u7cfb\u7edf\u4e0a\u5b9e\u73b0\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668\uff0c\u73b0\u5728\u4ecb\u7ecd\u5728 windows \u7cfb\u7edf\u4e0b\u4f7f\u7528\u8be5\u5206\u5e03\u5f0f\u56fe\u7247\u670d\u52a1\u5668\u3002 \u9700\u8981\u5b89\u88c5 fdfs_client \u6a21\u5757\u548c\u914d\u7f6e client.conf \u914d\u7f6e\u6587\u4ef6\u3002 \u4e0b\u8f7d fdfs_client \u6a21\u5757\u548c client.conf \u914d\u7f6e\u6587\u4ef6\uff1a \u70b9\u6211\u4e0b\u8f7d","title":"windows\u4e0b\u4f7f\u7528 fdfs_client \u4e0a\u4f20\u6587\u4ef6"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#windows-fdfs_client_1","text":"","title":"windows \u4e0b\u4f7f\u7528 fdfs_client \u5b9e\u73b0\u6587\u4ef6\u4e0a\u4f20"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#1-fdfs_client","text":"\u5728 windows \u73af\u5883\u4e0b\u4f7f\u7528 pip install fdfs_client \u4f1a\u62a5\u9519\uff0c\u6240\u4ee5\u76f4\u63a5\u5b89\u88c5\u662f\u4e0d\u884c\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u76f4\u63a5\u628a\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684 fdfs_client \u6a21\u5757 copy \u5230 python\u89e3\u91ca\u5668\u7684 /lib \u6587\u4ef6\u5939\u4e2d\u3002","title":"1\u3001\u5b89\u88c5 fdfs_client \u6a21\u5757"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#2-fdfs_clientstorage_clientpy","text":"\u9700\u8981\u4fee\u6539 fdfs_client \u6a21\u5757\u4e2d\u7684 storage_client.py \u6587\u4ef6\uff0c\u5c06\u7b2c12\u884c\u5220\u9664\u6216\u6ce8\u91ca\uff08\u5426\u5219\u4f7f\u7528\u65f6\u4f1a\u62a5\u9519 ImportError: No module named sendfile\uff09","title":"2\u3001\u4fee\u6539 fdfs_client/storage_client.py \u6587\u4ef6"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#3-mutagen-requests","text":"pip install mutagen pip install requests","title":"3\u3001\u5b89\u88c5 mutagen \u548c requests"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#4-fastdfs-client_config","text":"\u2460 \u4fee\u6539 base_path \u4e3a\u4f60 windows \u7535\u8111\u4e00\u4e2a\u771f\u5b9e\u5b58\u5728\u7684\u6587\u4ef6\u5939 \u4f8b\u5982\uff1a base_path=E:\\fdfs_log \u2461 \u4fee\u6539 tracker_server \u4e3a\u4f60 Linux \u7cfb\u7edf\u7684 IP \u5730\u5740 + :22122 \u4f8b\u5982\uff1a tracker_server=192.168.159.140:22122 # connect timeout in seconds # default value is 30s connect_timeout=30 # network timeout in seconds # default value is 30s network_timeout=60 # the base path to store log files base_path=E:\\fdfs_log # tracker_server can ocur more than once, and tracker_server format is # \"host:port\", host can be hostname or ip address tracker_server=192.168.159.140:22122 #standard log level as syslog, case insensitive, value list: ### emerg for emergency ### alert ### crit for critical ### error ### warn for warning ### notice ### info ### debug log_level=info # if use connection pool # default value is false # since V4.05 use_connection_pool = false # connections whose the idle time exceeds this time will be closed # unit: second # default value is 3600 # since V4.05 connection_pool_max_idle_time = 3600 # if load FastDFS parameters from tracker server # since V4.05 # default value is false load_fdfs_parameters_from_tracker=false # if use storage ID instead of IP address # same as tracker.conf # valid only when load_fdfs_parameters_from_tracker is false # default value is false # since V4.05 use_storage_id = false # specify storage ids filename, can use relative or absolute path # same as tracker.conf # valid only when load_fdfs_parameters_from_tracker is false # since V4.05 storage_ids_filename = storage_ids.conf #HTTP settings http.tracker_server_port=80 #use \"#include\" directive to include HTTP other settiongs ##include http.conf","title":"4\u3001\u4fee\u6539 fastdfs \u914d\u7f6e\u6587\u4ef6: client_config"},{"location":"python-web/014-windows\u4e0b\u4f7f\u7528-fdfs_client-\u4e0a\u4f20\u6587\u4ef6/#5","text":"\u5bfc\u5165\u6a21\u5757\uff1a from fdfs_client.client import Fdfs_client \u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\uff1a \u6ce8\u610f\uff1awindows\u73af\u5883\u4e0b\u7edd\u5bf9\u8def\u5f84\u4f1a\u53d1\u751f\u8f6c\u4e49\uff0c\u9700\u8981\u52a0\u4e0a \"r\" \u8bf4\u660e\u662f\u539f\u751f\u5b57\u7b26\u4e32 client = Fdfs_client(r'\u914d\u7f6e\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84') \u4e0a\u4f20\u56fe\u7247\uff1a \u6ce8\u610f\uff1awindows\u73af\u5883\u4e0b\u7edd\u5bf9\u8def\u5f84\u4f1a\u53d1\u751f\u8f6c\u4e49\uff0c\u9700\u8981\u52a0\u4e0a \"r\" \u8bf4\u660e\u662f\u539f\u751f\u5b57\u7b26\u4e32 client.upload_by_filename(r'\u56fe\u7247\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84') \u5982\u679c\u4f60\u770b\u5230\u5982\u4e0b\u753b\u9762\u4f60\u5c31\u6210\u529f\u4e86\uff01\uff01\uff01","title":"5\u3001\u6587\u4ef6\u4e0a\u4f20\u6d4b\u8bd5"},{"location":"python-web/014-\u5929\u5929\u751f\u9c9c\u9879\u76ee\u6307\u4ee4/","text":"python manage.py runserver 192.168.124.9:8000 celery -A celery_tasks.tasks worker -l info fdfs_trackerd /etc/fdfs/tracker.conf start fdfs_storaged /etc/fdfs/storage.conf start sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart sudo /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf stop sudo /usr/bin/fdfs_storaged /etc/fdfs/storage.conf stop sudo /usr/local/nginx/sbin/nginx sudo /usr/local/nginx/sbin/nginx -s reload sudo /usr/local/nginx/sbin/nginx -s stop","title":"014 \u5929\u5929\u751f\u9c9c\u9879\u76ee\u6307\u4ee4"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/","text":"\u5b89\u88c5\u6b65\u9aa4 \u00b6 1. \u5bfc\u51fa\u4f9d\u8d56 \u00b6 windows\uff08\u6b64\u65b9\u6cd5\u9700\u8981\u627e\u4e00\u4e2a\u5b89\u88c5\u597d\u7684\u73af\u5883\u5bfc\u51fawhl\u6587\u4ef6\uff0c\u7136\u540e\u5bfc\u5165\u5230\u65b0\u73af\u5883\u4e2d\u53bb\uff09: \u6fc0\u6d3b\u5f53\u524d\u73af\u5883 activate xxx \u83b7\u53d6whl\u6587\u4ef6 pip freeze > requestments . txt #pip freee\u7684\u610f\u601d\u662f\u67e5\u770b\u5f53\u524dpython\u5b89\u88c5\u4e86\u54ea\u4e9b\u5e93\uff0c\u4fdd\u5b58\u5728requestments.txt\u4e2d pip download - r requestments . txt - d ./ pip_packages #\u4ece\u5f53\u524d\u73af\u5883\u7684\u7f51\u7edc\u4e2d\u4e0b\u8f7drequestments.txt\u4e2d\u5199\u7684\u5305\uff0c\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u7684pip_packages\u76ee\u5f55\u4e2d\uff0c\u8fd9\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\uff0c\u91cc\u9762\u6709\u5f88\u591a\u4f9d\u8d56\uff0c\u8fd8\u6709\u4e00\u4e9bwhl\u6587\u4ef6 \u5f53\u7136\u4ece\u7f51\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u7f51\u5740https://pypi.python.org/pypi/ \u53cb\u60c5\u63d0\u793a\uff0c\u7092\u9e21\u6162 2. \u5b89\u88c5python \u00b6 \u53f3\u952e\u9009\u62e9\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u5b89\u88c5python \u5f39\u51fa\u7528\u6237\u8d26\u6237\u63a7\u5236,\u9009\u62e9: \u662f \u8fdb\u884c\u5b89\u88c5\u8bb0\u5f97\u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c\u6210,close\u5c31\u53ef\u4ee5\u4e86 3. \u5b89\u88c5\u4f9d\u8d56 \u00b6 \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00\u547d\u4ee4\u884c \u7528\u6237\u8d26\u6237\u63a7\u5236, \u9009\u62e9: \u662f \u8fdb\u5165\u4f9d\u8d56\u5b89\u88c5\u5305\u6240\u5728\u7684\u8def\u5f84 \u8f93\u5165\u547d\u4ee4\u5b89\u88c5\u6240\u6709\u7684\u4f9d\u8d56 pip install -- no - index -- find - links = pip_packages - r requestments . txt # --find-links\u6307\u5b9a\u7684\u662f\u5305\u6587\u4ef6\u7684\u5b58\u653e\u5730\u5740\uff0c-r\u6307\u5b9a\u7684\u662ftxt\u6587\u4ef6\u7684\u4f4d\u7f6e \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u4fdd\u7559\u6216\u8005\u5220\u9664\u67d0\u4e9b\u5305\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\u5c0f\u5fc3\u4f9d\u8d56\u54e6 \u5b89\u88c5\u6210\u529f\u7684\u72b6\u6001 \u67e5\u770b\u4e00\u4e0b\u662f\u5426\u771f\u7684\u5b89\u88c5\u5b8c\u6210 pip list 4.\u9632\u706b\u5899\u914d\u7f6e \u00b6 \u6253\u5f00\u9632\u706b\u5899 \u8fdb\u5165\u9ad8\u7ea7\u8bbe\u7f6e \u5165\u7ad9\u89c4\u5219\u7684\u8bbe\u7f6e \u65b0\u5efa\u89c4\u5219 \u9009\u62e9\u3010\u7aef\u53e3\u3011\uff0c\u7136\u540e\u4e0b\u4e00\u6b65 \u8bbe\u7f6e\u7aef\u53e3\uff08\u7528\u4ec0\u4e48\u7aef\u53e3\u8bbe\u7f6e\u4ec0\u4e48\u7aef\u53e3\uff09\uff0c\u8fd9\u91cc\u4ee58000\u4f5c\u4e3a\u6f14\u793a \u9009\u62e9\u3010\u5141\u8bb8\u8fde\u63a5\u3011 \u8bbe\u7f6e\u4f55\u65f6\u5e94\u7528\u6b64\u89c4\u5219 \u8bbe\u7f6e\u89c4\u5219\u540d\u79f0 \u8bbe\u7f6e\u5b8c\u6210\u7684\u72b6\u6001 5.\u9879\u76ee\u542f\u52a8\u914d\u7f6e\uff08django\u670d\u52a1\u5668\uff09 \u00b6 \u7ba1\u7406\u5458\u6743\u9650\u542f\u52a8\u547d\u4ee4\u884c \u547d\u4ee4\u884c\u8fdb\u5165\u7a0b\u5e8f\u6240\u5728\u6587\u4ef6\u5939 \u542f\u52a8\u670d\u52a1\u5668 6.\u8fdc\u7a0b\u8bbf\u95ee \u00b6 \u8f93\u5165ip\u53ca\u7aef\u53e3\u53f7 192.168.124.108:8000/index","title":"015 python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#_1","text":"","title":"\u5b89\u88c5\u6b65\u9aa4"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#1","text":"windows\uff08\u6b64\u65b9\u6cd5\u9700\u8981\u627e\u4e00\u4e2a\u5b89\u88c5\u597d\u7684\u73af\u5883\u5bfc\u51fawhl\u6587\u4ef6\uff0c\u7136\u540e\u5bfc\u5165\u5230\u65b0\u73af\u5883\u4e2d\u53bb\uff09: \u6fc0\u6d3b\u5f53\u524d\u73af\u5883 activate xxx \u83b7\u53d6whl\u6587\u4ef6 pip freeze > requestments . txt #pip freee\u7684\u610f\u601d\u662f\u67e5\u770b\u5f53\u524dpython\u5b89\u88c5\u4e86\u54ea\u4e9b\u5e93\uff0c\u4fdd\u5b58\u5728requestments.txt\u4e2d pip download - r requestments . txt - d ./ pip_packages #\u4ece\u5f53\u524d\u73af\u5883\u7684\u7f51\u7edc\u4e2d\u4e0b\u8f7drequestments.txt\u4e2d\u5199\u7684\u5305\uff0c\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u7684pip_packages\u76ee\u5f55\u4e2d\uff0c\u8fd9\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\uff0c\u91cc\u9762\u6709\u5f88\u591a\u4f9d\u8d56\uff0c\u8fd8\u6709\u4e00\u4e9bwhl\u6587\u4ef6 \u5f53\u7136\u4ece\u7f51\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u7f51\u5740https://pypi.python.org/pypi/ \u53cb\u60c5\u63d0\u793a\uff0c\u7092\u9e21\u6162","title":"1. \u5bfc\u51fa\u4f9d\u8d56"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#2-python","text":"\u53f3\u952e\u9009\u62e9\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u5b89\u88c5python \u5f39\u51fa\u7528\u6237\u8d26\u6237\u63a7\u5236,\u9009\u62e9: \u662f \u8fdb\u884c\u5b89\u88c5\u8bb0\u5f97\u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c\u6210,close\u5c31\u53ef\u4ee5\u4e86","title":"2. \u5b89\u88c5python"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#3","text":"\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00\u547d\u4ee4\u884c \u7528\u6237\u8d26\u6237\u63a7\u5236, \u9009\u62e9: \u662f \u8fdb\u5165\u4f9d\u8d56\u5b89\u88c5\u5305\u6240\u5728\u7684\u8def\u5f84 \u8f93\u5165\u547d\u4ee4\u5b89\u88c5\u6240\u6709\u7684\u4f9d\u8d56 pip install -- no - index -- find - links = pip_packages - r requestments . txt # --find-links\u6307\u5b9a\u7684\u662f\u5305\u6587\u4ef6\u7684\u5b58\u653e\u5730\u5740\uff0c-r\u6307\u5b9a\u7684\u662ftxt\u6587\u4ef6\u7684\u4f4d\u7f6e \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u4fdd\u7559\u6216\u8005\u5220\u9664\u67d0\u4e9b\u5305\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\u5c0f\u5fc3\u4f9d\u8d56\u54e6 \u5b89\u88c5\u6210\u529f\u7684\u72b6\u6001 \u67e5\u770b\u4e00\u4e0b\u662f\u5426\u771f\u7684\u5b89\u88c5\u5b8c\u6210 pip list","title":"3. \u5b89\u88c5\u4f9d\u8d56"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#4","text":"\u6253\u5f00\u9632\u706b\u5899 \u8fdb\u5165\u9ad8\u7ea7\u8bbe\u7f6e \u5165\u7ad9\u89c4\u5219\u7684\u8bbe\u7f6e \u65b0\u5efa\u89c4\u5219 \u9009\u62e9\u3010\u7aef\u53e3\u3011\uff0c\u7136\u540e\u4e0b\u4e00\u6b65 \u8bbe\u7f6e\u7aef\u53e3\uff08\u7528\u4ec0\u4e48\u7aef\u53e3\u8bbe\u7f6e\u4ec0\u4e48\u7aef\u53e3\uff09\uff0c\u8fd9\u91cc\u4ee58000\u4f5c\u4e3a\u6f14\u793a \u9009\u62e9\u3010\u5141\u8bb8\u8fde\u63a5\u3011 \u8bbe\u7f6e\u4f55\u65f6\u5e94\u7528\u6b64\u89c4\u5219 \u8bbe\u7f6e\u89c4\u5219\u540d\u79f0 \u8bbe\u7f6e\u5b8c\u6210\u7684\u72b6\u6001","title":"4.\u9632\u706b\u5899\u914d\u7f6e"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#5django","text":"\u7ba1\u7406\u5458\u6743\u9650\u542f\u52a8\u547d\u4ee4\u884c \u547d\u4ee4\u884c\u8fdb\u5165\u7a0b\u5e8f\u6240\u5728\u6587\u4ef6\u5939 \u542f\u52a8\u670d\u52a1\u5668","title":"5.\u9879\u76ee\u542f\u52a8\u914d\u7f6e\uff08django\u670d\u52a1\u5668\uff09"},{"location":"python-web/015-python\u9879\u76ee\u79bb\u7ebf\u90e8\u7f72/#6","text":"\u8f93\u5165ip\u53ca\u7aef\u53e3\u53f7 192.168.124.108:8000/index","title":"6.\u8fdc\u7a0b\u8bbf\u95ee"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/","text":"001jupyter notebook\u5feb\u6377\u952e \u00b6 \u9605\u8bfb\u76ee\u5f55 \u547d\u4ee4\u6a21\u5f0f (\u6309\u952e Esc \u5f00\u542f) \u7f16\u8f91\u6a21\u5f0f ( Enter \u952e\u542f\u52a8) Jupyter Notebook \u7684\u5feb\u6377\u952e \u4f7f\u7528\u524d\u9700\u8981\u8fdb\u884c\u5b89\u88c5\uff1a pip install jupyter (\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5\u597dPython,\u5e76\u5c06python\u6dfb\u52a0\u5230\u73af\u5883\u89e3\u91ca\u5668\u4e2d) \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u56e0\u4e3apython\u5df2\u7ecf\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528**jupyter notebook**\u5373\u53ef\u542f\u52a8\uff0c\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00ipynb\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u76f4\u63a5\u5728cmd\u63a7\u5236\u53f0\u5c06\u7528cd\u5207\u6362\u5230ipynb\u7ed3\u5c3e\u7684\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u5373\u53ef\uff01 Jupyter Notebook \u6709\u4e24\u79cd\u952e\u76d8\u8f93\u5165\u6a21\u5f0f\u3002\u7f16\u8f91\u6a21\u5f0f\uff0c\u5141\u8bb8\u4f60\u5f80\u5355\u5143\u4e2d\u952e\u5165\u4ee3\u7801\u6216\u6587\u672c\uff1b\u8fd9\u65f6\u7684\u5355\u5143\u6846\u7ebf\u662f\u7eff\u8272\u7684\u3002\u547d\u4ee4\u6a21\u5f0f\uff0c\u952e\u76d8\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f\u547d\u4ee4\uff1b\u8fd9\u65f6\u7684\u5355\u5143\u6846\u7ebf\u662f\u7070\u8272\u3002 \u547d\u4ee4\u6a21\u5f0f (\u6309\u952e Esc \u5f00\u542f) \u00b6 Enter : \u8f6c\u5165\u7f16\u8f91\u6a21\u5f0f \u00b6 Shift-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e2a\u5355\u5143 \u00b6 Ctrl-Enter : \u8fd0\u884c\u672c\u5355\u5143 \u00b6 Alt-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u5176\u4e0b\u63d2\u5165\u65b0\u5355\u5143 \u00b6 Y : \u5355\u5143\u8f6c\u5165\u4ee3\u7801\u72b6\u6001 \u00b6 M :\u5355\u5143\u8f6c\u5165markdown\u72b6\u6001 \u00b6 R : \u5355\u5143\u8f6c\u5165raw\u72b6\u6001 \u00b6 1 : \u8bbe\u5b9a 1 \u7ea7\u6807\u9898 \u00b6 2 : \u8bbe\u5b9a 2 \u7ea7\u6807\u9898 \u00b6 3 : \u8bbe\u5b9a 3 \u7ea7\u6807\u9898 \u00b6 4 : \u8bbe\u5b9a 4 \u7ea7\u6807\u9898 \u00b6 5 : \u8bbe\u5b9a 5 \u7ea7\u6807\u9898 \u00b6 6 : \u8bbe\u5b9a 6 \u7ea7\u6807\u9898 \u00b6 Up : \u9009\u4e2d\u4e0a\u65b9\u5355\u5143 \u00b6 K : \u9009\u4e2d\u4e0a\u65b9\u5355\u5143 \u00b6 Down : \u9009\u4e2d\u4e0b\u65b9\u5355\u5143 \u00b6 J : \u9009\u4e2d\u4e0b\u65b9\u5355\u5143 \u00b6 Shift-K : \u6269\u5927\u9009\u4e2d\u4e0a\u65b9\u5355\u5143 \u00b6 Shift-J : \u6269\u5927\u9009\u4e2d\u4e0b\u65b9\u5355\u5143 \u00b6 A : \u5728\u4e0a\u65b9\u63d2\u5165\u65b0\u5355\u5143 \u00b6 B : \u5728\u4e0b\u65b9\u63d2\u5165\u65b0\u5355\u5143 \u00b6 X : \u526a\u5207\u9009\u4e2d\u7684\u5355\u5143 \u00b6 C : \u590d\u5236\u9009\u4e2d\u7684\u5355\u5143 \u00b6 Shift-V : \u7c98\u8d34\u5230\u4e0a\u65b9\u5355\u5143 \u00b6 V : \u7c98\u8d34\u5230\u4e0b\u65b9\u5355\u5143 \u00b6 Z : \u6062\u590d\u5220\u9664\u7684\u6700\u540e\u4e00\u4e2a\u5355\u5143 \u00b6 D,D : \u5220\u9664\u9009\u4e2d\u7684\u5355\u5143 \u00b6 Shift-M : \u5408\u5e76\u9009\u4e2d\u7684\u5355\u5143 \u00b6 Ctrl-S : \u6587\u4ef6\u5b58\u76d8 \u00b6 S : \u6587\u4ef6\u5b58\u76d8 \u00b6 L : \u8f6c\u6362\u884c\u53f7 \u00b6 O : \u8f6c\u6362\u8f93\u51fa \u00b6 Shift-O : \u8f6c\u6362\u8f93\u51fa\u6eda\u52a8 \u00b6 Esc : \u5173\u95ed\u9875\u9762 \u00b6 Q : \u5173\u95ed\u9875\u9762 \u00b6 H : \u663e\u793a\u5feb\u6377\u952e\u5e2e\u52a9 \u00b6 I,I : \u4e2d\u65adNotebook\u5185\u6838 \u00b6 0,0 : \u91cd\u542fNotebook\u5185\u6838 \u00b6 Shift : \u5ffd\u7565 \u00b6 Shift-Space : \u5411\u4e0a\u6eda\u52a8 \u00b6 Space : \u5411\u4e0b\u6eda\u52a8 \u00b6 \u7f16\u8f91\u6a21\u5f0f ( Enter \u952e\u542f\u52a8) \u00b6 Tab : \u4ee3\u7801\u8865\u5168\u6216\u7f29\u8fdb \u00b6 Shift-Tab : \u63d0\u793a \u00b6 Ctrl-] : \u7f29\u8fdb \u00b6 Ctrl-[ : \u89e3\u9664\u7f29\u8fdb \u00b6 Ctrl-A : \u5168\u9009 \u00b6 Ctrl-Z : \u590d\u539f \u00b6 Ctrl-Shift-Z : \u518d\u505a \u00b6 Ctrl-Y : \u518d\u505a \u00b6 Ctrl-Home : \u8df3\u5230\u5355\u5143\u5f00\u5934 \u00b6 Ctrl-Up : \u8df3\u5230\u5355\u5143\u5f00\u5934 \u00b6 Ctrl-End : \u8df3\u5230\u5355\u5143\u672b\u5c3e \u00b6 Ctrl-Down : \u8df3\u5230\u5355\u5143\u672b\u5c3e \u00b6 Ctrl-Left : \u8df3\u5230\u5de6\u8fb9\u4e00\u4e2a\u5b57\u9996 \u00b6 Ctrl-Right : \u8df3\u5230\u53f3\u8fb9\u4e00\u4e2a\u5b57\u9996 \u00b6 Ctrl-Backspace : \u5220\u9664\u524d\u9762\u4e00\u4e2a\u5b57 \u00b6 Ctrl-Delete : \u5220\u9664\u540e\u9762\u4e00\u4e2a\u5b57 \u00b6 Esc : \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f \u00b6 Ctrl-M : \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f \u00b6 Shift-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e00\u5355\u5143 \u00b6 Ctrl-Enter : \u8fd0\u884c\u672c\u5355\u5143 \u00b6 Alt-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u4e0b\u9762\u63d2\u5165\u4e00\u5355\u5143 \u00b6 Ctrl-Shift-- : \u5206\u5272\u5355\u5143 \u00b6 Ctrl-Shift-Subtract : \u5206\u5272\u5355\u5143 \u00b6 Ctrl-S : \u6587\u4ef6\u5b58\u76d8 \u00b6 Shift : \u5ffd\u7565 \u00b6 Up : \u5149\u6807\u4e0a\u79fb\u6216\u8f6c\u5165\u4e0a\u4e00\u5355\u5143 \u00b6 Down :\u5149\u6807\u4e0b\u79fb\u6216\u8f6c\u5165\u4e0b\u4e00\u5355\u5143 \u00b6 crtl-/:\u5feb\u901f\u6ce8\u91ca \u00b6","title":"001 jupyter notebook\u5feb\u6377\u952e"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#001jupyter-notebook","text":"\u9605\u8bfb\u76ee\u5f55 \u547d\u4ee4\u6a21\u5f0f (\u6309\u952e Esc \u5f00\u542f) \u7f16\u8f91\u6a21\u5f0f ( Enter \u952e\u542f\u52a8) Jupyter Notebook \u7684\u5feb\u6377\u952e \u4f7f\u7528\u524d\u9700\u8981\u8fdb\u884c\u5b89\u88c5\uff1a pip install jupyter (\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5\u597dPython,\u5e76\u5c06python\u6dfb\u52a0\u5230\u73af\u5883\u89e3\u91ca\u5668\u4e2d) \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u56e0\u4e3apython\u5df2\u7ecf\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528**jupyter notebook**\u5373\u53ef\u542f\u52a8\uff0c\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00ipynb\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u76f4\u63a5\u5728cmd\u63a7\u5236\u53f0\u5c06\u7528cd\u5207\u6362\u5230ipynb\u7ed3\u5c3e\u7684\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u5373\u53ef\uff01 Jupyter Notebook \u6709\u4e24\u79cd\u952e\u76d8\u8f93\u5165\u6a21\u5f0f\u3002\u7f16\u8f91\u6a21\u5f0f\uff0c\u5141\u8bb8\u4f60\u5f80\u5355\u5143\u4e2d\u952e\u5165\u4ee3\u7801\u6216\u6587\u672c\uff1b\u8fd9\u65f6\u7684\u5355\u5143\u6846\u7ebf\u662f\u7eff\u8272\u7684\u3002\u547d\u4ee4\u6a21\u5f0f\uff0c\u952e\u76d8\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f\u547d\u4ee4\uff1b\u8fd9\u65f6\u7684\u5355\u5143\u6846\u7ebf\u662f\u7070\u8272\u3002","title":"001jupyter notebook\u5feb\u6377\u952e"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#esc","text":"","title":"\u547d\u4ee4\u6a21\u5f0f (\u6309\u952e Esc \u5f00\u542f)"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#enter","text":"","title":"Enter: \u8f6c\u5165\u7f16\u8f91\u6a21\u5f0f"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-enter","text":"","title":"Shift-Enter: \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e2a\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-enter","text":"","title":"Ctrl-Enter: \u8fd0\u884c\u672c\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#alt-enter","text":"","title":"Alt-Enter: \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u5176\u4e0b\u63d2\u5165\u65b0\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#y","text":"","title":"Y: \u5355\u5143\u8f6c\u5165\u4ee3\u7801\u72b6\u6001"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#mmarkdown","text":"","title":"M:\u5355\u5143\u8f6c\u5165markdown\u72b6\u6001"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#r-raw","text":"","title":"R: \u5355\u5143\u8f6c\u5165raw\u72b6\u6001"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#1-1","text":"","title":"1: \u8bbe\u5b9a 1 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#2-2","text":"","title":"2: \u8bbe\u5b9a 2 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#3-3","text":"","title":"3: \u8bbe\u5b9a 3 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#4-4","text":"","title":"4: \u8bbe\u5b9a 4 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#5-5","text":"","title":"5: \u8bbe\u5b9a 5 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#6-6","text":"","title":"6: \u8bbe\u5b9a 6 \u7ea7\u6807\u9898"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#up","text":"","title":"Up: \u9009\u4e2d\u4e0a\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#k","text":"","title":"K: \u9009\u4e2d\u4e0a\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#down","text":"","title":"Down: \u9009\u4e2d\u4e0b\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#j","text":"","title":"J: \u9009\u4e2d\u4e0b\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-k","text":"","title":"Shift-K: \u6269\u5927\u9009\u4e2d\u4e0a\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-j","text":"","title":"Shift-J: \u6269\u5927\u9009\u4e2d\u4e0b\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#a","text":"","title":"A: \u5728\u4e0a\u65b9\u63d2\u5165\u65b0\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#b","text":"","title":"B: \u5728\u4e0b\u65b9\u63d2\u5165\u65b0\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#x","text":"","title":"X: \u526a\u5207\u9009\u4e2d\u7684\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#c","text":"","title":"C: \u590d\u5236\u9009\u4e2d\u7684\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-v","text":"","title":"Shift-V: \u7c98\u8d34\u5230\u4e0a\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#v","text":"","title":"V: \u7c98\u8d34\u5230\u4e0b\u65b9\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#z","text":"","title":"Z: \u6062\u590d\u5220\u9664\u7684\u6700\u540e\u4e00\u4e2a\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#dd","text":"","title":"D,D: \u5220\u9664\u9009\u4e2d\u7684\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-m","text":"","title":"Shift-M: \u5408\u5e76\u9009\u4e2d\u7684\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-s","text":"","title":"Ctrl-S: \u6587\u4ef6\u5b58\u76d8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#s","text":"","title":"S: \u6587\u4ef6\u5b58\u76d8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#l","text":"","title":"L: \u8f6c\u6362\u884c\u53f7"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#o","text":"","title":"O: \u8f6c\u6362\u8f93\u51fa"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-o","text":"","title":"Shift-O: \u8f6c\u6362\u8f93\u51fa\u6eda\u52a8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#esc_1","text":"","title":"Esc: \u5173\u95ed\u9875\u9762"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#q","text":"","title":"Q: \u5173\u95ed\u9875\u9762"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#h","text":"","title":"H: \u663e\u793a\u5feb\u6377\u952e\u5e2e\u52a9"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ii-notebook","text":"","title":"I,I: \u4e2d\u65adNotebook\u5185\u6838"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#00-notebook","text":"","title":"0,0: \u91cd\u542fNotebook\u5185\u6838"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift","text":"","title":"Shift: \u5ffd\u7565"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-space","text":"","title":"Shift-Space: \u5411\u4e0a\u6eda\u52a8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#space","text":"","title":"Space: \u5411\u4e0b\u6eda\u52a8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#enter_1","text":"","title":"\u7f16\u8f91\u6a21\u5f0f ( Enter \u952e\u542f\u52a8)"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#tab","text":"","title":"Tab: \u4ee3\u7801\u8865\u5168\u6216\u7f29\u8fdb"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-tab","text":"","title":"Shift-Tab: \u63d0\u793a"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-","text":"","title":"Ctrl-]: \u7f29\u8fdb"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-_1","text":"","title":"Ctrl-[: \u89e3\u9664\u7f29\u8fdb"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-a","text":"","title":"Ctrl-A: \u5168\u9009"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-z","text":"","title":"Ctrl-Z: \u590d\u539f"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-shift-z","text":"","title":"Ctrl-Shift-Z: \u518d\u505a"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-y","text":"","title":"Ctrl-Y: \u518d\u505a"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-home","text":"","title":"Ctrl-Home: \u8df3\u5230\u5355\u5143\u5f00\u5934"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-up","text":"","title":"Ctrl-Up: \u8df3\u5230\u5355\u5143\u5f00\u5934"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-end","text":"","title":"Ctrl-End: \u8df3\u5230\u5355\u5143\u672b\u5c3e"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-down","text":"","title":"Ctrl-Down: \u8df3\u5230\u5355\u5143\u672b\u5c3e"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-left","text":"","title":"Ctrl-Left: \u8df3\u5230\u5de6\u8fb9\u4e00\u4e2a\u5b57\u9996"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-right","text":"","title":"Ctrl-Right: \u8df3\u5230\u53f3\u8fb9\u4e00\u4e2a\u5b57\u9996"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-backspace","text":"","title":"Ctrl-Backspace: \u5220\u9664\u524d\u9762\u4e00\u4e2a\u5b57"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-delete","text":"","title":"Ctrl-Delete: \u5220\u9664\u540e\u9762\u4e00\u4e2a\u5b57"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#esc_2","text":"","title":"Esc: \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-m","text":"","title":"Ctrl-M: \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift-enter_1","text":"","title":"Shift-Enter: \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e00\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-enter_1","text":"","title":"Ctrl-Enter: \u8fd0\u884c\u672c\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#alt-enter_1","text":"","title":"Alt-Enter: \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u4e0b\u9762\u63d2\u5165\u4e00\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-shift-","text":"","title":"Ctrl-Shift--: \u5206\u5272\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-shift-subtract","text":"","title":"Ctrl-Shift-Subtract: \u5206\u5272\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#ctrl-s_1","text":"","title":"Ctrl-S: \u6587\u4ef6\u5b58\u76d8"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#shift_1","text":"","title":"Shift: \u5ffd\u7565"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#up_1","text":"","title":"Up: \u5149\u6807\u4e0a\u79fb\u6216\u8f6c\u5165\u4e0a\u4e00\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#down_1","text":"","title":"Down:\u5149\u6807\u4e0b\u79fb\u6216\u8f6c\u5165\u4e0b\u4e00\u5355\u5143"},{"location":"python\u5b66\u4e60/001 jupyter notebook\u5feb\u6377\u952e/#crtl-","text":"","title":"crtl-/:\u5feb\u901f\u6ce8\u91ca"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/","text":"\u6587\u4ef6 \u00b6 \u76ee\u6807 \u00b6 \u6587\u4ef6\u7684\u6982\u5ff5 \u6587\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c \u6587\u4ef6/\u6587\u4ef6\u5939\u7684\u5e38\u7528\u64cd\u4f5c \u6587\u672c\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u5f0f 01. \u6587\u4ef6\u7684\u6982\u5ff5 \u00b6 1.1 \u6587\u4ef6\u7684\u6982\u5ff5\u548c\u4f5c\u7528 \u00b6 \u8ba1\u7b97\u673a\u7684 \u6587\u4ef6 \uff0c\u5c31\u662f\u5b58\u50a8\u5728\u67d0\u79cd \u957f\u671f\u50a8\u5b58\u8bbe\u5907 \u4e0a\u7684\u4e00\u6bb5 \u6570\u636e \u957f\u671f\u5b58\u50a8\u8bbe\u5907\u5305\u62ec\uff1a\u786c\u76d8\u3001U \u76d8\u3001\u79fb\u52a8\u786c\u76d8\u3001\u5149\u76d8... \u6587\u4ef6\u7684\u4f5c\u7528 \u5c06\u6570\u636e\u957f\u671f\u4fdd\u5b58\u4e0b\u6765\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528 1.2 \u6587\u4ef6\u7684\u5b58\u50a8\u65b9\u5f0f \u00b6 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6587\u4ef6\u662f\u4ee5 \u4e8c\u8fdb\u5236 \u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684 \u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6 \u00b6 \u6587\u672c\u6587\u4ef6 \u53ef\u4ee5\u4f7f\u7528 \u6587\u672c\u7f16\u8f91\u8f6f\u4ef6 \u67e5\u770b \u672c\u8d28\u4e0a\u8fd8\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4f8b\u5982\uff1apython \u7684\u6e90\u7a0b\u5e8f \u4e8c\u8fdb\u5236\u6587\u4ef6 \u4fdd\u5b58\u7684\u5185\u5bb9 \u4e0d\u662f\u7ed9\u4eba\u76f4\u63a5\u9605\u8bfb\u7684\uff0c\u800c\u662f \u63d0\u4f9b\u7ed9\u5176\u4ed6\u8f6f\u4ef6\u4f7f\u7528\u7684 \u4f8b\u5982\uff1a\u56fe\u7247\u6587\u4ef6\u3001\u97f3\u9891\u6587\u4ef6\u3001\u89c6\u9891\u6587\u4ef6\u7b49\u7b49 \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u80fd\u4f7f\u7528 \u6587\u672c\u7f16\u8f91\u8f6f\u4ef6 \u67e5\u770b 02. \u6587\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c \u00b6 2.1 \u64cd\u4f5c\u6587\u4ef6\u7684\u5957\u8def \u00b6 \u5728 \u8ba1\u7b97\u673a \u4e2d\u8981\u64cd\u4f5c\u6587\u4ef6\u7684\u5957\u8def\u975e\u5e38\u56fa\u5b9a\uff0c\u4e00\u5171\u5305\u542b**\u4e09\u4e2a\u6b65\u9aa4**\uff1a \u6253\u5f00\u6587\u4ef6 \u8bfb\u3001\u5199\u6587\u4ef6 \u8bfb \u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u5165\u5185\u5b58 \u5199 \u5c06\u5185\u5b58\u5185\u5bb9\u5199\u5165\u6587\u4ef6 \u5173\u95ed\u6587\u4ef6 2.2 \u64cd\u4f5c\u6587\u4ef6\u7684\u51fd\u6570/\u65b9\u6cd5 \u00b6 \u5728 Python \u4e2d\u8981\u64cd\u4f5c\u6587\u4ef6\u9700\u8981\u8bb0\u4f4f 1 \u4e2a\u51fd\u6570\u548c 3 \u4e2a\u65b9\u6cd5 \u5e8f\u53f7 \u51fd\u6570/\u65b9\u6cd5 \u8bf4\u660e 01 open \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u64cd\u4f5c\u5bf9\u8c61 02 read \u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u5230\u5185\u5b58 03 write \u5c06\u6307\u5b9a\u5185\u5bb9\u5199\u5165\u6587\u4ef6 04 close \u5173\u95ed\u6587\u4ef6 open \u51fd\u6570\u8d1f\u8d23\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61 read / write / close \u4e09\u4e2a\u65b9\u6cd5\u90fd\u9700\u8981\u901a\u8fc7 \u6587\u4ef6\u5bf9\u8c61 \u6765\u8c03\u7528(\u5c06\u8bfb\u53d6\u7684\u6587\u4ef6\u8d4b\u7ed9\u4e00\u4e2a\u5bf9\u8c61) 2.3 read \u65b9\u6cd5 \u2014\u2014 \u8bfb\u53d6\u6587\u4ef6 \u00b6 open \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u6253\u5f00\u7684\u6587\u4ef6\u540d\uff08\u6587\u4ef6\u540d\u533a\u5206\u5927\u5c0f\u5199\uff09 \u5982\u679c\u6587\u4ef6 \u5b58\u5728 \uff0c\u8fd4\u56de \u6587\u4ef6\u64cd\u4f5c\u5bf9\u8c61 \u5982\u679c\u6587\u4ef6 \u4e0d\u5b58\u5728 \uff0c\u4f1a \u629b\u51fa\u5f02\u5e38 read \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u6027 \u8bfb\u5165 \u5e76 \u8fd4\u56de \u6587\u4ef6\u7684 \u6240\u6709\u5185\u5bb9 close \u65b9\u6cd5\u8d1f\u8d23 \u5173\u95ed\u6587\u4ef6 \u5982\u679c \u5fd8\u8bb0\u5173\u95ed\u6587\u4ef6 \uff0c \u4f1a\u9020\u6210\u7cfb\u7edf\u8d44\u6e90\u6d88\u8017\uff0c\u800c\u4e14\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u5bf9\u6587\u4ef6\u7684\u8bbf\u95ee \u6ce8\u610f \uff1a read \u65b9\u6cd5\u6267\u884c\u540e\uff0c\u4f1a\u628a \u6587\u4ef6\u6307\u9488 \u79fb\u52a8\u5230 \u6587\u4ef6\u7684\u672b\u5c3e # 1. \u6253\u5f00 - \u6587\u4ef6\u540d\u9700\u8981\u6ce8\u610f\u5927\u5c0f\u5199 file = open ( \"README\" ) #\u9ed8\u8ba4\u662f\u53ea\u8bfb # 2. \u8bfb\u53d6 text = file . read () print ( text ) # 3. \u5173\u95ed file . close () \u63d0\u793a \u5728\u5f00\u53d1\u4e2d\uff0c\u901a\u5e38\u4f1a\u5148\u7f16\u5199 \u6253\u5f00 \u548c \u5173\u95ed \u7684\u4ee3\u7801\uff0c\u518d\u7f16\u5199\u4e2d\u95f4\u9488\u5bf9\u6587\u4ef6\u7684 \u8bfb/\u5199 \u64cd\u4f5c\uff01 \u6587\u4ef6\u6307\u9488\uff08\u77e5\u9053\uff09 \u00b6 \u6587\u4ef6\u6307\u9488 \u6807\u8bb0 \u4ece\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6\u6570\u636e \u7b2c\u4e00\u6b21\u6253\u5f00 \u6587\u4ef6\u65f6\uff0c\u901a\u5e38 \u6587\u4ef6\u6307\u9488\u4f1a\u6307\u5411\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e \u5f53\u6267\u884c\u4e86 read \u65b9\u6cd5\u540e\uff0c \u6587\u4ef6\u6307\u9488 \u4f1a\u79fb\u52a8\u5230 \u8bfb\u53d6\u5185\u5bb9\u7684\u672b\u5c3e \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u79fb\u52a8\u5230 \u6587\u4ef6\u672b\u5c3e \u601d\u8003 \u5982\u679c\u6267\u884c\u4e86\u4e00\u6b21 read \u65b9\u6cd5\uff0c\u8bfb\u53d6\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\u518d\u6b21\u8c03\u7528 read \u65b9\u6cd5\uff0c\u8fd8\u80fd\u591f\u83b7\u5f97\u5230\u5185\u5bb9\u5417\uff1f \u7b54\u6848 \u4e0d\u80fd \u7b2c\u4e00\u6b21\u8bfb\u53d6\u4e4b\u540e\uff0c\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u4e86\u6587\u4ef6\u672b\u5c3e\uff0c\u518d\u6b21\u8c03\u7528\u4e0d\u4f1a\u8bfb\u53d6\u5230\u4efb\u4f55\u7684\u5185\u5bb9 \u4f8b\u5982:\u8bfb\u53d6\u6587\u4ef6\u540e\u6307\u9488\u4f1a\u6539\u53d8 \u00b6 # 1. \u6253\u5f00\u6587\u4ef6 file = open ( \"README\" ) # 2. \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 text = file . read () print ( text ) print ( len ( text )) print ( \"-\" * 50 ) text = file . read () print ( text ) print ( len ( text )) # 3. \u5173\u95ed\u6587\u4ef6 file . close () \u6267\u884c\u7ed3\u679c:\u7b2c\u4e8c\u6b21\u8bfb\u53d6\u7684\u65f6\u5019\u53d8\u6210\u4e86\u7a7a\u662f\u56e0\u4e3a\u6307\u9488\u79fb\u52a8\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e hello 1 hello 2 hello 345 25 -------------------------------------------------- 0 2.4 \u6253\u5f00\u6587\u4ef6\u7684\u65b9\u5f0f \u00b6 open \u51fd\u6570\u9ed8\u8ba4\u4ee5 \u53ea\u8bfb\u65b9\u5f0f \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61 \u8bed\u6cd5\u5982\u4e0b\uff1a f = open ( \"\u6587\u4ef6\u540d\" , \"\u8bbf\u95ee\u65b9\u5f0f\" ) \u8bbf\u95ee\u65b9\u5f0f \u8bf4\u660e r \u4ee5**\u53ea\u8bfb**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u6587\u4ef6\u7684\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u8fd9\u662f**\u9ed8\u8ba4\u6a21\u5f0f**\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u629b\u51fa\u5f02\u5e38 w \u4ee5**\u53ea\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6 a \u4ee5**\u8ffd\u52a0**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u6587\u4ef6\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u8fdb\u884c\u5199\u5165 r+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u6587\u4ef6\u7684\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u5f00\u5934\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u629b\u51fa\u5f02\u5e38 w+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6 a+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u6587\u4ef6\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u8fdb\u884c\u5199\u5165 \u63d0\u793a \u9891\u7e41\u7684\u79fb\u52a8\u6587\u4ef6\u6307\u9488\uff0c \u4f1a\u5f71\u54cd\u6587\u4ef6\u7684\u8bfb\u5199\u6548\u7387 \uff0c\u5f00\u53d1\u4e2d\u66f4\u591a\u7684\u65f6\u5019\u4f1a\u4ee5 \u53ea\u8bfb \u3001 \u53ea\u5199 \u7684\u65b9\u5f0f\u6765\u64cd\u4f5c\u6587\u4ef6 \u5199\u5165\u6587\u4ef6\u793a\u4f8b # \u6253\u5f00\u6587\u4ef6 f = open ( \"README\" , \"w\" ) #\u4f7f\u7528,+\" value\" \u90fd\u662f\u4ee5\u5b57\u7b26\u4e32\u4e3a\u5173\u952e\u5b57 f . write ( \"hello python\uff01 \\n \" ) f . write ( \"\u4eca\u5929\u5929\u6c14\u771f\u597d\" ) # \u5173\u95ed\u6587\u4ef6 f . close () 2.5 \u6309\u884c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 \u00b6 read \u65b9\u6cd5\u9ed8\u8ba4\u4f1a\u628a\u6587\u4ef6\u7684 \u6240\u6709\u5185\u5bb9 \u4e00\u6b21\u6027\u8bfb\u53d6\u5230\u5185\u5b58 \u5982\u679c\u6587\u4ef6\u592a\u5927\uff0c\u5bf9\u5185\u5b58\u7684\u5360\u7528\u4f1a\u975e\u5e38\u4e25\u91cd(\u6587\u4ef6\u5927\u5c0f\u6bd4\u5185\u5b58\u5927\u5c31\u7206\u4e86\u5185\u5b58) readline \u65b9\u6cd5 \u00b6 readline \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u8bfb\u53d6\u4e00\u884c\u5185\u5bb9 \u65b9\u6cd5\u6267\u884c\u540e\uff0c\u4f1a\u628a \u6587\u4ef6\u6307\u9488 \u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u51c6\u5907\u518d\u6b21\u8bfb\u53d6 \u8bfb\u53d6\u5927\u6587\u4ef6\u7684\u6b63\u786e\u59ff\u52bf # \u6253\u5f00\u6587\u4ef6 file = open ( \"README\" ) #\u9996\u9009\u6253\u5f00\u6587\u4ef6 while True : # \u8bfb\u53d6\u4e00\u884c\u5185\u5bb9 text = file . readline () # \u5224\u65ad\u662f\u5426\u8bfb\u5230\u5185\u5bb9 if not text : break #\u8df3\u51fa\u5faa\u73af # \u6bcf\u8bfb\u53d6\u4e00\u884c\u7684\u672b\u5c3e\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a `\\n` print ( text , end = \"\" ) # \u5173\u95ed\u6587\u4ef6 file . close () 2.6 \u6587\u4ef6\u8bfb\u5199\u6848\u4f8b \u2014\u2014 \u590d\u5236\u6587\u4ef6 \u00b6 \u76ee\u6807 \u7528\u4ee3\u7801\u7684\u65b9\u5f0f\uff0c\u6765\u5b9e\u73b0\u6587\u4ef6\u590d\u5236\u8fc7\u7a0b \u5c0f\u6587\u4ef6\u590d\u5236(\u5b8c\u6574\u5168\u90e8\u590d\u5236:\u4e0d\u6015\u5185\u5b58\u7684\u5360\u7528) \u00b6 \u6253\u5f00\u4e00\u4e2a\u5df2\u6709\u6587\u4ef6\uff0c\u8bfb\u53d6\u5b8c\u6574\u5185\u5bb9\uff0c\u5e76\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6 # 1. \u6253\u5f00\u6587\u4ef6 file_read = open ( \"README\" ) #\u6e90\u6587\u4ef6\u4ee5\u53ea\u8bfb\u65b9\u5f0f file_write = open ( \"README[\u590d\u4ef6]\" , \"w\" ) #\u76ee\u6807\u6587\u4ef6\u4ee5\u53ea\u5199\u65b9\u5f0f # 2. \u8bfb\u53d6\u5e76\u5199\u5165\u6587\u4ef6 text = file_read . read () file_write . write ( text ) # 3. \u5173\u95ed\u6587\u4ef6 file_read . close () file_write . close () \u5927\u6587\u4ef6\u590d\u5236 \u00b6 \u6253\u5f00\u4e00\u4e2a\u5df2\u6709\u6587\u4ef6\uff0c\u9010\u884c\u8bfb\u53d6\u5185\u5bb9\uff0c\u5e76\u987a\u5e8f\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6 # 1. \u6253\u5f00\u6587\u4ef6 file_read = open ( \"README\" ) file_write = open ( \"README[\u590d\u4ef6]\" , \"w\" ) # 2. \u8bfb\u53d6\u5e76\u5199\u5165\u6587\u4ef6 while True : # \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c text = file_read . readline () # \u5224\u65ad\u662f\u5426\u8bfb\u53d6\u5230\u5185\u5bb9 if not text : break file_write . write ( text ) #\u6307\u9488\u4e00\u6837\u4f1a\u79fb\u52a8\u5230\u672b\u5c3e # 3. \u5173\u95ed\u6587\u4ef6 file_read . close () file_write . close () Python\u4e2dread()\u3001readline()\u548creadlines()\u4e09\u8005\u95f4\u7684\u533a\u522b\u548c\u7528\u6cd5 \u00b6 \u4e00\u3001read([size])\u65b9\u6cd5 read([size])\u65b9\u6cd5\u4ece\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e\u8d77\u8bfb\u53d6size\u4e2a\u5b57\u8282(\u6ce8\u610f)\uff0c\u82e5\u65e0\u53c2\u6570size\uff0c\u5219\u8868\u793a\u8bfb\u53d6\u81f3\u6587\u4ef6\u7ed3\u675f\u4e3a\u6b62\uff0c\u5b83\u8303\u56f4\u4e3a\u5b57\u7b26\u4e32\u5bf9\u8c61 f = open ( \"a.txt\" ) lines = f . read () print lines print ( type ( lines )) f . close () \u8f93\u51fa\u7ed3\u679c\uff1a Hello Welcome What is the fuck ... < type 'str' > #\u5b57\u7b26\u4e32\u7c7b\u578b \u4e8c\u3001readline()\u65b9\u6cd5 \u4ece\u5b57\u9762\u610f\u601d\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u65b9\u6cd5\u6bcf\u6b21\u8bfb\u51fa\u4e00\u884c\u5185\u5bb9\uff0c\u6240\u4ee5\uff0c\u8bfb\u53d6\u65f6\u5360\u7528\u5185\u5b58\u5c0f\uff0c\u6bd4\u8f83\u9002\u5408\u5927\u6587\u4ef6\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 f = open ( \"a.txt\" ) line = f . readline () print ( type ( line )) while line : print line , line = f . readline () f . close () \u8f93\u51fa\u7ed3\u679c\uff1a < type 'str' > Hello Welcome What is the fuck ... \u4e09\u3001readlines()\u65b9\u6cd5\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u6240\u6709\u884c\uff0c\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868(list)\u53d8\u91cf\u4e2d\uff0c\u6bcf\u884c\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u8bfb\u53d6\u5927\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5360\u5185\u5b58 f = open ( \"a.txt\" ) lines = f . readlines () print ( type ( lines )) for line in lines : print ( line ) f . close () \u8f93\u51fa\u7ed3\u679c\uff1a < type 'list' > Hello Welcome What is the fuck ... \u56db\u3001linecache\u6a21\u5757 \u5f53\u7136\uff0c\u6709\u7279\u6b8a\u9700\u6c42\u8fd8\u53ef\u4ee5\u7528linecache\u6a21\u5757\uff0c\u6bd4\u5982\u4f60\u8981\u8f93\u51fa\u67d0\u4e2a\u6587\u4ef6\u7684\u7b2cn\u884c\uff1a # \u8f93\u51fa\u7b2c2\u884c text = linecache . getline ( \u2018 a . txt ',2) print ( text ) 03. \u6587\u4ef6/\u76ee\u5f55\u7684\u5e38\u7528\u7ba1\u7406\u64cd\u4f5c \u00b6 \u5728 \u7ec8\u7aef / \u6587\u4ef6\u6d4f\u89c8\u5668 \u3001 \u4e2d\u53ef\u4ee5\u6267\u884c\u5e38\u89c4\u7684 \u6587\u4ef6 / \u76ee\u5f55 \u7ba1\u7406\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a \u521b\u5efa\u3001\u91cd\u547d\u540d\u3001\u5220\u9664\u3001\u6539\u53d8\u8def\u5f84\u3001\u67e5\u770b\u76ee\u5f55\u5185\u5bb9\u3001\u2026\u2026 \u5728 Python \u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u901a\u8fc7\u7a0b\u5e8f\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff0c\u9700\u8981\u5bfc\u5165 os \u6a21\u5757 \u6587\u4ef6\u64cd\u4f5c \u00b6 \u5e8f\u53f7 \u65b9\u6cd5\u540d \u8bf4\u660e \u793a\u4f8b 01 rename \u91cd\u547d\u540d\u6587\u4ef6 os.rename(\u6e90\u6587\u4ef6\u540d, \u76ee\u6807\u6587\u4ef6\u540d) 02 remove \u5220\u9664\u6587\u4ef6 os.remove(\u6587\u4ef6\u540d) \u76ee\u5f55\u64cd\u4f5c \u00b6 \u5e8f\u53f7 \u65b9\u6cd5\u540d \u8bf4\u660e \u793a\u4f8b 01 listdir \u76ee\u5f55\u5217\u8868 os.listdir(\u76ee\u5f55\u540d) 02 mkdir \u521b\u5efa\u76ee\u5f55 os.mkdir(\u76ee\u5f55\u540d) 03 rmdir \u5220\u9664\u76ee\u5f55 os.rmdir(\u76ee\u5f55\u540d) 04 getcwd \u83b7\u53d6\u5f53\u524d\u76ee\u5f55 os.getcwd() 05 chdir \u4fee\u6539\u5de5\u4f5c\u76ee\u5f55 os.chdir(\u76ee\u6807\u76ee\u5f55) 06 path.isdir \u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6 os.path.isdir(\u6587\u4ef6\u8def\u5f84) \u63d0\u793a\uff1a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u64cd\u4f5c\u90fd\u652f\u6301 \u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u5c0f\u4f8b\u5b50:\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5e76\u6253\u5370\u6587\u4ef6\u540d # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 19 22:28:14 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 19 22:28:14 2019 @author: zangz \"\"\" import os #\u5bfc\u5165os\u5305 def list_name ( path ): #path\u662f\u9700\u8981\u83b7\u53d6\u76ee\u5f55\u6587\u4ef6\u540d\u7684\u8def\u5f84 list_name = os . listdir () #\u83b7\u53d6\u8fd9\u4e2a\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5230\u5217\u8868\u4e2d print ( '\u6587\u4ef6\u5217\u8868: ' , list_name ) #\u6253\u5370\u8fd9\u4e2a\u5217\u8868 print ( '\u7c7b\u578b: ' , type ( list_name )) #\u6253\u5370\u8fd9\u4e2a\u7c7b\u578b for i in list_name : print ( '\u6587\u4ef6\u540d: ' , i ) path = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ \u6c49\u5b57\u8f6c\u62fc\u97f3' list_name ( path ) \u6267\u884c\u7ed3\u679c: \u6587\u4ef6\u5217\u8868 : [ '.ipynb_checkpoints' , 'std\u603b.txt' , '\u62fc\u97f3.txt' , '\u6587\u4ef6\u540d.txt' , '\u6c49\u5b57\u62fc\u97f3\u7684\u4e00\u4e9b\u53c2\u8003\u4ee3\u7801.ipynb' , '\u6c49\u5b57\u8f6c\u62fc\u97f3.ipynb' , '\u8bfb\u53d6\u6587\u4ef6\u540d\u4e2d\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5408\u5e76.py' ] \u7c7b\u578b : < class ' list '> \u6587\u4ef6\u540d : . ipynb_checkpoints \u6587\u4ef6\u540d : std\u603b . txt \u6587\u4ef6\u540d : \u62fc\u97f3 . txt \u6587\u4ef6\u540d : \u6587\u4ef6\u540d . txt \u6587\u4ef6\u540d : \u6c49\u5b57\u62fc\u97f3\u7684\u4e00\u4e9b\u53c2\u8003\u4ee3\u7801 . ipynb \u6587\u4ef6\u540d : \u6c49\u5b57\u8f6c\u62fc\u97f3 . ipynb \u6587\u4ef6\u540d : \u8bfb\u53d6\u6587\u4ef6\u540d\u4e2d\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5408\u5e76 . py 04. \u6587\u672c\u6587\u4ef6\u7684\u7f16\u7801\u683c\u5f0f\uff08\u79d1\u666e\uff09 \u00b6 \u6587\u672c\u6587\u4ef6\u5b58\u50a8\u7684\u5185\u5bb9\u662f\u57fa\u4e8e \u5b57\u7b26\u7f16\u7801 \u7684\u6587\u4ef6\uff0c\u5e38\u89c1\u7684\u7f16\u7801\u6709 ASCII \u7f16\u7801\uff0c UNICODE \u7f16\u7801\u7b49 Python 2.x \u9ed8\u8ba4\u4f7f\u7528 ASCII \u7f16\u7801\u683c\u5f0f Python 3.x \u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f 4.1 ASCII \u7f16\u7801\u548c UNICODE \u7f16\u7801 \u00b6 ASCII \u7f16\u7801 \u00b6 \u8ba1\u7b97\u673a\u4e2d\u53ea\u6709 256 \u4e2a ASCII \u5b57\u7b26 \u4e00\u4e2a ASCII \u5728\u5185\u5b58\u4e2d\u5360\u7528 1 \u4e2a\u5b57\u8282 \u7684\u7a7a\u95f4 8 \u4e2a 0/1 \u7684\u6392\u5217\u7ec4\u5408\u65b9\u5f0f\u4e00\u5171\u6709 256 \u79cd\uff0c\u4e5f\u5c31\u662f 2 ** 8 UTF-8 \u7f16\u7801\u683c\u5f0f \u00b6 \u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528 1~6 \u4e2a\u5b57\u8282 \u6765\u8868\u793a\u4e00\u4e2a UTF-8 \u5b57\u7b26\uff0c\u6db5\u76d6\u4e86 \u5730\u7403\u4e0a\u51e0\u4e4e\u6240\u6709\u5730\u533a\u7684\u6587\u5b57 \u5927\u591a\u6570\u6c49\u5b57\u4f1a\u4f7f\u7528 3 \u4e2a\u5b57\u8282 \u8868\u793a UTF-8 \u662f UNICODE \u7f16\u7801\u7684\u4e00\u79cd\u7f16\u7801\u683c\u5f0f 4.2 Ptyhon 2.x \u4e2d\u5982\u4f55\u4f7f\u7528\u4e2d\u6587 \u00b6 Python 2.x \u9ed8\u8ba4\u4f7f\u7528 ASCII \u7f16\u7801\u683c\u5f0f Python 3.x \u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f \u5728 Python 2.x \u6587\u4ef6\u7684 \u7b2c\u4e00\u884c \u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u89e3\u91ca\u5668\u4f1a\u4ee5 utf-8 \u7f16\u7801\u6765\u5904\u7406 python \u6587\u4ef6 # *-* coding:utf8 *-* \u8fd9\u65b9\u5f0f\u662f\u5b98\u65b9\u63a8\u8350\u4f7f\u7528\u7684\uff01 \u4e5f\u53ef\u4ee5\u4f7f\u7528 # coding=utf8 unicode \u5b57\u7b26\u4e32 \u00b6 \u5728 Python 2.x \u4e2d\uff0c\u5373\u4f7f\u6307\u5b9a\u4e86\u6587\u4ef6\u4f7f\u7528 UTF-8 \u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f46\u662f\u5728\u904d\u5386\u5b57\u7b26\u4e32\u65f6\uff0c\u4ecd\u7136\u4f1a \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u904d\u5386 \u5b57\u7b26\u4e32 \u8981\u80fd\u591f \u6b63\u786e\u7684\u904d\u5386\u5b57\u7b26\u4e32 \uff0c\u5728\u5b9a\u4e49\u5b57\u7b26\u4e32\u65f6\uff0c\u9700\u8981 \u5728\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u524d \uff0c\u589e\u52a0\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd u \uff0c\u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a unicode \u5b57\u7b26\u4e32\uff08\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff09 # *-* coding:utf8 *-* # \u5728\u5b57\u7b26\u4e32\u524d\uff0c\u589e\u52a0\u4e00\u4e2a `u` \u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a utf8 \u5b57\u7b26\u4e32 hello_str = u \"\u4f60\u597d\u4e16\u754c\" print ( hello_str ) for c in hello_str : print ( c )","title":"002 python\u64cd\u4f5c\u6587\u4ef6"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_1","text":"","title":"\u6587\u4ef6"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_2","text":"\u6587\u4ef6\u7684\u6982\u5ff5 \u6587\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c \u6587\u4ef6/\u6587\u4ef6\u5939\u7684\u5e38\u7528\u64cd\u4f5c \u6587\u672c\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u5f0f","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#01","text":"","title":"01. \u6587\u4ef6\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#11","text":"\u8ba1\u7b97\u673a\u7684 \u6587\u4ef6 \uff0c\u5c31\u662f\u5b58\u50a8\u5728\u67d0\u79cd \u957f\u671f\u50a8\u5b58\u8bbe\u5907 \u4e0a\u7684\u4e00\u6bb5 \u6570\u636e \u957f\u671f\u5b58\u50a8\u8bbe\u5907\u5305\u62ec\uff1a\u786c\u76d8\u3001U \u76d8\u3001\u79fb\u52a8\u786c\u76d8\u3001\u5149\u76d8... \u6587\u4ef6\u7684\u4f5c\u7528 \u5c06\u6570\u636e\u957f\u671f\u4fdd\u5b58\u4e0b\u6765\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528","title":"1.1 \u6587\u4ef6\u7684\u6982\u5ff5\u548c\u4f5c\u7528"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#12","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6587\u4ef6\u662f\u4ee5 \u4e8c\u8fdb\u5236 \u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684","title":"1.2 \u6587\u4ef6\u7684\u5b58\u50a8\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_3","text":"\u6587\u672c\u6587\u4ef6 \u53ef\u4ee5\u4f7f\u7528 \u6587\u672c\u7f16\u8f91\u8f6f\u4ef6 \u67e5\u770b \u672c\u8d28\u4e0a\u8fd8\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4f8b\u5982\uff1apython \u7684\u6e90\u7a0b\u5e8f \u4e8c\u8fdb\u5236\u6587\u4ef6 \u4fdd\u5b58\u7684\u5185\u5bb9 \u4e0d\u662f\u7ed9\u4eba\u76f4\u63a5\u9605\u8bfb\u7684\uff0c\u800c\u662f \u63d0\u4f9b\u7ed9\u5176\u4ed6\u8f6f\u4ef6\u4f7f\u7528\u7684 \u4f8b\u5982\uff1a\u56fe\u7247\u6587\u4ef6\u3001\u97f3\u9891\u6587\u4ef6\u3001\u89c6\u9891\u6587\u4ef6\u7b49\u7b49 \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u80fd\u4f7f\u7528 \u6587\u672c\u7f16\u8f91\u8f6f\u4ef6 \u67e5\u770b","title":"\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#02","text":"","title":"02. \u6587\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#21","text":"\u5728 \u8ba1\u7b97\u673a \u4e2d\u8981\u64cd\u4f5c\u6587\u4ef6\u7684\u5957\u8def\u975e\u5e38\u56fa\u5b9a\uff0c\u4e00\u5171\u5305\u542b**\u4e09\u4e2a\u6b65\u9aa4**\uff1a \u6253\u5f00\u6587\u4ef6 \u8bfb\u3001\u5199\u6587\u4ef6 \u8bfb \u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u5165\u5185\u5b58 \u5199 \u5c06\u5185\u5b58\u5185\u5bb9\u5199\u5165\u6587\u4ef6 \u5173\u95ed\u6587\u4ef6","title":"2.1 \u64cd\u4f5c\u6587\u4ef6\u7684\u5957\u8def"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#22","text":"\u5728 Python \u4e2d\u8981\u64cd\u4f5c\u6587\u4ef6\u9700\u8981\u8bb0\u4f4f 1 \u4e2a\u51fd\u6570\u548c 3 \u4e2a\u65b9\u6cd5 \u5e8f\u53f7 \u51fd\u6570/\u65b9\u6cd5 \u8bf4\u660e 01 open \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u64cd\u4f5c\u5bf9\u8c61 02 read \u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u5230\u5185\u5b58 03 write \u5c06\u6307\u5b9a\u5185\u5bb9\u5199\u5165\u6587\u4ef6 04 close \u5173\u95ed\u6587\u4ef6 open \u51fd\u6570\u8d1f\u8d23\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61 read / write / close \u4e09\u4e2a\u65b9\u6cd5\u90fd\u9700\u8981\u901a\u8fc7 \u6587\u4ef6\u5bf9\u8c61 \u6765\u8c03\u7528(\u5c06\u8bfb\u53d6\u7684\u6587\u4ef6\u8d4b\u7ed9\u4e00\u4e2a\u5bf9\u8c61)","title":"2.2 \u64cd\u4f5c\u6587\u4ef6\u7684\u51fd\u6570/\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#23-read","text":"open \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u6253\u5f00\u7684\u6587\u4ef6\u540d\uff08\u6587\u4ef6\u540d\u533a\u5206\u5927\u5c0f\u5199\uff09 \u5982\u679c\u6587\u4ef6 \u5b58\u5728 \uff0c\u8fd4\u56de \u6587\u4ef6\u64cd\u4f5c\u5bf9\u8c61 \u5982\u679c\u6587\u4ef6 \u4e0d\u5b58\u5728 \uff0c\u4f1a \u629b\u51fa\u5f02\u5e38 read \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u6027 \u8bfb\u5165 \u5e76 \u8fd4\u56de \u6587\u4ef6\u7684 \u6240\u6709\u5185\u5bb9 close \u65b9\u6cd5\u8d1f\u8d23 \u5173\u95ed\u6587\u4ef6 \u5982\u679c \u5fd8\u8bb0\u5173\u95ed\u6587\u4ef6 \uff0c \u4f1a\u9020\u6210\u7cfb\u7edf\u8d44\u6e90\u6d88\u8017\uff0c\u800c\u4e14\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u5bf9\u6587\u4ef6\u7684\u8bbf\u95ee \u6ce8\u610f \uff1a read \u65b9\u6cd5\u6267\u884c\u540e\uff0c\u4f1a\u628a \u6587\u4ef6\u6307\u9488 \u79fb\u52a8\u5230 \u6587\u4ef6\u7684\u672b\u5c3e # 1. \u6253\u5f00 - \u6587\u4ef6\u540d\u9700\u8981\u6ce8\u610f\u5927\u5c0f\u5199 file = open ( \"README\" ) #\u9ed8\u8ba4\u662f\u53ea\u8bfb # 2. \u8bfb\u53d6 text = file . read () print ( text ) # 3. \u5173\u95ed file . close () \u63d0\u793a \u5728\u5f00\u53d1\u4e2d\uff0c\u901a\u5e38\u4f1a\u5148\u7f16\u5199 \u6253\u5f00 \u548c \u5173\u95ed \u7684\u4ee3\u7801\uff0c\u518d\u7f16\u5199\u4e2d\u95f4\u9488\u5bf9\u6587\u4ef6\u7684 \u8bfb/\u5199 \u64cd\u4f5c\uff01","title":"2.3 read \u65b9\u6cd5 \u2014\u2014 \u8bfb\u53d6\u6587\u4ef6"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_4","text":"\u6587\u4ef6\u6307\u9488 \u6807\u8bb0 \u4ece\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6\u6570\u636e \u7b2c\u4e00\u6b21\u6253\u5f00 \u6587\u4ef6\u65f6\uff0c\u901a\u5e38 \u6587\u4ef6\u6307\u9488\u4f1a\u6307\u5411\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e \u5f53\u6267\u884c\u4e86 read \u65b9\u6cd5\u540e\uff0c \u6587\u4ef6\u6307\u9488 \u4f1a\u79fb\u52a8\u5230 \u8bfb\u53d6\u5185\u5bb9\u7684\u672b\u5c3e \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u79fb\u52a8\u5230 \u6587\u4ef6\u672b\u5c3e \u601d\u8003 \u5982\u679c\u6267\u884c\u4e86\u4e00\u6b21 read \u65b9\u6cd5\uff0c\u8bfb\u53d6\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\u518d\u6b21\u8c03\u7528 read \u65b9\u6cd5\uff0c\u8fd8\u80fd\u591f\u83b7\u5f97\u5230\u5185\u5bb9\u5417\uff1f \u7b54\u6848 \u4e0d\u80fd \u7b2c\u4e00\u6b21\u8bfb\u53d6\u4e4b\u540e\uff0c\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u4e86\u6587\u4ef6\u672b\u5c3e\uff0c\u518d\u6b21\u8c03\u7528\u4e0d\u4f1a\u8bfb\u53d6\u5230\u4efb\u4f55\u7684\u5185\u5bb9","title":"\u6587\u4ef6\u6307\u9488\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_5","text":"# 1. \u6253\u5f00\u6587\u4ef6 file = open ( \"README\" ) # 2. \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 text = file . read () print ( text ) print ( len ( text )) print ( \"-\" * 50 ) text = file . read () print ( text ) print ( len ( text )) # 3. \u5173\u95ed\u6587\u4ef6 file . close () \u6267\u884c\u7ed3\u679c:\u7b2c\u4e8c\u6b21\u8bfb\u53d6\u7684\u65f6\u5019\u53d8\u6210\u4e86\u7a7a\u662f\u56e0\u4e3a\u6307\u9488\u79fb\u52a8\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e hello 1 hello 2 hello 345 25 -------------------------------------------------- 0","title":"\u4f8b\u5982:\u8bfb\u53d6\u6587\u4ef6\u540e\u6307\u9488\u4f1a\u6539\u53d8"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#24","text":"open \u51fd\u6570\u9ed8\u8ba4\u4ee5 \u53ea\u8bfb\u65b9\u5f0f \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61 \u8bed\u6cd5\u5982\u4e0b\uff1a f = open ( \"\u6587\u4ef6\u540d\" , \"\u8bbf\u95ee\u65b9\u5f0f\" ) \u8bbf\u95ee\u65b9\u5f0f \u8bf4\u660e r \u4ee5**\u53ea\u8bfb**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u6587\u4ef6\u7684\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u8fd9\u662f**\u9ed8\u8ba4\u6a21\u5f0f**\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u629b\u51fa\u5f02\u5e38 w \u4ee5**\u53ea\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6 a \u4ee5**\u8ffd\u52a0**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u6587\u4ef6\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u8fdb\u884c\u5199\u5165 r+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u6587\u4ef6\u7684\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u5f00\u5934\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u629b\u51fa\u5f02\u5e38 w+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6 a+ \u4ee5**\u8bfb\u5199**\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u6587\u4ef6\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u8fdb\u884c\u5199\u5165 \u63d0\u793a \u9891\u7e41\u7684\u79fb\u52a8\u6587\u4ef6\u6307\u9488\uff0c \u4f1a\u5f71\u54cd\u6587\u4ef6\u7684\u8bfb\u5199\u6548\u7387 \uff0c\u5f00\u53d1\u4e2d\u66f4\u591a\u7684\u65f6\u5019\u4f1a\u4ee5 \u53ea\u8bfb \u3001 \u53ea\u5199 \u7684\u65b9\u5f0f\u6765\u64cd\u4f5c\u6587\u4ef6 \u5199\u5165\u6587\u4ef6\u793a\u4f8b # \u6253\u5f00\u6587\u4ef6 f = open ( \"README\" , \"w\" ) #\u4f7f\u7528,+\" value\" \u90fd\u662f\u4ee5\u5b57\u7b26\u4e32\u4e3a\u5173\u952e\u5b57 f . write ( \"hello python\uff01 \\n \" ) f . write ( \"\u4eca\u5929\u5929\u6c14\u771f\u597d\" ) # \u5173\u95ed\u6587\u4ef6 f . close ()","title":"2.4 \u6253\u5f00\u6587\u4ef6\u7684\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#25","text":"read \u65b9\u6cd5\u9ed8\u8ba4\u4f1a\u628a\u6587\u4ef6\u7684 \u6240\u6709\u5185\u5bb9 \u4e00\u6b21\u6027\u8bfb\u53d6\u5230\u5185\u5b58 \u5982\u679c\u6587\u4ef6\u592a\u5927\uff0c\u5bf9\u5185\u5b58\u7684\u5360\u7528\u4f1a\u975e\u5e38\u4e25\u91cd(\u6587\u4ef6\u5927\u5c0f\u6bd4\u5185\u5b58\u5927\u5c31\u7206\u4e86\u5185\u5b58)","title":"2.5 \u6309\u884c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#readline","text":"readline \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u8bfb\u53d6\u4e00\u884c\u5185\u5bb9 \u65b9\u6cd5\u6267\u884c\u540e\uff0c\u4f1a\u628a \u6587\u4ef6\u6307\u9488 \u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u51c6\u5907\u518d\u6b21\u8bfb\u53d6 \u8bfb\u53d6\u5927\u6587\u4ef6\u7684\u6b63\u786e\u59ff\u52bf # \u6253\u5f00\u6587\u4ef6 file = open ( \"README\" ) #\u9996\u9009\u6253\u5f00\u6587\u4ef6 while True : # \u8bfb\u53d6\u4e00\u884c\u5185\u5bb9 text = file . readline () # \u5224\u65ad\u662f\u5426\u8bfb\u5230\u5185\u5bb9 if not text : break #\u8df3\u51fa\u5faa\u73af # \u6bcf\u8bfb\u53d6\u4e00\u884c\u7684\u672b\u5c3e\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a `\\n` print ( text , end = \"\" ) # \u5173\u95ed\u6587\u4ef6 file . close ()","title":"readline \u65b9\u6cd5"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#26","text":"\u76ee\u6807 \u7528\u4ee3\u7801\u7684\u65b9\u5f0f\uff0c\u6765\u5b9e\u73b0\u6587\u4ef6\u590d\u5236\u8fc7\u7a0b","title":"2.6 \u6587\u4ef6\u8bfb\u5199\u6848\u4f8b \u2014\u2014 \u590d\u5236\u6587\u4ef6"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_6","text":"\u6253\u5f00\u4e00\u4e2a\u5df2\u6709\u6587\u4ef6\uff0c\u8bfb\u53d6\u5b8c\u6574\u5185\u5bb9\uff0c\u5e76\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6 # 1. \u6253\u5f00\u6587\u4ef6 file_read = open ( \"README\" ) #\u6e90\u6587\u4ef6\u4ee5\u53ea\u8bfb\u65b9\u5f0f file_write = open ( \"README[\u590d\u4ef6]\" , \"w\" ) #\u76ee\u6807\u6587\u4ef6\u4ee5\u53ea\u5199\u65b9\u5f0f # 2. \u8bfb\u53d6\u5e76\u5199\u5165\u6587\u4ef6 text = file_read . read () file_write . write ( text ) # 3. \u5173\u95ed\u6587\u4ef6 file_read . close () file_write . close ()","title":"\u5c0f\u6587\u4ef6\u590d\u5236(\u5b8c\u6574\u5168\u90e8\u590d\u5236:\u4e0d\u6015\u5185\u5b58\u7684\u5360\u7528)"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_7","text":"\u6253\u5f00\u4e00\u4e2a\u5df2\u6709\u6587\u4ef6\uff0c\u9010\u884c\u8bfb\u53d6\u5185\u5bb9\uff0c\u5e76\u987a\u5e8f\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6 # 1. \u6253\u5f00\u6587\u4ef6 file_read = open ( \"README\" ) file_write = open ( \"README[\u590d\u4ef6]\" , \"w\" ) # 2. \u8bfb\u53d6\u5e76\u5199\u5165\u6587\u4ef6 while True : # \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c text = file_read . readline () # \u5224\u65ad\u662f\u5426\u8bfb\u53d6\u5230\u5185\u5bb9 if not text : break file_write . write ( text ) #\u6307\u9488\u4e00\u6837\u4f1a\u79fb\u52a8\u5230\u672b\u5c3e # 3. \u5173\u95ed\u6587\u4ef6 file_read . close () file_write . close ()","title":"\u5927\u6587\u4ef6\u590d\u5236"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#pythonreadreadlinereadlines","text":"\u4e00\u3001read([size])\u65b9\u6cd5 read([size])\u65b9\u6cd5\u4ece\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e\u8d77\u8bfb\u53d6size\u4e2a\u5b57\u8282(\u6ce8\u610f)\uff0c\u82e5\u65e0\u53c2\u6570size\uff0c\u5219\u8868\u793a\u8bfb\u53d6\u81f3\u6587\u4ef6\u7ed3\u675f\u4e3a\u6b62\uff0c\u5b83\u8303\u56f4\u4e3a\u5b57\u7b26\u4e32\u5bf9\u8c61 f = open ( \"a.txt\" ) lines = f . read () print lines print ( type ( lines )) f . close () \u8f93\u51fa\u7ed3\u679c\uff1a Hello Welcome What is the fuck ... < type 'str' > #\u5b57\u7b26\u4e32\u7c7b\u578b \u4e8c\u3001readline()\u65b9\u6cd5 \u4ece\u5b57\u9762\u610f\u601d\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u65b9\u6cd5\u6bcf\u6b21\u8bfb\u51fa\u4e00\u884c\u5185\u5bb9\uff0c\u6240\u4ee5\uff0c\u8bfb\u53d6\u65f6\u5360\u7528\u5185\u5b58\u5c0f\uff0c\u6bd4\u8f83\u9002\u5408\u5927\u6587\u4ef6\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 f = open ( \"a.txt\" ) line = f . readline () print ( type ( line )) while line : print line , line = f . readline () f . close () \u8f93\u51fa\u7ed3\u679c\uff1a < type 'str' > Hello Welcome What is the fuck ... \u4e09\u3001readlines()\u65b9\u6cd5\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u6240\u6709\u884c\uff0c\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868(list)\u53d8\u91cf\u4e2d\uff0c\u6bcf\u884c\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u8bfb\u53d6\u5927\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5360\u5185\u5b58 f = open ( \"a.txt\" ) lines = f . readlines () print ( type ( lines )) for line in lines : print ( line ) f . close () \u8f93\u51fa\u7ed3\u679c\uff1a < type 'list' > Hello Welcome What is the fuck ... \u56db\u3001linecache\u6a21\u5757 \u5f53\u7136\uff0c\u6709\u7279\u6b8a\u9700\u6c42\u8fd8\u53ef\u4ee5\u7528linecache\u6a21\u5757\uff0c\u6bd4\u5982\u4f60\u8981\u8f93\u51fa\u67d0\u4e2a\u6587\u4ef6\u7684\u7b2cn\u884c\uff1a # \u8f93\u51fa\u7b2c2\u884c text = linecache . getline ( \u2018 a . txt ',2) print ( text )","title":"Python\u4e2dread()\u3001readline()\u548creadlines()\u4e09\u8005\u95f4\u7684\u533a\u522b\u548c\u7528\u6cd5"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#03","text":"\u5728 \u7ec8\u7aef / \u6587\u4ef6\u6d4f\u89c8\u5668 \u3001 \u4e2d\u53ef\u4ee5\u6267\u884c\u5e38\u89c4\u7684 \u6587\u4ef6 / \u76ee\u5f55 \u7ba1\u7406\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a \u521b\u5efa\u3001\u91cd\u547d\u540d\u3001\u5220\u9664\u3001\u6539\u53d8\u8def\u5f84\u3001\u67e5\u770b\u76ee\u5f55\u5185\u5bb9\u3001\u2026\u2026 \u5728 Python \u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u901a\u8fc7\u7a0b\u5e8f\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff0c\u9700\u8981\u5bfc\u5165 os \u6a21\u5757","title":"03. \u6587\u4ef6/\u76ee\u5f55\u7684\u5e38\u7528\u7ba1\u7406\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_8","text":"\u5e8f\u53f7 \u65b9\u6cd5\u540d \u8bf4\u660e \u793a\u4f8b 01 rename \u91cd\u547d\u540d\u6587\u4ef6 os.rename(\u6e90\u6587\u4ef6\u540d, \u76ee\u6807\u6587\u4ef6\u540d) 02 remove \u5220\u9664\u6587\u4ef6 os.remove(\u6587\u4ef6\u540d)","title":"\u6587\u4ef6\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#_9","text":"\u5e8f\u53f7 \u65b9\u6cd5\u540d \u8bf4\u660e \u793a\u4f8b 01 listdir \u76ee\u5f55\u5217\u8868 os.listdir(\u76ee\u5f55\u540d) 02 mkdir \u521b\u5efa\u76ee\u5f55 os.mkdir(\u76ee\u5f55\u540d) 03 rmdir \u5220\u9664\u76ee\u5f55 os.rmdir(\u76ee\u5f55\u540d) 04 getcwd \u83b7\u53d6\u5f53\u524d\u76ee\u5f55 os.getcwd() 05 chdir \u4fee\u6539\u5de5\u4f5c\u76ee\u5f55 os.chdir(\u76ee\u6807\u76ee\u5f55) 06 path.isdir \u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6 os.path.isdir(\u6587\u4ef6\u8def\u5f84) \u63d0\u793a\uff1a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u64cd\u4f5c\u90fd\u652f\u6301 \u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u5c0f\u4f8b\u5b50:\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5e76\u6253\u5370\u6587\u4ef6\u540d # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 19 22:28:14 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 19 22:28:14 2019 @author: zangz \"\"\" import os #\u5bfc\u5165os\u5305 def list_name ( path ): #path\u662f\u9700\u8981\u83b7\u53d6\u76ee\u5f55\u6587\u4ef6\u540d\u7684\u8def\u5f84 list_name = os . listdir () #\u83b7\u53d6\u8fd9\u4e2a\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5230\u5217\u8868\u4e2d print ( '\u6587\u4ef6\u5217\u8868: ' , list_name ) #\u6253\u5370\u8fd9\u4e2a\u5217\u8868 print ( '\u7c7b\u578b: ' , type ( list_name )) #\u6253\u5370\u8fd9\u4e2a\u7c7b\u578b for i in list_name : print ( '\u6587\u4ef6\u540d: ' , i ) path = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ \u6c49\u5b57\u8f6c\u62fc\u97f3' list_name ( path ) \u6267\u884c\u7ed3\u679c: \u6587\u4ef6\u5217\u8868 : [ '.ipynb_checkpoints' , 'std\u603b.txt' , '\u62fc\u97f3.txt' , '\u6587\u4ef6\u540d.txt' , '\u6c49\u5b57\u62fc\u97f3\u7684\u4e00\u4e9b\u53c2\u8003\u4ee3\u7801.ipynb' , '\u6c49\u5b57\u8f6c\u62fc\u97f3.ipynb' , '\u8bfb\u53d6\u6587\u4ef6\u540d\u4e2d\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5408\u5e76.py' ] \u7c7b\u578b : < class ' list '> \u6587\u4ef6\u540d : . ipynb_checkpoints \u6587\u4ef6\u540d : std\u603b . txt \u6587\u4ef6\u540d : \u62fc\u97f3 . txt \u6587\u4ef6\u540d : \u6587\u4ef6\u540d . txt \u6587\u4ef6\u540d : \u6c49\u5b57\u62fc\u97f3\u7684\u4e00\u4e9b\u53c2\u8003\u4ee3\u7801 . ipynb \u6587\u4ef6\u540d : \u6c49\u5b57\u8f6c\u62fc\u97f3 . ipynb \u6587\u4ef6\u540d : \u8bfb\u53d6\u6587\u4ef6\u540d\u4e2d\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5408\u5e76 . py","title":"\u76ee\u5f55\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#04","text":"\u6587\u672c\u6587\u4ef6\u5b58\u50a8\u7684\u5185\u5bb9\u662f\u57fa\u4e8e \u5b57\u7b26\u7f16\u7801 \u7684\u6587\u4ef6\uff0c\u5e38\u89c1\u7684\u7f16\u7801\u6709 ASCII \u7f16\u7801\uff0c UNICODE \u7f16\u7801\u7b49 Python 2.x \u9ed8\u8ba4\u4f7f\u7528 ASCII \u7f16\u7801\u683c\u5f0f Python 3.x \u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f","title":"04. \u6587\u672c\u6587\u4ef6\u7684\u7f16\u7801\u683c\u5f0f\uff08\u79d1\u666e\uff09"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#41-ascii-unicode","text":"","title":"4.1 ASCII \u7f16\u7801\u548c UNICODE \u7f16\u7801"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#ascii","text":"\u8ba1\u7b97\u673a\u4e2d\u53ea\u6709 256 \u4e2a ASCII \u5b57\u7b26 \u4e00\u4e2a ASCII \u5728\u5185\u5b58\u4e2d\u5360\u7528 1 \u4e2a\u5b57\u8282 \u7684\u7a7a\u95f4 8 \u4e2a 0/1 \u7684\u6392\u5217\u7ec4\u5408\u65b9\u5f0f\u4e00\u5171\u6709 256 \u79cd\uff0c\u4e5f\u5c31\u662f 2 ** 8","title":"ASCII \u7f16\u7801"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#utf-8","text":"\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528 1~6 \u4e2a\u5b57\u8282 \u6765\u8868\u793a\u4e00\u4e2a UTF-8 \u5b57\u7b26\uff0c\u6db5\u76d6\u4e86 \u5730\u7403\u4e0a\u51e0\u4e4e\u6240\u6709\u5730\u533a\u7684\u6587\u5b57 \u5927\u591a\u6570\u6c49\u5b57\u4f1a\u4f7f\u7528 3 \u4e2a\u5b57\u8282 \u8868\u793a UTF-8 \u662f UNICODE \u7f16\u7801\u7684\u4e00\u79cd\u7f16\u7801\u683c\u5f0f","title":"UTF-8 \u7f16\u7801\u683c\u5f0f"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#42-ptyhon-2x","text":"Python 2.x \u9ed8\u8ba4\u4f7f\u7528 ASCII \u7f16\u7801\u683c\u5f0f Python 3.x \u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f \u5728 Python 2.x \u6587\u4ef6\u7684 \u7b2c\u4e00\u884c \u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u89e3\u91ca\u5668\u4f1a\u4ee5 utf-8 \u7f16\u7801\u6765\u5904\u7406 python \u6587\u4ef6 # *-* coding:utf8 *-* \u8fd9\u65b9\u5f0f\u662f\u5b98\u65b9\u63a8\u8350\u4f7f\u7528\u7684\uff01 \u4e5f\u53ef\u4ee5\u4f7f\u7528 # coding=utf8","title":"4.2 Ptyhon 2.x \u4e2d\u5982\u4f55\u4f7f\u7528\u4e2d\u6587"},{"location":"python\u5b66\u4e60/002 python\u64cd\u4f5c\u6587\u4ef6/#unicode","text":"\u5728 Python 2.x \u4e2d\uff0c\u5373\u4f7f\u6307\u5b9a\u4e86\u6587\u4ef6\u4f7f\u7528 UTF-8 \u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f46\u662f\u5728\u904d\u5386\u5b57\u7b26\u4e32\u65f6\uff0c\u4ecd\u7136\u4f1a \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u904d\u5386 \u5b57\u7b26\u4e32 \u8981\u80fd\u591f \u6b63\u786e\u7684\u904d\u5386\u5b57\u7b26\u4e32 \uff0c\u5728\u5b9a\u4e49\u5b57\u7b26\u4e32\u65f6\uff0c\u9700\u8981 \u5728\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u524d \uff0c\u589e\u52a0\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd u \uff0c\u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a unicode \u5b57\u7b26\u4e32\uff08\u4f7f\u7528 UTF-8 \u7f16\u7801\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff09 # *-* coding:utf8 *-* # \u5728\u5b57\u7b26\u4e32\u524d\uff0c\u589e\u52a0\u4e00\u4e2a `u` \u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a utf8 \u5b57\u7b26\u4e32 hello_str = u \"\u4f60\u597d\u4e16\u754c\" print ( hello_str ) for c in hello_str : print ( c )","title":"unicode \u5b57\u7b26\u4e32"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/","text":"shutil\u6a21\u5757:\u4e3b\u8981\u4f5c\u7528\u4e0e\u62f7\u8d1d\u6587\u4ef6\u7528\u7684\u3002 \u00b6 \u5f15\u5165\uff1a import shutil 1. shutil.copyfileobj(\u6587\u4ef61\uff0c\u6587\u4ef62) \uff1a\u5c06\u6587\u4ef61\u7684\u6570\u636e\u8986\u76d6copy\u7ed9\u6587\u4ef62,\u76ee\u6807\u6587\u4ef6\u9700\u8981\u5b58\u5728 \u00b6 \u4f8b: import shutil #\u5bfc\u5305 f1 = open ( \"1.txt\" , encoding = \"utf-8\" ) f2 = open ( \"2.txt\" , \"w\" , encoding = \"utf-8\" ) shutil . copyfileobj ( f1 , f2 ) #\u5c06f1\u4e2d\u7684\u6570\u636e\u8986\u76d6f2\u4e2d\u7684\u6570\u636e 2. shutil.copyfile(\u6587\u4ef61\uff0c\u6587\u4ef62) \uff1a\u4e0d\u7528\u6253\u5f00\u6587\u4ef6\uff0c\u76f4\u63a5\u7528\u6587\u4ef6\u540d\u8fdb\u884c\u8986\u76d6copy\u3002\u76ee\u6807\u6587\u4ef6\u65e0\u9700\u5b58\u5728 \u00b6 import shutil shutil . copyfile ( \"1.txt\" , \"3.txt\" ) 3. shutil.copymode(\u6587\u4ef61\uff0c\u6587\u4ef62) \uff1a\u4ec5\u62f7\u8d1d\u6743\u9650\u3002 \u5185\u5bb9\u3001\u7ec4\u3001\u7528\u6237\u5747\u4e0d\u53d8, \u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u5b58\u5728 \u00b6 \u539f\u51fd\u6570: def copymode ( src , dst ): \"\"\"copy mode bits from src to dst\"\"\" if hasattr ( os , 'chmod' ): st = os . stat ( stc ) mode = stat . S_IMODE ( st . st_mode ) os . chmod ( dst , mode ) \u4f8b: import os import shutil file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' #\u6709\u53ea\u8bfb\u6743\u9650\u7684\u6587\u4ef6 path = 'P: \\\\ python\u7a0b\u5e8f \\\\ file_path \\\\ 123.txt' #\u9700\u8981\u83b7\u53d6\u54c8\u54c8\u6587\u4ef6\u6743\u9650\u7684\u6587\u4ef6 #shutil.copymode(\u6587\u4ef61\uff0c\u6587\u4ef62) #\u4f2a\u4ee3\u7801 path_1 = shutil . copymode ( file , path ) #\u6743\u9650\u7684\u66f4\u6539 \u672a\u6267\u884c\u65f6: \u6267\u884c\u7a0b\u5e8f\u540e: 4. shutil.copystat(\u6587\u4ef61\uff0c\u6587\u4ef6) \uff1a\u4ec5\u62f7\u8d1d\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5305\u62ec\uff1amode bits, atime, mtime, flags, \u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u5b58\u5728 \u00b6 \u539f\u51fd\u6570: def copystat ( src , dst ): \"\"\"\u5c06\u6240\u6709\u7684\u72b6\u6001\u4fe1\u606f(\u6a21\u5f0f\u4f4d\u3001\u65f6\u95f4\u3001\u65f6\u95f4\u3001\u6807\u5fd7)\u4ecesrc\u590d\u5236\u5230dst\"\"\" st = os . stat ( src ) mode = stat . S_IMODE ( st . st_mode ) if hasattr ( os , 'utime' ): os . utime ( dst ,( st . st_atime , st . st_mtime )) if hasattr ( os , 'chmod' ) os . chmod ( dst , mode ) if hasattr ( os , 'chflags' ) and hasattr ( st , 'st_flags' ): try : os . chflags ( dst , st . st_flags ) except OSError , why : for err in 'EOPNOTSUPP' , 'ENOTSUP' : if hasattr ( errno , err ) and why . errno == getattr ( errno , err ): break else : raise \u6267\u884c\u4e4b\u540e\u53ea\u4f1a\u6539\u53d8\u6743\u9650,\u6240\u5c5e\u7684 5. shutil.copy(\u6587\u4ef61\uff0c\u6587\u4ef62) \uff1a\u62f7\u8d1d\u6587\u4ef6\u548c\u6743\u9650\u90fd\u8fdb\u884ccopy\u3002\u76ee\u6807\u6587\u4ef6\u4e0d\u9700\u8981\u5b58\u5728 \u00b6 \u539f\u51fd\u6570: def copy ( src , dst ): \"\"\"copy data and mode bits (\"cp src dst\") The destination may be a directory. \"\"\" if os . path . isdir ( dst ): dst = os . path . join ( dst , os . path . basename ( src )) copyfile ( src , dst ) copymode ( src , dst ) \u529f\u80fd\uff1a\u62f7\u8d1d\u6587\u4ef6\u548c\u6743\u9650\u90fd\u8fdb\u884ccopy\u3002 \u683c\u5f0f\uff1a shutil.copy('\u6765\u6e90\u6587\u4ef6','\u76ee\u6807\u5730\u5740') \u8fd4\u56de\u503c\uff1a\u590d\u5236\u4e4b\u540e\u7684\u8def\u5f84 \u4f8b: import os import shutil file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' #\u6587\u4ef6\u8def\u5f84 path = 'P: \\\\ python\u7a0b\u5e8f \\\\ file_path' #\u9700\u8981\u590d\u5236\u5230\u7684\u6587\u4ef6\u8def\u5f84 #shutil.copy('\u6765\u6e90\u6587\u4ef6','\u76ee\u6807\u5730\u5740') #\u4f2a\u4ee3\u7801 path_1 = shutil . copy ( file , path ) #\u8fdb\u884c\u6587\u4ef6\u7684\u590d\u5236 print ( path_1 ) #\u6253\u5370\u8fd4\u56de\u503c\u4e3a\u6587\u4ef6\u7684\u8def\u5f84 \u6267\u884c\u7ed3\u679c: P : \\ python\u7a0b\u5e8f \\ file_path \\ \u54c8\u54c8 . txt 6. shutil.copy2(\u6587\u4ef61\uff0c\u6587\u4ef62) \uff1a\u62f7\u8d1d\u4e86\u6587\u4ef6\u548c\u72b6\u6001\u4fe1\u606f\u3002\u76ee\u6807\u6587\u4ef6\u4e0d\u9700\u8981\u5b58\u5728 \u00b6 7. shutil.copytree(\u6e90\u76ee\u5f55\uff0c\u76ee\u6807\u76ee\u5f55) \uff1a\u53ef\u4ee5\u9012\u5f52copy\u591a\u4e2a\u76ee\u5f55\u5230\u6307\u5b9a\u76ee\u5f55\u4e0b\u3002 \u00b6 \u4f7f\u7528\u65b9\u5f0f: shutil . ignore_patterns ( * patterns ) shutil . copytree ( src , dst , symlinks = False , ignore = None ) \u4f7f\u7528\u65b9\u5f0f: \u9012\u5f52\u7684\u53bb\u62f7\u8d1d\u6587\u4ef6\u5939 import shutil shutil . copytree ( 'folder1' , 'folder2' , ignore = shutil . ignore_patterns ( '*.pyc' , 'tmp*' )) #\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728\uff0c\u6ce8\u610f\u5bf9folder2\u76ee\u5f55\u7236\u7ea7\u76ee\u5f55\u8981\u6709\u53ef\u5199\u6743\u9650\uff0cignore\u7684\u610f\u601d\u662f\u6392\u9664 \u4f8b:\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728, folder2='C:\\\\Users\\\\zangz\\\\Desktop\\\\123' \u8fd9\u91cc\u7684123\u6587\u4ef6\u5939\u4e0d\u80fd\u5b58\u5728 \u00b6 #\u9012\u5f52\u7684\u53bb\u62f7\u8d1d\u6587\u4ef6\u5939 folder1 = 'P: \\\\ python\u7a0b\u5e8f' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . copytree ( folder1 , folder2 , ignore = shutil . ignore_patterns ( '*.pyc' , 'tmp*' )) #\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728\uff0c\u6ce8\u610f\u5bf9folder2\u76ee\u5f55\u7236\u7ea7\u76ee\u5f55\u8981\u6709\u53ef\u5199\u6743\u9650\uff0cignore\u7684\u610f\u601d\u662f\u6392\u9664 8. shutil.rmtree(\u76ee\u6807\u76ee\u5f55) \uff1a\u53ef\u4ee5\u9012\u5f52\u5220\u9664\u76ee\u5f55\u4e0b\u7684\u76ee\u5f55\u53ca\u6587\u4ef6\u3002 \u00b6 \u4f8b: folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . rmtree ( folder2 ) \u6267\u884c\u4e4b\u540e\u8fd9\u4e2a\u6587\u4ef6\u5c31\u4f1a\u88ab\u5220\u9664, \u4f46\u662f\u6ce8\u610f\u7684\u662f\u6709\u53ea\u8bfb\u6743\u9650\u7684\u5220\u9664\u4e0d\u4e86 9. shutil.move(\u6e90\u6587\u4ef6\uff0c\u6307\u5b9a\u8def\u5f84) \uff1a\u9012\u5f52\u79fb\u52a8\u4e00\u4e2a\u6587\u4ef6\u3002 \u00b6 \u4f8b: file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . move ( file , folder2 ) \u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u4e0d\u80fd\u79fb\u52a8\u53ea\u8bfb\u6743\u9650\u7684\u6587\u4ef6,\u4ee5\u53ca\u6253\u5f00\u7684\u6587\u4ef6 10. shutil.make_archive() \uff1a\u53ef\u4ee5\u538b\u7f29\uff0c\u6253\u5305\u6587\u4ef6\u3002 \u00b6 \u8be6\u7ec6\u7684\u89e3\u91ca: shutil.make_archive(base_name, format,...) \u521b\u5efa\u538b\u7f29\u5305\u5e76\u8fd4\u56de\u6587\u4ef6\u8def\u5f84\uff0c\u4f8b\u5982\uff1azip\u3001tar base_name\uff1a \u538b\u7f29\u5305\u7684\u6587\u4ef6\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u538b\u7f29\u5305\u7684\u8def\u5f84\u3002\u53ea\u662f\u6587\u4ef6\u540d\u65f6\uff0c\u5219\u4fdd\u5b58\u81f3\u5f53\u524d\u76ee\u5f55\uff0c\u5426\u5219\u4fdd\u5b58\u81f3\u6307\u5b9a\u8def\u5f84\uff0c \u5982 data_bak =>\u4fdd\u5b58\u81f3\u5f53\u524d\u8def\u5f84 \u5982\uff1a/tmp/data_bak =>\u4fdd\u5b58\u81f3/tmp/ format\uff1a \u538b\u7f29\u5305\u79cd\u7c7b\uff0c\u201czip\u201d, \u201ctar\u201d, \u201cbztar\u201d\uff0c\u201cgztar\u201d root_dir\uff1a \u8981\u538b\u7f29\u7684\u6587\u4ef6\u5939\u8def\u5f84\uff08\u9ed8\u8ba4\u5f53\u524d\u76ee\u5f55\uff09 owner\uff1a \u7528\u6237\uff0c\u9ed8\u8ba4\u5f53\u524d\u7528\u6237 group\uff1a \u7ec4\uff0c\u9ed8\u8ba4\u5f53\u524d\u7ec4 logger\uff1a \u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\uff0c\u901a\u5e38\u662flogging.Logger\u5bf9\u8c61 \u4f8b: folder1 = 'P: \\\\ python\u7a0b\u5e8f' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . make_archive ( folder1 , \"zip\" , folder2 ) #\u5c06folder\u4e2d\u7684\u6587\u4ef6\u538b\u7f29\u5230P\u76d8,\u540d\u5b57\u4e3apython\u7a0b\u5e8f,\u538b\u7f29\u7684\u683c\u5f0f\u662fzip \u6267\u884c\u7ed3\u679c: 'P: \\\\ python\u7a0b\u5e8f.zip' #\u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u538b\u7f29\u540e\u7684\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84 shutil \u5bf9\u538b\u7f29\u5305\u7684\u5904\u7406\u662f\u8c03\u7528 ZipFile \u548c TarFile \u4e24\u4e2a\u6a21\u5757\u6765\u8fdb\u884c\u7684\uff0c\u8be6\u7ec6\uff1a \u00b6 zipfile \u538b\u7f29\u89e3\u538b import zipfile # \u538b\u7f29 z = zipfile . ZipFile ( 'laxi.zip' , 'w' ) z . write ( 'a.log' ) z . write ( 'data.data' ) z . close () # \u89e3\u538b z = zipfile . ZipFile ( 'laxi.zip' , 'r' ) z . extractall () z . close () tarfile \u538b\u7f29\u89e3\u538b import tarfile # \u538b\u7f29 tar = tarfile . open ( 'your.tar' , 'w' ) tar . add ( '/Users/wupeiqi/PycharmProjects/bbs2.zip' , arcname = 'bbs2.zip' ) tar . add ( '/Users/wupeiqi/PycharmProjects/cmdb.zip' , arcname = 'cmdb.zip' ) tar . close () # \u89e3\u538b tar = tarfile . open ( 'your.tar' , 'r' ) tar . extractall () # \u53ef\u8bbe\u7f6e\u89e3\u538b\u5730\u5740 tar . close ()","title":"003 python\u4f7f\u7528shutil\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#shutil","text":"\u5f15\u5165\uff1a import shutil","title":"shutil\u6a21\u5757:\u4e3b\u8981\u4f5c\u7528\u4e0e\u62f7\u8d1d\u6587\u4ef6\u7528\u7684\u3002"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#1-shutilcopyfileobj121copy2","text":"\u4f8b: import shutil #\u5bfc\u5305 f1 = open ( \"1.txt\" , encoding = \"utf-8\" ) f2 = open ( \"2.txt\" , \"w\" , encoding = \"utf-8\" ) shutil . copyfileobj ( f1 , f2 ) #\u5c06f1\u4e2d\u7684\u6570\u636e\u8986\u76d6f2\u4e2d\u7684\u6570\u636e","title":"1. shutil.copyfileobj(\u6587\u4ef61\uff0c\u6587\u4ef62)\uff1a\u5c06\u6587\u4ef61\u7684\u6570\u636e\u8986\u76d6copy\u7ed9\u6587\u4ef62,\u76ee\u6807\u6587\u4ef6\u9700\u8981\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#2shutilcopyfile12copy","text":"import shutil shutil . copyfile ( \"1.txt\" , \"3.txt\" )","title":"2.shutil.copyfile(\u6587\u4ef61\uff0c\u6587\u4ef62)\uff1a\u4e0d\u7528\u6253\u5f00\u6587\u4ef6\uff0c\u76f4\u63a5\u7528\u6587\u4ef6\u540d\u8fdb\u884c\u8986\u76d6copy\u3002\u76ee\u6807\u6587\u4ef6\u65e0\u9700\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#3shutilcopymode12","text":"\u539f\u51fd\u6570: def copymode ( src , dst ): \"\"\"copy mode bits from src to dst\"\"\" if hasattr ( os , 'chmod' ): st = os . stat ( stc ) mode = stat . S_IMODE ( st . st_mode ) os . chmod ( dst , mode ) \u4f8b: import os import shutil file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' #\u6709\u53ea\u8bfb\u6743\u9650\u7684\u6587\u4ef6 path = 'P: \\\\ python\u7a0b\u5e8f \\\\ file_path \\\\ 123.txt' #\u9700\u8981\u83b7\u53d6\u54c8\u54c8\u6587\u4ef6\u6743\u9650\u7684\u6587\u4ef6 #shutil.copymode(\u6587\u4ef61\uff0c\u6587\u4ef62) #\u4f2a\u4ee3\u7801 path_1 = shutil . copymode ( file , path ) #\u6743\u9650\u7684\u66f4\u6539 \u672a\u6267\u884c\u65f6: \u6267\u884c\u7a0b\u5e8f\u540e:","title":"3.shutil.copymode(\u6587\u4ef61\uff0c\u6587\u4ef62)\uff1a\u4ec5\u62f7\u8d1d\u6743\u9650\u3002 \u5185\u5bb9\u3001\u7ec4\u3001\u7528\u6237\u5747\u4e0d\u53d8,  \u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#4shutilcopystat1mode-bits-atime-mtime-flags","text":"\u539f\u51fd\u6570: def copystat ( src , dst ): \"\"\"\u5c06\u6240\u6709\u7684\u72b6\u6001\u4fe1\u606f(\u6a21\u5f0f\u4f4d\u3001\u65f6\u95f4\u3001\u65f6\u95f4\u3001\u6807\u5fd7)\u4ecesrc\u590d\u5236\u5230dst\"\"\" st = os . stat ( src ) mode = stat . S_IMODE ( st . st_mode ) if hasattr ( os , 'utime' ): os . utime ( dst ,( st . st_atime , st . st_mtime )) if hasattr ( os , 'chmod' ) os . chmod ( dst , mode ) if hasattr ( os , 'chflags' ) and hasattr ( st , 'st_flags' ): try : os . chflags ( dst , st . st_flags ) except OSError , why : for err in 'EOPNOTSUPP' , 'ENOTSUP' : if hasattr ( errno , err ) and why . errno == getattr ( errno , err ): break else : raise \u6267\u884c\u4e4b\u540e\u53ea\u4f1a\u6539\u53d8\u6743\u9650,\u6240\u5c5e\u7684","title":"4.shutil.copystat(\u6587\u4ef61\uff0c\u6587\u4ef6)\uff1a\u4ec5\u62f7\u8d1d\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5305\u62ec\uff1amode bits, atime, mtime, flags,  \u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#5shutilcopy12copy","text":"\u539f\u51fd\u6570: def copy ( src , dst ): \"\"\"copy data and mode bits (\"cp src dst\") The destination may be a directory. \"\"\" if os . path . isdir ( dst ): dst = os . path . join ( dst , os . path . basename ( src )) copyfile ( src , dst ) copymode ( src , dst ) \u529f\u80fd\uff1a\u62f7\u8d1d\u6587\u4ef6\u548c\u6743\u9650\u90fd\u8fdb\u884ccopy\u3002 \u683c\u5f0f\uff1a shutil.copy('\u6765\u6e90\u6587\u4ef6','\u76ee\u6807\u5730\u5740') \u8fd4\u56de\u503c\uff1a\u590d\u5236\u4e4b\u540e\u7684\u8def\u5f84 \u4f8b: import os import shutil file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' #\u6587\u4ef6\u8def\u5f84 path = 'P: \\\\ python\u7a0b\u5e8f \\\\ file_path' #\u9700\u8981\u590d\u5236\u5230\u7684\u6587\u4ef6\u8def\u5f84 #shutil.copy('\u6765\u6e90\u6587\u4ef6','\u76ee\u6807\u5730\u5740') #\u4f2a\u4ee3\u7801 path_1 = shutil . copy ( file , path ) #\u8fdb\u884c\u6587\u4ef6\u7684\u590d\u5236 print ( path_1 ) #\u6253\u5370\u8fd4\u56de\u503c\u4e3a\u6587\u4ef6\u7684\u8def\u5f84 \u6267\u884c\u7ed3\u679c: P : \\ python\u7a0b\u5e8f \\ file_path \\ \u54c8\u54c8 . txt","title":"5.shutil.copy(\u6587\u4ef61\uff0c\u6587\u4ef62)\uff1a\u62f7\u8d1d\u6587\u4ef6\u548c\u6743\u9650\u90fd\u8fdb\u884ccopy\u3002\u76ee\u6807\u6587\u4ef6\u4e0d\u9700\u8981\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#6shutilcopy212","text":"","title":"6.shutil.copy2(\u6587\u4ef61\uff0c\u6587\u4ef62)\uff1a\u62f7\u8d1d\u4e86\u6587\u4ef6\u548c\u72b6\u6001\u4fe1\u606f\u3002\u76ee\u6807\u6587\u4ef6\u4e0d\u9700\u8981\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#7-shutilcopytreecopy","text":"\u4f7f\u7528\u65b9\u5f0f: shutil . ignore_patterns ( * patterns ) shutil . copytree ( src , dst , symlinks = False , ignore = None ) \u4f7f\u7528\u65b9\u5f0f: \u9012\u5f52\u7684\u53bb\u62f7\u8d1d\u6587\u4ef6\u5939 import shutil shutil . copytree ( 'folder1' , 'folder2' , ignore = shutil . ignore_patterns ( '*.pyc' , 'tmp*' )) #\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728\uff0c\u6ce8\u610f\u5bf9folder2\u76ee\u5f55\u7236\u7ea7\u76ee\u5f55\u8981\u6709\u53ef\u5199\u6743\u9650\uff0cignore\u7684\u610f\u601d\u662f\u6392\u9664","title":"7. shutil.copytree(\u6e90\u76ee\u5f55\uff0c\u76ee\u6807\u76ee\u5f55)\uff1a\u53ef\u4ee5\u9012\u5f52copy\u591a\u4e2a\u76ee\u5f55\u5230\u6307\u5b9a\u76ee\u5f55\u4e0b\u3002"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#folder2cuserszangzdesktop123-123","text":"#\u9012\u5f52\u7684\u53bb\u62f7\u8d1d\u6587\u4ef6\u5939 folder1 = 'P: \\\\ python\u7a0b\u5e8f' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . copytree ( folder1 , folder2 , ignore = shutil . ignore_patterns ( '*.pyc' , 'tmp*' )) #\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728\uff0c\u6ce8\u610f\u5bf9folder2\u76ee\u5f55\u7236\u7ea7\u76ee\u5f55\u8981\u6709\u53ef\u5199\u6743\u9650\uff0cignore\u7684\u610f\u601d\u662f\u6392\u9664","title":"\u4f8b:\u76ee\u6807\u76ee\u5f55\u4e0d\u80fd\u5b58\u5728,  folder2='C:\\\\Users\\\\zangz\\\\Desktop\\\\123' \u8fd9\u91cc\u7684123\u6587\u4ef6\u5939\u4e0d\u80fd\u5b58\u5728"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#8-shutilrmtree","text":"\u4f8b: folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . rmtree ( folder2 ) \u6267\u884c\u4e4b\u540e\u8fd9\u4e2a\u6587\u4ef6\u5c31\u4f1a\u88ab\u5220\u9664, \u4f46\u662f\u6ce8\u610f\u7684\u662f\u6709\u53ea\u8bfb\u6743\u9650\u7684\u5220\u9664\u4e0d\u4e86","title":"8. shutil.rmtree(\u76ee\u6807\u76ee\u5f55)\uff1a\u53ef\u4ee5\u9012\u5f52\u5220\u9664\u76ee\u5f55\u4e0b\u7684\u76ee\u5f55\u53ca\u6587\u4ef6\u3002"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#9-shutilmove","text":"\u4f8b: file = 'P: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c8.txt' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . move ( file , folder2 ) \u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u4e0d\u80fd\u79fb\u52a8\u53ea\u8bfb\u6743\u9650\u7684\u6587\u4ef6,\u4ee5\u53ca\u6253\u5f00\u7684\u6587\u4ef6","title":"9. shutil.move(\u6e90\u6587\u4ef6\uff0c\u6307\u5b9a\u8def\u5f84)\uff1a\u9012\u5f52\u79fb\u52a8\u4e00\u4e2a\u6587\u4ef6\u3002"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#10shutilmake_archive","text":"\u8be6\u7ec6\u7684\u89e3\u91ca: shutil.make_archive(base_name, format,...) \u521b\u5efa\u538b\u7f29\u5305\u5e76\u8fd4\u56de\u6587\u4ef6\u8def\u5f84\uff0c\u4f8b\u5982\uff1azip\u3001tar base_name\uff1a \u538b\u7f29\u5305\u7684\u6587\u4ef6\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u538b\u7f29\u5305\u7684\u8def\u5f84\u3002\u53ea\u662f\u6587\u4ef6\u540d\u65f6\uff0c\u5219\u4fdd\u5b58\u81f3\u5f53\u524d\u76ee\u5f55\uff0c\u5426\u5219\u4fdd\u5b58\u81f3\u6307\u5b9a\u8def\u5f84\uff0c \u5982 data_bak =>\u4fdd\u5b58\u81f3\u5f53\u524d\u8def\u5f84 \u5982\uff1a/tmp/data_bak =>\u4fdd\u5b58\u81f3/tmp/ format\uff1a \u538b\u7f29\u5305\u79cd\u7c7b\uff0c\u201czip\u201d, \u201ctar\u201d, \u201cbztar\u201d\uff0c\u201cgztar\u201d root_dir\uff1a \u8981\u538b\u7f29\u7684\u6587\u4ef6\u5939\u8def\u5f84\uff08\u9ed8\u8ba4\u5f53\u524d\u76ee\u5f55\uff09 owner\uff1a \u7528\u6237\uff0c\u9ed8\u8ba4\u5f53\u524d\u7528\u6237 group\uff1a \u7ec4\uff0c\u9ed8\u8ba4\u5f53\u524d\u7ec4 logger\uff1a \u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\uff0c\u901a\u5e38\u662flogging.Logger\u5bf9\u8c61 \u4f8b: folder1 = 'P: \\\\ python\u7a0b\u5e8f' folder2 = 'C: \\\\ Users \\\\ zangz \\\\ Desktop \\\\ 123' shutil . make_archive ( folder1 , \"zip\" , folder2 ) #\u5c06folder\u4e2d\u7684\u6587\u4ef6\u538b\u7f29\u5230P\u76d8,\u540d\u5b57\u4e3apython\u7a0b\u5e8f,\u538b\u7f29\u7684\u683c\u5f0f\u662fzip \u6267\u884c\u7ed3\u679c: 'P: \\\\ python\u7a0b\u5e8f.zip' #\u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u538b\u7f29\u540e\u7684\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84","title":"10.shutil.make_archive()\uff1a\u53ef\u4ee5\u538b\u7f29\uff0c\u6253\u5305\u6587\u4ef6\u3002"},{"location":"python\u5b66\u4e60/003python\u4f7f\u7528shutil-\u6a21\u5757\u79fb\u52a8\u590d\u5236\u6587\u4ef6/#shutil-zipfile-tarfile","text":"zipfile \u538b\u7f29\u89e3\u538b import zipfile # \u538b\u7f29 z = zipfile . ZipFile ( 'laxi.zip' , 'w' ) z . write ( 'a.log' ) z . write ( 'data.data' ) z . close () # \u89e3\u538b z = zipfile . ZipFile ( 'laxi.zip' , 'r' ) z . extractall () z . close () tarfile \u538b\u7f29\u89e3\u538b import tarfile # \u538b\u7f29 tar = tarfile . open ( 'your.tar' , 'w' ) tar . add ( '/Users/wupeiqi/PycharmProjects/bbs2.zip' , arcname = 'bbs2.zip' ) tar . add ( '/Users/wupeiqi/PycharmProjects/cmdb.zip' , arcname = 'cmdb.zip' ) tar . close () # \u89e3\u538b tar = tarfile . open ( 'your.tar' , 'r' ) tar . extractall () # \u53ef\u8bbe\u7f6e\u89e3\u538b\u5730\u5740 tar . close ()","title":"shutil \u5bf9\u538b\u7f29\u5305\u7684\u5904\u7406\u662f\u8c03\u7528 ZipFile \u548c TarFile \u4e24\u4e2a\u6a21\u5757\u6765\u8fdb\u884c\u7684\uff0c\u8be6\u7ec6\uff1a"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/","text":"python glob model \u00b6 \u8bf4\u660e\uff1a 1\u3001glob\u662fpython\u81ea\u5df1\u5e26\u7684\u4e00\u4e2a\u6587\u4ef6\u64cd\u4f5c\u76f8\u5173\u6a21\u5757\uff0c\u7528\u5b83\u53ef\u4ee5\u67e5\u627e\u7b26\u5408\u81ea\u5df1\u76ee\u7684\u7684\u6587\u4ef6\uff0c\u5c31\u7c7b\u4f3c\u4e8eWindows\u4e0b\u7684\u6587\u4ef6\u641c\u7d22\uff0c\u652f\u6301\u901a\u914d\u7b26\u64cd\u4f5c: * , ? , [], \u8fd9\u4e09\u4e2a\u901a\u914d\u7b26\uff0c*\u4ee3\u88680\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff0c?\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c[]\u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5b57\u7b26\uff0c\u5982[0-9]\u5339\u914d\u6570\u5b57\u3002 \u00b6 \u5b83\u7684\u4e3b\u8981\u65b9\u6cd5\u5c31\u662fglob, \u8be5\u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u5217\u8868\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u53c2\u6570\u7528\u6765\u6307\u5b9a\u5339\u914d\u7684\u8def\u5f84\u5b57\u7b26\u4e32\uff08\u672c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4e3a\u7edd\u5bf9\u8def\u5f84\u4e5f\u53ef\u4ee5\u4e3a\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u5176\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u53ea\u5305\u62ec\u5f53\u524d\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\u540d\uff0c\u4e0d\u5305\u62ec\u5b50\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u3002 \u00b6 \u6bd4\u5982\uff1a \u00b6 import glob glob . glob ( r 'K:\\python\u7a0b\u5e8f\\*.txt' ) \u8fd9\u91cc\u5c31\u662f\u83b7\u5f97 K:\\python\u7a0b\u5e8f\\ \u8def\u5f84\u4e0b\u7684\u6240\u6709txt\u6587\u4ef6 \u6267\u884c\u7ed3\u679c: [ 'K: \\\\ python\u7a0b\u5e8f \\\\ 123.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c81.txt' ] \u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de glob . glob ( r 'E:\\pic\\*\\*.jpg' ) \u83b7\u5f97\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709jpg\u6587\u4ef6 \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff1a glob . glob ( r '../python\u7a0b\u5e8f/*.py' ) \u6267\u884c\u7ed3\u679c: [ '../python\u7a0b\u5e8f \\\\ copy\u7b5b\u9009\u7684\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ glob\u6a21\u5757\u7684\u4f7f\u7528.py' , '../python\u7a0b\u5e8f \\\\ MP3\u5230wav\u683c\u5f0f\u7684\u8f6c\u6362.py' , '../python\u7a0b\u5e8f \\\\ shutil\u6a21\u5757\u7684\u4f7f\u7528.py' , '../python\u7a0b\u5e8f \\\\ wav\u8f6c\u6362.py' , '../python\u7a0b\u5e8f \\\\ \u5408\u5e76std\u7684\u6587\u5b57.py' , '../python\u7a0b\u5e8f \\\\ \u5faa\u73afcopy\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ \u5faa\u73af\u8bfb\u53d6\u884c\u5e76\u5199\u5165\u65b0\u7684\u6587\u529e.py' , '../python\u7a0b\u5e8f \\\\ \u6279\u91cf\u5bf9\u5e94\u91cd\u547d\u540d.py' , '../python\u7a0b\u5e8f \\\\ \u6279\u91cf\u5efa\u7acb\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ \u6587\u4ef6\u5408\u5e76.py' , '../python\u7a0b\u5e8f \\\\ \u6587\u4ef6\u540d\u7684\u5904\u7406.py' , '../python\u7a0b\u5e8f \\\\ \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\u540d,\u4ee5\u53ca\u5b50\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u540d.py' , '../python\u7a0b\u5e8f \\\\ \u8bcd\u9891\u5207\u5272.py' , '../python\u7a0b\u5e8f \\\\ \u8bcd\u9891\u53cd\u6b63\u6392\u5e8f.py' , '../python\u7a0b\u5e8f \\\\ \u8bfb\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84.py' , '../python\u7a0b\u5e8f \\\\ \u97f3\u9891\u6574\u6bb5\u526a\u5207.py' ] 2\u3001 iglob \u65b9\u6cd5\uff1a \u00b6 \u83b7\u53d6\u4e00\u4e2a\u53ef\u904d\u5386\u5bf9\u8c61\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u9010\u4e2a\u83b7\u53d6\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u540d\u3002\u4e0eglob.glob()\u7684\u533a\u522b\u662f\uff1aglob.glob\u540c\u65f6\u83b7\u53d6\u6240\u6709\u7684\u5339\u914d\u8def\u5f84\uff0c\u800c glob.iglob\u4e00\u6b21\u53ea\u83b7\u53d6\u4e00\u4e2a\u5339\u914d\u8def\u5f84\u3002\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e.NET\u4e2d\u64cd\u4f5c\u6570\u636e\u5e93\u7528\u5230\u7684DataSet\u4e0eDataReader\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a \u00b6 #\u7236\u76ee\u5f55\u4e2d\u7684.py\u6587\u4ef6 f = glob . iglob ( r '../python\u7a0b\u5e8f/*.py' ) print ( f ) for py in f : print ( py ) \u6267\u884c\u7ed3\u679c: < generator object _iglob at 0x0000018EABD605E8 > ../ python\u7a0b\u5e8f \\ copy\u7b5b\u9009\u7684\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ glob\u6a21\u5757\u7684\u4f7f\u7528 . py ../ python\u7a0b\u5e8f \\ MP3\u5230wav\u683c\u5f0f\u7684\u8f6c\u6362 . py ../ python\u7a0b\u5e8f \\ shutil\u6a21\u5757\u7684\u4f7f\u7528 . py ../ python\u7a0b\u5e8f \\ wav\u8f6c\u6362 . py ../ python\u7a0b\u5e8f \\ \u5408\u5e76 std\u7684\u6587\u5b57 . py ../ python\u7a0b\u5e8f \\ \u5faa\u73af copy\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ \u5faa\u73af\u8bfb\u53d6\u884c\u5e76\u5199\u5165\u65b0\u7684\u6587\u529e . py ../ python\u7a0b\u5e8f \\ \u6279\u91cf\u5bf9\u5e94\u91cd\u547d\u540d . py ../ python\u7a0b\u5e8f \\ \u6279\u91cf\u5efa\u7acb\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ \u6587\u4ef6\u5408\u5e76 . py ../ python\u7a0b\u5e8f \\ \u6587\u4ef6\u540d\u7684\u5904\u7406 . py ../ python\u7a0b\u5e8f \\ \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\u540d , \u4ee5\u53ca\u5b50\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u540d . py ../ python\u7a0b\u5e8f \\ \u8bcd\u9891\u5207\u5272 . py ../ python\u7a0b\u5e8f \\ \u8bcd\u9891\u53cd\u6b63\u6392\u5e8f . py ../ python\u7a0b\u5e8f \\ \u8bfb\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 . py ../ python\u7a0b\u5e8f \\ \u97f3\u9891\u6574\u6bb5\u526a\u5207 . py","title":"004 python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#python-glob-model","text":"\u8bf4\u660e\uff1a","title":"python glob model"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#1globpythonwindows-00-9","text":"","title":"1\u3001glob\u662fpython\u81ea\u5df1\u5e26\u7684\u4e00\u4e2a\u6587\u4ef6\u64cd\u4f5c\u76f8\u5173\u6a21\u5757\uff0c\u7528\u5b83\u53ef\u4ee5\u67e5\u627e\u7b26\u5408\u81ea\u5df1\u76ee\u7684\u7684\u6587\u4ef6\uff0c\u5c31\u7c7b\u4f3c\u4e8eWindows\u4e0b\u7684\u6587\u4ef6\u641c\u7d22\uff0c\u652f\u6301\u901a\u914d\u7b26\u64cd\u4f5c: * , ? , [], \u8fd9\u4e09\u4e2a\u901a\u914d\u7b26\uff0c*\u4ee3\u88680\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff0c?\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c[]\u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5b57\u7b26\uff0c\u5982[0-9]\u5339\u914d\u6570\u5b57\u3002"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#glob","text":"","title":"\u5b83\u7684\u4e3b\u8981\u65b9\u6cd5\u5c31\u662fglob, \u8be5\u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u5217\u8868\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u53c2\u6570\u7528\u6765\u6307\u5b9a\u5339\u914d\u7684\u8def\u5f84\u5b57\u7b26\u4e32\uff08\u672c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4e3a\u7edd\u5bf9\u8def\u5f84\u4e5f\u53ef\u4ee5\u4e3a\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u5176\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u53ea\u5305\u62ec\u5f53\u524d\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\u540d\uff0c\u4e0d\u5305\u62ec\u5b50\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u3002"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#_1","text":"import glob glob . glob ( r 'K:\\python\u7a0b\u5e8f\\*.txt' ) \u8fd9\u91cc\u5c31\u662f\u83b7\u5f97 K:\\python\u7a0b\u5e8f\\ \u8def\u5f84\u4e0b\u7684\u6240\u6709txt\u6587\u4ef6 \u6267\u884c\u7ed3\u679c: [ 'K: \\\\ python\u7a0b\u5e8f \\\\ 123.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c81.txt' ] \u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de glob . glob ( r 'E:\\pic\\*\\*.jpg' ) \u83b7\u5f97\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709jpg\u6587\u4ef6 \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff1a glob . glob ( r '../python\u7a0b\u5e8f/*.py' ) \u6267\u884c\u7ed3\u679c: [ '../python\u7a0b\u5e8f \\\\ copy\u7b5b\u9009\u7684\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ glob\u6a21\u5757\u7684\u4f7f\u7528.py' , '../python\u7a0b\u5e8f \\\\ MP3\u5230wav\u683c\u5f0f\u7684\u8f6c\u6362.py' , '../python\u7a0b\u5e8f \\\\ shutil\u6a21\u5757\u7684\u4f7f\u7528.py' , '../python\u7a0b\u5e8f \\\\ wav\u8f6c\u6362.py' , '../python\u7a0b\u5e8f \\\\ \u5408\u5e76std\u7684\u6587\u5b57.py' , '../python\u7a0b\u5e8f \\\\ \u5faa\u73afcopy\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ \u5faa\u73af\u8bfb\u53d6\u884c\u5e76\u5199\u5165\u65b0\u7684\u6587\u529e.py' , '../python\u7a0b\u5e8f \\\\ \u6279\u91cf\u5bf9\u5e94\u91cd\u547d\u540d.py' , '../python\u7a0b\u5e8f \\\\ \u6279\u91cf\u5efa\u7acb\u6587\u4ef6.py' , '../python\u7a0b\u5e8f \\\\ \u6587\u4ef6\u5408\u5e76.py' , '../python\u7a0b\u5e8f \\\\ \u6587\u4ef6\u540d\u7684\u5904\u7406.py' , '../python\u7a0b\u5e8f \\\\ \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\u540d,\u4ee5\u53ca\u5b50\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u540d.py' , '../python\u7a0b\u5e8f \\\\ \u8bcd\u9891\u5207\u5272.py' , '../python\u7a0b\u5e8f \\\\ \u8bcd\u9891\u53cd\u6b63\u6392\u5e8f.py' , '../python\u7a0b\u5e8f \\\\ \u8bfb\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84.py' , '../python\u7a0b\u5e8f \\\\ \u97f3\u9891\u6574\u6bb5\u526a\u5207.py' ]","title":"\u6bd4\u5982\uff1a"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#2iglob","text":"","title":"2\u3001iglob\u65b9\u6cd5\uff1a"},{"location":"python\u5b66\u4e60/004python\u4e2dglob\u6a21\u5757\u7684\u4f7f\u7528/#globglobglobglob-globiglobnetdatasetdatareader","text":"#\u7236\u76ee\u5f55\u4e2d\u7684.py\u6587\u4ef6 f = glob . iglob ( r '../python\u7a0b\u5e8f/*.py' ) print ( f ) for py in f : print ( py ) \u6267\u884c\u7ed3\u679c: < generator object _iglob at 0x0000018EABD605E8 > ../ python\u7a0b\u5e8f \\ copy\u7b5b\u9009\u7684\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ glob\u6a21\u5757\u7684\u4f7f\u7528 . py ../ python\u7a0b\u5e8f \\ MP3\u5230wav\u683c\u5f0f\u7684\u8f6c\u6362 . py ../ python\u7a0b\u5e8f \\ shutil\u6a21\u5757\u7684\u4f7f\u7528 . py ../ python\u7a0b\u5e8f \\ wav\u8f6c\u6362 . py ../ python\u7a0b\u5e8f \\ \u5408\u5e76 std\u7684\u6587\u5b57 . py ../ python\u7a0b\u5e8f \\ \u5faa\u73af copy\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ \u5faa\u73af\u8bfb\u53d6\u884c\u5e76\u5199\u5165\u65b0\u7684\u6587\u529e . py ../ python\u7a0b\u5e8f \\ \u6279\u91cf\u5bf9\u5e94\u91cd\u547d\u540d . py ../ python\u7a0b\u5e8f \\ \u6279\u91cf\u5efa\u7acb\u6587\u4ef6 . py ../ python\u7a0b\u5e8f \\ \u6587\u4ef6\u5408\u5e76 . py ../ python\u7a0b\u5e8f \\ \u6587\u4ef6\u540d\u7684\u5904\u7406 . py ../ python\u7a0b\u5e8f \\ \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\u540d , \u4ee5\u53ca\u5b50\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u540d . py ../ python\u7a0b\u5e8f \\ \u8bcd\u9891\u5207\u5272 . py ../ python\u7a0b\u5e8f \\ \u8bcd\u9891\u53cd\u6b63\u6392\u5e8f . py ../ python\u7a0b\u5e8f \\ \u8bfb\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 . py ../ python\u7a0b\u5e8f \\ \u97f3\u9891\u6574\u6bb5\u526a\u5207 . py","title":"\u83b7\u53d6\u4e00\u4e2a\u53ef\u904d\u5386\u5bf9\u8c61\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u9010\u4e2a\u83b7\u53d6\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u540d\u3002\u4e0eglob.glob()\u7684\u533a\u522b\u662f\uff1aglob.glob\u540c\u65f6\u83b7\u53d6\u6240\u6709\u7684\u5339\u914d\u8def\u5f84\uff0c\u800c glob.iglob\u4e00\u6b21\u53ea\u83b7\u53d6\u4e00\u4e2a\u5339\u914d\u8def\u5f84\u3002\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e.NET\u4e2d\u64cd\u4f5c\u6570\u636e\u5e93\u7528\u5230\u7684DataSet\u4e0eDataReader\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a"},{"location":"python\u5b66\u4e60/005python_\u4e2d\u6587\u8f6c\u6362\u6210\u62fc\u97f3_xpinyin\u5305/","text":"# coding:utf-8 from xpinyin import Pinyin p = Pinyin() # \u9ed8\u8ba4\u4ee5'-'\u4e3a\u5206\u5272\u7b26 a = p.get_pinyin(u\"\u4e0a\u6d77\") print(a) # \u9ed8\u8ba4\u4ee5'-'\u5206\u5272,\u663e\u793a\u97f3\u8c03 b = p.get_pinyin(u'\u4e0a\u6d77', show_tone_marks=True) print(b) # \u5220\u9664\u5206\u5272\u7b26 c = p.get_pinyin(u'\u4e0a\u6d77', '') print(c) # \u8bbe\u7f6e\u7a7a\u767d\u683c\u4e3a\u5206\u5272\u7b26 d = p.get_pinyin(u'\u4e0a\u6d77', ' ') print(d) d1 = p.get_initial(u'\u4e0a') print(d1) d2 = p.get_initials(u'\u4e0a\u6d77') print(d2) d3 = p.get_initials(u'\u4e0a\u6d77', u'') print(d3) d4 = p.get_initials(u'\u4e0a\u6d77', u' ') print(d4) # \u5982\u679c\u65b9\u6cd5\u4e2d\u4f20\u5165\u53d8\u91cf\uff0c\u90a3\u4e48\u76f4\u63a5\u52a0\u524d\u7f00\u662f\u4e0d\u53ef\u4ee5\u4e86\uff0c\u800c\u662f\u8981\u5c06\u53d8\u91cf\u8f6c\u4e3autf-8\u7f16\u7801\uff1a wordvalue = '\u4e2d\u56fd' wv = unicode(wordvalue, 'utf-8') s = p.get_initials(wv, u'').lower() print(s)","title":"005 python\u4e2d\u6587\u8f6c\u6362\u6210\u62fc\u97f3xpinyin\u5305"},{"location":"python\u5b66\u4e60/006pythoneval\u51fd\u6570/","text":"eval \u51fd\u6570 \u00b6 eval() \u51fd\u6570\u5341\u5206\u5f3a\u5927 \u2014\u2014 \u5c06\u5b57\u7b26\u4e32 \u5f53\u6210 \u6709\u6548\u7684\u8868\u8fbe\u5f0f \u6765\u6c42\u503c \u5e76 \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c # \u57fa\u672c\u7684\u6570\u5b66\u8ba1\u7b97 In [ 1 ]: eval ( \"1 + 1\" ) Out [ 1 ]: 2 # \u5b57\u7b26\u4e32\u91cd\u590d In [ 2 ]: eval ( \"'*' * 10\" ) Out [ 2 ]: '**********' # \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868 In [ 3 ]: type ( eval ( \"[1, 2, 3, 4, 5]\" )) Out [ 3 ]: list # \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5b57\u5178 In [ 4 ]: type ( eval ( \"{'name': 'xiaoming', 'age': 18}\" )) Out [ 4 ]: dict \u6848\u4f8b - \u8ba1\u7b97\u5668 \u00b6 \u9700\u6c42 \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a \u52a0\u51cf\u4e58\u9664\u6df7\u5408\u8fd0\u7b97 \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c input_str = input ( \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u7b97\u672f\u9898\uff1a\" ) print ( eval ( input_str )) \u4e0d\u8981\u6ee5\u7528 eval \u00b6 \u5728\u5f00\u53d1\u65f6\u5343\u4e07\u4e0d\u8981\u4f7f\u7528 eval \u76f4\u63a5\u8f6c\u6362 input \u7684\u7ed3\u679c __import__ ( 'os' ) . system ( 'ls' ) \u7b49\u4ef7\u4ee3\u7801 import os os . system ( \"\u7ec8\u7aef\u547d\u4ee4\" ) \u6267\u884c\u6210\u529f\uff0c\u8fd4\u56de 0 \u6267\u884c\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f eval\u51fd\u6570\u8fd8\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868\uff08[[1,2], [3,4], [5,6]]\uff09\u3001\u5b57\u5178\uff08{'a':1, 'b':2, 'c':3}\uff09\u548c\u5143\u7ec4\uff08([1,2], [3,4], [5,6])\uff09\u7c7b\u578b \u00b6 \u4f8b\u5982 pu = eval ( input ()) [ 1 , 2 , 3 ] pu Out [ 4 ]: [ 1 , 2 , 3 ] pu = eval ( input ()) [ 'a' ] pu Out [ 6 ]: [ 'a' ] pu = eval ( input ()) { 'a' } pu Out [ 8 ]: { 'a' }","title":"006 pythoneval\u51fd\u6570"},{"location":"python\u5b66\u4e60/006pythoneval\u51fd\u6570/#eval","text":"eval() \u51fd\u6570\u5341\u5206\u5f3a\u5927 \u2014\u2014 \u5c06\u5b57\u7b26\u4e32 \u5f53\u6210 \u6709\u6548\u7684\u8868\u8fbe\u5f0f \u6765\u6c42\u503c \u5e76 \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c # \u57fa\u672c\u7684\u6570\u5b66\u8ba1\u7b97 In [ 1 ]: eval ( \"1 + 1\" ) Out [ 1 ]: 2 # \u5b57\u7b26\u4e32\u91cd\u590d In [ 2 ]: eval ( \"'*' * 10\" ) Out [ 2 ]: '**********' # \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868 In [ 3 ]: type ( eval ( \"[1, 2, 3, 4, 5]\" )) Out [ 3 ]: list # \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5b57\u5178 In [ 4 ]: type ( eval ( \"{'name': 'xiaoming', 'age': 18}\" )) Out [ 4 ]: dict","title":"eval \u51fd\u6570"},{"location":"python\u5b66\u4e60/006pythoneval\u51fd\u6570/#-","text":"\u9700\u6c42 \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a \u52a0\u51cf\u4e58\u9664\u6df7\u5408\u8fd0\u7b97 \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c input_str = input ( \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u7b97\u672f\u9898\uff1a\" ) print ( eval ( input_str ))","title":"\u6848\u4f8b - \u8ba1\u7b97\u5668"},{"location":"python\u5b66\u4e60/006pythoneval\u51fd\u6570/#eval_1","text":"\u5728\u5f00\u53d1\u65f6\u5343\u4e07\u4e0d\u8981\u4f7f\u7528 eval \u76f4\u63a5\u8f6c\u6362 input \u7684\u7ed3\u679c __import__ ( 'os' ) . system ( 'ls' ) \u7b49\u4ef7\u4ee3\u7801 import os os . system ( \"\u7ec8\u7aef\u547d\u4ee4\" ) \u6267\u884c\u6210\u529f\uff0c\u8fd4\u56de 0 \u6267\u884c\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f","title":"\u4e0d\u8981\u6ee5\u7528 eval"},{"location":"python\u5b66\u4e60/006pythoneval\u51fd\u6570/#eval12-34-56a1-b2-c312-34-56","text":"\u4f8b\u5982 pu = eval ( input ()) [ 1 , 2 , 3 ] pu Out [ 4 ]: [ 1 , 2 , 3 ] pu = eval ( input ()) [ 'a' ] pu Out [ 6 ]: [ 'a' ] pu = eval ( input ()) { 'a' } pu Out [ 8 ]: { 'a' }","title":"eval\u51fd\u6570\u8fd8\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5217\u8868\uff08[[1,2], [3,4], [5,6]]\uff09\u3001\u5b57\u5178\uff08{'a':1, 'b':2, 'c':3}\uff09\u548c\u5143\u7ec4\uff08([1,2], [3,4], [5,6])\uff09\u7c7b\u578b"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/","text":"1:\u76f4\u63a5\u8d4b\u503c,\u9ed8\u8ba4\u6d45\u62f7\u8d1d\u4f20\u9012\u5bf9\u8c61\u7684\u5f15\u7528\u800c\u5df2,\u539f\u59cb\u5217\u8868\u6539\u53d8\uff0c\u88ab\u8d4b\u503c\u7684b\u4e5f\u4f1a\u505a\u76f8\u540c\u7684\u6539\u53d8 \u00b6 \u89e3\u6790\uff1a \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5217\u8868: a=[1,2,3] \u00b6 \u7136\u540e\u5c06**a**\u8d4b\u503c\u7ed9**b**: b=a \u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u7136\u540e\u67e5\u770b\u4ed6\u4eec\u7684\u5730\u5740: In [ 19 ]: a = [ 1 , 2 , 3 ] In [ 20 ]: id ( a ) Out [ 20 ]: 140381980736520 In [ 21 ]: b = a In [ 22 ]: b Out [ 22 ]: [ 1 , 2 , 3 ] In [ 23 ]: id ( b ) Out [ 23 ]: 140381980736520 \u53ef\u4ee5\u770b\u5230\u7684\u662fa\u8ddfb\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5730\u5740 \u00b6 \u4e0b\u9762\u770b\u4e00\u4e0b\u5206\u522b\u5bf9a\u548cb\u8fdb\u884c\u64cd\u4f5c\u4f1a\u4ea7\u751f\u600e\u6837\u7684\u7ed3\u679c: \u5bf9a\u8fdb\u884c\u64cd\u4f5c * \u7ed9a\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57: a.append(4) In [ 25 ]: a Out [ 25 ]: [ 1 , 2 , 3 ] In [ 26 ]: a . append ( 4 ) In [ 27 ]: a Out [ 27 ]: [ 1 , 2 , 3 , 4 ] In [ 28 ]: id ( a ) Out [ 28 ]: 140381980736520 In [ 29 ]: b Out [ 29 ]: [ 1 , 2 , 3 , 4 ] In [ 31 ]: id ( b ) Out [ 31 ]: 140381980736520 In [ 32 ]: \u53ef\u4ee5\u770b\u5230\u5728\u5bf9a\u8fdb\u884c\u64cd\u4f5c\u7684\u540c\u65f6\u7531\u4e8eb\u6307\u5411\u7684\u5730\u5740\u8ddfa\u662f\u4e00\u6837\u7684,\u56e0\u6b64b\u4e5f\u4f1a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6570\u5b574 \u5bf9b\u8fdb\u884c\u64cd\u4f5c * \u7ed9b\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b575: b.append(5) In [ 33 ]: b Out [ 33 ]: [ 1 , 2 , 3 , 4 ] In [ 34 ]: a Out [ 34 ]: [ 1 , 2 , 3 , 4 ] In [ 35 ]: b . append ( 5 ) In [ 36 ]: b Out [ 36 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 37 ]: a Out [ 37 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 38 ]: id ( a ) Out [ 38 ]: 140381980736520 In [ 39 ]: id ( b ) Out [ 39 ]: 140381980736520 \u540c\u6837\u7684b\u53d8a\u4e5f\u53d8 \u8fd9\u4e5f\u5c31\u8bf4\u540d\u8fd9\u79cd\u4f7f\u7528a=b\u7684\u8d4b\u503c\u65b9\u5f0f\u53ea\u662f\u8d4b\u503c\u4e86\u4e00\u4e2a\u5730\u5730\u5740,\u4e00\u4e2a\u53d8\u5316\u53e6\u4e00\u4e2a\u4e5f\u4f1a\u8ddf\u7740\u53d8\u5316.\u56e0\u6b64\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u9700\u8981\u8c28\u614e. \u4e0b\u9762\u770b\u4e00\u4e0b\u4e0d\u8fdb\u884c\u6dfb\u52a0\u53d8\u91cf\u800c\u662f\u91cd\u65b0\u8d4b\u503c\u4e00\u4e2a\u5217\u8868\u4f1a\u53d1\u751f\u4ec0\u4e48\u6837\u7684\u53d8\u5316 In [ 41 ]: b Out [ 41 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 42 ]: id ( b ) Out [ 42 ]: 140381980736520 In [ 43 ]: a Out [ 43 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 44 ]: id ( a ) Out [ 44 ]: 140381980736520 In [ 45 ]: b = [ 3 , 2 , 1 ] In [ 46 ]: b Out [ 46 ]: [ 3 , 2 , 1 ] In [ 47 ]: a Out [ 47 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 48 ]: id ( b ) Out [ 48 ]: 140381992083784 In [ 49 ]: id ( a ) Out [ 49 ]: 140381980736520 \u91cd\u65b0\u8fdb\u884c\u8d4b\u503c\u4ee5\u540e,b\u6307\u5411\u7684\u5730\u5740\u5c31\u4f1a\u53d1\u751f\u6539\u53d8,\u56e0\u6b64\u5bf9a\u4e0d\u4f1a\u518d\u4ea7\u751f\u5f71\u54cd. \u6240\u4ee5\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8fd8\u662f\u8981\u6ce8\u610f\u8fd9\u79cd\u8d4b\u503c\u8bed\u53e5\u7684\u5b9e\u9645\u64cd\u4f5c\u662f\u4ec0\u4e48\u6837\u5b50\u7684. \u00b6 2 copy\u6d45\u62f7\u8d1d\uff0c\u6ca1\u6709\u62f7\u8d1d\u5b50\u5bf9\u8c61\uff0c\u6240\u4ee5\u539f\u59cb\u6570\u636e\u6539\u53d8\uff0c\u5b50\u5bf9\u8c61\u4f1a\u6539\u53d8 \u00b6 \u89e3\u6790\uff1a \u9996\u5148\u770b\u4e00\u4e0b\u5b57\u5178: \u00b6 In [ 11 ]: a = { 1 :[ 1 , 2 , 3 ]} In [ 12 ]: b = a . copy () In [ 13 ]: b Out [ 13 ]: { 1 : [ 1 , 2 , 3 ]} In [ 14 ]: a [ 1 ] . append ( 4 ) In [ 15 ]: a Out [ 15 ]: { 1 : [ 1 , 2 , 3 , 4 ]} In [ 16 ]: b Out [ 16 ]: { 1 : [ 1 , 2 , 3 , 4 ]} In [ 17 ]: a [ 2 ] = [ 5 ] In [ 18 ]: a Out [ 18 ]: { 1 : [ 1 , 2 , 3 , 4 ], 2 : [ 5 ]} In [ 19 ]: b Out [ 19 ]: { 1 : [ 1 , 2 , 3 , 4 ]} \u4e0b\u9762\u518d\u770b\u4e00\u4e0blist \u00b6 #\u6dfb\u52a0\u5b50\u5bf9\u8c61 In [ 22 ]: a = [[ 1 , 2 ],[ 3 , 4 ]] In [ 23 ]: a Out [ 23 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 25 ]: type ( a ) Out [ 25 ]: list In [ 26 ]: a Out [ 26 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 27 ]: a [ 1 ] Out [ 27 ]: [ 3 , 4 ] In [ 28 ]: b = a . copy () In [ 29 ]: b Out [ 29 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 30 ]: a [ 1 ] . append ( 6 ) In [ 31 ]: a Out [ 31 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 32 ]: b Out [ 32 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 34 ]: a . append ( 5 ) In [ 35 ]: a Out [ 35 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 ] #\u6dfb\u52a0\u7236\u5bf9\u8c61 In [ 36 ]: a . append ([ 5 ]) In [ 37 ]: a Out [ 37 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 , [ 5 ]] In [ 38 ]: b Out [ 38 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] \u53ef\u4ee5\u770b\u5230\u7684\u662fa\u5b50\u5bf9\u8c61\u53d1\u751f\u6539\u53d8,b\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8,\u4f46\u662fa\u7684\u7236\u5bf9\u8c61\u53d1\u751f\u6539\u53d8b\u6ca1\u6709\u4ea7\u751f\u53d8\u5316.\u540c\u6837\u7684b\u7684\u5b50\u5bf9\u8c61\u53d1\u751f\u53d8\u5316a\u7684\u5b50\u5bf9\u8c61\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316. In [ 40 ]: a Out [ 40 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 , [ 5 ]] In [ 41 ]: b Out [ 41 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 42 ]: b [ 1 ] . append ( 8 ) In [ 43 ]: b Out [ 43 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ]] In [ 44 ]: a Out [ 44 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], 5 , [ 5 ]] In [ 45 ]: b . append ([ 9 ]) In [ 46 ]: b Out [ 46 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], [ 9 ]] In [ 47 ]: a Out [ 47 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], 5 , [ 5 ]] \u6df1\u62f7\u8d1d \u00b6 \u6df1\u62f7\u8d1d\u9700\u8981\u4f7f\u7528copy\u6a21\u5757\u7684deepcopy()\u65b9\u6cd5\uff0c\u5b8c\u5168\u62f7\u8d1d\u7236\u5bf9\u8c61\u53ca\u5176\u5b50\u5bf9\u8c61 \u89e3\u6790\uff1a \u4ee3\u7801\u7684\u6f14\u793a: \u00b6 In [ 2 ]: import copy In [ 3 ]: a = [[ 1 , 2 ],[ 3 , 4 ]] In [ 4 ]: a Out [ 4 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 5 ]: b = copy . deepcopy ( a ) In [ 6 ]: b Out [ 6 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 7 ]: a . append ([ 5 ]) In [ 8 ]: a Out [ 8 ]: [[ 1 , 2 ], [ 3 , 4 ], [ 5 ]] In [ 9 ]: b Out [ 9 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 10 ]: a [ 1 ] . append ( 5 ) In [ 11 ]: a Out [ 11 ]: [[ 1 , 2 ], [ 3 , 4 , 5 ], [ 5 ]] In [ 12 ]: b Out [ 12 ]: [[ 1 , 2 ], [ 3 , 4 ]] \u4ece\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u6df1\u62f7\u8d1d\u540ea\u548cb\u90fd\u662f\u72ec\u7acb\u7684\u5bf9\u8c61,\u4e92\u4e0d\u5f71\u54cd. \u00b6","title":"007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#1b","text":"\u89e3\u6790\uff1a","title":"1:\u76f4\u63a5\u8d4b\u503c,\u9ed8\u8ba4\u6d45\u62f7\u8d1d\u4f20\u9012\u5bf9\u8c61\u7684\u5f15\u7528\u800c\u5df2,\u539f\u59cb\u5217\u8868\u6539\u53d8\uff0c\u88ab\u8d4b\u503c\u7684b\u4e5f\u4f1a\u505a\u76f8\u540c\u7684\u6539\u53d8"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#a123","text":"\u7136\u540e\u5c06**a**\u8d4b\u503c\u7ed9**b**: b=a \u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u7136\u540e\u67e5\u770b\u4ed6\u4eec\u7684\u5730\u5740: In [ 19 ]: a = [ 1 , 2 , 3 ] In [ 20 ]: id ( a ) Out [ 20 ]: 140381980736520 In [ 21 ]: b = a In [ 22 ]: b Out [ 22 ]: [ 1 , 2 , 3 ] In [ 23 ]: id ( b ) Out [ 23 ]: 140381980736520","title":"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5217\u8868:a=[1,2,3]"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#ab","text":"\u4e0b\u9762\u770b\u4e00\u4e0b\u5206\u522b\u5bf9a\u548cb\u8fdb\u884c\u64cd\u4f5c\u4f1a\u4ea7\u751f\u600e\u6837\u7684\u7ed3\u679c: \u5bf9a\u8fdb\u884c\u64cd\u4f5c * \u7ed9a\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57: a.append(4) In [ 25 ]: a Out [ 25 ]: [ 1 , 2 , 3 ] In [ 26 ]: a . append ( 4 ) In [ 27 ]: a Out [ 27 ]: [ 1 , 2 , 3 , 4 ] In [ 28 ]: id ( a ) Out [ 28 ]: 140381980736520 In [ 29 ]: b Out [ 29 ]: [ 1 , 2 , 3 , 4 ] In [ 31 ]: id ( b ) Out [ 31 ]: 140381980736520 In [ 32 ]: \u53ef\u4ee5\u770b\u5230\u5728\u5bf9a\u8fdb\u884c\u64cd\u4f5c\u7684\u540c\u65f6\u7531\u4e8eb\u6307\u5411\u7684\u5730\u5740\u8ddfa\u662f\u4e00\u6837\u7684,\u56e0\u6b64b\u4e5f\u4f1a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6570\u5b574 \u5bf9b\u8fdb\u884c\u64cd\u4f5c * \u7ed9b\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b575: b.append(5) In [ 33 ]: b Out [ 33 ]: [ 1 , 2 , 3 , 4 ] In [ 34 ]: a Out [ 34 ]: [ 1 , 2 , 3 , 4 ] In [ 35 ]: b . append ( 5 ) In [ 36 ]: b Out [ 36 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 37 ]: a Out [ 37 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 38 ]: id ( a ) Out [ 38 ]: 140381980736520 In [ 39 ]: id ( b ) Out [ 39 ]: 140381980736520 \u540c\u6837\u7684b\u53d8a\u4e5f\u53d8 \u8fd9\u4e5f\u5c31\u8bf4\u540d\u8fd9\u79cd\u4f7f\u7528a=b\u7684\u8d4b\u503c\u65b9\u5f0f\u53ea\u662f\u8d4b\u503c\u4e86\u4e00\u4e2a\u5730\u5730\u5740,\u4e00\u4e2a\u53d8\u5316\u53e6\u4e00\u4e2a\u4e5f\u4f1a\u8ddf\u7740\u53d8\u5316.\u56e0\u6b64\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u9700\u8981\u8c28\u614e. \u4e0b\u9762\u770b\u4e00\u4e0b\u4e0d\u8fdb\u884c\u6dfb\u52a0\u53d8\u91cf\u800c\u662f\u91cd\u65b0\u8d4b\u503c\u4e00\u4e2a\u5217\u8868\u4f1a\u53d1\u751f\u4ec0\u4e48\u6837\u7684\u53d8\u5316 In [ 41 ]: b Out [ 41 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 42 ]: id ( b ) Out [ 42 ]: 140381980736520 In [ 43 ]: a Out [ 43 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 44 ]: id ( a ) Out [ 44 ]: 140381980736520 In [ 45 ]: b = [ 3 , 2 , 1 ] In [ 46 ]: b Out [ 46 ]: [ 3 , 2 , 1 ] In [ 47 ]: a Out [ 47 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 48 ]: id ( b ) Out [ 48 ]: 140381992083784 In [ 49 ]: id ( a ) Out [ 49 ]: 140381980736520 \u91cd\u65b0\u8fdb\u884c\u8d4b\u503c\u4ee5\u540e,b\u6307\u5411\u7684\u5730\u5740\u5c31\u4f1a\u53d1\u751f\u6539\u53d8,\u56e0\u6b64\u5bf9a\u4e0d\u4f1a\u518d\u4ea7\u751f\u5f71\u54cd.","title":"\u53ef\u4ee5\u770b\u5230\u7684\u662fa\u8ddfb\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5730\u5740"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#_1","text":"","title":"\u6240\u4ee5\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8fd8\u662f\u8981\u6ce8\u610f\u8fd9\u79cd\u8d4b\u503c\u8bed\u53e5\u7684\u5b9e\u9645\u64cd\u4f5c\u662f\u4ec0\u4e48\u6837\u5b50\u7684."},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#2-copy","text":"\u89e3\u6790\uff1a","title":"2 copy\u6d45\u62f7\u8d1d\uff0c\u6ca1\u6709\u62f7\u8d1d\u5b50\u5bf9\u8c61\uff0c\u6240\u4ee5\u539f\u59cb\u6570\u636e\u6539\u53d8\uff0c\u5b50\u5bf9\u8c61\u4f1a\u6539\u53d8"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#_2","text":"In [ 11 ]: a = { 1 :[ 1 , 2 , 3 ]} In [ 12 ]: b = a . copy () In [ 13 ]: b Out [ 13 ]: { 1 : [ 1 , 2 , 3 ]} In [ 14 ]: a [ 1 ] . append ( 4 ) In [ 15 ]: a Out [ 15 ]: { 1 : [ 1 , 2 , 3 , 4 ]} In [ 16 ]: b Out [ 16 ]: { 1 : [ 1 , 2 , 3 , 4 ]} In [ 17 ]: a [ 2 ] = [ 5 ] In [ 18 ]: a Out [ 18 ]: { 1 : [ 1 , 2 , 3 , 4 ], 2 : [ 5 ]} In [ 19 ]: b Out [ 19 ]: { 1 : [ 1 , 2 , 3 , 4 ]}","title":"\u9996\u5148\u770b\u4e00\u4e0b\u5b57\u5178:"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#list","text":"#\u6dfb\u52a0\u5b50\u5bf9\u8c61 In [ 22 ]: a = [[ 1 , 2 ],[ 3 , 4 ]] In [ 23 ]: a Out [ 23 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 25 ]: type ( a ) Out [ 25 ]: list In [ 26 ]: a Out [ 26 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 27 ]: a [ 1 ] Out [ 27 ]: [ 3 , 4 ] In [ 28 ]: b = a . copy () In [ 29 ]: b Out [ 29 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 30 ]: a [ 1 ] . append ( 6 ) In [ 31 ]: a Out [ 31 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 32 ]: b Out [ 32 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 34 ]: a . append ( 5 ) In [ 35 ]: a Out [ 35 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 ] #\u6dfb\u52a0\u7236\u5bf9\u8c61 In [ 36 ]: a . append ([ 5 ]) In [ 37 ]: a Out [ 37 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 , [ 5 ]] In [ 38 ]: b Out [ 38 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] \u53ef\u4ee5\u770b\u5230\u7684\u662fa\u5b50\u5bf9\u8c61\u53d1\u751f\u6539\u53d8,b\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8,\u4f46\u662fa\u7684\u7236\u5bf9\u8c61\u53d1\u751f\u6539\u53d8b\u6ca1\u6709\u4ea7\u751f\u53d8\u5316.\u540c\u6837\u7684b\u7684\u5b50\u5bf9\u8c61\u53d1\u751f\u53d8\u5316a\u7684\u5b50\u5bf9\u8c61\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316. In [ 40 ]: a Out [ 40 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ], 5 , [ 5 ]] In [ 41 ]: b Out [ 41 ]: [[ 1 , 2 ], [ 3 , 4 , 6 ]] In [ 42 ]: b [ 1 ] . append ( 8 ) In [ 43 ]: b Out [ 43 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ]] In [ 44 ]: a Out [ 44 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], 5 , [ 5 ]] In [ 45 ]: b . append ([ 9 ]) In [ 46 ]: b Out [ 46 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], [ 9 ]] In [ 47 ]: a Out [ 47 ]: [[ 1 , 2 ], [ 3 , 4 , 6 , 8 ], 5 , [ 5 ]]","title":"\u4e0b\u9762\u518d\u770b\u4e00\u4e0blist"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#_3","text":"\u6df1\u62f7\u8d1d\u9700\u8981\u4f7f\u7528copy\u6a21\u5757\u7684deepcopy()\u65b9\u6cd5\uff0c\u5b8c\u5168\u62f7\u8d1d\u7236\u5bf9\u8c61\u53ca\u5176\u5b50\u5bf9\u8c61 \u89e3\u6790\uff1a","title":"\u6df1\u62f7\u8d1d"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#_4","text":"In [ 2 ]: import copy In [ 3 ]: a = [[ 1 , 2 ],[ 3 , 4 ]] In [ 4 ]: a Out [ 4 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 5 ]: b = copy . deepcopy ( a ) In [ 6 ]: b Out [ 6 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 7 ]: a . append ([ 5 ]) In [ 8 ]: a Out [ 8 ]: [[ 1 , 2 ], [ 3 , 4 ], [ 5 ]] In [ 9 ]: b Out [ 9 ]: [[ 1 , 2 ], [ 3 , 4 ]] In [ 10 ]: a [ 1 ] . append ( 5 ) In [ 11 ]: a Out [ 11 ]: [[ 1 , 2 ], [ 3 , 4 , 5 ], [ 5 ]] In [ 12 ]: b Out [ 12 ]: [[ 1 , 2 ], [ 3 , 4 ]]","title":"\u4ee3\u7801\u7684\u6f14\u793a:"},{"location":"python\u5b66\u4e60/007python\u4e2d\u8d4b\u503c,\u6d45\u62f7\u8d1d,\u6df1\u62f7\u8d1d\u7684\u4e00\u4e9b\u89e3\u91ca/#ab_1","text":"","title":"\u4ece\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u6df1\u62f7\u8d1d\u540ea\u548cb\u90fd\u662f\u72ec\u7acb\u7684\u5bf9\u8c61,\u4e92\u4e0d\u5f71\u54cd."},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/","text":"\u9762\u5411\u5bf9\u8c61(OOP)\u57fa\u672c\u6982\u5ff5 \u00b6 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u2014\u2014 Object Oriented Programming \u7b80\u5199 OOP \u76ee\u6807 \u00b6 \u4e86\u89e3 \u9762\u5411\u5bf9\u8c61 \u57fa\u672c\u6982\u5ff5 01. \u9762\u5411\u5bf9\u8c61\u57fa\u672c\u6982\u5ff5 \u00b6 \u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u7f16\u7a0b\u65b9\u5f0f\u5c31\u662f \u9762\u5411\u8fc7\u7a0b \u7684 \u9762\u76f8\u8fc7\u7a0b \u548c \u9762\u76f8\u5bf9\u8c61 \uff0c\u662f\u4e24\u79cd\u4e0d\u540c\u7684 \u7f16\u7a0b\u65b9\u5f0f \u5bf9\u6bd4 \u9762\u5411\u8fc7\u7a0b \u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u4ec0\u4e48\u662f \u9762\u5411\u5bf9\u8c61 1.1 \u8fc7\u7a0b\u548c\u51fd\u6570\uff08\u79d1\u666e\uff09 \u00b6 \u8fc7\u7a0b \u662f\u65e9\u671f\u7684\u4e00\u4e2a\u7f16\u7a0b\u6982\u5ff5 \u8fc7\u7a0b \u7c7b\u4f3c\u4e8e\u51fd\u6570\uff0c\u53ea\u80fd\u6267\u884c\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c \u51fd\u6570 \u4e0d\u4ec5\u80fd\u6267\u884c\uff0c\u8fd8\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c 1.2 \u9762\u76f8\u8fc7\u7a0b \u548c \u9762\u76f8\u5bf9\u8c61 \u57fa\u672c\u6982\u5ff5 \u00b6 1) \u9762\u76f8\u8fc7\u7a0b \u2014\u2014 \u600e\u4e48\u505a \uff1f \u00b6 \u628a\u5b8c\u6210\u67d0\u4e00\u4e2a\u9700\u6c42\u7684 \u6240\u6709\u6b65\u9aa4 \u4ece\u5934\u5230\u5c3e \u9010\u6b65\u5b9e\u73b0 \u6839\u636e\u5f00\u53d1\u9700\u6c42\uff0c\u5c06\u67d0\u4e9b \u529f\u80fd\u72ec\u7acb \u7684\u4ee3\u7801 \u5c01\u88c5 \u6210\u4e00\u4e2a\u53c8\u4e00\u4e2a \u51fd\u6570 \u6700\u540e\u5b8c\u6210\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u987a\u5e8f\u5730\u8c03\u7528 \u4e0d\u540c\u7684\u51fd\u6570 \u7279\u70b9 \u6ce8\u91cd \u6b65\u9aa4\u4e0e\u8fc7\u7a0b \uff0c\u4e0d\u6ce8\u91cd\u804c\u8d23\u5206\u5de5 \u5982\u679c\u9700\u6c42\u590d\u6742\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5f88\u590d\u6742 \u5f00\u53d1\u590d\u6742\u9879\u76ee\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u5957\u8def\uff0c\u5f00\u53d1\u96be\u5ea6\u5f88\u5927\uff01 2) \u9762\u5411\u5bf9\u8c61 \u2014\u2014 \u8c01\u6765\u505a \uff1f \u00b6 \u76f8\u6bd4\u8f83\u51fd\u6570\uff0c \u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u6839\u636e \u804c\u8d23 \u5728 \u4e00\u4e2a\u5bf9\u8c61\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \u5728\u5b8c\u6210\u67d0\u4e00\u4e2a\u9700\u6c42\u524d\uff0c\u9996\u5148\u786e\u5b9a \u804c\u8d23 \u2014\u2014 \u8981\u505a\u7684\u4e8b\u60c5\uff08\u65b9\u6cd5\uff09 \u6839\u636e \u804c\u8d23 \u786e\u5b9a\u4e0d\u540c\u7684 \u5bf9\u8c61 \uff0c\u5728 \u5bf9\u8c61 \u5185\u90e8\u5c01\u88c5\u4e0d\u540c\u7684 \u65b9\u6cd5 \uff08\u591a\u4e2a\uff09 \u6700\u540e\u5b8c\u6210\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u987a\u5e8f\u5730\u8ba9 \u4e0d\u540c\u7684\u5bf9\u8c61 \u8c03\u7528 \u4e0d\u540c\u7684\u65b9\u6cd5 \u7279\u70b9 \u6ce8\u91cd \u5bf9\u8c61\u548c\u804c\u8d23 \uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u627f\u62c5\u4e0d\u540c\u7684\u804c\u8d23 \u66f4\u52a0\u9002\u5408\u5e94\u5bf9\u590d\u6742\u7684\u9700\u6c42\u53d8\u5316\uff0c \u662f\u4e13\u95e8\u5e94\u5bf9\u590d\u6742\u9879\u76ee\u5f00\u53d1\uff0c\u63d0\u4f9b\u7684\u56fa\u5b9a\u5957\u8def \u9700\u8981\u5728\u9762\u5411\u8fc7\u7a0b\u57fa\u7840\u4e0a\uff0c\u518d\u5b66\u4e60\u4e00\u4e9b\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u6cd5 02 \u00b6 \u7c7b\u548c\u5bf9\u8c61 \u00b6 \u76ee\u6807 \u00b6 \u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5 \u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb \u7c7b\u7684\u8bbe\u8ba1 01. \u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5 \u00b6 \u7c7b \u548c \u5bf9\u8c61 \u662f \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u4e24\u4e2a \u6838\u5fc3\u6982\u5ff5 1.1 \u7c7b \u00b6 \u7c7b \u662f\u5bf9\u4e00\u7fa4\u5177\u6709 \u76f8\u540c \u7279\u5f81 \u6216\u8005 \u884c\u4e3a \u7684\u4e8b\u7269\u7684\u4e00\u4e2a\u7edf\u79f0\uff0c\u662f\u62bd\u8c61\u7684\uff0c \u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 \u7279\u5f81 \u88ab\u79f0\u4e3a \u5c5e\u6027 \u884c\u4e3a \u88ab\u79f0\u4e3a \u65b9\u6cd5 \u7c7b \u5c31\u76f8\u5f53\u4e8e\u5236\u9020\u98de\u673a\u65f6\u7684**\u56fe\u7eb8**\uff0c\u662f\u4e00\u4e2a \u6a21\u677f \uff0c\u662f \u8d1f\u8d23\u521b\u5efa\u5bf9\u8c61\u7684 1.2 \u5bf9\u8c61 \u00b6 \u5bf9\u8c61 \u662f \u7531\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u4e00\u4e2a\u5177\u4f53\u5b58\u5728 \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u7531 \u54ea\u4e00\u4e2a\u7c7b \u521b\u5efa\u51fa\u6765\u7684 \u5bf9\u8c61 \uff0c\u5c31\u62e5\u6709\u5728 \u54ea\u4e00\u4e2a\u7c7b \u4e2d\u5b9a\u4e49\u7684\uff1a \u5c5e\u6027 \u65b9\u6cd5 \u5bf9\u8c61 \u5c31\u76f8\u5f53\u4e8e\u7528 \u56fe\u7eb8 \u5236\u9020 \u7684\u98de\u673a \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5e94\u8be5 \u5148\u6709\u7c7b\uff0c\u518d\u6709\u5bf9\u8c61 02. \u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb \u00b6 \u7c7b\u662f\u6a21\u677f \uff0c \u5bf9\u8c61 \u662f\u6839\u636e \u7c7b \u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\u51fa\u6765\u7684\uff0c\u5e94\u8be5 \u5148\u6709\u7c7b\uff0c\u518d\u6709\u5bf9\u8c61 \u7c7b \u53ea\u6709\u4e00\u4e2a\uff0c\u800c \u5bf9\u8c61 \u53ef\u4ee5\u6709\u5f88\u591a\u4e2a \u4e0d\u540c\u7684\u5bf9\u8c61 \u4e4b\u95f4 \u5c5e\u6027 \u53ef\u80fd\u4f1a\u5404\u4e0d\u76f8\u540c \u7c7b \u4e2d\u5b9a\u4e49\u4e86\u4ec0\u4e48 \u5c5e\u6027\u548c\u65b9\u6cd5 \uff0c \u5bf9\u8c61 \u4e2d\u5c31\u6709\u4ec0\u4e48\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c \u4e0d\u53ef\u80fd\u591a\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5c11 03. \u7c7b\u7684\u8bbe\u8ba1 \u00b6 \u5728\u4f7f\u7528\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\u524d\uff0c\u5e94\u8be5\u9996\u5148\u5206\u6790\u9700\u6c42\uff0c\u786e\u5b9a\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u9700\u8981\u5305\u542b\u54ea\u4e9b\u7c7b\uff01 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u901a\u5e38\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u4e09\u4e2a\u8981\u7d20\uff1a \u7c7b\u540d \u8fd9\u7c7b\u4e8b\u7269\u7684\u540d\u5b57\uff0c \u6ee1\u8db3\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5 \u5c5e\u6027 \u8fd9\u7c7b\u4e8b\u7269\u5177\u6709\u4ec0\u4e48\u6837\u7684\u7279\u5f81 \u65b9\u6cd5 \u8fd9\u7c7b\u4e8b\u7269\u5177\u6709\u4ec0\u4e48\u6837\u7684\u884c\u4e3a \u5927\u9a7c\u5cf0\u547d\u540d\u6cd5 \u00b6 CapWords \u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199 \u5355\u8bcd\u4e0e\u5355\u8bcd\u4e4b\u95f4\u6ca1\u6709\u4e0b\u5212\u7ebf 3.1 \u7c7b\u540d\u7684\u786e\u5b9a \u00b6 \u540d\u8bcd\u63d0\u70bc\u6cd5 \u5206\u6790 \u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b \uff0c\u51fa\u73b0\u7684 \u540d\u8bcd \uff0c\u901a\u5e38\u5c31\u662f\u627e\u5230\u7684\u7c7b 3.2 \u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u786e\u5b9a \u00b6 \u5bf9 \u5bf9\u8c61\u7684\u7279\u5f81\u63cf\u8ff0 \uff0c\u901a\u5e38\u53ef\u4ee5\u5b9a\u4e49\u6210 \u5c5e\u6027 \u5bf9\u8c61\u5177\u6709\u7684\u884c\u4e3a \uff08\u52a8\u8bcd\uff09\uff0c\u901a\u5e38\u53ef\u4ee5\u5b9a\u4e49\u6210 \u65b9\u6cd5 \u63d0\u793a\uff1a\u9700\u6c42\u4e2d\u6ca1\u6709\u6d89\u53ca\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u5728\u8bbe\u8ba1\u7c7b\u65f6\uff0c\u4e0d\u9700\u8981\u8003\u8651 \u7ec3\u4e60 1 \u00b6 \u9700\u6c42 \u5c0f\u660e \u4eca\u5e74 18 \u5c81 \uff0c \u8eab\u9ad8 1.75 \uff0c\u6bcf\u5929\u65e9\u4e0a \u8dd1 \u5b8c\u6b65\uff0c\u4f1a\u53bb \u5403 \u4e1c\u897f \u5c0f\u7f8e \u4eca\u5e74 17 \u5c81 \uff0c \u8eab\u9ad8 1.65 \uff0c\u5c0f\u7f8e\u4e0d\u8dd1\u6b65\uff0c\u5c0f\u7f8e\u559c\u6b22 \u5403 \u4e1c\u897f \u7ec3\u4e60 2 \u00b6 \u9700\u6c42 \u4e00\u53ea \u9ec4\u989c\u8272 \u7684 \u72d7\u72d7 \u53eb \u5927\u9ec4 \u770b\u89c1\u751f\u4eba \u6c6a\u6c6a\u53eb \u770b\u89c1\u5bb6\u4eba \u6447\u5c3e\u5df4 03 \u00b6 \u9762\u76f8\u5bf9\u8c61\u57fa\u7840\u8bed\u6cd5 \u00b6 \u76ee\u6807 \u00b6 dir \u5185\u7f6e\u51fd\u6570 \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09 \u65b9\u6cd5\u4e2d\u7684 self \u53c2\u6570 \u521d\u59cb\u5316\u65b9\u6cd5 \u5185\u7f6e\u65b9\u6cd5\u548c\u5c5e\u6027 01. dir \u5185\u7f6e\u51fd\u6570\uff08\u77e5\u9053\uff09 \u00b6 \u5728 Python \u4e2d \u5bf9\u8c61\u51e0\u4e4e\u662f\u65e0\u6240\u4e0d\u5728\u7684 \uff0c\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684 \u53d8\u91cf \u3001 \u6570\u636e \u3001 \u51fd\u6570 \u90fd\u662f\u5bf9\u8c61 \u5728 Python \u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u6cd5\u9a8c\u8bc1\uff1a \u5728 \u6807\u8bc6\u7b26 / \u6570\u636e \u540e\u8f93\u5165\u4e00\u4e2a . \uff0c\u7136\u540e\u6309\u4e0b TAB \u952e\uff0c iPython \u4f1a\u63d0\u793a\u8be5\u5bf9\u8c61\u80fd\u591f\u8c03\u7528\u7684 \u65b9\u6cd5\u5217\u8868 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570 dir \u4f20\u5165 \u6807\u8bc6\u7b26 / \u6570\u636e \uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u5185\u7684 \u6240\u6709\u5c5e\u6027\u53ca\u65b9\u6cd5 \u63d0\u793a __\u65b9\u6cd5\u540d__ \u683c\u5f0f\u7684\u65b9\u6cd5\u662f Python \u63d0\u4f9b\u7684 \u5185\u7f6e\u65b9\u6cd5 / \u5c5e\u6027 \uff0c\u7a0d\u540e\u4f1a\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684 \u5185\u7f6e\u65b9\u6cd5 / \u5c5e\u6027 \u5e8f\u53f7 \u65b9\u6cd5\u540d \u7c7b\u578b \u4f5c\u7528 01 __new__ \u65b9\u6cd5 \u521b\u5efa\u5bf9\u8c61**\u65f6\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 02 __init__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u521d\u59cb\u5316**\u65f6\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 03 __del__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1**\u524d\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 04 __str__ \u65b9\u6cd5 \u8fd4\u56de**\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f**\uff0c print \u51fd\u6570\u8f93\u51fa\u4f7f\u7528 \u63d0\u793a \u5229\u7528\u597d dir() \u51fd\u6570\uff0c\u5728\u5b66\u4e60\u65f6\u5f88\u591a\u5185\u5bb9\u5c31\u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\u4e86 02. \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09 \u00b6 \u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u5728 \u4e00\u4e2a\u7c7b\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \uff0c\u8fd9\u6837 \u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u4e86 \uff01 02. \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09 \u00b6 \u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u5728 \u4e00\u4e2a\u7c7b\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \uff0c\u8fd9\u6837 \u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u4e86 \uff01 2.1 \u5b9a\u4e49\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u7c7b \u00b6 \u5728 Python \u4e2d\u8981\u5b9a\u4e49\u4e00\u4e2a\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u7c7b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a class \u7c7b\u540d: def \u65b9\u6cd5 1 ( self , \u53c2\u6570\u5217\u8868 ): pass def \u65b9\u6cd5 2 ( self , \u53c2\u6570\u5217\u8868 ): pass \u65b9\u6cd5 \u7684\u5b9a\u4e49\u683c\u5f0f\u548c\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684**\u51fd\u6570** \u51e0\u4e4e\u4e00\u6837 \u533a\u522b\u5728\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f self \uff0c\u5927\u5bb6\u6682\u65f6\u5148\u8bb0\u4f4f\uff0c\u7a0d\u540e\u4ecb\u7ecd self \u6ce8\u610f\uff1a \u7c7b\u540d \u7684 \u547d\u540d\u89c4\u5219 \u8981\u7b26\u5408 \u5927\u9a7c\u5cf0\u547d\u540d\u6cd5 2.2 \u521b\u5efa\u5bf9\u8c61 \u00b6 \u5f53\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u5b8c\u6210\u4e4b\u540e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u5bf9\u8c61\u53d8\u91cf = \u7c7b\u540d() 2.3 \u7b2c\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f \u00b6 \u9700\u6c42 \u5c0f\u732b \u7231 \u5403 \u9c7c\uff0c \u5c0f\u732b \u8981 \u559d \u6c34 \u5206\u6790 \u5b9a\u4e49\u4e00\u4e2a\u732b\u7c7b Cat \u5b9a\u4e49\u4e24\u4e2a\u65b9\u6cd5 eat \u548c drink \u6309\u7167\u9700\u6c42 \u2014\u2014 \u4e0d\u9700\u8981\u5b9a\u4e49\u5c5e\u6027 class Cat : def eat ( self ): print ( \"\u5c0f\u732b\u7231\u5403\u9c7c\" ) def drink ( self ): print ( \"\u5c0f\u732b\u8981\u559d\u6c34\" ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () tom . eat () tom . drink () print ( tom ) addr = id ( tom ) #\u8fd9\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u7684\u5730\u5740 print ( \" %x \" % addr ) \u6267\u884c\u7ed3\u679c: \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 <__main__.Cat object at 0x000001734D4F9748> 1734d4f9748 \u5f15\u7528\u6982\u5ff5\u7684\u5f3a\u8c03 \u00b6 \u5728\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u4e2d\uff0c**\u5f15\u7528**\u7684\u6982\u5ff5\u662f\u540c\u6837\u9002\u7528\u7684\uff01 \u5728 Python \u4e2d\u4f7f\u7528\u7c7b \u521b\u5efa\u5bf9\u8c61\u4e4b\u540e \uff0c tom \u53d8\u91cf\u4e2d \u4ecd\u7136\u8bb0\u5f55\u7684\u662f \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \u4e5f\u5c31\u662f tom \u53d8\u91cf \u5f15\u7528 \u4e86 \u65b0\u5efa\u7684\u732b\u5bf9\u8c61 \u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u662f\u80fd\u591f\u8f93\u51fa\u8fd9\u4e2a\u53d8\u91cf \u5f15\u7528\u7684\u5bf9\u8c61 \u662f \u7531\u54ea\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 \uff0c\u4ee5\u53ca \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \uff08 \u5341\u516d\u8fdb\u5236\u8868\u793a \uff09 \u63d0\u793a\uff1a\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528 \u5341\u516d\u8fdb\u5236 \u8868\u793a \u5185\u5b58\u5730\u5740 \u5341\u8fdb\u5236 \u548c \u5341\u516d\u8fdb\u5236 \u90fd\u662f\u7528\u6765\u8868\u8fbe\u6570\u5b57\u7684\uff0c\u53ea\u662f\u8868\u793a\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837 \u5341\u8fdb\u5236 \u548c \u5341\u516d\u8fdb\u5236 \u7684\u6570\u5b57\u4e4b\u95f4\u53ef\u4ee5\u6765\u56de\u8f6c\u6362 %d \u53ef\u4ee5\u4ee5 10 \u8fdb\u5236 \u8f93\u51fa\u6570\u5b57 %x \u53ef\u4ee5\u4ee5 16 \u8fdb\u5236 \u8f93\u51fa\u6570\u5b57 \u6848\u4f8b\u8fdb\u9636 \u2014\u2014 \u4f7f\u7528 Cat \u7c7b\u518d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 \u00b6 class Cat : def eat ( self ): print ( \"\u5c0f\u732b\u7231\u5403\u9c7c\" ) def drink ( self ): print ( \"\u5c0f\u732b\u8981\u559d\u6c34\" ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () tom . eat () tom . drink () print ( tom ) # \u518d\u521b\u5efa\u4e00\u4e2a\u732b\u5bf9\u8c61 lazy_cat = Cat () lazy_cat . eat () lazy_cat . drink () print ( lazy_cat ) lazy_cat2 = lazy_cat print ( lazy_cat2 ) \u63d0\u95ee\uff1a tom \u548c lazy_cat \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5417\uff1f \u6267\u884c\u7ed3\u679c:\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61 \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F9860 > \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F95C0 > < __main__ . Cat object at 0x000001734D4F95C0 > 03. \u65b9\u6cd5\u4e2d\u7684 self \u53c2\u6570 \u00b6 3.1 \u6848\u4f8b\u6539\u9020 \u2014\u2014 \u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027 \u00b6 \u5728 Python \u4e2d\uff0c\u8981 \u7ed9\u5bf9\u8c61\u8bbe\u7f6e\u5c5e\u6027 \uff0c\u975e\u5e38\u7684\u5bb9\u6613\uff0c \u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528 \u56e0\u4e3a\uff1a\u5bf9\u8c61\u5c5e\u6027\u7684\u5c01\u88c5\u5e94\u8be5\u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8 \u53ea\u9700\u8981\u5728 \u7c7b\u7684\u5916\u90e8\u7684\u4ee3\u7801 \u4e2d\u76f4\u63a5\u901a\u8fc7 . \u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u5373\u53ef \u6ce8\u610f\uff1a\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\uff01 tom . name = \"Tom\" ... \u200b lazy_cat . name = \"\u5927\u61d2\u732b\" 3.2 \u4f7f\u7528 self \u5728\u65b9\u6cd5\u5185\u90e8\u8f93\u51fa\u6bcf\u4e00\u53ea\u732b\u7684\u540d\u5b57 \u00b6 \u7531 \u54ea\u4e00\u4e2a\u5bf9\u8c61 \u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u7684 self \u5c31\u662f \u54ea\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 \u5728\u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5\u5185\u90e8\uff0c self \u5c31\u8868\u793a \u5f53\u524d\u8c03\u7528\u65b9\u6cd5\u7684\u5bf9\u8c61\u81ea\u5df1 \u8c03\u7528\u65b9\u6cd5\u65f6 \uff0c\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u4f20\u9012 self \u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8 \u53ef\u4ee5\u901a\u8fc7 self. \u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u4e5f\u53ef\u4ee5\u901a\u8fc7 self. \u8c03\u7528\u5176\u4ed6\u7684\u5bf9\u8c61\u65b9\u6cd5 \u6539\u9020\u4ee3\u7801\u5982\u4e0b\uff1a class Cat : def eat ( self ): # \u54ea\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u65b9\u6cd5\uff0cself\u5c31\u662f\u54ea\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 print ( \" %s \u7231\u5403\u9c7c\" % self . name ) def drink ( self ): print ( \" %s \u8981\u559d\u6c34\" % self . name ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () # \u53ef\u4ee5\u4f7f\u7528\u3000.\u5c5e\u6027\u540d\u3000\u5229\u7528\u8d4b\u503c\u8bed\u53e5\u5c31\u53ef\u4ee5\u4e86 tom . name = \"Tom\" tom . eat () tom . drink () print ( tom ) # \u518d\u521b\u5efa\u4e00\u4e2a\u732b\u5bf9\u8c61 lazy_cat = Cat () lazy_cat . name = \"\u5927\u61d2\u732b\" lazy_cat . eat () lazy_cat . drink () print ( lazy_cat ) #%s string\u578b \u8868\u793a\u683c\u5f0f\u5316\u4e00\u4e2a\u5bf9\u8c61\u4e3a\u5b57\u7b26 \u6267\u884c\u7ed3\u679c: Tom \u7231\u5403\u9c7c Tom \u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D549198 > \u5927\u61d2\u732b \u7231\u5403\u9c7c \u5927\u61d2\u732b \u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F9A58 > \u5728 \u7c7b\u7684\u5916\u90e8 \uff0c\u901a\u8fc7 \u53d8\u91cf\u540d. \u8bbf\u95ee\u5bf9\u8c61\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5 \u5728 \u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5\u4e2d \uff0c\u901a\u8fc7 self. \u8bbf\u95ee\u5bf9\u8c61\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5 04. \u521d\u59cb\u5316\u65b9\u6cd5 \u00b6 4.1 \u4e4b\u524d\u4ee3\u7801\u5b58\u5728\u7684\u95ee\u9898 \u2014\u2014 \u5728\u7c7b\u7684\u5916\u90e8\u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027 \u00b6 \u5c06\u6848\u4f8b\u4ee3\u7801\u8fdb\u884c\u8c03\u6574\uff0c \u5148\u8c03\u7528\u65b9\u6cd5 \u518d\u8bbe\u7f6e\u5c5e\u6027 \uff0c\u89c2\u5bdf\u4e00\u4e0b\u6267\u884c\u6548\u679c tom = Cat () tom . drink () tom . eat () tom . name = \"Tom\" print ( tom ) \u7a0b\u5e8f\u6267\u884c\u62a5\u9519\u5982\u4e0b\uff1a AttributeError : 'Cat' object has no attribute 'name' \u5c5e\u6027\u9519\u8bef\uff1a 'Cat' \u5bf9\u8c61\u6ca1\u6709 'name' \u5c5e\u6027 \u63d0\u793a \u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c\u4e0d\u63a8\u8350\u5728 \u7c7b\u7684\u5916\u90e8 \u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027 \u5982\u679c**\u5728\u8fd0\u884c\u65f6\uff0c\u6ca1\u6709\u627e\u5230\u5c5e\u6027\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519** \u5bf9\u8c61\u5e94\u8be5\u5305\u542b\u6709\u54ea\u4e9b\u5c5e\u6027\uff0c\u5e94\u8be5 \u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8 4.2 \u521d\u59cb\u5316\u65b9\u6cd5 \u00b6 \u5f53\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4f1a \u81ea\u52a8 \u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u4e3a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d \u5206\u914d\u7a7a\u95f4 \u2014\u2014 \u521b\u5efa\u5bf9\u8c61 \u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027 \u8bbe\u7f6e\u521d\u59cb\u503c \u2014\u2014 \u521d\u59cb\u5316\u65b9\u6cd5( init ) \u8fd9\u4e2a \u521d\u59cb\u5316\u65b9\u6cd5 \u5c31\u662f __init__ \u65b9\u6cd5\uff0c __init__ \u662f\u5bf9\u8c61\u7684**\u5185\u7f6e\u65b9\u6cd5** __init__ \u65b9\u6cd5\u662f \u4e13\u95e8 \u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u7c7b \u5177\u6709\u54ea\u4e9b\u5c5e\u6027\u7684\u65b9\u6cd5 \uff01 \u5728 Cat \u4e2d\u589e\u52a0 __init__ \u65b9\u6cd5\uff0c\u9a8c\u8bc1\u8be5\u65b9\u6cd5\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u4f1a\u88ab\u81ea\u52a8\u8c03\u7528 class Cat : \"\"\"\u8fd9\u662f\u4e00\u4e2a\u732b\u7c7b\"\"\" \u200b def __init__ ( self ): print ( \"\u521d\u59cb\u5316\u65b9\u6cd5\" ) 4.3 \u5728\u521d\u59cb\u5316\u65b9\u6cd5\u5185\u90e8\u5b9a\u4e49\u5c5e\u6027 \u00b6 \u5728 __init__ \u65b9\u6cd5\u5185\u90e8\u4f7f\u7528 self.\u5c5e\u6027\u540d = \u5c5e\u6027\u7684\u521d\u59cb\u503c \u5c31\u53ef\u4ee5 \u5b9a\u4e49\u5c5e\u6027 \u5b9a\u4e49\u5c5e\u6027\u4e4b\u540e\uff0c\u518d\u4f7f\u7528 Cat \u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u90fd\u4f1a\u62e5\u6709\u8be5\u5c5e\u6027 class Cat : def __init__ ( self , new_name ): print ( \"\u8fd9\u662f\u4e00\u4e2a\u521d\u59cb\u5316\u65b9\u6cd5\" ) # self.\u5c5e\u6027\u540d = \u5c5e\u6027\u7684\u521d\u59cb\u503c # self.name = \"Tom\" self . name = new_name def eat ( self ): print ( \" %s \u7231\u5403\u9c7c\" % self . name ) # \u4f7f\u7528\u7c7b\u540d()\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5 __init__ tom = Cat ( \"Tom\" ) print ( tom . name ) lazy_cat = Cat ( \"\u5927\u61d2\u732b\" ) lazy_cat . eat () 4.4 \u6539\u9020\u521d\u59cb\u5316\u65b9\u6cd5 \u2014\u2014 \u521d\u59cb\u5316\u7684\u540c\u65f6\u8bbe\u7f6e\u521d\u59cb\u503c \u00b6 \u5728\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u5728 \u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\uff0c\u5c31\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027 \uff0c\u53ef\u4ee5\u5bf9 __init__ \u65b9\u6cd5\u8fdb\u884c \u6539\u9020 \u628a\u5e0c\u671b\u8bbe\u7f6e\u7684\u5c5e\u6027\u503c\uff0c\u5b9a\u4e49\u6210 __init__ \u65b9\u6cd5\u7684\u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8\u4f7f\u7528 self.\u5c5e\u6027 = \u5f62\u53c2 \u63a5\u6536\u5916\u90e8\u4f20\u9012\u7684\u53c2\u6570 \u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528 \u7c7b\u540d(\u5c5e\u60271, \u5c5e\u60272...) \u8c03\u7528 class Cat : \u200b def __init__ ( self , name ): print ( \"\u521d\u59cb\u5316\u65b9\u6cd5 %s \" % name ) self . name = name ... tom = Cat ( \"Tom\" ) ... \u200b lazy_cat = Cat ( \"\u5927\u61d2\u732b\" ) ... 05. \u5185\u7f6e\u65b9\u6cd5\u548c\u5c5e\u6027 \u00b6 \u5e8f\u53f7 \u65b9\u6cd5\u540d \u7c7b\u578b \u4f5c\u7528 01 __del__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1**\u524d\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 02 __str__ \u65b9\u6cd5 \u8fd4\u56de**\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f**\uff0c print \u51fd\u6570\u8f93\u51fa\u4f7f\u7528 5.1 __del__ \u65b9\u6cd5\uff08\u77e5\u9053\uff09 \u00b6 \u5728 Python \u4e2d \u5f53\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4e3a\u5bf9\u8c61 \u5206\u914d\u5b8c\u7a7a\u95f4**\u540e\uff0c**\u81ea\u52a8 \u8c03\u7528 __init__ \u65b9\u6cd5 \u5f53\u4e00\u4e2a \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1 \u524d\uff0c\u4f1a \u81ea\u52a8 \u8c03\u7528 __del__ \u65b9\u6cd5 \u5e94\u7528\u573a\u666f __init__ \u6539\u9020\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u521b\u5efa\u5bf9\u8c61\u66f4\u52a0\u7075\u6d3b __del__ \u5982\u679c\u5e0c\u671b\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u524d\uff0c\u518d\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b __del__ \u65b9\u6cd5 \u751f\u547d\u5468\u671f \u4e00\u4e2a\u5bf9\u8c61\u4ece\u8c03\u7528 \u7c7b\u540d() \u521b\u5efa\uff0c\u751f\u547d\u5468\u671f\u5f00\u59cb \u4e00\u4e2a\u5bf9\u8c61\u7684 __del__ \u65b9\u6cd5\u4e00\u65e6\u88ab\u8c03\u7528\uff0c\u751f\u547d\u5468\u671f\u7ed3\u675f \u5728\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u5185\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027\uff0c\u6216\u8005\u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 17 21:56:22 2019 @author: zangz \"\"\" class Cat : def __init__ ( self , new_name ): self . name = new_name print ( \" %s \u6765\u4e86\" % self . name ) def __del__ ( self ): print ( \" %s \u6211\u53bb\u4e86\" % self . name ) # tom \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf tom = Cat ( \"Tom\" ) print ( tom . name ) # del \u5173\u952e\u5b57\u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61 del tom print ( \"-\" * 50 ) 5.2 __str__ \u65b9\u6cd5 \u00b6 \u5728 Python \u4e2d\uff0c\u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f1a\u8f93\u51fa\u8fd9\u4e2a\u53d8\u91cf \u5f15\u7528\u7684\u5bf9\u8c61 \u662f \u7531\u54ea\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 \uff0c\u4ee5\u53ca \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \uff08 \u5341\u516d\u8fdb\u5236\u8868\u793a \uff09 \u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c\u5e0c\u671b\u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \u65f6\uff0c\u80fd\u591f\u6253\u5370 \u81ea\u5b9a\u4e49\u7684\u5185\u5bb9 \uff0c\u5c31\u53ef\u4ee5\u5229\u7528 __str__ \u8fd9\u4e2a\u5185\u7f6e\u65b9\u6cd5\u4e86 \u6ce8\u610f\uff1a __str__ \u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 class Cat : def __init__ ( self , new_name ): self . name = new_name print ( \" %s \u6765\u4e86\" % self . name ) def __del__ ( self ): print ( \" %s \u6211\u53bb\u4e86\" % self . name ) def __str__ ( self ): # \u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 return \"\u6211\u662f\u5c0f\u732b[ %s ]\" % self . name # tom \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf tom = Cat ( \"Tom\" ) print ( tom ) \u9762\u5411\u5bf9\u8c61\u5c01\u88c5\u6848\u4f8b \u00b6 \u76ee\u6807 \u00b6 \u5c01\u88c5 \u5c0f\u660e\u7231\u8dd1\u6b65 \u5b58\u653e\u5bb6\u5177 01. \u5c01\u88c5 \u00b6 \u5c01\u88c5 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u5927\u7279\u70b9 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u7b2c\u4e00\u6b65 \u2014\u2014 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5916\u754c \u4f7f\u7528 \u7c7b \u521b\u5efa \u5bf9\u8c61 \uff0c\u7136\u540e \u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 \u5bf9\u8c61\u65b9\u6cd5\u7684\u7ec6\u8282 \u90fd\u88ab \u5c01\u88c5 \u5728 \u7c7b\u7684\u5185\u90e8 02. \u5c0f\u660e\u7231\u8dd1\u6b65 \u00b6 \u9700\u6c42 \u5c0f\u660e \u4f53\u91cd 75.0 \u516c\u65a4 \u5c0f\u660e\u6bcf\u6b21 \u8dd1\u6b65 \u4f1a\u51cf\u80a5 0.5 \u516c\u65a4 \u5c0f\u660e\u6bcf\u6b21 \u5403\u4e1c\u897f \u4f53\u91cd\u589e\u52a0 1 \u516c\u65a4 [\u56fe\u7247\u4e0a\u4f20\u5931\u8d25...(image-818ad6-1555499248411)] \u63d0\u793a\uff1a\u5728 \u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8 \uff0c\u662f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u7684\uff01 \u4ee3\u7801\u5b9e\u73b0\uff1a class Person : \"\"\"\u4eba\u7c7b\"\"\" def __init__ ( self , name , weight ): self . name = name self . weight = weight def __str__ ( self ): return \"\u6211\u7684\u540d\u5b57\u53eb %s \u4f53\u91cd %.2f \u516c\u65a4\" % ( self . name , self . weight ) def run ( self ): \"\"\"\u8dd1\u6b65\"\"\" print ( \" %s \u7231\u8dd1\u6b65\uff0c\u8dd1\u6b65\u953b\u70bc\u8eab\u4f53\" % self . name ) self . weight -= 0.5 def eat ( self ): \"\"\"\u5403\u4e1c\u897f\"\"\" print ( \" %s \u662f\u5403\u8d27\uff0c\u5403\u5b8c\u8fd9\u987f\u518d\u51cf\u80a5\" % self . name ) self . weight += 1 xiaoming = Person ( \"\u5c0f\u660e\" , 75 ) xiaoming . run () xiaoming . eat () xiaoming . eat () print ( xiaoming ) 2.1 \u5c0f\u660e\u7231\u8dd1\u6b65\u6269\u5c55 \u2014\u2014 \u5c0f\u7f8e\u4e5f\u7231\u8dd1\u6b65 \u00b6 \u9700\u6c42 \u5c0f\u660e \u548c \u5c0f\u7f8e \u90fd\u7231\u8dd1\u6b65 \u5c0f\u660e \u4f53\u91cd 75.0 \u516c\u65a4 \u5c0f\u7f8e \u4f53\u91cd 45.0 \u516c\u65a4 \u6bcf\u6b21 \u8dd1\u6b65 \u90fd\u4f1a\u51cf\u5c11 0.5 \u516c\u65a4 \u6bcf\u6b21 \u5403\u4e1c\u897f \u90fd\u4f1a\u589e\u52a0 1 \u516c\u65a4 \u63d0\u793a \u5728 \u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8 \uff0c\u662f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u7684 \u540c\u4e00\u4e2a\u7c7b \u521b\u5efa\u7684 \u591a\u4e2a\u5bf9\u8c61 \u4e4b\u95f4\uff0c \u5c5e\u6027 \u4e92\u4e0d\u5e72\u6270\uff01 03. \u6446\u653e\u5bb6\u5177 \u00b6 \u9700\u6c42 \u623f\u5b50(House) \u6709 \u6237\u578b \u3001 \u603b\u9762\u79ef \u548c \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u65b0\u623f\u5b50\u6ca1\u6709\u4efb\u4f55\u7684\u5bb6\u5177 \u5bb6\u5177(HouseItem) \u6709 \u540d\u5b57 \u548c \u5360\u5730\u9762\u79ef \uff0c\u5176\u4e2d \u5e2d\u68a6\u601d(bed) \u5360\u5730 4 \u5e73\u7c73 \u8863\u67dc(chest) \u5360\u5730 2 \u5e73\u7c73 \u9910\u684c(table) \u5360\u5730 1.5 \u5e73\u7c73 \u5c06\u4ee5\u4e0a\u4e09\u4ef6 \u5bb6\u5177 \u6dfb\u52a0 \u5230 \u623f\u5b50 \u4e2d \u6253\u5370\u623f\u5b50\u65f6\uff0c\u8981\u6c42\u8f93\u51fa\uff1a \u6237\u578b \u3001 \u603b\u9762\u79ef \u3001 \u5269\u4f59\u9762\u79ef \u3001 \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u5269\u4f59\u9762\u79ef \u5728\u521b\u5efa\u623f\u5b50\u5bf9\u8c61\u65f6\uff0c\u5b9a\u4e49\u4e00\u4e2a \u5269\u4f59\u9762\u79ef\u7684\u5c5e\u6027 \uff0c \u521d\u59cb\u503c\u548c\u603b\u9762\u79ef\u76f8\u7b49 \u5f53\u8c03\u7528 add_item \u65b9\u6cd5\uff0c\u5411\u623f\u95f4 \u6dfb\u52a0\u5bb6\u5177 \u65f6\uff0c\u8ba9 \u5269\u4f59\u9762\u79ef -= \u5bb6\u5177\u9762\u79ef \u601d\u8003 \uff1a\u5e94\u8be5\u5148\u5f00\u53d1\u54ea\u4e00\u4e2a\u7c7b\uff1f \u7b54\u6848 \u2014\u2014 \u5bb6\u5177\u7c7b \u5bb6\u5177\u7b80\u5355 \u623f\u5b50\u8981\u4f7f\u7528\u5230\u5bb6\u5177\uff0c \u88ab\u4f7f\u7528\u7684\u7c7b \uff0c\u901a\u5e38\u5e94\u8be5\u5148\u5f00\u53d1 3.1 \u521b\u5efa\u5bb6\u5177 \u00b6 class HouseItem : def __init__ ( self , name , area ): \"\"\" :param name: \u5bb6\u5177\u540d\u79f0 :param area: \u5360\u5730\u9762\u79ef \"\"\" self . name = name self . area = area def __str__ ( self ): return \"[ %s ] \u5360\u5730\u9762\u79ef %.2f \" % ( self . name , self . area ) # 1. \u521b\u5efa\u5bb6\u5177 bed = HouseItem ( \"\u5e2d\u68a6\u601d\" , 4 ) chest = HouseItem ( \"\u8863\u67dc\" , 2 ) table = HouseItem ( \"\u9910\u684c\" , 1.5 ) print ( bed ) print ( chest ) print ( table ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u5bb6\u5177\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u548c __str__ \u4e24\u4e2a\u5185\u7f6e\u65b9\u6cd5 \u4f7f\u7528 \u5bb6\u5177\u7c7b \u521b\u5efa\u4e86 \u4e09\u4e2a\u5bb6\u5177\u5bf9\u8c61 \uff0c\u5e76\u4e14 \u8f93\u51fa\u5bb6\u5177\u4fe1\u606f 3.2 \u521b\u5efa\u623f\u95f4 \u00b6 class House : def __init__ ( self , house_type , area ): \"\"\" :param house_type: \u6237\u578b :param area: \u603b\u9762\u79ef \"\"\" self . house_type = house_type self . area = area # \u5269\u4f59\u9762\u79ef\u9ed8\u8ba4\u548c\u603b\u9762\u79ef\u4e00\u81f4 self . free_area = area # \u9ed8\u8ba4\u6ca1\u6709\u4efb\u4f55\u7684\u5bb6\u5177 self . item_list = [] def __str__ ( self ): # Python \u80fd\u591f\u81ea\u52a8\u7684\u5c06\u4e00\u5bf9\u62ec\u53f7\u5185\u90e8\u7684\u4ee3\u7801\u8fde\u63a5\u5728\u4e00\u8d77 return ( \"\u6237\u578b\uff1a %s \\n \u603b\u9762\u79ef\uff1a %.2f [\u5269\u4f59\uff1a %.2f ] \\n \u5bb6\u5177\uff1a %s \" % ( self . house_type , self . area , self . free_area , self . item_list )) def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) ... # 2. \u521b\u5efa\u623f\u5b50\u5bf9\u8c61 my_home = House ( \"\u4e24\u5ba4\u4e00\u5385\" , 60 ) my_home . add_item ( bed ) my_home . add_item ( chest ) my_home . add_item ( table ) print ( my_home ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u623f\u5b50\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u548c __str__ \u4e24\u4e2a\u5185\u7f6e\u65b9\u6cd5 \u51c6\u5907\u4e86\u4e00\u4e2a add_item \u65b9\u6cd5 \u51c6\u5907\u6dfb\u52a0\u5bb6\u5177 \u4f7f\u7528 \u623f\u5b50\u7c7b \u521b\u5efa\u4e86 \u4e00\u4e2a\u623f\u5b50\u5bf9\u8c61 \u8ba9 \u623f\u5b50\u5bf9\u8c61 \u8c03\u7528\u4e86\u4e09\u6b21 add_item \u65b9\u6cd5\uff0c\u5c06 \u4e09\u4ef6\u5bb6\u5177 \u4ee5\u5b9e\u53c2\u4f20\u9012\u5230 add_item \u5185\u90e8 3.3 \u6dfb\u52a0\u5bb6\u5177 \u00b6 \u9700\u6c42 1> \u5224\u65ad \u5bb6\u5177\u7684\u9762\u79ef \u662f\u5426 \u8d85\u8fc7\u5269\u4f59\u9762\u79ef \uff0c \u5982\u679c\u8d85\u8fc7 \uff0c\u63d0\u793a\u4e0d\u80fd\u6dfb\u52a0\u8fd9\u4ef6\u5bb6\u5177 2> \u5c06 \u5bb6\u5177\u7684\u540d\u79f0 \u8ffd\u52a0\u5230 \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u4e2d 3> \u7528 \u623f\u5b50\u7684\u5269\u4f59\u9762\u79ef - \u5bb6\u5177\u9762\u79ef def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) # 1. \u5224\u65ad\u5bb6\u5177\u9762\u79ef\u662f\u5426\u5927\u4e8e\u5269\u4f59\u9762\u79ef if item . area > self . free_area : print ( \" %s \u7684\u9762\u79ef\u592a\u5927\uff0c\u4e0d\u80fd\u6dfb\u52a0\u5230\u623f\u5b50\u4e2d\" % item . name ) return # 2. \u5c06\u5bb6\u5177\u7684\u540d\u79f0\u8ffd\u52a0\u5230\u540d\u79f0\u5217\u8868\u4e2d self . item_list . append ( item . name ) # 3. \u8ba1\u7b97\u5269\u4f59\u9762\u79ef self . free_area -= item . area \u6700\u540e\u7684\u7a0b\u5e8f class HouseItem : def __init__ ( self , name , area ): self . name = name self . area = area def __str__ ( self ): return \"[ %s ] \u5360\u5730 %.2f \" % ( self . name , self . area ) class House : def __init__ ( self , house_type , area ): self . house_type = house_type self . area = area # \u5269\u4f59\u9762\u79ef self . free_area = area # \u5bb6\u5177\u540d\u79f0\u5217\u8868 self . item_list = [] def __str__ ( self ): # Python \u80fd\u591f\u81ea\u52a8\u7684\u5c06\u4e00\u5bf9\u62ec\u53f7\u5185\u90e8\u7684\u4ee3\u7801\u8fde\u63a5\u5728\u4e00\u8d77 return ( \"\u6237\u578b\uff1a %s \\n \u603b\u9762\u79ef\uff1a %.2f [\u5269\u4f59\uff1a %.2f ] \\n \u5bb6\u5177\uff1a %s \" % ( self . house_type , self . area , self . free_area , self . item_list )) def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) # 1. \u5224\u65ad\u5bb6\u5177\u7684\u9762\u79ef if item . area > self . free_area : print ( \" %s \u7684\u9762\u79ef\u592a\u5927\u4e86\uff0c\u65e0\u6cd5\u6dfb\u52a0\" % item . name ) return # 2. \u5c06\u5bb6\u5177\u7684\u540d\u79f0\u6dfb\u52a0\u5230\u5217\u8868\u4e2d self . item_list . append ( item . name ) # 3. \u8ba1\u7b97\u5269\u4f59\u9762\u79ef self . free_area -= item . area # 1. \u521b\u5efa\u5bb6\u5177 bed = HouseItem ( \"\u5e2d\u68a6\u601d\" , 40 ) chest = HouseItem ( \"\u8863\u67dc\" , 2 ) table = HouseItem ( \"\u9910\u684c\" , 20 ) print ( bed ) print ( chest ) print ( table ) # 2. \u521b\u5efa\u623f\u5b50\u5bf9\u8c61 my_home = House ( \"\u4e24\u5ba4\u4e00\u5385\" , 60 ) my_home . add_item ( bed ) my_home . add_item ( chest ) my_home . add_item ( table ) print ( my_home ) 3.4 \u5c0f\u7ed3 \u00b6 \u4e3b\u7a0b\u5e8f\u53ea\u8d1f\u8d23\u521b\u5efa \u623f\u5b50 \u5bf9\u8c61\u548c \u5bb6\u5177 \u5bf9\u8c61 \u8ba9 \u623f\u5b50 \u5bf9\u8c61\u8c03\u7528 add_item \u65b9\u6cd5 **\u5c06\u5bb6\u5177\u6dfb\u52a0\u5230\u623f\u5b50**\u4e2d \u9762\u79ef\u8ba1\u7b97 \u3001 \u5269\u4f59\u9762\u79ef \u3001 \u5bb6\u5177\u5217\u8868 \u7b49\u5904\u7406\u90fd\u88ab \u5c01\u88c5 \u5230 \u623f\u5b50\u7c7b\u7684\u5185\u90e8 \u9762\u5411\u5bf9\u8c61\u5c01\u88c5\u6848\u4f8b II \u00b6 \u54ea\u4e2a\u7c7b\u5148\u88ab\u4f7f\u7528\u5c31\u5148\u5b9a\u4e49\u54ea\u4e2a\u7c7b \u00b6 \u76ee\u6807 \u00b6 \u58eb\u5175\u7a81\u51fb\u6848\u4f8b \u8eab\u4efd\u8fd0\u7b97\u7b26 \u5c01\u88c5 \u5c01\u88c5 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u5927\u7279\u70b9 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u7b2c\u4e00\u6b65 \u2014\u2014 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5916\u754c \u4f7f\u7528 \u7c7b \u521b\u5efa \u5bf9\u8c61 \uff0c\u7136\u540e \u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 \u5bf9\u8c61\u65b9\u6cd5\u7684\u7ec6\u8282 \u90fd\u88ab \u5c01\u88c5 \u5728 \u7c7b\u7684\u5185\u90e8 \u4e00\u4e2a\u5bf9\u8c61\u7684 \u5c5e\u6027 \u53ef\u4ee5\u662f \u53e6\u5916\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 01. \u58eb\u5175\u7a81\u51fb \u00b6 \u9700\u6c42 \u58eb\u5175 \u8bb8\u4e09\u591a \u6709\u4e00\u628a AK47 \u58eb\u5175 \u53ef\u4ee5 \u5f00\u706b \u67aa \u80fd\u591f \u53d1\u5c04 \u5b50\u5f39 \u67aa \u88c5\u586b \u88c5\u586b\u5b50\u5f39 \u2014\u2014 \u589e\u52a0\u5b50\u5f39\u6570\u91cf 1.1 \u5f00\u53d1\u67aa\u7c7b \u00b6 shoot \u65b9\u6cd5\u9700\u6c42 1> \u5224\u65ad\u662f\u5426\u6709\u5b50\u5f39\uff0c\u6ca1\u6709\u5b50\u5f39\u65e0\u6cd5\u5c04\u51fb 2> \u4f7f\u7528 print \u63d0\u793a\u5c04\u51fb\uff0c\u5e76\u4e14\u8f93\u51fa\u5b50\u5f39\u6570\u91cf class Gun : def __init__ ( self , model ): # \u67aa\u7684\u578b\u53f7 self . model = model # \u5b50\u5f39\u6570\u91cf self . bullet_count = 0 def add_bullet ( self , count ): self . bullet_count += count def shoot ( self ): # \u5224\u65ad\u662f\u5426\u8fd8\u6709\u5b50\u5f39 if self . bullet_count <= 0 : print ( \"\u6ca1\u6709\u5b50\u5f39\u4e86...\" ) return # \u53d1\u5c04\u4e00\u9897\u5b50\u5f39 self . bullet_count -= 1 print ( \" %s \u53d1\u5c04\u5b50\u5f39[ %d ]...\" % ( self . model , self . bullet_count )) # \u521b\u5efa\u67aa\u5bf9\u8c61 ak47 = Gun ( \"ak47\" ) ak47 . add_bullet ( 50 ) ak47 . shoot () 1.2 \u5f00\u53d1\u58eb\u5175\u7c7b \u00b6 \u5047\u8bbe\uff1a\u6bcf\u4e00\u4e2a\u65b0\u5175 \u90fd \u6ca1\u6709\u67aa \u5b9a\u4e49\u6ca1\u6709\u521d\u59cb\u503c\u7684\u5c5e\u6027 \u5728\u5b9a\u4e49\u5c5e\u6027\u65f6\uff0c\u5982\u679c \u4e0d\u77e5\u9053\u8bbe\u7f6e\u4ec0\u4e48\u521d\u59cb\u503c \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a None None \u5173\u952e\u5b57 \u8868\u793a \u4ec0\u4e48\u90fd\u6ca1\u6709 \u8868\u793a\u4e00\u4e2a \u7a7a\u5bf9\u8c61 \uff0c \u6ca1\u6709\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u91cf \u53ef\u4ee5\u5c06 None \u8d4b\u503c\u7ed9\u4efb\u4f55\u4e00\u4e2a\u53d8\u91cf fire \u65b9\u6cd5\u9700\u6c42 1> \u5224\u65ad\u662f\u5426\u6709\u67aa\uff0c\u6ca1\u6709\u67aa\u6ca1\u6cd5\u51b2\u950b 2> \u558a\u4e00\u58f0\u53e3\u53f7 3> \u88c5\u586b\u5b50\u5f39 4> \u5c04\u51fb class Soldier : def __init__ ( self , name ): # \u59d3\u540d self . name = name # \u67aa\uff0c\u58eb\u5175\u521d\u59cb\u6ca1\u6709\u67aa None \u5173\u952e\u5b57\u8868\u793a\u4ec0\u4e48\u90fd\u6ca1\u6709 self . gun = None def fire ( self ): # 1. \u5224\u65ad\u58eb\u5175\u662f\u5426\u6709\u67aa if self . gun is None : print ( \"[ %s ] \u8fd8\u6ca1\u6709\u67aa...\" % self . name ) return # 2. \u9ad8\u558a\u53e3\u53f7 print ( \"\u51b2\u554a...[ %s ]\" % self . name ) # 3. \u8ba9\u67aa\u88c5\u586b\u5b50\u5f39 self . gun . add_bullet ( 50 ) # 4. \u8ba9\u67aa\u53d1\u5c04\u5b50\u5f39 self . gun . shoot () \u6574\u4e2a\u7684\u7a0b\u5e8f\u4ee3\u7801: class Gun : def __init__ ( self , model ): # 1. \u67aa\u7684\u578b\u53f7 self . model = model # 2. \u5b50\u5f39\u7684\u6570\u91cf self . bullet_count = 0 def add_bullet ( self , count ): self . bullet_count += count def shoot ( self ): # 1. \u5224\u65ad\u5b50\u5f39\u6570\u91cf if self . bullet_count <= 0 : print ( \"[ %s ] \u6ca1\u6709\u5b50\u5f39\u4e86...\" % self . model ) return # 2. \u53d1\u5c04\u5b50\u5f39\uff0c-1 self . bullet_count -= 1 # 3. \u63d0\u793a\u53d1\u5c04\u4fe1\u606f print ( \"[ %s ] \u7a81\u7a81\u7a81... [ %d ]\" % ( self . model , self . bullet_count )) class Soldier : def __init__ ( self , name ): # 1. \u59d3\u540d self . name = name # 2. \u67aa - \u65b0\u5175\u6ca1\u6709\u67aa self . gun = None def fire ( self ): # 1. \u5224\u65ad\u58eb\u5175\u662f\u5426\u6709\u67aa # if self.gun == None: if self . gun is None : print ( \"[ %s ] \u8fd8\u6ca1\u6709\u67aa...\" % self . name ) return # 2. \u9ad8\u558a\u53e3\u53f7 print ( \"\u51b2\u554a...[ %s ]\" % self . name ) # 3. \u8ba9\u67aa\u88c5\u586b\u5b50\u5f39 self . gun . add_bullet ( 50 ) # 4. \u8ba9\u67aa\u53d1\u5c04\u5b50\u5f39 self . gun . shoot () # 1. \u521b\u5efa\u67aa\u5bf9\u8c61 ak47 = Gun ( \"AK47\" ) # 2. \u521b\u5efa\u8bb8\u4e09\u591a xusanduo = Soldier ( \"\u8bb8\u4e09\u591a\" ) xusanduo . gun = ak47 #\u5c06\u5bf9\u8c61\u4f20\u9012\u7ed9\u8fd9\u4e2aself.gun\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u51fd\u6570\u65b9\u6cd5 xusanduo . fire () print ( xusanduo . gun ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u58eb\u5175\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u5185\u7f6e\u65b9\u6cd5 \u5728\u5b9a\u4e49\u5c5e\u6027\u65f6\uff0c\u5982\u679c \u4e0d\u77e5\u9053\u8bbe\u7f6e\u4ec0\u4e48\u521d\u59cb\u503c \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a None \u5728 \u5c01\u88c5\u7684 \u65b9\u6cd5\u5185\u90e8\uff0c\u8fd8\u53ef\u4ee5\u8ba9 \u81ea\u5df1\u7684 \u4f7f\u7528\u5176\u4ed6\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u5c5e\u6027 \u8c03\u7528\u5df2\u7ecf \u5c01\u88c5\u597d\u7684\u65b9\u6cd5 02. \u8eab\u4efd\u8fd0\u7b97\u7b26 \u00b6 \u8eab\u4efd\u8fd0\u7b97\u7b26\u7528\u4e8e \u6bd4\u8f83 \u4e24\u4e2a\u5bf9\u8c61\u7684 \u5185\u5b58\u5730\u5740 \u662f\u5426\u4e00\u81f4 \u2014\u2014 \u662f\u5426\u662f\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 \u5728 Python \u4e2d\u9488\u5bf9 None \u6bd4\u8f83\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 is \u5224\u65ad \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b is is \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61 x is y\uff0c\u7c7b\u4f3c id(x) == id(y) is not is not \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u4e0d\u540c\u5bf9\u8c61 x is not y\uff0c\u7c7b\u4f3c id(a) != id(b) is \u4e0e == \u533a\u522b\uff1a \u00b6 is \u7528\u4e8e\u5224\u65ad \u4e24\u4e2a\u53d8\u91cf \u5f15\u7528\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a == \u7528\u4e8e\u5224\u65ad \u5f15\u7528\u53d8\u91cf\u7684\u503c \u662f\u5426\u76f8\u7b49 >>> a = [ 1 , 2 , 3 ] >>> b = [ 1 , 2 , 3 ] >>> b is a False >>> b == a True","title":"008 python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#oop","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u2014\u2014 Object Oriented Programming \u7b80\u5199 OOP","title":"\u9762\u5411\u5bf9\u8c61(OOP)\u57fa\u672c\u6982\u5ff5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_1","text":"\u4e86\u89e3 \u9762\u5411\u5bf9\u8c61 \u57fa\u672c\u6982\u5ff5","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0146","text":"\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u7f16\u7a0b\u65b9\u5f0f\u5c31\u662f \u9762\u5411\u8fc7\u7a0b \u7684 \u9762\u76f8\u8fc7\u7a0b \u548c \u9762\u76f8\u5bf9\u8c61 \uff0c\u662f\u4e24\u79cd\u4e0d\u540c\u7684 \u7f16\u7a0b\u65b9\u5f0f \u5bf9\u6bd4 \u9762\u5411\u8fc7\u7a0b \u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u4ec0\u4e48\u662f \u9762\u5411\u5bf9\u8c61","title":"01. \u9762\u5411\u5bf9\u8c61\u57fa\u672c\u6982\u5ff5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#11","text":"\u8fc7\u7a0b \u662f\u65e9\u671f\u7684\u4e00\u4e2a\u7f16\u7a0b\u6982\u5ff5 \u8fc7\u7a0b \u7c7b\u4f3c\u4e8e\u51fd\u6570\uff0c\u53ea\u80fd\u6267\u884c\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c \u51fd\u6570 \u4e0d\u4ec5\u80fd\u6267\u884c\uff0c\u8fd8\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c","title":"1.1 \u8fc7\u7a0b\u548c\u51fd\u6570\uff08\u79d1\u666e\uff09"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#12","text":"","title":"1.2 \u9762\u76f8\u8fc7\u7a0b \u548c \u9762\u76f8\u5bf9\u8c61 \u57fa\u672c\u6982\u5ff5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#1","text":"\u628a\u5b8c\u6210\u67d0\u4e00\u4e2a\u9700\u6c42\u7684 \u6240\u6709\u6b65\u9aa4 \u4ece\u5934\u5230\u5c3e \u9010\u6b65\u5b9e\u73b0 \u6839\u636e\u5f00\u53d1\u9700\u6c42\uff0c\u5c06\u67d0\u4e9b \u529f\u80fd\u72ec\u7acb \u7684\u4ee3\u7801 \u5c01\u88c5 \u6210\u4e00\u4e2a\u53c8\u4e00\u4e2a \u51fd\u6570 \u6700\u540e\u5b8c\u6210\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u987a\u5e8f\u5730\u8c03\u7528 \u4e0d\u540c\u7684\u51fd\u6570 \u7279\u70b9 \u6ce8\u91cd \u6b65\u9aa4\u4e0e\u8fc7\u7a0b \uff0c\u4e0d\u6ce8\u91cd\u804c\u8d23\u5206\u5de5 \u5982\u679c\u9700\u6c42\u590d\u6742\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5f88\u590d\u6742 \u5f00\u53d1\u590d\u6742\u9879\u76ee\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u5957\u8def\uff0c\u5f00\u53d1\u96be\u5ea6\u5f88\u5927\uff01","title":"1) \u9762\u76f8\u8fc7\u7a0b \u2014\u2014 \u600e\u4e48\u505a\uff1f"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#2","text":"\u76f8\u6bd4\u8f83\u51fd\u6570\uff0c \u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u6839\u636e \u804c\u8d23 \u5728 \u4e00\u4e2a\u5bf9\u8c61\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \u5728\u5b8c\u6210\u67d0\u4e00\u4e2a\u9700\u6c42\u524d\uff0c\u9996\u5148\u786e\u5b9a \u804c\u8d23 \u2014\u2014 \u8981\u505a\u7684\u4e8b\u60c5\uff08\u65b9\u6cd5\uff09 \u6839\u636e \u804c\u8d23 \u786e\u5b9a\u4e0d\u540c\u7684 \u5bf9\u8c61 \uff0c\u5728 \u5bf9\u8c61 \u5185\u90e8\u5c01\u88c5\u4e0d\u540c\u7684 \u65b9\u6cd5 \uff08\u591a\u4e2a\uff09 \u6700\u540e\u5b8c\u6210\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u987a\u5e8f\u5730\u8ba9 \u4e0d\u540c\u7684\u5bf9\u8c61 \u8c03\u7528 \u4e0d\u540c\u7684\u65b9\u6cd5 \u7279\u70b9 \u6ce8\u91cd \u5bf9\u8c61\u548c\u804c\u8d23 \uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u627f\u62c5\u4e0d\u540c\u7684\u804c\u8d23 \u66f4\u52a0\u9002\u5408\u5e94\u5bf9\u590d\u6742\u7684\u9700\u6c42\u53d8\u5316\uff0c \u662f\u4e13\u95e8\u5e94\u5bf9\u590d\u6742\u9879\u76ee\u5f00\u53d1\uff0c\u63d0\u4f9b\u7684\u56fa\u5b9a\u5957\u8def \u9700\u8981\u5728\u9762\u5411\u8fc7\u7a0b\u57fa\u7840\u4e0a\uff0c\u518d\u5b66\u4e60\u4e00\u4e9b\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u6cd5","title":"2) \u9762\u5411\u5bf9\u8c61 \u2014\u2014 \u8c01\u6765\u505a\uff1f"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#02","text":"","title":"02"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_2","text":"","title":"\u7c7b\u548c\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_3","text":"\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5 \u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb \u7c7b\u7684\u8bbe\u8ba1","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0146_1","text":"\u7c7b \u548c \u5bf9\u8c61 \u662f \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u4e24\u4e2a \u6838\u5fc3\u6982\u5ff5","title":"01. \u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#11_1","text":"\u7c7b \u662f\u5bf9\u4e00\u7fa4\u5177\u6709 \u76f8\u540c \u7279\u5f81 \u6216\u8005 \u884c\u4e3a \u7684\u4e8b\u7269\u7684\u4e00\u4e2a\u7edf\u79f0\uff0c\u662f\u62bd\u8c61\u7684\uff0c \u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 \u7279\u5f81 \u88ab\u79f0\u4e3a \u5c5e\u6027 \u884c\u4e3a \u88ab\u79f0\u4e3a \u65b9\u6cd5 \u7c7b \u5c31\u76f8\u5f53\u4e8e\u5236\u9020\u98de\u673a\u65f6\u7684**\u56fe\u7eb8**\uff0c\u662f\u4e00\u4e2a \u6a21\u677f \uff0c\u662f \u8d1f\u8d23\u521b\u5efa\u5bf9\u8c61\u7684","title":"1.1 \u7c7b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#12_1","text":"\u5bf9\u8c61 \u662f \u7531\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u4e00\u4e2a\u5177\u4f53\u5b58\u5728 \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u7531 \u54ea\u4e00\u4e2a\u7c7b \u521b\u5efa\u51fa\u6765\u7684 \u5bf9\u8c61 \uff0c\u5c31\u62e5\u6709\u5728 \u54ea\u4e00\u4e2a\u7c7b \u4e2d\u5b9a\u4e49\u7684\uff1a \u5c5e\u6027 \u65b9\u6cd5 \u5bf9\u8c61 \u5c31\u76f8\u5f53\u4e8e\u7528 \u56fe\u7eb8 \u5236\u9020 \u7684\u98de\u673a \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5e94\u8be5 \u5148\u6709\u7c7b\uff0c\u518d\u6709\u5bf9\u8c61","title":"1.2 \u5bf9\u8c61"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0246","text":"\u7c7b\u662f\u6a21\u677f \uff0c \u5bf9\u8c61 \u662f\u6839\u636e \u7c7b \u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\u51fa\u6765\u7684\uff0c\u5e94\u8be5 \u5148\u6709\u7c7b\uff0c\u518d\u6709\u5bf9\u8c61 \u7c7b \u53ea\u6709\u4e00\u4e2a\uff0c\u800c \u5bf9\u8c61 \u53ef\u4ee5\u6709\u5f88\u591a\u4e2a \u4e0d\u540c\u7684\u5bf9\u8c61 \u4e4b\u95f4 \u5c5e\u6027 \u53ef\u80fd\u4f1a\u5404\u4e0d\u76f8\u540c \u7c7b \u4e2d\u5b9a\u4e49\u4e86\u4ec0\u4e48 \u5c5e\u6027\u548c\u65b9\u6cd5 \uff0c \u5bf9\u8c61 \u4e2d\u5c31\u6709\u4ec0\u4e48\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c \u4e0d\u53ef\u80fd\u591a\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5c11","title":"02. \u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0346","text":"\u5728\u4f7f\u7528\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\u524d\uff0c\u5e94\u8be5\u9996\u5148\u5206\u6790\u9700\u6c42\uff0c\u786e\u5b9a\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u9700\u8981\u5305\u542b\u54ea\u4e9b\u7c7b\uff01 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u901a\u5e38\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u4e09\u4e2a\u8981\u7d20\uff1a \u7c7b\u540d \u8fd9\u7c7b\u4e8b\u7269\u7684\u540d\u5b57\uff0c \u6ee1\u8db3\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5 \u5c5e\u6027 \u8fd9\u7c7b\u4e8b\u7269\u5177\u6709\u4ec0\u4e48\u6837\u7684\u7279\u5f81 \u65b9\u6cd5 \u8fd9\u7c7b\u4e8b\u7269\u5177\u6709\u4ec0\u4e48\u6837\u7684\u884c\u4e3a","title":"03. \u7c7b\u7684\u8bbe\u8ba1"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_4","text":"CapWords \u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199 \u5355\u8bcd\u4e0e\u5355\u8bcd\u4e4b\u95f4\u6ca1\u6709\u4e0b\u5212\u7ebf","title":"\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#31","text":"\u540d\u8bcd\u63d0\u70bc\u6cd5 \u5206\u6790 \u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b \uff0c\u51fa\u73b0\u7684 \u540d\u8bcd \uff0c\u901a\u5e38\u5c31\u662f\u627e\u5230\u7684\u7c7b","title":"3.1 \u7c7b\u540d\u7684\u786e\u5b9a"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#32","text":"\u5bf9 \u5bf9\u8c61\u7684\u7279\u5f81\u63cf\u8ff0 \uff0c\u901a\u5e38\u53ef\u4ee5\u5b9a\u4e49\u6210 \u5c5e\u6027 \u5bf9\u8c61\u5177\u6709\u7684\u884c\u4e3a \uff08\u52a8\u8bcd\uff09\uff0c\u901a\u5e38\u53ef\u4ee5\u5b9a\u4e49\u6210 \u65b9\u6cd5 \u63d0\u793a\uff1a\u9700\u6c42\u4e2d\u6ca1\u6709\u6d89\u53ca\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u5728\u8bbe\u8ba1\u7c7b\u65f6\uff0c\u4e0d\u9700\u8981\u8003\u8651","title":"3.2 \u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u786e\u5b9a"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#1_1","text":"\u9700\u6c42 \u5c0f\u660e \u4eca\u5e74 18 \u5c81 \uff0c \u8eab\u9ad8 1.75 \uff0c\u6bcf\u5929\u65e9\u4e0a \u8dd1 \u5b8c\u6b65\uff0c\u4f1a\u53bb \u5403 \u4e1c\u897f \u5c0f\u7f8e \u4eca\u5e74 17 \u5c81 \uff0c \u8eab\u9ad8 1.65 \uff0c\u5c0f\u7f8e\u4e0d\u8dd1\u6b65\uff0c\u5c0f\u7f8e\u559c\u6b22 \u5403 \u4e1c\u897f","title":"\u7ec3\u4e60 1"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#2_1","text":"\u9700\u6c42 \u4e00\u53ea \u9ec4\u989c\u8272 \u7684 \u72d7\u72d7 \u53eb \u5927\u9ec4 \u770b\u89c1\u751f\u4eba \u6c6a\u6c6a\u53eb \u770b\u89c1\u5bb6\u4eba \u6447\u5c3e\u5df4","title":"\u7ec3\u4e60 2"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#03","text":"","title":"03"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_5","text":"","title":"\u9762\u76f8\u5bf9\u8c61\u57fa\u7840\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_6","text":"dir \u5185\u7f6e\u51fd\u6570 \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09 \u65b9\u6cd5\u4e2d\u7684 self \u53c2\u6570 \u521d\u59cb\u5316\u65b9\u6cd5 \u5185\u7f6e\u65b9\u6cd5\u548c\u5c5e\u6027","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0146-dir","text":"\u5728 Python \u4e2d \u5bf9\u8c61\u51e0\u4e4e\u662f\u65e0\u6240\u4e0d\u5728\u7684 \uff0c\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684 \u53d8\u91cf \u3001 \u6570\u636e \u3001 \u51fd\u6570 \u90fd\u662f\u5bf9\u8c61 \u5728 Python \u4e2d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u6cd5\u9a8c\u8bc1\uff1a \u5728 \u6807\u8bc6\u7b26 / \u6570\u636e \u540e\u8f93\u5165\u4e00\u4e2a . \uff0c\u7136\u540e\u6309\u4e0b TAB \u952e\uff0c iPython \u4f1a\u63d0\u793a\u8be5\u5bf9\u8c61\u80fd\u591f\u8c03\u7528\u7684 \u65b9\u6cd5\u5217\u8868 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570 dir \u4f20\u5165 \u6807\u8bc6\u7b26 / \u6570\u636e \uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u5185\u7684 \u6240\u6709\u5c5e\u6027\u53ca\u65b9\u6cd5 \u63d0\u793a __\u65b9\u6cd5\u540d__ \u683c\u5f0f\u7684\u65b9\u6cd5\u662f Python \u63d0\u4f9b\u7684 \u5185\u7f6e\u65b9\u6cd5 / \u5c5e\u6027 \uff0c\u7a0d\u540e\u4f1a\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684 \u5185\u7f6e\u65b9\u6cd5 / \u5c5e\u6027 \u5e8f\u53f7 \u65b9\u6cd5\u540d \u7c7b\u578b \u4f5c\u7528 01 __new__ \u65b9\u6cd5 \u521b\u5efa\u5bf9\u8c61**\u65f6\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 02 __init__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u521d\u59cb\u5316**\u65f6\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 03 __del__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1**\u524d\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 04 __str__ \u65b9\u6cd5 \u8fd4\u56de**\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f**\uff0c print \u51fd\u6570\u8f93\u51fa\u4f7f\u7528 \u63d0\u793a \u5229\u7528\u597d dir() \u51fd\u6570\uff0c\u5728\u5b66\u4e60\u65f6\u5f88\u591a\u5185\u5bb9\u5c31\u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\u4e86","title":"01. dir \u5185\u7f6e\u51fd\u6570\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0246_1","text":"\u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u5728 \u4e00\u4e2a\u7c7b\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \uff0c\u8fd9\u6837 \u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u4e86 \uff01","title":"02. \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#02_1","text":"\u9762\u5411\u5bf9\u8c61 \u662f \u66f4\u5927 \u7684 \u5c01\u88c5 \uff0c\u5728 \u4e00\u4e2a\u7c7b\u4e2d \u5c01\u88c5 \u591a\u4e2a\u65b9\u6cd5 \uff0c\u8fd9\u6837 \u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u4e86 \uff01","title":"02. \u5b9a\u4e49\u7b80\u5355\u7684\u7c7b\uff08\u53ea\u5305\u542b\u65b9\u6cd5\uff09"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#21","text":"\u5728 Python \u4e2d\u8981\u5b9a\u4e49\u4e00\u4e2a\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u7c7b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a class \u7c7b\u540d: def \u65b9\u6cd5 1 ( self , \u53c2\u6570\u5217\u8868 ): pass def \u65b9\u6cd5 2 ( self , \u53c2\u6570\u5217\u8868 ): pass \u65b9\u6cd5 \u7684\u5b9a\u4e49\u683c\u5f0f\u548c\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684**\u51fd\u6570** \u51e0\u4e4e\u4e00\u6837 \u533a\u522b\u5728\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f self \uff0c\u5927\u5bb6\u6682\u65f6\u5148\u8bb0\u4f4f\uff0c\u7a0d\u540e\u4ecb\u7ecd self \u6ce8\u610f\uff1a \u7c7b\u540d \u7684 \u547d\u540d\u89c4\u5219 \u8981\u7b26\u5408 \u5927\u9a7c\u5cf0\u547d\u540d\u6cd5","title":"2.1 \u5b9a\u4e49\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u7c7b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#22","text":"\u5f53\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u5b8c\u6210\u4e4b\u540e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u5bf9\u8c61\u53d8\u91cf = \u7c7b\u540d()","title":"2.2 \u521b\u5efa\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#23","text":"\u9700\u6c42 \u5c0f\u732b \u7231 \u5403 \u9c7c\uff0c \u5c0f\u732b \u8981 \u559d \u6c34 \u5206\u6790 \u5b9a\u4e49\u4e00\u4e2a\u732b\u7c7b Cat \u5b9a\u4e49\u4e24\u4e2a\u65b9\u6cd5 eat \u548c drink \u6309\u7167\u9700\u6c42 \u2014\u2014 \u4e0d\u9700\u8981\u5b9a\u4e49\u5c5e\u6027 class Cat : def eat ( self ): print ( \"\u5c0f\u732b\u7231\u5403\u9c7c\" ) def drink ( self ): print ( \"\u5c0f\u732b\u8981\u559d\u6c34\" ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () tom . eat () tom . drink () print ( tom ) addr = id ( tom ) #\u8fd9\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u7684\u5730\u5740 print ( \" %x \" % addr ) \u6267\u884c\u7ed3\u679c: \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 <__main__.Cat object at 0x000001734D4F9748> 1734d4f9748","title":"2.3 \u7b2c\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_7","text":"\u5728\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u4e2d\uff0c**\u5f15\u7528**\u7684\u6982\u5ff5\u662f\u540c\u6837\u9002\u7528\u7684\uff01 \u5728 Python \u4e2d\u4f7f\u7528\u7c7b \u521b\u5efa\u5bf9\u8c61\u4e4b\u540e \uff0c tom \u53d8\u91cf\u4e2d \u4ecd\u7136\u8bb0\u5f55\u7684\u662f \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \u4e5f\u5c31\u662f tom \u53d8\u91cf \u5f15\u7528 \u4e86 \u65b0\u5efa\u7684\u732b\u5bf9\u8c61 \u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u662f\u80fd\u591f\u8f93\u51fa\u8fd9\u4e2a\u53d8\u91cf \u5f15\u7528\u7684\u5bf9\u8c61 \u662f \u7531\u54ea\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 \uff0c\u4ee5\u53ca \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \uff08 \u5341\u516d\u8fdb\u5236\u8868\u793a \uff09 \u63d0\u793a\uff1a\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528 \u5341\u516d\u8fdb\u5236 \u8868\u793a \u5185\u5b58\u5730\u5740 \u5341\u8fdb\u5236 \u548c \u5341\u516d\u8fdb\u5236 \u90fd\u662f\u7528\u6765\u8868\u8fbe\u6570\u5b57\u7684\uff0c\u53ea\u662f\u8868\u793a\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837 \u5341\u8fdb\u5236 \u548c \u5341\u516d\u8fdb\u5236 \u7684\u6570\u5b57\u4e4b\u95f4\u53ef\u4ee5\u6765\u56de\u8f6c\u6362 %d \u53ef\u4ee5\u4ee5 10 \u8fdb\u5236 \u8f93\u51fa\u6570\u5b57 %x \u53ef\u4ee5\u4ee5 16 \u8fdb\u5236 \u8f93\u51fa\u6570\u5b57","title":"\u5f15\u7528\u6982\u5ff5\u7684\u5f3a\u8c03"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#cat","text":"class Cat : def eat ( self ): print ( \"\u5c0f\u732b\u7231\u5403\u9c7c\" ) def drink ( self ): print ( \"\u5c0f\u732b\u8981\u559d\u6c34\" ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () tom . eat () tom . drink () print ( tom ) # \u518d\u521b\u5efa\u4e00\u4e2a\u732b\u5bf9\u8c61 lazy_cat = Cat () lazy_cat . eat () lazy_cat . drink () print ( lazy_cat ) lazy_cat2 = lazy_cat print ( lazy_cat2 ) \u63d0\u95ee\uff1a tom \u548c lazy_cat \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5417\uff1f \u6267\u884c\u7ed3\u679c:\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61 \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F9860 > \u5c0f\u732b\u7231\u5403\u9c7c \u5c0f\u732b\u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F95C0 > < __main__ . Cat object at 0x000001734D4F95C0 >","title":"\u6848\u4f8b\u8fdb\u9636 \u2014\u2014 \u4f7f\u7528 Cat \u7c7b\u518d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0346-self","text":"","title":"03. \u65b9\u6cd5\u4e2d\u7684 self \u53c2\u6570"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#31_1","text":"\u5728 Python \u4e2d\uff0c\u8981 \u7ed9\u5bf9\u8c61\u8bbe\u7f6e\u5c5e\u6027 \uff0c\u975e\u5e38\u7684\u5bb9\u6613\uff0c \u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528 \u56e0\u4e3a\uff1a\u5bf9\u8c61\u5c5e\u6027\u7684\u5c01\u88c5\u5e94\u8be5\u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8 \u53ea\u9700\u8981\u5728 \u7c7b\u7684\u5916\u90e8\u7684\u4ee3\u7801 \u4e2d\u76f4\u63a5\u901a\u8fc7 . \u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u5373\u53ef \u6ce8\u610f\uff1a\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\uff01 tom . name = \"Tom\" ... \u200b lazy_cat . name = \"\u5927\u61d2\u732b\"","title":"3.1 \u6848\u4f8b\u6539\u9020 \u2014\u2014 \u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#32-self","text":"\u7531 \u54ea\u4e00\u4e2a\u5bf9\u8c61 \u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u7684 self \u5c31\u662f \u54ea\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 \u5728\u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5\u5185\u90e8\uff0c self \u5c31\u8868\u793a \u5f53\u524d\u8c03\u7528\u65b9\u6cd5\u7684\u5bf9\u8c61\u81ea\u5df1 \u8c03\u7528\u65b9\u6cd5\u65f6 \uff0c\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u4f20\u9012 self \u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8 \u53ef\u4ee5\u901a\u8fc7 self. \u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u4e5f\u53ef\u4ee5\u901a\u8fc7 self. \u8c03\u7528\u5176\u4ed6\u7684\u5bf9\u8c61\u65b9\u6cd5 \u6539\u9020\u4ee3\u7801\u5982\u4e0b\uff1a class Cat : def eat ( self ): # \u54ea\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u7684\u65b9\u6cd5\uff0cself\u5c31\u662f\u54ea\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 print ( \" %s \u7231\u5403\u9c7c\" % self . name ) def drink ( self ): print ( \" %s \u8981\u559d\u6c34\" % self . name ) # \u521b\u5efa\u732b\u5bf9\u8c61 tom = Cat () # \u53ef\u4ee5\u4f7f\u7528\u3000.\u5c5e\u6027\u540d\u3000\u5229\u7528\u8d4b\u503c\u8bed\u53e5\u5c31\u53ef\u4ee5\u4e86 tom . name = \"Tom\" tom . eat () tom . drink () print ( tom ) # \u518d\u521b\u5efa\u4e00\u4e2a\u732b\u5bf9\u8c61 lazy_cat = Cat () lazy_cat . name = \"\u5927\u61d2\u732b\" lazy_cat . eat () lazy_cat . drink () print ( lazy_cat ) #%s string\u578b \u8868\u793a\u683c\u5f0f\u5316\u4e00\u4e2a\u5bf9\u8c61\u4e3a\u5b57\u7b26 \u6267\u884c\u7ed3\u679c: Tom \u7231\u5403\u9c7c Tom \u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D549198 > \u5927\u61d2\u732b \u7231\u5403\u9c7c \u5927\u61d2\u732b \u8981\u559d\u6c34 < __main__ . Cat object at 0x000001734D4F9A58 > \u5728 \u7c7b\u7684\u5916\u90e8 \uff0c\u901a\u8fc7 \u53d8\u91cf\u540d. \u8bbf\u95ee\u5bf9\u8c61\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5 \u5728 \u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5\u4e2d \uff0c\u901a\u8fc7 self. \u8bbf\u95ee\u5bf9\u8c61\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5","title":"3.2 \u4f7f\u7528 self \u5728\u65b9\u6cd5\u5185\u90e8\u8f93\u51fa\u6bcf\u4e00\u53ea\u732b\u7684\u540d\u5b57"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0446","text":"","title":"04. \u521d\u59cb\u5316\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#41","text":"\u5c06\u6848\u4f8b\u4ee3\u7801\u8fdb\u884c\u8c03\u6574\uff0c \u5148\u8c03\u7528\u65b9\u6cd5 \u518d\u8bbe\u7f6e\u5c5e\u6027 \uff0c\u89c2\u5bdf\u4e00\u4e0b\u6267\u884c\u6548\u679c tom = Cat () tom . drink () tom . eat () tom . name = \"Tom\" print ( tom ) \u7a0b\u5e8f\u6267\u884c\u62a5\u9519\u5982\u4e0b\uff1a AttributeError : 'Cat' object has no attribute 'name' \u5c5e\u6027\u9519\u8bef\uff1a 'Cat' \u5bf9\u8c61\u6ca1\u6709 'name' \u5c5e\u6027 \u63d0\u793a \u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c\u4e0d\u63a8\u8350\u5728 \u7c7b\u7684\u5916\u90e8 \u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027 \u5982\u679c**\u5728\u8fd0\u884c\u65f6\uff0c\u6ca1\u6709\u627e\u5230\u5c5e\u6027\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519** \u5bf9\u8c61\u5e94\u8be5\u5305\u542b\u6709\u54ea\u4e9b\u5c5e\u6027\uff0c\u5e94\u8be5 \u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8","title":"4.1 \u4e4b\u524d\u4ee3\u7801\u5b58\u5728\u7684\u95ee\u9898 \u2014\u2014 \u5728\u7c7b\u7684\u5916\u90e8\u7ed9\u5bf9\u8c61\u589e\u52a0\u5c5e\u6027"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#42","text":"\u5f53\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4f1a \u81ea\u52a8 \u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u4e3a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d \u5206\u914d\u7a7a\u95f4 \u2014\u2014 \u521b\u5efa\u5bf9\u8c61 \u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027 \u8bbe\u7f6e\u521d\u59cb\u503c \u2014\u2014 \u521d\u59cb\u5316\u65b9\u6cd5( init ) \u8fd9\u4e2a \u521d\u59cb\u5316\u65b9\u6cd5 \u5c31\u662f __init__ \u65b9\u6cd5\uff0c __init__ \u662f\u5bf9\u8c61\u7684**\u5185\u7f6e\u65b9\u6cd5** __init__ \u65b9\u6cd5\u662f \u4e13\u95e8 \u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u7c7b \u5177\u6709\u54ea\u4e9b\u5c5e\u6027\u7684\u65b9\u6cd5 \uff01 \u5728 Cat \u4e2d\u589e\u52a0 __init__ \u65b9\u6cd5\uff0c\u9a8c\u8bc1\u8be5\u65b9\u6cd5\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u4f1a\u88ab\u81ea\u52a8\u8c03\u7528 class Cat : \"\"\"\u8fd9\u662f\u4e00\u4e2a\u732b\u7c7b\"\"\" \u200b def __init__ ( self ): print ( \"\u521d\u59cb\u5316\u65b9\u6cd5\" )","title":"4.2 \u521d\u59cb\u5316\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#43","text":"\u5728 __init__ \u65b9\u6cd5\u5185\u90e8\u4f7f\u7528 self.\u5c5e\u6027\u540d = \u5c5e\u6027\u7684\u521d\u59cb\u503c \u5c31\u53ef\u4ee5 \u5b9a\u4e49\u5c5e\u6027 \u5b9a\u4e49\u5c5e\u6027\u4e4b\u540e\uff0c\u518d\u4f7f\u7528 Cat \u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u90fd\u4f1a\u62e5\u6709\u8be5\u5c5e\u6027 class Cat : def __init__ ( self , new_name ): print ( \"\u8fd9\u662f\u4e00\u4e2a\u521d\u59cb\u5316\u65b9\u6cd5\" ) # self.\u5c5e\u6027\u540d = \u5c5e\u6027\u7684\u521d\u59cb\u503c # self.name = \"Tom\" self . name = new_name def eat ( self ): print ( \" %s \u7231\u5403\u9c7c\" % self . name ) # \u4f7f\u7528\u7c7b\u540d()\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5 __init__ tom = Cat ( \"Tom\" ) print ( tom . name ) lazy_cat = Cat ( \"\u5927\u61d2\u732b\" ) lazy_cat . eat ()","title":"4.3 \u5728\u521d\u59cb\u5316\u65b9\u6cd5\u5185\u90e8\u5b9a\u4e49\u5c5e\u6027"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#44","text":"\u5728\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u5728 \u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\uff0c\u5c31\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027 \uff0c\u53ef\u4ee5\u5bf9 __init__ \u65b9\u6cd5\u8fdb\u884c \u6539\u9020 \u628a\u5e0c\u671b\u8bbe\u7f6e\u7684\u5c5e\u6027\u503c\uff0c\u5b9a\u4e49\u6210 __init__ \u65b9\u6cd5\u7684\u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8\u4f7f\u7528 self.\u5c5e\u6027 = \u5f62\u53c2 \u63a5\u6536\u5916\u90e8\u4f20\u9012\u7684\u53c2\u6570 \u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528 \u7c7b\u540d(\u5c5e\u60271, \u5c5e\u60272...) \u8c03\u7528 class Cat : \u200b def __init__ ( self , name ): print ( \"\u521d\u59cb\u5316\u65b9\u6cd5 %s \" % name ) self . name = name ... tom = Cat ( \"Tom\" ) ... \u200b lazy_cat = Cat ( \"\u5927\u61d2\u732b\" ) ...","title":"4.4 \u6539\u9020\u521d\u59cb\u5316\u65b9\u6cd5 \u2014\u2014 \u521d\u59cb\u5316\u7684\u540c\u65f6\u8bbe\u7f6e\u521d\u59cb\u503c"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#0546","text":"\u5e8f\u53f7 \u65b9\u6cd5\u540d \u7c7b\u578b \u4f5c\u7528 01 __del__ \u65b9\u6cd5 \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1**\u524d\uff0c\u4f1a\u88ab **\u81ea\u52a8 \u8c03\u7528 02 __str__ \u65b9\u6cd5 \u8fd4\u56de**\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f**\uff0c print \u51fd\u6570\u8f93\u51fa\u4f7f\u7528","title":"05. \u5185\u7f6e\u65b9\u6cd5\u548c\u5c5e\u6027"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#51-__del__","text":"\u5728 Python \u4e2d \u5f53\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4e3a\u5bf9\u8c61 \u5206\u914d\u5b8c\u7a7a\u95f4**\u540e\uff0c**\u81ea\u52a8 \u8c03\u7528 __init__ \u65b9\u6cd5 \u5f53\u4e00\u4e2a \u5bf9\u8c61\u88ab\u4ece\u5185\u5b58\u4e2d\u9500\u6bc1 \u524d\uff0c\u4f1a \u81ea\u52a8 \u8c03\u7528 __del__ \u65b9\u6cd5 \u5e94\u7528\u573a\u666f __init__ \u6539\u9020\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u521b\u5efa\u5bf9\u8c61\u66f4\u52a0\u7075\u6d3b __del__ \u5982\u679c\u5e0c\u671b\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u524d\uff0c\u518d\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b __del__ \u65b9\u6cd5 \u751f\u547d\u5468\u671f \u4e00\u4e2a\u5bf9\u8c61\u4ece\u8c03\u7528 \u7c7b\u540d() \u521b\u5efa\uff0c\u751f\u547d\u5468\u671f\u5f00\u59cb \u4e00\u4e2a\u5bf9\u8c61\u7684 __del__ \u65b9\u6cd5\u4e00\u65e6\u88ab\u8c03\u7528\uff0c\u751f\u547d\u5468\u671f\u7ed3\u675f \u5728\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u5185\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027\uff0c\u6216\u8005\u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 17 21:56:22 2019 @author: zangz \"\"\" class Cat : def __init__ ( self , new_name ): self . name = new_name print ( \" %s \u6765\u4e86\" % self . name ) def __del__ ( self ): print ( \" %s \u6211\u53bb\u4e86\" % self . name ) # tom \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf tom = Cat ( \"Tom\" ) print ( tom . name ) # del \u5173\u952e\u5b57\u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61 del tom print ( \"-\" * 50 )","title":"5.1 __del__ \u65b9\u6cd5\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#52-__str__","text":"\u5728 Python \u4e2d\uff0c\u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f1a\u8f93\u51fa\u8fd9\u4e2a\u53d8\u91cf \u5f15\u7528\u7684\u5bf9\u8c61 \u662f \u7531\u54ea\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 \uff0c\u4ee5\u53ca \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740 \uff08 \u5341\u516d\u8fdb\u5236\u8868\u793a \uff09 \u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c\u5e0c\u671b\u4f7f\u7528 print \u8f93\u51fa \u5bf9\u8c61\u53d8\u91cf \u65f6\uff0c\u80fd\u591f\u6253\u5370 \u81ea\u5b9a\u4e49\u7684\u5185\u5bb9 \uff0c\u5c31\u53ef\u4ee5\u5229\u7528 __str__ \u8fd9\u4e2a\u5185\u7f6e\u65b9\u6cd5\u4e86 \u6ce8\u610f\uff1a __str__ \u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 class Cat : def __init__ ( self , new_name ): self . name = new_name print ( \" %s \u6765\u4e86\" % self . name ) def __del__ ( self ): print ( \" %s \u6211\u53bb\u4e86\" % self . name ) def __str__ ( self ): # \u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 return \"\u6211\u662f\u5c0f\u732b[ %s ]\" % self . name # tom \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf tom = Cat ( \"Tom\" ) print ( tom )","title":"5.2 __str__ \u65b9\u6cd5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_8","text":"","title":"\u9762\u5411\u5bf9\u8c61\u5c01\u88c5\u6848\u4f8b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_9","text":"\u5c01\u88c5 \u5c0f\u660e\u7231\u8dd1\u6b65 \u5b58\u653e\u5bb6\u5177","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#01","text":"\u5c01\u88c5 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u5927\u7279\u70b9 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u7b2c\u4e00\u6b65 \u2014\u2014 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5916\u754c \u4f7f\u7528 \u7c7b \u521b\u5efa \u5bf9\u8c61 \uff0c\u7136\u540e \u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 \u5bf9\u8c61\u65b9\u6cd5\u7684\u7ec6\u8282 \u90fd\u88ab \u5c01\u88c5 \u5728 \u7c7b\u7684\u5185\u90e8","title":"01. \u5c01\u88c5"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#02_2","text":"\u9700\u6c42 \u5c0f\u660e \u4f53\u91cd 75.0 \u516c\u65a4 \u5c0f\u660e\u6bcf\u6b21 \u8dd1\u6b65 \u4f1a\u51cf\u80a5 0.5 \u516c\u65a4 \u5c0f\u660e\u6bcf\u6b21 \u5403\u4e1c\u897f \u4f53\u91cd\u589e\u52a0 1 \u516c\u65a4 [\u56fe\u7247\u4e0a\u4f20\u5931\u8d25...(image-818ad6-1555499248411)] \u63d0\u793a\uff1a\u5728 \u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8 \uff0c\u662f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u7684\uff01 \u4ee3\u7801\u5b9e\u73b0\uff1a class Person : \"\"\"\u4eba\u7c7b\"\"\" def __init__ ( self , name , weight ): self . name = name self . weight = weight def __str__ ( self ): return \"\u6211\u7684\u540d\u5b57\u53eb %s \u4f53\u91cd %.2f \u516c\u65a4\" % ( self . name , self . weight ) def run ( self ): \"\"\"\u8dd1\u6b65\"\"\" print ( \" %s \u7231\u8dd1\u6b65\uff0c\u8dd1\u6b65\u953b\u70bc\u8eab\u4f53\" % self . name ) self . weight -= 0.5 def eat ( self ): \"\"\"\u5403\u4e1c\u897f\"\"\" print ( \" %s \u662f\u5403\u8d27\uff0c\u5403\u5b8c\u8fd9\u987f\u518d\u51cf\u80a5\" % self . name ) self . weight += 1 xiaoming = Person ( \"\u5c0f\u660e\" , 75 ) xiaoming . run () xiaoming . eat () xiaoming . eat () print ( xiaoming )","title":"02. \u5c0f\u660e\u7231\u8dd1\u6b65"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#21_1","text":"\u9700\u6c42 \u5c0f\u660e \u548c \u5c0f\u7f8e \u90fd\u7231\u8dd1\u6b65 \u5c0f\u660e \u4f53\u91cd 75.0 \u516c\u65a4 \u5c0f\u7f8e \u4f53\u91cd 45.0 \u516c\u65a4 \u6bcf\u6b21 \u8dd1\u6b65 \u90fd\u4f1a\u51cf\u5c11 0.5 \u516c\u65a4 \u6bcf\u6b21 \u5403\u4e1c\u897f \u90fd\u4f1a\u589e\u52a0 1 \u516c\u65a4 \u63d0\u793a \u5728 \u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8 \uff0c\u662f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 \u7684 \u540c\u4e00\u4e2a\u7c7b \u521b\u5efa\u7684 \u591a\u4e2a\u5bf9\u8c61 \u4e4b\u95f4\uff0c \u5c5e\u6027 \u4e92\u4e0d\u5e72\u6270\uff01","title":"2.1 \u5c0f\u660e\u7231\u8dd1\u6b65\u6269\u5c55 \u2014\u2014 \u5c0f\u7f8e\u4e5f\u7231\u8dd1\u6b65"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#03_1","text":"\u9700\u6c42 \u623f\u5b50(House) \u6709 \u6237\u578b \u3001 \u603b\u9762\u79ef \u548c \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u65b0\u623f\u5b50\u6ca1\u6709\u4efb\u4f55\u7684\u5bb6\u5177 \u5bb6\u5177(HouseItem) \u6709 \u540d\u5b57 \u548c \u5360\u5730\u9762\u79ef \uff0c\u5176\u4e2d \u5e2d\u68a6\u601d(bed) \u5360\u5730 4 \u5e73\u7c73 \u8863\u67dc(chest) \u5360\u5730 2 \u5e73\u7c73 \u9910\u684c(table) \u5360\u5730 1.5 \u5e73\u7c73 \u5c06\u4ee5\u4e0a\u4e09\u4ef6 \u5bb6\u5177 \u6dfb\u52a0 \u5230 \u623f\u5b50 \u4e2d \u6253\u5370\u623f\u5b50\u65f6\uff0c\u8981\u6c42\u8f93\u51fa\uff1a \u6237\u578b \u3001 \u603b\u9762\u79ef \u3001 \u5269\u4f59\u9762\u79ef \u3001 \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u5269\u4f59\u9762\u79ef \u5728\u521b\u5efa\u623f\u5b50\u5bf9\u8c61\u65f6\uff0c\u5b9a\u4e49\u4e00\u4e2a \u5269\u4f59\u9762\u79ef\u7684\u5c5e\u6027 \uff0c \u521d\u59cb\u503c\u548c\u603b\u9762\u79ef\u76f8\u7b49 \u5f53\u8c03\u7528 add_item \u65b9\u6cd5\uff0c\u5411\u623f\u95f4 \u6dfb\u52a0\u5bb6\u5177 \u65f6\uff0c\u8ba9 \u5269\u4f59\u9762\u79ef -= \u5bb6\u5177\u9762\u79ef \u601d\u8003 \uff1a\u5e94\u8be5\u5148\u5f00\u53d1\u54ea\u4e00\u4e2a\u7c7b\uff1f \u7b54\u6848 \u2014\u2014 \u5bb6\u5177\u7c7b \u5bb6\u5177\u7b80\u5355 \u623f\u5b50\u8981\u4f7f\u7528\u5230\u5bb6\u5177\uff0c \u88ab\u4f7f\u7528\u7684\u7c7b \uff0c\u901a\u5e38\u5e94\u8be5\u5148\u5f00\u53d1","title":"03. \u6446\u653e\u5bb6\u5177"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#31_2","text":"class HouseItem : def __init__ ( self , name , area ): \"\"\" :param name: \u5bb6\u5177\u540d\u79f0 :param area: \u5360\u5730\u9762\u79ef \"\"\" self . name = name self . area = area def __str__ ( self ): return \"[ %s ] \u5360\u5730\u9762\u79ef %.2f \" % ( self . name , self . area ) # 1. \u521b\u5efa\u5bb6\u5177 bed = HouseItem ( \"\u5e2d\u68a6\u601d\" , 4 ) chest = HouseItem ( \"\u8863\u67dc\" , 2 ) table = HouseItem ( \"\u9910\u684c\" , 1.5 ) print ( bed ) print ( chest ) print ( table ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u5bb6\u5177\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u548c __str__ \u4e24\u4e2a\u5185\u7f6e\u65b9\u6cd5 \u4f7f\u7528 \u5bb6\u5177\u7c7b \u521b\u5efa\u4e86 \u4e09\u4e2a\u5bb6\u5177\u5bf9\u8c61 \uff0c\u5e76\u4e14 \u8f93\u51fa\u5bb6\u5177\u4fe1\u606f","title":"3.1 \u521b\u5efa\u5bb6\u5177"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#32_1","text":"class House : def __init__ ( self , house_type , area ): \"\"\" :param house_type: \u6237\u578b :param area: \u603b\u9762\u79ef \"\"\" self . house_type = house_type self . area = area # \u5269\u4f59\u9762\u79ef\u9ed8\u8ba4\u548c\u603b\u9762\u79ef\u4e00\u81f4 self . free_area = area # \u9ed8\u8ba4\u6ca1\u6709\u4efb\u4f55\u7684\u5bb6\u5177 self . item_list = [] def __str__ ( self ): # Python \u80fd\u591f\u81ea\u52a8\u7684\u5c06\u4e00\u5bf9\u62ec\u53f7\u5185\u90e8\u7684\u4ee3\u7801\u8fde\u63a5\u5728\u4e00\u8d77 return ( \"\u6237\u578b\uff1a %s \\n \u603b\u9762\u79ef\uff1a %.2f [\u5269\u4f59\uff1a %.2f ] \\n \u5bb6\u5177\uff1a %s \" % ( self . house_type , self . area , self . free_area , self . item_list )) def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) ... # 2. \u521b\u5efa\u623f\u5b50\u5bf9\u8c61 my_home = House ( \"\u4e24\u5ba4\u4e00\u5385\" , 60 ) my_home . add_item ( bed ) my_home . add_item ( chest ) my_home . add_item ( table ) print ( my_home ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u623f\u5b50\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u548c __str__ \u4e24\u4e2a\u5185\u7f6e\u65b9\u6cd5 \u51c6\u5907\u4e86\u4e00\u4e2a add_item \u65b9\u6cd5 \u51c6\u5907\u6dfb\u52a0\u5bb6\u5177 \u4f7f\u7528 \u623f\u5b50\u7c7b \u521b\u5efa\u4e86 \u4e00\u4e2a\u623f\u5b50\u5bf9\u8c61 \u8ba9 \u623f\u5b50\u5bf9\u8c61 \u8c03\u7528\u4e86\u4e09\u6b21 add_item \u65b9\u6cd5\uff0c\u5c06 \u4e09\u4ef6\u5bb6\u5177 \u4ee5\u5b9e\u53c2\u4f20\u9012\u5230 add_item \u5185\u90e8","title":"3.2 \u521b\u5efa\u623f\u95f4"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#33","text":"\u9700\u6c42 1> \u5224\u65ad \u5bb6\u5177\u7684\u9762\u79ef \u662f\u5426 \u8d85\u8fc7\u5269\u4f59\u9762\u79ef \uff0c \u5982\u679c\u8d85\u8fc7 \uff0c\u63d0\u793a\u4e0d\u80fd\u6dfb\u52a0\u8fd9\u4ef6\u5bb6\u5177 2> \u5c06 \u5bb6\u5177\u7684\u540d\u79f0 \u8ffd\u52a0\u5230 \u5bb6\u5177\u540d\u79f0\u5217\u8868 \u4e2d 3> \u7528 \u623f\u5b50\u7684\u5269\u4f59\u9762\u79ef - \u5bb6\u5177\u9762\u79ef def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) # 1. \u5224\u65ad\u5bb6\u5177\u9762\u79ef\u662f\u5426\u5927\u4e8e\u5269\u4f59\u9762\u79ef if item . area > self . free_area : print ( \" %s \u7684\u9762\u79ef\u592a\u5927\uff0c\u4e0d\u80fd\u6dfb\u52a0\u5230\u623f\u5b50\u4e2d\" % item . name ) return # 2. \u5c06\u5bb6\u5177\u7684\u540d\u79f0\u8ffd\u52a0\u5230\u540d\u79f0\u5217\u8868\u4e2d self . item_list . append ( item . name ) # 3. \u8ba1\u7b97\u5269\u4f59\u9762\u79ef self . free_area -= item . area \u6700\u540e\u7684\u7a0b\u5e8f class HouseItem : def __init__ ( self , name , area ): self . name = name self . area = area def __str__ ( self ): return \"[ %s ] \u5360\u5730 %.2f \" % ( self . name , self . area ) class House : def __init__ ( self , house_type , area ): self . house_type = house_type self . area = area # \u5269\u4f59\u9762\u79ef self . free_area = area # \u5bb6\u5177\u540d\u79f0\u5217\u8868 self . item_list = [] def __str__ ( self ): # Python \u80fd\u591f\u81ea\u52a8\u7684\u5c06\u4e00\u5bf9\u62ec\u53f7\u5185\u90e8\u7684\u4ee3\u7801\u8fde\u63a5\u5728\u4e00\u8d77 return ( \"\u6237\u578b\uff1a %s \\n \u603b\u9762\u79ef\uff1a %.2f [\u5269\u4f59\uff1a %.2f ] \\n \u5bb6\u5177\uff1a %s \" % ( self . house_type , self . area , self . free_area , self . item_list )) def add_item ( self , item ): print ( \"\u8981\u6dfb\u52a0 %s \" % item ) # 1. \u5224\u65ad\u5bb6\u5177\u7684\u9762\u79ef if item . area > self . free_area : print ( \" %s \u7684\u9762\u79ef\u592a\u5927\u4e86\uff0c\u65e0\u6cd5\u6dfb\u52a0\" % item . name ) return # 2. \u5c06\u5bb6\u5177\u7684\u540d\u79f0\u6dfb\u52a0\u5230\u5217\u8868\u4e2d self . item_list . append ( item . name ) # 3. \u8ba1\u7b97\u5269\u4f59\u9762\u79ef self . free_area -= item . area # 1. \u521b\u5efa\u5bb6\u5177 bed = HouseItem ( \"\u5e2d\u68a6\u601d\" , 40 ) chest = HouseItem ( \"\u8863\u67dc\" , 2 ) table = HouseItem ( \"\u9910\u684c\" , 20 ) print ( bed ) print ( chest ) print ( table ) # 2. \u521b\u5efa\u623f\u5b50\u5bf9\u8c61 my_home = House ( \"\u4e24\u5ba4\u4e00\u5385\" , 60 ) my_home . add_item ( bed ) my_home . add_item ( chest ) my_home . add_item ( table ) print ( my_home )","title":"3.3 \u6dfb\u52a0\u5bb6\u5177"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#34","text":"\u4e3b\u7a0b\u5e8f\u53ea\u8d1f\u8d23\u521b\u5efa \u623f\u5b50 \u5bf9\u8c61\u548c \u5bb6\u5177 \u5bf9\u8c61 \u8ba9 \u623f\u5b50 \u5bf9\u8c61\u8c03\u7528 add_item \u65b9\u6cd5 **\u5c06\u5bb6\u5177\u6dfb\u52a0\u5230\u623f\u5b50**\u4e2d \u9762\u79ef\u8ba1\u7b97 \u3001 \u5269\u4f59\u9762\u79ef \u3001 \u5bb6\u5177\u5217\u8868 \u7b49\u5904\u7406\u90fd\u88ab \u5c01\u88c5 \u5230 \u623f\u5b50\u7c7b\u7684\u5185\u90e8","title":"3.4 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#ii","text":"","title":"\u9762\u5411\u5bf9\u8c61\u5c01\u88c5\u6848\u4f8b II"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_10","text":"","title":"\u54ea\u4e2a\u7c7b\u5148\u88ab\u4f7f\u7528\u5c31\u5148\u5b9a\u4e49\u54ea\u4e2a\u7c7b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_11","text":"\u58eb\u5175\u7a81\u51fb\u6848\u4f8b \u8eab\u4efd\u8fd0\u7b97\u7b26 \u5c01\u88c5 \u5c01\u88c5 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u5927\u7279\u70b9 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684 \u7b2c\u4e00\u6b65 \u2014\u2014 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5916\u754c \u4f7f\u7528 \u7c7b \u521b\u5efa \u5bf9\u8c61 \uff0c\u7136\u540e \u8ba9\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5 \u5bf9\u8c61\u65b9\u6cd5\u7684\u7ec6\u8282 \u90fd\u88ab \u5c01\u88c5 \u5728 \u7c7b\u7684\u5185\u90e8 \u4e00\u4e2a\u5bf9\u8c61\u7684 \u5c5e\u6027 \u53ef\u4ee5\u662f \u53e6\u5916\u4e00\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#01_1","text":"\u9700\u6c42 \u58eb\u5175 \u8bb8\u4e09\u591a \u6709\u4e00\u628a AK47 \u58eb\u5175 \u53ef\u4ee5 \u5f00\u706b \u67aa \u80fd\u591f \u53d1\u5c04 \u5b50\u5f39 \u67aa \u88c5\u586b \u88c5\u586b\u5b50\u5f39 \u2014\u2014 \u589e\u52a0\u5b50\u5f39\u6570\u91cf","title":"01. \u58eb\u5175\u7a81\u51fb"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#11_2","text":"shoot \u65b9\u6cd5\u9700\u6c42 1> \u5224\u65ad\u662f\u5426\u6709\u5b50\u5f39\uff0c\u6ca1\u6709\u5b50\u5f39\u65e0\u6cd5\u5c04\u51fb 2> \u4f7f\u7528 print \u63d0\u793a\u5c04\u51fb\uff0c\u5e76\u4e14\u8f93\u51fa\u5b50\u5f39\u6570\u91cf class Gun : def __init__ ( self , model ): # \u67aa\u7684\u578b\u53f7 self . model = model # \u5b50\u5f39\u6570\u91cf self . bullet_count = 0 def add_bullet ( self , count ): self . bullet_count += count def shoot ( self ): # \u5224\u65ad\u662f\u5426\u8fd8\u6709\u5b50\u5f39 if self . bullet_count <= 0 : print ( \"\u6ca1\u6709\u5b50\u5f39\u4e86...\" ) return # \u53d1\u5c04\u4e00\u9897\u5b50\u5f39 self . bullet_count -= 1 print ( \" %s \u53d1\u5c04\u5b50\u5f39[ %d ]...\" % ( self . model , self . bullet_count )) # \u521b\u5efa\u67aa\u5bf9\u8c61 ak47 = Gun ( \"ak47\" ) ak47 . add_bullet ( 50 ) ak47 . shoot ()","title":"1.1 \u5f00\u53d1\u67aa\u7c7b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#12_2","text":"\u5047\u8bbe\uff1a\u6bcf\u4e00\u4e2a\u65b0\u5175 \u90fd \u6ca1\u6709\u67aa \u5b9a\u4e49\u6ca1\u6709\u521d\u59cb\u503c\u7684\u5c5e\u6027 \u5728\u5b9a\u4e49\u5c5e\u6027\u65f6\uff0c\u5982\u679c \u4e0d\u77e5\u9053\u8bbe\u7f6e\u4ec0\u4e48\u521d\u59cb\u503c \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a None None \u5173\u952e\u5b57 \u8868\u793a \u4ec0\u4e48\u90fd\u6ca1\u6709 \u8868\u793a\u4e00\u4e2a \u7a7a\u5bf9\u8c61 \uff0c \u6ca1\u6709\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u91cf \u53ef\u4ee5\u5c06 None \u8d4b\u503c\u7ed9\u4efb\u4f55\u4e00\u4e2a\u53d8\u91cf fire \u65b9\u6cd5\u9700\u6c42 1> \u5224\u65ad\u662f\u5426\u6709\u67aa\uff0c\u6ca1\u6709\u67aa\u6ca1\u6cd5\u51b2\u950b 2> \u558a\u4e00\u58f0\u53e3\u53f7 3> \u88c5\u586b\u5b50\u5f39 4> \u5c04\u51fb class Soldier : def __init__ ( self , name ): # \u59d3\u540d self . name = name # \u67aa\uff0c\u58eb\u5175\u521d\u59cb\u6ca1\u6709\u67aa None \u5173\u952e\u5b57\u8868\u793a\u4ec0\u4e48\u90fd\u6ca1\u6709 self . gun = None def fire ( self ): # 1. \u5224\u65ad\u58eb\u5175\u662f\u5426\u6709\u67aa if self . gun is None : print ( \"[ %s ] \u8fd8\u6ca1\u6709\u67aa...\" % self . name ) return # 2. \u9ad8\u558a\u53e3\u53f7 print ( \"\u51b2\u554a...[ %s ]\" % self . name ) # 3. \u8ba9\u67aa\u88c5\u586b\u5b50\u5f39 self . gun . add_bullet ( 50 ) # 4. \u8ba9\u67aa\u53d1\u5c04\u5b50\u5f39 self . gun . shoot () \u6574\u4e2a\u7684\u7a0b\u5e8f\u4ee3\u7801: class Gun : def __init__ ( self , model ): # 1. \u67aa\u7684\u578b\u53f7 self . model = model # 2. \u5b50\u5f39\u7684\u6570\u91cf self . bullet_count = 0 def add_bullet ( self , count ): self . bullet_count += count def shoot ( self ): # 1. \u5224\u65ad\u5b50\u5f39\u6570\u91cf if self . bullet_count <= 0 : print ( \"[ %s ] \u6ca1\u6709\u5b50\u5f39\u4e86...\" % self . model ) return # 2. \u53d1\u5c04\u5b50\u5f39\uff0c-1 self . bullet_count -= 1 # 3. \u63d0\u793a\u53d1\u5c04\u4fe1\u606f print ( \"[ %s ] \u7a81\u7a81\u7a81... [ %d ]\" % ( self . model , self . bullet_count )) class Soldier : def __init__ ( self , name ): # 1. \u59d3\u540d self . name = name # 2. \u67aa - \u65b0\u5175\u6ca1\u6709\u67aa self . gun = None def fire ( self ): # 1. \u5224\u65ad\u58eb\u5175\u662f\u5426\u6709\u67aa # if self.gun == None: if self . gun is None : print ( \"[ %s ] \u8fd8\u6ca1\u6709\u67aa...\" % self . name ) return # 2. \u9ad8\u558a\u53e3\u53f7 print ( \"\u51b2\u554a...[ %s ]\" % self . name ) # 3. \u8ba9\u67aa\u88c5\u586b\u5b50\u5f39 self . gun . add_bullet ( 50 ) # 4. \u8ba9\u67aa\u53d1\u5c04\u5b50\u5f39 self . gun . shoot () # 1. \u521b\u5efa\u67aa\u5bf9\u8c61 ak47 = Gun ( \"AK47\" ) # 2. \u521b\u5efa\u8bb8\u4e09\u591a xusanduo = Soldier ( \"\u8bb8\u4e09\u591a\" ) xusanduo . gun = ak47 #\u5c06\u5bf9\u8c61\u4f20\u9012\u7ed9\u8fd9\u4e2aself.gun\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u51fd\u6570\u65b9\u6cd5 xusanduo . fire () print ( xusanduo . gun ) \u5c0f\u7ed3 \u521b\u5efa\u4e86\u4e00\u4e2a \u58eb\u5175\u7c7b \uff0c\u4f7f\u7528\u5230 __init__ \u5185\u7f6e\u65b9\u6cd5 \u5728\u5b9a\u4e49\u5c5e\u6027\u65f6\uff0c\u5982\u679c \u4e0d\u77e5\u9053\u8bbe\u7f6e\u4ec0\u4e48\u521d\u59cb\u503c \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a None \u5728 \u5c01\u88c5\u7684 \u65b9\u6cd5\u5185\u90e8\uff0c\u8fd8\u53ef\u4ee5\u8ba9 \u81ea\u5df1\u7684 \u4f7f\u7528\u5176\u4ed6\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u5c5e\u6027 \u8c03\u7528\u5df2\u7ecf \u5c01\u88c5\u597d\u7684\u65b9\u6cd5","title":"1.2 \u5f00\u53d1\u58eb\u5175\u7c7b"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#02_3","text":"\u8eab\u4efd\u8fd0\u7b97\u7b26\u7528\u4e8e \u6bd4\u8f83 \u4e24\u4e2a\u5bf9\u8c61\u7684 \u5185\u5b58\u5730\u5740 \u662f\u5426\u4e00\u81f4 \u2014\u2014 \u662f\u5426\u662f\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528 \u5728 Python \u4e2d\u9488\u5bf9 None \u6bd4\u8f83\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 is \u5224\u65ad \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b is is \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61 x is y\uff0c\u7c7b\u4f3c id(x) == id(y) is not is not \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u4e0d\u540c\u5bf9\u8c61 x is not y\uff0c\u7c7b\u4f3c id(a) != id(b)","title":"02. \u8eab\u4efd\u8fd0\u7b97\u7b26"},{"location":"python\u5b66\u4e60/008python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#is","text":"is \u7528\u4e8e\u5224\u65ad \u4e24\u4e2a\u53d8\u91cf \u5f15\u7528\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a == \u7528\u4e8e\u5224\u65ad \u5f15\u7528\u53d8\u91cf\u7684\u503c \u662f\u5426\u76f8\u7b49 >>> a = [ 1 , 2 , 3 ] >>> b = [ 1 , 2 , 3 ] >>> b is a False >>> b == a True","title":"is \u4e0e == \u533a\u522b\uff1a"},{"location":"python\u5b66\u4e60/009python\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5/","text":"\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5 \u00b6 01. \u5e94\u7528\u573a\u666f\u53ca\u5b9a\u4e49\u65b9\u5f0f \u00b6 \u5e94\u7528\u573a\u666f \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c \u5bf9\u8c61 \u7684 \u67d0\u4e9b\u5c5e\u6027\u6216\u65b9\u6cd5 \u53ef\u80fd\u53ea\u5e0c\u671b \u5728\u5bf9\u8c61\u7684\u5185\u90e8\u88ab\u4f7f\u7528 \uff0c\u800c \u4e0d\u5e0c\u671b\u5728\u5916\u90e8\u88ab\u8bbf\u95ee\u5230 \u79c1\u6709\u5c5e\u6027 \u5c31\u662f \u5bf9\u8c61 \u4e0d\u5e0c\u671b\u516c\u5f00\u7684 \u5c5e\u6027 \u79c1\u6709\u65b9\u6cd5 \u5c31\u662f \u5bf9\u8c61 \u4e0d\u5e0c\u671b\u516c\u5f00\u7684 \u65b9\u6cd5 \u5b9a\u4e49\u65b9\u5f0f \u5728 \u5b9a\u4e49\u5c5e\u6027\u6216\u65b9\u6cd5\u65f6 \uff0c\u5728 \u5c5e\u6027\u540d\u6216\u8005\u65b9\u6cd5\u540d\u524d \u589e\u52a0 \u4e24\u4e2a\u4e0b\u5212\u7ebf \uff0c\u5b9a\u4e49\u7684\u5c31\u662f \u79c1\u6709 \u5c5e\u6027\u6216\u65b9\u6cd5 class Women : def __init__ ( self , name ): self . name = name # \u4e0d\u8981\u95ee\u5973\u751f\u7684\u5e74\u9f84 self . __age = 18 def __secret ( self ): print ( \"\u6211\u7684\u5e74\u9f84\u662f %d \" % self . __age ) xiaofang = Women ( \"\u5c0f\u82b3\" ) # \u79c1\u6709\u5c5e\u6027\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee # print(xiaofang.__age) # \u79c1\u6709\u65b9\u6cd5\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528 # xiaofang.__secret() * \u4f46\u662f\u51fd\u6570\u7684\u5185\u90e8\u662f\u53ef\u4ee5\u8fdb\u884c\u8bbf\u95ee\u7684: \u6bd4\u5982: class Women : def __init__ ( self , name ): self . name = name self . __age = 18 def secret ( self ): # \u5728\u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8\uff0c\u662f\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027\u7684 print ( \" %s \u7684\u5e74\u9f84\u662f %d \" % ( self . name , self . __age )) xiaofang = Women ( \"\u5c0f\u82b3\" ) # \u79c1\u6709\u5c5e\u6027\uff0c\u5728\u5916\u754c\u4e0d\u80fd\u591f\u88ab\u76f4\u63a5\u8bbf\u95ee # print(xiaofang.__age) # \u79c1\u6709\u65b9\u6cd5\uff0c\u540c\u6837\u4e0d\u5141\u8bb8\u5728\u5916\u754c\u76f4\u63a5\u8bbf\u95ee # xiaofang.__secret() xiaofang . secret () \u8fd9\u91cc\u7684secret\u51fd\u6570\u8c03\u7528\u4e86\u7c7b\u7684\u5185\u90e8\u7684\u79c1\u6709\u65b9\u6cd5\u662f\u53ef\u4ee5\u6267\u884c\u4f7f\u7528\u7684. 02. \u4f2a\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5\uff08\u79d1\u666e\uff09 \u00b6 \u63d0\u793a\uff1a\u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c \u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \uff0c \u8bbf\u95ee\u5bf9\u8c61\u7684 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 Python \u4e2d\uff0c\u5e76\u6ca1\u6709 \u771f\u6b63\u610f\u4e49 \u7684 \u79c1\u6709 \u5728\u7ed9 \u5c5e\u6027 \u3001 \u65b9\u6cd5 \u547d\u540d\u65f6\uff0c\u5b9e\u9645\u662f\u5bf9 \u540d\u79f0 \u505a\u4e86\u4e00\u4e9b\u7279\u6b8a\u5904\u7406\uff0c\u4f7f\u5f97\u5916\u754c\u65e0\u6cd5\u8bbf\u95ee\u5230 \u5904\u7406\u65b9\u5f0f \uff1a\u5728 \u540d\u79f0 \u524d\u9762\u52a0\u4e0a _\u7c7b\u540d => _\u7c7b\u540d__\u540d\u79f0 # \u79c1\u6709\u5c5e\u6027\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230 print ( xiaofang . _Women__age ) # \u79c1\u6709\u65b9\u6cd5\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528 xiaofang . _Women__secret () \u6267\u884c\u7ed3\u679c: 18 \u5c0f\u82b3 \u7684\u5e74\u9f84\u662f 18","title":"009 python\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/009python\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5/#_1","text":"","title":"\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/009python\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5/#01","text":"\u5e94\u7528\u573a\u666f \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c \u5bf9\u8c61 \u7684 \u67d0\u4e9b\u5c5e\u6027\u6216\u65b9\u6cd5 \u53ef\u80fd\u53ea\u5e0c\u671b \u5728\u5bf9\u8c61\u7684\u5185\u90e8\u88ab\u4f7f\u7528 \uff0c\u800c \u4e0d\u5e0c\u671b\u5728\u5916\u90e8\u88ab\u8bbf\u95ee\u5230 \u79c1\u6709\u5c5e\u6027 \u5c31\u662f \u5bf9\u8c61 \u4e0d\u5e0c\u671b\u516c\u5f00\u7684 \u5c5e\u6027 \u79c1\u6709\u65b9\u6cd5 \u5c31\u662f \u5bf9\u8c61 \u4e0d\u5e0c\u671b\u516c\u5f00\u7684 \u65b9\u6cd5 \u5b9a\u4e49\u65b9\u5f0f \u5728 \u5b9a\u4e49\u5c5e\u6027\u6216\u65b9\u6cd5\u65f6 \uff0c\u5728 \u5c5e\u6027\u540d\u6216\u8005\u65b9\u6cd5\u540d\u524d \u589e\u52a0 \u4e24\u4e2a\u4e0b\u5212\u7ebf \uff0c\u5b9a\u4e49\u7684\u5c31\u662f \u79c1\u6709 \u5c5e\u6027\u6216\u65b9\u6cd5 class Women : def __init__ ( self , name ): self . name = name # \u4e0d\u8981\u95ee\u5973\u751f\u7684\u5e74\u9f84 self . __age = 18 def __secret ( self ): print ( \"\u6211\u7684\u5e74\u9f84\u662f %d \" % self . __age ) xiaofang = Women ( \"\u5c0f\u82b3\" ) # \u79c1\u6709\u5c5e\u6027\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee # print(xiaofang.__age) # \u79c1\u6709\u65b9\u6cd5\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528 # xiaofang.__secret() * \u4f46\u662f\u51fd\u6570\u7684\u5185\u90e8\u662f\u53ef\u4ee5\u8fdb\u884c\u8bbf\u95ee\u7684: \u6bd4\u5982: class Women : def __init__ ( self , name ): self . name = name self . __age = 18 def secret ( self ): # \u5728\u5bf9\u8c61\u7684\u65b9\u6cd5\u5185\u90e8\uff0c\u662f\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027\u7684 print ( \" %s \u7684\u5e74\u9f84\u662f %d \" % ( self . name , self . __age )) xiaofang = Women ( \"\u5c0f\u82b3\" ) # \u79c1\u6709\u5c5e\u6027\uff0c\u5728\u5916\u754c\u4e0d\u80fd\u591f\u88ab\u76f4\u63a5\u8bbf\u95ee # print(xiaofang.__age) # \u79c1\u6709\u65b9\u6cd5\uff0c\u540c\u6837\u4e0d\u5141\u8bb8\u5728\u5916\u754c\u76f4\u63a5\u8bbf\u95ee # xiaofang.__secret() xiaofang . secret () \u8fd9\u91cc\u7684secret\u51fd\u6570\u8c03\u7528\u4e86\u7c7b\u7684\u5185\u90e8\u7684\u79c1\u6709\u65b9\u6cd5\u662f\u53ef\u4ee5\u6267\u884c\u4f7f\u7528\u7684.","title":"01. \u5e94\u7528\u573a\u666f\u53ca\u5b9a\u4e49\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/009python\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5/#02","text":"\u63d0\u793a\uff1a\u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c \u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \uff0c \u8bbf\u95ee\u5bf9\u8c61\u7684 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 Python \u4e2d\uff0c\u5e76\u6ca1\u6709 \u771f\u6b63\u610f\u4e49 \u7684 \u79c1\u6709 \u5728\u7ed9 \u5c5e\u6027 \u3001 \u65b9\u6cd5 \u547d\u540d\u65f6\uff0c\u5b9e\u9645\u662f\u5bf9 \u540d\u79f0 \u505a\u4e86\u4e00\u4e9b\u7279\u6b8a\u5904\u7406\uff0c\u4f7f\u5f97\u5916\u754c\u65e0\u6cd5\u8bbf\u95ee\u5230 \u5904\u7406\u65b9\u5f0f \uff1a\u5728 \u540d\u79f0 \u524d\u9762\u52a0\u4e0a _\u7c7b\u540d => _\u7c7b\u540d__\u540d\u79f0 # \u79c1\u6709\u5c5e\u6027\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230 print ( xiaofang . _Women__age ) # \u79c1\u6709\u65b9\u6cd5\uff0c\u5916\u90e8\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528 xiaofang . _Women__secret () \u6267\u884c\u7ed3\u679c: 18 \u5c0f\u82b3 \u7684\u5e74\u9f84\u662f 18","title":"02. \u4f2a\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5\uff08\u79d1\u666e\uff09"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/","text":"\u7ee7\u627f \u00b6 \u76ee\u6807 \u00b6 \u5355\u7ee7\u627f \u591a\u7ee7\u627f \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u6839\u636e \u804c\u8d23 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u7ee7\u627f \u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528 \uff0c\u76f8\u540c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u91cd\u590d\u7684\u7f16\u5199 \u591a\u6001 \u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u7ed3\u679c\uff0c \u589e\u52a0\u4ee3\u7801\u7684\u7075\u6d3b\u5ea6 01. \u5355\u7ee7\u627f \u00b6 1.1 \u7ee7\u627f\u7684\u6982\u5ff5\u3001\u8bed\u6cd5\u548c\u7279\u70b9 \u00b6 \u7ee7\u627f\u7684\u6982\u5ff5 \uff1a \u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u7684\u6240\u6709 \u65b9\u6cd5 \u548c \u5c5e\u6027 \u4e0d\u4f7f\u7528\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403\" ) def drink ( self ): print ( \"\u559d\" ) def run ( self ): print ( \"\u8dd1\" ) def sleep ( self ): print ( \"\u7761\" ) class Dog : def eat ( self ): print ( \"\u5403\" ) def drink ( self ): print ( \"\u559d\" ) def run ( self ): print ( \"\u8dd1\" ) def sleep ( self ): print ( \"\u7761\" ) def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 - \u72d7\u5bf9\u8c61 wangcai = Dog () wangcai . eat () wangcai . drink () wangcai . run () wangcai . sleep () wangcai . bark () * \u592a\u9ebb\u70e6\u4e86,\u4ee3\u7801\u4e25\u91cd\u7684\u5197\u4f59 \u4f7f\u7528\u7ee7\u627f \u00b6 1) \u7ee7\u627f\u7684\u8bed\u6cd5 \u00b6 class \u7c7b\u540d(\u7236\u7c7b\u540d): pass \u5b50\u7c7b \u7ee7\u627f\u81ea \u7236\u7c7b \uff0c\u53ef\u4ee5\u76f4\u63a5 \u4eab\u53d7 \u7236\u7c7b\u4e2d\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u5f00\u53d1 \u5b50\u7c7b \u4e2d\u5e94\u8be5\u6839\u636e \u804c\u8d23 \uff0c\u5c01\u88c5 \u5b50\u7c7b\u7279\u6709\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5 \u4f7f\u7528\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): # \u5b50\u7c7b\u62e5\u6709\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 # def eat(self): # print(\"\u5403\") # # def drink(self): # print(\"\u559d\") # # def run(self): # print(\"\u8dd1\") # # def sleep(self): # print(\"\u7761\") def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 - \u72d7\u5bf9\u8c61 wangcai = Dog () wangcai . eat () wangcai . drink () wangcai . run () wangcai . sleep () wangcai . bark () 2) \u4e13\u4e1a\u672f\u8bed \u00b6 Dog \u7c7b\u662f Animal \u7c7b\u7684**\u5b50\u7c7b**\uff0c Animal \u7c7b\u662f Dog \u7c7b\u7684**\u7236\u7c7b**\uff0c Dog \u7c7b\u4ece Animal \u7c7b**\u7ee7\u627f** Dog \u7c7b\u662f Animal \u7c7b\u7684**\u6d3e\u751f\u7c7b**\uff0c Animal \u7c7b\u662f Dog \u7c7b\u7684**\u57fa\u7c7b**\uff0c Dog \u7c7b\u4ece Animal \u7c7b**\u6d3e\u751f** 3) \u7ee7\u627f\u7684\u4f20\u9012\u6027 \u00b6 C \u7c7b\u4ece B \u7c7b\u7ee7\u627f\uff0c B \u7c7b\u53c8\u4ece A \u7c7b\u7ee7\u627f \u90a3\u4e48 C \u7c7b\u5c31\u5177\u6709 B \u7c7b\u548c A \u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 \u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u4ee5\u53ca \u7236\u7c7b\u7684\u7236\u7c7b \u4e2d\u5c01\u88c5\u7684\u6240\u6709 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u591a\u6b21\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) # \u521b\u5efa\u4e00\u4e2a\u54ee\u5929\u72ac\u7684\u5bf9\u8c61 xtq = XiaoTianQuan () xtq . fly () xtq . bark () xtq . eat () \u63d0\u95ee \u54ee\u5929\u72ac \u80fd\u591f\u8c03\u7528 Cat \u7c7b\u4e2d\u5b9a\u4e49\u7684 catch \u65b9\u6cd5\u5417\uff1f \u7b54\u6848 \u4e0d\u80fd \uff0c\u56e0\u4e3a \u54ee\u5929\u72ac \u548c Cat \u4e4b\u95f4\u6ca1\u6709 \u7ee7\u627f \u5173\u7cfb \u80fd\u5426\u7ee7\u627fcat\u7c7b\u4e2d\u7684\u65b9\u6cd5: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) class Cat ( Animal ): def catch ( self ): print ( \"\u6293\u8001\u9f20\" ) # \u521b\u5efa\u4e00\u4e2a\u54ee\u5929\u72ac\u7684\u5bf9\u8c61 xtq = XiaoTianQuan () xtq . fly () xtq . bark () xtq . eat () xtq . catch () \u6267\u884c\u7ed3\u679c: AttributeError : 'XiaoTianQuan' object has no attribute 'catch' 1.2 \u65b9\u6cd5\u7684\u91cd\u5199 \u00b6 \u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u7684\u6240\u6709 \u65b9\u6cd5 \u548c \u5c5e\u6027 \u5b50\u7c7b \u7ee7\u627f\u81ea \u7236\u7c7b \uff0c\u53ef\u4ee5\u76f4\u63a5 \u4eab\u53d7 \u7236\u7c7b\u4e2d\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u5f00\u53d1 \u5e94\u7528\u573a\u666f \u5f53 \u7236\u7c7b \u7684\u65b9\u6cd5\u5b9e\u73b0\u4e0d\u80fd\u6ee1\u8db3\u5b50\u7c7b\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u5bf9\u65b9\u6cd5\u8fdb\u884c \u91cd\u5199(override) \u91cd\u5199 \u7236\u7c7b\u65b9\u6cd5\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u8986\u76d6 \u7236\u7c7b\u7684\u65b9\u6cd5 \u5bf9\u7236\u7c7b\u65b9\u6cd5\u8fdb\u884c \u6269\u5c55 1) \u8986\u76d6\u7236\u7c7b\u7684\u65b9\u6cd5 \u00b6 \u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u548c \u5b50\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \uff0c \u5b8c\u5168\u4e0d\u540c \u5c31\u53ef\u4ee5\u4f7f\u7528 \u8986\u76d6 \u7684\u65b9\u5f0f\uff0c \u5728\u5b50\u7c7b\u4e2d \u91cd\u65b0\u7f16\u5199 \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728 \u5b50\u7c7b\u4e2d \u5b9a\u4e49\u4e86\u4e00\u4e2a \u548c\u7236\u7c7b\u540c\u540d\u7684\u65b9\u6cd5\u5e76\u4e14\u5b9e\u73b0 \u91cd\u5199\u4e4b\u540e\uff0c\u5728\u8fd0\u884c\u65f6\uff0c \u53ea\u4f1a\u8c03\u7528 \u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u518d\u4f1a\u8c03\u7528 \u7236\u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5 \u4f8b\u5982: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) def bark ( self ): print ( \"\u53eb\u5f97\u8ddf\u795e\u4e00\u6837...\" ) xtq = XiaoTianQuan () # \u5982\u679c\u5b50\u7c7b\u4e2d\uff0c\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5 # \u5728\u4f7f\u7528\u5b50\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5 xtq . bark () 2) \u5bf9\u7236\u7c7b\u65b9\u6cd5\u8fdb\u884c \u6269\u5c55 (\u65e2\u6709\u5b50\u7c7b\u7279\u6b8a\u7684\u65b9\u6cd5,\u53c8\u6709\u7236\u7c7b\u7b80\u5355\u7684\u672c\u8d28) \u00b6 \u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c \u5b50\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u4e2d \u5305\u542b \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u7236\u7c7b\u539f\u672c\u5c01\u88c5\u7684\u65b9\u6cd5\u5b9e\u73b0 \u662f \u5b50\u7c7b\u65b9\u6cd5\u7684\u4e00\u90e8\u5206 \u5c31\u53ef\u4ee5\u4f7f\u7528 \u6269\u5c55 \u7684\u65b9\u5f0f \u5728\u5b50\u7c7b\u4e2d \u91cd\u5199 \u7236\u7c7b\u7684\u65b9\u6cd5 \u5728\u9700\u8981\u7684\u4f4d\u7f6e\u4f7f\u7528 super().\u7236\u7c7b\u65b9\u6cd5 \u6765\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u7684\u6267\u884c \u4ee3\u7801\u5176\u4ed6\u7684\u4f4d\u7f6e\u9488\u5bf9\u5b50\u7c7b\u7684\u9700\u6c42\uff0c\u7f16\u5199 \u5b50\u7c7b\u7279\u6709\u7684\u4ee3\u7801\u5b9e\u73b0 \u4f8b\u5982: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) def bark ( self ): # 1. \u9488\u5bf9\u5b50\u7c7b\u7279\u6709\u7684\u9700\u6c42\uff0c\u7f16\u5199\u4ee3\u7801 print ( \"\u795e\u4e00\u6837\u7684\u53eb\u5524...\" ) # 2. \u4f7f\u7528 super(). \u8c03\u7528\u539f\u672c\u5728\u7236\u7c7b\u4e2d\u5c01\u88c5\u7684\u65b9\u6cd5 super () . bark () # 3. \u589e\u52a0\u5176\u4ed6\u5b50\u7c7b\u7684\u4ee3\u7801 print ( \"$%^*%^$%^#%$%\" ) xtq = XiaoTianQuan () # \u5982\u679c\u5b50\u7c7b\u4e2d\uff0c\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5 # \u5728\u4f7f\u7528\u5b50\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5 xtq . bark () \u8f93\u51fa\u7ed3\u679c: \u795e\u4e00\u6837\u7684\u53eb\u5524 ... \u6c6a\u6c6a\u53eb \u6c6a\u6c6a\u53eb $ %^*%^ $ %^ #%$% \u5173\u4e8e super \u00b6 \u5728 Python \u4e2d super \u662f\u4e00\u4e2a \u7279\u6b8a\u7684\u7c7b super() \u5c31\u662f\u4f7f\u7528 super \u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61 \u6700\u5e38 \u4f7f\u7528\u7684\u573a\u666f\u5c31\u662f\u5728 \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\u65f6 \uff0c\u8c03\u7528 \u5728\u7236\u7c7b\u4e2d\u5c01\u88c5\u7684\u65b9\u6cd5\u5b9e\u73b0 \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff08\u77e5\u9053\uff09 \u00b6 \u5728 Python 2.x \u65f6\uff0c\u5982\u679c\u9700\u8981\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\uff1a \u7236\u7c7b\u540d . \u65b9\u6cd5 ( self ) \u8fd9\u79cd\u65b9\u5f0f\uff0c\u76ee\u524d\u5728 Python 3.x \u8fd8\u652f\u6301\u8fd9\u79cd\u65b9\u5f0f \u8fd9\u79cd\u65b9\u6cd5 \u4e0d\u63a8\u8350\u4f7f\u7528 \uff0c\u56e0\u4e3a\u4e00\u65e6 \u7236\u7c7b\u53d1\u751f\u53d8\u5316 \uff0c\u65b9\u6cd5\u8c03\u7528\u4f4d\u7f6e\u7684 \u7c7b\u540d \u540c\u6837\u9700\u8981\u4fee\u6539 \u63d0\u793a \u5728\u5f00\u53d1\u65f6\uff0c \u7236\u7c7b\u540d \u548c super() \u4e24\u79cd\u65b9\u5f0f\u4e0d\u8981\u6df7\u7528 \u5982\u679c\u4f7f\u7528 \u5f53\u524d\u5b50\u7c7b\u540d \u8c03\u7528\u65b9\u6cd5\uff0c\u4f1a\u5f62\u6210\u9012\u5f52\u8c03\u7528\uff0c \u51fa\u73b0\u6b7b\u5faa\u73af 1.3 \u7236\u7c7b\u7684 \u79c1\u6709\u5c5e\u6027 \u548c \u79c1\u6709\u65b9\u6cd5 \u00b6 \u5b50\u7c7b\u5bf9\u8c61 \u4e0d\u80fd \u5728\u81ea\u5df1\u7684\u65b9\u6cd5\u5185\u90e8\uff0c \u76f4\u63a5 \u8bbf\u95ee \u7236\u7c7b\u7684 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 \u5b50\u7c7b\u5bf9\u8c61 \u53ef\u4ee5\u901a\u8fc7 \u7236\u7c7b \u7684 \u516c\u6709\u65b9\u6cd5 \u95f4\u63a5 \u8bbf\u95ee\u5230 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 \u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5 \u662f\u5bf9\u8c61\u7684\u9690\u79c1\uff0c\u4e0d\u5bf9\u5916\u516c\u5f00\uff0c \u5916\u754c \u4ee5\u53ca \u5b50\u7c7b \u90fd\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee \u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5 \u901a\u5e38\u7528\u4e8e\u505a\u4e00\u4e9b\u5185\u90e8\u7684\u4e8b\u60c5 \u793a\u4f8b B \u7684\u5bf9\u8c61\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee __num2 \u5c5e\u6027 B \u7684\u5bf9\u8c61\u4e0d\u80fd\u5728 demo \u65b9\u6cd5\u5185\u8bbf\u95ee __num2 \u5c5e\u6027 B \u7684\u5bf9\u8c61\u53ef\u4ee5\u5728 demo \u65b9\u6cd5\u5185\uff0c\u8c03\u7528\u7236\u7c7b\u7684 test \u65b9\u6cd5 \u7236\u7c7b\u7684 test \u65b9\u6cd5\u5185\u90e8\uff0c\u80fd\u591f\u8bbf\u95ee __num2 \u5c5e\u6027\u548c __test \u65b9\u6cd5 \u4f8b: class A : def __init__ ( self ): self . num1 = 100 self . __num2 = 200 def __test ( self ): print ( \"\u79c1\u6709\u65b9\u6cd5 %d %d \" % ( self . num1 , self . __num2 )) class B ( A ): def demo ( self ): # 1. \u5728\u5b50\u7c7b\u7684\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027 # print(\"\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027 %d\" % self.__num2) # 2. \u5728\u5b50\u7c7b\u7684\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u8c03\u7528\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5 # self.__test() pass # \u521b\u5efa\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61 b = B () print ( b ) b . demo () # \u5728\u5916\u754c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027/\u8c03\u7528\u79c1\u6709\u65b9\u6cd5 # print(b.__num2) # b.__test() 02. \u591a\u7ee7\u627f \u00b6 \u6982\u5ff5 \u5b50\u7c7b \u53ef\u4ee5\u62e5\u6709 \u591a\u4e2a\u7236\u7c7b \uff0c\u5e76\u4e14\u5177\u6709 \u6240\u6709\u7236\u7c7b \u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u4f8b\u5982\uff1a \u5b69\u5b50 \u4f1a\u7ee7\u627f\u81ea\u5df1 \u7236\u4eb2 \u548c \u6bcd\u4eb2 \u7684 \u7279\u6027 \u8bed\u6cd5 class \u5b50\u7c7b\u540d(\u7236\u7c7b\u540d1, \u7236\u7c7b\u540d2...) pass \u4f8b: class A : def test ( self ): print ( \"test \u65b9\u6cd5\" ) class B : def demo ( self ): print ( \"demo \u65b9\u6cd5\" ) class C ( A , B ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () \u6267\u884c\u7ed3\u679c: test \u65b9\u6cd5 demo \u65b9\u6cd5 2.1 \u591a\u7ee7\u627f\u7684\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 \u00b6 \u95ee\u9898\u7684\u63d0\u51fa \u5982\u679c \u4e0d\u540c\u7684\u7236\u7c7b \u4e2d\u5b58\u5728 \u540c\u540d\u7684\u65b9\u6cd5 \uff0c \u5b50\u7c7b\u5bf9\u8c61 \u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528 **\u54ea\u4e00\u4e2a\u7236\u7c7b\u4e2d**\u7684\u65b9\u6cd5\u5462\uff1f \u591a\u7ee7\u627f\u4e2d\u62ec\u53f7\u7684\u987a\u5e8f\u4e3aB,A class A : def test ( self ): print ( \"A --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"A --- demo \u65b9\u6cd5\" ) class B : def test ( self ): print ( \"B --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"B --- demo \u65b9\u6cd5\" ) class C ( B , A ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () # \u786e\u5b9aC\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u7684\u987a\u5e8f print ( C . __mro__ ) \u6267\u884c\u7ed3\u679c: B --- test \u65b9\u6cd5 B --- demo \u65b9\u6cd5 ( < class ' __main__ . C '>, <class ' __main__ . B '>, <class ' __main__ . A '>, <class ' object '>) \u591a\u7ee7\u627f\u4e2d\u62ec\u53f7\u7684\u987a\u5e8f\u4e3aA,B class A : def test ( self ): print ( \"A --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"A --- demo \u65b9\u6cd5\" ) class B : def test ( self ): print ( \"B --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"B --- demo \u65b9\u6cd5\" ) class C ( A , B ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () # \u786e\u5b9aC\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u7684\u987a\u5e8f print ( C . __mro__ ) \u6267\u884c\u7ed3\u679c: A --- test \u65b9\u6cd5 A --- demo \u65b9\u6cd5 ( < class ' __main__ . C '>, <class ' __main__ . A '>, <class ' __main__ . B '>, <class ' object '>) \u63d0\u793a\uff1a \u5f00\u53d1\u65f6\uff0c\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u8fd9\u79cd\u5bb9\u6613\u4ea7\u751f\u6df7\u6dc6\u7684\u60c5\u51b5\uff01 \u2014\u2014 \u5982\u679c \u7236\u7c7b\u4e4b\u95f4 \u5b58\u5728 \u540c\u540d\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5 \uff0c\u5e94\u8be5 \u5c3d\u91cf\u907f\u514d \u4f7f\u7528\u591a\u7ee7\u627f Python \u4e2d\u7684 MRO \u2014\u2014 \u65b9\u6cd5\u641c\u7d22\u987a\u5e8f\uff08\u77e5\u9053\uff09 \u00b6 Python \u4e2d\u9488\u5bf9 \u7c7b \u63d0\u4f9b\u4e86\u4e00\u4e2a \u5185\u7f6e\u5c5e\u6027 __mro__ \u53ef\u4ee5\u67e5\u770b \u65b9\u6cd5 \u641c\u7d22\u987a\u5e8f MRO \u662f method resolution order \uff0c\u4e3b\u8981\u7528\u4e8e \u5728\u591a\u7ee7\u627f\u65f6\u5224\u65ad \u65b9\u6cd5\u3001\u5c5e\u6027 \u7684\u8c03\u7528 \u8def\u5f84 print ( C . __mro__ ) \u8f93\u51fa\u7ed3\u679c ( < class ' __main__ . C '>, <class ' __main__ . A '>, <class ' __main__ . B '>, <class ' object '>) \u5728\u641c\u7d22\u65b9\u6cd5\u65f6\uff0c\u662f\u6309\u7167 __mro__ \u7684\u8f93\u51fa\u7ed3\u679c \u4ece\u5de6\u81f3\u53f3 \u7684\u987a\u5e8f\u67e5\u627e\u7684 \u5982\u679c\u5728\u5f53\u524d\u7c7b\u4e2d \u627e\u5230\u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u6267\u884c\uff0c\u4e0d\u518d\u641c\u7d22 \u5982\u679c \u6ca1\u6709\u627e\u5230\uff0c\u5c31\u67e5\u627e\u4e0b\u4e00\u4e2a\u7c7b \u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c \u5982\u679c\u627e\u5230\uff0c\u5c31\u76f4\u63a5\u6267\u884c\uff0c\u4e0d\u518d\u641c\u7d22 \u5982\u679c\u627e\u5230\u6700\u540e\u4e00\u4e2a\u7c7b\uff0c\u8fd8\u6ca1\u6709\u627e\u5230\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u62a5\u9519 2.2 \u65b0\u5f0f\u7c7b\u4e0e\u65e7\u5f0f\uff08\u7ecf\u5178\uff09\u7c7b \u00b6 object \u662f Python \u4e3a\u6240\u6709\u5bf9\u8c61\u63d0\u4f9b\u7684 \u57fa\u7c7b \uff0c\u63d0\u4f9b\u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 dir \u51fd\u6570\u67e5\u770b \u65b0\u5f0f\u7c7b \uff1a\u4ee5 object \u4e3a\u57fa\u7c7b\u7684\u7c7b\uff0c \u63a8\u8350\u4f7f\u7528 \u7ecf\u5178\u7c7b \uff1a\u4e0d\u4ee5 object \u4e3a\u57fa\u7c7b\u7684\u7c7b\uff0c \u4e0d\u63a8\u8350\u4f7f\u7528 \u5728 Python 3.x \u4e2d\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7236\u7c7b\uff0c\u4f1a \u9ed8\u8ba4\u4f7f\u7528 object \u4f5c\u4e3a\u8be5\u7c7b\u7684 \u57fa\u7c7b \u2014\u2014 Python 3.x \u4e2d\u5b9a\u4e49\u7684\u7c7b\u90fd\u662f \u65b0\u5f0f\u7c7b \u5728 Python 2.x \u4e2d\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7236\u7c7b\uff0c\u5219\u4e0d\u4f1a\u4ee5 object \u4f5c\u4e3a \u57fa\u7c7b \u65b0\u5f0f\u7c7b \u548c \u7ecf\u5178\u7c7b \u5728\u591a\u7ee7\u627f\u65f6 \u2014\u2014 \u4f1a\u5f71\u54cd\u5230\u65b9\u6cd5\u7684\u641c\u7d22\u987a\u5e8f \u4e3a\u4e86\u4fdd\u8bc1\u7f16\u5199\u7684\u4ee3\u7801\u80fd\u591f\u540c\u65f6\u5728 Python 2.x \u548c Python 3.x \u8fd0\u884c\uff01 \u4eca\u540e\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c \u5982\u679c\u6ca1\u6709\u7236\u7c7b\uff0c\u5efa\u8bae\u7edf\u4e00\u7ee7\u627f\u81ea object class \u7c7b\u540d( object ): pass","title":"010 python\u7ee7\u627f"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#_1","text":"","title":"\u7ee7\u627f"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#_2","text":"\u5355\u7ee7\u627f \u591a\u7ee7\u627f \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u6839\u636e \u804c\u8d23 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u7ee7\u627f \u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528 \uff0c\u76f8\u540c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u91cd\u590d\u7684\u7f16\u5199 \u591a\u6001 \u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u7ed3\u679c\uff0c \u589e\u52a0\u4ee3\u7801\u7684\u7075\u6d3b\u5ea6","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#01","text":"","title":"01. \u5355\u7ee7\u627f"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#11","text":"\u7ee7\u627f\u7684\u6982\u5ff5 \uff1a \u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u7684\u6240\u6709 \u65b9\u6cd5 \u548c \u5c5e\u6027 \u4e0d\u4f7f\u7528\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403\" ) def drink ( self ): print ( \"\u559d\" ) def run ( self ): print ( \"\u8dd1\" ) def sleep ( self ): print ( \"\u7761\" ) class Dog : def eat ( self ): print ( \"\u5403\" ) def drink ( self ): print ( \"\u559d\" ) def run ( self ): print ( \"\u8dd1\" ) def sleep ( self ): print ( \"\u7761\" ) def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 - \u72d7\u5bf9\u8c61 wangcai = Dog () wangcai . eat () wangcai . drink () wangcai . run () wangcai . sleep () wangcai . bark () * \u592a\u9ebb\u70e6\u4e86,\u4ee3\u7801\u4e25\u91cd\u7684\u5197\u4f59","title":"1.1 \u7ee7\u627f\u7684\u6982\u5ff5\u3001\u8bed\u6cd5\u548c\u7279\u70b9"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#_3","text":"","title":"\u4f7f\u7528\u7ee7\u627f"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#1","text":"class \u7c7b\u540d(\u7236\u7c7b\u540d): pass \u5b50\u7c7b \u7ee7\u627f\u81ea \u7236\u7c7b \uff0c\u53ef\u4ee5\u76f4\u63a5 \u4eab\u53d7 \u7236\u7c7b\u4e2d\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u5f00\u53d1 \u5b50\u7c7b \u4e2d\u5e94\u8be5\u6839\u636e \u804c\u8d23 \uff0c\u5c01\u88c5 \u5b50\u7c7b\u7279\u6709\u7684 \u5c5e\u6027\u548c\u65b9\u6cd5 \u4f7f\u7528\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): # \u5b50\u7c7b\u62e5\u6709\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 # def eat(self): # print(\"\u5403\") # # def drink(self): # print(\"\u559d\") # # def run(self): # print(\"\u8dd1\") # # def sleep(self): # print(\"\u7761\") def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 - \u72d7\u5bf9\u8c61 wangcai = Dog () wangcai . eat () wangcai . drink () wangcai . run () wangcai . sleep () wangcai . bark ()","title":"1) \u7ee7\u627f\u7684\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#2","text":"Dog \u7c7b\u662f Animal \u7c7b\u7684**\u5b50\u7c7b**\uff0c Animal \u7c7b\u662f Dog \u7c7b\u7684**\u7236\u7c7b**\uff0c Dog \u7c7b\u4ece Animal \u7c7b**\u7ee7\u627f** Dog \u7c7b\u662f Animal \u7c7b\u7684**\u6d3e\u751f\u7c7b**\uff0c Animal \u7c7b\u662f Dog \u7c7b\u7684**\u57fa\u7c7b**\uff0c Dog \u7c7b\u4ece Animal \u7c7b**\u6d3e\u751f**","title":"2) \u4e13\u4e1a\u672f\u8bed"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#3","text":"C \u7c7b\u4ece B \u7c7b\u7ee7\u627f\uff0c B \u7c7b\u53c8\u4ece A \u7c7b\u7ee7\u627f \u90a3\u4e48 C \u7c7b\u5c31\u5177\u6709 B \u7c7b\u548c A \u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 \u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u4ee5\u53ca \u7236\u7c7b\u7684\u7236\u7c7b \u4e2d\u5c01\u88c5\u7684\u6240\u6709 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u591a\u6b21\u7ee7\u627f class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) # \u521b\u5efa\u4e00\u4e2a\u54ee\u5929\u72ac\u7684\u5bf9\u8c61 xtq = XiaoTianQuan () xtq . fly () xtq . bark () xtq . eat () \u63d0\u95ee \u54ee\u5929\u72ac \u80fd\u591f\u8c03\u7528 Cat \u7c7b\u4e2d\u5b9a\u4e49\u7684 catch \u65b9\u6cd5\u5417\uff1f \u7b54\u6848 \u4e0d\u80fd \uff0c\u56e0\u4e3a \u54ee\u5929\u72ac \u548c Cat \u4e4b\u95f4\u6ca1\u6709 \u7ee7\u627f \u5173\u7cfb \u80fd\u5426\u7ee7\u627fcat\u7c7b\u4e2d\u7684\u65b9\u6cd5: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) class Cat ( Animal ): def catch ( self ): print ( \"\u6293\u8001\u9f20\" ) # \u521b\u5efa\u4e00\u4e2a\u54ee\u5929\u72ac\u7684\u5bf9\u8c61 xtq = XiaoTianQuan () xtq . fly () xtq . bark () xtq . eat () xtq . catch () \u6267\u884c\u7ed3\u679c: AttributeError : 'XiaoTianQuan' object has no attribute 'catch'","title":"3) \u7ee7\u627f\u7684\u4f20\u9012\u6027"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#12","text":"\u5b50\u7c7b \u62e5\u6709 \u7236\u7c7b \u7684\u6240\u6709 \u65b9\u6cd5 \u548c \u5c5e\u6027 \u5b50\u7c7b \u7ee7\u627f\u81ea \u7236\u7c7b \uff0c\u53ef\u4ee5\u76f4\u63a5 \u4eab\u53d7 \u7236\u7c7b\u4e2d\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u5f00\u53d1 \u5e94\u7528\u573a\u666f \u5f53 \u7236\u7c7b \u7684\u65b9\u6cd5\u5b9e\u73b0\u4e0d\u80fd\u6ee1\u8db3\u5b50\u7c7b\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u5bf9\u65b9\u6cd5\u8fdb\u884c \u91cd\u5199(override) \u91cd\u5199 \u7236\u7c7b\u65b9\u6cd5\u6709\u4e24\u79cd\u60c5\u51b5\uff1a \u8986\u76d6 \u7236\u7c7b\u7684\u65b9\u6cd5 \u5bf9\u7236\u7c7b\u65b9\u6cd5\u8fdb\u884c \u6269\u5c55","title":"1.2 \u65b9\u6cd5\u7684\u91cd\u5199"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#1_1","text":"\u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u548c \u5b50\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \uff0c \u5b8c\u5168\u4e0d\u540c \u5c31\u53ef\u4ee5\u4f7f\u7528 \u8986\u76d6 \u7684\u65b9\u5f0f\uff0c \u5728\u5b50\u7c7b\u4e2d \u91cd\u65b0\u7f16\u5199 \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728 \u5b50\u7c7b\u4e2d \u5b9a\u4e49\u4e86\u4e00\u4e2a \u548c\u7236\u7c7b\u540c\u540d\u7684\u65b9\u6cd5\u5e76\u4e14\u5b9e\u73b0 \u91cd\u5199\u4e4b\u540e\uff0c\u5728\u8fd0\u884c\u65f6\uff0c \u53ea\u4f1a\u8c03\u7528 \u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u518d\u4f1a\u8c03\u7528 \u7236\u7c7b\u5c01\u88c5\u7684\u65b9\u6cd5 \u4f8b\u5982: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) def bark ( self ): print ( \"\u53eb\u5f97\u8ddf\u795e\u4e00\u6837...\" ) xtq = XiaoTianQuan () # \u5982\u679c\u5b50\u7c7b\u4e2d\uff0c\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5 # \u5728\u4f7f\u7528\u5b50\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5 xtq . bark ()","title":"1) \u8986\u76d6\u7236\u7c7b\u7684\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#2_1","text":"\u5982\u679c\u5728\u5f00\u53d1\u4e2d\uff0c \u5b50\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u4e2d \u5305\u542b \u7236\u7c7b\u7684\u65b9\u6cd5\u5b9e\u73b0 \u7236\u7c7b\u539f\u672c\u5c01\u88c5\u7684\u65b9\u6cd5\u5b9e\u73b0 \u662f \u5b50\u7c7b\u65b9\u6cd5\u7684\u4e00\u90e8\u5206 \u5c31\u53ef\u4ee5\u4f7f\u7528 \u6269\u5c55 \u7684\u65b9\u5f0f \u5728\u5b50\u7c7b\u4e2d \u91cd\u5199 \u7236\u7c7b\u7684\u65b9\u6cd5 \u5728\u9700\u8981\u7684\u4f4d\u7f6e\u4f7f\u7528 super().\u7236\u7c7b\u65b9\u6cd5 \u6765\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u7684\u6267\u884c \u4ee3\u7801\u5176\u4ed6\u7684\u4f4d\u7f6e\u9488\u5bf9\u5b50\u7c7b\u7684\u9700\u6c42\uff0c\u7f16\u5199 \u5b50\u7c7b\u7279\u6709\u7684\u4ee3\u7801\u5b9e\u73b0 \u4f8b\u5982: class Animal : def eat ( self ): print ( \"\u5403---\" ) def drink ( self ): print ( \"\u559d---\" ) def run ( self ): print ( \"\u8dd1---\" ) def sleep ( self ): print ( \"\u7761---\" ) class Dog ( Animal ): def bark ( self ): print ( \"\u6c6a\u6c6a\u53eb\" ) class XiaoTianQuan ( Dog ): def fly ( self ): print ( \"\u6211\u4f1a\u98de\" ) def bark ( self ): # 1. \u9488\u5bf9\u5b50\u7c7b\u7279\u6709\u7684\u9700\u6c42\uff0c\u7f16\u5199\u4ee3\u7801 print ( \"\u795e\u4e00\u6837\u7684\u53eb\u5524...\" ) # 2. \u4f7f\u7528 super(). \u8c03\u7528\u539f\u672c\u5728\u7236\u7c7b\u4e2d\u5c01\u88c5\u7684\u65b9\u6cd5 super () . bark () # 3. \u589e\u52a0\u5176\u4ed6\u5b50\u7c7b\u7684\u4ee3\u7801 print ( \"$%^*%^$%^#%$%\" ) xtq = XiaoTianQuan () # \u5982\u679c\u5b50\u7c7b\u4e2d\uff0c\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5 # \u5728\u4f7f\u7528\u5b50\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u5b50\u7c7b\u4e2d\u91cd\u5199\u7684\u65b9\u6cd5 xtq . bark () \u8f93\u51fa\u7ed3\u679c: \u795e\u4e00\u6837\u7684\u53eb\u5524 ... \u6c6a\u6c6a\u53eb \u6c6a\u6c6a\u53eb $ %^*%^ $ %^ #%$%","title":"2) \u5bf9\u7236\u7c7b\u65b9\u6cd5\u8fdb\u884c \u6269\u5c55(\u65e2\u6709\u5b50\u7c7b\u7279\u6b8a\u7684\u65b9\u6cd5,\u53c8\u6709\u7236\u7c7b\u7b80\u5355\u7684\u672c\u8d28)"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#super","text":"\u5728 Python \u4e2d super \u662f\u4e00\u4e2a \u7279\u6b8a\u7684\u7c7b super() \u5c31\u662f\u4f7f\u7528 super \u7c7b\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61 \u6700\u5e38 \u4f7f\u7528\u7684\u573a\u666f\u5c31\u662f\u5728 \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\u65f6 \uff0c\u8c03\u7528 \u5728\u7236\u7c7b\u4e2d\u5c01\u88c5\u7684\u65b9\u6cd5\u5b9e\u73b0","title":"\u5173\u4e8e super"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#_4","text":"\u5728 Python 2.x \u65f6\uff0c\u5982\u679c\u9700\u8981\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\uff1a \u7236\u7c7b\u540d . \u65b9\u6cd5 ( self ) \u8fd9\u79cd\u65b9\u5f0f\uff0c\u76ee\u524d\u5728 Python 3.x \u8fd8\u652f\u6301\u8fd9\u79cd\u65b9\u5f0f \u8fd9\u79cd\u65b9\u6cd5 \u4e0d\u63a8\u8350\u4f7f\u7528 \uff0c\u56e0\u4e3a\u4e00\u65e6 \u7236\u7c7b\u53d1\u751f\u53d8\u5316 \uff0c\u65b9\u6cd5\u8c03\u7528\u4f4d\u7f6e\u7684 \u7c7b\u540d \u540c\u6837\u9700\u8981\u4fee\u6539 \u63d0\u793a \u5728\u5f00\u53d1\u65f6\uff0c \u7236\u7c7b\u540d \u548c super() \u4e24\u79cd\u65b9\u5f0f\u4e0d\u8981\u6df7\u7528 \u5982\u679c\u4f7f\u7528 \u5f53\u524d\u5b50\u7c7b\u540d \u8c03\u7528\u65b9\u6cd5\uff0c\u4f1a\u5f62\u6210\u9012\u5f52\u8c03\u7528\uff0c \u51fa\u73b0\u6b7b\u5faa\u73af","title":"\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#13","text":"\u5b50\u7c7b\u5bf9\u8c61 \u4e0d\u80fd \u5728\u81ea\u5df1\u7684\u65b9\u6cd5\u5185\u90e8\uff0c \u76f4\u63a5 \u8bbf\u95ee \u7236\u7c7b\u7684 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 \u5b50\u7c7b\u5bf9\u8c61 \u53ef\u4ee5\u901a\u8fc7 \u7236\u7c7b \u7684 \u516c\u6709\u65b9\u6cd5 \u95f4\u63a5 \u8bbf\u95ee\u5230 \u79c1\u6709\u5c5e\u6027 \u6216 \u79c1\u6709\u65b9\u6cd5 \u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5 \u662f\u5bf9\u8c61\u7684\u9690\u79c1\uff0c\u4e0d\u5bf9\u5916\u516c\u5f00\uff0c \u5916\u754c \u4ee5\u53ca \u5b50\u7c7b \u90fd\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee \u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5 \u901a\u5e38\u7528\u4e8e\u505a\u4e00\u4e9b\u5185\u90e8\u7684\u4e8b\u60c5 \u793a\u4f8b B \u7684\u5bf9\u8c61\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee __num2 \u5c5e\u6027 B \u7684\u5bf9\u8c61\u4e0d\u80fd\u5728 demo \u65b9\u6cd5\u5185\u8bbf\u95ee __num2 \u5c5e\u6027 B \u7684\u5bf9\u8c61\u53ef\u4ee5\u5728 demo \u65b9\u6cd5\u5185\uff0c\u8c03\u7528\u7236\u7c7b\u7684 test \u65b9\u6cd5 \u7236\u7c7b\u7684 test \u65b9\u6cd5\u5185\u90e8\uff0c\u80fd\u591f\u8bbf\u95ee __num2 \u5c5e\u6027\u548c __test \u65b9\u6cd5 \u4f8b: class A : def __init__ ( self ): self . num1 = 100 self . __num2 = 200 def __test ( self ): print ( \"\u79c1\u6709\u65b9\u6cd5 %d %d \" % ( self . num1 , self . __num2 )) class B ( A ): def demo ( self ): # 1. \u5728\u5b50\u7c7b\u7684\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027 # print(\"\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027 %d\" % self.__num2) # 2. \u5728\u5b50\u7c7b\u7684\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u8c03\u7528\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5 # self.__test() pass # \u521b\u5efa\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61 b = B () print ( b ) b . demo () # \u5728\u5916\u754c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027/\u8c03\u7528\u79c1\u6709\u65b9\u6cd5 # print(b.__num2) # b.__test()","title":"1.3 \u7236\u7c7b\u7684 \u79c1\u6709\u5c5e\u6027 \u548c \u79c1\u6709\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#02","text":"\u6982\u5ff5 \u5b50\u7c7b \u53ef\u4ee5\u62e5\u6709 \u591a\u4e2a\u7236\u7c7b \uff0c\u5e76\u4e14\u5177\u6709 \u6240\u6709\u7236\u7c7b \u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u4f8b\u5982\uff1a \u5b69\u5b50 \u4f1a\u7ee7\u627f\u81ea\u5df1 \u7236\u4eb2 \u548c \u6bcd\u4eb2 \u7684 \u7279\u6027 \u8bed\u6cd5 class \u5b50\u7c7b\u540d(\u7236\u7c7b\u540d1, \u7236\u7c7b\u540d2...) pass \u4f8b: class A : def test ( self ): print ( \"test \u65b9\u6cd5\" ) class B : def demo ( self ): print ( \"demo \u65b9\u6cd5\" ) class C ( A , B ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () \u6267\u884c\u7ed3\u679c: test \u65b9\u6cd5 demo \u65b9\u6cd5","title":"02. \u591a\u7ee7\u627f"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#21","text":"\u95ee\u9898\u7684\u63d0\u51fa \u5982\u679c \u4e0d\u540c\u7684\u7236\u7c7b \u4e2d\u5b58\u5728 \u540c\u540d\u7684\u65b9\u6cd5 \uff0c \u5b50\u7c7b\u5bf9\u8c61 \u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528 **\u54ea\u4e00\u4e2a\u7236\u7c7b\u4e2d**\u7684\u65b9\u6cd5\u5462\uff1f \u591a\u7ee7\u627f\u4e2d\u62ec\u53f7\u7684\u987a\u5e8f\u4e3aB,A class A : def test ( self ): print ( \"A --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"A --- demo \u65b9\u6cd5\" ) class B : def test ( self ): print ( \"B --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"B --- demo \u65b9\u6cd5\" ) class C ( B , A ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () # \u786e\u5b9aC\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u7684\u987a\u5e8f print ( C . __mro__ ) \u6267\u884c\u7ed3\u679c: B --- test \u65b9\u6cd5 B --- demo \u65b9\u6cd5 ( < class ' __main__ . C '>, <class ' __main__ . B '>, <class ' __main__ . A '>, <class ' object '>) \u591a\u7ee7\u627f\u4e2d\u62ec\u53f7\u7684\u987a\u5e8f\u4e3aA,B class A : def test ( self ): print ( \"A --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"A --- demo \u65b9\u6cd5\" ) class B : def test ( self ): print ( \"B --- test \u65b9\u6cd5\" ) def demo ( self ): print ( \"B --- demo \u65b9\u6cd5\" ) class C ( A , B ): \"\"\"\u591a\u7ee7\u627f\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5bf9\u8c61\uff0c\u540c\u65f6\u5177\u6709\u591a\u4e2a\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\"\"\" pass # \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61 c = C () c . test () c . demo () # \u786e\u5b9aC\u7c7b\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u7684\u987a\u5e8f print ( C . __mro__ ) \u6267\u884c\u7ed3\u679c: A --- test \u65b9\u6cd5 A --- demo \u65b9\u6cd5 ( < class ' __main__ . C '>, <class ' __main__ . A '>, <class ' __main__ . B '>, <class ' object '>) \u63d0\u793a\uff1a \u5f00\u53d1\u65f6\uff0c\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u8fd9\u79cd\u5bb9\u6613\u4ea7\u751f\u6df7\u6dc6\u7684\u60c5\u51b5\uff01 \u2014\u2014 \u5982\u679c \u7236\u7c7b\u4e4b\u95f4 \u5b58\u5728 \u540c\u540d\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5 \uff0c\u5e94\u8be5 \u5c3d\u91cf\u907f\u514d \u4f7f\u7528\u591a\u7ee7\u627f","title":"2.1 \u591a\u7ee7\u627f\u7684\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#python-mro","text":"Python \u4e2d\u9488\u5bf9 \u7c7b \u63d0\u4f9b\u4e86\u4e00\u4e2a \u5185\u7f6e\u5c5e\u6027 __mro__ \u53ef\u4ee5\u67e5\u770b \u65b9\u6cd5 \u641c\u7d22\u987a\u5e8f MRO \u662f method resolution order \uff0c\u4e3b\u8981\u7528\u4e8e \u5728\u591a\u7ee7\u627f\u65f6\u5224\u65ad \u65b9\u6cd5\u3001\u5c5e\u6027 \u7684\u8c03\u7528 \u8def\u5f84 print ( C . __mro__ ) \u8f93\u51fa\u7ed3\u679c ( < class ' __main__ . C '>, <class ' __main__ . A '>, <class ' __main__ . B '>, <class ' object '>) \u5728\u641c\u7d22\u65b9\u6cd5\u65f6\uff0c\u662f\u6309\u7167 __mro__ \u7684\u8f93\u51fa\u7ed3\u679c \u4ece\u5de6\u81f3\u53f3 \u7684\u987a\u5e8f\u67e5\u627e\u7684 \u5982\u679c\u5728\u5f53\u524d\u7c7b\u4e2d \u627e\u5230\u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u6267\u884c\uff0c\u4e0d\u518d\u641c\u7d22 \u5982\u679c \u6ca1\u6709\u627e\u5230\uff0c\u5c31\u67e5\u627e\u4e0b\u4e00\u4e2a\u7c7b \u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c \u5982\u679c\u627e\u5230\uff0c\u5c31\u76f4\u63a5\u6267\u884c\uff0c\u4e0d\u518d\u641c\u7d22 \u5982\u679c\u627e\u5230\u6700\u540e\u4e00\u4e2a\u7c7b\uff0c\u8fd8\u6ca1\u6709\u627e\u5230\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u62a5\u9519","title":"Python \u4e2d\u7684 MRO \u2014\u2014 \u65b9\u6cd5\u641c\u7d22\u987a\u5e8f\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/010python\u7ee7\u627f/#22","text":"object \u662f Python \u4e3a\u6240\u6709\u5bf9\u8c61\u63d0\u4f9b\u7684 \u57fa\u7c7b \uff0c\u63d0\u4f9b\u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 dir \u51fd\u6570\u67e5\u770b \u65b0\u5f0f\u7c7b \uff1a\u4ee5 object \u4e3a\u57fa\u7c7b\u7684\u7c7b\uff0c \u63a8\u8350\u4f7f\u7528 \u7ecf\u5178\u7c7b \uff1a\u4e0d\u4ee5 object \u4e3a\u57fa\u7c7b\u7684\u7c7b\uff0c \u4e0d\u63a8\u8350\u4f7f\u7528 \u5728 Python 3.x \u4e2d\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7236\u7c7b\uff0c\u4f1a \u9ed8\u8ba4\u4f7f\u7528 object \u4f5c\u4e3a\u8be5\u7c7b\u7684 \u57fa\u7c7b \u2014\u2014 Python 3.x \u4e2d\u5b9a\u4e49\u7684\u7c7b\u90fd\u662f \u65b0\u5f0f\u7c7b \u5728 Python 2.x \u4e2d\u5b9a\u4e49\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7236\u7c7b\uff0c\u5219\u4e0d\u4f1a\u4ee5 object \u4f5c\u4e3a \u57fa\u7c7b \u65b0\u5f0f\u7c7b \u548c \u7ecf\u5178\u7c7b \u5728\u591a\u7ee7\u627f\u65f6 \u2014\u2014 \u4f1a\u5f71\u54cd\u5230\u65b9\u6cd5\u7684\u641c\u7d22\u987a\u5e8f \u4e3a\u4e86\u4fdd\u8bc1\u7f16\u5199\u7684\u4ee3\u7801\u80fd\u591f\u540c\u65f6\u5728 Python 2.x \u548c Python 3.x \u8fd0\u884c\uff01 \u4eca\u540e\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c \u5982\u679c\u6ca1\u6709\u7236\u7c7b\uff0c\u5efa\u8bae\u7edf\u4e00\u7ee7\u627f\u81ea object class \u7c7b\u540d( object ): pass","title":"2.2 \u65b0\u5f0f\u7c7b\u4e0e\u65e7\u5f0f\uff08\u7ecf\u5178\uff09\u7c7b"},{"location":"python\u5b66\u4e60/011python\u591a\u6001/","text":"\u591a\u6001 \u00b6 \u76ee\u6807 \u00b6 \u591a\u6001 \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u6839\u636e \u804c\u8d23 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5b9a\u4e49\u7c7b\u7684\u51c6\u5219 \u7ee7\u627f \u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528 \uff0c\u76f8\u540c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u91cd\u590d\u7684\u7f16\u5199 \u8bbe\u8ba1\u7c7b\u7684\u6280\u5de7 \u5b50\u7c7b\u9488\u5bf9\u81ea\u5df1\u7279\u6709\u7684\u9700\u6c42\uff0c\u7f16\u5199\u7279\u5b9a\u7684\u4ee3\u7801 \u591a\u6001 \u4e0d\u540c\u7684 \u5b50\u7c7b\u5bf9\u8c61 \u8c03\u7528\u76f8\u540c\u7684 \u7236\u7c7b\u65b9\u6cd5 \uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u7ed3\u679c \u591a\u6001 \u53ef\u4ee5 \u589e\u52a0\u4ee3\u7801\u7684\u7075\u6d3b\u5ea6 \u4ee5 \u7ee7\u627f \u548c \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 \u4e3a\u524d\u63d0 \u662f\u8c03\u7528\u65b9\u6cd5\u7684\u6280\u5de7\uff0c \u4e0d\u4f1a\u5f71\u54cd\u5230\u7c7b\u7684\u5185\u90e8\u8bbe\u8ba1 \u591a\u6001\u6848\u4f8b\u6f14\u7ec3 \u00b6 \u9700\u6c42 \u5728 Dog \u7c7b\u4e2d\u5c01\u88c5\u65b9\u6cd5 game \u666e\u901a\u72d7\u53ea\u662f\u7b80\u5355\u7684\u73a9\u800d \u5b9a\u4e49 XiaoTianDog \u7ee7\u627f\u81ea Dog \uff0c\u5e76\u4e14\u91cd\u5199 game \u65b9\u6cd5 \u54ee\u5929\u72ac\u9700\u8981\u5728\u5929\u4e0a\u73a9\u800d \u5b9a\u4e49 Person \u7c7b\uff0c\u5e76\u4e14\u5c01\u88c5\u4e00\u4e2a \u548c\u72d7\u73a9 \u7684\u65b9\u6cd5 \u5728\u65b9\u6cd5\u5185\u90e8\uff0c\u76f4\u63a5\u8ba9 \u72d7\u5bf9\u8c61 \u8c03\u7528 game \u65b9\u6cd5 \u6848\u4f8b\u5c0f\u7ed3 Person \u7c7b\u4e2d\u53ea\u9700\u8981\u8ba9 \u72d7\u5bf9\u8c61 \u8c03\u7528 game \u65b9\u6cd5\uff0c\u800c\u4e0d\u5173\u5fc3\u5177\u4f53\u662f \u4ec0\u4e48\u72d7 game \u65b9\u6cd5\u662f\u5728 Dog \u7236\u7c7b\u4e2d\u5b9a\u4e49\u7684 \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u4f20\u5165\u4e0d\u540c\u7684 \u72d7\u5bf9\u8c61 \u5b9e\u53c2\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u6548\u679c \u591a\u6001 \u66f4\u5bb9\u6613\u7f16\u5199\u51fa\u51fa\u901a\u7528\u7684\u4ee3\u7801\uff0c\u505a\u51fa\u901a\u7528\u7684\u7f16\u7a0b\uff0c\u4ee5\u9002\u5e94\u9700\u6c42\u7684\u4e0d\u65ad\u53d8\u5316\uff01 class Dog ( object ): def __init__ ( self , name ): self . name = name def game ( self ): print ( \" %s \u8e66\u8e66\u8df3\u8df3\u7684\u73a9\u800d...\" % self . name ) class XiaoTianDog ( Dog ): def game ( self ): print ( \" %s \u98de\u5230\u5929\u4e0a\u53bb\u73a9\u800d...\" % self . name ) class Person ( object ): def __init__ ( self , name ): self . name = name def game_with_dog ( self , dog ): print ( \" %s \u548c %s \u5feb\u4e50\u7684\u73a9\u800d...\" % ( self . name , dog . name )) # \u8ba9\u72d7\u73a9\u800d dog . game () # 1. \u521b\u5efa\u4e00\u4e2a\u72d7\u5bf9\u8c61 # wangcai = Dog(\"\u65fa\u8d22\") wangcai = XiaoTianDog ( \"\u98de\u5929\u65fa\u8d22\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u5c0f\u660e\u5bf9\u8c61 xiaoming = Person ( \"\u5c0f\u660e\" ) # 3. \u8ba9\u5c0f\u660e\u8c03\u7528\u548c\u72d7\u73a9\u7684\u65b9\u6cd5 xiaoming . game_with_dog ( wangcai )","title":"011 python\u591a\u6001"},{"location":"python\u5b66\u4e60/011python\u591a\u6001/#_1","text":"","title":"\u591a\u6001"},{"location":"python\u5b66\u4e60/011python\u591a\u6001/#_2","text":"\u591a\u6001 \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u6839\u636e \u804c\u8d23 \u5c06 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u5c01\u88c5 \u5230\u4e00\u4e2a\u62bd\u8c61\u7684 \u7c7b \u4e2d \u5b9a\u4e49\u7c7b\u7684\u51c6\u5219 \u7ee7\u627f \u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528 \uff0c\u76f8\u540c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u91cd\u590d\u7684\u7f16\u5199 \u8bbe\u8ba1\u7c7b\u7684\u6280\u5de7 \u5b50\u7c7b\u9488\u5bf9\u81ea\u5df1\u7279\u6709\u7684\u9700\u6c42\uff0c\u7f16\u5199\u7279\u5b9a\u7684\u4ee3\u7801 \u591a\u6001 \u4e0d\u540c\u7684 \u5b50\u7c7b\u5bf9\u8c61 \u8c03\u7528\u76f8\u540c\u7684 \u7236\u7c7b\u65b9\u6cd5 \uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u7ed3\u679c \u591a\u6001 \u53ef\u4ee5 \u589e\u52a0\u4ee3\u7801\u7684\u7075\u6d3b\u5ea6 \u4ee5 \u7ee7\u627f \u548c \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 \u4e3a\u524d\u63d0 \u662f\u8c03\u7528\u65b9\u6cd5\u7684\u6280\u5de7\uff0c \u4e0d\u4f1a\u5f71\u54cd\u5230\u7c7b\u7684\u5185\u90e8\u8bbe\u8ba1","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/011python\u591a\u6001/#_3","text":"\u9700\u6c42 \u5728 Dog \u7c7b\u4e2d\u5c01\u88c5\u65b9\u6cd5 game \u666e\u901a\u72d7\u53ea\u662f\u7b80\u5355\u7684\u73a9\u800d \u5b9a\u4e49 XiaoTianDog \u7ee7\u627f\u81ea Dog \uff0c\u5e76\u4e14\u91cd\u5199 game \u65b9\u6cd5 \u54ee\u5929\u72ac\u9700\u8981\u5728\u5929\u4e0a\u73a9\u800d \u5b9a\u4e49 Person \u7c7b\uff0c\u5e76\u4e14\u5c01\u88c5\u4e00\u4e2a \u548c\u72d7\u73a9 \u7684\u65b9\u6cd5 \u5728\u65b9\u6cd5\u5185\u90e8\uff0c\u76f4\u63a5\u8ba9 \u72d7\u5bf9\u8c61 \u8c03\u7528 game \u65b9\u6cd5 \u6848\u4f8b\u5c0f\u7ed3 Person \u7c7b\u4e2d\u53ea\u9700\u8981\u8ba9 \u72d7\u5bf9\u8c61 \u8c03\u7528 game \u65b9\u6cd5\uff0c\u800c\u4e0d\u5173\u5fc3\u5177\u4f53\u662f \u4ec0\u4e48\u72d7 game \u65b9\u6cd5\u662f\u5728 Dog \u7236\u7c7b\u4e2d\u5b9a\u4e49\u7684 \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u4f20\u5165\u4e0d\u540c\u7684 \u72d7\u5bf9\u8c61 \u5b9e\u53c2\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u6548\u679c \u591a\u6001 \u66f4\u5bb9\u6613\u7f16\u5199\u51fa\u51fa\u901a\u7528\u7684\u4ee3\u7801\uff0c\u505a\u51fa\u901a\u7528\u7684\u7f16\u7a0b\uff0c\u4ee5\u9002\u5e94\u9700\u6c42\u7684\u4e0d\u65ad\u53d8\u5316\uff01 class Dog ( object ): def __init__ ( self , name ): self . name = name def game ( self ): print ( \" %s \u8e66\u8e66\u8df3\u8df3\u7684\u73a9\u800d...\" % self . name ) class XiaoTianDog ( Dog ): def game ( self ): print ( \" %s \u98de\u5230\u5929\u4e0a\u53bb\u73a9\u800d...\" % self . name ) class Person ( object ): def __init__ ( self , name ): self . name = name def game_with_dog ( self , dog ): print ( \" %s \u548c %s \u5feb\u4e50\u7684\u73a9\u800d...\" % ( self . name , dog . name )) # \u8ba9\u72d7\u73a9\u800d dog . game () # 1. \u521b\u5efa\u4e00\u4e2a\u72d7\u5bf9\u8c61 # wangcai = Dog(\"\u65fa\u8d22\") wangcai = XiaoTianDog ( \"\u98de\u5929\u65fa\u8d22\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u5c0f\u660e\u5bf9\u8c61 xiaoming = Person ( \"\u5c0f\u660e\" ) # 3. \u8ba9\u5c0f\u660e\u8c03\u7528\u548c\u72d7\u73a9\u7684\u65b9\u6cd5 xiaoming . game_with_dog ( wangcai )","title":"\u591a\u6001\u6848\u4f8b\u6f14\u7ec3"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/","text":"\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5 \u00b6 \u76ee\u6807 \u00b6 \u7c7b\u7684\u7ed3\u6784 \u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027 \u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5 01. \u7c7b\u7684\u7ed3\u6784 \u00b6 1.1 \u672f\u8bed \u2014\u2014 \u5b9e\u4f8b \u00b6 \u4f7f\u7528\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\uff0c \u7b2c 1 \u6b65 \u662f\u8bbe\u8ba1 \u7c7b \u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\uff0c \u521b\u5efa\u5bf9\u8c61 \u7684\u52a8\u4f5c\u6709\u4e24\u6b65\uff1a 1) \u5728\u5185\u5b58\u4e2d\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 2) \u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5 __init__ \u4e3a \u5bf9\u8c61\u521d\u59cb\u5316 \u5bf9\u8c61\u521b\u5efa\u540e\uff0c \u5185\u5b58 \u4e2d\u5c31\u6709\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684 \u5b9e\u5b9e\u5728\u5728 \u7684\u5b58\u5728 \u2014\u2014 \u5b9e\u4f8b \u56e0\u6b64\uff0c\u901a\u5e38\u4e5f\u4f1a\u628a\uff1a \u521b\u5efa\u51fa\u6765\u7684 \u5bf9\u8c61 \u53eb\u505a \u7c7b \u7684 \u5b9e\u4f8b \u521b\u5efa\u5bf9\u8c61\u7684 \u52a8\u4f5c \u53eb\u505a \u5b9e\u4f8b\u5316 \u5bf9\u8c61\u7684\u5c5e\u6027 \u53eb\u505a \u5b9e\u4f8b\u5c5e\u6027 \u5bf9\u8c61\u8c03\u7528\u7684\u65b9\u6cd5 \u53eb\u505a \u5b9e\u4f8b\u65b9\u6cd5 \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff1a \u5bf9\u8c61\u5404\u81ea\u62e5\u6709\u81ea\u5df1\u7684 \u5b9e\u4f8b\u5c5e\u6027 \u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7 self. \u8bbf\u95ee\u81ea\u5df1\u7684\u5c5e\u6027 \u8c03\u7528\u81ea\u5df1\u7684\u65b9\u6cd5 \u7ed3\u8bba \u6bcf\u4e00\u4e2a\u5bf9\u8c61 \u90fd\u6709\u81ea\u5df1 \u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4 \uff0c \u4fdd\u5b58\u5404\u81ea\u4e0d\u540c\u7684\u5c5e\u6027 \u591a\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5 \uff0c \u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd \uff0c\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c \u9700\u8981\u628a\u5bf9\u8c61\u7684\u5f15\u7528 \u4f20\u9012\u5230\u65b9\u6cd5\u5185\u90e8 1.2 \u7c7b\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61 \u00b6 Python \u4e2d \u4e00\u5207\u7686\u5bf9\u8c61 \uff1a class AAA: \u5b9a\u4e49\u7684\u7c7b\u5c5e\u4e8e \u7c7b\u5bf9\u8c61 obj1 = AAA() \u5c5e\u4e8e \u5b9e\u4f8b\u5bf9\u8c61 \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c \u7c7b \u540c\u6837 \u4f1a\u88ab\u52a0\u8f7d\u5230\u5185\u5b58 \u5728 Python \u4e2d\uff0c \u7c7b \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61 \u2014\u2014 \u7c7b\u5bf9\u8c61 \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c \u7c7b\u5bf9\u8c61 \u5728\u5185\u5b58\u4e2d \u53ea\u6709\u4e00\u4efd \uff0c\u4f7f\u7528 \u4e00\u4e2a\u7c7b \u53ef\u4ee5\u521b\u5efa\u51fa \u5f88\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \u9664\u4e86\u5c01\u88c5 \u5b9e\u4f8b \u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5**\u5916\uff0c**\u7c7b\u5bf9\u8c61 \u8fd8\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u7c7b\u5c5e\u6027 \u7c7b\u65b9\u6cd5 \u901a\u8fc7 \u7c7b\u540d. \u7684\u65b9\u5f0f\u53ef\u4ee5 \u8bbf\u95ee\u7c7b\u7684\u5c5e\u6027 \u6216\u8005 \u8c03\u7528\u7c7b\u7684\u65b9\u6cd5 02. \u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027 \u00b6 2.1 \u6982\u5ff5\u548c\u4f7f\u7528 \u00b6 \u7c7b\u5c5e\u6027 \u5c31\u662f\u7ed9 \u7c7b\u5bf9\u8c61 \u4e2d\u5b9a\u4e49\u7684 \u5c5e\u6027 \u901a\u5e38\u7528\u6765\u8bb0\u5f55 \u4e0e\u8fd9\u4e2a\u7c7b\u76f8\u5173 \u7684\u7279\u5f81 \u7c7b\u5c5e\u6027 \u4e0d\u4f1a\u7528\u4e8e**\u8bb0\u5f55 **\u5177\u4f53\u5bf9\u8c61\u7684\u7279\u5f81 \u793a\u4f8b\u9700\u6c42 \u5b9a\u4e49\u4e00\u4e2a \u5de5\u5177\u7c7b \u6bcf\u4ef6\u5de5\u5177\u90fd\u6709\u81ea\u5df1\u7684 name \u9700\u6c42 \u2014\u2014 \u77e5\u9053\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u5de5\u5177\u5bf9\u8c61\uff1f class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u521b\u5efa\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 count = 0 def __init__ ( self , name ): self . name = name # \u9488\u5bf9\u7c7b\u5c5e\u6027\u505a\u4e00\u4e2a\u8ba1\u6570+1 Tool . count += 1 # \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) tool3 = Tool ( \"\u94c1\u9539\" ) # \u77e5\u9053\u4f7f\u7528 Tool \u7c7b\u5230\u5e95\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u5bf9\u8c61? print ( \"\u73b0\u5728\u521b\u5efa\u4e86 %d \u4e2a\u5de5\u5177\" % Tool . count ) 2.2 \u5c5e\u6027\u7684\u83b7\u53d6\u673a\u5236\uff08\u79d1\u666e\uff09 \u00b6 \u5728 Python \u4e2d \u5c5e\u6027\u7684\u83b7\u53d6 \u5b58\u5728\u4e00\u4e2a \u5411\u4e0a\u67e5\u627e\u673a\u5236 \u56e0\u6b64\uff0c\u8981\u8bbf\u95ee\u7c7b\u5c5e\u6027\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u7c7b\u540d.\u7c7b\u5c5e\u6027 \u5bf9\u8c61.\u7c7b\u5c5e\u6027 \uff08\u4e0d\u63a8\u8350\uff09 \u6ce8\u610f \u5982\u679c\u4f7f\u7528 \u5bf9\u8c61.\u7c7b\u5c5e\u6027 = \u503c \u8d4b\u503c\u8bed\u53e5\uff0c\u53ea\u4f1a \u7ed9\u5bf9\u8c61\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027 \uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230 \u7c7b\u5c5e\u6027\u7684\u503c \u4f8b: class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u6240\u6709\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf count = 0 def __init__ ( self , name ): self . name = name # \u8ba9\u7c7b\u5c5e\u6027\u7684\u503c+1 Tool . count += 1 # 1. \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) tool3 = Tool ( \"\u6c34\u6876\" ) # 2. \u8f93\u51fa\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 tool3 . count = 99 #\u8bbe\u7f6e\u5c5e\u6027\u503c,\u76f4\u63a5\u5728\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027 print ( \"\u5de5\u5177\u5bf9\u8c61\u603b\u6570 %d \" % tool3 . count ) print ( \"===> %d \" % Tool . count ) \u6267\u884c\u7ed3\u679c: \u5de5\u5177\u5bf9\u8c61\u603b\u6570 99 ===> 3 03. \u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5 \u00b6 3.1 \u7c7b\u65b9\u6cd5 \u00b6 \u7c7b\u5c5e\u6027 \u5c31\u662f\u9488\u5bf9 \u7c7b\u5bf9\u8c61 \u5b9a\u4e49\u7684\u5c5e\u6027 \u4f7f\u7528 \u8d4b\u503c\u8bed\u53e5 \u5728 class \u5173\u952e\u5b57\u4e0b\u65b9\u53ef\u4ee5\u5b9a\u4e49 \u7c7b\u5c5e\u6027 \u7c7b\u5c5e\u6027 \u7528\u4e8e\u8bb0\u5f55 \u4e0e\u8fd9\u4e2a\u7c7b\u76f8\u5173 \u7684\u7279\u5f81 \u7c7b\u65b9\u6cd5 \u5c31\u662f\u9488\u5bf9 \u7c7b\u5bf9\u8c61 \u5b9a\u4e49\u7684\u65b9\u6cd5 \u5728 \u7c7b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005\u8c03\u7528\u5176\u4ed6\u7684 \u7c7b\u65b9\u6cd5 \u8bed\u6cd5\u5982\u4e0b @classmethod def \u7c7b\u65b9\u6cd5\u540d ( cls ): pass \u7c7b\u65b9\u6cd5\u9700\u8981\u7528 \u4fee\u9970\u5668 @classmethod \u6765\u6807\u8bc6\uff0c \u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a\u7c7b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5\u7684 \u7b2c\u4e00\u4e2a\u53c2\u6570 \u5e94\u8be5\u662f cls \u7531 \u54ea\u4e00\u4e2a\u7c7b \u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u7684 cls \u5c31\u662f \u54ea\u4e00\u4e2a\u7c7b\u7684\u5f15\u7528 \u8fd9\u4e2a\u53c2\u6570\u548c \u5b9e\u4f8b\u65b9\u6cd5 \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f self \u7c7b\u4f3c \u63d0\u793a \u4f7f\u7528\u5176\u4ed6\u540d\u79f0\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u4e60\u60ef\u4f7f\u7528 cls \u901a\u8fc7 \u7c7b\u540d. \u8c03\u7528 \u7c7b\u65b9\u6cd5 \uff0c \u8c03\u7528\u65b9\u6cd5\u65f6 \uff0c\u4e0d\u9700\u8981\u4f20\u9012 cls \u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8 \u53ef\u4ee5\u901a\u8fc7 cls. \u8bbf\u95ee\u7c7b\u7684\u5c5e\u6027 \u4e5f\u53ef\u4ee5\u901a\u8fc7 cls. \u8c03\u7528\u5176\u4ed6\u7684\u7c7b\u65b9\u6cd5 \u793a\u4f8b\u9700\u6c42 \u5b9a\u4e49\u4e00\u4e2a \u5de5\u5177\u7c7b \u6bcf\u4ef6\u5de5\u5177\u90fd\u6709\u81ea\u5df1\u7684 name \u9700\u6c42 \u2014\u2014 \u5728 \u7c7b \u5c01\u88c5\u4e00\u4e2a show_tool_count \u7684\u7c7b\u65b9\u6cd5\uff0c\u8f93\u51fa\u4f7f\u7528\u5f53\u524d\u8fd9\u4e2a\u7c7b\uff0c\u521b\u5efa\u7684\u5bf9\u8c61\u4e2a\u6570 @classmethod def show_tool_count ( cls ): \"\"\"\u663e\u793a\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570\"\"\" print ( \"\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 %d \" % cls . count ) \u5728\u7c7b\u65b9\u6cd5\u5185\u90e8\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 cls \u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005 \u8c03\u7528\u7c7b\u65b9\u6cd5 \u4f8b: class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u6240\u6709\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf count = 0 @classmethod def show_tool_count ( cls ): print ( \"\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf %d \" % cls . count ) def __init__ ( self , name ): self . name = name # \u8ba9\u7c7b\u5c5e\u6027\u7684\u503c+1 Tool . count += 1 # \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) # \u8c03\u7528\u7c7b\u65b9\u6cd5,\u4f7f\u7528\u7684\u7c7b.\u65b9\u6cd5\u540d Tool . show_tool_count () \u6267\u884c\u7ed3\u679c: \u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf 2 3.2 \u9759\u6001\u65b9\u6cd5 \u00b6 \u5728\u5f00\u53d1\u65f6\uff0c\u5982\u679c\u9700\u8981\u5728 \u7c7b \u4e2d\u5c01\u88c5\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5(\u4e0d\u8c03\u7528\u5176\u5b83\u7684\u73a9\u610f)\uff1a \u65e2 \u4e0d\u9700\u8981 \u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u6216\u8005\u8c03\u7528 \u5b9e\u4f8b\u65b9\u6cd5 \u4e5f \u4e0d\u9700\u8981 \u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005\u8c03\u7528 \u7c7b\u65b9\u6cd5 \u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u65b9\u6cd5\u5c01\u88c5\u6210\u4e00\u4e2a \u9759\u6001\u65b9\u6cd5 \u8bed\u6cd5\u5982\u4e0b @staticmethod def \u9759\u6001\u65b9\u6cd5\u540d (): #\u4e0d\u9700\u8981\u5b9a\u4e49\u7b2c\u4e00\u4e2a\u53c2\u6570 pass \u9759\u6001\u65b9\u6cd5 \u9700\u8981\u7528 \u4fee\u9970\u5668 @staticmethod \u6765\u6807\u8bc6\uff0c \u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5 \u901a\u8fc7 \u7c7b\u540d. \u8c03\u7528 \u9759\u6001\u65b9\u6cd5 class Dog ( object ): @staticmethod def run (): # \u4e0d\u8bbf\u95ee\u5b9e\u4f8b\u5c5e\u6027/\u7c7b\u5c5e\u6027 print ( \"\u5c0f\u72d7\u8981\u8dd1...\" ) # \u901a\u8fc7\u7c7b\u540d.\u8c03\u7528\u9759\u6001\u65b9\u6cd5 - \u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61 Dog . run () \u6267\u884c\u7ed3\u679c: \u5c0f\u72d7\u8981\u8dd1 ... 3.3 \u65b9\u6cd5\u7efc\u5408\u6848\u4f8b \u00b6 \u9700\u6c42 \u8bbe\u8ba1\u4e00\u4e2a Game \u7c7b \u5c5e\u6027\uff1a \u5b9a\u4e49\u4e00\u4e2a \u7c7b\u5c5e\u6027 top_score \u8bb0\u5f55\u6e38\u620f\u7684 \u5386\u53f2\u6700\u9ad8\u5206 \u5b9a\u4e49\u4e00\u4e2a \u5b9e\u4f8b\u5c5e\u6027 player_name \u8bb0\u5f55 \u5f53\u524d\u6e38\u620f\u7684\u73a9\u5bb6\u59d3\u540d \u65b9\u6cd5\uff1a \u9759\u6001\u65b9\u6cd5 show_help \u663e\u793a\u6e38\u620f\u5e2e\u52a9\u4fe1\u606f \u7c7b\u65b9\u6cd5 show_top_score \u663e\u793a\u5386\u53f2\u6700\u9ad8\u5206 \u5b9e\u4f8b\u65b9\u6cd5 start_game \u5f00\u59cb\u5f53\u524d\u73a9\u5bb6\u7684\u6e38\u620f \u4e3b\u7a0b\u5e8f\u6b65\u9aa4 1) \u67e5\u770b\u5e2e\u52a9\u4fe1\u606f 2) \u67e5\u770b\u5386\u53f2\u6700\u9ad8\u5206 3) \u521b\u5efa\u6e38\u620f\u5bf9\u8c61\uff0c\u5f00\u59cb\u6e38\u620f \u6848\u4f8b\u5c0f\u7ed3 \u00b6 \u5b9e\u4f8b\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u5b9e\u4f8b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 \u7c7b\u540d. \u8bbf\u95ee\u7c7b\u5c5e\u6027 \u7c7b\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8 \u53ea \u9700\u8981\u8bbf\u95ee \u7c7b\u5c5e\u6027 \u9759\u6001\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u548c \u7c7b\u5c5e\u6027 \u63d0\u95ee \u5982\u679c\u65b9\u6cd5\u5185\u90e8 \u5373\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \uff0c\u53c8\u9700\u8981\u8bbf\u95ee \u7c7b\u5c5e\u6027 \uff0c\u5e94\u8be5\u5b9a\u4e49\u6210\u4ec0\u4e48\u65b9\u6cd5\uff1f \u7b54\u6848 \u5e94\u8be5\u5b9a\u4e49 \u5b9e\u4f8b\u65b9\u6cd5 \u56e0\u4e3a\uff0c \u7c7b\u53ea\u6709\u4e00\u4e2a \uff0c\u5728 \u5b9e\u4f8b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 \u7c7b\u540d. \u8bbf\u95ee\u7c7b\u5c5e\u6027 class Game ( object ): # \u6e38\u620f\u6700\u9ad8\u5206\uff0c\u7c7b\u5c5e\u6027 top_score = 0 #\u521d\u59cb\u503c\u4e3a\u96f6 @staticmethod #\u9759\u6001\u65b9\u6cd5 def show_help (): print ( \"\u5e2e\u52a9\u4fe1\u606f\uff1a\u8ba9\u50f5\u5c38\u8d70\u8fdb\u623f\u95f4\" ) @classmethod #\u7c7b\u65b9\u6cd5 def show_top_score ( cls ): print ( \"\u6e38\u620f\u6700\u9ad8\u5206\u662f %d \" % cls . top_score ) def __init__ ( self , player_name ): #\u5b9e\u4f8b\u65b9\u6cd5\u521d\u59cb\u5316 self . player_name = player_name def start_game ( self ): print ( \"[ %s ] \u5f00\u59cb\u6e38\u620f...\" % self . player_name ) #\u8c03\u7528\u5b9e\u4f8b\u5c5e\u6027 # \u4f7f\u7528\u7c7b\u540d.\u4fee\u6539\u5386\u53f2\u6700\u9ad8\u5206 Game . top_score = 999 # 1. \u67e5\u770b\u6e38\u620f\u5e2e\u52a9 Game . show_help () # 2. \u67e5\u770b\u6e38\u620f\u6700\u9ad8\u5206 Game . show_top_score () # 3. \u521b\u5efa\u6e38\u620f\u5bf9\u8c61\uff0c\u5f00\u59cb\u6e38\u620f game = Game ( \"\u5c0f\u660e\" ) game . start_game () # 4. \u6e38\u620f\u7ed3\u675f\uff0c\u67e5\u770b\u6e38\u620f\u6700\u9ad8\u5206 Game . show_top_score ()","title":"012 python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#_1","text":"","title":"\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#_2","text":"\u7c7b\u7684\u7ed3\u6784 \u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027 \u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#01","text":"","title":"01. \u7c7b\u7684\u7ed3\u6784"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#11","text":"\u4f7f\u7528\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\uff0c \u7b2c 1 \u6b65 \u662f\u8bbe\u8ba1 \u7c7b \u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\uff0c \u521b\u5efa\u5bf9\u8c61 \u7684\u52a8\u4f5c\u6709\u4e24\u6b65\uff1a 1) \u5728\u5185\u5b58\u4e2d\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 2) \u8c03\u7528\u521d\u59cb\u5316\u65b9\u6cd5 __init__ \u4e3a \u5bf9\u8c61\u521d\u59cb\u5316 \u5bf9\u8c61\u521b\u5efa\u540e\uff0c \u5185\u5b58 \u4e2d\u5c31\u6709\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684 \u5b9e\u5b9e\u5728\u5728 \u7684\u5b58\u5728 \u2014\u2014 \u5b9e\u4f8b \u56e0\u6b64\uff0c\u901a\u5e38\u4e5f\u4f1a\u628a\uff1a \u521b\u5efa\u51fa\u6765\u7684 \u5bf9\u8c61 \u53eb\u505a \u7c7b \u7684 \u5b9e\u4f8b \u521b\u5efa\u5bf9\u8c61\u7684 \u52a8\u4f5c \u53eb\u505a \u5b9e\u4f8b\u5316 \u5bf9\u8c61\u7684\u5c5e\u6027 \u53eb\u505a \u5b9e\u4f8b\u5c5e\u6027 \u5bf9\u8c61\u8c03\u7528\u7684\u65b9\u6cd5 \u53eb\u505a \u5b9e\u4f8b\u65b9\u6cd5 \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff1a \u5bf9\u8c61\u5404\u81ea\u62e5\u6709\u81ea\u5df1\u7684 \u5b9e\u4f8b\u5c5e\u6027 \u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7 self. \u8bbf\u95ee\u81ea\u5df1\u7684\u5c5e\u6027 \u8c03\u7528\u81ea\u5df1\u7684\u65b9\u6cd5 \u7ed3\u8bba \u6bcf\u4e00\u4e2a\u5bf9\u8c61 \u90fd\u6709\u81ea\u5df1 \u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4 \uff0c \u4fdd\u5b58\u5404\u81ea\u4e0d\u540c\u7684\u5c5e\u6027 \u591a\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5 \uff0c \u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd \uff0c\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c \u9700\u8981\u628a\u5bf9\u8c61\u7684\u5f15\u7528 \u4f20\u9012\u5230\u65b9\u6cd5\u5185\u90e8","title":"1.1 \u672f\u8bed \u2014\u2014 \u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#12","text":"Python \u4e2d \u4e00\u5207\u7686\u5bf9\u8c61 \uff1a class AAA: \u5b9a\u4e49\u7684\u7c7b\u5c5e\u4e8e \u7c7b\u5bf9\u8c61 obj1 = AAA() \u5c5e\u4e8e \u5b9e\u4f8b\u5bf9\u8c61 \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c \u7c7b \u540c\u6837 \u4f1a\u88ab\u52a0\u8f7d\u5230\u5185\u5b58 \u5728 Python \u4e2d\uff0c \u7c7b \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61 \u2014\u2014 \u7c7b\u5bf9\u8c61 \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c \u7c7b\u5bf9\u8c61 \u5728\u5185\u5b58\u4e2d \u53ea\u6709\u4e00\u4efd \uff0c\u4f7f\u7528 \u4e00\u4e2a\u7c7b \u53ef\u4ee5\u521b\u5efa\u51fa \u5f88\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \u9664\u4e86\u5c01\u88c5 \u5b9e\u4f8b \u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5**\u5916\uff0c**\u7c7b\u5bf9\u8c61 \u8fd8\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684 \u5c5e\u6027 \u548c \u65b9\u6cd5 \u7c7b\u5c5e\u6027 \u7c7b\u65b9\u6cd5 \u901a\u8fc7 \u7c7b\u540d. \u7684\u65b9\u5f0f\u53ef\u4ee5 \u8bbf\u95ee\u7c7b\u7684\u5c5e\u6027 \u6216\u8005 \u8c03\u7528\u7c7b\u7684\u65b9\u6cd5","title":"1.2 \u7c7b\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#02","text":"","title":"02. \u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#21","text":"\u7c7b\u5c5e\u6027 \u5c31\u662f\u7ed9 \u7c7b\u5bf9\u8c61 \u4e2d\u5b9a\u4e49\u7684 \u5c5e\u6027 \u901a\u5e38\u7528\u6765\u8bb0\u5f55 \u4e0e\u8fd9\u4e2a\u7c7b\u76f8\u5173 \u7684\u7279\u5f81 \u7c7b\u5c5e\u6027 \u4e0d\u4f1a\u7528\u4e8e**\u8bb0\u5f55 **\u5177\u4f53\u5bf9\u8c61\u7684\u7279\u5f81 \u793a\u4f8b\u9700\u6c42 \u5b9a\u4e49\u4e00\u4e2a \u5de5\u5177\u7c7b \u6bcf\u4ef6\u5de5\u5177\u90fd\u6709\u81ea\u5df1\u7684 name \u9700\u6c42 \u2014\u2014 \u77e5\u9053\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u5de5\u5177\u5bf9\u8c61\uff1f class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\uff0c\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u521b\u5efa\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 count = 0 def __init__ ( self , name ): self . name = name # \u9488\u5bf9\u7c7b\u5c5e\u6027\u505a\u4e00\u4e2a\u8ba1\u6570+1 Tool . count += 1 # \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) tool3 = Tool ( \"\u94c1\u9539\" ) # \u77e5\u9053\u4f7f\u7528 Tool \u7c7b\u5230\u5e95\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u5bf9\u8c61? print ( \"\u73b0\u5728\u521b\u5efa\u4e86 %d \u4e2a\u5de5\u5177\" % Tool . count )","title":"2.1 \u6982\u5ff5\u548c\u4f7f\u7528"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#22","text":"\u5728 Python \u4e2d \u5c5e\u6027\u7684\u83b7\u53d6 \u5b58\u5728\u4e00\u4e2a \u5411\u4e0a\u67e5\u627e\u673a\u5236 \u56e0\u6b64\uff0c\u8981\u8bbf\u95ee\u7c7b\u5c5e\u6027\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u7c7b\u540d.\u7c7b\u5c5e\u6027 \u5bf9\u8c61.\u7c7b\u5c5e\u6027 \uff08\u4e0d\u63a8\u8350\uff09 \u6ce8\u610f \u5982\u679c\u4f7f\u7528 \u5bf9\u8c61.\u7c7b\u5c5e\u6027 = \u503c \u8d4b\u503c\u8bed\u53e5\uff0c\u53ea\u4f1a \u7ed9\u5bf9\u8c61\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027 \uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230 \u7c7b\u5c5e\u6027\u7684\u503c \u4f8b: class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u6240\u6709\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf count = 0 def __init__ ( self , name ): self . name = name # \u8ba9\u7c7b\u5c5e\u6027\u7684\u503c+1 Tool . count += 1 # 1. \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) tool3 = Tool ( \"\u6c34\u6876\" ) # 2. \u8f93\u51fa\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 tool3 . count = 99 #\u8bbe\u7f6e\u5c5e\u6027\u503c,\u76f4\u63a5\u5728\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027 print ( \"\u5de5\u5177\u5bf9\u8c61\u603b\u6570 %d \" % tool3 . count ) print ( \"===> %d \" % Tool . count ) \u6267\u884c\u7ed3\u679c: \u5de5\u5177\u5bf9\u8c61\u603b\u6570 99 ===> 3","title":"2.2 \u5c5e\u6027\u7684\u83b7\u53d6\u673a\u5236\uff08\u79d1\u666e\uff09"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#03","text":"","title":"03. \u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#31","text":"\u7c7b\u5c5e\u6027 \u5c31\u662f\u9488\u5bf9 \u7c7b\u5bf9\u8c61 \u5b9a\u4e49\u7684\u5c5e\u6027 \u4f7f\u7528 \u8d4b\u503c\u8bed\u53e5 \u5728 class \u5173\u952e\u5b57\u4e0b\u65b9\u53ef\u4ee5\u5b9a\u4e49 \u7c7b\u5c5e\u6027 \u7c7b\u5c5e\u6027 \u7528\u4e8e\u8bb0\u5f55 \u4e0e\u8fd9\u4e2a\u7c7b\u76f8\u5173 \u7684\u7279\u5f81 \u7c7b\u65b9\u6cd5 \u5c31\u662f\u9488\u5bf9 \u7c7b\u5bf9\u8c61 \u5b9a\u4e49\u7684\u65b9\u6cd5 \u5728 \u7c7b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005\u8c03\u7528\u5176\u4ed6\u7684 \u7c7b\u65b9\u6cd5 \u8bed\u6cd5\u5982\u4e0b @classmethod def \u7c7b\u65b9\u6cd5\u540d ( cls ): pass \u7c7b\u65b9\u6cd5\u9700\u8981\u7528 \u4fee\u9970\u5668 @classmethod \u6765\u6807\u8bc6\uff0c \u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a\u7c7b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5\u7684 \u7b2c\u4e00\u4e2a\u53c2\u6570 \u5e94\u8be5\u662f cls \u7531 \u54ea\u4e00\u4e2a\u7c7b \u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u7684 cls \u5c31\u662f \u54ea\u4e00\u4e2a\u7c7b\u7684\u5f15\u7528 \u8fd9\u4e2a\u53c2\u6570\u548c \u5b9e\u4f8b\u65b9\u6cd5 \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f self \u7c7b\u4f3c \u63d0\u793a \u4f7f\u7528\u5176\u4ed6\u540d\u79f0\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u4e60\u60ef\u4f7f\u7528 cls \u901a\u8fc7 \u7c7b\u540d. \u8c03\u7528 \u7c7b\u65b9\u6cd5 \uff0c \u8c03\u7528\u65b9\u6cd5\u65f6 \uff0c\u4e0d\u9700\u8981\u4f20\u9012 cls \u53c2\u6570 \u5728\u65b9\u6cd5\u5185\u90e8 \u53ef\u4ee5\u901a\u8fc7 cls. \u8bbf\u95ee\u7c7b\u7684\u5c5e\u6027 \u4e5f\u53ef\u4ee5\u901a\u8fc7 cls. \u8c03\u7528\u5176\u4ed6\u7684\u7c7b\u65b9\u6cd5 \u793a\u4f8b\u9700\u6c42 \u5b9a\u4e49\u4e00\u4e2a \u5de5\u5177\u7c7b \u6bcf\u4ef6\u5de5\u5177\u90fd\u6709\u81ea\u5df1\u7684 name \u9700\u6c42 \u2014\u2014 \u5728 \u7c7b \u5c01\u88c5\u4e00\u4e2a show_tool_count \u7684\u7c7b\u65b9\u6cd5\uff0c\u8f93\u51fa\u4f7f\u7528\u5f53\u524d\u8fd9\u4e2a\u7c7b\uff0c\u521b\u5efa\u7684\u5bf9\u8c61\u4e2a\u6570 @classmethod def show_tool_count ( cls ): \"\"\"\u663e\u793a\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570\"\"\" print ( \"\u5de5\u5177\u5bf9\u8c61\u7684\u603b\u6570 %d \" % cls . count ) \u5728\u7c7b\u65b9\u6cd5\u5185\u90e8\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 cls \u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005 \u8c03\u7528\u7c7b\u65b9\u6cd5 \u4f8b: class Tool ( object ): # \u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u5b9a\u4e49\u7c7b\u5c5e\u6027\uff0c\u8bb0\u5f55\u6240\u6709\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf count = 0 @classmethod def show_tool_count ( cls ): print ( \"\u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf %d \" % cls . count ) def __init__ ( self , name ): self . name = name # \u8ba9\u7c7b\u5c5e\u6027\u7684\u503c+1 Tool . count += 1 # \u521b\u5efa\u5de5\u5177\u5bf9\u8c61 tool1 = Tool ( \"\u65a7\u5934\" ) tool2 = Tool ( \"\u6994\u5934\" ) # \u8c03\u7528\u7c7b\u65b9\u6cd5,\u4f7f\u7528\u7684\u7c7b.\u65b9\u6cd5\u540d Tool . show_tool_count () \u6267\u884c\u7ed3\u679c: \u5de5\u5177\u5bf9\u8c61\u7684\u6570\u91cf 2","title":"3.1 \u7c7b\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#32","text":"\u5728\u5f00\u53d1\u65f6\uff0c\u5982\u679c\u9700\u8981\u5728 \u7c7b \u4e2d\u5c01\u88c5\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5(\u4e0d\u8c03\u7528\u5176\u5b83\u7684\u73a9\u610f)\uff1a \u65e2 \u4e0d\u9700\u8981 \u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u6216\u8005\u8c03\u7528 \u5b9e\u4f8b\u65b9\u6cd5 \u4e5f \u4e0d\u9700\u8981 \u8bbf\u95ee \u7c7b\u5c5e\u6027 \u6216\u8005\u8c03\u7528 \u7c7b\u65b9\u6cd5 \u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u65b9\u6cd5\u5c01\u88c5\u6210\u4e00\u4e2a \u9759\u6001\u65b9\u6cd5 \u8bed\u6cd5\u5982\u4e0b @staticmethod def \u9759\u6001\u65b9\u6cd5\u540d (): #\u4e0d\u9700\u8981\u5b9a\u4e49\u7b2c\u4e00\u4e2a\u53c2\u6570 pass \u9759\u6001\u65b9\u6cd5 \u9700\u8981\u7528 \u4fee\u9970\u5668 @staticmethod \u6765\u6807\u8bc6\uff0c \u544a\u8bc9\u89e3\u91ca\u5668\u8fd9\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5 \u901a\u8fc7 \u7c7b\u540d. \u8c03\u7528 \u9759\u6001\u65b9\u6cd5 class Dog ( object ): @staticmethod def run (): # \u4e0d\u8bbf\u95ee\u5b9e\u4f8b\u5c5e\u6027/\u7c7b\u5c5e\u6027 print ( \"\u5c0f\u72d7\u8981\u8dd1...\" ) # \u901a\u8fc7\u7c7b\u540d.\u8c03\u7528\u9759\u6001\u65b9\u6cd5 - \u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61 Dog . run () \u6267\u884c\u7ed3\u679c: \u5c0f\u72d7\u8981\u8dd1 ...","title":"3.2 \u9759\u6001\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#33","text":"\u9700\u6c42 \u8bbe\u8ba1\u4e00\u4e2a Game \u7c7b \u5c5e\u6027\uff1a \u5b9a\u4e49\u4e00\u4e2a \u7c7b\u5c5e\u6027 top_score \u8bb0\u5f55\u6e38\u620f\u7684 \u5386\u53f2\u6700\u9ad8\u5206 \u5b9a\u4e49\u4e00\u4e2a \u5b9e\u4f8b\u5c5e\u6027 player_name \u8bb0\u5f55 \u5f53\u524d\u6e38\u620f\u7684\u73a9\u5bb6\u59d3\u540d \u65b9\u6cd5\uff1a \u9759\u6001\u65b9\u6cd5 show_help \u663e\u793a\u6e38\u620f\u5e2e\u52a9\u4fe1\u606f \u7c7b\u65b9\u6cd5 show_top_score \u663e\u793a\u5386\u53f2\u6700\u9ad8\u5206 \u5b9e\u4f8b\u65b9\u6cd5 start_game \u5f00\u59cb\u5f53\u524d\u73a9\u5bb6\u7684\u6e38\u620f \u4e3b\u7a0b\u5e8f\u6b65\u9aa4 1) \u67e5\u770b\u5e2e\u52a9\u4fe1\u606f 2) \u67e5\u770b\u5386\u53f2\u6700\u9ad8\u5206 3) \u521b\u5efa\u6e38\u620f\u5bf9\u8c61\uff0c\u5f00\u59cb\u6e38\u620f","title":"3.3 \u65b9\u6cd5\u7efc\u5408\u6848\u4f8b"},{"location":"python\u5b66\u4e60/012python\u7c7b\u5c5e\u6027\u548c\u7c7b\u65b9\u6cd5/#_3","text":"\u5b9e\u4f8b\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u5b9e\u4f8b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 \u7c7b\u540d. \u8bbf\u95ee\u7c7b\u5c5e\u6027 \u7c7b\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8 \u53ea \u9700\u8981\u8bbf\u95ee \u7c7b\u5c5e\u6027 \u9759\u6001\u65b9\u6cd5 \u2014\u2014 \u65b9\u6cd5\u5185\u90e8\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \u548c \u7c7b\u5c5e\u6027 \u63d0\u95ee \u5982\u679c\u65b9\u6cd5\u5185\u90e8 \u5373\u9700\u8981\u8bbf\u95ee \u5b9e\u4f8b\u5c5e\u6027 \uff0c\u53c8\u9700\u8981\u8bbf\u95ee \u7c7b\u5c5e\u6027 \uff0c\u5e94\u8be5\u5b9a\u4e49\u6210\u4ec0\u4e48\u65b9\u6cd5\uff1f \u7b54\u6848 \u5e94\u8be5\u5b9a\u4e49 \u5b9e\u4f8b\u65b9\u6cd5 \u56e0\u4e3a\uff0c \u7c7b\u53ea\u6709\u4e00\u4e2a \uff0c\u5728 \u5b9e\u4f8b\u65b9\u6cd5 \u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 \u7c7b\u540d. \u8bbf\u95ee\u7c7b\u5c5e\u6027 class Game ( object ): # \u6e38\u620f\u6700\u9ad8\u5206\uff0c\u7c7b\u5c5e\u6027 top_score = 0 #\u521d\u59cb\u503c\u4e3a\u96f6 @staticmethod #\u9759\u6001\u65b9\u6cd5 def show_help (): print ( \"\u5e2e\u52a9\u4fe1\u606f\uff1a\u8ba9\u50f5\u5c38\u8d70\u8fdb\u623f\u95f4\" ) @classmethod #\u7c7b\u65b9\u6cd5 def show_top_score ( cls ): print ( \"\u6e38\u620f\u6700\u9ad8\u5206\u662f %d \" % cls . top_score ) def __init__ ( self , player_name ): #\u5b9e\u4f8b\u65b9\u6cd5\u521d\u59cb\u5316 self . player_name = player_name def start_game ( self ): print ( \"[ %s ] \u5f00\u59cb\u6e38\u620f...\" % self . player_name ) #\u8c03\u7528\u5b9e\u4f8b\u5c5e\u6027 # \u4f7f\u7528\u7c7b\u540d.\u4fee\u6539\u5386\u53f2\u6700\u9ad8\u5206 Game . top_score = 999 # 1. \u67e5\u770b\u6e38\u620f\u5e2e\u52a9 Game . show_help () # 2. \u67e5\u770b\u6e38\u620f\u6700\u9ad8\u5206 Game . show_top_score () # 3. \u521b\u5efa\u6e38\u620f\u5bf9\u8c61\uff0c\u5f00\u59cb\u6e38\u620f game = Game ( \"\u5c0f\u660e\" ) game . start_game () # 4. \u6e38\u620f\u7ed3\u675f\uff0c\u67e5\u770b\u6e38\u620f\u6700\u9ad8\u5206 Game . show_top_score ()","title":"\u6848\u4f8b\u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/","text":"\u5355\u4f8b \u00b6 \u76ee\u6807 \u00b6 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f __new__ \u65b9\u6cd5 Python \u4e2d\u7684\u5355\u4f8b 01. \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \u8bbe\u8ba1\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f \u662f \u524d\u4eba\u5de5\u4f5c\u7684\u603b\u7ed3\u548c\u63d0\u70bc \uff0c\u901a\u5e38\uff0c\u88ab\u4eba\u4eec\u5e7f\u6cdb\u6d41\u4f20\u7684\u8bbe\u8ba1\u6a21\u5f0f\u90fd\u662f\u9488\u5bf9 \u67d0\u4e00\u7279\u5b9a\u95ee\u9898 \u7684\u6210\u719f\u7684\u89e3\u51b3\u65b9\u6848 \u4f7f\u7528 \u8bbe\u8ba1\u6a21\u5f0f \u662f\u4e3a\u4e86\u53ef\u91cd\u7528\u4ee3\u7801\u3001\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u4ed6\u4eba\u7406\u89e3\u3001\u4fdd\u8bc1\u4ee3\u7801\u53ef\u9760\u6027 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u76ee\u7684 \u2014\u2014 \u8ba9 \u7c7b \u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5728\u7cfb\u7edf\u4e2d \u53ea\u6709 \u552f\u4e00\u7684\u4e00\u4e2a\u5b9e\u4f8b \u6bcf\u4e00\u6b21\u6267\u884c \u7c7b\u540d() \u8fd4\u56de\u7684\u5bf9\u8c61\uff0c \u5185\u5b58\u5730\u5740\u662f\u76f8\u540c\u7684 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f \u00b6 \u97f3\u4e50\u64ad\u653e \u5bf9\u8c61 \u56de\u6536\u7ad9 \u5bf9\u8c61 \u6253\u5370\u673a \u5bf9\u8c61 \u2026\u2026 02. __new__ \u65b9\u6cd5 \u00b6 \u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c Python \u7684\u89e3\u91ca\u5668 \u9996\u5148 \u4f1a \u8c03\u7528 __new__ \u65b9\u6cd5\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 __new__ \u662f\u4e00\u4e2a \u7531 object \u57fa\u7c7b\u63d0\u4f9b\u7684 \u5185\u7f6e\u7684\u9759\u6001\u65b9\u6cd5 \uff0c\u4e3b\u8981\u4f5c\u7528\u6709\u4e24\u4e2a\uff1a 1) \u5728\u5185\u5b58\u4e2d\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 2) \u8fd4\u56de \u5bf9\u8c61\u7684\u5f15\u7528 Python \u7684\u89e3\u91ca\u5668\u83b7\u5f97\u5bf9\u8c61\u7684 \u5f15\u7528 \u540e\uff0c\u5c06\u5f15\u7528\u4f5c\u4e3a \u7b2c\u4e00\u4e2a\u53c2\u6570 \uff0c\u4f20\u9012\u7ed9 __init__ \u65b9\u6cd5 \u91cd\u5199 __new__ \u65b9\u6cd5 \u7684\u4ee3\u7801\u975e\u5e38\u56fa\u5b9a\uff01 \u91cd\u5199 __new__ \u65b9\u6cd5 \u4e00\u5b9a\u8981 return super().__new__(cls) \u5426\u5219 Python \u7684\u89e3\u91ca\u5668 \u5f97\u4e0d\u5230 \u5206\u914d\u4e86\u7a7a\u95f4\u7684 \u5bf9\u8c61\u5f15\u7528 \uff0c \u5c31\u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u65b9\u6cd5 \u6ce8\u610f\uff1a __new__ \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u5728\u8c03\u7528\u65f6\u9700\u8981 \u4e3b\u52a8\u4f20\u9012 cls \u53c2\u6570 \u793a\u4f8b\u4ee3\u7801 class MusicPlayer ( object ): def __new__ ( cls , * args , ** kwargs ): # \u5982\u679c\u4e0d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\uff0c\u4f7f\u7528\u7684\u662f\u7236\u7c7b\u7684new\u65b9\u6cd5\u4e3a\u5bf9\u8c61\u5206\u914d\u7a7a\u95f4 return super () . __new__ ( cls ) def __init__ ( self ): print ( \"\u521d\u59cb\u5316\u97f3\u4e50\u64ad\u653e\u5bf9\u8c61\" ) player = MusicPlayer () print ( player ) 03. Python \u4e2d\u7684\u5355\u4f8b \u00b6 \u5355\u4f8b \u2014\u2014 \u8ba9 \u7c7b \u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5728\u7cfb\u7edf\u4e2d \u53ea\u6709 \u552f\u4e00\u7684\u4e00\u4e2a\u5b9e\u4f8b \u5b9a\u4e49\u4e00\u4e2a \u7c7b\u5c5e\u6027 \uff0c\u521d\u59cb\u503c\u662f None \uff0c\u7528\u4e8e\u8bb0\u5f55 \u5355\u4f8b\u5bf9\u8c61\u7684\u5f15\u7528 \u91cd\u5199 __new__ \u65b9\u6cd5 \u5982\u679c \u7c7b\u5c5e\u6027 is None \uff0c\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u5206\u914d\u7a7a\u95f4\uff0c\u5e76\u5728\u7c7b\u5c5e\u6027\u4e2d\u8bb0\u5f55\u7ed3\u679c \u8fd4\u56de \u7c7b\u5c5e\u6027 \u4e2d\u8bb0\u5f55\u7684 \u5bf9\u8c61\u5f15\u7528 class MusicPlayer ( object ): # \u5b9a\u4e49\u7c7b\u5c5e\u6027\u8bb0\u5f55\u5355\u4f8b\u5bf9\u8c61\u5f15\u7528 instance = None def __new__ ( cls , * args , ** kwargs ): # 1. \u5224\u65ad\u7c7b\u5c5e\u6027\u662f\u5426\u5df2\u7ecf\u88ab\u8d4b\u503c if cls . instance is None : cls . instance = super () . __new__ ( cls ) #\u5426\u5219\u7684\u8bdd\u8fd4\u56de\u7684\u662f\u4e00\u5f00\u59cb\u7684\u5bf9\u8c61\u7684\u5730\u5740,\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u6bcf\u6b21\u90fd\u662f\u8fd9\u4e00\u4e2a\u5bf9\u8c61,\u5b9e\u73b0\u5355\u4f8b # 2. \u8fd4\u56de\u7c7b\u5c5e\u6027\u7684\u5355\u4f8b\u5f15\u7528 return cls . instance # \u521b\u5efa\u591a\u4e2a\u5bf9\u8c61 player1 = MusicPlayer () print ( player1 ) player2 = MusicPlayer () print ( player2 ) \u6267\u884c\u7ed3\u679c: < __main__ . MusicPlayer object at 0x7f48180d3940 > < __main__ . MusicPlayer object at 0x7f48180d3940 > \u53ea\u6267\u884c\u4e00\u6b21\u521d\u59cb\u5316\u5de5\u4f5c \u00b6 \u5728\u6bcf\u6b21\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c Python \u7684\u89e3\u91ca\u5668\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528\u4e24\u4e2a\u65b9\u6cd5\uff1a __new__ \u5206\u914d\u7a7a\u95f4 __init__ \u5bf9\u8c61\u521d\u59cb\u5316 \u5728\u4e0a\u4e00\u5c0f\u8282\u5bf9 __new__ \u65b9\u6cd5\u6539\u9020\u4e4b\u540e\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f97\u5230 \u7b2c\u4e00\u6b21\u88ab\u521b\u5efa\u5bf9\u8c61\u7684\u5f15\u7528 \u4f46\u662f\uff1a \u521d\u59cb\u5316\u65b9\u6cd5\u8fd8\u4f1a\u88ab\u518d\u6b21\u8c03\u7528 \u9700\u6c42 \u8ba9 \u521d\u59cb\u5316\u52a8\u4f5c \u53ea\u88ab \u6267\u884c\u4e00\u6b21 \u89e3\u51b3\u529e\u6cd5 \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u5c5e\u6027 init_flag \u6807\u8bb0\u662f\u5426 \u6267\u884c\u8fc7\u521d\u59cb\u5316\u52a8\u4f5c \uff0c\u521d\u59cb\u503c\u4e3a False \u5728 __init__ \u65b9\u6cd5\u4e2d\uff0c\u5224\u65ad init_flag \uff0c\u5982\u679c\u4e3a False \u5c31\u6267\u884c\u521d\u59cb\u5316\u52a8\u4f5c \u7136\u540e\u5c06 init_flag \u8bbe\u7f6e\u4e3a True \u8fd9\u6837\uff0c\u518d\u6b21 \u81ea\u52a8 \u8c03\u7528 __init__ \u65b9\u6cd5\u65f6\uff0c \u521d\u59cb\u5316\u52a8\u4f5c\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u6267\u884c \u4e86 class MusicPlayer ( object ): # \u8bb0\u5f55\u7b2c\u4e00\u4e2a\u88ab\u521b\u5efa\u5bf9\u8c61\u7684\u5f15\u7528 instance = None # \u8bb0\u5f55\u662f\u5426\u6267\u884c\u8fc7\u521d\u59cb\u5316\u52a8\u4f5c init_flag = False def __new__ ( cls , * args , ** kwargs ): # 1. \u5224\u65ad\u7c7b\u5c5e\u6027\u662f\u5426\u662f\u7a7a\u5bf9\u8c61 if cls . instance is None : # 2. \u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u4e3a\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u5206\u914d\u7a7a\u95f4 cls . instance = super () . __new__ ( cls ) # 3. \u8fd4\u56de\u7c7b\u5c5e\u6027\u4fdd\u5b58\u7684\u5bf9\u8c61\u5f15\u7528 return cls . instance def __init__ ( self ): if not MusicPlayer . init_flag : print ( \"\u521d\u59cb\u5316\u97f3\u4e50\u64ad\u653e\u5668\" ) MusicPlayer . init_flag = True # \u521b\u5efa\u591a\u4e2a\u5bf9\u8c61 player1 = MusicPlayer () print ( player1 ) player2 = MusicPlayer () print ( player2 )","title":"013 python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#_1","text":"","title":"\u5355\u4f8b"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#_2","text":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f __new__ \u65b9\u6cd5 Python \u4e2d\u7684\u5355\u4f8b","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#01","text":"\u8bbe\u8ba1\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f \u662f \u524d\u4eba\u5de5\u4f5c\u7684\u603b\u7ed3\u548c\u63d0\u70bc \uff0c\u901a\u5e38\uff0c\u88ab\u4eba\u4eec\u5e7f\u6cdb\u6d41\u4f20\u7684\u8bbe\u8ba1\u6a21\u5f0f\u90fd\u662f\u9488\u5bf9 \u67d0\u4e00\u7279\u5b9a\u95ee\u9898 \u7684\u6210\u719f\u7684\u89e3\u51b3\u65b9\u6848 \u4f7f\u7528 \u8bbe\u8ba1\u6a21\u5f0f \u662f\u4e3a\u4e86\u53ef\u91cd\u7528\u4ee3\u7801\u3001\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u4ed6\u4eba\u7406\u89e3\u3001\u4fdd\u8bc1\u4ee3\u7801\u53ef\u9760\u6027 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u76ee\u7684 \u2014\u2014 \u8ba9 \u7c7b \u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5728\u7cfb\u7edf\u4e2d \u53ea\u6709 \u552f\u4e00\u7684\u4e00\u4e2a\u5b9e\u4f8b \u6bcf\u4e00\u6b21\u6267\u884c \u7c7b\u540d() \u8fd4\u56de\u7684\u5bf9\u8c61\uff0c \u5185\u5b58\u5730\u5740\u662f\u76f8\u540c\u7684","title":"01. \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#_3","text":"\u97f3\u4e50\u64ad\u653e \u5bf9\u8c61 \u56de\u6536\u7ad9 \u5bf9\u8c61 \u6253\u5370\u673a \u5bf9\u8c61 \u2026\u2026","title":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#02-__new__","text":"\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c Python \u7684\u89e3\u91ca\u5668 \u9996\u5148 \u4f1a \u8c03\u7528 __new__ \u65b9\u6cd5\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 __new__ \u662f\u4e00\u4e2a \u7531 object \u57fa\u7c7b\u63d0\u4f9b\u7684 \u5185\u7f6e\u7684\u9759\u6001\u65b9\u6cd5 \uff0c\u4e3b\u8981\u4f5c\u7528\u6709\u4e24\u4e2a\uff1a 1) \u5728\u5185\u5b58\u4e2d\u4e3a\u5bf9\u8c61 \u5206\u914d\u7a7a\u95f4 2) \u8fd4\u56de \u5bf9\u8c61\u7684\u5f15\u7528 Python \u7684\u89e3\u91ca\u5668\u83b7\u5f97\u5bf9\u8c61\u7684 \u5f15\u7528 \u540e\uff0c\u5c06\u5f15\u7528\u4f5c\u4e3a \u7b2c\u4e00\u4e2a\u53c2\u6570 \uff0c\u4f20\u9012\u7ed9 __init__ \u65b9\u6cd5 \u91cd\u5199 __new__ \u65b9\u6cd5 \u7684\u4ee3\u7801\u975e\u5e38\u56fa\u5b9a\uff01 \u91cd\u5199 __new__ \u65b9\u6cd5 \u4e00\u5b9a\u8981 return super().__new__(cls) \u5426\u5219 Python \u7684\u89e3\u91ca\u5668 \u5f97\u4e0d\u5230 \u5206\u914d\u4e86\u7a7a\u95f4\u7684 \u5bf9\u8c61\u5f15\u7528 \uff0c \u5c31\u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u65b9\u6cd5 \u6ce8\u610f\uff1a __new__ \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u5728\u8c03\u7528\u65f6\u9700\u8981 \u4e3b\u52a8\u4f20\u9012 cls \u53c2\u6570 \u793a\u4f8b\u4ee3\u7801 class MusicPlayer ( object ): def __new__ ( cls , * args , ** kwargs ): # \u5982\u679c\u4e0d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\uff0c\u4f7f\u7528\u7684\u662f\u7236\u7c7b\u7684new\u65b9\u6cd5\u4e3a\u5bf9\u8c61\u5206\u914d\u7a7a\u95f4 return super () . __new__ ( cls ) def __init__ ( self ): print ( \"\u521d\u59cb\u5316\u97f3\u4e50\u64ad\u653e\u5bf9\u8c61\" ) player = MusicPlayer () print ( player )","title":"02. __new__ \u65b9\u6cd5"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#03-python","text":"\u5355\u4f8b \u2014\u2014 \u8ba9 \u7c7b \u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5728\u7cfb\u7edf\u4e2d \u53ea\u6709 \u552f\u4e00\u7684\u4e00\u4e2a\u5b9e\u4f8b \u5b9a\u4e49\u4e00\u4e2a \u7c7b\u5c5e\u6027 \uff0c\u521d\u59cb\u503c\u662f None \uff0c\u7528\u4e8e\u8bb0\u5f55 \u5355\u4f8b\u5bf9\u8c61\u7684\u5f15\u7528 \u91cd\u5199 __new__ \u65b9\u6cd5 \u5982\u679c \u7c7b\u5c5e\u6027 is None \uff0c\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u5206\u914d\u7a7a\u95f4\uff0c\u5e76\u5728\u7c7b\u5c5e\u6027\u4e2d\u8bb0\u5f55\u7ed3\u679c \u8fd4\u56de \u7c7b\u5c5e\u6027 \u4e2d\u8bb0\u5f55\u7684 \u5bf9\u8c61\u5f15\u7528 class MusicPlayer ( object ): # \u5b9a\u4e49\u7c7b\u5c5e\u6027\u8bb0\u5f55\u5355\u4f8b\u5bf9\u8c61\u5f15\u7528 instance = None def __new__ ( cls , * args , ** kwargs ): # 1. \u5224\u65ad\u7c7b\u5c5e\u6027\u662f\u5426\u5df2\u7ecf\u88ab\u8d4b\u503c if cls . instance is None : cls . instance = super () . __new__ ( cls ) #\u5426\u5219\u7684\u8bdd\u8fd4\u56de\u7684\u662f\u4e00\u5f00\u59cb\u7684\u5bf9\u8c61\u7684\u5730\u5740,\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u6bcf\u6b21\u90fd\u662f\u8fd9\u4e00\u4e2a\u5bf9\u8c61,\u5b9e\u73b0\u5355\u4f8b # 2. \u8fd4\u56de\u7c7b\u5c5e\u6027\u7684\u5355\u4f8b\u5f15\u7528 return cls . instance # \u521b\u5efa\u591a\u4e2a\u5bf9\u8c61 player1 = MusicPlayer () print ( player1 ) player2 = MusicPlayer () print ( player2 ) \u6267\u884c\u7ed3\u679c: < __main__ . MusicPlayer object at 0x7f48180d3940 > < __main__ . MusicPlayer object at 0x7f48180d3940 >","title":"03. Python \u4e2d\u7684\u5355\u4f8b"},{"location":"python\u5b66\u4e60/013python\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f/#_4","text":"\u5728\u6bcf\u6b21\u4f7f\u7528 \u7c7b\u540d() \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c Python \u7684\u89e3\u91ca\u5668\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528\u4e24\u4e2a\u65b9\u6cd5\uff1a __new__ \u5206\u914d\u7a7a\u95f4 __init__ \u5bf9\u8c61\u521d\u59cb\u5316 \u5728\u4e0a\u4e00\u5c0f\u8282\u5bf9 __new__ \u65b9\u6cd5\u6539\u9020\u4e4b\u540e\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f97\u5230 \u7b2c\u4e00\u6b21\u88ab\u521b\u5efa\u5bf9\u8c61\u7684\u5f15\u7528 \u4f46\u662f\uff1a \u521d\u59cb\u5316\u65b9\u6cd5\u8fd8\u4f1a\u88ab\u518d\u6b21\u8c03\u7528 \u9700\u6c42 \u8ba9 \u521d\u59cb\u5316\u52a8\u4f5c \u53ea\u88ab \u6267\u884c\u4e00\u6b21 \u89e3\u51b3\u529e\u6cd5 \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u5c5e\u6027 init_flag \u6807\u8bb0\u662f\u5426 \u6267\u884c\u8fc7\u521d\u59cb\u5316\u52a8\u4f5c \uff0c\u521d\u59cb\u503c\u4e3a False \u5728 __init__ \u65b9\u6cd5\u4e2d\uff0c\u5224\u65ad init_flag \uff0c\u5982\u679c\u4e3a False \u5c31\u6267\u884c\u521d\u59cb\u5316\u52a8\u4f5c \u7136\u540e\u5c06 init_flag \u8bbe\u7f6e\u4e3a True \u8fd9\u6837\uff0c\u518d\u6b21 \u81ea\u52a8 \u8c03\u7528 __init__ \u65b9\u6cd5\u65f6\uff0c \u521d\u59cb\u5316\u52a8\u4f5c\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u6267\u884c \u4e86 class MusicPlayer ( object ): # \u8bb0\u5f55\u7b2c\u4e00\u4e2a\u88ab\u521b\u5efa\u5bf9\u8c61\u7684\u5f15\u7528 instance = None # \u8bb0\u5f55\u662f\u5426\u6267\u884c\u8fc7\u521d\u59cb\u5316\u52a8\u4f5c init_flag = False def __new__ ( cls , * args , ** kwargs ): # 1. \u5224\u65ad\u7c7b\u5c5e\u6027\u662f\u5426\u662f\u7a7a\u5bf9\u8c61 if cls . instance is None : # 2. \u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u4e3a\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u5206\u914d\u7a7a\u95f4 cls . instance = super () . __new__ ( cls ) # 3. \u8fd4\u56de\u7c7b\u5c5e\u6027\u4fdd\u5b58\u7684\u5bf9\u8c61\u5f15\u7528 return cls . instance def __init__ ( self ): if not MusicPlayer . init_flag : print ( \"\u521d\u59cb\u5316\u97f3\u4e50\u64ad\u653e\u5668\" ) MusicPlayer . init_flag = True # \u521b\u5efa\u591a\u4e2a\u5bf9\u8c61 player1 = MusicPlayer () print ( player1 ) player2 = MusicPlayer () print ( player2 )","title":"\u53ea\u6267\u884c\u4e00\u6b21\u521d\u59cb\u5316\u5de5\u4f5c"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/","text":"\u5f02\u5e38 \u00b6 \u76ee\u6807 \u00b6 \u5f02\u5e38\u7684\u6982\u5ff5 \u6355\u83b7\u5f02\u5e38 \u5f02\u5e38\u7684\u4f20\u9012 \u629b\u51fa\u5f02\u5e38 01. \u5f02\u5e38\u7684\u6982\u5ff5 \u00b6 \u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u5982\u679c Python \u89e3\u91ca\u5668 \u9047\u5230 \u5230\u4e00\u4e2a\u9519\u8bef\uff0c \u4f1a\u505c\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u793a\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f \uff0c\u8fd9\u5c31\u662f \u5f02\u5e38 \u7a0b\u5e8f\u505c\u6b62\u6267\u884c\u5e76\u4e14\u63d0\u793a\u9519\u8bef\u4fe1\u606f \u8fd9\u4e2a\u52a8\u4f5c\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\uff1a \u629b\u51fa(raise)\u5f02\u5e38 \u7a0b\u5e8f\u5f00\u53d1\u65f6\uff0c\u5f88\u96be\u5c06 \u6240\u6709\u7684\u7279\u6b8a\u60c5\u51b5 \u90fd\u5904\u7406\u7684\u9762\u9762\u4ff1\u5230\uff0c\u901a\u8fc7 \u5f02\u5e38\u6355\u83b7 \u53ef\u4ee5\u9488\u5bf9\u7a81\u53d1\u4e8b\u4ef6\u505a\u96c6\u4e2d\u7684\u5904\u7406\uff0c\u4ece\u800c\u4fdd\u8bc1\u7a0b\u5e8f\u7684 \u7a33\u5b9a\u6027\u548c\u5065\u58ee\u6027 02. \u6355\u83b7\u5f02\u5e38 \u00b6 2.1 \u7b80\u5355\u7684\u6355\u83b7\u5f02\u5e38\u8bed\u6cd5 \u00b6 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5982\u679c \u5bf9\u67d0\u4e9b\u4ee3\u7801\u7684\u6267\u884c\u4e0d\u80fd\u786e\u5b9a\u662f\u5426\u6b63\u786e \uff0c\u53ef\u4ee5\u589e\u52a0 try(\u5c1d\u8bd5) \u6765 \u6355\u83b7\u5f02\u5e38 \u6355\u83b7\u5f02\u5e38\u6700\u7b80\u5355\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a try : \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 except : \u51fa\u73b0\u9519\u8bef\u7684\u5904\u7406 try \u5c1d\u8bd5 \uff0c\u4e0b\u65b9\u7f16\u5199\u8981\u5c1d\u8bd5\u4ee3\u7801\uff0c\u4e0d\u786e\u5b9a\u662f\u5426\u80fd\u591f\u6b63\u5e38\u6267\u884c\u7684\u4ee3\u7801 except \u5982\u679c\u4e0d\u662f \uff0c\u4e0b\u65b9\u7f16\u5199\u5c1d\u8bd5\u5931\u8d25\u7684\u4ee3\u7801 \u7b80\u5355\u5f02\u5e38\u6355\u83b7\u6f14\u7ec3 \u2014\u2014 \u8981\u6c42\u7528\u6237\u8f93\u5165\u6574\u6570 \u00b6 try : # \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6570\u5b57 num = int ( input ( \"\u8bf7\u8f93\u5165\u6570\u5b57\uff1a\" )) except : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6570\u5b57\" ) 2.2 \u9519\u8bef\u7c7b\u578b\u6355\u83b7 \u00b6 \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230 \u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38 \uff0c\u5e76\u4e14\u9700\u8981 \u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94 \uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u9700\u8981\u6355\u83b7\u9519\u8bef\u7c7b\u578b\u4e86 \u8bed\u6cd5\u5982\u4e0b\uff1a try : # \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 pass except \u9519\u8bef\u7c7b\u578b 1 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b1\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except ( \u9519\u8bef\u7c7b\u578b 2 , \u9519\u8bef\u7c7b\u578b 3 ): # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b2 \u548c 3\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) \u5f53 Python \u89e3\u91ca\u5668 \u629b\u51fa\u5f02\u5e38 \u65f6\uff0c \u6700\u540e\u4e00\u884c\u9519\u8bef\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u5c31\u662f\u9519\u8bef\u7c7b\u578b \u5f02\u5e38\u7c7b\u578b\u6355\u83b7\u6f14\u7ec3 \u2014\u2014 \u8981\u6c42\u7528\u6237\u8f93\u5165\u6574\u6570 \u00b6 \u9700\u6c42 \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570 \u4f7f\u7528 8 \u9664\u4ee5\u7528\u6237\u8f93\u5165\u7684\u6574\u6570\u5e76\u4e14\u8f93\u51fa try : num = int ( input ( \"\u8bf7\u8f93\u5165\u6574\u6570\uff1a\" )) result = 8 / num print ( result ) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except ZeroDivisionError : print ( \"\u9664 0 \u9519\u8bef\" ) \u8fd9\u91cc\u7684ValueError\u7b49\u9519\u8bef\u90fd\u662fpython\u6267\u884c\u65f6\u629b\u51fa\u7684\u5f02\u5e38 \u6355\u83b7\u672a\u77e5\u9519\u8bef \u00b6 \u5728\u5f00\u53d1\u65f6\uff0c \u8981\u9884\u5224\u5230\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef \uff0c\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\u7684 \u5982\u679c\u5e0c\u671b\u7a0b\u5e8f \u65e0\u8bba\u51fa\u73b0\u4efb\u4f55\u9519\u8bef \uff0c\u90fd\u4e0d\u4f1a\u56e0\u4e3a Python \u89e3\u91ca\u5668 \u629b\u51fa\u5f02\u5e38\u800c\u88ab\u7ec8\u6b62 \uff0c\u53ef\u4ee5\u518d\u589e\u52a0\u4e00\u4e2a except \u8bed\u6cd5\u5982\u4e0b\uff1a except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) 2.3 \u5f02\u5e38\u6355\u83b7\u5b8c\u6574\u8bed\u6cd5 \u00b6 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u5904\u7406\u590d\u6742\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5b8c\u6574\u7684\u5f02\u5e38\u8bed\u6cd5\u5982\u4e0b\uff1a \u63d0\u793a\uff1a \u6709\u5173\u5b8c\u6574\u8bed\u6cd5\u7684\u5e94\u7528\u573a\u666f\uff0c\u5728\u540e\u7eed\u5b66\u4e60\u4e2d\uff0c**\u7ed3\u5408\u5b9e\u9645\u7684\u6848\u4f8b**\u4f1a\u66f4\u597d\u7406\u89e3 \u73b0\u5728\u5148\u5bf9\u8fd9\u4e2a\u8bed\u6cd5\u7ed3\u6784\u6709\u4e2a\u5370\u8c61\u5373\u53ef try : # \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 pass except \u9519\u8bef\u7c7b\u578b 1 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b1\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except \u9519\u8bef\u7c7b\u578b 2 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b2\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except ( \u9519\u8bef\u7c7b\u578b 3 , \u9519\u8bef\u7c7b\u578b 4 ): # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b3 \u548c 4\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except Exception as result : # \u6253\u5370\u9519\u8bef\u4fe1\u606f print ( result ) else : # \u6ca1\u6709\u5f02\u5e38\u624d\u4f1a\u6267\u884c\u7684\u4ee3\u7801 pass finally : # \u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801 print ( \"\u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801\" ) else \u53ea\u6709\u5728\u6ca1\u6709\u5f02\u5e38\u65f6\u624d\u4f1a\u6267\u884c\u7684\u4ee3\u7801 finally \u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801 \u4e4b\u524d\u4e00\u4e2a\u6f14\u7ec3\u7684 \u5b8c\u6574\u6355\u83b7\u5f02\u5e38 \u7684\u4ee3\u7801\u5982\u4e0b\uff1a try : num = int ( input ( \"\u8bf7\u8f93\u5165\u6574\u6570\uff1a\" )) result = 8 / num print ( result ) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except ZeroDivisionError : print ( \"\u9664 0 \u9519\u8bef\" ) except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) else : print ( \"\u6b63\u5e38\u6267\u884c\" ) finally : print ( \"\u6267\u884c\u5b8c\u6210\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u6b63\u786e\" ) 03. \u5f02\u5e38\u7684\u4f20\u9012 \u00b6 \u5f02\u5e38\u7684\u4f20\u9012 \u2014\u2014 \u5f53 \u51fd\u6570/\u65b9\u6cd5 \u6267\u884c \u51fa\u73b0\u5f02\u5e38 \uff0c\u4f1a \u5c06\u5f02\u5e38\u4f20\u9012 \u7ed9 \u51fd\u6570/\u65b9\u6cd5 \u7684 \u8c03\u7528\u4e00\u65b9 \u5982\u679c \u4f20\u9012\u5230\u4e3b\u7a0b\u5e8f \uff0c\u4ecd\u7136 \u6ca1\u6709\u5f02\u5e38\u5904\u7406 \uff0c\u7a0b\u5e8f\u624d\u4f1a\u88ab\u7ec8\u6b62 \u63d0\u793a \u5728\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u5728\u4e3b\u51fd\u6570\u4e2d\u589e\u52a0 \u5f02\u5e38\u6355\u83b7 \u800c\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528\u7684\u5176\u4ed6\u51fd\u6570\uff0c\u53ea\u8981\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u4f20\u9012\u5230\u4e3b\u51fd\u6570\u7684 \u5f02\u5e38\u6355\u83b7 \u4e2d \u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5728\u4ee3\u7801\u4e2d\uff0c\u589e\u52a0\u5927\u91cf\u7684 \u5f02\u5e38\u6355\u83b7 \uff0c\u80fd\u591f\u4fdd\u8bc1\u4ee3\u7801\u7684\u6574\u6d01 \u9700\u6c42 \u5b9a\u4e49\u51fd\u6570 demo1() \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u5e76\u4e14\u8fd4\u56de \u5b9a\u4e49\u51fd\u6570 demo2() \u8c03\u7528 demo1() \u5728\u4e3b\u7a0b\u5e8f\u4e2d\u8c03\u7528 demo2() def demo1 (): return int ( input ( \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" )) def demo2 (): return demo1 () try : print ( demo2 ()) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) 04. \u629b\u51fa raise \u5f02\u5e38 \u00b6 4.1 \u5e94\u7528\u573a\u666f \u00b6 \u5728\u5f00\u53d1\u4e2d\uff0c\u9664\u4e86 \u4ee3\u7801\u6267\u884c\u51fa\u9519 Python \u89e3\u91ca\u5668\u4f1a \u629b\u51fa \u5f02\u5e38\u4e4b\u5916 \u8fd8\u53ef\u4ee5\u6839\u636e \u5e94\u7528\u7a0b\u5e8f \u7279\u6709\u7684\u4e1a\u52a1\u9700\u6c42 \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 \u793a\u4f8b \u63d0\u793a\u7528\u6237 \u8f93\u5165\u5bc6\u7801 \uff0c\u5982\u679c \u957f\u5ea6\u5c11\u4e8e 8 \uff0c\u629b\u51fa \u5f02\u5e38 \u6ce8\u610f \u5f53\u524d\u51fd\u6570 \u53ea\u8d1f\u8d23 \u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801\uff0c\u5982\u679c \u5bc6\u7801\u957f\u5ea6\u4e0d\u6b63\u786e\uff0c\u9700\u8981\u5176\u4ed6\u7684\u51fd\u6570\u8fdb\u884c\u989d\u5916\u5904\u7406 \u56e0\u6b64\u53ef\u4ee5 \u629b\u51fa\u5f02\u5e38 \uff0c\u7531\u5176\u4ed6\u9700\u8981\u5904\u7406\u7684\u51fd\u6570 \u6355\u83b7\u5f02\u5e38 4.2 \u629b\u51fa\u5f02\u5e38 \u00b6 Python \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a Exception \u5f02\u5e38\u7c7b \u5728\u5f00\u53d1\u65f6\uff0c\u5982\u679c\u6ee1\u8db3 \u7279\u5b9a\u4e1a\u52a1\u9700\u6c42\u65f6 \uff0c\u5e0c\u671b \u629b\u51fa\u5f02\u5e38 \uff0c\u53ef\u4ee5\uff1a \u521b\u5efa \u4e00\u4e2a Exception \u7684 \u5bf9\u8c61 \u4f7f\u7528 raise \u5173\u952e\u5b57 \u629b\u51fa \u5f02\u5e38\u5bf9\u8c61 \u9700\u6c42 \u5b9a\u4e49 input_password \u51fd\u6570\uff0c\u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801 \u5982\u679c\u7528\u6237\u8f93\u5165\u957f\u5ea6 < 8\uff0c\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u7528\u6237\u8f93\u5165\u957f\u5ea6 >=8\uff0c\u8fd4\u56de\u8f93\u5165\u7684\u5bc6\u7801 def input_password (): # 1. \u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801 pwd = input ( \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" ) # 2. \u5224\u65ad\u5bc6\u7801\u957f\u5ea6\uff0c\u5982\u679c\u957f\u5ea6 >= 8\uff0c\u8fd4\u56de\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801 if len ( pwd ) >= 8 : return pwd # 3. \u5bc6\u7801\u957f\u5ea6\u4e0d\u591f\uff0c\u9700\u8981\u629b\u51fa\u5f02\u5e38 # 1> \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61 - \u4f7f\u7528\u5f02\u5e38\u7684\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570 ex = Exception ( \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u591f\" ) # 2> \u629b\u51fa\u5f02\u5e38\u5bf9\u8c61 raise ex try : user_pwd = input_password () print ( user_pwd ) except Exception as result : print ( \"\u53d1\u73b0\u9519\u8bef\uff1a %s \" % result )","title":"014 python\u5f02\u5e38"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#_1","text":"","title":"\u5f02\u5e38"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#_2","text":"\u5f02\u5e38\u7684\u6982\u5ff5 \u6355\u83b7\u5f02\u5e38 \u5f02\u5e38\u7684\u4f20\u9012 \u629b\u51fa\u5f02\u5e38","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#01","text":"\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u5982\u679c Python \u89e3\u91ca\u5668 \u9047\u5230 \u5230\u4e00\u4e2a\u9519\u8bef\uff0c \u4f1a\u505c\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u793a\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f \uff0c\u8fd9\u5c31\u662f \u5f02\u5e38 \u7a0b\u5e8f\u505c\u6b62\u6267\u884c\u5e76\u4e14\u63d0\u793a\u9519\u8bef\u4fe1\u606f \u8fd9\u4e2a\u52a8\u4f5c\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\uff1a \u629b\u51fa(raise)\u5f02\u5e38 \u7a0b\u5e8f\u5f00\u53d1\u65f6\uff0c\u5f88\u96be\u5c06 \u6240\u6709\u7684\u7279\u6b8a\u60c5\u51b5 \u90fd\u5904\u7406\u7684\u9762\u9762\u4ff1\u5230\uff0c\u901a\u8fc7 \u5f02\u5e38\u6355\u83b7 \u53ef\u4ee5\u9488\u5bf9\u7a81\u53d1\u4e8b\u4ef6\u505a\u96c6\u4e2d\u7684\u5904\u7406\uff0c\u4ece\u800c\u4fdd\u8bc1\u7a0b\u5e8f\u7684 \u7a33\u5b9a\u6027\u548c\u5065\u58ee\u6027","title":"01. \u5f02\u5e38\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#02","text":"","title":"02. \u6355\u83b7\u5f02\u5e38"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#21","text":"\u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5982\u679c \u5bf9\u67d0\u4e9b\u4ee3\u7801\u7684\u6267\u884c\u4e0d\u80fd\u786e\u5b9a\u662f\u5426\u6b63\u786e \uff0c\u53ef\u4ee5\u589e\u52a0 try(\u5c1d\u8bd5) \u6765 \u6355\u83b7\u5f02\u5e38 \u6355\u83b7\u5f02\u5e38\u6700\u7b80\u5355\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a try : \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 except : \u51fa\u73b0\u9519\u8bef\u7684\u5904\u7406 try \u5c1d\u8bd5 \uff0c\u4e0b\u65b9\u7f16\u5199\u8981\u5c1d\u8bd5\u4ee3\u7801\uff0c\u4e0d\u786e\u5b9a\u662f\u5426\u80fd\u591f\u6b63\u5e38\u6267\u884c\u7684\u4ee3\u7801 except \u5982\u679c\u4e0d\u662f \uff0c\u4e0b\u65b9\u7f16\u5199\u5c1d\u8bd5\u5931\u8d25\u7684\u4ee3\u7801","title":"2.1 \u7b80\u5355\u7684\u6355\u83b7\u5f02\u5e38\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#_3","text":"try : # \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6570\u5b57 num = int ( input ( \"\u8bf7\u8f93\u5165\u6570\u5b57\uff1a\" )) except : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6570\u5b57\" )","title":"\u7b80\u5355\u5f02\u5e38\u6355\u83b7\u6f14\u7ec3 \u2014\u2014 \u8981\u6c42\u7528\u6237\u8f93\u5165\u6574\u6570"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#22","text":"\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230 \u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38 \uff0c\u5e76\u4e14\u9700\u8981 \u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94 \uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u9700\u8981\u6355\u83b7\u9519\u8bef\u7c7b\u578b\u4e86 \u8bed\u6cd5\u5982\u4e0b\uff1a try : # \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 pass except \u9519\u8bef\u7c7b\u578b 1 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b1\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except ( \u9519\u8bef\u7c7b\u578b 2 , \u9519\u8bef\u7c7b\u578b 3 ): # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b2 \u548c 3\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) \u5f53 Python \u89e3\u91ca\u5668 \u629b\u51fa\u5f02\u5e38 \u65f6\uff0c \u6700\u540e\u4e00\u884c\u9519\u8bef\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u5c31\u662f\u9519\u8bef\u7c7b\u578b","title":"2.2 \u9519\u8bef\u7c7b\u578b\u6355\u83b7"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#_4","text":"\u9700\u6c42 \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570 \u4f7f\u7528 8 \u9664\u4ee5\u7528\u6237\u8f93\u5165\u7684\u6574\u6570\u5e76\u4e14\u8f93\u51fa try : num = int ( input ( \"\u8bf7\u8f93\u5165\u6574\u6570\uff1a\" )) result = 8 / num print ( result ) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except ZeroDivisionError : print ( \"\u9664 0 \u9519\u8bef\" ) \u8fd9\u91cc\u7684ValueError\u7b49\u9519\u8bef\u90fd\u662fpython\u6267\u884c\u65f6\u629b\u51fa\u7684\u5f02\u5e38","title":"\u5f02\u5e38\u7c7b\u578b\u6355\u83b7\u6f14\u7ec3 \u2014\u2014 \u8981\u6c42\u7528\u6237\u8f93\u5165\u6574\u6570"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#_5","text":"\u5728\u5f00\u53d1\u65f6\uff0c \u8981\u9884\u5224\u5230\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef \uff0c\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\u7684 \u5982\u679c\u5e0c\u671b\u7a0b\u5e8f \u65e0\u8bba\u51fa\u73b0\u4efb\u4f55\u9519\u8bef \uff0c\u90fd\u4e0d\u4f1a\u56e0\u4e3a Python \u89e3\u91ca\u5668 \u629b\u51fa\u5f02\u5e38\u800c\u88ab\u7ec8\u6b62 \uff0c\u53ef\u4ee5\u518d\u589e\u52a0\u4e00\u4e2a except \u8bed\u6cd5\u5982\u4e0b\uff1a except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result )","title":"\u6355\u83b7\u672a\u77e5\u9519\u8bef"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#23","text":"\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u5904\u7406\u590d\u6742\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5b8c\u6574\u7684\u5f02\u5e38\u8bed\u6cd5\u5982\u4e0b\uff1a \u63d0\u793a\uff1a \u6709\u5173\u5b8c\u6574\u8bed\u6cd5\u7684\u5e94\u7528\u573a\u666f\uff0c\u5728\u540e\u7eed\u5b66\u4e60\u4e2d\uff0c**\u7ed3\u5408\u5b9e\u9645\u7684\u6848\u4f8b**\u4f1a\u66f4\u597d\u7406\u89e3 \u73b0\u5728\u5148\u5bf9\u8fd9\u4e2a\u8bed\u6cd5\u7ed3\u6784\u6709\u4e2a\u5370\u8c61\u5373\u53ef try : # \u5c1d\u8bd5\u6267\u884c\u7684\u4ee3\u7801 pass except \u9519\u8bef\u7c7b\u578b 1 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b1\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except \u9519\u8bef\u7c7b\u578b 2 : # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b2\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except ( \u9519\u8bef\u7c7b\u578b 3 , \u9519\u8bef\u7c7b\u578b 4 ): # \u9488\u5bf9\u9519\u8bef\u7c7b\u578b3 \u548c 4\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406 pass except Exception as result : # \u6253\u5370\u9519\u8bef\u4fe1\u606f print ( result ) else : # \u6ca1\u6709\u5f02\u5e38\u624d\u4f1a\u6267\u884c\u7684\u4ee3\u7801 pass finally : # \u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801 print ( \"\u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801\" ) else \u53ea\u6709\u5728\u6ca1\u6709\u5f02\u5e38\u65f6\u624d\u4f1a\u6267\u884c\u7684\u4ee3\u7801 finally \u65e0\u8bba\u662f\u5426\u6709\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u4ee3\u7801 \u4e4b\u524d\u4e00\u4e2a\u6f14\u7ec3\u7684 \u5b8c\u6574\u6355\u83b7\u5f02\u5e38 \u7684\u4ee3\u7801\u5982\u4e0b\uff1a try : num = int ( input ( \"\u8bf7\u8f93\u5165\u6574\u6570\uff1a\" )) result = 8 / num print ( result ) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except ZeroDivisionError : print ( \"\u9664 0 \u9519\u8bef\" ) except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result ) else : print ( \"\u6b63\u5e38\u6267\u884c\" ) finally : print ( \"\u6267\u884c\u5b8c\u6210\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u6b63\u786e\" )","title":"2.3 \u5f02\u5e38\u6355\u83b7\u5b8c\u6574\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#03","text":"\u5f02\u5e38\u7684\u4f20\u9012 \u2014\u2014 \u5f53 \u51fd\u6570/\u65b9\u6cd5 \u6267\u884c \u51fa\u73b0\u5f02\u5e38 \uff0c\u4f1a \u5c06\u5f02\u5e38\u4f20\u9012 \u7ed9 \u51fd\u6570/\u65b9\u6cd5 \u7684 \u8c03\u7528\u4e00\u65b9 \u5982\u679c \u4f20\u9012\u5230\u4e3b\u7a0b\u5e8f \uff0c\u4ecd\u7136 \u6ca1\u6709\u5f02\u5e38\u5904\u7406 \uff0c\u7a0b\u5e8f\u624d\u4f1a\u88ab\u7ec8\u6b62 \u63d0\u793a \u5728\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u5728\u4e3b\u51fd\u6570\u4e2d\u589e\u52a0 \u5f02\u5e38\u6355\u83b7 \u800c\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528\u7684\u5176\u4ed6\u51fd\u6570\uff0c\u53ea\u8981\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u4f20\u9012\u5230\u4e3b\u51fd\u6570\u7684 \u5f02\u5e38\u6355\u83b7 \u4e2d \u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5728\u4ee3\u7801\u4e2d\uff0c\u589e\u52a0\u5927\u91cf\u7684 \u5f02\u5e38\u6355\u83b7 \uff0c\u80fd\u591f\u4fdd\u8bc1\u4ee3\u7801\u7684\u6574\u6d01 \u9700\u6c42 \u5b9a\u4e49\u51fd\u6570 demo1() \u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u5e76\u4e14\u8fd4\u56de \u5b9a\u4e49\u51fd\u6570 demo2() \u8c03\u7528 demo1() \u5728\u4e3b\u7a0b\u5e8f\u4e2d\u8c03\u7528 demo2() def demo1 (): return int ( input ( \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" )) def demo2 (): return demo1 () try : print ( demo2 ()) except ValueError : print ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6574\u6570\" ) except Exception as result : print ( \"\u672a\u77e5\u9519\u8bef %s \" % result )","title":"03. \u5f02\u5e38\u7684\u4f20\u9012"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#04-raise","text":"","title":"04. \u629b\u51fa raise \u5f02\u5e38"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#41","text":"\u5728\u5f00\u53d1\u4e2d\uff0c\u9664\u4e86 \u4ee3\u7801\u6267\u884c\u51fa\u9519 Python \u89e3\u91ca\u5668\u4f1a \u629b\u51fa \u5f02\u5e38\u4e4b\u5916 \u8fd8\u53ef\u4ee5\u6839\u636e \u5e94\u7528\u7a0b\u5e8f \u7279\u6709\u7684\u4e1a\u52a1\u9700\u6c42 \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 \u793a\u4f8b \u63d0\u793a\u7528\u6237 \u8f93\u5165\u5bc6\u7801 \uff0c\u5982\u679c \u957f\u5ea6\u5c11\u4e8e 8 \uff0c\u629b\u51fa \u5f02\u5e38 \u6ce8\u610f \u5f53\u524d\u51fd\u6570 \u53ea\u8d1f\u8d23 \u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801\uff0c\u5982\u679c \u5bc6\u7801\u957f\u5ea6\u4e0d\u6b63\u786e\uff0c\u9700\u8981\u5176\u4ed6\u7684\u51fd\u6570\u8fdb\u884c\u989d\u5916\u5904\u7406 \u56e0\u6b64\u53ef\u4ee5 \u629b\u51fa\u5f02\u5e38 \uff0c\u7531\u5176\u4ed6\u9700\u8981\u5904\u7406\u7684\u51fd\u6570 \u6355\u83b7\u5f02\u5e38","title":"4.1 \u5e94\u7528\u573a\u666f"},{"location":"python\u5b66\u4e60/014python\u5f02\u5e38/#42","text":"Python \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a Exception \u5f02\u5e38\u7c7b \u5728\u5f00\u53d1\u65f6\uff0c\u5982\u679c\u6ee1\u8db3 \u7279\u5b9a\u4e1a\u52a1\u9700\u6c42\u65f6 \uff0c\u5e0c\u671b \u629b\u51fa\u5f02\u5e38 \uff0c\u53ef\u4ee5\uff1a \u521b\u5efa \u4e00\u4e2a Exception \u7684 \u5bf9\u8c61 \u4f7f\u7528 raise \u5173\u952e\u5b57 \u629b\u51fa \u5f02\u5e38\u5bf9\u8c61 \u9700\u6c42 \u5b9a\u4e49 input_password \u51fd\u6570\uff0c\u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801 \u5982\u679c\u7528\u6237\u8f93\u5165\u957f\u5ea6 < 8\uff0c\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u7528\u6237\u8f93\u5165\u957f\u5ea6 >=8\uff0c\u8fd4\u56de\u8f93\u5165\u7684\u5bc6\u7801 def input_password (): # 1. \u63d0\u793a\u7528\u6237\u8f93\u5165\u5bc6\u7801 pwd = input ( \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" ) # 2. \u5224\u65ad\u5bc6\u7801\u957f\u5ea6\uff0c\u5982\u679c\u957f\u5ea6 >= 8\uff0c\u8fd4\u56de\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801 if len ( pwd ) >= 8 : return pwd # 3. \u5bc6\u7801\u957f\u5ea6\u4e0d\u591f\uff0c\u9700\u8981\u629b\u51fa\u5f02\u5e38 # 1> \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61 - \u4f7f\u7528\u5f02\u5e38\u7684\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570 ex = Exception ( \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u591f\" ) # 2> \u629b\u51fa\u5f02\u5e38\u5bf9\u8c61 raise ex try : user_pwd = input_password () print ( user_pwd ) except Exception as result : print ( \"\u53d1\u73b0\u9519\u8bef\uff1a %s \" % result )","title":"4.2 \u629b\u51fa\u5f02\u5e38"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/","text":"\u6a21\u5757\u548c\u5305 \u00b6 \u76ee\u6807 \u00b6 \u6a21\u5757 \u5305 \u53d1\u5e03\u6a21\u5757 01. \u6a21\u5757 \u00b6 1.1 \u6a21\u5757\u7684\u6982\u5ff5 \u00b6 \u6a21\u5757\u662f Python \u7a0b\u5e8f\u67b6\u6784\u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5 \u6bcf\u4e00\u4e2a\u4ee5\u6269\u5c55\u540d py \u7ed3\u5c3e\u7684 Python \u6e90\u4ee3\u7801\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a \u6a21\u5757 \u6a21\u5757\u540d \u540c\u6837\u4e5f\u662f\u4e00\u4e2a \u6807\u8bc6\u7b26 \uff0c\u9700\u8981\u7b26\u5408\u6807\u8bc6\u7b26\u7684\u547d\u540d\u89c4\u5219 \u5728\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b \u90fd\u662f\u63d0\u4f9b\u7ed9\u5916\u754c\u76f4\u63a5\u4f7f\u7528\u7684 \u5de5\u5177 \u6a21\u5757 \u5c31\u597d\u6bd4\u662f \u5de5\u5177\u5305 \uff0c\u8981\u60f3\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5305\u4e2d\u7684\u5de5\u5177\uff0c\u5c31\u9700\u8981\u5148 \u5bfc\u5165 \u8fd9\u4e2a\u6a21\u5757 1.2 \u6a21\u5757\u7684\u4e24\u79cd\u5bfc\u5165\u65b9\u5f0f \u00b6 1\uff09import \u5bfc\u5165 \u00b6 import \u6a21\u5757\u540d 1 , \u6a21\u5757\u540d 2 \u63d0\u793a\uff1a\u5728\u5bfc\u5165\u6a21\u5757\u65f6\uff0c\u6bcf\u4e2a\u5bfc\u5165\u5e94\u8be5\u72ec\u5360\u4e00\u884c import \u6a21\u5757\u540d 1 import \u6a21\u5757\u540d 2 \u5bfc\u5165\u4e4b\u540e \u901a\u8fc7 \u6a21\u5757\u540d. \u4f7f\u7528 \u6a21\u5757\u63d0\u4f9b\u7684\u5de5\u5177 \u2014\u2014 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b \u4f7f\u7528 as \u6307\u5b9a\u6a21\u5757\u7684\u522b\u540d \u00b6 \u5982\u679c\u6a21\u5757\u7684\u540d\u5b57\u592a\u957f \uff0c\u53ef\u4ee5\u4f7f\u7528 as \u6307\u5b9a\u6a21\u5757\u7684\u540d\u79f0\uff0c\u4ee5\u65b9\u4fbf\u5728\u4ee3\u7801\u4e2d\u7684\u4f7f\u7528 import \u6a21\u5757\u540d 1 as \u6a21\u5757\u522b\u540d \u6ce8\u610f\uff1a \u6a21\u5757\u522b\u540d \u5e94\u8be5\u7b26\u5408 \u5927\u9a7c\u5cf0\u547d\u540d\u6cd5 2\uff09from...import \u5bfc\u5165 \u00b6 \u5982\u679c\u5e0c\u671b \u4ece\u67d0\u4e00\u4e2a\u6a21\u5757 \u4e2d\uff0c\u5bfc\u5165 \u90e8\u5206 \u5de5\u5177\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 from ... import \u7684\u65b9\u5f0f import \u6a21\u5757\u540d \u662f \u4e00\u6b21\u6027 \u628a\u6a21\u5757\u4e2d \u6240\u6709\u5de5\u5177\u5168\u90e8\u5bfc\u5165 \uff0c\u5e76\u4e14\u901a\u8fc7 \u6a21\u5757\u540d/\u522b\u540d \u8bbf\u95ee # \u4ece \u6a21\u5757 \u5bfc\u5165 \u67d0\u4e00\u4e2a\u5de5\u5177 from \u6a21\u5757\u540d 1 import \u5de5\u5177\u540d \u5bfc\u5165\u4e4b\u540e \u4e0d\u9700\u8981 \u901a\u8fc7 \u6a21\u5757\u540d. \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u6a21\u5757\u63d0\u4f9b\u7684\u5de5\u5177 \u2014\u2014 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b \u6ce8\u610f \u5982\u679c \u4e24\u4e2a\u6a21\u5757 \uff0c\u5b58\u5728 \u540c\u540d\u7684\u51fd\u6570 \uff0c\u90a3\u4e48 \u540e\u5bfc\u5165\u6a21\u5757\u7684\u51fd\u6570 \uff0c\u4f1a \u8986\u76d6\u6389\u5148\u5bfc\u5165\u7684\u51fd\u6570 \u5f00\u53d1\u65f6 import \u4ee3\u7801\u5e94\u8be5\u7edf\u4e00\u5199\u5728 \u4ee3\u7801\u7684\u9876\u90e8 \uff0c\u66f4\u5bb9\u6613\u53ca\u65f6\u53d1\u73b0\u51b2\u7a81 \u4e00\u65e6\u53d1\u73b0\u51b2\u7a81\uff0c\u53ef\u4ee5\u4f7f\u7528 as \u5173\u952e\u5b57 \u7ed9\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177\u8d77\u4e00\u4e2a\u522b\u540d from...import *\uff08\u77e5\u9053\uff09 \u00b6 # \u4ece \u6a21\u5757 \u5bfc\u5165 \u6240\u6709\u5de5\u5177 from \u6a21\u5757\u540d 1 import * \u6ce8\u610f \u8fd9\u79cd\u65b9\u5f0f\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u51fd\u6570\u91cd\u540d\u5e76\u6ca1\u6709\u4efb\u4f55\u7684\u63d0\u793a\uff0c\u51fa\u73b0\u95ee\u9898\u4e0d\u597d\u6392\u67e5 1.3 \u6a21\u5757\u7684\u641c\u7d22\u987a\u5e8f[\u6269\u5c55] \u00b6 Python \u7684\u89e3\u91ca\u5668\u5728 \u5bfc\u5165\u6a21\u5757 \u65f6\uff0c\u4f1a\uff1a \u641c\u7d22 \u5f53\u524d\u76ee\u5f55 \u6307\u5b9a\u6a21\u5757\u540d\u7684\u6587\u4ef6\uff0c \u5982\u679c\u6709\u5c31\u76f4\u63a5\u5bfc\u5165 \u5982\u679c\u6ca1\u6709\uff0c\u518d\u641c\u7d22 \u7cfb\u7edf\u76ee\u5f55 \u5728\u5f00\u53d1\u65f6\uff0c\u7ed9\u6587\u4ef6\u8d77\u540d\uff0c\u4e0d\u8981\u548c \u7cfb\u7edf\u7684\u6a21\u5757\u6587\u4ef6 \u91cd\u540d Python \u4e2d\u6bcf\u4e00\u4e2a\u6a21\u5757\u90fd\u6709\u4e00\u4e2a\u5185\u7f6e\u5c5e\u6027 __file__ \u53ef\u4ee5 \u67e5\u770b\u6a21\u5757 \u7684 \u5b8c\u6574\u8def\u5f84 \u793a\u4f8b import random print ( random . __file__ ) #\u6253\u5370\u8fd9\u4e2a\u5305\u7684\u6240\u5728\u6587\u4ef6\u8def\u5f84 # \u751f\u6210\u4e00\u4e2a 0\uff5e10 \u7684\u6570\u5b57 rand = random . randint ( 0 , 10 ) print ( rand ) \u6ce8\u610f\uff1a\u5982\u679c\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u5b58\u5728\u4e00\u4e2a random.py \u7684\u6587\u4ef6\uff0c\u7a0b\u5e8f\u5c31\u65e0\u6cd5\u6b63\u5e38\u6267\u884c\u4e86\uff01 \u8fd9\u4e2a\u65f6\u5019\uff0c Python \u7684\u89e3\u91ca\u5668\u4f1a \u52a0\u8f7d\u5f53\u524d\u76ee\u5f55 \u4e0b\u7684 random.py \u800c\u4e0d\u4f1a\u52a0\u8f7d \u7cfb\u7edf\u7684 random \u6a21\u5757 1.4 \u539f\u5219 \u2014\u2014 \u6bcf\u4e00\u4e2a\u6587\u4ef6\u90fd\u5e94\u8be5\u662f\u53ef\u4ee5\u88ab\u5bfc\u5165\u7684 \u00b6 \u4e00\u4e2a \u72ec\u7acb\u7684 Python \u6587\u4ef6 \u5c31\u662f\u4e00\u4e2a \u6a21\u5757 \u5728\u5bfc\u5165\u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u4e2d \u6240\u6709\u6ca1\u6709\u4efb\u4f55\u7f29\u8fdb\u7684\u4ee3\u7801 \u90fd\u4f1a\u88ab\u6267\u884c\u4e00\u904d\uff01 \u5b9e\u9645\u5f00\u53d1\u573a\u666f \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u90fd\u662f\u72ec\u7acb\u5f00\u53d1\u7684\uff0c\u5927\u591a\u90fd\u6709\u4e13\u4eba\u8d1f\u8d23 \u5f00\u53d1\u4eba\u5458 \u901a\u5e38\u4f1a\u5728 \u6a21\u5757\u4e0b\u65b9 \u589e\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801 \u4ec5\u5728\u6a21\u5757\u5185\u4f7f\u7528\uff0c\u800c\u88ab\u5bfc\u5165\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\u4e0d\u9700\u8981\u6267\u884c __name__ \u5c5e\u6027 \u00b6 __name__ \u5c5e\u6027\u53ef\u4ee5\u505a\u5230\uff0c\u6d4b\u8bd5\u6a21\u5757\u7684\u4ee3\u7801 \u53ea\u5728\u6d4b\u8bd5\u60c5\u51b5\u4e0b\u88ab\u8fd0\u884c \uff0c\u800c\u5728 \u88ab\u5bfc\u5165\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c \uff01 __name__ \u662f Python \u7684\u4e00\u4e2a\u5185\u7f6e\u5c5e\u6027\uff0c\u8bb0\u5f55\u7740\u4e00\u4e2a \u5b57\u7b26\u4e32 \u5982\u679c \u662f\u88ab\u5176\u4ed6\u6587\u4ef6\u5bfc\u5165\u7684 \uff0c __name__ \u5c31\u662f \u6a21\u5757\u540d \u5982\u679c \u662f\u5f53\u524d\u6267\u884c\u7684\u7a0b\u5e8f __name__ \u662f __main__ \u5728\u5f88\u591a Python \u6587\u4ef6\u4e2d\u90fd\u4f1a\u770b\u5230\u4ee5\u4e0b\u683c\u5f0f\u7684\u4ee3\u7801 \uff1a # \u5bfc\u5165\u6a21\u5757 # \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf # \u5b9a\u4e49\u7c7b # \u5b9a\u4e49\u51fd\u6570 # \u5728\u4ee3\u7801\u7684\u6700\u4e0b\u65b9 def main (): # ... pass # \u6839\u636e __name__ \u5224\u65ad\u662f\u5426\u6267\u884c\u4e0b\u65b9\u4ee3\u7801 if __name__ == \"__main__\" : main () \u4f8b: # \u5168\u5c40\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\uff0c\u6ce8\u610f\uff1a\u76f4\u63a5\u6267\u884c\u7684\u4ee3\u7801\u4e0d\u662f\u5411\u5916\u754c\u63d0\u4f9b\u7684\u5de5\u5177\uff01 def say_hello (): print ( \"\u4f60\u597d\u4f60\u597d\uff0c\u6211\u662f say hello\" ) # \u5982\u679c\u76f4\u63a5\u6267\u884c\u6a21\u5757\uff0c__main__ if __name__ == \"__main__\" : print ( __name__ ) # \u6587\u4ef6\u88ab\u5bfc\u5165\u65f6\uff0c\u80fd\u591f\u76f4\u63a5\u6267\u884c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u88ab\u6267\u884c\uff01 print ( \"\u5c0f\u660e\u5f00\u53d1\u7684\u6a21\u5757\" ) say_hello () \u76f4\u63a5\u6267\u884c\u65f6\u6267\u884c\u7ed3\u679c: __main__ \u5c0f\u660e\u5f00\u53d1\u7684\u6a21\u5757 \u4f60\u597d\u4f60\u597d\uff0c\u6211\u662f say hello \u522b\u7684\u6587\u4ef6\u4e2d\u5bfc\u5165: import hm_09___name__\u6a21\u5757 print(\"-\" * 50) \u6267\u884c\u7ed3\u679c:\u4e0d\u4f1a\u6267\u884c\u6a21\u5757\u7684\u6d4b\u8bd5\u4ee3\u7801 -------------------------------------------------- 02. \u5305\uff08Package\uff09 \u00b6 \u6982\u5ff5 \u00b6 \u5305 \u662f\u4e00\u4e2a \u5305\u542b\u591a\u4e2a\u6a21\u5757 \u7684 \u7279\u6b8a\u76ee\u5f55 \u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a \u7279\u6b8a\u7684\u6587\u4ef6 __init__.py \u5305\u540d\u7684 \u547d\u540d\u65b9\u5f0f \u548c\u53d8\u91cf\u540d\u4e00\u81f4\uff0c \u5c0f\u5199\u5b57\u6bcd + _ \u597d\u5904 \u4f7f\u7528 import \u5305\u540d \u53ef\u4ee5\u4e00\u6b21\u6027\u5bfc\u5165 \u5305 \u4e2d \u6240\u6709\u7684\u6a21\u5757 \u6848\u4f8b\u6f14\u7ec3 \u00b6 \u65b0\u5efa\u4e00\u4e2a hm_message \u7684 \u5305 \u5728\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e24\u4e2a\u6587\u4ef6 send_message \u548c receive_message \u5728 send_message \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a send \u51fd\u6570 \u5728 receive_message \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a receive \u51fd\u6570 \u5728\u5916\u90e8\u76f4\u63a5\u5bfc\u5165 hm_message \u7684\u5305 __init__.py \u00b6 \u8981\u5728\u5916\u754c\u4f7f\u7528 \u5305 \u4e2d\u7684\u6a21\u5757\uff0c\u9700\u8981\u5728 __init__.py \u4e2d\u6307\u5b9a \u5bf9\u5916\u754c\u63d0\u4f9b\u7684\u6a21\u5757\u5217\u8868 # \u4ece \u5f53\u524d\u76ee\u5f55 \u5bfc\u5165 \u6a21\u5757\u5217\u8868 from . import send_message from . import receive_message \u6848\u4f8b\u8be6\u60c5: \u00b6 \u76ee\u5f55: __init__\u6587\u4ef6: from . import send_message # \u4ece\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfc\u5165\u54ea\u4e9b\u6a21\u5757 from . import receive_message receive_message.py\u6587\u4ef6: def receive (): return \"\u8fd9\u662f\u6765\u81ea 100xx \u7684\u77ed\u4fe1\" send_message.py\u6587\u4ef6: def send ( text ): print ( \"\u6b63\u5728\u53d1\u9001 %s ...\" % text ) \u5bfc\u5305: import hm_message hm_message . send_message . send ( \"hello\" ) #\u5305\u540d.\u6a21\u5757\u540d.\u51fd\u6570\u540d txt = hm_message . receive_message . receive () print ( txt ) 03. \u53d1\u5e03\u6a21\u5757\uff08\u77e5\u9053\uff09 \u00b6 \u5982\u679c\u5e0c\u671b\u81ea\u5df1\u5f00\u53d1\u7684\u6a21\u5757\uff0c \u5206\u4eab \u7ed9\u5176\u4ed6\u4eba\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c 3.1 \u5236\u4f5c\u53d1\u5e03\u538b\u7f29\u5305\u6b65\u9aa4 \u00b6 1) \u521b\u5efa setup.py \u00b6 setup.py \u7684\u6587\u4ef6 from distutils.core import setup setup ( name = \"hm_message\" , # \u5305\u540d version = \"1.0\" , # \u7248\u672c description = \"itheima's \u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u6a21\u5757\" , # \u63cf\u8ff0\u4fe1\u606f long_description = \"\u5b8c\u6574\u7684\u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u6a21\u5757\" , # \u5b8c\u6574\u63cf\u8ff0\u4fe1\u606f author = \"itheima\" , # \u4f5c\u8005 author_email = \"itheima@itheima.com\" , # \u4f5c\u8005\u90ae\u7bb1 url = \"www.itheima.com\" , # \u4e3b\u9875 py_modules = [ \"hm_message.send_message\" , \"hm_message.receive_message\" ]) \u6709\u5173\u5b57\u5178\u53c2\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u53c2\u9605\u5b98\u65b9\u7f51\u7ad9\uff1a https://docs.python.org/2/distutils/apiref.html 2) \u6784\u5efa\u6a21\u5757 \u00b6 $ python3 setup.py build 3) \u751f\u6210\u53d1\u5e03\u538b\u7f29\u5305 \u00b6 $ python3 setup.py sdist \u6ce8\u610f\uff1a\u8981\u5236\u4f5c\u54ea\u4e2a\u7248\u672c\u7684\u6a21\u5757\uff0c\u5c31\u4f7f\u7528\u54ea\u4e2a\u7248\u672c\u7684\u89e3\u91ca\u5668\u6267\u884c\uff01 3.2 \u5b89\u88c5\u6a21\u5757 \u00b6 $ tar -zxvf hm_message-1.0.tar.gz $ sudo python3 setup.py install \u5378\u8f7d\u6a21\u5757 \u76f4\u63a5\u4ece\u5b89\u88c5\u76ee\u5f55\u4e0b\uff0c\u628a\u5b89\u88c5\u6a21\u5757\u7684 \u76ee\u5f55 \u5220\u9664\u5c31\u53ef\u4ee5 $ cd / usr / local / lib / python3 . 5 / dist - packages / $ sudo rm - r hm_message * 3.3 pip \u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757 \u00b6 \u7b2c\u4e09\u65b9\u6a21\u5757 \u901a\u5e38\u662f\u6307\u7531 \u77e5\u540d\u7684\u7b2c\u4e09\u65b9\u56e2\u961f \u5f00\u53d1\u7684 \u5e76\u4e14\u88ab \u7a0b\u5e8f\u5458\u5e7f\u6cdb\u4f7f\u7528 \u7684 Python \u5305 / \u6a21\u5757 \u4f8b\u5982 pygame \u5c31\u662f\u4e00\u5957\u975e\u5e38\u6210\u719f\u7684 \u6e38\u620f\u5f00\u53d1\u6a21\u5757 pip \u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\uff0c\u901a\u7528\u7684 Python \u5305\u7ba1\u7406\u5de5\u5177 \u63d0\u4f9b\u4e86\u5bf9 Python \u5305\u7684\u67e5\u627e\u3001\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u7b49\u529f\u80fd \u5b89\u88c5\u548c\u5378\u8f7d\u547d\u4ee4\u5982\u4e0b\uff1a # \u5c06\u6a21\u5757\u5b89\u88c5\u5230 Python 2.x \u73af\u5883 $ sudo pip install pygame $ sudo pip uninstall pygame # \u5c06\u6a21\u5757\u5b89\u88c5\u5230 Python 3.x \u73af\u5883 $ sudo pip3 install pygame $ sudo pip3 uninstall pygame \u5728 Mac \u4e0b\u5b89\u88c5 iPython \u00b6 $ sudo pip install ipython \u5728 Linux \u4e0b\u5b89\u88c5 iPython \u00b6 $ sudo apt install ipython $ sudo apt install ipython3","title":"015 python\u6a21\u5757\u548c\u5305"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#_1","text":"","title":"\u6a21\u5757\u548c\u5305"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#_2","text":"\u6a21\u5757 \u5305 \u53d1\u5e03\u6a21\u5757","title":"\u76ee\u6807"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#01","text":"","title":"01. \u6a21\u5757"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#11","text":"\u6a21\u5757\u662f Python \u7a0b\u5e8f\u67b6\u6784\u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5 \u6bcf\u4e00\u4e2a\u4ee5\u6269\u5c55\u540d py \u7ed3\u5c3e\u7684 Python \u6e90\u4ee3\u7801\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a \u6a21\u5757 \u6a21\u5757\u540d \u540c\u6837\u4e5f\u662f\u4e00\u4e2a \u6807\u8bc6\u7b26 \uff0c\u9700\u8981\u7b26\u5408\u6807\u8bc6\u7b26\u7684\u547d\u540d\u89c4\u5219 \u5728\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b \u90fd\u662f\u63d0\u4f9b\u7ed9\u5916\u754c\u76f4\u63a5\u4f7f\u7528\u7684 \u5de5\u5177 \u6a21\u5757 \u5c31\u597d\u6bd4\u662f \u5de5\u5177\u5305 \uff0c\u8981\u60f3\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5305\u4e2d\u7684\u5de5\u5177\uff0c\u5c31\u9700\u8981\u5148 \u5bfc\u5165 \u8fd9\u4e2a\u6a21\u5757","title":"1.1 \u6a21\u5757\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#12","text":"","title":"1.2 \u6a21\u5757\u7684\u4e24\u79cd\u5bfc\u5165\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#1import","text":"import \u6a21\u5757\u540d 1 , \u6a21\u5757\u540d 2 \u63d0\u793a\uff1a\u5728\u5bfc\u5165\u6a21\u5757\u65f6\uff0c\u6bcf\u4e2a\u5bfc\u5165\u5e94\u8be5\u72ec\u5360\u4e00\u884c import \u6a21\u5757\u540d 1 import \u6a21\u5757\u540d 2 \u5bfc\u5165\u4e4b\u540e \u901a\u8fc7 \u6a21\u5757\u540d. \u4f7f\u7528 \u6a21\u5757\u63d0\u4f9b\u7684\u5de5\u5177 \u2014\u2014 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b","title":"1\uff09import \u5bfc\u5165"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#as","text":"\u5982\u679c\u6a21\u5757\u7684\u540d\u5b57\u592a\u957f \uff0c\u53ef\u4ee5\u4f7f\u7528 as \u6307\u5b9a\u6a21\u5757\u7684\u540d\u79f0\uff0c\u4ee5\u65b9\u4fbf\u5728\u4ee3\u7801\u4e2d\u7684\u4f7f\u7528 import \u6a21\u5757\u540d 1 as \u6a21\u5757\u522b\u540d \u6ce8\u610f\uff1a \u6a21\u5757\u522b\u540d \u5e94\u8be5\u7b26\u5408 \u5927\u9a7c\u5cf0\u547d\u540d\u6cd5","title":"\u4f7f\u7528 as \u6307\u5b9a\u6a21\u5757\u7684\u522b\u540d"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#2fromimport","text":"\u5982\u679c\u5e0c\u671b \u4ece\u67d0\u4e00\u4e2a\u6a21\u5757 \u4e2d\uff0c\u5bfc\u5165 \u90e8\u5206 \u5de5\u5177\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 from ... import \u7684\u65b9\u5f0f import \u6a21\u5757\u540d \u662f \u4e00\u6b21\u6027 \u628a\u6a21\u5757\u4e2d \u6240\u6709\u5de5\u5177\u5168\u90e8\u5bfc\u5165 \uff0c\u5e76\u4e14\u901a\u8fc7 \u6a21\u5757\u540d/\u522b\u540d \u8bbf\u95ee # \u4ece \u6a21\u5757 \u5bfc\u5165 \u67d0\u4e00\u4e2a\u5de5\u5177 from \u6a21\u5757\u540d 1 import \u5de5\u5177\u540d \u5bfc\u5165\u4e4b\u540e \u4e0d\u9700\u8981 \u901a\u8fc7 \u6a21\u5757\u540d. \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u6a21\u5757\u63d0\u4f9b\u7684\u5de5\u5177 \u2014\u2014 \u5168\u5c40\u53d8\u91cf \u3001 \u51fd\u6570 \u3001 \u7c7b \u6ce8\u610f \u5982\u679c \u4e24\u4e2a\u6a21\u5757 \uff0c\u5b58\u5728 \u540c\u540d\u7684\u51fd\u6570 \uff0c\u90a3\u4e48 \u540e\u5bfc\u5165\u6a21\u5757\u7684\u51fd\u6570 \uff0c\u4f1a \u8986\u76d6\u6389\u5148\u5bfc\u5165\u7684\u51fd\u6570 \u5f00\u53d1\u65f6 import \u4ee3\u7801\u5e94\u8be5\u7edf\u4e00\u5199\u5728 \u4ee3\u7801\u7684\u9876\u90e8 \uff0c\u66f4\u5bb9\u6613\u53ca\u65f6\u53d1\u73b0\u51b2\u7a81 \u4e00\u65e6\u53d1\u73b0\u51b2\u7a81\uff0c\u53ef\u4ee5\u4f7f\u7528 as \u5173\u952e\u5b57 \u7ed9\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177\u8d77\u4e00\u4e2a\u522b\u540d","title":"2\uff09from...import \u5bfc\u5165"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#fromimport","text":"# \u4ece \u6a21\u5757 \u5bfc\u5165 \u6240\u6709\u5de5\u5177 from \u6a21\u5757\u540d 1 import * \u6ce8\u610f \u8fd9\u79cd\u65b9\u5f0f\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u51fd\u6570\u91cd\u540d\u5e76\u6ca1\u6709\u4efb\u4f55\u7684\u63d0\u793a\uff0c\u51fa\u73b0\u95ee\u9898\u4e0d\u597d\u6392\u67e5","title":"from...import *\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#13","text":"Python \u7684\u89e3\u91ca\u5668\u5728 \u5bfc\u5165\u6a21\u5757 \u65f6\uff0c\u4f1a\uff1a \u641c\u7d22 \u5f53\u524d\u76ee\u5f55 \u6307\u5b9a\u6a21\u5757\u540d\u7684\u6587\u4ef6\uff0c \u5982\u679c\u6709\u5c31\u76f4\u63a5\u5bfc\u5165 \u5982\u679c\u6ca1\u6709\uff0c\u518d\u641c\u7d22 \u7cfb\u7edf\u76ee\u5f55 \u5728\u5f00\u53d1\u65f6\uff0c\u7ed9\u6587\u4ef6\u8d77\u540d\uff0c\u4e0d\u8981\u548c \u7cfb\u7edf\u7684\u6a21\u5757\u6587\u4ef6 \u91cd\u540d Python \u4e2d\u6bcf\u4e00\u4e2a\u6a21\u5757\u90fd\u6709\u4e00\u4e2a\u5185\u7f6e\u5c5e\u6027 __file__ \u53ef\u4ee5 \u67e5\u770b\u6a21\u5757 \u7684 \u5b8c\u6574\u8def\u5f84 \u793a\u4f8b import random print ( random . __file__ ) #\u6253\u5370\u8fd9\u4e2a\u5305\u7684\u6240\u5728\u6587\u4ef6\u8def\u5f84 # \u751f\u6210\u4e00\u4e2a 0\uff5e10 \u7684\u6570\u5b57 rand = random . randint ( 0 , 10 ) print ( rand ) \u6ce8\u610f\uff1a\u5982\u679c\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u5b58\u5728\u4e00\u4e2a random.py \u7684\u6587\u4ef6\uff0c\u7a0b\u5e8f\u5c31\u65e0\u6cd5\u6b63\u5e38\u6267\u884c\u4e86\uff01 \u8fd9\u4e2a\u65f6\u5019\uff0c Python \u7684\u89e3\u91ca\u5668\u4f1a \u52a0\u8f7d\u5f53\u524d\u76ee\u5f55 \u4e0b\u7684 random.py \u800c\u4e0d\u4f1a\u52a0\u8f7d \u7cfb\u7edf\u7684 random \u6a21\u5757","title":"1.3 \u6a21\u5757\u7684\u641c\u7d22\u987a\u5e8f[\u6269\u5c55]"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#14","text":"\u4e00\u4e2a \u72ec\u7acb\u7684 Python \u6587\u4ef6 \u5c31\u662f\u4e00\u4e2a \u6a21\u5757 \u5728\u5bfc\u5165\u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u4e2d \u6240\u6709\u6ca1\u6709\u4efb\u4f55\u7f29\u8fdb\u7684\u4ee3\u7801 \u90fd\u4f1a\u88ab\u6267\u884c\u4e00\u904d\uff01 \u5b9e\u9645\u5f00\u53d1\u573a\u666f \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u90fd\u662f\u72ec\u7acb\u5f00\u53d1\u7684\uff0c\u5927\u591a\u90fd\u6709\u4e13\u4eba\u8d1f\u8d23 \u5f00\u53d1\u4eba\u5458 \u901a\u5e38\u4f1a\u5728 \u6a21\u5757\u4e0b\u65b9 \u589e\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801 \u4ec5\u5728\u6a21\u5757\u5185\u4f7f\u7528\uff0c\u800c\u88ab\u5bfc\u5165\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\u4e0d\u9700\u8981\u6267\u884c","title":"1.4 \u539f\u5219 \u2014\u2014 \u6bcf\u4e00\u4e2a\u6587\u4ef6\u90fd\u5e94\u8be5\u662f\u53ef\u4ee5\u88ab\u5bfc\u5165\u7684"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#__name__","text":"__name__ \u5c5e\u6027\u53ef\u4ee5\u505a\u5230\uff0c\u6d4b\u8bd5\u6a21\u5757\u7684\u4ee3\u7801 \u53ea\u5728\u6d4b\u8bd5\u60c5\u51b5\u4e0b\u88ab\u8fd0\u884c \uff0c\u800c\u5728 \u88ab\u5bfc\u5165\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c \uff01 __name__ \u662f Python \u7684\u4e00\u4e2a\u5185\u7f6e\u5c5e\u6027\uff0c\u8bb0\u5f55\u7740\u4e00\u4e2a \u5b57\u7b26\u4e32 \u5982\u679c \u662f\u88ab\u5176\u4ed6\u6587\u4ef6\u5bfc\u5165\u7684 \uff0c __name__ \u5c31\u662f \u6a21\u5757\u540d \u5982\u679c \u662f\u5f53\u524d\u6267\u884c\u7684\u7a0b\u5e8f __name__ \u662f __main__ \u5728\u5f88\u591a Python \u6587\u4ef6\u4e2d\u90fd\u4f1a\u770b\u5230\u4ee5\u4e0b\u683c\u5f0f\u7684\u4ee3\u7801 \uff1a # \u5bfc\u5165\u6a21\u5757 # \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf # \u5b9a\u4e49\u7c7b # \u5b9a\u4e49\u51fd\u6570 # \u5728\u4ee3\u7801\u7684\u6700\u4e0b\u65b9 def main (): # ... pass # \u6839\u636e __name__ \u5224\u65ad\u662f\u5426\u6267\u884c\u4e0b\u65b9\u4ee3\u7801 if __name__ == \"__main__\" : main () \u4f8b: # \u5168\u5c40\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\uff0c\u6ce8\u610f\uff1a\u76f4\u63a5\u6267\u884c\u7684\u4ee3\u7801\u4e0d\u662f\u5411\u5916\u754c\u63d0\u4f9b\u7684\u5de5\u5177\uff01 def say_hello (): print ( \"\u4f60\u597d\u4f60\u597d\uff0c\u6211\u662f say hello\" ) # \u5982\u679c\u76f4\u63a5\u6267\u884c\u6a21\u5757\uff0c__main__ if __name__ == \"__main__\" : print ( __name__ ) # \u6587\u4ef6\u88ab\u5bfc\u5165\u65f6\uff0c\u80fd\u591f\u76f4\u63a5\u6267\u884c\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u88ab\u6267\u884c\uff01 print ( \"\u5c0f\u660e\u5f00\u53d1\u7684\u6a21\u5757\" ) say_hello () \u76f4\u63a5\u6267\u884c\u65f6\u6267\u884c\u7ed3\u679c: __main__ \u5c0f\u660e\u5f00\u53d1\u7684\u6a21\u5757 \u4f60\u597d\u4f60\u597d\uff0c\u6211\u662f say hello \u522b\u7684\u6587\u4ef6\u4e2d\u5bfc\u5165: import hm_09___name__\u6a21\u5757 print(\"-\" * 50) \u6267\u884c\u7ed3\u679c:\u4e0d\u4f1a\u6267\u884c\u6a21\u5757\u7684\u6d4b\u8bd5\u4ee3\u7801 --------------------------------------------------","title":"__name__ \u5c5e\u6027"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#02-package","text":"","title":"02. \u5305\uff08Package\uff09"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#_3","text":"\u5305 \u662f\u4e00\u4e2a \u5305\u542b\u591a\u4e2a\u6a21\u5757 \u7684 \u7279\u6b8a\u76ee\u5f55 \u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a \u7279\u6b8a\u7684\u6587\u4ef6 __init__.py \u5305\u540d\u7684 \u547d\u540d\u65b9\u5f0f \u548c\u53d8\u91cf\u540d\u4e00\u81f4\uff0c \u5c0f\u5199\u5b57\u6bcd + _ \u597d\u5904 \u4f7f\u7528 import \u5305\u540d \u53ef\u4ee5\u4e00\u6b21\u6027\u5bfc\u5165 \u5305 \u4e2d \u6240\u6709\u7684\u6a21\u5757","title":"\u6982\u5ff5"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#_4","text":"\u65b0\u5efa\u4e00\u4e2a hm_message \u7684 \u5305 \u5728\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e24\u4e2a\u6587\u4ef6 send_message \u548c receive_message \u5728 send_message \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a send \u51fd\u6570 \u5728 receive_message \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a receive \u51fd\u6570 \u5728\u5916\u90e8\u76f4\u63a5\u5bfc\u5165 hm_message \u7684\u5305","title":"\u6848\u4f8b\u6f14\u7ec3"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#__init__py","text":"\u8981\u5728\u5916\u754c\u4f7f\u7528 \u5305 \u4e2d\u7684\u6a21\u5757\uff0c\u9700\u8981\u5728 __init__.py \u4e2d\u6307\u5b9a \u5bf9\u5916\u754c\u63d0\u4f9b\u7684\u6a21\u5757\u5217\u8868 # \u4ece \u5f53\u524d\u76ee\u5f55 \u5bfc\u5165 \u6a21\u5757\u5217\u8868 from . import send_message from . import receive_message","title":"__init__.py"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#_5","text":"\u76ee\u5f55: __init__\u6587\u4ef6: from . import send_message # \u4ece\u5f53\u524d\u76ee\u5f55\u4e0b\u5bfc\u5165\u54ea\u4e9b\u6a21\u5757 from . import receive_message receive_message.py\u6587\u4ef6: def receive (): return \"\u8fd9\u662f\u6765\u81ea 100xx \u7684\u77ed\u4fe1\" send_message.py\u6587\u4ef6: def send ( text ): print ( \"\u6b63\u5728\u53d1\u9001 %s ...\" % text ) \u5bfc\u5305: import hm_message hm_message . send_message . send ( \"hello\" ) #\u5305\u540d.\u6a21\u5757\u540d.\u51fd\u6570\u540d txt = hm_message . receive_message . receive () print ( txt )","title":"\u6848\u4f8b\u8be6\u60c5:"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#03","text":"\u5982\u679c\u5e0c\u671b\u81ea\u5df1\u5f00\u53d1\u7684\u6a21\u5757\uff0c \u5206\u4eab \u7ed9\u5176\u4ed6\u4eba\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c","title":"03. \u53d1\u5e03\u6a21\u5757\uff08\u77e5\u9053\uff09"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#31","text":"","title":"3.1 \u5236\u4f5c\u53d1\u5e03\u538b\u7f29\u5305\u6b65\u9aa4"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#1-setuppy","text":"setup.py \u7684\u6587\u4ef6 from distutils.core import setup setup ( name = \"hm_message\" , # \u5305\u540d version = \"1.0\" , # \u7248\u672c description = \"itheima's \u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u6a21\u5757\" , # \u63cf\u8ff0\u4fe1\u606f long_description = \"\u5b8c\u6574\u7684\u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u6a21\u5757\" , # \u5b8c\u6574\u63cf\u8ff0\u4fe1\u606f author = \"itheima\" , # \u4f5c\u8005 author_email = \"itheima@itheima.com\" , # \u4f5c\u8005\u90ae\u7bb1 url = \"www.itheima.com\" , # \u4e3b\u9875 py_modules = [ \"hm_message.send_message\" , \"hm_message.receive_message\" ]) \u6709\u5173\u5b57\u5178\u53c2\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u53c2\u9605\u5b98\u65b9\u7f51\u7ad9\uff1a https://docs.python.org/2/distutils/apiref.html","title":"1) \u521b\u5efa setup.py"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#2","text":"$ python3 setup.py build","title":"2) \u6784\u5efa\u6a21\u5757"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#3","text":"$ python3 setup.py sdist \u6ce8\u610f\uff1a\u8981\u5236\u4f5c\u54ea\u4e2a\u7248\u672c\u7684\u6a21\u5757\uff0c\u5c31\u4f7f\u7528\u54ea\u4e2a\u7248\u672c\u7684\u89e3\u91ca\u5668\u6267\u884c\uff01","title":"3) \u751f\u6210\u53d1\u5e03\u538b\u7f29\u5305"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#32","text":"$ tar -zxvf hm_message-1.0.tar.gz $ sudo python3 setup.py install \u5378\u8f7d\u6a21\u5757 \u76f4\u63a5\u4ece\u5b89\u88c5\u76ee\u5f55\u4e0b\uff0c\u628a\u5b89\u88c5\u6a21\u5757\u7684 \u76ee\u5f55 \u5220\u9664\u5c31\u53ef\u4ee5 $ cd / usr / local / lib / python3 . 5 / dist - packages / $ sudo rm - r hm_message *","title":"3.2 \u5b89\u88c5\u6a21\u5757"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#33-pip","text":"\u7b2c\u4e09\u65b9\u6a21\u5757 \u901a\u5e38\u662f\u6307\u7531 \u77e5\u540d\u7684\u7b2c\u4e09\u65b9\u56e2\u961f \u5f00\u53d1\u7684 \u5e76\u4e14\u88ab \u7a0b\u5e8f\u5458\u5e7f\u6cdb\u4f7f\u7528 \u7684 Python \u5305 / \u6a21\u5757 \u4f8b\u5982 pygame \u5c31\u662f\u4e00\u5957\u975e\u5e38\u6210\u719f\u7684 \u6e38\u620f\u5f00\u53d1\u6a21\u5757 pip \u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\uff0c\u901a\u7528\u7684 Python \u5305\u7ba1\u7406\u5de5\u5177 \u63d0\u4f9b\u4e86\u5bf9 Python \u5305\u7684\u67e5\u627e\u3001\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u7b49\u529f\u80fd \u5b89\u88c5\u548c\u5378\u8f7d\u547d\u4ee4\u5982\u4e0b\uff1a # \u5c06\u6a21\u5757\u5b89\u88c5\u5230 Python 2.x \u73af\u5883 $ sudo pip install pygame $ sudo pip uninstall pygame # \u5c06\u6a21\u5757\u5b89\u88c5\u5230 Python 3.x \u73af\u5883 $ sudo pip3 install pygame $ sudo pip3 uninstall pygame","title":"3.3 pip \u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#mac-ipython","text":"$ sudo pip install ipython","title":"\u5728 Mac \u4e0b\u5b89\u88c5 iPython"},{"location":"python\u5b66\u4e60/015python\u6a21\u5757\u548c\u5305/#linux-ipython","text":"$ sudo apt install ipython $ sudo apt install ipython3","title":"\u5728 Linux \u4e0b\u5b89\u88c5 iPython"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/","text":"1. \u521b\u5efa\u4e00\u4e2a2*2\u7684\u6570\u7ec4 \u00b6 import numpy as np #\u5bfc\u5305 a = np . zeros (( 2 , 2 )) #\u751f\u6210\u4e00\u4e2a2*2\u7684 print ( 'a\u7684\u7c7b\u578b: %s ' % type ( a )) print ( 'a\u6570\u7ec4\u7684\u7ed3\u679c: \\n %s ' % a ) \u6267\u884c\u7684\u7ed3\u679c: a\u7684\u7c7b\u578b : < class ' numpy . ndarray '> a\u6570\u7ec4\u7684\u7ed3\u679c : [[ 0. 0. ] [ 0. 0. ]] 2. random.uniform( ) \u51fd\u6570\u6559\u7a0b\u4e0e\u5b9e\u4f8b\u89e3\u6790 \u00b6 uniform( ) \u51fd\u6570\u8bf4\u660e random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728 [x,y] \u8303\u56f4\u5185\u3002 uniform( ) \u7684\u8bed\u6cd5\u4e0e\u53c2\u6570 2.1 \u8bed\u6cd5 \u00b6 # _*_ coding: utf-8 _*_ import random random . uniform ( x , y ) \u6216 # _*_ coding: utf-8 _*_ from random import uniform uniform ( x , y ) \u63d0\u793a\uff1auniform \u5305\u542b\u5728random\u5e93\u4e2d\uff0c\u9700\u8981\u4f7f\u7528\u65f6\u9700\u5bfc\u5165random\u5e93\u3002 2.2 \u53c2\u6570 \u00b6 x -- \u968f\u673a\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5305\u542b\u8be5\u503c\u3002 y -- \u968f\u673a\u6570\u7684\u6700\u5927\u503c\uff0c\u4e0d\u5305\u542b\u8be5\u503c\u3002 \u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u6570 \u5728numpy\u4e2d\u4e5f\u662f\u53ef\u4ee5\u8fdb\u884c\u8c03\u7528\u7684: \u00b6 \u4f8b\u5982: #2\u5229\u7528numpy\u7684random\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570 b = np . random . uniform ( 0 , 80 ) #\u751f\u6210\u4e00\u4e2a0-79\u7684\u968f\u673a\u6570 b = int ( b ) #\u5c06\u751f\u6210\u7684\u968f\u673a\u6570\u8f6c\u6362\u6210\u6574\u6570 print ( b ) \u6267\u884c\u7684\u7ed3\u679c: 55 3 \u8ba1\u7b97\u6570\u7ec4\u67d0\u4e24\u884c(\u5217\u540c\u7406)\u5bf9\u5e94\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u00b6 a = np . array ([ 1 , 2 ]) #\u7b2c\u4e00\u884c b = np . array ([ 2 , 3 ]) #\u7b2c\u4e8c\u884c print ( '\u7b2c\u4e00\u884c: ' , a ) print ( '\u7b2c\u4e8c\u884c: ' , b ) print ( '\u4e24\u884c\u5bf9\u5e94\u5217\u76f8\u51cf:' , a - b ) ju_li = np . sqrt ( sum (( a - b ) ** 2 )) print ( '\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u4e3a: ' , ju_li ) \u6267\u884c\u7684\u7ed3\u679c\u5982\u4e0b: \u7b2c\u4e00\u884c : [ 1 2 ] \u7b2c\u4e8c\u884c : [ 2 3 ] \u4e24\u884c\u5bf9\u5e94\u5217\u76f8\u51cf : [ - 1 - 1 ] \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u4e3a : 1.4142135623730951 numpy\u4e2d\u4ea7\u751f\u9ad8\u65af\u5206\u5e03\u7684\u566a\u58f0 \u4e00 \u5148\u770b\u4f1f\u5927\u7684\u9ad8\u65af\u5206\u5e03\uff08Gaussian Distribution\uff09\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff08probability density function\uff09\uff1a Gaussian Distribution(Normal Distribution)\u5176\u56fe\u5f62\u7279\u70b9\u4e3a\u4e2d\u95f4\u9ad8\uff0c\u4e24\u5934\u4f4e\uff0c\u662f\u949f\u5f62\u66f2\u7ebf(bell-shaped curve)\u3002\u5728\u9ad8\u65af\u5206\u5e03\u4e2d\uff0c\u4ee5\u6570\u5b66\u671f\u671b\u03bc\u8868\u793a\u949f\u578b\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff08\u4e5f\u5373\u66f2\u7ebf\u7684\u4f4d\u7f6e\uff09\uff0c\u800c\u6807\u51c6\u5dee\uff08standard deviation\uff09\u03c3\u8868\u5f81\u66f2\u7ebf\u7684\u79bb\u6563\u7a0b\u5ea6\u3002 \u968f\u673a\u53d8\u91cfX\u670d\u4ece\u6570\u5b66\u671f\u671b\u4e3a\u03bc\u3001\u65b9\u5dee\u4e3a\u03c3^2\u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4e3a\uff1a X = N ( \u03bc, \u03c3^2 ) \u5f53\u6570\u5b66\u671f\u671b\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u65f6\uff0c\u8be5\u5206\u5e03\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08standard normal distribution\uff09\u3002 \u9ad8\u65af\u5206\u5e03\u66f2\u7ebf\u7684\u7279\u5f81\uff1a \u5173\u4e8e\u03bc\u5bf9\u79f0\uff1b\u603b\u9762\u79ef\u4e3a1\uff1b\u5728\u03bc\u52a0\u51cf\u03c3\u5904\u4e3a\u62d0\u70b9\uff08\u5148\u5185\u7ffb\u540e\u5916\u7ffb\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u901a\u8fc7\u516c\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u03c3\u8d8a\u5927\uff0cx\u4f4d\u7f6e\u7684\u6982\u7387\u503c\u5c31\u8d8a\u5c0f\uff0c\u8bf4\u660e\u66f2\u7ebf\u8d8a\u5e73\u7f13\uff08\u77ee\u5c0f\uff09\uff1b\u800c\u5982\u679c\u03c3\u5c0f\uff0cx\u7684\u6982\u7387\u5c31\u5927\uff0c\u8bf4\u660e\u66f2\u7ebf\u662f\u7626\u9ad8\u7684\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u8f83\u96c6\u4e2d\u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7ea2\uff0c\u84dd\uff0c\u6a58\u9ec4\u8272\u66f2\u7ebf\u7684\u6570\u5b66\u671f\u671b\u57280\u70b9\uff0c\u4f46\u84dd\u8272\u7684\u65b9\u5dee\u4e3a0.2\uff0c\u6240\u4ee5\u5176\u6700\u4e3a\u9661\u5ced\uff0c\u800c\u6a58\u7ea2\u8272\u66f2\u7ebf\u7684\u65b9\u5dee\u4e3a5.0\uff0c\u8bc1\u660e\u5176\u5206\u5e03\u5f88\u5e7f\uff0c\u7531\u4e8e\u66f2\u7ebf\u7684\u6982\u7387\u603b\u548c\u4e3a1\uff0c\u6240\u4ee5\u82e5\u5176\u5206\u5e03\u5e7f\uff0c\u5219\u9ad8\u5ea6\u5fc5\u7136\u4f1a\u8f83\u4f4e\u3002\u7eff\u8272\u66f2\u7ebf\u7531\u4e8e\u5176\u6570\u5b66\u671f\u671b\u4e3a\uff0d2\uff0c\u6240\u4ee5\uff0c\u5728\u5176\u4ed6\u4e09\u6761\u66f2\u7ebf\u7684\u5de6\u4fa7\u3002 \u4e8c \u5bf9\u5e94\u4e8enumpy\u4e2d\uff1a numpy . random . normal ( loc = 0.0 , scale = 1.0 , size = None ) \u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a loc \uff1a float \u6b64\u6982\u7387\u5206\u5e03\u7684\u5747\u503c\uff08\u5bf9\u5e94\u7740\u6574\u4e2a\u5206\u5e03\u7684\u4e2d\u5fc3 centre \uff09 scale \uff1a float \u6b64\u6982\u7387\u5206\u5e03\u7684\u6807\u51c6\u5dee\uff08\u5bf9\u5e94\u4e8e\u5206\u5e03\u7684\u5bbd\u5ea6\uff0c scale\u8d8a\u5927\u8d8a\u77ee\u80d6 \uff0c scale\u8d8a\u5c0f \uff0c\u8d8a\u7626\u9ad8\uff09 size \uff1a int or tuple of ints \u8f93\u51fa\u7684 shape \uff0c\u9ed8\u8ba4\u4e3a None \uff0c\u53ea\u8f93\u51fa\u4e00\u4e2a\u503c \u6211\u4eec\u66f4\u7ecf\u5e38\u4f1a\u7528\u5230\u7684 np.random.rand(size) \u6240\u8c13\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08\u03bc=0,\u03c3=1\uff09\uff0c\u5bf9\u5e94\u4e8e np.random.normal(loc=0, scale=1, size) \u3002","title":"016 python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#1-22","text":"import numpy as np #\u5bfc\u5305 a = np . zeros (( 2 , 2 )) #\u751f\u6210\u4e00\u4e2a2*2\u7684 print ( 'a\u7684\u7c7b\u578b: %s ' % type ( a )) print ( 'a\u6570\u7ec4\u7684\u7ed3\u679c: \\n %s ' % a ) \u6267\u884c\u7684\u7ed3\u679c: a\u7684\u7c7b\u578b : < class ' numpy . ndarray '> a\u6570\u7ec4\u7684\u7ed3\u679c : [[ 0. 0. ] [ 0. 0. ]]","title":"1. \u521b\u5efa\u4e00\u4e2a2*2\u7684\u6570\u7ec4"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#2-randomuniform","text":"uniform( ) \u51fd\u6570\u8bf4\u660e random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728 [x,y] \u8303\u56f4\u5185\u3002 uniform( ) \u7684\u8bed\u6cd5\u4e0e\u53c2\u6570","title":"2. random.uniform( ) \u51fd\u6570\u6559\u7a0b\u4e0e\u5b9e\u4f8b\u89e3\u6790"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#21","text":"# _*_ coding: utf-8 _*_ import random random . uniform ( x , y ) \u6216 # _*_ coding: utf-8 _*_ from random import uniform uniform ( x , y ) \u63d0\u793a\uff1auniform \u5305\u542b\u5728random\u5e93\u4e2d\uff0c\u9700\u8981\u4f7f\u7528\u65f6\u9700\u5bfc\u5165random\u5e93\u3002","title":"2.1 \u8bed\u6cd5"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#22","text":"x -- \u968f\u673a\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5305\u542b\u8be5\u503c\u3002 y -- \u968f\u673a\u6570\u7684\u6700\u5927\u503c\uff0c\u4e0d\u5305\u542b\u8be5\u503c\u3002 \u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u6570","title":"2.2 \u53c2\u6570"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#numpy","text":"\u4f8b\u5982: #2\u5229\u7528numpy\u7684random\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570 b = np . random . uniform ( 0 , 80 ) #\u751f\u6210\u4e00\u4e2a0-79\u7684\u968f\u673a\u6570 b = int ( b ) #\u5c06\u751f\u6210\u7684\u968f\u673a\u6570\u8f6c\u6362\u6210\u6574\u6570 print ( b ) \u6267\u884c\u7684\u7ed3\u679c: 55","title":"\u5728numpy\u4e2d\u4e5f\u662f\u53ef\u4ee5\u8fdb\u884c\u8c03\u7528\u7684:"},{"location":"python\u5b66\u4e60/016python-numpy\u7684\u7b80\u5355\u5b9e\u7528\u6742\u4e71/#3","text":"a = np . array ([ 1 , 2 ]) #\u7b2c\u4e00\u884c b = np . array ([ 2 , 3 ]) #\u7b2c\u4e8c\u884c print ( '\u7b2c\u4e00\u884c: ' , a ) print ( '\u7b2c\u4e8c\u884c: ' , b ) print ( '\u4e24\u884c\u5bf9\u5e94\u5217\u76f8\u51cf:' , a - b ) ju_li = np . sqrt ( sum (( a - b ) ** 2 )) print ( '\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u4e3a: ' , ju_li ) \u6267\u884c\u7684\u7ed3\u679c\u5982\u4e0b: \u7b2c\u4e00\u884c : [ 1 2 ] \u7b2c\u4e8c\u884c : [ 2 3 ] \u4e24\u884c\u5bf9\u5e94\u5217\u76f8\u51cf : [ - 1 - 1 ] \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u4e3a : 1.4142135623730951 numpy\u4e2d\u4ea7\u751f\u9ad8\u65af\u5206\u5e03\u7684\u566a\u58f0 \u4e00 \u5148\u770b\u4f1f\u5927\u7684\u9ad8\u65af\u5206\u5e03\uff08Gaussian Distribution\uff09\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff08probability density function\uff09\uff1a Gaussian Distribution(Normal Distribution)\u5176\u56fe\u5f62\u7279\u70b9\u4e3a\u4e2d\u95f4\u9ad8\uff0c\u4e24\u5934\u4f4e\uff0c\u662f\u949f\u5f62\u66f2\u7ebf(bell-shaped curve)\u3002\u5728\u9ad8\u65af\u5206\u5e03\u4e2d\uff0c\u4ee5\u6570\u5b66\u671f\u671b\u03bc\u8868\u793a\u949f\u578b\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff08\u4e5f\u5373\u66f2\u7ebf\u7684\u4f4d\u7f6e\uff09\uff0c\u800c\u6807\u51c6\u5dee\uff08standard deviation\uff09\u03c3\u8868\u5f81\u66f2\u7ebf\u7684\u79bb\u6563\u7a0b\u5ea6\u3002 \u968f\u673a\u53d8\u91cfX\u670d\u4ece\u6570\u5b66\u671f\u671b\u4e3a\u03bc\u3001\u65b9\u5dee\u4e3a\u03c3^2\u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4e3a\uff1a X = N ( \u03bc, \u03c3^2 ) \u5f53\u6570\u5b66\u671f\u671b\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u65f6\uff0c\u8be5\u5206\u5e03\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08standard normal distribution\uff09\u3002 \u9ad8\u65af\u5206\u5e03\u66f2\u7ebf\u7684\u7279\u5f81\uff1a \u5173\u4e8e\u03bc\u5bf9\u79f0\uff1b\u603b\u9762\u79ef\u4e3a1\uff1b\u5728\u03bc\u52a0\u51cf\u03c3\u5904\u4e3a\u62d0\u70b9\uff08\u5148\u5185\u7ffb\u540e\u5916\u7ffb\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u901a\u8fc7\u516c\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u03c3\u8d8a\u5927\uff0cx\u4f4d\u7f6e\u7684\u6982\u7387\u503c\u5c31\u8d8a\u5c0f\uff0c\u8bf4\u660e\u66f2\u7ebf\u8d8a\u5e73\u7f13\uff08\u77ee\u5c0f\uff09\uff1b\u800c\u5982\u679c\u03c3\u5c0f\uff0cx\u7684\u6982\u7387\u5c31\u5927\uff0c\u8bf4\u660e\u66f2\u7ebf\u662f\u7626\u9ad8\u7684\uff0c\u6982\u7387\u5206\u5e03\u6bd4\u8f83\u96c6\u4e2d\u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7ea2\uff0c\u84dd\uff0c\u6a58\u9ec4\u8272\u66f2\u7ebf\u7684\u6570\u5b66\u671f\u671b\u57280\u70b9\uff0c\u4f46\u84dd\u8272\u7684\u65b9\u5dee\u4e3a0.2\uff0c\u6240\u4ee5\u5176\u6700\u4e3a\u9661\u5ced\uff0c\u800c\u6a58\u7ea2\u8272\u66f2\u7ebf\u7684\u65b9\u5dee\u4e3a5.0\uff0c\u8bc1\u660e\u5176\u5206\u5e03\u5f88\u5e7f\uff0c\u7531\u4e8e\u66f2\u7ebf\u7684\u6982\u7387\u603b\u548c\u4e3a1\uff0c\u6240\u4ee5\u82e5\u5176\u5206\u5e03\u5e7f\uff0c\u5219\u9ad8\u5ea6\u5fc5\u7136\u4f1a\u8f83\u4f4e\u3002\u7eff\u8272\u66f2\u7ebf\u7531\u4e8e\u5176\u6570\u5b66\u671f\u671b\u4e3a\uff0d2\uff0c\u6240\u4ee5\uff0c\u5728\u5176\u4ed6\u4e09\u6761\u66f2\u7ebf\u7684\u5de6\u4fa7\u3002 \u4e8c \u5bf9\u5e94\u4e8enumpy\u4e2d\uff1a numpy . random . normal ( loc = 0.0 , scale = 1.0 , size = None ) \u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a loc \uff1a float \u6b64\u6982\u7387\u5206\u5e03\u7684\u5747\u503c\uff08\u5bf9\u5e94\u7740\u6574\u4e2a\u5206\u5e03\u7684\u4e2d\u5fc3 centre \uff09 scale \uff1a float \u6b64\u6982\u7387\u5206\u5e03\u7684\u6807\u51c6\u5dee\uff08\u5bf9\u5e94\u4e8e\u5206\u5e03\u7684\u5bbd\u5ea6\uff0c scale\u8d8a\u5927\u8d8a\u77ee\u80d6 \uff0c scale\u8d8a\u5c0f \uff0c\u8d8a\u7626\u9ad8\uff09 size \uff1a int or tuple of ints \u8f93\u51fa\u7684 shape \uff0c\u9ed8\u8ba4\u4e3a None \uff0c\u53ea\u8f93\u51fa\u4e00\u4e2a\u503c \u6211\u4eec\u66f4\u7ecf\u5e38\u4f1a\u7528\u5230\u7684 np.random.rand(size) \u6240\u8c13\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08\u03bc=0,\u03c3=1\uff09\uff0c\u5bf9\u5e94\u4e8e np.random.normal(loc=0, scale=1, size) \u3002","title":"3 \u8ba1\u7b97\u6570\u7ec4\u67d0\u4e24\u884c(\u5217\u540c\u7406)\u5bf9\u5e94\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb"},{"location":"python\u5b66\u4e60/017python\u968f\u8bb0/","text":"Python enumerate() \u51fd\u6570: \u00b6 enumerate() \u51fd\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u53ef\u904d\u5386\u7684\u6570\u636e\u5bf9\u8c61(\u5982\u5217\u8868\u3001\u5143\u7ec4\u6216\u5b57\u7b26\u4e32)\u7ec4\u5408\u4e3a\u4e00\u4e2a\u7d22\u5f15\u5e8f\u5217\uff0c\u540c\u65f6\u5217\u51fa\u6570\u636e\u548c\u6570\u636e\u4e0b\u6807\uff0c\u4e00\u822c\u7528\u5728 for \u5faa\u73af\u5f53\u4e2d\u3002 Python 2.3. \u4ee5\u4e0a\u7248\u672c\u53ef\u7528\uff0c2.6 \u6dfb\u52a0 start \u53c2\u6570\u3002 \u8bed\u6cd5 \u4ee5\u4e0b\u662f enumerate() \u65b9\u6cd5\u7684\u8bed\u6cd5: enumerate ( sequence , [ start = 0 ]) \u53c2\u6570 sequence -- \u4e00\u4e2a\u5e8f\u5217\u3001\u8fed\u4ee3\u5668\u6216\u5176\u4ed6\u652f\u6301\u8fed\u4ee3\u5bf9\u8c61\u3002 start -- \u4e0b\u6807\u8d77\u59cb\u4f4d\u7f6e\u3002 \u8fd4\u56de\u503c: \u8fd4\u56de enumerate(\u679a\u4e3e) \u5bf9\u8c61\u3002 \u5b9e\u4f8b \u4ee5\u4e0b\u5c55\u793a\u4e86\u4f7f\u7528 enumerate() \u65b9\u6cd5\u7684\u5b9e\u4f8b\uff1a >>>seasons = ['Spring', 'Summer', 'Fall', 'Winter'] #\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868 >>> list(enumerate(seasons)) #\u53d8\u6210\u679a\u4e3e\u5bf9\u8c61 [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')] >>> list(enumerate(seasons, start=1)) # \u4e0b\u6807\u4ece 1 \u5f00\u59cb [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')] \u7528\u4e8e**for**\u5faa\u73af\u7684\u5bf9\u6bd4 \u00b6 \u666e\u901a\u7684 for \u5faa\u73af >>> i = 0 >>> seq = [ 'one' , 'two' , 'three' ] >>> for element in seq : ... print ( i , seq [ i ]) ... i += 1 ... 0 one 1 two 2 three \u4f7f\u7528enumberate: >>> seq = [ 'one' , 'two' , 'three' ] >>> for i , element in enumerate ( seq ): #\u8fd4\u56de\u7ed9i,element\u7684\u662f\u4e00\u4e2a\u7d22\u5f15\u52a0\u6570\u636e ... print ( i , element ) ... 0 one 1 two 2 three Python upper()\u65b9\u6cd5 \u00b6 \u63cf\u8ff0 Python upper() \u65b9\u6cd5\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd\u3002 \u8bed\u6cd5 upper()\u65b9\u6cd5\u8bed\u6cd5\uff1a str . upper () \u53c2\u6570 NA\u3002 \u8fd4\u56de\u503c \u8fd4\u56de\u5c0f\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u3002 \u5b9e\u4f8b \u4ee5\u4e0b\u5b9e\u4f8b\u5c55\u793a\u4e86 upper()\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a #!/usr/bin/python str = \"this is string example....wow!!!\" ; print ( \"str.upper() : \" , str . upper ()) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a str . upper () : THIS IS STRING EXAMPLE .... WOW !!!","title":"017 python\u968f\u8bb0"},{"location":"python\u5b66\u4e60/017python\u968f\u8bb0/#python-enumerate","text":"enumerate() \u51fd\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u53ef\u904d\u5386\u7684\u6570\u636e\u5bf9\u8c61(\u5982\u5217\u8868\u3001\u5143\u7ec4\u6216\u5b57\u7b26\u4e32)\u7ec4\u5408\u4e3a\u4e00\u4e2a\u7d22\u5f15\u5e8f\u5217\uff0c\u540c\u65f6\u5217\u51fa\u6570\u636e\u548c\u6570\u636e\u4e0b\u6807\uff0c\u4e00\u822c\u7528\u5728 for \u5faa\u73af\u5f53\u4e2d\u3002 Python 2.3. \u4ee5\u4e0a\u7248\u672c\u53ef\u7528\uff0c2.6 \u6dfb\u52a0 start \u53c2\u6570\u3002 \u8bed\u6cd5 \u4ee5\u4e0b\u662f enumerate() \u65b9\u6cd5\u7684\u8bed\u6cd5: enumerate ( sequence , [ start = 0 ]) \u53c2\u6570 sequence -- \u4e00\u4e2a\u5e8f\u5217\u3001\u8fed\u4ee3\u5668\u6216\u5176\u4ed6\u652f\u6301\u8fed\u4ee3\u5bf9\u8c61\u3002 start -- \u4e0b\u6807\u8d77\u59cb\u4f4d\u7f6e\u3002 \u8fd4\u56de\u503c: \u8fd4\u56de enumerate(\u679a\u4e3e) \u5bf9\u8c61\u3002 \u5b9e\u4f8b \u4ee5\u4e0b\u5c55\u793a\u4e86\u4f7f\u7528 enumerate() \u65b9\u6cd5\u7684\u5b9e\u4f8b\uff1a >>>seasons = ['Spring', 'Summer', 'Fall', 'Winter'] #\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868 >>> list(enumerate(seasons)) #\u53d8\u6210\u679a\u4e3e\u5bf9\u8c61 [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')] >>> list(enumerate(seasons, start=1)) # \u4e0b\u6807\u4ece 1 \u5f00\u59cb [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]","title":"Python enumerate() \u51fd\u6570:"},{"location":"python\u5b66\u4e60/017python\u968f\u8bb0/#for","text":"\u666e\u901a\u7684 for \u5faa\u73af >>> i = 0 >>> seq = [ 'one' , 'two' , 'three' ] >>> for element in seq : ... print ( i , seq [ i ]) ... i += 1 ... 0 one 1 two 2 three \u4f7f\u7528enumberate: >>> seq = [ 'one' , 'two' , 'three' ] >>> for i , element in enumerate ( seq ): #\u8fd4\u56de\u7ed9i,element\u7684\u662f\u4e00\u4e2a\u7d22\u5f15\u52a0\u6570\u636e ... print ( i , element ) ... 0 one 1 two 2 three","title":"\u7528\u4e8e**for**\u5faa\u73af\u7684\u5bf9\u6bd4"},{"location":"python\u5b66\u4e60/017python\u968f\u8bb0/#python-upper","text":"\u63cf\u8ff0 Python upper() \u65b9\u6cd5\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd\u3002 \u8bed\u6cd5 upper()\u65b9\u6cd5\u8bed\u6cd5\uff1a str . upper () \u53c2\u6570 NA\u3002 \u8fd4\u56de\u503c \u8fd4\u56de\u5c0f\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u3002 \u5b9e\u4f8b \u4ee5\u4e0b\u5b9e\u4f8b\u5c55\u793a\u4e86 upper()\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a #!/usr/bin/python str = \"this is string example....wow!!!\" ; print ( \"str.upper() : \" , str . upper ()) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a str . upper () : THIS IS STRING EXAMPLE .... WOW !!!","title":"Python upper()\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/018-python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868___\u4e3a\u4e2a\u4eba\u65b9\u4fbf\u67e5\u770b\u8f6c\u8f7d/","text":"14\u5f20\u901f\u67e5\u8868\uff0c\u5e26\u4f60\u73a9\u8f6c Python \u6570\u636e\u79d1\u5b66 \u00b6 \u8bd1\u81ea DataCamp \u7684\u901f\u67e5\u8868\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b \u82f1\u6587\u539f\u7248 \u3002 \u6b22\u8fce\u626b\u63cf\u4e8c\u7ef4\u7801\u5173\u6ce8\u6211\u7684 \u5446\u9e1f\u7684Python\u6570\u636e\u5206\u6790 \u516c\u4f17\u53f7\uff0c\u867d\u7136\u73b0\u5728\u5185\u5bb9\u8fd8\u6bd4\u8f83\u5c11\uff0c\u4f46\u6211\u4f1a\u4e0d\u65ad\u589e\u52a0\u7684\u3002 \u4e00\u3001 Python \u57fa\u7840\u7cfb\u5217 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Python \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - \u5bfc\u5165\u6570\u636e Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Jupyter Notebook \u4e8c\u3001 \u6570\u636e\u5904\u7406\u7cfb\u5217\uff08Numpy\u3001Pandas \u53ca SciPy\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Numpy \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Pandas \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Pandas \u8fdb\u9636 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - SciPy \u4e09\u3001 \u53ef\u89c6\u5316\u7cfb\u5217\uff08Matplotlib\u3001Bokeh\u3001Seaborn\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Matplotlib Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Bokeh Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Seaborn \u56db\u3001 \u673a\u5668\u5b66\u4e60\u7cfb\u5217\uff08Keras\u3001Scikit-learn\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Keras Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Scikit-learn \u4e94\u3001 PySpark\u7cfb\u5217\uff08SQL\u4e0eRDD\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Spark SQL \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Spark RDD \u57fa\u7840 \u5982\u679c\u559c\u6b22\u672c\u6587\uff0c\u656c\u8bf7\u5173\u6ce8\u6211\u7684\u7b80\u4e66\u4e13\u9898 \u5446\u9e1f\u7684Python\u6570\u636e\u5206\u6790 \u611f\u8c22**\u5929\u5584\u667a\u80fd**\u7684**Python\u7231\u597d\u8005\u793e\u533a**\u516c\u4f17\u53f7\u4e00\u76f4\u4ee5\u6765\u5bf9\u6211\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u4e5f\u5927\u529b\u63a8\u8350\uff0c\u662f\u6211\u5b66\u4e60\u5165\u95e8 Python \u6570\u636e\u5206\u6790\u5165\u95e8\u7684\u5f15\u8def\u8005\uff0c\u6b22\u8fce\u5173\u6ce8\uff01","title":"018 python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868___\u4e3a\u4e2a\u4eba\u65b9\u4fbf\u67e5\u770b\u8f6c\u8f7d"},{"location":"python\u5b66\u4e60/018-python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868___\u4e3a\u4e2a\u4eba\u65b9\u4fbf\u67e5\u770b\u8f6c\u8f7d/#14-python","text":"\u8bd1\u81ea DataCamp \u7684\u901f\u67e5\u8868\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b \u82f1\u6587\u539f\u7248 \u3002 \u6b22\u8fce\u626b\u63cf\u4e8c\u7ef4\u7801\u5173\u6ce8\u6211\u7684 \u5446\u9e1f\u7684Python\u6570\u636e\u5206\u6790 \u516c\u4f17\u53f7\uff0c\u867d\u7136\u73b0\u5728\u5185\u5bb9\u8fd8\u6bd4\u8f83\u5c11\uff0c\u4f46\u6211\u4f1a\u4e0d\u65ad\u589e\u52a0\u7684\u3002 \u4e00\u3001 Python \u57fa\u7840\u7cfb\u5217 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Python \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - \u5bfc\u5165\u6570\u636e Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Jupyter Notebook \u4e8c\u3001 \u6570\u636e\u5904\u7406\u7cfb\u5217\uff08Numpy\u3001Pandas \u53ca SciPy\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Numpy \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Pandas \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Pandas \u8fdb\u9636 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - SciPy \u4e09\u3001 \u53ef\u89c6\u5316\u7cfb\u5217\uff08Matplotlib\u3001Bokeh\u3001Seaborn\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Matplotlib Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Bokeh Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Seaborn \u56db\u3001 \u673a\u5668\u5b66\u4e60\u7cfb\u5217\uff08Keras\u3001Scikit-learn\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Keras Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Scikit-learn \u4e94\u3001 PySpark\u7cfb\u5217\uff08SQL\u4e0eRDD\uff09 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Spark SQL \u57fa\u7840 Python\u6570\u636e\u79d1\u5b66\u901f\u67e5\u8868 - Spark RDD \u57fa\u7840 \u5982\u679c\u559c\u6b22\u672c\u6587\uff0c\u656c\u8bf7\u5173\u6ce8\u6211\u7684\u7b80\u4e66\u4e13\u9898 \u5446\u9e1f\u7684Python\u6570\u636e\u5206\u6790 \u611f\u8c22**\u5929\u5584\u667a\u80fd**\u7684**Python\u7231\u597d\u8005\u793e\u533a**\u516c\u4f17\u53f7\u4e00\u76f4\u4ee5\u6765\u5bf9\u6211\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u4e5f\u5927\u529b\u63a8\u8350\uff0c\u662f\u6211\u5b66\u4e60\u5165\u95e8 Python \u6570\u636e\u5206\u6790\u5165\u95e8\u7684\u5f15\u8def\u8005\uff0c\u6b22\u8fce\u5173\u6ce8\uff01","title":"14\u5f20\u901f\u67e5\u8868\uff0c\u5e26\u4f60\u73a9\u8f6c Python \u6570\u636e\u79d1\u5b66"},{"location":"python\u5b66\u4e60/019python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528/","text":"\u4e00\u76f4\u82e6\u4e8epython\u5728\u6267\u884cfor\u5faa\u73af\u7684\u8fc7\u7a0b\u4e2d\u53ea\u80fd\u4f7f\u7528print(i)\u6253\u5370\u6267\u884c\u7684\u6548\u679c\u662f\u4ec0\u4e48\u6837\u5b50,\u53ef\u662f\u771f\u7684\u4e0d\u65b9\u4fbf \u4eca\u5929\u5c31\u6765\u8bd5\u4e00\u4e0bpython\u4e2d\u8fd9\u4e2a\u53ef\u4ee5\u663e\u793a\u8fdb\u5ea6\u7684 tqdm \u5305 tqdm \u662f\u4e00\u4e2a\u663e\u793a\u5de5\u4f5c\u8fdb\u5ea6\u7684\u6a21\u5757,\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5728\u5b89\u88c5python\u7684\u6269\u5c55\u5305\u7684\u4f7f\u7528\u5e38\u89c1\u7684\u8fdb\u5ea6\u6761 \u8bed\u6cd5\uff1a tqdm(iterator) \u62ec\u53f7\u91cc\u9762\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61 \u00b6 \u9ed8\u8ba4\u8bbe\u7f6e\u6253\u5370\u8fdb\u5ea6 \u00b6 from tqdm import tqdm import time for i in tqdm ( range ( 10000 )): #\u5c06range\u8fed\u4ee3\u5668\u653e\u5230\u4e86tqdm\u4e2d time . sleep ( 0.01 ) \u770b\u4e00\u4e0b\u6548\u679c\u662f\u8fd9\u6837\u7684: \u81ea\u5b9a\u4e49\u683c\u5f0f \u00b6 from tqdm import tqdm import time pbar = tqdm ([ \"a\" , \"b\" , \"c\" , \"d\" ]) #\u9996\u5148\u4f7f\u7528tqdm\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fed\u4ee3\u5668 for char in pbar : time . sleep ( 5 ) #\u8bbe\u7f6e\u8fdb\u5ea6\u663e\u793a\u7684\u540d\u79f0\u4f7f\u7528\u7684\u662fset_description(\u8bbe\u7f6e\u63cf\u8ff0):\u8fdb\u7a0b\u7684\u540d\u5b57. pbar . set_description ( \"processing {}\" . format ( char )) \u6548\u679c\u662f\u8fd9\u6837\u5b50\u7684: \u6ce8\u610f\u540d\u79f0\u7684\u53d8\u5316 \u624b\u52a8\u63a7\u5236\u66f4\u65b0\u7684\u8fdb\u5ea6\uff08\u6309\u65f6\u95f4\u63a7\u5236\uff09 \u00b6 from tqdm import tqdm import time #\u653e\u5230with\u4e2d\u8bbe\u7f6e\u603b\u5f97\u8fdb\u5ea6\u662f100, #\u7136\u540efor\u5faa\u73af\u603b\u5171\u8fed\u4ee320,\u90a3\u4e48\u5c31\u8ba9tqdm\u6bcf\u6b21\u66f4\u65b0\u8fdb\u5ea6\u4e3a5\u5faa\u73af\u5b8c\u4e86\u8fdb\u5ea6\u5c31\u6210\u4e3a100 with tqdm ( total = 100 ) as pbar : for i in range ( 20 ): time . sleep ( 0.2 ) pbar . update ( 5 ) \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f from tqdm import tqdm import time # \u6216\u8005\u8fd9\u6837\u8ddf\u4f7f\u7528with\u7684\u5f62\u5f0f\u5176\u5b9e\u662f\u4e00\u6837\u7684, #\u6211\u66f4\u559c\u6b22\u8fd9\u79cd\u65b9\u5f0f,\u4e0d\u8fc7\u6700\u540e\u9700\u8981\u5c06\u5b9a\u4e49\u7684\u8fd9\u4e2a\u8fdb\u5ea6\u5173\u95ed pbar = tqdm ( total = 100 ) for i in range ( 20 ): time . sleep ( 0.2 ) pbar . update ( 5 ) pbar . close () \u6548\u679c\u90fd\u662f\u4e00\u81f4\u7684:","title":"019 python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/019python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528/#tqdmiterator","text":"","title":"\u8bed\u6cd5\uff1atqdm(iterator) \u62ec\u53f7\u91cc\u9762\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/019python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528/#_1","text":"from tqdm import tqdm import time for i in tqdm ( range ( 10000 )): #\u5c06range\u8fed\u4ee3\u5668\u653e\u5230\u4e86tqdm\u4e2d time . sleep ( 0.01 ) \u770b\u4e00\u4e0b\u6548\u679c\u662f\u8fd9\u6837\u7684:","title":"\u9ed8\u8ba4\u8bbe\u7f6e\u6253\u5370\u8fdb\u5ea6"},{"location":"python\u5b66\u4e60/019python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528/#_2","text":"from tqdm import tqdm import time pbar = tqdm ([ \"a\" , \"b\" , \"c\" , \"d\" ]) #\u9996\u5148\u4f7f\u7528tqdm\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fed\u4ee3\u5668 for char in pbar : time . sleep ( 5 ) #\u8bbe\u7f6e\u8fdb\u5ea6\u663e\u793a\u7684\u540d\u79f0\u4f7f\u7528\u7684\u662fset_description(\u8bbe\u7f6e\u63cf\u8ff0):\u8fdb\u7a0b\u7684\u540d\u5b57. pbar . set_description ( \"processing {}\" . format ( char )) \u6548\u679c\u662f\u8fd9\u6837\u5b50\u7684: \u6ce8\u610f\u540d\u79f0\u7684\u53d8\u5316","title":"\u81ea\u5b9a\u4e49\u683c\u5f0f"},{"location":"python\u5b66\u4e60/019python-\u8fdb\u5ea6\u6761-tqdm\u7684\u4f7f\u7528/#_3","text":"from tqdm import tqdm import time #\u653e\u5230with\u4e2d\u8bbe\u7f6e\u603b\u5f97\u8fdb\u5ea6\u662f100, #\u7136\u540efor\u5faa\u73af\u603b\u5171\u8fed\u4ee320,\u90a3\u4e48\u5c31\u8ba9tqdm\u6bcf\u6b21\u66f4\u65b0\u8fdb\u5ea6\u4e3a5\u5faa\u73af\u5b8c\u4e86\u8fdb\u5ea6\u5c31\u6210\u4e3a100 with tqdm ( total = 100 ) as pbar : for i in range ( 20 ): time . sleep ( 0.2 ) pbar . update ( 5 ) \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f from tqdm import tqdm import time # \u6216\u8005\u8fd9\u6837\u8ddf\u4f7f\u7528with\u7684\u5f62\u5f0f\u5176\u5b9e\u662f\u4e00\u6837\u7684, #\u6211\u66f4\u559c\u6b22\u8fd9\u79cd\u65b9\u5f0f,\u4e0d\u8fc7\u6700\u540e\u9700\u8981\u5c06\u5b9a\u4e49\u7684\u8fd9\u4e2a\u8fdb\u5ea6\u5173\u95ed pbar = tqdm ( total = 100 ) for i in range ( 20 ): time . sleep ( 0.2 ) pbar . update ( 5 ) pbar . close () \u6548\u679c\u90fd\u662f\u4e00\u81f4\u7684:","title":"\u624b\u52a8\u63a7\u5236\u66f4\u65b0\u7684\u8fdb\u5ea6\uff08\u6309\u65f6\u95f4\u63a7\u5236\uff09"},{"location":"python\u5b66\u4e60/020-python\u9519\u9898\u96c6/","text":"1.set\u51fd\u6570: https://www.cnblogs.com/hukey/p/9242339.html nums = set ([ 1 , 1 , 2 , 5 , 8 ]) print ( len ( nums )) \u6267\u884c\u7ed3\u679c: 4 \u89e3\u6790: set \u7c7b\u578b\u7684\u7279\u6027\u662f\u4f1a\u79fb\u9664\u96c6\u5408\u4e2d\u91cd\u590d\u7684\u5143\u7d20\uff0c\u56e0\u6b64\u53d8\u91cf nums \u5b9e\u9645\u4e0a\u7b49\u4e8e\uff1a nums = {1, 2, 5, 8} \u903b\u8f91\u8fd0\u7b97\u548c\u6bd4\u8f83\u8fd0\u7b97: \u4e0b\u5217\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u662f\uff1f a = 'a' print ( a > 'b' or 'c' ) \u6267\u884c\u7ed3\u679c: c \u89e3\u6790: \u7531\u4e8e\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u5927\u4e8e\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u6839\u636e\u4e0a\u8868\uff0c\u5f53 a > 'b'\uff0c\u5373 'a' > 'b' \u4e3a Fasle \u65f6\uff08'a' \u7684 ASCII \u7801\u6bd4 \u2018b\u2019 \u5c0f\uff09\uff0c\u8fd4\u56de\u503c\u4e3a 'c '(True)\uff0c False or True \u8fd4\u56de\u7684\u662fTrue\u7684\u90a3\u4e2a\u6545\u7b54\u6848\u9009C\u3002 \u590d\u6570: 4 .Python\u51fd\u6570 \u89e3\u6790: https://www.cnblogs.com/smallmars/p/6936871.html \u5728 Python \u4e2d\u4e07\u7269\u7686\u4e3a\u5bf9\u8c61\uff0c\u51fd\u6570\u4e5f\u4e0d\u4f8b\u5916\uff0c\u51fd\u6570\u4f5c\u4e3a\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3001\u53ef\u4ee5\u4f5c\u4e3a\u5143\u7d20\u6dfb\u52a0\u5230\u96c6\u5408\u5bf9\u8c61\u4e2d\u3001\u53ef\u4f5c\u4e3a\u53c2\u6570\u503c\u4f20\u9012\u7ed9\u5176\u5b83\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u5f53\u505a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u8fd9\u4e9b\u7279\u6027\u5c31\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\u6240\u7279\u6709\u7684\u3002","title":"020 python\u9519\u9898\u96c6"},{"location":"python\u5b66\u4e60/021-pickle-\u4fdd\u5b58\u6570\u636e/","text":"pickle \u4fdd\u5b58 \u00b6 pickle \u662f\u4e00\u4e2a python \u4e2d, \u538b\u7f29/\u4fdd\u5b58/\u63d0\u53d6 \u6587\u4ef6\u7684\u6a21\u5757. \u6700\u4e00\u822c\u7684\u4f7f\u7528\u65b9\u5f0f\u975e\u5e38\u7b80\u5355. \u6bd4\u5982\u4e0b\u9762\u5c31\u662f\u538b\u7f29\u5e76\u4fdd\u5b58\u4e00\u4e2a\u5b57\u5178\u7684\u65b9\u5f0f. \u5b57\u5178\u548c\u5217\u8868\u90fd\u662f\u80fd\u88ab\u4fdd\u5b58\u7684. import pickle a_dict = { 'da' : 111 , 2 : [ 23 , 1 , 4 ], '23' : { 1 : 2 , 'd' : 'sad' }} # pickle a variable to a file file = open ( 'pickle_example.pickle' , 'wb' ) pickle . dump ( a_dict , file ) file . close () wb \u662f\u4ee5(\u4e8c\u8fdb\u5236)\u5199\u7684\u5f62\u5f0f\u6253\u5f00 \u2018pickle_example.pickle\u2019 \u8fd9\u4e2a\u6587\u4ef6, \u7136\u540e pickle.dump \u4f60\u8981\u4fdd\u5b58\u7684\u4e1c\u897f\u53bb\u8fd9\u4e2a\u6253\u5f00\u7684 file. \u6700\u540e\u5173\u95ed file \u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u7684\u6587\u4ef6\u76ee\u5f55\u91cc\u591a\u4e86\u4e00\u4e2a \u2018pickle_example.pickle\u2019 \u6587\u4ef6, \u8fd9\u5c31\u662f\u90a3\u4e2a\u5b57\u5178\u4e86. pickle \u63d0\u53d6: \u63d0\u53d6\u7684\u65f6\u5019\u76f8\u5bf9\u7b80\u5355\u70b9, \u540c\u6837\u6211\u4eec\u4ee5\u8bfb\u7684\u5f62\u5f0f\u6253\u5f00\u90a3\u4e2a\u6587\u4ef6, \u7136\u540e load \u8fdb\u4e00\u4e2a python \u7684\u53d8\u91cf. # reload a file to a variable with open ( 'pickle_example.pickle' , 'rb' ) as file : a_dict1 = pickle . load ( file ) print ( a_dict1 )","title":"021-pickle-\u4fdd\u5b58\u6570\u636e"},{"location":"python\u5b66\u4e60/021-pickle-\u4fdd\u5b58\u6570\u636e/#pickle","text":"pickle \u662f\u4e00\u4e2a python \u4e2d, \u538b\u7f29/\u4fdd\u5b58/\u63d0\u53d6 \u6587\u4ef6\u7684\u6a21\u5757. \u6700\u4e00\u822c\u7684\u4f7f\u7528\u65b9\u5f0f\u975e\u5e38\u7b80\u5355. \u6bd4\u5982\u4e0b\u9762\u5c31\u662f\u538b\u7f29\u5e76\u4fdd\u5b58\u4e00\u4e2a\u5b57\u5178\u7684\u65b9\u5f0f. \u5b57\u5178\u548c\u5217\u8868\u90fd\u662f\u80fd\u88ab\u4fdd\u5b58\u7684. import pickle a_dict = { 'da' : 111 , 2 : [ 23 , 1 , 4 ], '23' : { 1 : 2 , 'd' : 'sad' }} # pickle a variable to a file file = open ( 'pickle_example.pickle' , 'wb' ) pickle . dump ( a_dict , file ) file . close () wb \u662f\u4ee5(\u4e8c\u8fdb\u5236)\u5199\u7684\u5f62\u5f0f\u6253\u5f00 \u2018pickle_example.pickle\u2019 \u8fd9\u4e2a\u6587\u4ef6, \u7136\u540e pickle.dump \u4f60\u8981\u4fdd\u5b58\u7684\u4e1c\u897f\u53bb\u8fd9\u4e2a\u6253\u5f00\u7684 file. \u6700\u540e\u5173\u95ed file \u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u7684\u6587\u4ef6\u76ee\u5f55\u91cc\u591a\u4e86\u4e00\u4e2a \u2018pickle_example.pickle\u2019 \u6587\u4ef6, \u8fd9\u5c31\u662f\u90a3\u4e2a\u5b57\u5178\u4e86. pickle \u63d0\u53d6: \u63d0\u53d6\u7684\u65f6\u5019\u76f8\u5bf9\u7b80\u5355\u70b9, \u540c\u6837\u6211\u4eec\u4ee5\u8bfb\u7684\u5f62\u5f0f\u6253\u5f00\u90a3\u4e2a\u6587\u4ef6, \u7136\u540e load \u8fdb\u4e00\u4e2a python \u7684\u53d8\u91cf. # reload a file to a variable with open ( 'pickle_example.pickle' , 'rb' ) as file : a_dict1 = pickle . load ( file ) print ( a_dict1 )","title":"pickle \u4fdd\u5b58"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/","text":"\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b Threading \u00b6 \u591a\u7ebf\u7a0b\u662f\u52a0\u901f\u7a0b\u5e8f\u8ba1\u7b97\u7684\u6709\u6548\u65b9\u5f0f\uff0cPython\u7684\u591a\u7ebf\u7a0b\u6a21\u5757threading\u4e0a\u624b\u5feb\u901f\u7b80\u5355\uff0c\u4ece\u8fd9\u8282\u5f00\u59cb\u6211\u4eec\u5c31\u6559\u5927\u5bb6\u5982\u4f55\u4f7f\u7528\u5b83\u3002 \u6dfb\u52a0\u7ebf\u7a0b \u00b6 \u672c\u8282\u6211\u4eec\u6765\u5b66\u4e60threading\u6a21\u5757\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff0c\u5982\u83b7\u53d6\u7ebf\u7a0b\u6570\uff0c\u6dfb\u52a0\u7ebf\u7a0b\u7b49\u3002\u9996\u5148\u522b\u5fd8\u4e86\u5bfc\u5165\u6a21\u5757\uff1a import threading \u83b7\u53d6\u5df2\u6fc0\u6d3b\u7684\u7ebf\u7a0b\u6570 threading . active_count () \u67e5\u770b\u6240\u6709\u7ebf\u7a0b\u4fe1\u606f \u200b```python threading.enumerate() \u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e00\u4e2a <_MainThread(...)> \u5e26\u591a\u4e2a <Thread(...)> \u3002 \u67e5\u770b\u73b0\u5728\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b threading . current_thread () \u6574\u4e2a\u7684\u4e0a\u8ff0\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" import threading def main (): print ( \"\u5f53\u524d\u7684\u7ebf\u7a0b\u6570: \\n \" , threading . active_count ()) #\u67e5\u770b\u5df2\u7ecf\u6fc0\u6d3b\u7684\u7ebf\u7a0b\u6570 print ( \"\u67e5\u770b\u6240\u6709\u7684\u7ebf\u7a0b\u4fe1\u606f: \\n \" , threading . enumerate ()) #\u67e5\u770b\u6240\u6709\u7ebf\u7a0b\u4fe1\u606f print ( \"\u5f53\u524d\u7ebf\u7a0b: \\n \" , threading . current_thread ()) #\u67e5\u770b\u5f53\u524d\u7ebf\u7a0b if __name__ == '__main__' : #\u5224\u65ad\u662f\u4e0d\u662f\u5728\u5f53\u524d\u7a0b\u5e8f\u4e0b\u6267\u884c,\u662f\u5c31\u6267\u884c\u4e3b\u65b9\u6cd5 main () \u6267\u884c\u7ed3\u679c: \u5f53\u524d\u7684\u7ebf\u7a0b\u6570 : 5 \u67e5\u770b\u6240\u6709\u7684\u7ebf\u7a0b\u4fe1\u606f : [ < _MainThread ( MainThread , started 14952 ) > , < Thread ( Thread - 4 , started daemon 15264 ) > , < Heartbeat ( Thread - 5 , started daemon 11884 ) > , < HistorySavingThread ( IPythonHistorySavingThread , started 2320 ) > , < GarbageCollectorThread ( Thread - 6 , started daemon 7112 ) > ] \u5f53\u524d\u7ebf\u7a0b : < _MainThread ( MainThread , started 14952 ) > \u6dfb\u52a0\u7ebf\u7a0b\uff0c threading.Thread() \u63a5\u6536\u53c2\u6570 target \u4ee3\u8868\u8fd9\u4e2a\u7ebf\u7a0b\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u9700\u81ea\u884c\u5b9a\u4e49 # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1(\u529f\u80fd\u5c31\u662f\u6253\u5370\u5f53\u524d\u7684\u7ebf\u7a0b\u4efb\u52a1) print ( 'This is a thread of %s ' % threading . current_thread ()) def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) thread = threading . Thread ( target = thread_job ,) # \u5b9a\u4e49\u7ebf\u7a0b print ( '_' * 100 ) thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c if __name__ == '__main__' : main () python\u591a\u7ebf\u7a0b\u7684\u6267\u884c: \u4e0d\u52a0 join() \u7684\u7ed3\u679c \u6211\u4eec\u8ba9 T1 \u7ebf\u7a0b\u5de5\u4f5c\u7684\u8017\u65f6\u589e\u52a0. # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading import time def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1 print ( \"T1 start \\n \" ) #\u6253\u5370\u6211\u5f00\u59cb\u505a\u4e86 for i in range ( 10 ): time . sleep ( 0.1 ) #\u4f11\u606f0.1\u79d2 print ( \"T1 stop \\n \" ) #\u6253\u5370\u6211\u505a\u5b8c\u4e86 def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) added_thread = threading . Thread ( target = thread_job , name = 'T1' ) # \u5b9a\u4e49\u7ebf\u7a0b name\u662f\u7ebf\u7a0b\u5b9a\u4e49\u7684\u540d\u5b57 print ( '_' * 100 ) added_thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c #\u5982\u679c\u662f\u5355\u7ebf\u7a0b\u4f1a\u987a\u5e8f\u6267\u884c\u5b8c\u4e0a\u9762\u7684\u51fd\u6570,\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462? print ( \"alldone \\n \" ) if __name__ == '__main__' : main () \u9884\u60f3\u4e2d\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u5426\u4e3a\uff1a T1 start T1 finish all done \u4f46\u5b9e\u9645\u5374\u662f\uff1a \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1 ____________________________________________________________________________________________________ T1 start alldone T1 stop \u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4e86\u591a\u7ebf\u7a0b(\u540c\u65f6\u5728\u8fdb\u884c\u7684\u7ebf\u7a0b\u4efb\u52a1),\u6ca1\u6709\u8fdb\u884c\u987a\u5e8f\u7684\u6267\u884c \u52a0\u5165 join() \u7684\u7ed3\u679c(\u60f3\u8981\u6240\u6709\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\u4e86\u518d\u6253\u5370alldone) \u7ebf\u7a0b\u4efb\u52a1\u8fd8\u672a\u5b8c\u6210\u4fbf\u8f93\u51faall done\u3002\u5982\u679c\u8981\u9075\u5faa\u987a\u5e8f\uff0c\u53ef\u4ee5\u5728\u542f\u52a8\u7ebf\u7a0b\u540e\u5bf9\u5b83\u8c03\u7528join\uff1a added_thread . start () added_thread . join () print ( \"all done \\n \" ) \u603b\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading import time def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1 print ( \"T1 start \\n \" ) #\u6253\u5370\u6211\u5f00\u59cb\u505a\u4e86 for i in range ( 10 ): time . sleep ( 0.1 ) #\u4f11\u606f0.1\u79d2 print ( \"T1 stop \\n \" ) #\u6253\u5370\u6211\u505a\u5b8c\u4e86 def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) added_thread = threading . Thread ( target = thread_job , name = 'T1' ) # \u5b9a\u4e49\u7ebf\u7a0b name\u662f\u7ebf\u7a0b\u5b9a\u4e49\u7684\u540d\u5b57 print ( '_' * 100 ) added_thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c added_thread . join () #\u8ba9\u7ebf\u7a0b\u6267\u884c\u5b8c\u5728\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5 print ( \"alldone \\n \" ) if __name__ == '__main__' : main () \u6267\u884c\u7ed3\u679c: \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1 ____________________________________________________________________________________________________ T1 start T1 stop alldone \u4f7f\u7528join\u5bf9\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u975e\u5e38\u5173\u952e\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u518d\u52a0\u4e00\u4e2a\u7ebf\u7a0bT2\uff0cT2\u7684\u4efb\u52a1\u91cf\u8f83\u5c0f\uff0c\u4f1a\u6bd4T1\u66f4\u5feb\u5b8c\u6210\uff1a \u8f93\u51fa\u7684**\u201d\u4e00\u79cd\u201d \u7ed3\u679c\u662f\uff1a \u4f8b: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish all done T1 finish \u73b0\u5728T1\u548cT2\u90fd\u6ca1\u6709join\uff0c\u6ce8\u610f\u8fd9\u91cc\u8bf4 \u201d\u4e00\u79cd\u201d**\u662f\u56e0\u4e3aall done\u7684\u51fa\u73b0\u5b8c\u5168\u53d6\u51b3\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u901f\u5ea6\uff0c \u5b8c\u5168\u6709\u53ef\u80fdT2 finish\u51fa\u73b0\u5728all done\u4e4b\u540e\u3002\u8fd9\u79cd\u6742\u4e71\u7684\u6267\u884c\u65b9\u5f0f\u662f\u6211\u4eec\u4e0d\u80fd\u5fcd\u53d7\u7684\uff0c\u56e0\u6b64\u8981\u4f7f\u7528join\u52a0\u4ee5\u63a7\u5236\u3002 \u6211\u4eec\u8bd5\u8bd5\u5728T1\u542f\u52a8\u540e\uff0cT2\u542f\u52a8\u524d\u52a0\u4e0a thread_1.join() : # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_2 . start () # \u5f00\u542fT2(\u7531\u4e8eT1\u5728T2\u4efb\u52a1\u5f00\u542f\u4e4b\u524d\u5c31\u52a0\u4e86join\u56e0\u6b64T2\u9700\u8981\u7b49\u5f85T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u624d\u80fd\u5f00\u542f) print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T1 finish T2 start all done T2 finish \u53ef\u4ee5\u770b\u5230\uff0cT2\u4f1a\u7b49\u5f85T1\u7ed3\u675f\u540e\u624d\u5f00\u59cb\u8fd0\u884c\u3002\u8fd9\u662f\u7531\u4e8eT1\u5728T2\u4efb\u52a1\u5f00\u542f\u4e4b\u524d\u5c31\u52a0\u4e86join\u56e0\u6b64T2\u9700\u8981\u7b49\u5f85T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u624d\u80fd\u5f00\u542f \u5982\u679c\u6211\u4eec\u5728T2\u542f\u52a8\u540e\u653e\u4e0athread_1.join()\u4f1a\u600e\u4e48\u6837\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u7ed3\u679c\u5206\u6790: T2\u5728T1\u4e4b\u540e\u542f\u52a8\uff0c\u5e76\u4e14\u56e0\u4e3aT2\u4efb\u52a1\u91cf\u5c0f\u4f1a\u5728T1\u4e4b\u524d\u5b8c\u6210\uff1b\u800cT1\u4e5f\u56e0\u4e3a\u52a0\u4e86join\uff0c\u6240\u4ee5\u5728T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5all done\u624d\u80fd\u7ee7\u7eed\u6267\u884c \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0thread_2.join()\u8fdb\u884c\u5c1d\u8bd5\uff0c\u4f46\u4e3a\u4e86\u89c4\u907f\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u63a8\u8350\u5982\u4e0b\u8fd9\u79cd1221\u7684V\u578b\u6392\u5e03(\u524d\u63d0\u662f\u4e0d\u9700\u8981\u7ed3\u679c\u7684\u987a\u5e8f\u6392\u5217(T1\u8f93\u51fa\u7684\u7ed3\u679c\u5148\u5b58,T2\u7684\u8f93\u51fa\u7ed3\u679c\u540e\u5b58)) thread_1 . start () # start T1 thread_2 . start () # start T2 thread_2 . join () # join for T2 thread_1 . join () # join for T1 print ( \"all done \\n \" ) \"\"\" T1 start T2 start T2 finish T1 finish all done \"\"\" \u5b8c\u6574\u7684\u7a0b\u5e8f\u4ee3\u7801: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u8fd9\u79cd\u6267\u884c\u65b9\u5f0f\u53ef\u4ee5\u8ba9\u7ebf\u7a0b\u77ed\u7684\u5148\u6267\u884c\u5b8c,\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462?\u9996\u5148\u4e24\u4e2a\u7ebf\u7a0b\u662f\u90fd\u5f00\u542f\u4e86,\u7136\u540e\u4e24\u4e2a\u90fd\u52a0\u4e86join,\u56e0\u6b64\u4f1a\u7b49\u4e24\u4e2a\u7ebf\u7a0b\u7ed3\u675f\u540e\u624d\u4f1a\u6267\u884calldone,\u53c8\u7531\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5f00\u542f\u4e86\u6240\u4ee5\u6267\u884c\u5feb\u7684\u5148\u7ed3\u675f,\u4e0d\u4f1a\u56e0\u4e3a\u8c01\u5148\u6dfb\u52a0join\u8c01\u5c31\u5148\u6267\u884c\u5b8c.\u6bd4\u5982\u4e0b\u9762\u76841212\u65b9\u5f0f\u662f\u540c\u6837\u7684\u6267\u884c\u7ed3\u679c \u91c7\u75281212\u7684\u65b9\u5f0f\u4f1a\u5982\u4f55? # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884calldone thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884calldone print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u53ef\u4ee5\u770b\u5230\u4f7f\u75281212\u65b9\u5f0f\u6267\u884c\u7ebf\u7a0b\u65f6,\u8fd8\u662f\u7ebf\u7a0b\u6267\u884c\u5feb\u7684\u5148\u7ed3\u675f,\u4e0d\u4f1a\u56e0\u4e3ajoin\u7684\u524d\u540e\u987a\u5e8f\u5bfc\u81f4\u7ed3\u679c\u7684\u6539\u53d8,\u56e0\u6b64\u5982\u679c\u9700\u8981\u7ebf\u7a0b1\u5148\u7ed3\u675f\u5c31\u8981\u91c7\u53d6\u4e0b\u9762\u76841122\u65b9\u5f0f(\u4f46\u662f\u8fd9\u6837\u5c31\u5931\u53bb\u4e86\u7ebf\u7a0b\u610f\u4e49,\u4e0d\u8fc7\u5728\u4f7f\u7528queue\u7684\u65f6\u5019\u8fd8\u662f\u8981\u6ce8\u610f\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa\u7684\u4f7f\u7528\u987a\u5e8f\u7684) \u6d4b\u8bd5\u4e00\u4e0b\u53e6\u4e00\u79cd1122\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\u7684: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_2 . start () # \u5f00\u542fT2 thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T1 finish T2 start T2 finish all done \u8fd9\u79cd\u7684\u5c31\u662f\u5b8c\u5168\u6309\u7167\u987a\u5e8f\u6765\u6267\u884c\u7ebf\u7a0b \u50a8\u5b58\u8fdb\u7a0b\u7ed3\u679c Queue \u00b6 \u4ee3\u7801\u5b9e\u73b0\u529f\u80fd\uff0c\u5c06\u6570\u636e\u5217\u8868\u4e2d\u7684\u6570\u636e\u4f20\u5165\uff0c\u4f7f\u7528\u56db\u4e2a\u7ebf\u7a0b\u5904\u7406\uff0c\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728Queue\u4e2d\uff0c\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\uff0c\u4eceQueue\u4e2d\u83b7\u53d6\u5b58\u50a8\u7684\u7ed3\u679c \u5bfc\u5165\u7ebf\u7a0b,\u961f\u5217\u7684\u6807\u51c6\u6a21\u5757 import threading import time from queue import Queue \u5b9a\u4e49\u4e00\u4e2a\u88ab\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570 \u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5217\u8868l\u548c\u4e00\u4e2a\u961f\u5217q\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\uff0c\u5bf9\u5217\u8868\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5e73\u65b9\u8ba1\u7b97\uff0c\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u961f\u5217\u4e2d def job ( l , q ): for i in range ( len ( l )): l [ i ] = l [ i ] ** 2 q . put ( l ) #\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\u4e0d\u80fd\u7528return\u8fd4\u56de\u503c \u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u51fd\u6570 \u5728\u591a\u7ebf\u7a0b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e2aQueue\uff0c\u7528\u6765\u4fdd\u5b58\u8fd4\u56de\u503c\uff0c\u4ee3\u66ffreturn\uff0c\u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u5217\u8868\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u591a\u7ef4\u6570\u636e\u5217\u8868\uff0c\u7528\u6765\u5904\u7406\uff1a def multithreading (): q = Queue () #q\u4e2d\u5b58\u653e\u8fd4\u56de\u503c\uff0c\u4ee3\u66ffreturn\u7684\u8fd4\u56de\u503c threads = [] data = [[ 1 , 2 , 3 ],[ 3 , 4 , 5 ],[ 4 , 4 , 4 ],[ 5 , 5 , 5 ]] \u5728\u591a\u7ebf\u7a0b\u51fd\u6570\u4e2d\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b\uff0c\u542f\u52a8\u7ebf\u7a0b\uff0c\u5c06\u6bcf\u4e2a\u7ebf\u7a0b\u6dfb\u52a0\u5230\u591a\u7ebf\u7a0b\u7684\u5217\u8868\u4e2d for i in range ( 4 ): #\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b t = threading . Thread ( target = job , args = ( data [ i ], q )) #Thread\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u88ab\u8c03\u7528\u7684job\u51fd\u6570\u6ca1\u6709\u62ec\u53f7\uff0c\u53ea\u662f\u4e00\u4e2a\u7d22\u5f15\uff0c\u53c2\u6570\u5728\u540e\u9762 t . start () #\u5f00\u59cb\u7ebf\u7a0b threads . append ( t ) #\u628a\u6bcf\u4e2a\u7ebf\u7a0bappend\u5230\u7ebf\u7a0b\u5217\u8868\u4e2d \u5206\u522bjoin\u56db\u4e2a\u7ebf\u7a0b\u5230\u4e3b\u7ebf\u7a0b for thread in threads : thread . join () \u5b9a\u4e49\u4e00\u4e2a\u7a7a\u7684\u5217\u8868results\uff0c\u5c06\u56db\u4e2a\u7ebf\u8fd0\u884c\u540e\u4fdd\u5b58\u5728\u961f\u5217\u4e2d\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u7a7a\u5217\u8868results results = [] for _ in range ( 4 ): results . append ( q . get ()) #q.get()\u6309\u987a\u5e8f\u4eceq\u4e2d\u62ff\u51fa\u4e00\u4e2a\u503c print ( results ) \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 22:21:09 2019 @author: zangz \"\"\" import threading import time from queue import Queue #\u961f\u5217 #\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570:l\u662f\u4e00\u4e2a\u5217\u8868,\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u5e73\u65b9\u7684\u8fd0\u7b97 def job ( l , q ): for i in range ( len ( l )): l [ i ] = l [ i ] ** 2 q . put ( l ) #\u7ebf\u7a0b\u4e2d\u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c def multithreading (): q = Queue () #\u5148\u5b9a\u4e49\u4e00\u4e2aq\u961f\u5217(\u653e\u5165\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u8fd4\u56de\u503c) threads = [] #\u628a\u6240\u6709\u7684\u7ebf\u7a0b\u653e\u5927\u8fd9\u4e2a\u5217\u8868\u4e2d data = [[ 1 , 2 , 3 ],[ 3 , 4 , 5 ],[ 4 , 4 , 4 ],[ 5 , 5 , 5 ]] #\u56db\u4e2a\u6570\u636e\u5217\u8868 for i in range ( 4 ): #\u5faa\u73af\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b t = threading . Thread ( target = job , args = ( data [ i ], q )) #target\u662f\u529f\u80fd\u7684\u540d\u5b57,args\u662f\u4f20\u5165\u7684\u53c2\u6570 t . start () #\u5f00\u542f\u7ebf\u7a0b threads . append ( t ) #\u5c06\u7ebf\u7a0b\u52a0\u5230\u5168\u90e8\u7684\u7ebf\u7a0b\u4e2d for thread in threads : thread . join () #\u5c06join\u529f\u80fd\u52a0\u5230\u7ebf\u7a0b\u4e2d,\u4f7f\u5f97\u6240\u6709\u7684\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u4ee5\u540e\u624d\u8fd4\u56de\u7ed3\u679c\u503c(\u540c\u65f6\u8fd9\u6837\u4e0d\u4f1a\u51fa\u73b0\u6df7\u4e71,\u4f9d\u6b21\u7ebf\u7a0b\u6267\u884c) # \u5faa\u73af\u5f97\u5230\u56db\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u503c results = [] for _ in range ( 4 ): results . append ( q . get ()) #\u4eceq\u4e2d\u53d6\u503c;\u4f20\u4e86\u56db\u6b21\u62ff\u56db\u6b21.\u961f\u5217\u5148\u8fdb\u5148\u51fa print ( results ) if __name__ == '__main__' : multithreading () \u6700\u540e\u8fd0\u884c\u7ed3\u679c\u4e3a: [[ 1 , 4 , 9 ], [ 9 , 16 , 25 ], [ 16 , 16 , 16 ], [ 25 , 25 , 25 ]] \u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u5168\u90e8\u5f00\u542f\u670d\u52a1\u518d\u52a0join\u7684\u65b9\u5f0f,\u5982\u679c\u67d0\u4e2a\u5217\u8868\u7684\u6267\u884c\u901f\u5ea6\u6162\u4e86,\u5c31\u4f1a\u5bfc\u81f4\u5b58\u8fdb\u961f\u5217\u7684\u65f6\u5019\u987a\u5e8f\u4e0d\u4e00\u81f4,\u5bfc\u81f4\u7ed3\u679c\u7684\u9519\u4e71. GIL \u4e0d\u4e00\u5b9a\u6709\u6548\u7387 \u00b6 \u8fd9\u6b21\u6211\u4eec\u6765\u770b\u770b\u4e3a\u4ec0\u4e48\u8bf4 python \u7684\u591a\u7ebf\u7a0b threading \u6709\u65f6\u5019\u5e76\u4e0d\u662f\u7279\u522b\u7406\u60f3. \u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\u5c31\u662f, Python \u7684\u8bbe\u8ba1\u4e0a, \u6709\u4e00\u4e2a\u5fc5\u8981\u7684\u73af\u8282, \u5c31\u662f Global Interpreter Lock (GIL). \u8fd9\u4e2a\u4e1c\u897f\u8ba9 Python \u8fd8\u662f\u4e00\u6b21\u6027\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u4e1c\u897f. \u6211\u4ece \u8fd9\u91cc \u6458\u6284\u4e86\u4e00\u6bb5\u5bf9\u4e8e GIL \u7684\u89e3\u91ca. \u5c3d\u7ba1Python\u5b8c\u5168\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c \u4f46\u662f\u89e3\u91ca\u5668\u7684C\u8bed\u8a00\u5b9e\u73b0\u90e8\u5206\u5728\u5b8c\u5168\u5e76\u884c\u6267\u884c\u65f6\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u5b9e\u9645\u4e0a\uff0c\u89e3\u91ca\u5668\u88ab\u4e00\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u4fdd\u62a4\u7740\uff0c\u5b83\u786e\u4fdd\u4efb\u4f55\u65f6\u5019\u90fd\u53ea\u6709\u4e00\u4e2aPython\u7ebf\u7a0b\u6267\u884c\u3002 GIL\u6700\u5927\u7684\u95ee\u9898\u5c31\u662fPython\u7684\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5e76\u4e0d\u80fd\u5229\u7528\u591a\u6838CPU\u7684\u4f18\u52bf \uff08\u6bd4\u5982\u4e00\u4e2a\u4f7f\u7528\u4e86\u591a\u4e2a\u7ebf\u7a0b\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u7a0b\u5e8f\u53ea\u4f1a\u5728\u4e00\u4e2a\u5355CPU\u4e0a\u9762\u8fd0\u884c\uff09\u3002 \u5728\u8ba8\u8bba\u666e\u901a\u7684GIL\u4e4b\u524d\uff0c\u6709\u4e00\u70b9\u8981\u5f3a\u8c03\u7684\u662fGIL\u53ea\u4f1a\u5f71\u54cd\u5230\u90a3\u4e9b\u4e25\u91cd\u4f9d\u8d56CPU\u7684\u7a0b\u5e8f\uff08\u6bd4\u5982\u8ba1\u7b97\u578b\u7684\uff09\u3002 \u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u5927\u90e8\u5206\u53ea\u4f1a\u6d89\u53ca\u5230I/O\uff0c\u6bd4\u5982\u7f51\u7edc\u4ea4\u4e92\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u7ebf\u7a0b\u5c31\u5f88\u5408\u9002\uff0c \u56e0\u4e3a\u5b83\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85\u3002\u5b9e\u9645\u4e0a\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u653e\u5fc3\u7684\u521b\u5efa\u51e0\u5343\u4e2aPython\u7ebf\u7a0b\uff0c \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u8fd9\u4e48\u591a\u7ebf\u7a0b\u6ca1\u6709\u4efb\u4f55\u538b\u529b\uff0c\u6ca1\u5565\u53ef\u62c5\u5fc3\u7684\u3002 \u6d4b\u8bd5 GIL \u00b6 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a job, \u5206\u522b\u7528 threading \u548c \u4e00\u822c\u7684\u65b9\u5f0f\u6267\u884c\u8fd9\u6bb5\u7a0b\u5e8f. \u5e76\u4e14\u521b\u5efa\u4e00\u4e2a list \u6765\u5b58\u653e\u6211\u4eec\u8981\u5904\u7406\u7684\u6570\u636e. \u5728 Normal \u7684\u65f6\u5019, \u6211\u4eec\u8fd9\u4e2a list \u6269\u5c554\u500d, \u5728 threading \u7684\u65f6\u5019, \u6211\u4eec\u5efa\u7acb4\u4e2a\u7ebf\u7a0b, \u5e76\u5bf9\u8fd0\u884c\u65f6\u95f4\u8fdb\u884c\u5bf9\u6bd4. # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 10:47:13 2019 @author: zangz \"\"\" import threading #\u5bfc\u5165\u7ebf\u7a0b\u5305 from queue import Queue #\u961f\u5217 import copy #\u62f7\u8d1d\u5305 import time def job ( l , q ): res = sum ( l ) #\u5bf9\u5217\u8868\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u6c42\u548c q . put ( res ) #\u8fdb\u961f\u5217 def multithreading ( l ): q = Queue () #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u961f\u5217 threads = [] #\u5b58\u653e\u7ebf\u7a0b for i in range ( 4 ): t = threading . Thread ( target = job , args = ( copy . copy ( l ), q ), name = 'T %i ' % i ) t . start () threads . append ( t ) [ t . join () for t in threads ] total = 0 #\u521d\u59cb\u4e00\u4e2a\u503c for _ in range ( 4 ): total += q . get () #\u53d6\u51fa\u6240\u6709\u7684\u7ed3\u679c print ( total ) #\u6253\u5370\u7ed3\u679c def normal ( l ): total = sum ( l ) print ( total ) if __name__ == '__main__' : l = list ( range ( 1000000 )) s_t = time . time () #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 normal ( l * 4 ) print ( 'normal: ' , time . time () - s_t ) #\u5f97\u5230\u6267\u884c\u65f6\u95f4 s_t = time . time () multithreading ( l ) print ( 'multithreading: ' , time . time () - s_t ) \u5982\u679c\u4f60\u6210\u529f\u8fd0\u884c\u6574\u5957\u7a0b\u5e8f, \u4f60\u5927\u6982\u4f1a\u6709\u8fd9\u6837\u7684\u8f93\u51fa. \u6211\u4eec\u7684\u8fd0\u7b97\u7ed3\u679c\u6ca1\u9519, \u6240\u4ee5\u7a0b\u5e8f threading \u548c Normal \u8fd0\u884c\u4e86\u4e00\u6837\u591a\u6b21\u7684\u8fd0\u7b97. \u4f46\u662f\u6211\u4eec\u53d1\u73b0 threading \u5374\u6ca1\u6709\u5feb\u591a\u5c11, \u6309\u7406\u6765\u8bf4, \u6211\u4eec\u9884\u671f\u4f1a\u8981\u5feb3-4\u500d, \u56e0\u4e3a\u6709\u5efa\u7acb4\u4e2a\u7ebf\u7a0b, \u4f46\u662f\u5e76\u6ca1\u6709. \u8fd9\u5c31\u662f\u5176\u4e2d\u7684 GIL \u5728\u4f5c\u602a. \u6267\u884c\u7ed3\u679c: 1999998000000 normal : 0.17794227600097656 1999998000000 multithreading : 0.16945099830627441 \u6267\u884c\u7684\u7518\u7279\u56fe: \u7ebf\u7a0b\u6267\u884c\u5230\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u4f1a\u4ea4\u7ed9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u8fd0\u7b97 \u7ebf\u7a0b\u9501 lock \u00b6 \u5982\u679c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406\u5b8c\u7684\u521d\u6b65\u7684\u7ed3\u679c\u62ff\u7ed9\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u7528\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u9501.\u9501\u4f4f\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5b83\u5904\u7406\u5b8c\u518d\u5f00\u59cb\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b. \u5bfc\u5165\u7ebf\u7a0b\u6807\u51c6\u6a21\u5757 import threading \u4e0d\u4f7f\u7528 Lock \u7684\u60c5\u51b5: \u51fd\u6570\u4e00\uff1a\u5168\u5c40\u53d8\u91cfA\u7684\u503c\u6bcf\u6b21\u52a01\uff0c\u5faa\u73af10\u6b21\uff0c\u5e76\u6253\u5370 def job1 (): global A for i in range ( 10 ): A += 1 print ( 'job1' , A ) \u51fd\u6570\u4e8c\uff1a\u5168\u5c40\u53d8\u91cfA\u7684\u503c\u6bcf\u6b21\u52a010\uff0c\u5faa\u73af10\u6b21\uff0c\u5e76\u6253\u5370 def job2 (): global A for i in range ( 10 ): A += 10 print ( 'job2' , A ) \u4e3b\u51fd\u6570\uff1a\u5b9a\u4e49\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u6267\u884c\u51fd\u6570\u4e00\u548c\u51fd\u6570\u4e8c if __name__ == '__main__' : A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u5b8c\u6574\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 11:52:24 2019 @author: zangz \"\"\" import threading def job1 (): global A for i in range ( 10 ): A += 1 print ( 'job1' , A ) def job2 (): global A for i in range ( 10 ): A += 10 print ( 'job2' , A ) if __name__ == '__main__' : lock = threading . Lock () A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u6267\u884c\u7ed3\u679c: job1job2 11 job2 21 job2 31 job2 41 job2 51 job2 61 job2 71 job2 81 job2 91 job2 101 1 job1 102 job1 103 job1 104 job1 105 job1 106 job1 107 job1 108 job1 109 job1 110 \u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u5370\u7684\u7ed3\u679c\u975e\u5e38\u6df7\u4e71 \u4f7f\u7528 Lock \u7684\u60c5\u51b5: lock\u5728\u4e0d\u540c\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u5171\u4eab\u5185\u5b58\u65f6\uff0c\u80fd\u591f\u786e\u4fdd\u7ebf\u7a0b\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff0c\u4f7f\u7528lock\u7684\u65b9\u6cd5\u662f\uff0c \u5728\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u8fd0\u7b97\u4fee\u6539\u5171\u4eab\u5185\u5b58\u4e4b\u524d\uff0c\u6267\u884clock.acquire()\u5c06\u5171\u4eab\u5185\u5b58\u4e0a\u9501\uff0c \u786e\u4fdd\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u5185\u5b58\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u6267\u884c\u8fd0\u7b97\u5b8c\u6bd5\u540e\uff0c\u4f7f\u7528lock.release()\u5c06\u9501\u6253\u5f00\uff0c \u4fdd\u8bc1\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528\u8be5\u5171\u4eab\u5185\u5b58\u3002 \u51fd\u6570\u4e00\u548c\u51fd\u6570\u4e8c\u52a0\u9501 def job1 (): global A , lock lock . acquire () for i in range ( 10 ): A += 1 print ( 'job1' , A ) lock . release () def job2 (): global A , lock lock . acquire () for i in range ( 10 ): A += 10 print ( 'job2' , A ) lock . release () \u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e2aLock if __name__ == '__main__' : lock = threading . Lock () A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 11:52:24 2019 @author: zangz \"\"\" import threading def job1 (): global A , lock #\u4f7f\u7528\u5168\u5c40\u53d8\u91cf lock . acquire () #\u83b7\u5f97\u9501 for i in range ( 10 ): A += 1 print ( 'job1' , A ) lock . release () #\u91ca\u653e\u9501 ,\u522b\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u4e86 def job2 (): global A , lock lock . acquire () for i in range ( 10 ): A += 10 print ( 'job2' , A ) lock . release () if __name__ == '__main__' : lock = threading . Lock () A = 0 #\u5168\u5c40\u53d8\u91cf t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u8fd0\u884c\u7ed3\u679c job1 1 job1 2 job1 3 job1 4 job1 5 job1 6 job1 7 job1 8 job1 9 job1 10 job2 20 job2 30 job2 40 job2 50 job2 60 job2 70 job2 80 job2 90 job2 100 job2 110 \u4ece\u6253\u5370\u7ed3\u679c\u6765\u770b\uff0c\u4f7f\u7528lock\u540e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u3002\u4f7f\u7528lock\u548c\u4e0d\u4f7f\u7528lock\uff0c\u6700\u540e\u6253\u5370\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e0d\u540c\u7684\u3002","title":"022 python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#threading","text":"\u591a\u7ebf\u7a0b\u662f\u52a0\u901f\u7a0b\u5e8f\u8ba1\u7b97\u7684\u6709\u6548\u65b9\u5f0f\uff0cPython\u7684\u591a\u7ebf\u7a0b\u6a21\u5757threading\u4e0a\u624b\u5feb\u901f\u7b80\u5355\uff0c\u4ece\u8fd9\u8282\u5f00\u59cb\u6211\u4eec\u5c31\u6559\u5927\u5bb6\u5982\u4f55\u4f7f\u7528\u5b83\u3002","title":"\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b Threading"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#_1","text":"\u672c\u8282\u6211\u4eec\u6765\u5b66\u4e60threading\u6a21\u5757\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff0c\u5982\u83b7\u53d6\u7ebf\u7a0b\u6570\uff0c\u6dfb\u52a0\u7ebf\u7a0b\u7b49\u3002\u9996\u5148\u522b\u5fd8\u4e86\u5bfc\u5165\u6a21\u5757\uff1a import threading \u83b7\u53d6\u5df2\u6fc0\u6d3b\u7684\u7ebf\u7a0b\u6570 threading . active_count () \u67e5\u770b\u6240\u6709\u7ebf\u7a0b\u4fe1\u606f \u200b```python threading.enumerate() \u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e00\u4e2a <_MainThread(...)> \u5e26\u591a\u4e2a <Thread(...)> \u3002 \u67e5\u770b\u73b0\u5728\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b threading . current_thread () \u6574\u4e2a\u7684\u4e0a\u8ff0\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" import threading def main (): print ( \"\u5f53\u524d\u7684\u7ebf\u7a0b\u6570: \\n \" , threading . active_count ()) #\u67e5\u770b\u5df2\u7ecf\u6fc0\u6d3b\u7684\u7ebf\u7a0b\u6570 print ( \"\u67e5\u770b\u6240\u6709\u7684\u7ebf\u7a0b\u4fe1\u606f: \\n \" , threading . enumerate ()) #\u67e5\u770b\u6240\u6709\u7ebf\u7a0b\u4fe1\u606f print ( \"\u5f53\u524d\u7ebf\u7a0b: \\n \" , threading . current_thread ()) #\u67e5\u770b\u5f53\u524d\u7ebf\u7a0b if __name__ == '__main__' : #\u5224\u65ad\u662f\u4e0d\u662f\u5728\u5f53\u524d\u7a0b\u5e8f\u4e0b\u6267\u884c,\u662f\u5c31\u6267\u884c\u4e3b\u65b9\u6cd5 main () \u6267\u884c\u7ed3\u679c: \u5f53\u524d\u7684\u7ebf\u7a0b\u6570 : 5 \u67e5\u770b\u6240\u6709\u7684\u7ebf\u7a0b\u4fe1\u606f : [ < _MainThread ( MainThread , started 14952 ) > , < Thread ( Thread - 4 , started daemon 15264 ) > , < Heartbeat ( Thread - 5 , started daemon 11884 ) > , < HistorySavingThread ( IPythonHistorySavingThread , started 2320 ) > , < GarbageCollectorThread ( Thread - 6 , started daemon 7112 ) > ] \u5f53\u524d\u7ebf\u7a0b : < _MainThread ( MainThread , started 14952 ) > \u6dfb\u52a0\u7ebf\u7a0b\uff0c threading.Thread() \u63a5\u6536\u53c2\u6570 target \u4ee3\u8868\u8fd9\u4e2a\u7ebf\u7a0b\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u9700\u81ea\u884c\u5b9a\u4e49 # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1(\u529f\u80fd\u5c31\u662f\u6253\u5370\u5f53\u524d\u7684\u7ebf\u7a0b\u4efb\u52a1) print ( 'This is a thread of %s ' % threading . current_thread ()) def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) thread = threading . Thread ( target = thread_job ,) # \u5b9a\u4e49\u7ebf\u7a0b print ( '_' * 100 ) thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c if __name__ == '__main__' : main () python\u591a\u7ebf\u7a0b\u7684\u6267\u884c: \u4e0d\u52a0 join() \u7684\u7ed3\u679c \u6211\u4eec\u8ba9 T1 \u7ebf\u7a0b\u5de5\u4f5c\u7684\u8017\u65f6\u589e\u52a0. # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading import time def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1 print ( \"T1 start \\n \" ) #\u6253\u5370\u6211\u5f00\u59cb\u505a\u4e86 for i in range ( 10 ): time . sleep ( 0.1 ) #\u4f11\u606f0.1\u79d2 print ( \"T1 stop \\n \" ) #\u6253\u5370\u6211\u505a\u5b8c\u4e86 def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) added_thread = threading . Thread ( target = thread_job , name = 'T1' ) # \u5b9a\u4e49\u7ebf\u7a0b name\u662f\u7ebf\u7a0b\u5b9a\u4e49\u7684\u540d\u5b57 print ( '_' * 100 ) added_thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c #\u5982\u679c\u662f\u5355\u7ebf\u7a0b\u4f1a\u987a\u5e8f\u6267\u884c\u5b8c\u4e0a\u9762\u7684\u51fd\u6570,\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462? print ( \"alldone \\n \" ) if __name__ == '__main__' : main () \u9884\u60f3\u4e2d\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u5426\u4e3a\uff1a T1 start T1 finish all done \u4f46\u5b9e\u9645\u5374\u662f\uff1a \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1 ____________________________________________________________________________________________________ T1 start alldone T1 stop \u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4e86\u591a\u7ebf\u7a0b(\u540c\u65f6\u5728\u8fdb\u884c\u7684\u7ebf\u7a0b\u4efb\u52a1),\u6ca1\u6709\u8fdb\u884c\u987a\u5e8f\u7684\u6267\u884c \u52a0\u5165 join() \u7684\u7ed3\u679c(\u60f3\u8981\u6240\u6709\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\u4e86\u518d\u6253\u5370alldone) \u7ebf\u7a0b\u4efb\u52a1\u8fd8\u672a\u5b8c\u6210\u4fbf\u8f93\u51faall done\u3002\u5982\u679c\u8981\u9075\u5faa\u987a\u5e8f\uff0c\u53ef\u4ee5\u5728\u542f\u52a8\u7ebf\u7a0b\u540e\u5bf9\u5b83\u8c03\u7528join\uff1a added_thread . start () added_thread . join () print ( \"all done \\n \" ) \u603b\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 20:46:17 2019 @author: zangz \"\"\" import threading import time def thread_job (): #\u5b9a\u4e49\u7ebf\u7a0b\u4efb\u52a1 print ( \"T1 start \\n \" ) #\u6253\u5370\u6211\u5f00\u59cb\u505a\u4e86 for i in range ( 10 ): time . sleep ( 0.1 ) #\u4f11\u606f0.1\u79d2 print ( \"T1 stop \\n \" ) #\u6253\u5370\u6211\u505a\u5b8c\u4e86 def main (): print ( \"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1\" ) added_thread = threading . Thread ( target = thread_job , name = 'T1' ) # \u5b9a\u4e49\u7ebf\u7a0b name\u662f\u7ebf\u7a0b\u5b9a\u4e49\u7684\u540d\u5b57 print ( '_' * 100 ) added_thread . start () # \u8ba9\u7ebf\u7a0b\u5f00\u59cb\u5de5\u4f5c added_thread . join () #\u8ba9\u7ebf\u7a0b\u6267\u884c\u5b8c\u5728\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5 print ( \"alldone \\n \" ) if __name__ == '__main__' : main () \u6267\u884c\u7ed3\u679c: \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4efb\u52a1 ____________________________________________________________________________________________________ T1 start T1 stop alldone \u4f7f\u7528join\u5bf9\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u975e\u5e38\u5173\u952e\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u518d\u52a0\u4e00\u4e2a\u7ebf\u7a0bT2\uff0cT2\u7684\u4efb\u52a1\u91cf\u8f83\u5c0f\uff0c\u4f1a\u6bd4T1\u66f4\u5feb\u5b8c\u6210\uff1a \u8f93\u51fa\u7684**\u201d\u4e00\u79cd\u201d \u7ed3\u679c\u662f\uff1a \u4f8b: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish all done T1 finish \u73b0\u5728T1\u548cT2\u90fd\u6ca1\u6709join\uff0c\u6ce8\u610f\u8fd9\u91cc\u8bf4 \u201d\u4e00\u79cd\u201d**\u662f\u56e0\u4e3aall done\u7684\u51fa\u73b0\u5b8c\u5168\u53d6\u51b3\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u901f\u5ea6\uff0c \u5b8c\u5168\u6709\u53ef\u80fdT2 finish\u51fa\u73b0\u5728all done\u4e4b\u540e\u3002\u8fd9\u79cd\u6742\u4e71\u7684\u6267\u884c\u65b9\u5f0f\u662f\u6211\u4eec\u4e0d\u80fd\u5fcd\u53d7\u7684\uff0c\u56e0\u6b64\u8981\u4f7f\u7528join\u52a0\u4ee5\u63a7\u5236\u3002 \u6211\u4eec\u8bd5\u8bd5\u5728T1\u542f\u52a8\u540e\uff0cT2\u542f\u52a8\u524d\u52a0\u4e0a thread_1.join() : # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_2 . start () # \u5f00\u542fT2(\u7531\u4e8eT1\u5728T2\u4efb\u52a1\u5f00\u542f\u4e4b\u524d\u5c31\u52a0\u4e86join\u56e0\u6b64T2\u9700\u8981\u7b49\u5f85T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u624d\u80fd\u5f00\u542f) print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T1 finish T2 start all done T2 finish \u53ef\u4ee5\u770b\u5230\uff0cT2\u4f1a\u7b49\u5f85T1\u7ed3\u675f\u540e\u624d\u5f00\u59cb\u8fd0\u884c\u3002\u8fd9\u662f\u7531\u4e8eT1\u5728T2\u4efb\u52a1\u5f00\u542f\u4e4b\u524d\u5c31\u52a0\u4e86join\u56e0\u6b64T2\u9700\u8981\u7b49\u5f85T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u624d\u80fd\u5f00\u542f \u5982\u679c\u6211\u4eec\u5728T2\u542f\u52a8\u540e\u653e\u4e0athread_1.join()\u4f1a\u600e\u4e48\u6837\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u7ed3\u679c\u5206\u6790: T2\u5728T1\u4e4b\u540e\u542f\u52a8\uff0c\u5e76\u4e14\u56e0\u4e3aT2\u4efb\u52a1\u91cf\u5c0f\u4f1a\u5728T1\u4e4b\u524d\u5b8c\u6210\uff1b\u800cT1\u4e5f\u56e0\u4e3a\u52a0\u4e86join\uff0c\u6240\u4ee5\u5728T1\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5all done\u624d\u80fd\u7ee7\u7eed\u6267\u884c \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0thread_2.join()\u8fdb\u884c\u5c1d\u8bd5\uff0c\u4f46\u4e3a\u4e86\u89c4\u907f\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u63a8\u8350\u5982\u4e0b\u8fd9\u79cd1221\u7684V\u578b\u6392\u5e03(\u524d\u63d0\u662f\u4e0d\u9700\u8981\u7ed3\u679c\u7684\u987a\u5e8f\u6392\u5217(T1\u8f93\u51fa\u7684\u7ed3\u679c\u5148\u5b58,T2\u7684\u8f93\u51fa\u7ed3\u679c\u540e\u5b58)) thread_1 . start () # start T1 thread_2 . start () # start T2 thread_2 . join () # join for T2 thread_1 . join () # join for T1 print ( \"all done \\n \" ) \"\"\" T1 start T2 start T2 finish T1 finish all done \"\"\" \u5b8c\u6574\u7684\u7a0b\u5e8f\u4ee3\u7801: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u8fd9\u79cd\u6267\u884c\u65b9\u5f0f\u53ef\u4ee5\u8ba9\u7ebf\u7a0b\u77ed\u7684\u5148\u6267\u884c\u5b8c,\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462?\u9996\u5148\u4e24\u4e2a\u7ebf\u7a0b\u662f\u90fd\u5f00\u542f\u4e86,\u7136\u540e\u4e24\u4e2a\u90fd\u52a0\u4e86join,\u56e0\u6b64\u4f1a\u7b49\u4e24\u4e2a\u7ebf\u7a0b\u7ed3\u675f\u540e\u624d\u4f1a\u6267\u884calldone,\u53c8\u7531\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5f00\u542f\u4e86\u6240\u4ee5\u6267\u884c\u5feb\u7684\u5148\u7ed3\u675f,\u4e0d\u4f1a\u56e0\u4e3a\u8c01\u5148\u6dfb\u52a0join\u8c01\u5c31\u5148\u6267\u884c\u5b8c.\u6bd4\u5982\u4e0b\u9762\u76841212\u65b9\u5f0f\u662f\u540c\u6837\u7684\u6267\u884c\u7ed3\u679c \u91c7\u75281212\u7684\u65b9\u5f0f\u4f1a\u5982\u4f55? # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_2 . start () # \u5f00\u542fT2 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884calldone thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884calldone print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T2 start T2 finish T1 finish all done \u53ef\u4ee5\u770b\u5230\u4f7f\u75281212\u65b9\u5f0f\u6267\u884c\u7ebf\u7a0b\u65f6,\u8fd8\u662f\u7ebf\u7a0b\u6267\u884c\u5feb\u7684\u5148\u7ed3\u675f,\u4e0d\u4f1a\u56e0\u4e3ajoin\u7684\u524d\u540e\u987a\u5e8f\u5bfc\u81f4\u7ed3\u679c\u7684\u6539\u53d8,\u56e0\u6b64\u5982\u679c\u9700\u8981\u7ebf\u7a0b1\u5148\u7ed3\u675f\u5c31\u8981\u91c7\u53d6\u4e0b\u9762\u76841122\u65b9\u5f0f(\u4f46\u662f\u8fd9\u6837\u5c31\u5931\u53bb\u4e86\u7ebf\u7a0b\u610f\u4e49,\u4e0d\u8fc7\u5728\u4f7f\u7528queue\u7684\u65f6\u5019\u8fd8\u662f\u8981\u6ce8\u610f\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa\u7684\u4f7f\u7528\u987a\u5e8f\u7684) \u6d4b\u8bd5\u4e00\u4e0b\u53e6\u4e00\u79cd1122\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\u7684: # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 21:07:21 2019 @author: zangz \"\"\" import threading def T1_job (): #\u6267\u884c\u7684\u901f\u5ea6\u6162 print ( \"T1 start \\n \" ) for i in range ( 10 ): time . sleep ( 0.1 ) print ( \"T1 finish \\n \" ) def T2_job (): #\u6267\u884c\u7684\u901f\u5ea6\u5feb print ( \"T2 start \\n \" ) print ( \"T2 finish \\n \" ) thread_1 = threading . Thread ( target = T1_job , name = 'T1' ) #\u521b\u5efa\u7ebf\u7a0b1 thread_2 = threading . Thread ( target = T2_job , name = 'T2' ) #\u521b\u5efa\u7ebf\u7a0b2 thread_1 . start () # \u5f00\u542fT1 thread_1 . join () #\u7b49\u7ebf\u7a0bT1\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b thread_2 . start () # \u5f00\u542fT2 thread_2 . join () #\u7b49\u7ebf\u7a0bT2\u6267\u884c\u5b8c\u518d\u6267\u884c\u522b\u7684\u7ebf\u7a0b print ( \"all done \\n \" ) \u6267\u884c\u7ed3\u679c: T1 start T1 finish T2 start T2 finish all done \u8fd9\u79cd\u7684\u5c31\u662f\u5b8c\u5168\u6309\u7167\u987a\u5e8f\u6765\u6267\u884c\u7ebf\u7a0b","title":"\u6dfb\u52a0\u7ebf\u7a0b"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#queue","text":"\u4ee3\u7801\u5b9e\u73b0\u529f\u80fd\uff0c\u5c06\u6570\u636e\u5217\u8868\u4e2d\u7684\u6570\u636e\u4f20\u5165\uff0c\u4f7f\u7528\u56db\u4e2a\u7ebf\u7a0b\u5904\u7406\uff0c\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728Queue\u4e2d\uff0c\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\uff0c\u4eceQueue\u4e2d\u83b7\u53d6\u5b58\u50a8\u7684\u7ed3\u679c \u5bfc\u5165\u7ebf\u7a0b,\u961f\u5217\u7684\u6807\u51c6\u6a21\u5757 import threading import time from queue import Queue \u5b9a\u4e49\u4e00\u4e2a\u88ab\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570 \u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5217\u8868l\u548c\u4e00\u4e2a\u961f\u5217q\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\uff0c\u5bf9\u5217\u8868\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5e73\u65b9\u8ba1\u7b97\uff0c\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u961f\u5217\u4e2d def job ( l , q ): for i in range ( len ( l )): l [ i ] = l [ i ] ** 2 q . put ( l ) #\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\u4e0d\u80fd\u7528return\u8fd4\u56de\u503c \u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u51fd\u6570 \u5728\u591a\u7ebf\u7a0b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e2aQueue\uff0c\u7528\u6765\u4fdd\u5b58\u8fd4\u56de\u503c\uff0c\u4ee3\u66ffreturn\uff0c\u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u5217\u8868\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u591a\u7ef4\u6570\u636e\u5217\u8868\uff0c\u7528\u6765\u5904\u7406\uff1a def multithreading (): q = Queue () #q\u4e2d\u5b58\u653e\u8fd4\u56de\u503c\uff0c\u4ee3\u66ffreturn\u7684\u8fd4\u56de\u503c threads = [] data = [[ 1 , 2 , 3 ],[ 3 , 4 , 5 ],[ 4 , 4 , 4 ],[ 5 , 5 , 5 ]] \u5728\u591a\u7ebf\u7a0b\u51fd\u6570\u4e2d\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b\uff0c\u542f\u52a8\u7ebf\u7a0b\uff0c\u5c06\u6bcf\u4e2a\u7ebf\u7a0b\u6dfb\u52a0\u5230\u591a\u7ebf\u7a0b\u7684\u5217\u8868\u4e2d for i in range ( 4 ): #\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b t = threading . Thread ( target = job , args = ( data [ i ], q )) #Thread\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u88ab\u8c03\u7528\u7684job\u51fd\u6570\u6ca1\u6709\u62ec\u53f7\uff0c\u53ea\u662f\u4e00\u4e2a\u7d22\u5f15\uff0c\u53c2\u6570\u5728\u540e\u9762 t . start () #\u5f00\u59cb\u7ebf\u7a0b threads . append ( t ) #\u628a\u6bcf\u4e2a\u7ebf\u7a0bappend\u5230\u7ebf\u7a0b\u5217\u8868\u4e2d \u5206\u522bjoin\u56db\u4e2a\u7ebf\u7a0b\u5230\u4e3b\u7ebf\u7a0b for thread in threads : thread . join () \u5b9a\u4e49\u4e00\u4e2a\u7a7a\u7684\u5217\u8868results\uff0c\u5c06\u56db\u4e2a\u7ebf\u8fd0\u884c\u540e\u4fdd\u5b58\u5728\u961f\u5217\u4e2d\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u7a7a\u5217\u8868results results = [] for _ in range ( 4 ): results . append ( q . get ()) #q.get()\u6309\u987a\u5e8f\u4eceq\u4e2d\u62ff\u51fa\u4e00\u4e2a\u503c print ( results ) \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Fri Apr 26 22:21:09 2019 @author: zangz \"\"\" import threading import time from queue import Queue #\u961f\u5217 #\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570:l\u662f\u4e00\u4e2a\u5217\u8868,\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u5e73\u65b9\u7684\u8fd0\u7b97 def job ( l , q ): for i in range ( len ( l )): l [ i ] = l [ i ] ** 2 q . put ( l ) #\u7ebf\u7a0b\u4e2d\u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c def multithreading (): q = Queue () #\u5148\u5b9a\u4e49\u4e00\u4e2aq\u961f\u5217(\u653e\u5165\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u8fd4\u56de\u503c) threads = [] #\u628a\u6240\u6709\u7684\u7ebf\u7a0b\u653e\u5927\u8fd9\u4e2a\u5217\u8868\u4e2d data = [[ 1 , 2 , 3 ],[ 3 , 4 , 5 ],[ 4 , 4 , 4 ],[ 5 , 5 , 5 ]] #\u56db\u4e2a\u6570\u636e\u5217\u8868 for i in range ( 4 ): #\u5faa\u73af\u5b9a\u4e49\u56db\u4e2a\u7ebf\u7a0b t = threading . Thread ( target = job , args = ( data [ i ], q )) #target\u662f\u529f\u80fd\u7684\u540d\u5b57,args\u662f\u4f20\u5165\u7684\u53c2\u6570 t . start () #\u5f00\u542f\u7ebf\u7a0b threads . append ( t ) #\u5c06\u7ebf\u7a0b\u52a0\u5230\u5168\u90e8\u7684\u7ebf\u7a0b\u4e2d for thread in threads : thread . join () #\u5c06join\u529f\u80fd\u52a0\u5230\u7ebf\u7a0b\u4e2d,\u4f7f\u5f97\u6240\u6709\u7684\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u4ee5\u540e\u624d\u8fd4\u56de\u7ed3\u679c\u503c(\u540c\u65f6\u8fd9\u6837\u4e0d\u4f1a\u51fa\u73b0\u6df7\u4e71,\u4f9d\u6b21\u7ebf\u7a0b\u6267\u884c) # \u5faa\u73af\u5f97\u5230\u56db\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u503c results = [] for _ in range ( 4 ): results . append ( q . get ()) #\u4eceq\u4e2d\u53d6\u503c;\u4f20\u4e86\u56db\u6b21\u62ff\u56db\u6b21.\u961f\u5217\u5148\u8fdb\u5148\u51fa print ( results ) if __name__ == '__main__' : multithreading () \u6700\u540e\u8fd0\u884c\u7ed3\u679c\u4e3a: [[ 1 , 4 , 9 ], [ 9 , 16 , 25 ], [ 16 , 16 , 16 ], [ 25 , 25 , 25 ]] \u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u5168\u90e8\u5f00\u542f\u670d\u52a1\u518d\u52a0join\u7684\u65b9\u5f0f,\u5982\u679c\u67d0\u4e2a\u5217\u8868\u7684\u6267\u884c\u901f\u5ea6\u6162\u4e86,\u5c31\u4f1a\u5bfc\u81f4\u5b58\u8fdb\u961f\u5217\u7684\u65f6\u5019\u987a\u5e8f\u4e0d\u4e00\u81f4,\u5bfc\u81f4\u7ed3\u679c\u7684\u9519\u4e71.","title":"\u50a8\u5b58\u8fdb\u7a0b\u7ed3\u679c Queue"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#gil","text":"\u8fd9\u6b21\u6211\u4eec\u6765\u770b\u770b\u4e3a\u4ec0\u4e48\u8bf4 python \u7684\u591a\u7ebf\u7a0b threading \u6709\u65f6\u5019\u5e76\u4e0d\u662f\u7279\u522b\u7406\u60f3. \u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\u5c31\u662f, Python \u7684\u8bbe\u8ba1\u4e0a, \u6709\u4e00\u4e2a\u5fc5\u8981\u7684\u73af\u8282, \u5c31\u662f Global Interpreter Lock (GIL). \u8fd9\u4e2a\u4e1c\u897f\u8ba9 Python \u8fd8\u662f\u4e00\u6b21\u6027\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u4e1c\u897f. \u6211\u4ece \u8fd9\u91cc \u6458\u6284\u4e86\u4e00\u6bb5\u5bf9\u4e8e GIL \u7684\u89e3\u91ca. \u5c3d\u7ba1Python\u5b8c\u5168\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c \u4f46\u662f\u89e3\u91ca\u5668\u7684C\u8bed\u8a00\u5b9e\u73b0\u90e8\u5206\u5728\u5b8c\u5168\u5e76\u884c\u6267\u884c\u65f6\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u5b9e\u9645\u4e0a\uff0c\u89e3\u91ca\u5668\u88ab\u4e00\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u4fdd\u62a4\u7740\uff0c\u5b83\u786e\u4fdd\u4efb\u4f55\u65f6\u5019\u90fd\u53ea\u6709\u4e00\u4e2aPython\u7ebf\u7a0b\u6267\u884c\u3002 GIL\u6700\u5927\u7684\u95ee\u9898\u5c31\u662fPython\u7684\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5e76\u4e0d\u80fd\u5229\u7528\u591a\u6838CPU\u7684\u4f18\u52bf \uff08\u6bd4\u5982\u4e00\u4e2a\u4f7f\u7528\u4e86\u591a\u4e2a\u7ebf\u7a0b\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u7a0b\u5e8f\u53ea\u4f1a\u5728\u4e00\u4e2a\u5355CPU\u4e0a\u9762\u8fd0\u884c\uff09\u3002 \u5728\u8ba8\u8bba\u666e\u901a\u7684GIL\u4e4b\u524d\uff0c\u6709\u4e00\u70b9\u8981\u5f3a\u8c03\u7684\u662fGIL\u53ea\u4f1a\u5f71\u54cd\u5230\u90a3\u4e9b\u4e25\u91cd\u4f9d\u8d56CPU\u7684\u7a0b\u5e8f\uff08\u6bd4\u5982\u8ba1\u7b97\u578b\u7684\uff09\u3002 \u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u5927\u90e8\u5206\u53ea\u4f1a\u6d89\u53ca\u5230I/O\uff0c\u6bd4\u5982\u7f51\u7edc\u4ea4\u4e92\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u7ebf\u7a0b\u5c31\u5f88\u5408\u9002\uff0c \u56e0\u4e3a\u5b83\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85\u3002\u5b9e\u9645\u4e0a\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u653e\u5fc3\u7684\u521b\u5efa\u51e0\u5343\u4e2aPython\u7ebf\u7a0b\uff0c \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u8fd9\u4e48\u591a\u7ebf\u7a0b\u6ca1\u6709\u4efb\u4f55\u538b\u529b\uff0c\u6ca1\u5565\u53ef\u62c5\u5fc3\u7684\u3002","title":"GIL \u4e0d\u4e00\u5b9a\u6709\u6548\u7387"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#gil_1","text":"\u6211\u4eec\u521b\u5efa\u4e00\u4e2a job, \u5206\u522b\u7528 threading \u548c \u4e00\u822c\u7684\u65b9\u5f0f\u6267\u884c\u8fd9\u6bb5\u7a0b\u5e8f. \u5e76\u4e14\u521b\u5efa\u4e00\u4e2a list \u6765\u5b58\u653e\u6211\u4eec\u8981\u5904\u7406\u7684\u6570\u636e. \u5728 Normal \u7684\u65f6\u5019, \u6211\u4eec\u8fd9\u4e2a list \u6269\u5c554\u500d, \u5728 threading \u7684\u65f6\u5019, \u6211\u4eec\u5efa\u7acb4\u4e2a\u7ebf\u7a0b, \u5e76\u5bf9\u8fd0\u884c\u65f6\u95f4\u8fdb\u884c\u5bf9\u6bd4. # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 10:47:13 2019 @author: zangz \"\"\" import threading #\u5bfc\u5165\u7ebf\u7a0b\u5305 from queue import Queue #\u961f\u5217 import copy #\u62f7\u8d1d\u5305 import time def job ( l , q ): res = sum ( l ) #\u5bf9\u5217\u8868\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u6c42\u548c q . put ( res ) #\u8fdb\u961f\u5217 def multithreading ( l ): q = Queue () #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u961f\u5217 threads = [] #\u5b58\u653e\u7ebf\u7a0b for i in range ( 4 ): t = threading . Thread ( target = job , args = ( copy . copy ( l ), q ), name = 'T %i ' % i ) t . start () threads . append ( t ) [ t . join () for t in threads ] total = 0 #\u521d\u59cb\u4e00\u4e2a\u503c for _ in range ( 4 ): total += q . get () #\u53d6\u51fa\u6240\u6709\u7684\u7ed3\u679c print ( total ) #\u6253\u5370\u7ed3\u679c def normal ( l ): total = sum ( l ) print ( total ) if __name__ == '__main__' : l = list ( range ( 1000000 )) s_t = time . time () #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 normal ( l * 4 ) print ( 'normal: ' , time . time () - s_t ) #\u5f97\u5230\u6267\u884c\u65f6\u95f4 s_t = time . time () multithreading ( l ) print ( 'multithreading: ' , time . time () - s_t ) \u5982\u679c\u4f60\u6210\u529f\u8fd0\u884c\u6574\u5957\u7a0b\u5e8f, \u4f60\u5927\u6982\u4f1a\u6709\u8fd9\u6837\u7684\u8f93\u51fa. \u6211\u4eec\u7684\u8fd0\u7b97\u7ed3\u679c\u6ca1\u9519, \u6240\u4ee5\u7a0b\u5e8f threading \u548c Normal \u8fd0\u884c\u4e86\u4e00\u6837\u591a\u6b21\u7684\u8fd0\u7b97. \u4f46\u662f\u6211\u4eec\u53d1\u73b0 threading \u5374\u6ca1\u6709\u5feb\u591a\u5c11, \u6309\u7406\u6765\u8bf4, \u6211\u4eec\u9884\u671f\u4f1a\u8981\u5feb3-4\u500d, \u56e0\u4e3a\u6709\u5efa\u7acb4\u4e2a\u7ebf\u7a0b, \u4f46\u662f\u5e76\u6ca1\u6709. \u8fd9\u5c31\u662f\u5176\u4e2d\u7684 GIL \u5728\u4f5c\u602a. \u6267\u884c\u7ed3\u679c: 1999998000000 normal : 0.17794227600097656 1999998000000 multithreading : 0.16945099830627441 \u6267\u884c\u7684\u7518\u7279\u56fe: \u7ebf\u7a0b\u6267\u884c\u5230\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u4f1a\u4ea4\u7ed9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u8fd0\u7b97","title":"\u6d4b\u8bd5 GIL"},{"location":"python\u5b66\u4e60/022-python\u591a\u7ebf\u7a0b(\u4fee\u6539\u501f\u9274\u83ab\u70e6python)/#lock","text":"\u5982\u679c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406\u5b8c\u7684\u521d\u6b65\u7684\u7ed3\u679c\u62ff\u7ed9\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u7528\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u9501.\u9501\u4f4f\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5b83\u5904\u7406\u5b8c\u518d\u5f00\u59cb\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b. \u5bfc\u5165\u7ebf\u7a0b\u6807\u51c6\u6a21\u5757 import threading \u4e0d\u4f7f\u7528 Lock \u7684\u60c5\u51b5: \u51fd\u6570\u4e00\uff1a\u5168\u5c40\u53d8\u91cfA\u7684\u503c\u6bcf\u6b21\u52a01\uff0c\u5faa\u73af10\u6b21\uff0c\u5e76\u6253\u5370 def job1 (): global A for i in range ( 10 ): A += 1 print ( 'job1' , A ) \u51fd\u6570\u4e8c\uff1a\u5168\u5c40\u53d8\u91cfA\u7684\u503c\u6bcf\u6b21\u52a010\uff0c\u5faa\u73af10\u6b21\uff0c\u5e76\u6253\u5370 def job2 (): global A for i in range ( 10 ): A += 10 print ( 'job2' , A ) \u4e3b\u51fd\u6570\uff1a\u5b9a\u4e49\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u6267\u884c\u51fd\u6570\u4e00\u548c\u51fd\u6570\u4e8c if __name__ == '__main__' : A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u5b8c\u6574\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 11:52:24 2019 @author: zangz \"\"\" import threading def job1 (): global A for i in range ( 10 ): A += 1 print ( 'job1' , A ) def job2 (): global A for i in range ( 10 ): A += 10 print ( 'job2' , A ) if __name__ == '__main__' : lock = threading . Lock () A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u6267\u884c\u7ed3\u679c: job1job2 11 job2 21 job2 31 job2 41 job2 51 job2 61 job2 71 job2 81 job2 91 job2 101 1 job1 102 job1 103 job1 104 job1 105 job1 106 job1 107 job1 108 job1 109 job1 110 \u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u5370\u7684\u7ed3\u679c\u975e\u5e38\u6df7\u4e71 \u4f7f\u7528 Lock \u7684\u60c5\u51b5: lock\u5728\u4e0d\u540c\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u5171\u4eab\u5185\u5b58\u65f6\uff0c\u80fd\u591f\u786e\u4fdd\u7ebf\u7a0b\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff0c\u4f7f\u7528lock\u7684\u65b9\u6cd5\u662f\uff0c \u5728\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u8fd0\u7b97\u4fee\u6539\u5171\u4eab\u5185\u5b58\u4e4b\u524d\uff0c\u6267\u884clock.acquire()\u5c06\u5171\u4eab\u5185\u5b58\u4e0a\u9501\uff0c \u786e\u4fdd\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u5185\u5b58\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u6267\u884c\u8fd0\u7b97\u5b8c\u6bd5\u540e\uff0c\u4f7f\u7528lock.release()\u5c06\u9501\u6253\u5f00\uff0c \u4fdd\u8bc1\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528\u8be5\u5171\u4eab\u5185\u5b58\u3002 \u51fd\u6570\u4e00\u548c\u51fd\u6570\u4e8c\u52a0\u9501 def job1 (): global A , lock lock . acquire () for i in range ( 10 ): A += 1 print ( 'job1' , A ) lock . release () def job2 (): global A , lock lock . acquire () for i in range ( 10 ): A += 10 print ( 'job2' , A ) lock . release () \u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e2aLock if __name__ == '__main__' : lock = threading . Lock () A = 0 t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 11:52:24 2019 @author: zangz \"\"\" import threading def job1 (): global A , lock #\u4f7f\u7528\u5168\u5c40\u53d8\u91cf lock . acquire () #\u83b7\u5f97\u9501 for i in range ( 10 ): A += 1 print ( 'job1' , A ) lock . release () #\u91ca\u653e\u9501 ,\u522b\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u4e86 def job2 (): global A , lock lock . acquire () for i in range ( 10 ): A += 10 print ( 'job2' , A ) lock . release () if __name__ == '__main__' : lock = threading . Lock () A = 0 #\u5168\u5c40\u53d8\u91cf t1 = threading . Thread ( target = job1 ) t2 = threading . Thread ( target = job2 ) t1 . start () t2 . start () t1 . join () t2 . join () \u8fd0\u884c\u7ed3\u679c job1 1 job1 2 job1 3 job1 4 job1 5 job1 6 job1 7 job1 8 job1 9 job1 10 job2 20 job2 30 job2 40 job2 50 job2 60 job2 70 job2 80 job2 90 job2 100 job2 110 \u4ece\u6253\u5370\u7ed3\u679c\u6765\u770b\uff0c\u4f7f\u7528lock\u540e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u3002\u4f7f\u7528lock\u548c\u4e0d\u4f7f\u7528lock\uff0c\u6700\u540e\u6253\u5370\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e0d\u540c\u7684\u3002","title":"\u7ebf\u7a0b\u9501 lock"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/","text":"\u4ec0\u4e48\u662f Multiprocessing \u00b6 \u548c threading \u7684\u6bd4\u8f83: \u591a\u8fdb\u7a0b Multiprocessing \u548c\u591a\u7ebf\u7a0b threading \u7c7b\u4f3c, \u4ed6\u4eec\u90fd\u662f\u5728 python \u4e2d\u7528\u6765\u5e76\u884c\u8fd0\u7b97\u7684. \u4e0d\u8fc7\u65e2\u7136\u6709\u4e86 threading, \u4e3a\u4ec0\u4e48 Python \u8fd8\u8981\u51fa\u4e00\u4e2a multiprocessing \u5462? \u539f\u56e0\u5f88\u7b80\u5355, \u5c31\u662f\u7528\u6765\u5f25\u8865 threading \u7684\u4e00\u4e9b\u52a3\u52bf, \u6bd4\u5982\u5728 threading \u6559\u7a0b\u4e2d\u63d0\u5230\u7684GIL . \u4f7f\u7528 multiprocessing \u4e5f\u975e\u5e38\u7b80\u5355, \u5982\u679c\u5bf9 threading \u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u670b\u53cb, \u4f60\u4eec\u7684\u4eab\u53d7\u65f6\u95f4\u5c31\u5230\u4e86. \u56e0\u4e3a python \u628a multiprocessing \u548c threading \u7684\u4f7f\u7528\u65b9\u6cd5\u505a\u7684\u51e0\u4e4e\u5dee\u4e0d\u591a. \u8fd9\u6837\u6211\u4eec\u5c31\u66f4\u5bb9\u6613\u4e0a\u624b. \u4e5f\u66f4\u5bb9\u6613\u53d1\u6325\u4f60\u7535\u8111\u591a\u6838\u7cfb\u7edf\u7684\u5a01\u529b\u4e86! \u5bfc\u5165\u7ebf\u7a0b\u8fdb\u7a0b\u6807\u51c6\u6a21\u5757 \u00b6 import multiprocessing as mp #\u591a\u8fdb\u7a0b\u6a21\u5757 import threading as td #\u591a\u7ebf\u7a0b\u6a21\u5757 \u5b9a\u4e49\u4e00\u4e2a\u88ab\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u8c03\u7528\u7684\u51fd\u6570 \u00b6 def job(a,d): print('aaaaa') \u521b\u5efa\u7ebf\u7a0b\u548c\u8fdb\u7a0b \u00b6 t1 = td . Thread ( target = job , args = ( 1 , 2 )) p1 = mp . Process ( target = job , args = ( 1 , 2 )) \u6ce8\u610f\uff1aThread\u548cProcess\u7684\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199\uff0c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u6ca1\u6709\u62ec\u53f7\uff0c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u7684\u53c2\u6570\u653e\u5728args(\u2026)\u4e2d \u5206\u522b\u542f\u52a8\u7ebf\u7a0b\u548c\u8fdb\u7a0b t1 . start () p1 . start () \u5206\u522b\u8fde\u63a5\u7ebf\u7a0b\u548c\u8fdb\u7a0b t1 . join () p1 . join () \u5b8c\u6574\u7684\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u521b\u5efa\u4f7f\u7528\u5bf9\u6bd4\u4ee3\u7801 \u00b6 import multiprocessing as mp import threading as td def job ( a , d ): print ( 'aaaaa' ) t1 = td . Thread ( target = job , args = ( 1 , 2 )) p1 = mp . Process ( target = job , args = ( 1 , 2 )) t1 . start () p1 . start () t1 . join () p1 . join () \u4ece\u4e0a\u9762\u7684\u4f7f\u7528\u5bf9\u6bd4\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u4f3c \u8fd0\u7528 \u00b6 \u5728\u8fd0\u7528\u65f6\u9700\u8981\u6dfb\u52a0\u4e0a\u4e00\u4e2a\u5b9a\u4e49main\u51fd\u6570\u7684\u8bed\u53e5(\u5fc5\u987b\u8981\u6709):\u539f\u56e0\uff1a\u591a\u8fdb\u7a0b\u9700\u8981\u5728main\u51fd\u6570\u4e2d\u8fd0\u884c\uff0c if __name__ == '__main__' : \u5b8c\u6574\u7684\u5e94\u7528\u4ee3\u7801\uff1a import multiprocessing as mp #\u5bfc\u5305 def job(a,d): #\u5b9a\u4e49\u51fd\u6570\u529f\u80fd print('aaaaa') if __name__=='__main__': p1 = mp.Process(target=job,args=(1,2)) #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b p1.start() #\u5f00\u542f\u8fdb\u7a0b p1.join() #\u8fde\u63a5\u8fdb\u7a0b \u8fd0\u884c\u73af\u5883\u8981\u5728terminal\u73af\u5883\u4e0b\uff0c\u53ef\u80fd\u5176\u4ed6\u7684\u7f16\u8f91\u5de5\u5177\u4f1a\u51fa\u73b0\u8fd0\u884c\u7ed3\u675f\u540e\u6ca1\u6709\u6253\u5370\u7ed3\u679c\uff0c\u5728terminal\u4e2d\u7684\u8fd0\u884c\u540e\u6253\u5370\u7684\u7ed3\u679c\u4e3a\uff1a aaaaa \u5b58\u50a8\u8fdb\u7a0b\u8f93\u51fa Queue \u00b6 Queue\u7684\u529f\u80fd\u662f\u5c06\u6bcf\u4e2a\u6838\u6216\u7ebf\u7a0b\u7684\u8fd0\u7b97\u7ed3\u679c\u653e\u5728\u961f\u91cc\u4e2d\uff0c \u7b49\u5230\u6bcf\u4e2a\u7ebf\u7a0b\u6216\u6838\u8fd0\u884c\u5b8c\u6bd5\u540e\u518d\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u7ed3\u679c\uff0c \u7ee7\u7eed\u52a0\u8f7d\u8fd0\u7b97\u3002\u539f\u56e0\u5f88\u7b80\u5355, \u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\u4e0d\u80fd\u6709\u8fd4\u56de\u503c, \u6240\u4ee5\u4f7f\u7528Queue\u5b58\u50a8\u591a\u4e2a\u7ebf\u7a0b\u8fd0\u7b97\u7684\u7ed3\u679c \u628a\u7ed3\u679c\u653e\u5728 Queue \u91cc \u5b9a\u4e49\u4e00\u4e2a\u88ab\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\uff0cq \u5c31\u50cf\u4e00\u4e2a\u961f\u5217\uff0c\u7528\u6765\u4fdd\u5b58\u6bcf\u6b21\u51fd\u6570\u8fd0\u884c\u7684\u7ed3\u679c #\u8be5\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff01\uff01\uff01 def job ( q ): res = 0 for i in range ( 1000 ): res += i + i ** 2 + i ** 3 q . put ( res ) #queue \u4e3b\u51fd\u6570 \u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u961f\u5217\uff0c\u7528\u6765\u5b58\u50a8\u7ed3\u679c if __name__ == '__main__' : q = mp . Queue () \u5b9a\u4e49\u4e24\u4e2a\u7ebf\u7a0b\u51fd\u6570\uff0c\u7528\u6765\u5904\u7406\u540c\u4e00\u4e2a\u4efb\u52a1, args \u7684\u53c2\u6570\u53ea\u8981\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u53c2\u6570\u540e\u9762\u9700\u8981\u52a0\u4e00\u4e2a\u9017\u53f7\uff0c\u8868\u793aargs\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u540e\u9762\u53ef\u80fd\u8fd8\u6709\u522b\u7684\u53c2\u6570\uff0c\u4e0d\u52a0\u9017\u53f7\u4f1a\u51fa\u9519 p1 = mp.Process(target=job,args=(q,)) p2 = mp.Process(target=job,args=(q,)) \u5206\u522b\u542f\u52a8\u3001\u8fde\u63a5\u4e24\u4e2a\u7ebf\u7a0b p1 . start () p2 . start () p1 . join () p2 . join () \u4e0a\u9762\u662f\u5206\u4e24\u6279\u5904\u7406\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u5206\u4e24\u6279\u8f93\u51fa\uff0c\u5c06\u7ed3\u679c\u5206\u522b\u4fdd\u5b58 res1 = q . get () res2 = q . get () \u6253\u5370\u6700\u540e\u7684\u8fd0\u7b97\u7ed3\u679c \u200b `` ` python print ( res1 + res2 ) \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:04:45 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 def job ( q ): #\u591a\u8fdb\u7a0b\u6ca1\u6709\u8fd4\u56de\u503c,\u538b\u5230\u961f\u5217\u4e2d res = 0 #\u521d\u59cb\u503c for i in range ( 1000 ): res += i + i ** 2 + i ** 3 q . put ( res ) #queue,\u5c31\u8fd0\u7b97\u7684\u7ed3\u679c\u538b\u5230\u961f\u5217\u4e2d if __name__ == '__main__' : q = mp . Queue () #\u521b\u5efa\u4e00\u4e2a\u961f\u5217 p1 = mp . Process ( target = job , args = ( q ,)) #target\u662f\u76ee\u6807\u51fd\u6570,args\u662f\u51fd\u6570\u4e2d\u4f20\u5165\u7684\u53c2\u6570 # args \u7684\u53c2\u6570\u53ea\u8981\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u53c2\u6570\u540e\u9762\u9700\u8981\u52a0\u4e00\u4e2a\u9017\u53f7\uff0c\u8868\u793aargs\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u540e\u9762\u53ef\u80fd\u8fd8\u6709\u522b\u7684\u53c2\u6570\uff0c\u4e0d\u52a0\u9017\u53f7\u4f1a\u51fa\u9519 p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () #\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa res2 = q . get () print ( res1 + res2 ) \u8fd0\u884c\u7684\u65f6\u5019\u8fd8\u662f\u8981\u5728terminal\u4e2d\uff0c\u6700\u540e\u8fd0\u884c\u7ed3\u679c\u4e3a: 499667166000 \u6548\u7387\u5bf9\u6bd4 threading & multiprocessing \u00b6 \u4e0a\u7bc7\u8bb2\u4e86\u591a\u8fdb\u7a0b/\u591a\u6838\u7684\u8fd0\u7b97\uff0c\u8fd9\u6b21\u6211\u4eec\u6765\u5bf9\u6bd4\u4e0b\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\u548c\u4ec0\u4e48\u90fd\u4e0d\u505a\u65f6\u7684\u6d88\u8017\u65f6\u95f4\uff0c\u770b\u770b\u54ea\u79cd\u65b9\u5f0f\u66f4\u6709\u6548\u7387\u3002 \u521b\u5efa\u591a\u8fdb\u7a0b multiprocessing \u548c\u4e0a\u8282\u4e00\u6837\uff0c\u9996\u5148import multiprocessing\u5e76\u5b9a\u4e49\u8981\u5b9e\u73b0\u7684job()\uff0c\u540c\u65f6\u4e3a\u4e86\u5bb9\u6613\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u8ba1\u7b97\u7684\u6b21\u6570\u589e\u52a0\u52301000000 import multiprocessing as mp def job ( q ): res = 0 for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 q . put ( res ) # queue \u56e0\u4e3a\u591a\u8fdb\u7a0b\u662f\u591a\u6838\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e0a\u8282\u7684\u591a\u8fdb\u7a0b\u4ee3\u7801\u547d\u540d\u4e3amulticore() def multicore (): q = mp . Queue () p1 = mp . Process ( target = job , args = ( q ,)) p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () res2 = q . get () print ( 'multicore:' , res1 + res2 ) \u521b\u5efa\u591a\u7ebf\u7a0b multithread: \u63a5\u4e0b\u6765\u521b\u5efa\u591a\u7ebf\u7a0b\u7a0b\u5e8f\uff0c\u521b\u5efa\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u5730\u65b9\u3002\u9996\u5148import threading\u7136\u540e\u5b9a\u4e49multithread()\u5b8c\u6210\u540c\u6837\u7684\u4efb\u52a1 import threading as td def multithread (): q = mp . Queue () # thread\u53ef\u653e\u5165process\u540c\u6837\u7684queue\u4e2d t1 = td . Thread ( target = job , args = ( q ,)) t2 = td . Thread ( target = job , args = ( q ,)) t1 . start () t2 . start () t1 . join () t2 . join () res1 = q . get () res2 = q . get () print ( 'multithread:' , res1 + res2 ) \u521b\u5efa\u666e\u901a\u51fd\u6570: \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u6700\u666e\u901a\u7684\u51fd\u6570\u3002\u6ce8\u610f\uff0c\u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\u6211\u4eec\u5efa\u7acb\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\uff0c\u5747\u5bf9job()\u8fdb\u884c\u4e86\u4e24\u6b21\u8fd0\u7b97\uff0c\u6240\u4ee5\u5728normal()\u4e2d\u6211\u4eec\u4e5f\u8ba9\u5b83\u5faa\u73af\u4e24\u6b21: def normal (): res = 0 for _ in range ( 2 ): for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 print ( 'normal:' , res ) \u8fd0\u884c\u65f6\u95f4 \u6700\u540e\uff0c\u4e3a\u4e86\u5bf9\u6bd4\u5404\u51fd\u6570\u8fd0\u884c\u65f6\u95f4\uff0c\u6211\u4eec\u9700\u8981import time\uff0c \u7136\u540e\u4f9d\u6b21\u8fd0\u884c\u5b9a\u4e49\u597d\u51fd\u6570\uff1a import time if __name__ == '__main__' : st = time . time () normal () st1 = time . time () print ( 'normal time:' , st1 - st ) multithread () st2 = time . time () print ( 'multithread time:' , st2 - st1 ) multicore () print ( 'multicore time:' , time . time () - st2 ) \u5927\u529f\u544a\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e0b\u5b9e\u9645\u8fd0\u884c\u5bf9\u6bd4\u3002 \u6574\u4e2a\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:15:11 2019 @author: zangz \"\"\" import multiprocessing as mp #\u591a\u8fdb\u7a0b\u5bfc\u5305 import threading as td #\u591a\u7ebf\u7a0b\u5bfc\u5305 import time def job ( q ): #\u76ee\u6807\u51fd\u6570\u529f\u80fd res = 0 for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 q . put ( res ) # queue def multicore (): #\u591a\u8fdb\u7a0b\u51fd\u6570 q = mp . Queue () p1 = mp . Process ( target = job , args = ( q ,)) p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () res2 = q . get () print ( 'multicore:' , res1 + res2 ) def multithread (): #\u591a\u7ebf\u7a0b q = mp . Queue () # thread\u53ef\u653e\u5165process\u540c\u6837\u7684queue\u4e2d t1 = td . Thread ( target = job , args = ( q ,)) t2 = td . Thread ( target = job , args = ( q ,)) t1 . start () t2 . start () t1 . join () t2 . join () res1 = q . get () res2 = q . get () print ( 'multithread:' , res1 + res2 ) def normal (): #\u666e\u901a\u51fd\u6570 res = 0 for _ in range ( 2 ): for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 print ( 'normal:' , res ) if __name__ == '__main__' : #\u4e3b\u51fd\u6570 st = time . time () normal () st1 = time . time () print ( 'normal time:' , st1 - st ) #\u8ba1\u7b97\u7684\u662f\u6267\u884c\u666e\u901a\u51fd\u6570\u7684\u65f6\u95f4\u5dee multithread () st2 = time . time () print ( 'multithread time:' , st2 - st1 ) #\u8ba1\u7b97\u7684\u662f\u591a\u7ebf\u7a0b\u7684\u65f6\u95f4\u5dee multicore () print ( 'multicore time:' , time . time () - st2 ) #\u8ba1\u7b97\u7684\u662f\u591a\u8fdb\u7a0b\u7684\u65f6\u95f4\u5dee \u6267\u884c\u7ed3\u679c: normal : 499999666667166666000000 normal time : 1.8903188705444336 multithread : 499999666667166666000000 multithread time : 1.8123459815979004 multicore : 499999666667166666000000 multicore time : 1.237776756286621 \u591a\u6b21\u8fd0\u884c\u7684\u7ed3\u679c\u8868\u793a\u8fd0\u7b97\u91cf\u4f4e\u7684\u65f6\u5019\u4f7f\u7528\u6b63\u5e38\u7684\u51fd\u6570\u6bd4\u8f83\u597d,\u4f46\u662f\u8fd0\u7b97\u91cf\u8f83\u9ad8\u7684\u65f6\u5019\u4f7f\u7528\u591a\u8fdb\u7a0b\u660e\u663e\u5feb\u5f88\u591a \u6bd4\u5982\u6211\u5c06\u4efb\u52a1\u91cf\u6539\u4e3a:range(10000000): \u6267\u884c\u7ed3\u679c: normal : 4999999666666716666660000000 normal time : 18.560267686843872 multithread : 499999666667166666000000 multithread time : 1.814974308013916 multicore : 499999666667166666000000 multicore time : 1.2792866230010986 \u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684\u4f7f\u7528\u662f\u9700\u8981\u660e\u786e\u4f7f\u7528\u573a\u666f\u7684\uff0c\u591a\u8fdb\u7a0b\u6bd4\u8f83\u9002\u5408\u5904\u7406\u8ba1\u7b97\uff08CPU\uff09\u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff08\u5982\u4e0a\u4ee3\u7801\u5c31\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\uff09\uff0c\u591a\u7ebf\u7a0b\u9002\u5408\u5904\u7406I/O\u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff0c\u5b83\u907f\u514d\u4e86\u591a\u8fdb\u7a0b\u8d44\u6e90\u4e0d\u65ad\u91ca\u653e\u548c\u7533\u8bf7\uff08\u591a\u7ebf\u7a0b\u5171\u4eab\u591a\u8fdb\u7a0b\u8d44\u6e90\uff09\u3002 \u8fdb\u7a0b\u6c60 Pool \u00b6 \u8fd9\u6b21\u6211\u4eec\u8bb2\u8fdb\u7a0b\u6c60Pool\u3002 \u8fdb\u7a0b\u6c60\u5c31\u662f\u6211\u4eec\u5c06\u6240\u8981\u8fd0\u884c\u7684\u4e1c\u897f\uff0c\u653e\u5230\u6c60\u5b50\u91cc\uff0cPython\u4f1a\u81ea\u884c\u89e3\u51b3\u591a\u8fdb\u7a0b\u7684\u95ee\u9898 \u9996\u5148import multiprocessing\u548c\u5b9a\u4e49job() import multiprocessing as mp def job ( x ): return x * x \u8fdb\u7a0b\u6c60 Pool() \u548c map() \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aPool pool = mp . Pool () \u6709\u4e86\u6c60\u5b50\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8ba9\u6c60\u5b50\u5bf9\u5e94\u67d0\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u5411\u6c60\u5b50\u91cc\u4e22\u6570\u636e\uff0c\u6c60\u5b50\u5c31\u4f1a\u8fd4\u56de\u51fd\u6570\u8fd4\u56de\u7684\u503c\u3002 Pool\u548c\u4e4b\u524d\u7684Process\u7684\u4e0d\u540c\u70b9\u662f\u4e22\u5411Pool\u7684\u51fd\u6570\u6709\u8fd4\u56de\u503c\uff0c\u800cProcess\u7684\u6ca1\u6709\u8fd4\u56de\u503c\u3002 \u63a5\u4e0b\u6765\u7528map()\u83b7\u53d6\u7ed3\u679c\uff0c\u5728map()\u4e2d\u9700\u8981\u653e\u5165\u51fd\u6570\u548c\u9700\u8981\u8fed\u4ee3\u8fd0\u7b97\u7684\u503c\uff0c\u7136\u540e\u5b83\u4f1a\u81ea\u52a8\u5206\u914d\u7ed9CPU\u6838\uff0c\u8fd4\u56de\u7ed3\u679c res = pool . map ( job , range ( 10 )) \u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e00\u4e0b def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) if __name__ == '__main__' : multicore () \u5b8c\u6574\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:40:20 2019 @author: zangz \"\"\" import multiprocessing as mp def job ( x ): #\u5b9a\u4e49\u76ee\u6807\u7684\u529f\u80fd\u6709\u8fd4\u56de\u503c return x * x def multicore (): #\u591a\u7ebf\u7a0b\u7684\u51fd\u6570 pool = mp . Pool () #\u5b9e\u4f8b\u5316(\u521b\u5efa)\u4e00\u4e2a\u6c60 res = pool . map ( job , range ( 10 )) #\u4f7f\u7528map\u51fd\u6570\u83b7\u5f97\u6700\u7ec8\u7684\u8fd4\u56de\u503c print ( res ) if __name__ == '__main__' : multicore () \u8fd0\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] \u81ea\u5b9a\u4e49\u6838\u6570\u91cf: \u6211\u4eec\u600e\u4e48\u77e5\u9053Pool\u662f\u5426\u771f\u7684\u8c03\u7528\u4e86\u591a\u4e2a\u6838\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u628a\u8fed\u4ee3\u6b21\u6570\u589e\u5927\u4e9b\uff0c\u7136\u540e\u6253\u5f00CPU\u8d1f\u8f7d\u770b\u4e0bCPU\u8fd0\u884c\u60c5\u51b5 Pool\u9ed8\u8ba4\u5927\u5c0f\u662fCPU\u7684\u6838\u6570\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728Pool\u4e2d\u4f20\u5165processes\u53c2\u6570\u5373\u53ef\u81ea\u5b9a\u4e49\u9700\u8981\u7684\u6838\u6570\u91cf\uff0c def multicore (): pool = mp . Pool ( processes = 3 ) # \u5b9a\u4e49CPU\u6838\u6570\u91cf\u4e3a3 res = pool . map ( job , range ( 10 )) print ( res ) apply_async() Pool\u9664\u4e86map()\u5916\uff0c\u8fd8\u6709\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u90a3\u5c31\u662fapply_async(). apply_async()\u4e2d\u53ea\u80fd\u4f20\u9012\u4e00\u4e2a\u503c\uff0c\u5b83\u53ea\u4f1a\u653e\u5165\u4e00\u4e2a\u6838\u8fdb\u884c\u8fd0\u7b97\uff0c\u4f46\u662f\u4f20\u5165\u503c\u65f6\u8981\u6ce8\u610f\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u6240\u4ee5\u5728\u4f20\u5165\u503c\u540e\u9700\u8981\u52a0\u9017\u53f7, \u540c\u65f6\u9700\u8981\u7528get()\u65b9\u6cd5\u83b7\u53d6\u8fd4\u56de\u503c def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) #\u4f7f\u7528apply_async\u51fd\u6570,\u4e00\u6b21\u53ea\u80fd\u4f20\u5165\u83b7\u53d6\u4e00\u4e2a\u503c res = pool . apply_async ( job , ( 2 ,)) # \u7528get\u83b7\u5f97\u7ed3\u679c print ( res . get ()) \u6267\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] 4 \u7528 apply_async() \u8f93\u51fa\u591a\u4e2a\u7ed3\u679c \u90a3\u4e48\u5982\u4f55\u7528apply_async()\u8f93\u51fa\u591a\u4e2a\u8fed\u4ee3\u5462\uff1f \u6211\u4eec\u5728apply_async()\u4e2d\u591a\u4f20\u5165\u51e0\u4e2a\u503c\u8bd5\u8bd5 res = pool . apply_async ( job , ( 2 , 3 , 4 ,)) \u7ed3\u679c\u4f1a\u62a5\u9519\uff1a TypeError : job () takes exactly 1 argument ( 3 given ) \u5373apply_async()\u53ea\u80fd\u8f93\u5165\u4e00\u7ec4\u53c2\u6570\u3002 \u5728\u6b64\u6211\u4eec\u5c06apply_async() \u653e\u5165\u8fed\u4ee3\u5668\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684multi_res multi_res = [ pool . apply_async ( job , ( i ,)) for i in range ( 10 )] \u540c\u6837\u5728\u53d6\u51fa\u503c\u65f6\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u53d6\u51fa\u6765 print ([ res . get () for res in multi_res ]) \u5408\u5e76\u4ee3\u7801 def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) res = pool . apply_async ( job , ( 2 ,)) # \u7528get\u83b7\u5f97\u7ed3\u679c print ( res . get ()) # \u8fed\u4ee3\u5668\uff0ci=0\u65f6apply\u4e00\u6b21\uff0ci=1\u65f6apply\u4e00\u6b21\u7b49\u7b49 multi_res = [ pool . apply_async ( job , ( i ,)) for i in range ( 10 )] # \u4ece\u8fed\u4ee3\u5668\u4e2d\u53d6\u51fa(\u8fd9\u91cc\u4e5f\u5f97\u4f7f\u7528res.get,\u56e0\u4e3a\u5217\u8868\u4e2d\u5b58\u7684\u90fd\u662f\u5730\u5740,\u9700\u8981\u8fdb\u884c\u83b7\u53d6) print ([ res . get () for res in multi_res ]) \u8fd0\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] # map() 4 [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] # multi_res \u53ef\u4ee5\u770b\u51fa\u5728apply\u7528\u8fed\u4ee3\u5668\u7684\u5f97\u5230\u7684\u7ed3\u679c\u548c\u7528map\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684 \u603b\u7ed3: Pool\u9ed8\u8ba4\u8c03\u7528\u662fCPU\u7684\u6838\u6570\uff0c\u4f20\u5165processes\u53c2\u6570\u53ef\u81ea\u5b9a\u4e49CPU\u6838\u6570 map() \u653e\u5165\u8fed\u4ee3\u53c2\u6570\uff0c\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c apply_async()\u53ea\u80fd\u653e\u5165\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u60f3\u5f97\u5230map()\u7684\u6548\u679c\u9700\u8981\u901a\u8fc7\u8fed\u4ee3 \u5171\u4eab\u5185\u5b58 shared memory \u00b6 \u8fd9\u8282\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u5b9a\u4e49\u5171\u4eab\u5185\u5b58\u3002\u53ea\u6709\u7528\u5171\u4eab\u5185\u5b58\u624d\u80fd\u8ba9CPU\u4e4b\u95f4\u6709\u4ea4\u6d41\u3002 \u591a\u7ebf\u7a0b\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u6838\u56e0\u6b64\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u5c31\u53ef\u4ee5\u4f7f\u7528\u5171\u4eab\u5185\u5b58.\u4f46\u662f\u591a\u6838\u8fdb\u7a0b\u65f6\u9700\u8981\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u624d\u53ef\u4ee5. Shared Value \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Value\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u5171\u4eab\u7684\u5185\u5b58\u8868\u4e2d import multiprocessing as mp value1 = mp . Value ( 'i' , 0 ) value2 = mp . Value ( 'd' , 3.14 ) \u5176\u4e2dd\u548ci\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u6570\u636e\u7c7b\u578b\u7684\uff0cd\u8868\u793a\u4e00\u4e2a\u53cc\u7cbe\u6d6e\u70b9\u7c7b\u578b\uff0ci\u8868\u793a\u4e00\u4e2a\u5e26\u7b26\u53f7\u7684\u6574\u578b\u3002\u66f4\u591a\u7684\u5f62\u5f0f\u8bf7\u67e5\u770b\u672c\u9875\u6700\u540e\u7684\u8868 Shared Array \u5728Python\u7684mutiprocessing\u4e2d\uff0c\u6709\u8fd8\u6709\u4e00\u4e2aArray\u7c7b\uff0c\u53ef\u4ee5\u548c\u5171\u4eab\u5185\u5b58\u4ea4\u4e92\uff0c\u6765\u5b9e\u73b0\u5728\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u6570\u636e array = mp . Array ( 'i' , [ 1 , 2 , 3 , 4 ]) \u8fd9\u91cc\u7684Array\u548cnumpy\u4e2d\u7684\u4e0d\u540c\uff0c\u5b83\u53ea\u80fd\u662f\u4e00\u7ef4\u7684\uff0c\u4e0d\u80fd\u662f\u591a\u7ef4\u7684\u3002\u540c\u6837\u548cValue \u4e00\u6837\uff0c\u9700\u8981\u5b9a\u4e49\u6570\u636e\u5f62\u5f0f\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u6211\u4eec\u4f1a\u5728\u540e\u4e00\u8282\u4e3e\u4f8b\u8bf4\u660e\u8fd9\u4e24\u79cd\u7684\u4f7f\u7528\u65b9\u6cd5. \u9519\u8bef\u5f62\u5f0f array = mp . Array ( 'i' , [[ 1 , 2 ], [ 3 , 4 ]]) # 2\u7ef4list \"\"\" TypeError: an integer is required \"\"\" \u53c2\u8003\u6570\u636e\u5f62\u5f0f: \u5404\u53c2\u6570\u4ee3\u8868\u7684\u6570\u636e\u7c7b\u578b | Type code | C Type | Python Type | Minimum size in bytes | | --------- | ------------------ | ----------------- | --------------------- | | ` 'b' ` | signed char | int | 1 | | ` 'B' ` | unsigned char | int | 1 | | ` 'u' ` | Py_UNICODE | Unicode character | 2 | | ` 'h' ` | signed short | int | 2 | | ` 'H' ` | unsigned short | int | 2 | | ` 'i' ` | signed int | int | 2 | | ` 'I' ` | unsigned int | int | 2 | | ` 'l' ` | signed long | int | 4 | | ` 'L' ` | unsigned long | int | 4 | | ` 'q' ` | signed long long | int | 8 | | ` 'Q' ` | unsigned long long | int | 8 | | ` 'f' ` | float | float | 4 | | ` 'd' ` | double | float | 8 | \u8fdb\u7a0b\u9501 \u00b6 \u8fdb\u7a0b\u9501 Lock \u4e0d\u52a0\u8fdb\u7a0b\u9501 \u00b6 \u8ba9\u6211\u4eec\u770b\u770b\u6ca1\u6709\u52a0\u8fdb\u7a0b\u9501\u65f6\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 22:08:56 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 import time def job ( v , num ): #\u76ee\u6807\u51fd\u6570 for _ in range ( 5 ): time . sleep ( 0.1 ) # \u6682\u505c0.1\u79d2\uff0c\u8ba9\u8f93\u51fa\u6548\u679c\u66f4\u660e\u663e v . value += num # v.value\u83b7\u53d6\u5171\u4eab\u53d8\u91cf\u503c(\u5fc5\u987b\u662f\u8fd9\u6837\u7684\u5f62\u5f0f) print ( v . value , end = \" \\n \" ) def multicore (): v = mp . Value ( 'i' , 0 ) # \u5b9a\u4e49\u5171\u4eab\u53d8\u91cf(\u6574\u6570\u578b,\u521d\u59cb\u503c\u4e3a0) p1 = mp . Process ( target = job , args = ( v , 1 )) p2 = mp . Process ( target = job , args = ( v , 3 )) # \u8bbe\u5b9a\u4e0d\u540c\u7684number\u770b\u5982\u4f55\u62a2\u593a\u5185\u5b58 p1 . start () p2 . start () p1 . join () p2 . join () if __name__ == '__main__' : multicore () \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf v \uff0c\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\u3002 \u5728 job() \u4e2d\u6211\u4eec\u60f3\u8ba9 v \u6bcf\u96940.1\u79d2\u8f93\u51fa\u4e00\u6b21\u7d2f\u52a0 num \u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5728\u4e24\u4e2a\u8fdb\u7a0b p1 \u548c p2 \u4e2d\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7d2f\u52a0\u503c\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u662f\u5426\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002 \u8fd0\u884c\u4e00\u4e0b\uff1a\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u624d\u53ef\u4ee5 1 4 5 8 9 12 13 16 17 20 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fdb\u7a0b1\u548c\u8fdb\u7a0b2\u5728\u76f8\u4e92\u62a2\u7740\u4f7f\u7528\u5171\u4eab\u5185\u5b58 v \u3002 \u52a0\u8fdb\u7a0b\u9501 \u00b6 \u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u4e0d\u540c\u8fdb\u7a0b\u62a2\u5171\u4eab\u8d44\u6e90\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u52a0\u8fdb\u7a0b\u9501\u6765\u89e3\u51b3\u3002 \u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 l = mp.Lock() # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 \u7136\u540e\u5c06\u8fdb\u7a0b\u9501\u7684\u4fe1\u606f\u4f20\u5165\u5404\u4e2a\u8fdb\u7a0b\u4e2d p1 = mp.Process(target=job, args=(v,1,l)) # \u9700\u8981\u5c06Lock\u4f20\u5165 p2 = mp.Process(target=job, args=(v,3,l)) \u5728 job() \u4e2d\u8bbe\u7f6e\u8fdb\u7a0b\u9501\u7684\u4f7f\u7528\uff0c\u4fdd\u8bc1\u8fd0\u884c\u65f6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5bf9\u9501\u5185\u5185\u5bb9\u7684\u72ec\u5360 def job(v, num, l): l.acquire() # \u9501\u4f4f for _ in range(5): time.sleep(0.1) v.value += num # v.value\u83b7\u53d6\u5171\u4eab\u5185\u5b58 print(v.value) l.release() # \u91ca\u653e \u5b8c\u6574\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 22:08:56 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 import time def job(v, num, l): l.acquire() # \u9501\u4f4f for _ in range(5): time.sleep(0.1) v.value += num # \u83b7\u53d6\u5171\u4eab\u5185\u5b58 print(v.value,'\\n') l.release() # \u91ca\u653e def multicore(): l = mp.Lock() # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 v = mp.Value('i', 0) # \u5b9a\u4e49\u5171\u4eab\u5185\u5b58 p1 = mp.Process(target=job, args=(v,1,l)) # \u9700\u8981\u5c06lock\u4f20\u5165 p2 = mp.Process(target=job, args=(v,3,l)) p1.start() p2.start() p1.join() p2.join() if __name__ == '__main__': multicore() \u8fd0\u884c\u4e00\u4e0b\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u662f\u5426\u8fd8\u4f1a\u51fa\u73b0\u62a2\u5360\u8d44\u6e90\u7684\u60c5\u51b5\uff1a 1 2 3 4 5 8 11 14 17 20 \u663e\u7136\uff0c\u8fdb\u7a0b\u9501\u4fdd\u8bc1\u4e86\u8fdb\u7a0b p1 \u7684\u5b8c\u6574\u8fd0\u884c\uff0c\u7136\u540e\u624d\u8fdb\u884c\u4e86\u8fdb\u7a0b p2 \u7684\u8fd0\u884c","title":"023 python\u591a\u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#multiprocessing","text":"\u548c threading \u7684\u6bd4\u8f83: \u591a\u8fdb\u7a0b Multiprocessing \u548c\u591a\u7ebf\u7a0b threading \u7c7b\u4f3c, \u4ed6\u4eec\u90fd\u662f\u5728 python \u4e2d\u7528\u6765\u5e76\u884c\u8fd0\u7b97\u7684. \u4e0d\u8fc7\u65e2\u7136\u6709\u4e86 threading, \u4e3a\u4ec0\u4e48 Python \u8fd8\u8981\u51fa\u4e00\u4e2a multiprocessing \u5462? \u539f\u56e0\u5f88\u7b80\u5355, \u5c31\u662f\u7528\u6765\u5f25\u8865 threading \u7684\u4e00\u4e9b\u52a3\u52bf, \u6bd4\u5982\u5728 threading \u6559\u7a0b\u4e2d\u63d0\u5230\u7684GIL . \u4f7f\u7528 multiprocessing \u4e5f\u975e\u5e38\u7b80\u5355, \u5982\u679c\u5bf9 threading \u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u670b\u53cb, \u4f60\u4eec\u7684\u4eab\u53d7\u65f6\u95f4\u5c31\u5230\u4e86. \u56e0\u4e3a python \u628a multiprocessing \u548c threading \u7684\u4f7f\u7528\u65b9\u6cd5\u505a\u7684\u51e0\u4e4e\u5dee\u4e0d\u591a. \u8fd9\u6837\u6211\u4eec\u5c31\u66f4\u5bb9\u6613\u4e0a\u624b. \u4e5f\u66f4\u5bb9\u6613\u53d1\u6325\u4f60\u7535\u8111\u591a\u6838\u7cfb\u7edf\u7684\u5a01\u529b\u4e86!","title":"\u4ec0\u4e48\u662f Multiprocessing"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_1","text":"import multiprocessing as mp #\u591a\u8fdb\u7a0b\u6a21\u5757 import threading as td #\u591a\u7ebf\u7a0b\u6a21\u5757","title":"\u5bfc\u5165\u7ebf\u7a0b\u8fdb\u7a0b\u6807\u51c6\u6a21\u5757"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_2","text":"def job(a,d): print('aaaaa')","title":"\u5b9a\u4e49\u4e00\u4e2a\u88ab\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u8c03\u7528\u7684\u51fd\u6570"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_3","text":"t1 = td . Thread ( target = job , args = ( 1 , 2 )) p1 = mp . Process ( target = job , args = ( 1 , 2 )) \u6ce8\u610f\uff1aThread\u548cProcess\u7684\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199\uff0c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u6ca1\u6709\u62ec\u53f7\uff0c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u7684\u53c2\u6570\u653e\u5728args(\u2026)\u4e2d \u5206\u522b\u542f\u52a8\u7ebf\u7a0b\u548c\u8fdb\u7a0b t1 . start () p1 . start () \u5206\u522b\u8fde\u63a5\u7ebf\u7a0b\u548c\u8fdb\u7a0b t1 . join () p1 . join ()","title":"\u521b\u5efa\u7ebf\u7a0b\u548c\u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_4","text":"import multiprocessing as mp import threading as td def job ( a , d ): print ( 'aaaaa' ) t1 = td . Thread ( target = job , args = ( 1 , 2 )) p1 = mp . Process ( target = job , args = ( 1 , 2 )) t1 . start () p1 . start () t1 . join () p1 . join () \u4ece\u4e0a\u9762\u7684\u4f7f\u7528\u5bf9\u6bd4\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u4f3c","title":"\u5b8c\u6574\u7684\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u521b\u5efa\u4f7f\u7528\u5bf9\u6bd4\u4ee3\u7801"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_5","text":"\u5728\u8fd0\u7528\u65f6\u9700\u8981\u6dfb\u52a0\u4e0a\u4e00\u4e2a\u5b9a\u4e49main\u51fd\u6570\u7684\u8bed\u53e5(\u5fc5\u987b\u8981\u6709):\u539f\u56e0\uff1a\u591a\u8fdb\u7a0b\u9700\u8981\u5728main\u51fd\u6570\u4e2d\u8fd0\u884c\uff0c if __name__ == '__main__' : \u5b8c\u6574\u7684\u5e94\u7528\u4ee3\u7801\uff1a import multiprocessing as mp #\u5bfc\u5305 def job(a,d): #\u5b9a\u4e49\u51fd\u6570\u529f\u80fd print('aaaaa') if __name__=='__main__': p1 = mp.Process(target=job,args=(1,2)) #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b p1.start() #\u5f00\u542f\u8fdb\u7a0b p1.join() #\u8fde\u63a5\u8fdb\u7a0b \u8fd0\u884c\u73af\u5883\u8981\u5728terminal\u73af\u5883\u4e0b\uff0c\u53ef\u80fd\u5176\u4ed6\u7684\u7f16\u8f91\u5de5\u5177\u4f1a\u51fa\u73b0\u8fd0\u884c\u7ed3\u675f\u540e\u6ca1\u6709\u6253\u5370\u7ed3\u679c\uff0c\u5728terminal\u4e2d\u7684\u8fd0\u884c\u540e\u6253\u5370\u7684\u7ed3\u679c\u4e3a\uff1a aaaaa","title":"\u8fd0\u7528"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#queue","text":"Queue\u7684\u529f\u80fd\u662f\u5c06\u6bcf\u4e2a\u6838\u6216\u7ebf\u7a0b\u7684\u8fd0\u7b97\u7ed3\u679c\u653e\u5728\u961f\u91cc\u4e2d\uff0c \u7b49\u5230\u6bcf\u4e2a\u7ebf\u7a0b\u6216\u6838\u8fd0\u884c\u5b8c\u6bd5\u540e\u518d\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u7ed3\u679c\uff0c \u7ee7\u7eed\u52a0\u8f7d\u8fd0\u7b97\u3002\u539f\u56e0\u5f88\u7b80\u5355, \u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\u4e0d\u80fd\u6709\u8fd4\u56de\u503c, \u6240\u4ee5\u4f7f\u7528Queue\u5b58\u50a8\u591a\u4e2a\u7ebf\u7a0b\u8fd0\u7b97\u7684\u7ed3\u679c \u628a\u7ed3\u679c\u653e\u5728 Queue \u91cc \u5b9a\u4e49\u4e00\u4e2a\u88ab\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u51fd\u6570\uff0cq \u5c31\u50cf\u4e00\u4e2a\u961f\u5217\uff0c\u7528\u6765\u4fdd\u5b58\u6bcf\u6b21\u51fd\u6570\u8fd0\u884c\u7684\u7ed3\u679c #\u8be5\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff01\uff01\uff01 def job ( q ): res = 0 for i in range ( 1000 ): res += i + i ** 2 + i ** 3 q . put ( res ) #queue \u4e3b\u51fd\u6570 \u5b9a\u4e49\u4e00\u4e2a\u591a\u7ebf\u7a0b\u961f\u5217\uff0c\u7528\u6765\u5b58\u50a8\u7ed3\u679c if __name__ == '__main__' : q = mp . Queue () \u5b9a\u4e49\u4e24\u4e2a\u7ebf\u7a0b\u51fd\u6570\uff0c\u7528\u6765\u5904\u7406\u540c\u4e00\u4e2a\u4efb\u52a1, args \u7684\u53c2\u6570\u53ea\u8981\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u53c2\u6570\u540e\u9762\u9700\u8981\u52a0\u4e00\u4e2a\u9017\u53f7\uff0c\u8868\u793aargs\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u540e\u9762\u53ef\u80fd\u8fd8\u6709\u522b\u7684\u53c2\u6570\uff0c\u4e0d\u52a0\u9017\u53f7\u4f1a\u51fa\u9519 p1 = mp.Process(target=job,args=(q,)) p2 = mp.Process(target=job,args=(q,)) \u5206\u522b\u542f\u52a8\u3001\u8fde\u63a5\u4e24\u4e2a\u7ebf\u7a0b p1 . start () p2 . start () p1 . join () p2 . join () \u4e0a\u9762\u662f\u5206\u4e24\u6279\u5904\u7406\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u5206\u4e24\u6279\u8f93\u51fa\uff0c\u5c06\u7ed3\u679c\u5206\u522b\u4fdd\u5b58 res1 = q . get () res2 = q . get () \u6253\u5370\u6700\u540e\u7684\u8fd0\u7b97\u7ed3\u679c \u200b `` ` python print ( res1 + res2 ) \u5b8c\u6574\u7684\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:04:45 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 def job ( q ): #\u591a\u8fdb\u7a0b\u6ca1\u6709\u8fd4\u56de\u503c,\u538b\u5230\u961f\u5217\u4e2d res = 0 #\u521d\u59cb\u503c for i in range ( 1000 ): res += i + i ** 2 + i ** 3 q . put ( res ) #queue,\u5c31\u8fd0\u7b97\u7684\u7ed3\u679c\u538b\u5230\u961f\u5217\u4e2d if __name__ == '__main__' : q = mp . Queue () #\u521b\u5efa\u4e00\u4e2a\u961f\u5217 p1 = mp . Process ( target = job , args = ( q ,)) #target\u662f\u76ee\u6807\u51fd\u6570,args\u662f\u51fd\u6570\u4e2d\u4f20\u5165\u7684\u53c2\u6570 # args \u7684\u53c2\u6570\u53ea\u8981\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u53c2\u6570\u540e\u9762\u9700\u8981\u52a0\u4e00\u4e2a\u9017\u53f7\uff0c\u8868\u793aargs\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u540e\u9762\u53ef\u80fd\u8fd8\u6709\u522b\u7684\u53c2\u6570\uff0c\u4e0d\u52a0\u9017\u53f7\u4f1a\u51fa\u9519 p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () #\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa res2 = q . get () print ( res1 + res2 ) \u8fd0\u884c\u7684\u65f6\u5019\u8fd8\u662f\u8981\u5728terminal\u4e2d\uff0c\u6700\u540e\u8fd0\u884c\u7ed3\u679c\u4e3a: 499667166000","title":"\u5b58\u50a8\u8fdb\u7a0b\u8f93\u51fa Queue"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#threading-multiprocessing","text":"\u4e0a\u7bc7\u8bb2\u4e86\u591a\u8fdb\u7a0b/\u591a\u6838\u7684\u8fd0\u7b97\uff0c\u8fd9\u6b21\u6211\u4eec\u6765\u5bf9\u6bd4\u4e0b\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\u548c\u4ec0\u4e48\u90fd\u4e0d\u505a\u65f6\u7684\u6d88\u8017\u65f6\u95f4\uff0c\u770b\u770b\u54ea\u79cd\u65b9\u5f0f\u66f4\u6709\u6548\u7387\u3002 \u521b\u5efa\u591a\u8fdb\u7a0b multiprocessing \u548c\u4e0a\u8282\u4e00\u6837\uff0c\u9996\u5148import multiprocessing\u5e76\u5b9a\u4e49\u8981\u5b9e\u73b0\u7684job()\uff0c\u540c\u65f6\u4e3a\u4e86\u5bb9\u6613\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u8ba1\u7b97\u7684\u6b21\u6570\u589e\u52a0\u52301000000 import multiprocessing as mp def job ( q ): res = 0 for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 q . put ( res ) # queue \u56e0\u4e3a\u591a\u8fdb\u7a0b\u662f\u591a\u6838\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e0a\u8282\u7684\u591a\u8fdb\u7a0b\u4ee3\u7801\u547d\u540d\u4e3amulticore() def multicore (): q = mp . Queue () p1 = mp . Process ( target = job , args = ( q ,)) p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () res2 = q . get () print ( 'multicore:' , res1 + res2 ) \u521b\u5efa\u591a\u7ebf\u7a0b multithread: \u63a5\u4e0b\u6765\u521b\u5efa\u591a\u7ebf\u7a0b\u7a0b\u5e8f\uff0c\u521b\u5efa\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u5730\u65b9\u3002\u9996\u5148import threading\u7136\u540e\u5b9a\u4e49multithread()\u5b8c\u6210\u540c\u6837\u7684\u4efb\u52a1 import threading as td def multithread (): q = mp . Queue () # thread\u53ef\u653e\u5165process\u540c\u6837\u7684queue\u4e2d t1 = td . Thread ( target = job , args = ( q ,)) t2 = td . Thread ( target = job , args = ( q ,)) t1 . start () t2 . start () t1 . join () t2 . join () res1 = q . get () res2 = q . get () print ( 'multithread:' , res1 + res2 ) \u521b\u5efa\u666e\u901a\u51fd\u6570: \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u6700\u666e\u901a\u7684\u51fd\u6570\u3002\u6ce8\u610f\uff0c\u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\u6211\u4eec\u5efa\u7acb\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\uff0c\u5747\u5bf9job()\u8fdb\u884c\u4e86\u4e24\u6b21\u8fd0\u7b97\uff0c\u6240\u4ee5\u5728normal()\u4e2d\u6211\u4eec\u4e5f\u8ba9\u5b83\u5faa\u73af\u4e24\u6b21: def normal (): res = 0 for _ in range ( 2 ): for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 print ( 'normal:' , res ) \u8fd0\u884c\u65f6\u95f4 \u6700\u540e\uff0c\u4e3a\u4e86\u5bf9\u6bd4\u5404\u51fd\u6570\u8fd0\u884c\u65f6\u95f4\uff0c\u6211\u4eec\u9700\u8981import time\uff0c \u7136\u540e\u4f9d\u6b21\u8fd0\u884c\u5b9a\u4e49\u597d\u51fd\u6570\uff1a import time if __name__ == '__main__' : st = time . time () normal () st1 = time . time () print ( 'normal time:' , st1 - st ) multithread () st2 = time . time () print ( 'multithread time:' , st2 - st1 ) multicore () print ( 'multicore time:' , time . time () - st2 ) \u5927\u529f\u544a\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e0b\u5b9e\u9645\u8fd0\u884c\u5bf9\u6bd4\u3002 \u6574\u4e2a\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:15:11 2019 @author: zangz \"\"\" import multiprocessing as mp #\u591a\u8fdb\u7a0b\u5bfc\u5305 import threading as td #\u591a\u7ebf\u7a0b\u5bfc\u5305 import time def job ( q ): #\u76ee\u6807\u51fd\u6570\u529f\u80fd res = 0 for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 q . put ( res ) # queue def multicore (): #\u591a\u8fdb\u7a0b\u51fd\u6570 q = mp . Queue () p1 = mp . Process ( target = job , args = ( q ,)) p2 = mp . Process ( target = job , args = ( q ,)) p1 . start () p2 . start () p1 . join () p2 . join () res1 = q . get () res2 = q . get () print ( 'multicore:' , res1 + res2 ) def multithread (): #\u591a\u7ebf\u7a0b q = mp . Queue () # thread\u53ef\u653e\u5165process\u540c\u6837\u7684queue\u4e2d t1 = td . Thread ( target = job , args = ( q ,)) t2 = td . Thread ( target = job , args = ( q ,)) t1 . start () t2 . start () t1 . join () t2 . join () res1 = q . get () res2 = q . get () print ( 'multithread:' , res1 + res2 ) def normal (): #\u666e\u901a\u51fd\u6570 res = 0 for _ in range ( 2 ): for i in range ( 1000000 ): res += i + i ** 2 + i ** 3 print ( 'normal:' , res ) if __name__ == '__main__' : #\u4e3b\u51fd\u6570 st = time . time () normal () st1 = time . time () print ( 'normal time:' , st1 - st ) #\u8ba1\u7b97\u7684\u662f\u6267\u884c\u666e\u901a\u51fd\u6570\u7684\u65f6\u95f4\u5dee multithread () st2 = time . time () print ( 'multithread time:' , st2 - st1 ) #\u8ba1\u7b97\u7684\u662f\u591a\u7ebf\u7a0b\u7684\u65f6\u95f4\u5dee multicore () print ( 'multicore time:' , time . time () - st2 ) #\u8ba1\u7b97\u7684\u662f\u591a\u8fdb\u7a0b\u7684\u65f6\u95f4\u5dee \u6267\u884c\u7ed3\u679c: normal : 499999666667166666000000 normal time : 1.8903188705444336 multithread : 499999666667166666000000 multithread time : 1.8123459815979004 multicore : 499999666667166666000000 multicore time : 1.237776756286621 \u591a\u6b21\u8fd0\u884c\u7684\u7ed3\u679c\u8868\u793a\u8fd0\u7b97\u91cf\u4f4e\u7684\u65f6\u5019\u4f7f\u7528\u6b63\u5e38\u7684\u51fd\u6570\u6bd4\u8f83\u597d,\u4f46\u662f\u8fd0\u7b97\u91cf\u8f83\u9ad8\u7684\u65f6\u5019\u4f7f\u7528\u591a\u8fdb\u7a0b\u660e\u663e\u5feb\u5f88\u591a \u6bd4\u5982\u6211\u5c06\u4efb\u52a1\u91cf\u6539\u4e3a:range(10000000): \u6267\u884c\u7ed3\u679c: normal : 4999999666666716666660000000 normal time : 18.560267686843872 multithread : 499999666667166666000000 multithread time : 1.814974308013916 multicore : 499999666667166666000000 multicore time : 1.2792866230010986 \u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684\u4f7f\u7528\u662f\u9700\u8981\u660e\u786e\u4f7f\u7528\u573a\u666f\u7684\uff0c\u591a\u8fdb\u7a0b\u6bd4\u8f83\u9002\u5408\u5904\u7406\u8ba1\u7b97\uff08CPU\uff09\u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff08\u5982\u4e0a\u4ee3\u7801\u5c31\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\uff09\uff0c\u591a\u7ebf\u7a0b\u9002\u5408\u5904\u7406I/O\u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff0c\u5b83\u907f\u514d\u4e86\u591a\u8fdb\u7a0b\u8d44\u6e90\u4e0d\u65ad\u91ca\u653e\u548c\u7533\u8bf7\uff08\u591a\u7ebf\u7a0b\u5171\u4eab\u591a\u8fdb\u7a0b\u8d44\u6e90\uff09\u3002","title":"\u6548\u7387\u5bf9\u6bd4 threading &amp; multiprocessing"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#pool","text":"\u8fd9\u6b21\u6211\u4eec\u8bb2\u8fdb\u7a0b\u6c60Pool\u3002 \u8fdb\u7a0b\u6c60\u5c31\u662f\u6211\u4eec\u5c06\u6240\u8981\u8fd0\u884c\u7684\u4e1c\u897f\uff0c\u653e\u5230\u6c60\u5b50\u91cc\uff0cPython\u4f1a\u81ea\u884c\u89e3\u51b3\u591a\u8fdb\u7a0b\u7684\u95ee\u9898 \u9996\u5148import multiprocessing\u548c\u5b9a\u4e49job() import multiprocessing as mp def job ( x ): return x * x \u8fdb\u7a0b\u6c60 Pool() \u548c map() \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aPool pool = mp . Pool () \u6709\u4e86\u6c60\u5b50\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8ba9\u6c60\u5b50\u5bf9\u5e94\u67d0\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u5411\u6c60\u5b50\u91cc\u4e22\u6570\u636e\uff0c\u6c60\u5b50\u5c31\u4f1a\u8fd4\u56de\u51fd\u6570\u8fd4\u56de\u7684\u503c\u3002 Pool\u548c\u4e4b\u524d\u7684Process\u7684\u4e0d\u540c\u70b9\u662f\u4e22\u5411Pool\u7684\u51fd\u6570\u6709\u8fd4\u56de\u503c\uff0c\u800cProcess\u7684\u6ca1\u6709\u8fd4\u56de\u503c\u3002 \u63a5\u4e0b\u6765\u7528map()\u83b7\u53d6\u7ed3\u679c\uff0c\u5728map()\u4e2d\u9700\u8981\u653e\u5165\u51fd\u6570\u548c\u9700\u8981\u8fed\u4ee3\u8fd0\u7b97\u7684\u503c\uff0c\u7136\u540e\u5b83\u4f1a\u81ea\u52a8\u5206\u914d\u7ed9CPU\u6838\uff0c\u8fd4\u56de\u7ed3\u679c res = pool . map ( job , range ( 10 )) \u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e00\u4e0b def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) if __name__ == '__main__' : multicore () \u5b8c\u6574\u7684\u7a0b\u5e8f: # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 20:40:20 2019 @author: zangz \"\"\" import multiprocessing as mp def job ( x ): #\u5b9a\u4e49\u76ee\u6807\u7684\u529f\u80fd\u6709\u8fd4\u56de\u503c return x * x def multicore (): #\u591a\u7ebf\u7a0b\u7684\u51fd\u6570 pool = mp . Pool () #\u5b9e\u4f8b\u5316(\u521b\u5efa)\u4e00\u4e2a\u6c60 res = pool . map ( job , range ( 10 )) #\u4f7f\u7528map\u51fd\u6570\u83b7\u5f97\u6700\u7ec8\u7684\u8fd4\u56de\u503c print ( res ) if __name__ == '__main__' : multicore () \u8fd0\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] \u81ea\u5b9a\u4e49\u6838\u6570\u91cf: \u6211\u4eec\u600e\u4e48\u77e5\u9053Pool\u662f\u5426\u771f\u7684\u8c03\u7528\u4e86\u591a\u4e2a\u6838\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u628a\u8fed\u4ee3\u6b21\u6570\u589e\u5927\u4e9b\uff0c\u7136\u540e\u6253\u5f00CPU\u8d1f\u8f7d\u770b\u4e0bCPU\u8fd0\u884c\u60c5\u51b5 Pool\u9ed8\u8ba4\u5927\u5c0f\u662fCPU\u7684\u6838\u6570\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728Pool\u4e2d\u4f20\u5165processes\u53c2\u6570\u5373\u53ef\u81ea\u5b9a\u4e49\u9700\u8981\u7684\u6838\u6570\u91cf\uff0c def multicore (): pool = mp . Pool ( processes = 3 ) # \u5b9a\u4e49CPU\u6838\u6570\u91cf\u4e3a3 res = pool . map ( job , range ( 10 )) print ( res ) apply_async() Pool\u9664\u4e86map()\u5916\uff0c\u8fd8\u6709\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\u7684\u65b9\u5f0f\uff0c\u90a3\u5c31\u662fapply_async(). apply_async()\u4e2d\u53ea\u80fd\u4f20\u9012\u4e00\u4e2a\u503c\uff0c\u5b83\u53ea\u4f1a\u653e\u5165\u4e00\u4e2a\u6838\u8fdb\u884c\u8fd0\u7b97\uff0c\u4f46\u662f\u4f20\u5165\u503c\u65f6\u8981\u6ce8\u610f\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u6240\u4ee5\u5728\u4f20\u5165\u503c\u540e\u9700\u8981\u52a0\u9017\u53f7, \u540c\u65f6\u9700\u8981\u7528get()\u65b9\u6cd5\u83b7\u53d6\u8fd4\u56de\u503c def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) #\u4f7f\u7528apply_async\u51fd\u6570,\u4e00\u6b21\u53ea\u80fd\u4f20\u5165\u83b7\u53d6\u4e00\u4e2a\u503c res = pool . apply_async ( job , ( 2 ,)) # \u7528get\u83b7\u5f97\u7ed3\u679c print ( res . get ()) \u6267\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] 4 \u7528 apply_async() \u8f93\u51fa\u591a\u4e2a\u7ed3\u679c \u90a3\u4e48\u5982\u4f55\u7528apply_async()\u8f93\u51fa\u591a\u4e2a\u8fed\u4ee3\u5462\uff1f \u6211\u4eec\u5728apply_async()\u4e2d\u591a\u4f20\u5165\u51e0\u4e2a\u503c\u8bd5\u8bd5 res = pool . apply_async ( job , ( 2 , 3 , 4 ,)) \u7ed3\u679c\u4f1a\u62a5\u9519\uff1a TypeError : job () takes exactly 1 argument ( 3 given ) \u5373apply_async()\u53ea\u80fd\u8f93\u5165\u4e00\u7ec4\u53c2\u6570\u3002 \u5728\u6b64\u6211\u4eec\u5c06apply_async() \u653e\u5165\u8fed\u4ee3\u5668\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684multi_res multi_res = [ pool . apply_async ( job , ( i ,)) for i in range ( 10 )] \u540c\u6837\u5728\u53d6\u51fa\u503c\u65f6\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u53d6\u51fa\u6765 print ([ res . get () for res in multi_res ]) \u5408\u5e76\u4ee3\u7801 def multicore (): pool = mp . Pool () res = pool . map ( job , range ( 10 )) print ( res ) res = pool . apply_async ( job , ( 2 ,)) # \u7528get\u83b7\u5f97\u7ed3\u679c print ( res . get ()) # \u8fed\u4ee3\u5668\uff0ci=0\u65f6apply\u4e00\u6b21\uff0ci=1\u65f6apply\u4e00\u6b21\u7b49\u7b49 multi_res = [ pool . apply_async ( job , ( i ,)) for i in range ( 10 )] # \u4ece\u8fed\u4ee3\u5668\u4e2d\u53d6\u51fa(\u8fd9\u91cc\u4e5f\u5f97\u4f7f\u7528res.get,\u56e0\u4e3a\u5217\u8868\u4e2d\u5b58\u7684\u90fd\u662f\u5730\u5740,\u9700\u8981\u8fdb\u884c\u83b7\u53d6) print ([ res . get () for res in multi_res ]) \u8fd0\u884c\u7ed3\u679c: [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] # map() 4 [ 0 , 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 ] # multi_res \u53ef\u4ee5\u770b\u51fa\u5728apply\u7528\u8fed\u4ee3\u5668\u7684\u5f97\u5230\u7684\u7ed3\u679c\u548c\u7528map\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684 \u603b\u7ed3: Pool\u9ed8\u8ba4\u8c03\u7528\u662fCPU\u7684\u6838\u6570\uff0c\u4f20\u5165processes\u53c2\u6570\u53ef\u81ea\u5b9a\u4e49CPU\u6838\u6570 map() \u653e\u5165\u8fed\u4ee3\u53c2\u6570\uff0c\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c apply_async()\u53ea\u80fd\u653e\u5165\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u60f3\u5f97\u5230map()\u7684\u6548\u679c\u9700\u8981\u901a\u8fc7\u8fed\u4ee3","title":"\u8fdb\u7a0b\u6c60 Pool"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#shared-memory","text":"\u8fd9\u8282\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u5b9a\u4e49\u5171\u4eab\u5185\u5b58\u3002\u53ea\u6709\u7528\u5171\u4eab\u5185\u5b58\u624d\u80fd\u8ba9CPU\u4e4b\u95f4\u6709\u4ea4\u6d41\u3002 \u591a\u7ebf\u7a0b\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u6838\u56e0\u6b64\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u5c31\u53ef\u4ee5\u4f7f\u7528\u5171\u4eab\u5185\u5b58.\u4f46\u662f\u591a\u6838\u8fdb\u7a0b\u65f6\u9700\u8981\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u624d\u53ef\u4ee5. Shared Value \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Value\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u5171\u4eab\u7684\u5185\u5b58\u8868\u4e2d import multiprocessing as mp value1 = mp . Value ( 'i' , 0 ) value2 = mp . Value ( 'd' , 3.14 ) \u5176\u4e2dd\u548ci\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u6570\u636e\u7c7b\u578b\u7684\uff0cd\u8868\u793a\u4e00\u4e2a\u53cc\u7cbe\u6d6e\u70b9\u7c7b\u578b\uff0ci\u8868\u793a\u4e00\u4e2a\u5e26\u7b26\u53f7\u7684\u6574\u578b\u3002\u66f4\u591a\u7684\u5f62\u5f0f\u8bf7\u67e5\u770b\u672c\u9875\u6700\u540e\u7684\u8868 Shared Array \u5728Python\u7684mutiprocessing\u4e2d\uff0c\u6709\u8fd8\u6709\u4e00\u4e2aArray\u7c7b\uff0c\u53ef\u4ee5\u548c\u5171\u4eab\u5185\u5b58\u4ea4\u4e92\uff0c\u6765\u5b9e\u73b0\u5728\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u6570\u636e array = mp . Array ( 'i' , [ 1 , 2 , 3 , 4 ]) \u8fd9\u91cc\u7684Array\u548cnumpy\u4e2d\u7684\u4e0d\u540c\uff0c\u5b83\u53ea\u80fd\u662f\u4e00\u7ef4\u7684\uff0c\u4e0d\u80fd\u662f\u591a\u7ef4\u7684\u3002\u540c\u6837\u548cValue \u4e00\u6837\uff0c\u9700\u8981\u5b9a\u4e49\u6570\u636e\u5f62\u5f0f\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u6211\u4eec\u4f1a\u5728\u540e\u4e00\u8282\u4e3e\u4f8b\u8bf4\u660e\u8fd9\u4e24\u79cd\u7684\u4f7f\u7528\u65b9\u6cd5. \u9519\u8bef\u5f62\u5f0f array = mp . Array ( 'i' , [[ 1 , 2 ], [ 3 , 4 ]]) # 2\u7ef4list \"\"\" TypeError: an integer is required \"\"\" \u53c2\u8003\u6570\u636e\u5f62\u5f0f: \u5404\u53c2\u6570\u4ee3\u8868\u7684\u6570\u636e\u7c7b\u578b | Type code | C Type | Python Type | Minimum size in bytes | | --------- | ------------------ | ----------------- | --------------------- | | ` 'b' ` | signed char | int | 1 | | ` 'B' ` | unsigned char | int | 1 | | ` 'u' ` | Py_UNICODE | Unicode character | 2 | | ` 'h' ` | signed short | int | 2 | | ` 'H' ` | unsigned short | int | 2 | | ` 'i' ` | signed int | int | 2 | | ` 'I' ` | unsigned int | int | 2 | | ` 'l' ` | signed long | int | 4 | | ` 'L' ` | unsigned long | int | 4 | | ` 'q' ` | signed long long | int | 8 | | ` 'Q' ` | unsigned long long | int | 8 | | ` 'f' ` | float | float | 4 | | ` 'd' ` | double | float | 8 |","title":"\u5171\u4eab\u5185\u5b58 shared memory"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_6","text":"\u8fdb\u7a0b\u9501 Lock","title":"\u8fdb\u7a0b\u9501"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_7","text":"\u8ba9\u6211\u4eec\u770b\u770b\u6ca1\u6709\u52a0\u8fdb\u7a0b\u9501\u65f6\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 22:08:56 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 import time def job ( v , num ): #\u76ee\u6807\u51fd\u6570 for _ in range ( 5 ): time . sleep ( 0.1 ) # \u6682\u505c0.1\u79d2\uff0c\u8ba9\u8f93\u51fa\u6548\u679c\u66f4\u660e\u663e v . value += num # v.value\u83b7\u53d6\u5171\u4eab\u53d8\u91cf\u503c(\u5fc5\u987b\u662f\u8fd9\u6837\u7684\u5f62\u5f0f) print ( v . value , end = \" \\n \" ) def multicore (): v = mp . Value ( 'i' , 0 ) # \u5b9a\u4e49\u5171\u4eab\u53d8\u91cf(\u6574\u6570\u578b,\u521d\u59cb\u503c\u4e3a0) p1 = mp . Process ( target = job , args = ( v , 1 )) p2 = mp . Process ( target = job , args = ( v , 3 )) # \u8bbe\u5b9a\u4e0d\u540c\u7684number\u770b\u5982\u4f55\u62a2\u593a\u5185\u5b58 p1 . start () p2 . start () p1 . join () p2 . join () if __name__ == '__main__' : multicore () \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf v \uff0c\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\u3002 \u5728 job() \u4e2d\u6211\u4eec\u60f3\u8ba9 v \u6bcf\u96940.1\u79d2\u8f93\u51fa\u4e00\u6b21\u7d2f\u52a0 num \u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5728\u4e24\u4e2a\u8fdb\u7a0b p1 \u548c p2 \u4e2d\u8bbe\u5b9a\u4e86\u4e0d\u540c\u7684\u7d2f\u52a0\u503c\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u662f\u5426\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002 \u8fd0\u884c\u4e00\u4e0b\uff1a\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u624d\u53ef\u4ee5 1 4 5 8 9 12 13 16 17 20 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fdb\u7a0b1\u548c\u8fdb\u7a0b2\u5728\u76f8\u4e92\u62a2\u7740\u4f7f\u7528\u5171\u4eab\u5185\u5b58 v \u3002","title":"\u4e0d\u52a0\u8fdb\u7a0b\u9501"},{"location":"python\u5b66\u4e60/023python\u591a\u8fdb\u7a0b/#_8","text":"\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u4e0d\u540c\u8fdb\u7a0b\u62a2\u5171\u4eab\u8d44\u6e90\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u52a0\u8fdb\u7a0b\u9501\u6765\u89e3\u51b3\u3002 \u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 l = mp.Lock() # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 \u7136\u540e\u5c06\u8fdb\u7a0b\u9501\u7684\u4fe1\u606f\u4f20\u5165\u5404\u4e2a\u8fdb\u7a0b\u4e2d p1 = mp.Process(target=job, args=(v,1,l)) # \u9700\u8981\u5c06Lock\u4f20\u5165 p2 = mp.Process(target=job, args=(v,3,l)) \u5728 job() \u4e2d\u8bbe\u7f6e\u8fdb\u7a0b\u9501\u7684\u4f7f\u7528\uff0c\u4fdd\u8bc1\u8fd0\u884c\u65f6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5bf9\u9501\u5185\u5185\u5bb9\u7684\u72ec\u5360 def job(v, num, l): l.acquire() # \u9501\u4f4f for _ in range(5): time.sleep(0.1) v.value += num # v.value\u83b7\u53d6\u5171\u4eab\u5185\u5b58 print(v.value) l.release() # \u91ca\u653e \u5b8c\u6574\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Sat Apr 27 22:08:56 2019 @author: zangz \"\"\" import multiprocessing as mp #\u5bfc\u5305 import time def job(v, num, l): l.acquire() # \u9501\u4f4f for _ in range(5): time.sleep(0.1) v.value += num # \u83b7\u53d6\u5171\u4eab\u5185\u5b58 print(v.value,'\\n') l.release() # \u91ca\u653e def multicore(): l = mp.Lock() # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u9501 v = mp.Value('i', 0) # \u5b9a\u4e49\u5171\u4eab\u5185\u5b58 p1 = mp.Process(target=job, args=(v,1,l)) # \u9700\u8981\u5c06lock\u4f20\u5165 p2 = mp.Process(target=job, args=(v,3,l)) p1.start() p2.start() p1.join() p2.join() if __name__ == '__main__': multicore() \u8fd0\u884c\u4e00\u4e0b\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u662f\u5426\u8fd8\u4f1a\u51fa\u73b0\u62a2\u5360\u8d44\u6e90\u7684\u60c5\u51b5\uff1a 1 2 3 4 5 8 11 14 17 20 \u663e\u7136\uff0c\u8fdb\u7a0b\u9501\u4fdd\u8bc1\u4e86\u8fdb\u7a0b p1 \u7684\u5b8c\u6574\u8fd0\u884c\uff0c\u7136\u540e\u624d\u8fdb\u884c\u4e86\u8fdb\u7a0b p2 \u7684\u8fd0\u884c","title":"\u52a0\u8fdb\u7a0b\u9501"},{"location":"python\u5b66\u4e60/024python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f/","text":"python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f\uff08\u5217\u8868\u63a8\u5bfc\u5f0f\u3001\u5b57\u5178\u63a8\u5bfc\u5f0f\u3001\u96c6\u5408\u63a8\u5bfc\u5f0f\uff09 \u00b6 \u63a8\u5bfc\u5f0fcomprehensions\uff08\u53c8\u79f0\u89e3\u6790\u5f0f\uff09\uff0c\u662fPython\u7684\u4e00\u79cd\u72ec\u6709\u7279\u6027\u3002\u63a8\u5bfc\u5f0f\u662f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u6784\u5efa\u53e6\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e8f\u5217\u7684\u7ed3\u6784\u4f53\u3002 \u5171\u6709\u4e09\u79cd\u63a8\u5bfc\uff0c\u5728Python2\u548c3\u4e2d\u90fd\u6709\u652f\u6301\uff1a \u5217\u8868(list)\u63a8\u5bfc\u5f0f \u5b57\u5178(dict)\u63a8\u5bfc\u5f0f \u96c6\u5408(set)\u63a8\u5bfc\u5f0f \u4e00\u3001\u5217\u8868\u63a8\u5bfc\u5f0f \u00b6 1\u3001\u4f7f\u7528[]\u751f\u6210list \u57fa\u672c\u683c\u5f0f variable = [ out_exp_res for out_exp in input_list if out_exp == 2 ] out_exp_res : \u3000\u3000 \u5217\u8868\u751f\u6210\u5143\u7d20\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u662f\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u3002 for out_exp in input_list \uff1a \u3000\u3000 \u8fed\u4ee3 input_list\u5c06out_exp\u4f20\u5165out_exp_res\u8868\u8fbe\u5f0f\u4e2d \u3002 if out_exp == 2 \uff1a \u3000\u3000 \u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u54ea\u4e9b\u503c\u53ef\u4ee5\u3002 \u4f8b\u4e00\uff1a\u76f4\u63a5\u7b5b\u9009 multiples = [ i for i in range ( 30 ) if i % 3 is 0 ] print ( multiples ) #multiples\u662f\u4e00\u4e2a\u63a5\u6536\u5217\u8868 #\u63a5\u6536\u7684\u503c\u662f\u4e00\u4e2a\u7684i #\u4f7f\u7528for\u5faa\u73af\u5c06\u4f20\u5165\u7684range(30)\u4e2d\u7684\u503c\u4f20\u9012\u7ed9\u5217\u8868 #\u4f7f\u7528if\u8bed\u53e5\u6765\u5224\u65ad\u4f20\u9012\u54ea\u4e9b\u503c # Output: [0, 3, 6, 9, 12, 15, 18, 21, 24, 27] \u4f8b\u4e8c\uff1a\u51fd\u6570\u8fd4\u56de\u503c def squared ( x ): #\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 return x * x #\u8fd4\u56de\u7684\u662f\u4f20\u5165\u503c\u7684\u5e73\u65b9 #\u5c06for\u5faa\u73af\u7684\u8fd4\u56de\u503c\u4f20\u5230\u51fd\u6570\u4e2d multiples = [ squared ( i ) for i in range ( 30 ) if i % 3 is 0 ] print ( multiples ) # Output: [0, 9, 36, 81, 144, 225, 324, 441, 576, 729] 2\u3001\u4f7f\u7528()\u751f\u6210generator \u5c06\u4fe9\u8868\u63a8\u5bfc\u5f0f\u7684[]\u6539\u6210()\u5373\u53ef\u5f97\u5230\u751f\u6210\u5668\u3002 multiples = ( i for i in range ( 30 ) if i % 3 is 0 ) print ( multiples ) print ( type ( multiples )) # Output: <generator object <genexpr> at 0x0000022D6AC7BB10> < class ' generator '> \u4e8c\u3001\u5b57\u5178\u63a8\u5bfc\u5f0f \u00b6 \u5b57\u5178\u63a8\u5bfc\u548c\u5217\u8868\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u4e2d\u62ec\u53f7\u8be5\u6539\u6210\u5927\u62ec\u53f7\u3002\u76f4\u63a5\u4e3e\u4f8b\u8bf4\u660e\uff1a \u4f8b\u5b50\u4e00\uff1a\u5927\u5c0f\u5199key\u5408\u5e76 mcase = { 'a' : 10 , 'b' : 34 , 'A' : 7 , 'Z' : 3 } mcase_frequency = { k . lower (): mcase . get ( k . lower (), 0 ) + mcase . get ( k . upper (), 0 ) for k in mcase . keys () if k . lower () in [ 'a' , 'b' ] } print mcase_frequency # Output: {'a': 17, 'b': 34} \u4f8b\u5b50\u4e8c\uff1a\u5feb\u901f\u66f4\u6362key\u548cvalue mcase = { 'a' : 10 , 'b' : 34 } mcase_frequency = { v : k for k , v in mcase . items ()} print mcase_frequency # Output: {10: 'a', 34: 'b'} \u4e09\u3001\u96c6\u5408\u63a8\u5bfc\u5f0f \u00b6 \u5b83\u4eec\u8ddf\u5217\u8868\u63a8\u5bfc\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u5b83\u4f7f\u7528\u5927\u62ec\u53f7{}\u3002 \u4f8b\u4e00\uff1a squared = { x ** 2 for x in [ 1 , 1 , 2 ]} print ( squared ) # Output: set([1, 4])","title":"024 python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f"},{"location":"python\u5b66\u4e60/024python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f/#python","text":"\u63a8\u5bfc\u5f0fcomprehensions\uff08\u53c8\u79f0\u89e3\u6790\u5f0f\uff09\uff0c\u662fPython\u7684\u4e00\u79cd\u72ec\u6709\u7279\u6027\u3002\u63a8\u5bfc\u5f0f\u662f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u6784\u5efa\u53e6\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e8f\u5217\u7684\u7ed3\u6784\u4f53\u3002 \u5171\u6709\u4e09\u79cd\u63a8\u5bfc\uff0c\u5728Python2\u548c3\u4e2d\u90fd\u6709\u652f\u6301\uff1a \u5217\u8868(list)\u63a8\u5bfc\u5f0f \u5b57\u5178(dict)\u63a8\u5bfc\u5f0f \u96c6\u5408(set)\u63a8\u5bfc\u5f0f","title":"python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f\uff08\u5217\u8868\u63a8\u5bfc\u5f0f\u3001\u5b57\u5178\u63a8\u5bfc\u5f0f\u3001\u96c6\u5408\u63a8\u5bfc\u5f0f\uff09"},{"location":"python\u5b66\u4e60/024python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f/#_1","text":"1\u3001\u4f7f\u7528[]\u751f\u6210list \u57fa\u672c\u683c\u5f0f variable = [ out_exp_res for out_exp in input_list if out_exp == 2 ] out_exp_res : \u3000\u3000 \u5217\u8868\u751f\u6210\u5143\u7d20\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u662f\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u3002 for out_exp in input_list \uff1a \u3000\u3000 \u8fed\u4ee3 input_list\u5c06out_exp\u4f20\u5165out_exp_res\u8868\u8fbe\u5f0f\u4e2d \u3002 if out_exp == 2 \uff1a \u3000\u3000 \u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u54ea\u4e9b\u503c\u53ef\u4ee5\u3002 \u4f8b\u4e00\uff1a\u76f4\u63a5\u7b5b\u9009 multiples = [ i for i in range ( 30 ) if i % 3 is 0 ] print ( multiples ) #multiples\u662f\u4e00\u4e2a\u63a5\u6536\u5217\u8868 #\u63a5\u6536\u7684\u503c\u662f\u4e00\u4e2a\u7684i #\u4f7f\u7528for\u5faa\u73af\u5c06\u4f20\u5165\u7684range(30)\u4e2d\u7684\u503c\u4f20\u9012\u7ed9\u5217\u8868 #\u4f7f\u7528if\u8bed\u53e5\u6765\u5224\u65ad\u4f20\u9012\u54ea\u4e9b\u503c # Output: [0, 3, 6, 9, 12, 15, 18, 21, 24, 27] \u4f8b\u4e8c\uff1a\u51fd\u6570\u8fd4\u56de\u503c def squared ( x ): #\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 return x * x #\u8fd4\u56de\u7684\u662f\u4f20\u5165\u503c\u7684\u5e73\u65b9 #\u5c06for\u5faa\u73af\u7684\u8fd4\u56de\u503c\u4f20\u5230\u51fd\u6570\u4e2d multiples = [ squared ( i ) for i in range ( 30 ) if i % 3 is 0 ] print ( multiples ) # Output: [0, 9, 36, 81, 144, 225, 324, 441, 576, 729] 2\u3001\u4f7f\u7528()\u751f\u6210generator \u5c06\u4fe9\u8868\u63a8\u5bfc\u5f0f\u7684[]\u6539\u6210()\u5373\u53ef\u5f97\u5230\u751f\u6210\u5668\u3002 multiples = ( i for i in range ( 30 ) if i % 3 is 0 ) print ( multiples ) print ( type ( multiples )) # Output: <generator object <genexpr> at 0x0000022D6AC7BB10> < class ' generator '>","title":"\u4e00\u3001\u5217\u8868\u63a8\u5bfc\u5f0f"},{"location":"python\u5b66\u4e60/024python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f/#_2","text":"\u5b57\u5178\u63a8\u5bfc\u548c\u5217\u8868\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u4e2d\u62ec\u53f7\u8be5\u6539\u6210\u5927\u62ec\u53f7\u3002\u76f4\u63a5\u4e3e\u4f8b\u8bf4\u660e\uff1a \u4f8b\u5b50\u4e00\uff1a\u5927\u5c0f\u5199key\u5408\u5e76 mcase = { 'a' : 10 , 'b' : 34 , 'A' : 7 , 'Z' : 3 } mcase_frequency = { k . lower (): mcase . get ( k . lower (), 0 ) + mcase . get ( k . upper (), 0 ) for k in mcase . keys () if k . lower () in [ 'a' , 'b' ] } print mcase_frequency # Output: {'a': 17, 'b': 34} \u4f8b\u5b50\u4e8c\uff1a\u5feb\u901f\u66f4\u6362key\u548cvalue mcase = { 'a' : 10 , 'b' : 34 } mcase_frequency = { v : k for k , v in mcase . items ()} print mcase_frequency # Output: {10: 'a', 34: 'b'}","title":"\u4e8c\u3001\u5b57\u5178\u63a8\u5bfc\u5f0f"},{"location":"python\u5b66\u4e60/024python\u7684\u5404\u79cd\u63a8\u5bfc\u5f0f/#_3","text":"\u5b83\u4eec\u8ddf\u5217\u8868\u63a8\u5bfc\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u5b83\u4f7f\u7528\u5927\u62ec\u53f7{}\u3002 \u4f8b\u4e00\uff1a squared = { x ** 2 for x in [ 1 , 1 , 2 ]} print ( squared ) # Output: set([1, 4])","title":"\u4e09\u3001\u96c6\u5408\u63a8\u5bfc\u5f0f"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/","text":"\u5b98\u7f51\u7f51\u5740 \u4e00\u3001psutil\u6a21\u5757: \u00b6 psutil\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u5e93,\u80fd\u591f\u8f7b\u677e\u5b9e\u73b0\u83b7\u53d6\u7cfb\u7edf\u8fd0\u884c\u7684\u8fdb\u7a0b\u548c\u7cfb\u7edf\u5229\u7528\u7387\uff08\u5305\u62ecCPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\uff09\u4fe1\u606f\u3002\u5b83\u4e3b\u8981\u7528\u6765\u505a\u7cfb\u7edf\u76d1\u63a7\uff0c\u6027\u80fd\u5206\u6790\uff0c\u8fdb\u7a0b\u7ba1\u7406\u3002\u5b83\u5b9e\u73b0\u4e86\u540c\u7b49\u547d\u4ee4\u884c\u5de5\u5177\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u5982ps\u3001top\u3001lsof\u3001netstat\u3001ifconfig\u3001who\u3001df\u3001kill\u3001free\u3001nice\u3001ionice\u3001iostat\u3001iotop\u3001uptime\u3001pidof\u3001tty\u3001taskset\u3001pmap\u7b49\u3002\u76ee\u524d\u652f\u630132\u4f4d\u548c64\u4f4d\u7684Linux\u3001Windows\u3001OS X\u3001FreeBSD\u548cSun Solaris\u7b49\u64cd\u4f5c\u7cfb\u7edf. 2.\u5b89\u88c5psutil\u6a21\u5757\uff1a\u5982\u679c\u662f\u5b89\u88c5\u4e86anaconda\u4f1a\u81ea\u5e26\u8fd9\u4e2a\u6a21\u5757 CentOS\u5b89\u88c5psutil\u5305\uff1a python\u7248\u672c\uff1a3.5 wget https://pypi.python.org/packages/source/p/psutil/psutil-3.2.1.tar.gz --no-check-certificate tar zxvf psutil-3.2.1.tar.gz cd psutil-3.2.1 python setup.py install Windos\u5b89\u88c5psutil\u5305\uff1a D: \\p ython35 \\S cripts>pip3.exe install psutil Collecting psutil Downloading psutil-5.3.1-cp35-cp35m-win_amd64.whl ( 215kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 225kB 84kB/s Installing collected packages: psutil Successfully installed psutil-5.3.1 \u4e8c\u3001.\u83b7\u53d6\u7cfb\u7edf\u57fa\u672c\u4fe1\u606f\u7684\u4f7f\u7528: 1.CPU\u4fe1\u606f \u00b6 \u4f7f\u7528cpu_times\u65b9\u6cd5\u83b7\u53d6cpu\u7684\u5b8c\u6574\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002 In [ 3 ]: psutil . cpu_times () Out [ 3 ]: scputimes ( user = 22096.843749999996 , system = 23272.625 , idle = 272734.671875 , interrupt = 454.625 , dpc = 385.421875 ) \u83b7\u53d6\u5355\u4e2a\u6570\u636e\uff0c\u5982\u67e5\u770b\u7528\u6237\u7684cpu\u65f6\u95f4\u6bd4\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [ 8 ]: psutil . cpu_times () . user Out [ 8 ]: 22285.656249999996 \u83b7\u53d6cpu\u903b\u8f91\u548c\u7269\u7406\u4e2a\u6570\uff0c\u9ed8\u8ba4logical\u503c\u4e3aTrue \u3002 #CPU\u903b\u8f91\u4e2a\u6570 In [ 9 ]: psutil . cpu_count () Out [ 9 ]: 4 #CPU\u7269\u7406\u4e2a\u6570 In [ 10 ]: psutil . cpu_count ( logical = False ) Out [ 10 ]: 2 \u83b7\u53d6cpu\u7684\u4f7f\u7528\u7387: In [ 28 ]: psutil . cpu_percent () #\u603b\u5f97\u5360\u6709\u7387 Out [ 28 ]: 14.0 In [ 29 ]: psutil . cpu_percent ( 1 ) #pid\u4e3a1\u7684\u8fdb\u7a0b\u7684cpu\u5360\u6709\u7387 Out [ 29 ]: 11.1 2.\u5185\u5b58\u4fe1\u606f \u00b6 \u5185\u5b58\u4fe1\u606f\u7684\u83b7\u53d6\u4e3b\u8981\u4f7f\u7528virtual_memory\u65b9\u6cd5\u3002swap\u4f7f\u7528\u5c31\u7528swap_memory\u65b9\u6cd5\u3002 In [ 3 ]: psutil . virtual_memory () Out [ 3 ]: svmem ( total = 8485965824 , available = 4302585856 , percent = 49.3 , used = 4183379968 , free = 4302585856 ) \u5176\u4e2dpercent\u8868\u793a\u5b9e\u9645\u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58\u5360\u6bd4\uff0c\u5373\uff088485965824-4302585856\uff09/8485965824*100% \u3002available\u8868\u793a\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7684\u5185\u5b58\u3002 \u83b7\u53d6\u5355\u4e2a\u7684\u4fe1\u606f\u8ddfcpu\u7684\u4f7f\u7528\u662f\u4e00\u6837\u7684,\u6bd4\u5982\u83b7\u53d6\u5185\u5b58\u7684\u4f7f\u7528\u7387 In [ 5 ]: psutil . virtual_memory () . percent Out [ 5 ]: 48.9 \u4ea4\u6362\u5206\u533a\u7684\u4fe1\u606f \u00b6 In [ 4 ]: psutil . swap_memory () Out [ 4 ]: sswap ( total = 10566340608 , used = 5468590080 , free = 5097750528 , percent = 51.8 , sin = 0 , sout = 0 ) 3.\u78c1\u76d8\u4fe1\u606f \u00b6 \u78c1\u76d8\u4fe1\u606f\u4e3b\u8981\u6709\u4e24\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u78c1\u76d8\u7684\u5229\u7528\u7387\uff0c\u4e00\u4e2a\u662fio\uff0c\u4ed6\u4eec\u5206\u522b\u53ef\u4ee5\u901a\u8fc7disk_usage\u548cdisk_io_counters\u65b9\u6cd5\u83b7\u53d6\u3002 \u5982\u4e0b\u5148\u83b7\u53d6\u5206\u533a\u4fe1\u606f\uff0c\u7136\u540e\u770b\u4e0b\u6839\u5206\u533a\u7684\u4f7f\u7528\u60c5\u51b5: In [ 6 ]: psutil . disk_partitions () Out [ 6 ]: [ sdiskpart ( device = 'C: \\\\ ' , mountpoint = 'C: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'D: \\\\ ' , mountpoint = 'D: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'E: \\\\ ' , mountpoint = 'E: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'F: \\\\ ' , mountpoint = 'F: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'G: \\\\ ' , mountpoint = 'G: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'M: \\\\ ' , mountpoint = 'M: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'N: \\\\ ' , mountpoint = 'N: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'O: \\\\ ' , mountpoint = 'O: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'P: \\\\ ' , mountpoint = 'P: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' )] \u67e5\u770b\u67d0\u4e2a\u5206\u533a\u7684\u4fe1\u606f In [ 9 ]: psutil . disk_usage ( 'c:' ) Out [ 9 ]: sdiskusage ( total = 107375226880 , used = 48413634560 , free = 58961592320 , percent = 45.1 ) In [ 10 ]: psutil . disk_usage ( 'D:' ) Out [ 10 ]: sdiskusage ( total = 132677468160 , used = 51502489600 , free = 81174978560 , percent = 38.8 ) In [ 11 ]: psutil . disk_usage ( 'E:' ) #\u6ce8\u610f\u4e00\u5b9a\u8981\u6709: Out [ 11 ]: sdiskusage ( total = 224426729472 , used = 201101312 , free = 224225628160 , percent = 0.1 ) \u9ed8\u8ba4disk_io_counters\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u786c\u76d8\u603b\u7684io\u6570\u548c\u8bfb\u5199\u4fe1\u606f\uff0c\u5982\u679c\u9700\u8981\u83b7\u53d6\u5355\u4e2a\u786c\u76d8\u7684io\u548c\u8bfb\u5199\u4fe1\u606f\u52a0\u4e0a\"perdisk=True\"\u53c2\u6570\u3002 In [ 15 ]: psutil . disk_io_counters () Out [ 15 ]: sdiskio ( read_count = 14388378 , write_count = 5578458 , read_bytes = 858581854208 , write_bytes = 40740875776 , read_time = 10644 , write_time = 3237 ) In [ 18 ]: psutil . disk_io_counters ( \"perdisk=True\" ) #\u8fd9\u91cc\u7684\u5206\u533a\u662f\u6574\u4e2a\u76d8,\u6211\u8fd9\u91cc\u6302\u8f7d\u4e86\u4e09\u5757\u76d8 Out [ 18 ]: { 'PhysicalDrive0' : sdiskio ( read_count = 2357409 , write_count = 5552659 , read_bytes = 77187101184 , write_bytes = 40293819904 , read_time = 2817 , write_time = 2244 ), 'PhysicalDrive1' : sdiskio ( read_count = 868070 , write_count = 25558 , read_bytes = 49977322496 , write_bytes = 447356928 , read_time = 4129 , write_time = 935 ), 'PhysicalDrive2' : sdiskio ( read_count = 11338523 , write_count = 1000 , read_bytes = 742926391808 , write_bytes = 8146944 , read_time = 3770 , write_time = 58 )} 4.\u7f51\u7edc\u4fe1\u606f\uff1a \u00b6 \u7f51\u7edcio\u548c\u78c1\u76d8io\u4f7f\u7528\u65b9\u6cd5\u5dee\u4e0d\u591a\uff0c\u4e3b\u8981\u4f7f\u7528net_io_counters\u65b9\u6cd5\uff0c\u5982\u679c\u9700\u8981\u83b7\u53d6\u5355\u4e2a\u7f51\u5361\u7684io\u4fe1\u606f\uff0c\u52a0\u4e0apernic=True\u53c2\u6570\u3002 In [ 20 ]: #\u83b7\u53d6\u7f51\u7edc\u603b\u7684io\u60c5\u51b5 In [ 21 ]: psutil . net_io_counters () Out [ 21 ]: snetio ( bytes_sent = 1926789 , bytes_recv = 10124347 , packets_sent = 33645 , packets_recv = 11464 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ) In [ 22 ]: #\u83b7\u53d6\u7f51\u5361\u7684io\u60c5\u51b5 In [ 23 ]: psutil . net_io_counters ( pernic = True ) Out [ 23 ]: { '\u4ee5\u592a\u7f51' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), '\u672c\u5730\u8fde\u63a5* 9' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), '\u672c\u5730\u8fde\u63a5* 10' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'VMware Network Adapter VMnet1' : snetio ( bytes_sent = 7784 , bytes_recv = 168 , packets_sent = 7783 , packets_recv = 168 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'VMware Network Adapter VMnet8' : snetio ( bytes_sent = 17403 , bytes_recv = 167 , packets_sent = 17403 , packets_recv = 167 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'WLAN' : snetio ( bytes_sent = 1962230 , bytes_recv = 10165831 , packets_sent = 8554 , packets_recv = 11234 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'Loopback Pseudo-Interface 1' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 )} #### 5.\u5176\u4ed6\u7cfb\u7edf\u4fe1\u606f\uff1a 1. \u83b7\u53d6\u5f00\u673a\u65f6\u95f4 ( \u4e0d\u662f\u5f53\u524d\u65f6\u95f4\u662f\u5f00\u673a\u7684\u65f6\u95f4 ) `` ` python In [ 24 ]: psutil . boot_time () Out [ 24 ]: 1556333804.0 #\u8f6c\u6362\u6210\u81ea\u7136\u65f6\u95f4\u683c\u5f0f In [ 26 ]: import datetime In [ 27 ]: datetime . datetime . fromtimestamp ( psutil . boot_time ()) . strftime ( \"%Y-%m- %d %H: %M: %S\" ) Out [ 27 ]: '2019-04-27 10: 56: 44' #\u73b0\u5728\u7684\u65f6\u95f4\u662f4-28 2.\u67e5\u770b\u7cfb\u7edf\u5168\u90e8\u8fdb\u7a0b In [ 31 ]: psutil . pids () Out [ 31 ]: #\u8f93\u51fa\u592a\u591a\u4e86\u5c31\u4e0d\u5168\u90e8\u526a\u5207\u4e86 [ 0 , 4 , 96 , 380 , 540 , 680 , 692 , 712 , 820 , 844 , 892 , 928 , 956 , 3.\u67e5\u770b\u5355\u4e2a\u8fdb\u7a0b p = psutil . Process ( 16031 ) p . name () #\u8fdb\u7a0b\u540d p . exe () #\u8fdb\u7a0b\u7684bin\u8def\u5f84 p . cwd () #\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84 p . status () #\u8fdb\u7a0b\u72b6\u6001 p . create_time () #\u8fdb\u7a0b\u521b\u5efa\u65f6\u95f4 p . uids () #\u8fdb\u7a0buid\u4fe1\u606f p . gids () #\u8fdb\u7a0b\u7684gid\u4fe1\u606f p . cpu_times () #\u8fdb\u7a0b\u7684cpu\u65f6\u95f4\u4fe1\u606f,\u5305\u62ecuser,system\u4e24\u4e2acpu\u4fe1\u606f p . cpu_affinity () #get\u8fdb\u7a0bcpu\u4eb2\u548c\u5ea6,\u5982\u679c\u8981\u8bbe\u7f6ecpu\u4eb2\u548c\u5ea6,\u5c06cpu\u53f7\u4f5c\u4e3a\u53c2\u8003\u5c31\u597d p . memory_percent () #\u8fdb\u7a0b\u5185\u5b58\u5229\u7528\u7387 p . memory_info () #\u8fdb\u7a0b\u5185\u5b58rss,vms\u4fe1\u606f p . io_counters () #\u8fdb\u7a0b\u7684IO\u4fe1\u606f,\u5305\u62ec\u8bfb\u5199IO\u6570\u5b57\u53ca\u53c2\u6570 p . connectios () #\u8fd4\u56de\u8fdb\u7a0b\u5217\u8868 p . num_threads () #\u8fdb\u7a0b\u5f00\u542f\u7684\u7ebf\u7a0b\u6570 \u542c\u8fc7 psutil\u7684Popen\u65b9\u6cd5\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f \uff0c\u53ef\u4ee5\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u76f8\u5173\u4fe1\u606f from subprocess import PIPE p = psutil . Popen ([ \"/usr/bin/python\" , \"-c\" , \"print('hello')\" ], stdout = PIPE ) p . name () p . username () \u67e5\u770b\u7cfb\u7edf\u786c\u4ef6\u811a\u672c\uff1a: # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 10:40:47 2019 @author: zangz \"\"\" #!/usr/bin/env python #coding:utf-8 import psutil import datetime import time # \u5f53\u524d\u65f6\u95f4 now_time = time . strftime ( '%Y-%m- %d -%H:%M:%S' , time . localtime ( time . time ())) print ( now_time ) # \u67e5\u770bcpu\u7269\u7406\u4e2a\u6570\u7684\u4fe1\u606f print ( u \"\u7269\u7406CPU\u4e2a\u6570: %s \" % psutil . cpu_count ( logical = False )) #CPU\u7684\u4f7f\u7528\u7387 cpu = ( str ( psutil . cpu_percent ( 1 ))) + '%' print ( u \"cup\u4f7f\u7528\u7387: %s \" % cpu ) #\u67e5\u770b\u5185\u5b58\u4fe1\u606f,\u5269\u4f59\u5185\u5b58.free \u603b\u5171.total #round()\u51fd\u6570\u65b9\u6cd5\u4e3a\u8fd4\u56de\u6d6e\u70b9\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c(\u8fd9\u91cc\u53d6\u4e862\u4f4d)\u3002\u8fd9\u91cc\u662fbit\u6240\u4ee5\u6362\u7b97\u6210G\u9700\u8981\u9664\u4ee51024**3 free = str ( round ( psutil . virtual_memory () . free / ( 1024.0 ** 3 ), 2 )) total = str ( round ( psutil . virtual_memory () . total / ( 1024.0 * 1024.0 * 1024.0 ), 2 )) memory = int ( psutil . virtual_memory () . total - psutil . virtual_memory () . free ) / float ( psutil . virtual_memory () . total ) print ( u \"\u7269\u7406\u5185\u5b58\uff1a %s G\" % total ) print ( u \"\u5269\u4f59\u7269\u7406\u5185\u5b58\uff1a %s G\" % free ) print ( u \"\u7269\u7406\u5185\u5b58\u4f7f\u7528\u7387\uff1a %s %% \" % int ( memory * 100 )) # \u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 print ( u \"\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4: %s \" % datetime . datetime . fromtimestamp ( psutil . boot_time ()) . strftime ( \"%Y-%m- %d %H:%M:%S\" )) # \u7cfb\u7edf\u7528\u6237 users_count = len ( psutil . users ()) # # >>> for u in psutil.users(): # ... print(u) # ... # suser(name='root', terminal='pts/0', host='61.135.18.162', started=1505483904.0) # suser(name='root', terminal='pts/5', host='61.135.18.162', started=1505469056.0) # >>> u.name # 'root' # >>> u.terminal # 'pts/5' # >>> u.host # '61.135.18.162' # >>> u.started # 1505469056.0 # >>> users_list = \",\" . join ([ u . name for u in psutil . users ()]) print ( u \"\u5f53\u524d\u6709 %s \u4e2a\u7528\u6237\uff0c\u5206\u522b\u662f %s \" % ( users_count , users_list )) #\u7f51\u5361\uff0c\u53ef\u4ee5\u5f97\u5230\u7f51\u5361\u5c5e\u6027\uff0c\u8fde\u63a5\u6570\uff0c\u5f53\u524d\u6d41\u91cf\u7b49\u4fe1\u606f net = psutil . net_io_counters () bytes_sent = '{0:.2f} Mb' . format ( net . bytes_recv / 1024 / 1024 ) bytes_rcvd = '{0:.2f} Mb' . format ( net . bytes_sent / 1024 / 1024 ) print ( u \"\u7f51\u5361\u63a5\u6536\u6d41\u91cf %s \u7f51\u5361\u53d1\u9001\u6d41\u91cf %s \" % ( bytes_rcvd , bytes_sent )) io = psutil . disk_partitions () # print(io) # print(\"io[-1]\u4e3a\",io[-1]) #del io[-1] print ( '-----------------------------\u78c1\u76d8\u4fe1\u606f---------------------------------------' ) print ( \"\u7cfb\u7edf\u78c1\u76d8\u4fe1\u606f\uff1a\" + str ( io )) for i in io : o = psutil . disk_usage ( i . device ) #N:\\\\(i.device) print ( \"\u603b\u5bb9\u91cf\uff1a\" + str ( int ( o . total / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( \"\u5df2\u7528\u5bb9\u91cf\uff1a\" + str ( int ( o . used / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( \"\u53ef\u7528\u5bb9\u91cf\uff1a\" + str ( int ( o . free / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( '-----------------------------\u8fdb\u7a0b\u4fe1\u606f-------------------------------------' ) # \u67e5\u770b\u7cfb\u7edf\u5168\u90e8\u8fdb\u7a0b for pnum in psutil . pids (): p = psutil . Process ( pnum ) print ( u \"\u8fdb\u7a0b\u540d %-20s \u5185\u5b58\u5229\u7528\u7387 %-18s \u8fdb\u7a0b\u72b6\u6001 %-10s \u521b\u5efa\u65f6\u95f4 %-10s \" \\ % ( p . name (), p . memory_percent (), p . status (), p . create_time ()))","title":"025 python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#psutil","text":"psutil\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u5e93,\u80fd\u591f\u8f7b\u677e\u5b9e\u73b0\u83b7\u53d6\u7cfb\u7edf\u8fd0\u884c\u7684\u8fdb\u7a0b\u548c\u7cfb\u7edf\u5229\u7528\u7387\uff08\u5305\u62ecCPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\uff09\u4fe1\u606f\u3002\u5b83\u4e3b\u8981\u7528\u6765\u505a\u7cfb\u7edf\u76d1\u63a7\uff0c\u6027\u80fd\u5206\u6790\uff0c\u8fdb\u7a0b\u7ba1\u7406\u3002\u5b83\u5b9e\u73b0\u4e86\u540c\u7b49\u547d\u4ee4\u884c\u5de5\u5177\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u5982ps\u3001top\u3001lsof\u3001netstat\u3001ifconfig\u3001who\u3001df\u3001kill\u3001free\u3001nice\u3001ionice\u3001iostat\u3001iotop\u3001uptime\u3001pidof\u3001tty\u3001taskset\u3001pmap\u7b49\u3002\u76ee\u524d\u652f\u630132\u4f4d\u548c64\u4f4d\u7684Linux\u3001Windows\u3001OS X\u3001FreeBSD\u548cSun Solaris\u7b49\u64cd\u4f5c\u7cfb\u7edf. 2.\u5b89\u88c5psutil\u6a21\u5757\uff1a\u5982\u679c\u662f\u5b89\u88c5\u4e86anaconda\u4f1a\u81ea\u5e26\u8fd9\u4e2a\u6a21\u5757 CentOS\u5b89\u88c5psutil\u5305\uff1a python\u7248\u672c\uff1a3.5 wget https://pypi.python.org/packages/source/p/psutil/psutil-3.2.1.tar.gz --no-check-certificate tar zxvf psutil-3.2.1.tar.gz cd psutil-3.2.1 python setup.py install Windos\u5b89\u88c5psutil\u5305\uff1a D: \\p ython35 \\S cripts>pip3.exe install psutil Collecting psutil Downloading psutil-5.3.1-cp35-cp35m-win_amd64.whl ( 215kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 225kB 84kB/s Installing collected packages: psutil Successfully installed psutil-5.3.1 \u4e8c\u3001.\u83b7\u53d6\u7cfb\u7edf\u57fa\u672c\u4fe1\u606f\u7684\u4f7f\u7528:","title":"\u4e00\u3001psutil\u6a21\u5757:"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#1cpu","text":"\u4f7f\u7528cpu_times\u65b9\u6cd5\u83b7\u53d6cpu\u7684\u5b8c\u6574\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002 In [ 3 ]: psutil . cpu_times () Out [ 3 ]: scputimes ( user = 22096.843749999996 , system = 23272.625 , idle = 272734.671875 , interrupt = 454.625 , dpc = 385.421875 ) \u83b7\u53d6\u5355\u4e2a\u6570\u636e\uff0c\u5982\u67e5\u770b\u7528\u6237\u7684cpu\u65f6\u95f4\u6bd4\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [ 8 ]: psutil . cpu_times () . user Out [ 8 ]: 22285.656249999996 \u83b7\u53d6cpu\u903b\u8f91\u548c\u7269\u7406\u4e2a\u6570\uff0c\u9ed8\u8ba4logical\u503c\u4e3aTrue \u3002 #CPU\u903b\u8f91\u4e2a\u6570 In [ 9 ]: psutil . cpu_count () Out [ 9 ]: 4 #CPU\u7269\u7406\u4e2a\u6570 In [ 10 ]: psutil . cpu_count ( logical = False ) Out [ 10 ]: 2 \u83b7\u53d6cpu\u7684\u4f7f\u7528\u7387: In [ 28 ]: psutil . cpu_percent () #\u603b\u5f97\u5360\u6709\u7387 Out [ 28 ]: 14.0 In [ 29 ]: psutil . cpu_percent ( 1 ) #pid\u4e3a1\u7684\u8fdb\u7a0b\u7684cpu\u5360\u6709\u7387 Out [ 29 ]: 11.1","title":"1.CPU\u4fe1\u606f"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#2","text":"\u5185\u5b58\u4fe1\u606f\u7684\u83b7\u53d6\u4e3b\u8981\u4f7f\u7528virtual_memory\u65b9\u6cd5\u3002swap\u4f7f\u7528\u5c31\u7528swap_memory\u65b9\u6cd5\u3002 In [ 3 ]: psutil . virtual_memory () Out [ 3 ]: svmem ( total = 8485965824 , available = 4302585856 , percent = 49.3 , used = 4183379968 , free = 4302585856 ) \u5176\u4e2dpercent\u8868\u793a\u5b9e\u9645\u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58\u5360\u6bd4\uff0c\u5373\uff088485965824-4302585856\uff09/8485965824*100% \u3002available\u8868\u793a\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7684\u5185\u5b58\u3002 \u83b7\u53d6\u5355\u4e2a\u7684\u4fe1\u606f\u8ddfcpu\u7684\u4f7f\u7528\u662f\u4e00\u6837\u7684,\u6bd4\u5982\u83b7\u53d6\u5185\u5b58\u7684\u4f7f\u7528\u7387 In [ 5 ]: psutil . virtual_memory () . percent Out [ 5 ]: 48.9","title":"2.\u5185\u5b58\u4fe1\u606f"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#_1","text":"In [ 4 ]: psutil . swap_memory () Out [ 4 ]: sswap ( total = 10566340608 , used = 5468590080 , free = 5097750528 , percent = 51.8 , sin = 0 , sout = 0 )","title":"\u4ea4\u6362\u5206\u533a\u7684\u4fe1\u606f"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#3","text":"\u78c1\u76d8\u4fe1\u606f\u4e3b\u8981\u6709\u4e24\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u78c1\u76d8\u7684\u5229\u7528\u7387\uff0c\u4e00\u4e2a\u662fio\uff0c\u4ed6\u4eec\u5206\u522b\u53ef\u4ee5\u901a\u8fc7disk_usage\u548cdisk_io_counters\u65b9\u6cd5\u83b7\u53d6\u3002 \u5982\u4e0b\u5148\u83b7\u53d6\u5206\u533a\u4fe1\u606f\uff0c\u7136\u540e\u770b\u4e0b\u6839\u5206\u533a\u7684\u4f7f\u7528\u60c5\u51b5: In [ 6 ]: psutil . disk_partitions () Out [ 6 ]: [ sdiskpart ( device = 'C: \\\\ ' , mountpoint = 'C: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'D: \\\\ ' , mountpoint = 'D: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'E: \\\\ ' , mountpoint = 'E: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'F: \\\\ ' , mountpoint = 'F: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'G: \\\\ ' , mountpoint = 'G: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'M: \\\\ ' , mountpoint = 'M: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'N: \\\\ ' , mountpoint = 'N: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'O: \\\\ ' , mountpoint = 'O: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' ), sdiskpart ( device = 'P: \\\\ ' , mountpoint = 'P: \\\\ ' , fstype = 'NTFS' , opts = 'rw,fixed' )] \u67e5\u770b\u67d0\u4e2a\u5206\u533a\u7684\u4fe1\u606f In [ 9 ]: psutil . disk_usage ( 'c:' ) Out [ 9 ]: sdiskusage ( total = 107375226880 , used = 48413634560 , free = 58961592320 , percent = 45.1 ) In [ 10 ]: psutil . disk_usage ( 'D:' ) Out [ 10 ]: sdiskusage ( total = 132677468160 , used = 51502489600 , free = 81174978560 , percent = 38.8 ) In [ 11 ]: psutil . disk_usage ( 'E:' ) #\u6ce8\u610f\u4e00\u5b9a\u8981\u6709: Out [ 11 ]: sdiskusage ( total = 224426729472 , used = 201101312 , free = 224225628160 , percent = 0.1 ) \u9ed8\u8ba4disk_io_counters\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u786c\u76d8\u603b\u7684io\u6570\u548c\u8bfb\u5199\u4fe1\u606f\uff0c\u5982\u679c\u9700\u8981\u83b7\u53d6\u5355\u4e2a\u786c\u76d8\u7684io\u548c\u8bfb\u5199\u4fe1\u606f\u52a0\u4e0a\"perdisk=True\"\u53c2\u6570\u3002 In [ 15 ]: psutil . disk_io_counters () Out [ 15 ]: sdiskio ( read_count = 14388378 , write_count = 5578458 , read_bytes = 858581854208 , write_bytes = 40740875776 , read_time = 10644 , write_time = 3237 ) In [ 18 ]: psutil . disk_io_counters ( \"perdisk=True\" ) #\u8fd9\u91cc\u7684\u5206\u533a\u662f\u6574\u4e2a\u76d8,\u6211\u8fd9\u91cc\u6302\u8f7d\u4e86\u4e09\u5757\u76d8 Out [ 18 ]: { 'PhysicalDrive0' : sdiskio ( read_count = 2357409 , write_count = 5552659 , read_bytes = 77187101184 , write_bytes = 40293819904 , read_time = 2817 , write_time = 2244 ), 'PhysicalDrive1' : sdiskio ( read_count = 868070 , write_count = 25558 , read_bytes = 49977322496 , write_bytes = 447356928 , read_time = 4129 , write_time = 935 ), 'PhysicalDrive2' : sdiskio ( read_count = 11338523 , write_count = 1000 , read_bytes = 742926391808 , write_bytes = 8146944 , read_time = 3770 , write_time = 58 )}","title":"3.\u78c1\u76d8\u4fe1\u606f"},{"location":"python\u5b66\u4e60/025python\u6a21\u5757\u4e4bpsutil\u8be6\u89e3/#4","text":"\u7f51\u7edcio\u548c\u78c1\u76d8io\u4f7f\u7528\u65b9\u6cd5\u5dee\u4e0d\u591a\uff0c\u4e3b\u8981\u4f7f\u7528net_io_counters\u65b9\u6cd5\uff0c\u5982\u679c\u9700\u8981\u83b7\u53d6\u5355\u4e2a\u7f51\u5361\u7684io\u4fe1\u606f\uff0c\u52a0\u4e0apernic=True\u53c2\u6570\u3002 In [ 20 ]: #\u83b7\u53d6\u7f51\u7edc\u603b\u7684io\u60c5\u51b5 In [ 21 ]: psutil . net_io_counters () Out [ 21 ]: snetio ( bytes_sent = 1926789 , bytes_recv = 10124347 , packets_sent = 33645 , packets_recv = 11464 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ) In [ 22 ]: #\u83b7\u53d6\u7f51\u5361\u7684io\u60c5\u51b5 In [ 23 ]: psutil . net_io_counters ( pernic = True ) Out [ 23 ]: { '\u4ee5\u592a\u7f51' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), '\u672c\u5730\u8fde\u63a5* 9' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), '\u672c\u5730\u8fde\u63a5* 10' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'VMware Network Adapter VMnet1' : snetio ( bytes_sent = 7784 , bytes_recv = 168 , packets_sent = 7783 , packets_recv = 168 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'VMware Network Adapter VMnet8' : snetio ( bytes_sent = 17403 , bytes_recv = 167 , packets_sent = 17403 , packets_recv = 167 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'WLAN' : snetio ( bytes_sent = 1962230 , bytes_recv = 10165831 , packets_sent = 8554 , packets_recv = 11234 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 ), 'Loopback Pseudo-Interface 1' : snetio ( bytes_sent = 0 , bytes_recv = 0 , packets_sent = 0 , packets_recv = 0 , errin = 0 , errout = 0 , dropin = 0 , dropout = 0 )} #### 5.\u5176\u4ed6\u7cfb\u7edf\u4fe1\u606f\uff1a 1. \u83b7\u53d6\u5f00\u673a\u65f6\u95f4 ( \u4e0d\u662f\u5f53\u524d\u65f6\u95f4\u662f\u5f00\u673a\u7684\u65f6\u95f4 ) `` ` python In [ 24 ]: psutil . boot_time () Out [ 24 ]: 1556333804.0 #\u8f6c\u6362\u6210\u81ea\u7136\u65f6\u95f4\u683c\u5f0f In [ 26 ]: import datetime In [ 27 ]: datetime . datetime . fromtimestamp ( psutil . boot_time ()) . strftime ( \"%Y-%m- %d %H: %M: %S\" ) Out [ 27 ]: '2019-04-27 10: 56: 44' #\u73b0\u5728\u7684\u65f6\u95f4\u662f4-28 2.\u67e5\u770b\u7cfb\u7edf\u5168\u90e8\u8fdb\u7a0b In [ 31 ]: psutil . pids () Out [ 31 ]: #\u8f93\u51fa\u592a\u591a\u4e86\u5c31\u4e0d\u5168\u90e8\u526a\u5207\u4e86 [ 0 , 4 , 96 , 380 , 540 , 680 , 692 , 712 , 820 , 844 , 892 , 928 , 956 , 3.\u67e5\u770b\u5355\u4e2a\u8fdb\u7a0b p = psutil . Process ( 16031 ) p . name () #\u8fdb\u7a0b\u540d p . exe () #\u8fdb\u7a0b\u7684bin\u8def\u5f84 p . cwd () #\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84 p . status () #\u8fdb\u7a0b\u72b6\u6001 p . create_time () #\u8fdb\u7a0b\u521b\u5efa\u65f6\u95f4 p . uids () #\u8fdb\u7a0buid\u4fe1\u606f p . gids () #\u8fdb\u7a0b\u7684gid\u4fe1\u606f p . cpu_times () #\u8fdb\u7a0b\u7684cpu\u65f6\u95f4\u4fe1\u606f,\u5305\u62ecuser,system\u4e24\u4e2acpu\u4fe1\u606f p . cpu_affinity () #get\u8fdb\u7a0bcpu\u4eb2\u548c\u5ea6,\u5982\u679c\u8981\u8bbe\u7f6ecpu\u4eb2\u548c\u5ea6,\u5c06cpu\u53f7\u4f5c\u4e3a\u53c2\u8003\u5c31\u597d p . memory_percent () #\u8fdb\u7a0b\u5185\u5b58\u5229\u7528\u7387 p . memory_info () #\u8fdb\u7a0b\u5185\u5b58rss,vms\u4fe1\u606f p . io_counters () #\u8fdb\u7a0b\u7684IO\u4fe1\u606f,\u5305\u62ec\u8bfb\u5199IO\u6570\u5b57\u53ca\u53c2\u6570 p . connectios () #\u8fd4\u56de\u8fdb\u7a0b\u5217\u8868 p . num_threads () #\u8fdb\u7a0b\u5f00\u542f\u7684\u7ebf\u7a0b\u6570 \u542c\u8fc7 psutil\u7684Popen\u65b9\u6cd5\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f \uff0c\u53ef\u4ee5\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u76f8\u5173\u4fe1\u606f from subprocess import PIPE p = psutil . Popen ([ \"/usr/bin/python\" , \"-c\" , \"print('hello')\" ], stdout = PIPE ) p . name () p . username () \u67e5\u770b\u7cfb\u7edf\u786c\u4ef6\u811a\u672c\uff1a: # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 10:40:47 2019 @author: zangz \"\"\" #!/usr/bin/env python #coding:utf-8 import psutil import datetime import time # \u5f53\u524d\u65f6\u95f4 now_time = time . strftime ( '%Y-%m- %d -%H:%M:%S' , time . localtime ( time . time ())) print ( now_time ) # \u67e5\u770bcpu\u7269\u7406\u4e2a\u6570\u7684\u4fe1\u606f print ( u \"\u7269\u7406CPU\u4e2a\u6570: %s \" % psutil . cpu_count ( logical = False )) #CPU\u7684\u4f7f\u7528\u7387 cpu = ( str ( psutil . cpu_percent ( 1 ))) + '%' print ( u \"cup\u4f7f\u7528\u7387: %s \" % cpu ) #\u67e5\u770b\u5185\u5b58\u4fe1\u606f,\u5269\u4f59\u5185\u5b58.free \u603b\u5171.total #round()\u51fd\u6570\u65b9\u6cd5\u4e3a\u8fd4\u56de\u6d6e\u70b9\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c(\u8fd9\u91cc\u53d6\u4e862\u4f4d)\u3002\u8fd9\u91cc\u662fbit\u6240\u4ee5\u6362\u7b97\u6210G\u9700\u8981\u9664\u4ee51024**3 free = str ( round ( psutil . virtual_memory () . free / ( 1024.0 ** 3 ), 2 )) total = str ( round ( psutil . virtual_memory () . total / ( 1024.0 * 1024.0 * 1024.0 ), 2 )) memory = int ( psutil . virtual_memory () . total - psutil . virtual_memory () . free ) / float ( psutil . virtual_memory () . total ) print ( u \"\u7269\u7406\u5185\u5b58\uff1a %s G\" % total ) print ( u \"\u5269\u4f59\u7269\u7406\u5185\u5b58\uff1a %s G\" % free ) print ( u \"\u7269\u7406\u5185\u5b58\u4f7f\u7528\u7387\uff1a %s %% \" % int ( memory * 100 )) # \u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 print ( u \"\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4: %s \" % datetime . datetime . fromtimestamp ( psutil . boot_time ()) . strftime ( \"%Y-%m- %d %H:%M:%S\" )) # \u7cfb\u7edf\u7528\u6237 users_count = len ( psutil . users ()) # # >>> for u in psutil.users(): # ... print(u) # ... # suser(name='root', terminal='pts/0', host='61.135.18.162', started=1505483904.0) # suser(name='root', terminal='pts/5', host='61.135.18.162', started=1505469056.0) # >>> u.name # 'root' # >>> u.terminal # 'pts/5' # >>> u.host # '61.135.18.162' # >>> u.started # 1505469056.0 # >>> users_list = \",\" . join ([ u . name for u in psutil . users ()]) print ( u \"\u5f53\u524d\u6709 %s \u4e2a\u7528\u6237\uff0c\u5206\u522b\u662f %s \" % ( users_count , users_list )) #\u7f51\u5361\uff0c\u53ef\u4ee5\u5f97\u5230\u7f51\u5361\u5c5e\u6027\uff0c\u8fde\u63a5\u6570\uff0c\u5f53\u524d\u6d41\u91cf\u7b49\u4fe1\u606f net = psutil . net_io_counters () bytes_sent = '{0:.2f} Mb' . format ( net . bytes_recv / 1024 / 1024 ) bytes_rcvd = '{0:.2f} Mb' . format ( net . bytes_sent / 1024 / 1024 ) print ( u \"\u7f51\u5361\u63a5\u6536\u6d41\u91cf %s \u7f51\u5361\u53d1\u9001\u6d41\u91cf %s \" % ( bytes_rcvd , bytes_sent )) io = psutil . disk_partitions () # print(io) # print(\"io[-1]\u4e3a\",io[-1]) #del io[-1] print ( '-----------------------------\u78c1\u76d8\u4fe1\u606f---------------------------------------' ) print ( \"\u7cfb\u7edf\u78c1\u76d8\u4fe1\u606f\uff1a\" + str ( io )) for i in io : o = psutil . disk_usage ( i . device ) #N:\\\\(i.device) print ( \"\u603b\u5bb9\u91cf\uff1a\" + str ( int ( o . total / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( \"\u5df2\u7528\u5bb9\u91cf\uff1a\" + str ( int ( o . used / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( \"\u53ef\u7528\u5bb9\u91cf\uff1a\" + str ( int ( o . free / ( 1024.0 * 1024.0 * 1024.0 ))) + \"G\" ) print ( '-----------------------------\u8fdb\u7a0b\u4fe1\u606f-------------------------------------' ) # \u67e5\u770b\u7cfb\u7edf\u5168\u90e8\u8fdb\u7a0b for pnum in psutil . pids (): p = psutil . Process ( pnum ) print ( u \"\u8fdb\u7a0b\u540d %-20s \u5185\u5b58\u5229\u7528\u7387 %-18s \u8fdb\u7a0b\u72b6\u6001 %-10s \u521b\u5efa\u65f6\u95f4 %-10s \" \\ % ( p . name (), p . memory_percent (), p . status (), p . create_time ()))","title":"4.\u7f51\u7edc\u4fe1\u606f\uff1a"},{"location":"python\u5b66\u4e60/026python\u81ea\u52a8\u62f7\u8d1d\u4f18\u76d8\u7684\u6240\u6709\u5185\u5bb9/","text":"\u7ffb\u770b\u4e86\u4e0d\u5c11\u522b\u4eba\u5199\u7684\u4f8b\u5b50,\u53d1\u73b0\u867d\u7136\u7a0b\u5e8f\u7b80\u5355\u4f46\u662f\u529f\u80fd\u5b9e\u73b0\u4e0d\u662f\u5f88\u597d,\u81ea\u5df1\u505a\u51fa\u4e86\u4e00\u4e9b\u5c0f\u7684\u6539\u8fdb:\u4ee3\u7801\u4f9d\u65e7\u5197\u4f59,\u4ee5\u540e\u518d\u4fee\u6539,\u563f\u563f \u00b6 \u8bdd\u4e0d\u591a\u5c11\u4e0a\u4ee3\u7801: # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 13:12:44 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Mon Nov 5 16:18:42 2018 @author: zangz \"\"\" import time import os from time import sleep from shutil import copytree from psutil import disk_partitions #\u83b7\u53d6\u5206\u533a\u7684\u4fe1\u606f def copy_u_to_computer (): a = True #\u5b9a\u4e49while\u5faa\u73af\u7ed3\u675f\u7684\u6807\u5fd7 while ( a ): #\u5199\u4e00\u4e2a\u4e00\u76f4\u5faa\u73af\u7684while sleep ( 1 ) #\u6682\u505c\u4e00\u79d2 #\u68c0\u67e5\u6240\u6709\u9a71\u52a8\u5668 for item in disk_partitions (): #\u53d1\u73b0\u53ef\u79fb\u52a8\u9a71\u52a8\u5668 #(if\u8bed\u53e5\u7684\u610f\u601d\u662f):\u5982\u679c\u5728opts\u4e2d\u5305\u542b'removable'\u4fe1\u606f\u5c31\u7ee7\u7eed\u5f80\u4e0b\u6267\u884cif\u8bed\u53e5\u4e2d\u7684\u5185\u5bb9 #\u4e0d\u4f7f\u7528==\u7684\u539f\u56e0\u662fopts\u4fe1\u606f\u4e2d\u4e0d\u4ec5\u5305\u542b'removable'\u4fe1\u606f\u548c'fixed'\u4fe1\u606f if 'removable' in item . opts : #removable\u662f\u53ef\u62c6\u5378\u7684\u610f\u601d,fixed\u662f\u56fa\u5b9a\u7684\u610f\u601d(\u79fb\u52a8\u786c\u76d8\u540c\u6837\u662f\u56fa\u5b9a\u7684,\u53ea\u6709u\u76d8\u4f1a\u68c0\u6d4b\u662fremovable) driver , opts = item . device , item . opts #device\u662f\u9a71\u52a8\u5668\u7684\u6839\u76ee\u5f55\u6bd4\u5982F:\\ #\u8f93\u51fa\u53ef\u79fb\u52a8\u9a71\u52a8\u5668\u7b26\u53f7 print ( '\u53d1\u73b0\u4f18\u76d8,\u563f\u563f' , driver ) a = False #\u53d1\u73b0\u4f18\u76d8\u5c31\u505c\u6b62while\u5faa\u73af #\u590d\u5236\u6839\u76ee\u5f55 # #\u751f\u6210\u62f7\u8d1d\u5230\u7684\u8def\u5f84:\u4f7f\u7528\u65f6\u95f4\u4f5c\u4e3a\u8def\u5f84 # \u83b7\u53d6\u5f53\u524d\u65f6\u95f4 now_time = time . strftime ( '%Y-%m- %d -%H:%M:%S' , time . localtime ( time . time ())) #\u7531\u4e8e\u521b\u5efa\u6587\u4ef6\u5939\u65f6\u4e0d\u80fd\u6709:\u7b49\u975e\u6cd5\u7684\u5b57\u7b26,\u6240\u4ee5\u4f7f\u7528replace\u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4 now_time1 = now_time . replace ( ':' , '-' ) print ( now_time1 ) #\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u65f6\u95f4\u4e3a\u6587\u4ef6\u540d\u7684\u8def\u5f84 path = 'E: \\\\ \u62f7\u8d1d \\\\ ' + str ( now_time1 ) #\u62f7\u8d1d\u4f18\u76d8\u4e2d\u6240\u6709\u7684\u6587\u4ef6 copytree ( driver , path ) break else : print ( '\u6ca1\u53d1\u73b0\u53ef\u79fb\u52a8\u4f18\u76d8' ) a = False #\u5faa\u73af\u67e5\u770b\u5b8c\u4e00\u904d\u6240\u6709\u7684\u9a71\u52a8\u5668\u8fd8\u662f\u6ca1\u6709\u53d1\u73b0\u53ef\u79fb\u52a8\u7684\u4f18\u76d8\u5c31\u8df3\u51fa\u5faa\u73af(\u6709\u53ef\u80fd\u662f\u79fb\u52a8\u786c\u76d8) qu_num = len ( disk_partitions ()) print ( qu_num ) while ( True ): #\u8fd9\u91cc\u7684while\u5faa\u73af\u4fdd\u8bc1\u4e86,\u53ea\u8981\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u4e0e\u8bbe\u5b9a\u7684\u4e0d\u4e00\u6837\u5c31\u4f1a\u6267\u884c\u62f7\u8d1d\u51fd\u6570 if len ( disk_partitions ()) == qu_num : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u672a\u6539\u53d8\" ) sleep ( 3 ) else : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u53d1\u751f\u6539\u53d8,\u51c6\u5907\u62f7\u8d1d\u4f18\u76d8\u7684\u5185\u5bb9\" ) qu_num = len ( disk_partitions ()) #\u6539\u53d8\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u9632\u6b62\u6267\u884c\u62f7\u8d1d\u51fd\u6570\u540e\u6b7b\u5faa\u73af print ( qu_num ) copy_u_to_computer () #\u6267\u884c\u62f7\u8d1d\u51fd\u6570 \u6d4b\u8bd5\u7684\u7ed3\u679c\u5f88\u662f\u5f88\u7ed9\u529b\u7684,\u7531\u4e8e\u662f\u6b7b\u5faa\u73af\u5c31\u4e0d\u622a\u56fe\u4e86","title":"026 python\u81ea\u52a8\u62f7\u8d1d\u4f18\u76d8\u7684\u6240\u6709\u5185\u5bb9"},{"location":"python\u5b66\u4e60/026python\u81ea\u52a8\u62f7\u8d1d\u4f18\u76d8\u7684\u6240\u6709\u5185\u5bb9/#_1","text":"\u8bdd\u4e0d\u591a\u5c11\u4e0a\u4ee3\u7801: # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 13:12:44 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Mon Nov 5 16:18:42 2018 @author: zangz \"\"\" import time import os from time import sleep from shutil import copytree from psutil import disk_partitions #\u83b7\u53d6\u5206\u533a\u7684\u4fe1\u606f def copy_u_to_computer (): a = True #\u5b9a\u4e49while\u5faa\u73af\u7ed3\u675f\u7684\u6807\u5fd7 while ( a ): #\u5199\u4e00\u4e2a\u4e00\u76f4\u5faa\u73af\u7684while sleep ( 1 ) #\u6682\u505c\u4e00\u79d2 #\u68c0\u67e5\u6240\u6709\u9a71\u52a8\u5668 for item in disk_partitions (): #\u53d1\u73b0\u53ef\u79fb\u52a8\u9a71\u52a8\u5668 #(if\u8bed\u53e5\u7684\u610f\u601d\u662f):\u5982\u679c\u5728opts\u4e2d\u5305\u542b'removable'\u4fe1\u606f\u5c31\u7ee7\u7eed\u5f80\u4e0b\u6267\u884cif\u8bed\u53e5\u4e2d\u7684\u5185\u5bb9 #\u4e0d\u4f7f\u7528==\u7684\u539f\u56e0\u662fopts\u4fe1\u606f\u4e2d\u4e0d\u4ec5\u5305\u542b'removable'\u4fe1\u606f\u548c'fixed'\u4fe1\u606f if 'removable' in item . opts : #removable\u662f\u53ef\u62c6\u5378\u7684\u610f\u601d,fixed\u662f\u56fa\u5b9a\u7684\u610f\u601d(\u79fb\u52a8\u786c\u76d8\u540c\u6837\u662f\u56fa\u5b9a\u7684,\u53ea\u6709u\u76d8\u4f1a\u68c0\u6d4b\u662fremovable) driver , opts = item . device , item . opts #device\u662f\u9a71\u52a8\u5668\u7684\u6839\u76ee\u5f55\u6bd4\u5982F:\\ #\u8f93\u51fa\u53ef\u79fb\u52a8\u9a71\u52a8\u5668\u7b26\u53f7 print ( '\u53d1\u73b0\u4f18\u76d8,\u563f\u563f' , driver ) a = False #\u53d1\u73b0\u4f18\u76d8\u5c31\u505c\u6b62while\u5faa\u73af #\u590d\u5236\u6839\u76ee\u5f55 # #\u751f\u6210\u62f7\u8d1d\u5230\u7684\u8def\u5f84:\u4f7f\u7528\u65f6\u95f4\u4f5c\u4e3a\u8def\u5f84 # \u83b7\u53d6\u5f53\u524d\u65f6\u95f4 now_time = time . strftime ( '%Y-%m- %d -%H:%M:%S' , time . localtime ( time . time ())) #\u7531\u4e8e\u521b\u5efa\u6587\u4ef6\u5939\u65f6\u4e0d\u80fd\u6709:\u7b49\u975e\u6cd5\u7684\u5b57\u7b26,\u6240\u4ee5\u4f7f\u7528replace\u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4 now_time1 = now_time . replace ( ':' , '-' ) print ( now_time1 ) #\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u65f6\u95f4\u4e3a\u6587\u4ef6\u540d\u7684\u8def\u5f84 path = 'E: \\\\ \u62f7\u8d1d \\\\ ' + str ( now_time1 ) #\u62f7\u8d1d\u4f18\u76d8\u4e2d\u6240\u6709\u7684\u6587\u4ef6 copytree ( driver , path ) break else : print ( '\u6ca1\u53d1\u73b0\u53ef\u79fb\u52a8\u4f18\u76d8' ) a = False #\u5faa\u73af\u67e5\u770b\u5b8c\u4e00\u904d\u6240\u6709\u7684\u9a71\u52a8\u5668\u8fd8\u662f\u6ca1\u6709\u53d1\u73b0\u53ef\u79fb\u52a8\u7684\u4f18\u76d8\u5c31\u8df3\u51fa\u5faa\u73af(\u6709\u53ef\u80fd\u662f\u79fb\u52a8\u786c\u76d8) qu_num = len ( disk_partitions ()) print ( qu_num ) while ( True ): #\u8fd9\u91cc\u7684while\u5faa\u73af\u4fdd\u8bc1\u4e86,\u53ea\u8981\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u4e0e\u8bbe\u5b9a\u7684\u4e0d\u4e00\u6837\u5c31\u4f1a\u6267\u884c\u62f7\u8d1d\u51fd\u6570 if len ( disk_partitions ()) == qu_num : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u672a\u6539\u53d8\" ) sleep ( 3 ) else : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u53d1\u751f\u6539\u53d8,\u51c6\u5907\u62f7\u8d1d\u4f18\u76d8\u7684\u5185\u5bb9\" ) qu_num = len ( disk_partitions ()) #\u6539\u53d8\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u9632\u6b62\u6267\u884c\u62f7\u8d1d\u51fd\u6570\u540e\u6b7b\u5faa\u73af print ( qu_num ) copy_u_to_computer () #\u6267\u884c\u62f7\u8d1d\u51fd\u6570 \u6d4b\u8bd5\u7684\u7ed3\u679c\u5f88\u662f\u5f88\u7ed9\u529b\u7684,\u7531\u4e8e\u662f\u6b7b\u5faa\u73af\u5c31\u4e0d\u622a\u56fe\u4e86","title":"\u7ffb\u770b\u4e86\u4e0d\u5c11\u522b\u4eba\u5199\u7684\u4f8b\u5b50,\u53d1\u73b0\u867d\u7136\u7a0b\u5e8f\u7b80\u5355\u4f46\u662f\u529f\u80fd\u5b9e\u73b0\u4e0d\u662f\u5f88\u597d,\u81ea\u5df1\u505a\u51fa\u4e86\u4e00\u4e9b\u5c0f\u7684\u6539\u8fdb:\u4ee3\u7801\u4f9d\u65e7\u5197\u4f59,\u4ee5\u540e\u518d\u4fee\u6539,\u563f\u563f"},{"location":"python\u5b66\u4e60/027\u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84\u540d/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 18:20:50 2019 @author: zangz \"\"\" import os import os.path #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 path = input ( '\u8bf7\u8f93\u5165\u8def\u5f84\uff1a' ) . strip () #.strip()\u53bb\u9664\u9996\u5c3e\u7684\u7a7a\u683c file_path_list = get_file ( path ) #\u5faa\u73af\u6253\u5370\u6240\u6709\u6587\u4ef6\u8def\u5f84 for filepath in file_path_list : print ( filepath + ' \\n ' ) \u6267\u884c\u7ed3\u679c: runfile ( 'K:/python\u7a0b\u5e8f/\u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u53ca\u5176\u8def\u5f84.py' , wdir = 'K:/python\u7a0b\u5e8f' ) \u8bf7\u8f93\u5165\u8def\u5f84\uff1a K : \\ python\u7a0b\u5e8f K : \\ python\u7a0b\u5e8f \\ 123. txt K : \\ python\u7a0b\u5e8f \\ copy\u7b5b\u9009\u7684\u6587\u4ef6 . py K : \\ python\u7a0b\u5e8f \\ file_path \\ 123. txt K : \\ python\u7a0b\u5e8f \\ file_path \\ \u5408\u5e76 std\u7684\u6587\u5b57 . py K : \\ python\u7a0b\u5e8f \\ file_path \\ \u54c8\u54c8 1. txt K : \\ python\u7a0b\u5e8f \\ file_path \\ \u65b0\u5efa\u6587\u4ef6\u5939 \\ \u65b0\u5efa\u6587\u672c\u6587\u6863 . txt K : \\ python\u7a0b\u5e8f \\ glob\u6a21\u5757\u7684\u4f7f\u7528 . py K : \\ python\u7a0b\u5e8f \\ MP3\u5230wav\u683c\u5f0f\u7684\u8f6c\u6362 . py K : \\ python\u7a0b\u5e8f \\ numpy\u7684\u64cd\u4f5c \\ numpy_operation . py K : \\ python\u7a0b\u5e8f \\ python\u9898\u76ee . py .....","title":"027 \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84\u540d"},{"location":"python\u5b66\u4e60/028\u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84\u540d\u5e76\u8fdb\u884c\u7b5b\u9009/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 18:51:13 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 18:20:50 2019 @author: zangz \"\"\" import os import os.path #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 path = input ( '\u8bf7\u8f93\u5165\u8def\u5f84\uff1a' ) . strip () #.strip()\u53bb\u9664\u9996\u5c3e\u7684\u7a7a\u683c file_path_list = get_file ( path ) #\u7b5b\u9009\u540e\u7f00\u51fd\u6570,\u4f20\u5165\u5305\u542b\u6240\u6709\u540e\u7f00\u540d\u7684\u5217\u8868,\u4ee5\u53ca\u9700\u8981\u7b5b\u9009\u7684\u540e\u7f00(\u9ed8\u8ba4\u7b5b\u9009txt\u6587\u4ef6) def shai_xuan_hou_zhui ( file_path_list , hou_zhui = '.txt' ): list2 = [] #\u7528\u4e8e\u50a8\u5b58\u7b5b\u9009\u597d\u7684\u6587\u4ef6\u7684\u8def\u5f84 for filepath in file_path_list : # os.path.splitext():\u5206\u79bb\u6587\u4ef6\u540d\u4e0e\u6269\u5c55\u540d if os . path . splitext ( filepath )[ 1 ] == hou_zhui : list2 . append ( filepath ) # print(filepath +'\\n') return list2 hou_zhui = '.txt' py_list = shai_xuan_hou_zhui ( file_path_list , '.py' ) #\u7b5b\u9009py\u6587\u4ef6 txt_list = shai_xuan_hou_zhui ( file_path_list , '.txt' ) #\u7b5b\u9009txt\u6587\u4ef6 print ( txt_list ) \u4f8b:\u6267\u884c\u7684\u7ed3\u679c runfile ( 'K:/python\u7a0b\u5e8f/\u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84\u540d\u5e76\u8fdb\u884c\u7b5b\u9009.py' , wdir = 'K:/python\u7a0b\u5e8f' ) \u8bf7\u8f93\u5165\u8def\u5f84\uff1a K : \\ python\u7a0b\u5e8f [ 'K: \\\\ python\u7a0b\u5e8f \\\\ 123.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ file_path \\\\ 123.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u54c8\u54c81.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u6c49\u5b57\u8f6c\u62fc\u97f3 \\\\ std\u603b.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u6c49\u5b57\u8f6c\u62fc\u97f3 \\\\ \u62fc\u97f3.txt' , 'K: \\\\ python\u7a0b\u5e8f \\\\ \u6c49\u5b57\u8f6c\u62fc\u97f3 \\\\ \u6587\u4ef6\u540d.txt' ]","title":"028 \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84\u540d\u5e76\u8fdb\u884c\u7b5b\u9009"},{"location":"python\u5b66\u4e60/029python\u81ea\u52a8\u62f7\u8d1d\u4f18\u76d8\u7684\u6307\u5b9a\u540e\u7f00\u6587\u4ef6/","text":"\u8fd9\u91cc\u6307\u5b9a\u590d\u5236\u7684\u6587\u4ef6\u53ea\u6709png\u540e\u7f00\u7684\u6587\u4ef6,\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6dfb\u52a0\u9700\u8981\u590d\u5236\u7684\u6587\u4ef6 # -*- coding: utf-8 -*- \"\"\" Created on Sun Apr 28 13:12:44 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Mon Nov 5 16:18:42 2018 @author: zangz \"\"\" import time import os import os.path import shutil from time import sleep from shutil import copytree from psutil import disk_partitions #\u83b7\u53d6\u5206\u533a\u7684\u4fe1\u606f def copy_u_to_computer (): a = True #\u5b9a\u4e49while\u5faa\u73af\u7ed3\u675f\u7684\u6807\u5fd7 while ( a ): #\u5199\u4e00\u4e2a\u4e00\u76f4\u5faa\u73af\u7684while sleep ( 1 ) #\u6682\u505c\u4e00\u79d2 #\u68c0\u67e5\u6240\u6709\u9a71\u52a8\u5668 for item in disk_partitions (): #\u53d1\u73b0\u53ef\u79fb\u52a8\u9a71\u52a8\u5668 #(if\u8bed\u53e5\u7684\u610f\u601d\u662f):\u5982\u679c\u5728opts\u4e2d\u5305\u542b'removable'\u4fe1\u606f\u5c31\u7ee7\u7eed\u5f80\u4e0b\u6267\u884cif\u8bed\u53e5\u4e2d\u7684\u5185\u5bb9 #\u4e0d\u4f7f\u7528==\u7684\u539f\u56e0\u662fopts\u4fe1\u606f\u4e2d\u4e0d\u4ec5\u5305\u542b'removable'\u4fe1\u606f\u548c'fixed'\u4fe1\u606f if 'removable' in item . opts : #removable\u662f\u53ef\u62c6\u5378\u7684\u610f\u601d,fixed\u662f\u56fa\u5b9a\u7684\u610f\u601d(\u79fb\u52a8\u786c\u76d8\u540c\u6837\u662f\u56fa\u5b9a\u7684,\u53ea\u6709u\u76d8\u4f1a\u68c0\u6d4b\u662fremovable) driver , opts = item . device , item . opts #device\u662f\u9a71\u52a8\u5668\u7684\u6839\u76ee\u5f55\u6bd4\u5982F:\\ #\u8f93\u51fa\u53ef\u79fb\u52a8\u9a71\u52a8\u5668\u7b26\u53f7 print ( '\u53d1\u73b0\u4f18\u76d8,\u563f\u563f' , driver ) a = False #\u53d1\u73b0\u4f18\u76d8\u5c31\u505c\u6b62while\u5faa\u73af #\u590d\u5236\u6839\u76ee\u5f55 # #\u751f\u6210\u62f7\u8d1d\u5230\u7684\u8def\u5f84:\u4f7f\u7528\u65f6\u95f4\u4f5c\u4e3a\u8def\u5f84 # \u83b7\u53d6\u5f53\u524d\u65f6\u95f4 now_time = time . strftime ( '%Y-%m- %d -%H:%M:%S' , time . localtime ( time . time ())) #\u7531\u4e8e\u521b\u5efa\u6587\u4ef6\u5939\u65f6\u4e0d\u80fd\u6709:\u7b49\u975e\u6cd5\u7684\u5b57\u7b26,\u6240\u4ee5\u4f7f\u7528replace\u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4 now_time1 = now_time . replace ( ':' , '-' ) print ( now_time1 ) #\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u65f6\u95f4\u4e3a\u6587\u4ef6\u540d\u7684\u8def\u5f84 path = 'E: \\\\ \u62f7\u8d1d \\\\ ' + str ( now_time1 ) os . mkdir ( path ) file_path_list = get_file ( driver ) # png_list=shai_xuan_hou_zhui(file_path_list,'.png') # #\u62f7\u8d1d\u4f18\u76d8\u4e2d\u6307\u5b9a\u7684\u540e\u7f00\u6587\u4ef6 # for file_path in png_list: # shutil.copy(file_path,path) # #\u60f3\u8981\u590d\u5236\u6307\u5b9a\u7684\u540e\u7f00\u6587\u4ef6\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u6dfb\u52a0\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86 copy_houzhui ( file_path_list , path , '.png' ) copy_houzhui ( file_path_list , path , '.docx' ) break else : print ( '\u6ca1\u53d1\u73b0\u53ef\u79fb\u52a8\u4f18\u76d8' ) a = False #\u5faa\u73af\u67e5\u770b\u5b8c\u4e00\u904d\u6240\u6709\u7684\u9a71\u52a8\u5668\u8fd8\u662f\u6ca1\u6709\u53d1\u73b0\u53ef\u79fb\u52a8\u7684\u4f18\u76d8\u5c31\u8df3\u51fa\u5faa\u73af(\u6709\u53ef\u80fd\u662f\u79fb\u52a8\u786c\u76d8) #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 #\u7b5b\u9009\u540e\u7f00\u51fd\u6570,\u4f20\u5165\u5305\u542b\u6240\u6709\u540e\u7f00\u540d\u7684\u5217\u8868,\u4ee5\u53ca\u9700\u8981\u7b5b\u9009\u7684\u540e\u7f00(\u9ed8\u8ba4\u7b5b\u9009txt\u6587\u4ef6) def shai_xuan_hou_zhui ( file_path_list , hou_zhui = '.txt' ): list2 = [] #\u7528\u4e8e\u50a8\u5b58\u7b5b\u9009\u597d\u7684\u6587\u4ef6\u7684\u8def\u5f84 for filepath in file_path_list : # os.path.splitext():\u5206\u79bb\u6587\u4ef6\u540d\u4e0e\u6269\u5c55\u540d if os . path . splitext ( filepath )[ 1 ] == hou_zhui : list2 . append ( filepath ) # print(filepath +'\\n') return list2 #\u62f7\u8d1d\u6307\u5b9a\u540e\u7f00\u7684\u6587\u4ef6\u5230\u6307\u5b9a\u8def\u5f84\u7684\u51fd\u6570 def copy_houzhui ( file_path_list , path , hou_zhui ): fil_list = shai_xuan_hou_zhui ( file_path_list , hou_zhui ) #\u62f7\u8d1d\u4f18\u76d8\u4e2d\u6307\u5b9a\u7684\u540e\u7f00\u6587\u4ef6 for file_path in fil_list : shutil . copy ( file_path , path ) qu_num = len ( disk_partitions ()) print ( qu_num ) while ( True ): #\u8fd9\u91cc\u7684while\u5faa\u73af\u4fdd\u8bc1\u4e86,\u53ea\u8981\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u4e0e\u8bbe\u5b9a\u7684\u4e0d\u4e00\u6837\u5c31\u4f1a\u6267\u884c\u62f7\u8d1d\u51fd\u6570 if len ( disk_partitions ()) == qu_num : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u672a\u6539\u53d8\" ) sleep ( 3 ) else : print ( \"\u9a71\u52a8\u5668\u4e2a\u6570\u53d1\u751f\u6539\u53d8,\u51c6\u5907\u62f7\u8d1d\u4f18\u76d8\u7684\u5185\u5bb9\" ) qu_num = len ( disk_partitions ()) #\u6539\u53d8\u9a71\u52a8\u5668\u7684\u4e2a\u6570\u9632\u6b62\u6267\u884c\u62f7\u8d1d\u51fd\u6570\u540e\u6b7b\u5faa\u73af print ( qu_num ) copy_u_to_computer () #\u6267\u884c\u62f7\u8d1d\u51fd\u6570 \u6267\u884c\u7684\u7ed3\u679c:\u81ea\u5df1\u6d4b\u8bd5\u5c31\u597d\u4e86,\u5982\u6709\u95ee\u9898\u8bf7\u5728\u5e95\u4e0b\u8bc4\u8bba\u63a2\u8ba8","title":"029 python\u81ea\u52a8\u62f7\u8d1d\u4f18\u76d8\u7684\u6307\u5b9a\u540e\u7f00\u6587\u4ef6"},{"location":"python\u5b66\u4e60/030Python\u9762\u8bd5\uff5c\u4e00\u6587\u8ba9\u4f60\u8bfb\u61c2if-__name__=='__main__'\u7684\u542b\u4e49/","text":"\u8f6c\u8f7d \u7a0b\u5e8f\u5165\u53e3 \u00b6 \u5bf9\u4e8e\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u7a0b\u5e8f\u90fd\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u6bd4\u5982 C\uff0cC++\uff0c\u4ee5\u53ca\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00 Java\uff0cC# \u7b49\u3002\u5982\u679c\u4f60\u63a5\u89e6\u8fc7\u8fd9\u4e9b\u8bed\u8a00\uff0c\u5bf9\u4e8e\u7a0b\u5e8f\u5165\u53e3\u8fd9\u4e2a\u6982\u5ff5\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0cC \u548c C++ \u90fd\u9700\u8981\u6709\u4e00\u4e2a main \u51fd\u6570\u6765\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u4e5f\u5c31\u662f\u7a0b\u5e8f\u7684\u8fd0\u884c\u4f1a\u4ece main \u51fd\u6570\u5f00\u59cb\u3002\u540c\u6837\uff0cJava \u548c C# \u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5305\u542b Main \u65b9\u6cd5\u7684\u4e3b\u7c7b\u6765\u4f5c\u4e3a\u7a0b\u5e8f\u5165\u53e3\u3002 \u800c Python \u5219\u6709\u4e0d\u540c\uff0c\u5b83\u5c5e\u4e8e\u811a\u672c\u8bed\u8a00\uff0c\u4e0d\u50cf\u7f16\u8bd1\u578b\u8bed\u8a00\u90a3\u6837\u5148\u5c06\u7a0b\u5e8f\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u518d\u8fd0\u884c\uff0c\u800c\u662f\u52a8\u6001\u7684\u9010\u884c\u89e3\u91ca\u8fd0\u884c\u3002\u4e5f\u5c31\u662f\u4ece\u811a\u672c\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd0\u884c\uff0c\u6ca1\u6709\u7edf\u4e00\u7684\u5165\u53e3\u3002 \u4e00\u4e2a Python \u6e90\u7801\u6587\u4ef6\u9664\u4e86\u53ef\u4ee5\u88ab\u76f4\u63a5\u8fd0\u884c\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u5757\uff08\u4e5f\u5c31\u662f\u5e93\uff09\u88ab\u5bfc\u5165\u3002\u4e0d\u7ba1\u662f\u5bfc\u5165\u8fd8\u662f\u76f4\u63a5\u8fd0\u884c\uff0c\u6700\u9876\u5c42\u7684\u4ee3\u7801\u90fd\u4f1a\u88ab\u8fd0\u884c\uff08Python \u7528\u7f29\u8fdb\u6765\u533a\u5206\u4ee3\u7801\u5c42\u6b21\uff09\u3002\u800c\u5b9e\u9645\u4e0a\u5728\u5bfc\u5165\u7684\u65f6\u5019\uff0c\u6709\u4e00\u90e8\u5206\u4ee3\u7801\u6211\u4eec\u662f\u4e0d\u5e0c\u671b\u88ab\u8fd0\u884c\u7684\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a const.py \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a PI = 3.14 def main (): print ( \"PI:\" , PI ) main () \u6211\u4eec\u5728\u8fd9\u4e2a\u6587\u4ef6\u91cc\u8fb9\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u91cf\uff0c\u7136\u540e\u53c8\u5199\u4e86\u4e00\u4e2a main \u51fd\u6570\u6765\u8f93\u51fa\u5b9a\u4e49\u7684\u5e38\u91cf\uff0c\u6700\u540e\u8fd0\u884c main \u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\u5bf9\u5b9a\u4e49\u505a\u4e00\u904d\u4eba\u5de5\u68c0\u67e5\uff0c\u770b\u770b\u503c\u8bbe\u7f6e\u7684\u90fd\u5bf9\u4e0d\u5bf9\u3002\u7136\u540e\u6211\u4eec\u76f4\u63a5\u6267\u884c\u8be5\u6587\u4ef6( python const.py ),\u8f93\u51fa\uff1a PI : 3.14 \u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e00\u4e2a area.py \u6587\u4ef6\uff0c\u7528\u4e8e\u8ba1\u7b97\u5706\u7684\u9762\u79ef\uff0c\u8be5\u6587\u4ef6\u91cc\u8fb9\u9700\u8981\u7528\u5230 const.py \u6587\u4ef6\u4e2d\u7684 PI \u53d8\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u4ece const.py \u4e2d\u628a PI \u53d8\u91cf\u5bfc\u5165\u5230 area.py \u4e2d\uff1a from const import PI def calc_round_area ( radius ): return PI * ( radius ** 2 ) def main (): print ( \"round area: \" , calc_round_area ( 2 )) main () \u8fd0\u884c area.py \uff0c\u8f93\u51fa\u7ed3\u679c\uff1a PI : 3.14 round area : 12.56 \u53ef\u4ee5\u770b\u5230\uff0cconst \u4e2d\u7684 main \u51fd\u6570\u4e5f\u88ab\u8fd0\u884c\u4e86\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u662f\u4e0d\u5e0c\u671b\u5b83\u88ab\u8fd0\u884c\uff0c\u63d0\u4f9b main \u4e5f\u53ea\u662f\u4e3a\u4e86\u5bf9\u5e38\u91cf\u5b9a\u4e49\u8fdb\u884c\u4e0b\u6d4b\u8bd5\u3002\u8fd9\u65f6\uff0c if name == 'main' \u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u628a const.py \u6539\u4e00\u4e0b\uff1a PI = 3.14 def main (): print ( \"PI:\" , PI ) if __name__ == \"__main__\" : main () \u7136\u540e\u518d\u8fd0\u884c area.py \uff0c\u8f93\u51fa\u5982\u4e0b\uff1a round area: 12.56 \u518d\u8fd0\u884c\u4e0b const.py\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a PI: 3.14 \u8fd9\u624d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 if name == 'main' \u5c31\u76f8\u5f53\u4e8e\u662f Python \u6a21\u62df\u7684\u7a0b\u5e8f\u5165\u53e3\u3002Python \u672c\u8eab\u5e76\u6ca1\u6709\u89c4\u5b9a\u8fd9\u4e48\u5199\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u7f16\u7801\u4e60\u60ef\u3002\u7531\u4e8e\u6a21\u5757\u4e4b\u95f4\u76f8\u4e92\u5f15\u7528\uff0c\u4e0d\u540c\u6a21\u5757\u53ef\u80fd\u90fd\u6709\u8fd9\u6837\u7684\u5b9a\u4e49\uff0c\u800c\u5165\u53e3\u7a0b\u5e8f\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u5230\u5e95\u54ea\u4e2a\u5165\u53e3\u7a0b\u5e8f\u88ab\u9009\u4e2d\uff0c\u8fd9\u53d6\u51b3\u4e8e name \u7684\u503c\u3002 name name \u662f\u5185\u7f6e\u53d8\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u540d\u5b57\uff0c\u540c\u65f6\u8fd8\u80fd\u53cd\u6620\u4e00\u4e2a\u5305\u7684\u7ed3\u6784\u3002\u6765\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u5982\u4e0b\u4e00\u4e2a\u5305\uff1a a \u251c\u2500\u2500 b \u2502 \u251c\u2500\u2500 c.py \u2502 \u2514\u2500\u2500 init .py \u2514\u2500\u2500 init .py \u76ee\u5f55\u4e2d\u6240\u6709 py \u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u4e3a\uff1a print( name ) \u6211\u4eec\u6267\u884c python -c \"import a.b.c\" \uff0c\u8f93\u51fa\u7ed3\u679c\uff1a a a.b a.b.c \u7531\u6b64\u53ef\u89c1\uff0cname \u53ef\u4ee5\u6e05\u6670\u7684\u53cd\u6620\u4e00\u4e2a\u6a21\u5757\u5728\u5305\u4e2d\u7684\u5c42\u6b21\u3002\u5176\u5b9e\uff0c\u6240\u8c13\u6a21\u5757\u540d\u5c31\u662f import \u65f6\u9700\u8981\u7528\u5230\u7684\u540d\u5b57\uff0c\u4f8b\u5982\uff1a import tornado import tornado.web \u8fd9\u91cc\u7684 tornado \u548c tornado.web \u5c31\u88ab\u79f0\u4e3a\u6a21\u5757\u7684\u6a21\u5757\u540d\u3002 \u5982\u679c\u4e00\u4e2a\u6a21\u5757\u88ab\u76f4\u63a5\u8fd0\u884c\uff0c\u5219\u5176\u6ca1\u6709\u5305\u7ed3\u6784\uff0c\u5176 name \u503c\u4e3a main\u3002\u4f8b\u5982\u5728\u4e0a\u4f8b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8fd0\u884c c.py \u6587\u4ef6\uff08python a/b/c.py\uff09\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a main \u6240\u4ee5\uff0c if name == 'main' \u6211\u4eec\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff1a \u5982\u679c\u6a21\u5757\u662f\u88ab\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u5219\u4ee3\u7801\u5757\u88ab\u8fd0\u884c\uff0c\u5982\u679c\u6a21\u5757\u662f\u88ab\u5bfc\u5165\u7684\uff0c\u5219\u4ee3\u7801\u5757\u4e0d\u88ab\u8fd0\u884c\u3002 \u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u8fd8\u53ef\u4ee5\u884d\u751f\u51fa\u5176\u4ed6\u7684\u4e00\u4e9b\u77e5\u8bc6\u70b9\uff0c\u4f8b\u5982 main.py \u6587\u4ef6\u4e0e Python \u7684 -m \u53c2\u6570\u3002 main.py \u6587\u4ef6\u4e0e python -m Python \u7684 -m \u53c2\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u6a21\u5757\u6216\u8005\u5305\u4f5c\u4e3a\u4e00\u4e2a\u811a\u672c\u8fd0\u884c\uff0c\u800c main.py \u6587\u4ef6\u5219\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u5305\u7684\u201d\u5165\u53e3\u7a0b\u5e8f\u201c\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6765\u770b\u770b python xxx.py \u4e0e python -m xxx.py \u7684\u533a\u522b\u3002\u4e24\u79cd\u8fd0\u884c Python \u7a0b\u5e8f\u7684\u65b9\u5f0f\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u8fd0\u884c\uff0c\u4e00\u79cd\u662f\u5f53\u505a\u6a21\u5757\u6765\u8fd0\u884c\u3002 \u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a Python \u6587\u4ef6 run.py\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a import sys print ( sys . path ) \u6211\u4eec\u7528\u76f4\u63a5\u8fd0\u884c\u7684\u65b9\u5f0f\u542f\u52a8\uff08python run.py\uff09\uff0c\u8f93\u51fa\u7ed3\u679c(\u4e3a\u4e86\u8bf4\u660e\u95ee\u9898\uff0c\u8f93\u51fa\u7ed3\u679c\u53ea\u622a\u53d6\u4e86\u91cd\u8981\u90e8\u5206\uff0c\u4e0b\u540c)\uff1a ['/home/huoty/aboutme/pythonstudy/main', ...] \u7136\u540e\u4ee5\u6a21\u5757\u7684\u65b9\u5f0f\u8fd0\u884c\uff08python -m run.py\uff09: ['', ...] /usr/bin/python: No module named run.py \u7531\u4e8e\u8f93\u51fa\u7ed3\u679c\u53ea\u5217\u51fa\u4e86\u5173\u952e\u7684\u90e8\u5206\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u51fa\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u76f4\u63a5\u8fd0\u884c\u662f\u628a run.py \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u653e\u5230\u4e86 sys.path \u5c5e\u6027\u4e2d\u3002\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u662f\u628a\u4f60\u8f93\u5165\u547d\u4ee4\u7684\u76ee\u5f55\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\uff09\uff0c\u653e\u5230\u4e86 sys.path \u5c5e\u6027\u4e2d\u3002\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u5730\u65b9\u662f\uff0c\u591a\u51fa\u4e86\u4e00\u884c No module named run.py \u7684\u9519\u8bef\u3002\u5b9e\u9645\u4e0a\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u65f6\uff0cPython \u5148\u5bf9 run.py \u6267\u884c\u4e00\u904d import\uff0c\u6240\u4ee5 print sys.path \u88ab\u6210\u529f\u6267\u884c\uff0c\u7136\u540e Python \u624d\u5c1d\u8bd5\u8fd0\u884c run.py \u6a21\u5757\uff0c\u4f46\u662f\uff0c\u5728 path \u53d8\u91cf\u4e2d\u5e76\u6ca1\u6709 run.py \u8fd9\u4e2a\u6a21\u5757\uff0c\u6240\u4ee5\u62a5\u9519\u3002\u800c\u6b63\u786e\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5e94\u8be5\u662f python -m run. \u8fd9\u4e2a\u4f8b\u5b50\u5e76\u4e0d\u80fd\u660e\u663e\u7684\u8bf4\u660e\u95ee\u9898\u3002\u63a5\u7740\u6211\u4eec\u6765\u770b\u770b main.py \u7684\u4f5c\u7528\u3002 \u4ecd\u7136\u5148\u770b\u4f8b\u5b50\uff0c\u6709\u5982\u4e0b\u4e00\u4e2a\u5305\uff1a package \u251c\u2500\u2500 init .py \u2514\u2500\u2500 main .py init.py import sys print(\" init \") print(sys.path) main.py import sys print(\" main \") print(sys.path) \u7528 python -m package \u8fd0\u884c\u7ed3\u679c\uff1a init ['', ...] main ['', ...] \u7528 python package \u8fd0\u884c\u7ed3\u679c\uff1a main ['package', ...] \u7136\u540e\u6211\u4eec\u6765\u603b\u7ed3\u4e00\u4e0b\uff1a 1\u3001 \u52a0\u4e0a -m \u53c2\u6570\u65f6\u4f1a\u628a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u6dfb\u52a0\u5230 sys.path \u4e2d\uff0c\u800c\u4e0d\u52a0\u65f6\u5219\u4f1a\u628a\u811a\u672c\u6240\u5728\u76ee\u5f55\u6dfb\u52a0\u5230 sys.path \u4e2d\u3002 2\u3001 \u52a0\u4e0a -m \u53c2\u6570\u65f6 Python \u4f1a\u5148\u5c06\u6a21\u5757\u6216\u8005\u5305\u5bfc\u5165\uff0c\u7136\u540e\u518d\u6267\u884c 3\u3001 main.py \u6587\u4ef6\u662f\u4e00\u4e2a\u5305\u6216\u8005\u76ee\u5f55\u7684\u5165\u53e3\u7a0b\u5e8f\u3002\u4e0d\u7ba1\u662f\u7528 python package \u8fd8\u662f\u7528 python -m package \u8fd0\u884c\u65f6\uff0cmain.py \u6587\u4ef6\u603b\u662f\u88ab\u6267\u884c\u3002 \u540e\u5e8f \u6211\u8bd5\u56fe\u4f7f\u7528\u957f\u7bc7\u5927\u8bba\u6765\u9610\u8ff0\uff0c\u5728 Python \u4e2d\u5982\u4f55\u7406\u89e3 if name == 'main' \u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u6211\u6709\u6ca1\u6709\u63cf\u8ff0\u5f97\u8db3\u591f\u7684\u660e\u767d\u3002Python \u7684\u786e\u662f\u7b80\u5355\u7684\uff0c\u4f18\u96c5\u7684\uff0c\u4f46\u4e5f\u6709\u5f88\u591a\u95ee\u9898\u662f\u4e0d\u592a\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u4f8b\u5982\u5f88\u591a\u9ad8\u7ea7\u7684\u7279\u6027\uff0c\u50cf\u5143\u7c7b\u3001\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u3001\u63cf\u8ff0\u7b26\u3001\u534f\u7a0b\u7b49\u3002Python \u5e76\u6ca1\u6709\u5728\u592a\u591a\u7684\u5730\u65b9\u89c4\u5b9a\u8981\u5982\u4f55\u5982\u4f55\uff0c\u5f88\u591a\u7684\u7528\u6cd5\u53ea\u662f\u60ef\u7528\u6cd5\uff0c\u4f8b\u5982 self \u548c\u672c\u6587\u8ba8\u8bba\u7684\u5185\u5bb9\u3002\u8fd9\u4e9b\u7528\u6cd5\u6216\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u4f18\u96c5\uff0c\u6216\u662f\u524d\u4eba\u7684\u7ecf\u9a8c\u3002\u4f7f\u7528 Python \u662f\u6709\u65e0\u9650\u53ef\u80fd\u7684\uff0c\u4f60\u53ef\u4ee5\u5199\u51fa\u5f88\u591a\u7b80\u6d01\u4f18\u96c5\u7684\u4ee3\u7801\u3002 \u4f5c\u8005\uff1aPython\u5c0f\u8001\u5f1f \u94fe\u63a5\uff1a https://www.jianshu.com/p/e6ce07704312 \u6765\u6e90\uff1a\u7b80\u4e66","title":"030 Python\u9762\u8bd5\uff5c\u4e00\u6587\u8ba9\u4f60\u8bfb\u61c2if-__name__=='__main__'\u7684\u542b\u4e49"},{"location":"python\u5b66\u4e60/030Python\u9762\u8bd5\uff5c\u4e00\u6587\u8ba9\u4f60\u8bfb\u61c2if-__name__=='__main__'\u7684\u542b\u4e49/#_1","text":"\u5bf9\u4e8e\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u7a0b\u5e8f\u90fd\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u6bd4\u5982 C\uff0cC++\uff0c\u4ee5\u53ca\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00 Java\uff0cC# \u7b49\u3002\u5982\u679c\u4f60\u63a5\u89e6\u8fc7\u8fd9\u4e9b\u8bed\u8a00\uff0c\u5bf9\u4e8e\u7a0b\u5e8f\u5165\u53e3\u8fd9\u4e2a\u6982\u5ff5\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0cC \u548c C++ \u90fd\u9700\u8981\u6709\u4e00\u4e2a main \u51fd\u6570\u6765\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u4e5f\u5c31\u662f\u7a0b\u5e8f\u7684\u8fd0\u884c\u4f1a\u4ece main \u51fd\u6570\u5f00\u59cb\u3002\u540c\u6837\uff0cJava \u548c C# \u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5305\u542b Main \u65b9\u6cd5\u7684\u4e3b\u7c7b\u6765\u4f5c\u4e3a\u7a0b\u5e8f\u5165\u53e3\u3002 \u800c Python \u5219\u6709\u4e0d\u540c\uff0c\u5b83\u5c5e\u4e8e\u811a\u672c\u8bed\u8a00\uff0c\u4e0d\u50cf\u7f16\u8bd1\u578b\u8bed\u8a00\u90a3\u6837\u5148\u5c06\u7a0b\u5e8f\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u518d\u8fd0\u884c\uff0c\u800c\u662f\u52a8\u6001\u7684\u9010\u884c\u89e3\u91ca\u8fd0\u884c\u3002\u4e5f\u5c31\u662f\u4ece\u811a\u672c\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd0\u884c\uff0c\u6ca1\u6709\u7edf\u4e00\u7684\u5165\u53e3\u3002 \u4e00\u4e2a Python \u6e90\u7801\u6587\u4ef6\u9664\u4e86\u53ef\u4ee5\u88ab\u76f4\u63a5\u8fd0\u884c\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u5757\uff08\u4e5f\u5c31\u662f\u5e93\uff09\u88ab\u5bfc\u5165\u3002\u4e0d\u7ba1\u662f\u5bfc\u5165\u8fd8\u662f\u76f4\u63a5\u8fd0\u884c\uff0c\u6700\u9876\u5c42\u7684\u4ee3\u7801\u90fd\u4f1a\u88ab\u8fd0\u884c\uff08Python \u7528\u7f29\u8fdb\u6765\u533a\u5206\u4ee3\u7801\u5c42\u6b21\uff09\u3002\u800c\u5b9e\u9645\u4e0a\u5728\u5bfc\u5165\u7684\u65f6\u5019\uff0c\u6709\u4e00\u90e8\u5206\u4ee3\u7801\u6211\u4eec\u662f\u4e0d\u5e0c\u671b\u88ab\u8fd0\u884c\u7684\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a const.py \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a PI = 3.14 def main (): print ( \"PI:\" , PI ) main () \u6211\u4eec\u5728\u8fd9\u4e2a\u6587\u4ef6\u91cc\u8fb9\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u91cf\uff0c\u7136\u540e\u53c8\u5199\u4e86\u4e00\u4e2a main \u51fd\u6570\u6765\u8f93\u51fa\u5b9a\u4e49\u7684\u5e38\u91cf\uff0c\u6700\u540e\u8fd0\u884c main \u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\u5bf9\u5b9a\u4e49\u505a\u4e00\u904d\u4eba\u5de5\u68c0\u67e5\uff0c\u770b\u770b\u503c\u8bbe\u7f6e\u7684\u90fd\u5bf9\u4e0d\u5bf9\u3002\u7136\u540e\u6211\u4eec\u76f4\u63a5\u6267\u884c\u8be5\u6587\u4ef6( python const.py ),\u8f93\u51fa\uff1a PI : 3.14 \u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e00\u4e2a area.py \u6587\u4ef6\uff0c\u7528\u4e8e\u8ba1\u7b97\u5706\u7684\u9762\u79ef\uff0c\u8be5\u6587\u4ef6\u91cc\u8fb9\u9700\u8981\u7528\u5230 const.py \u6587\u4ef6\u4e2d\u7684 PI \u53d8\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u4ece const.py \u4e2d\u628a PI \u53d8\u91cf\u5bfc\u5165\u5230 area.py \u4e2d\uff1a from const import PI def calc_round_area ( radius ): return PI * ( radius ** 2 ) def main (): print ( \"round area: \" , calc_round_area ( 2 )) main () \u8fd0\u884c area.py \uff0c\u8f93\u51fa\u7ed3\u679c\uff1a PI : 3.14 round area : 12.56 \u53ef\u4ee5\u770b\u5230\uff0cconst \u4e2d\u7684 main \u51fd\u6570\u4e5f\u88ab\u8fd0\u884c\u4e86\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u662f\u4e0d\u5e0c\u671b\u5b83\u88ab\u8fd0\u884c\uff0c\u63d0\u4f9b main \u4e5f\u53ea\u662f\u4e3a\u4e86\u5bf9\u5e38\u91cf\u5b9a\u4e49\u8fdb\u884c\u4e0b\u6d4b\u8bd5\u3002\u8fd9\u65f6\uff0c if name == 'main' \u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u628a const.py \u6539\u4e00\u4e0b\uff1a PI = 3.14 def main (): print ( \"PI:\" , PI ) if __name__ == \"__main__\" : main () \u7136\u540e\u518d\u8fd0\u884c area.py \uff0c\u8f93\u51fa\u5982\u4e0b\uff1a round area: 12.56 \u518d\u8fd0\u884c\u4e0b const.py\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a PI: 3.14 \u8fd9\u624d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 if name == 'main' \u5c31\u76f8\u5f53\u4e8e\u662f Python \u6a21\u62df\u7684\u7a0b\u5e8f\u5165\u53e3\u3002Python \u672c\u8eab\u5e76\u6ca1\u6709\u89c4\u5b9a\u8fd9\u4e48\u5199\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u7f16\u7801\u4e60\u60ef\u3002\u7531\u4e8e\u6a21\u5757\u4e4b\u95f4\u76f8\u4e92\u5f15\u7528\uff0c\u4e0d\u540c\u6a21\u5757\u53ef\u80fd\u90fd\u6709\u8fd9\u6837\u7684\u5b9a\u4e49\uff0c\u800c\u5165\u53e3\u7a0b\u5e8f\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u5230\u5e95\u54ea\u4e2a\u5165\u53e3\u7a0b\u5e8f\u88ab\u9009\u4e2d\uff0c\u8fd9\u53d6\u51b3\u4e8e name \u7684\u503c\u3002 name name \u662f\u5185\u7f6e\u53d8\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u540d\u5b57\uff0c\u540c\u65f6\u8fd8\u80fd\u53cd\u6620\u4e00\u4e2a\u5305\u7684\u7ed3\u6784\u3002\u6765\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u5982\u4e0b\u4e00\u4e2a\u5305\uff1a a \u251c\u2500\u2500 b \u2502 \u251c\u2500\u2500 c.py \u2502 \u2514\u2500\u2500 init .py \u2514\u2500\u2500 init .py \u76ee\u5f55\u4e2d\u6240\u6709 py \u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u4e3a\uff1a print( name ) \u6211\u4eec\u6267\u884c python -c \"import a.b.c\" \uff0c\u8f93\u51fa\u7ed3\u679c\uff1a a a.b a.b.c \u7531\u6b64\u53ef\u89c1\uff0cname \u53ef\u4ee5\u6e05\u6670\u7684\u53cd\u6620\u4e00\u4e2a\u6a21\u5757\u5728\u5305\u4e2d\u7684\u5c42\u6b21\u3002\u5176\u5b9e\uff0c\u6240\u8c13\u6a21\u5757\u540d\u5c31\u662f import \u65f6\u9700\u8981\u7528\u5230\u7684\u540d\u5b57\uff0c\u4f8b\u5982\uff1a import tornado import tornado.web \u8fd9\u91cc\u7684 tornado \u548c tornado.web \u5c31\u88ab\u79f0\u4e3a\u6a21\u5757\u7684\u6a21\u5757\u540d\u3002 \u5982\u679c\u4e00\u4e2a\u6a21\u5757\u88ab\u76f4\u63a5\u8fd0\u884c\uff0c\u5219\u5176\u6ca1\u6709\u5305\u7ed3\u6784\uff0c\u5176 name \u503c\u4e3a main\u3002\u4f8b\u5982\u5728\u4e0a\u4f8b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8fd0\u884c c.py \u6587\u4ef6\uff08python a/b/c.py\uff09\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a main \u6240\u4ee5\uff0c if name == 'main' \u6211\u4eec\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff1a \u5982\u679c\u6a21\u5757\u662f\u88ab\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u5219\u4ee3\u7801\u5757\u88ab\u8fd0\u884c\uff0c\u5982\u679c\u6a21\u5757\u662f\u88ab\u5bfc\u5165\u7684\uff0c\u5219\u4ee3\u7801\u5757\u4e0d\u88ab\u8fd0\u884c\u3002 \u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u8fd8\u53ef\u4ee5\u884d\u751f\u51fa\u5176\u4ed6\u7684\u4e00\u4e9b\u77e5\u8bc6\u70b9\uff0c\u4f8b\u5982 main.py \u6587\u4ef6\u4e0e Python \u7684 -m \u53c2\u6570\u3002 main.py \u6587\u4ef6\u4e0e python -m Python \u7684 -m \u53c2\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u6a21\u5757\u6216\u8005\u5305\u4f5c\u4e3a\u4e00\u4e2a\u811a\u672c\u8fd0\u884c\uff0c\u800c main.py \u6587\u4ef6\u5219\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u5305\u7684\u201d\u5165\u53e3\u7a0b\u5e8f\u201c\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6765\u770b\u770b python xxx.py \u4e0e python -m xxx.py \u7684\u533a\u522b\u3002\u4e24\u79cd\u8fd0\u884c Python \u7a0b\u5e8f\u7684\u65b9\u5f0f\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u8fd0\u884c\uff0c\u4e00\u79cd\u662f\u5f53\u505a\u6a21\u5757\u6765\u8fd0\u884c\u3002 \u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a Python \u6587\u4ef6 run.py\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a import sys print ( sys . path ) \u6211\u4eec\u7528\u76f4\u63a5\u8fd0\u884c\u7684\u65b9\u5f0f\u542f\u52a8\uff08python run.py\uff09\uff0c\u8f93\u51fa\u7ed3\u679c(\u4e3a\u4e86\u8bf4\u660e\u95ee\u9898\uff0c\u8f93\u51fa\u7ed3\u679c\u53ea\u622a\u53d6\u4e86\u91cd\u8981\u90e8\u5206\uff0c\u4e0b\u540c)\uff1a ['/home/huoty/aboutme/pythonstudy/main', ...] \u7136\u540e\u4ee5\u6a21\u5757\u7684\u65b9\u5f0f\u8fd0\u884c\uff08python -m run.py\uff09: ['', ...] /usr/bin/python: No module named run.py \u7531\u4e8e\u8f93\u51fa\u7ed3\u679c\u53ea\u5217\u51fa\u4e86\u5173\u952e\u7684\u90e8\u5206\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u51fa\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u76f4\u63a5\u8fd0\u884c\u662f\u628a run.py \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u653e\u5230\u4e86 sys.path \u5c5e\u6027\u4e2d\u3002\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u662f\u628a\u4f60\u8f93\u5165\u547d\u4ee4\u7684\u76ee\u5f55\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\uff09\uff0c\u653e\u5230\u4e86 sys.path \u5c5e\u6027\u4e2d\u3002\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u5730\u65b9\u662f\uff0c\u591a\u51fa\u4e86\u4e00\u884c No module named run.py \u7684\u9519\u8bef\u3002\u5b9e\u9645\u4e0a\u4ee5\u6a21\u5757\u65b9\u5f0f\u8fd0\u884c\u65f6\uff0cPython \u5148\u5bf9 run.py \u6267\u884c\u4e00\u904d import\uff0c\u6240\u4ee5 print sys.path \u88ab\u6210\u529f\u6267\u884c\uff0c\u7136\u540e Python \u624d\u5c1d\u8bd5\u8fd0\u884c run.py \u6a21\u5757\uff0c\u4f46\u662f\uff0c\u5728 path \u53d8\u91cf\u4e2d\u5e76\u6ca1\u6709 run.py \u8fd9\u4e2a\u6a21\u5757\uff0c\u6240\u4ee5\u62a5\u9519\u3002\u800c\u6b63\u786e\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5e94\u8be5\u662f python -m run. \u8fd9\u4e2a\u4f8b\u5b50\u5e76\u4e0d\u80fd\u660e\u663e\u7684\u8bf4\u660e\u95ee\u9898\u3002\u63a5\u7740\u6211\u4eec\u6765\u770b\u770b main.py \u7684\u4f5c\u7528\u3002 \u4ecd\u7136\u5148\u770b\u4f8b\u5b50\uff0c\u6709\u5982\u4e0b\u4e00\u4e2a\u5305\uff1a package \u251c\u2500\u2500 init .py \u2514\u2500\u2500 main .py init.py import sys print(\" init \") print(sys.path) main.py import sys print(\" main \") print(sys.path) \u7528 python -m package \u8fd0\u884c\u7ed3\u679c\uff1a init ['', ...] main ['', ...] \u7528 python package \u8fd0\u884c\u7ed3\u679c\uff1a main ['package', ...] \u7136\u540e\u6211\u4eec\u6765\u603b\u7ed3\u4e00\u4e0b\uff1a 1\u3001 \u52a0\u4e0a -m \u53c2\u6570\u65f6\u4f1a\u628a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u6dfb\u52a0\u5230 sys.path \u4e2d\uff0c\u800c\u4e0d\u52a0\u65f6\u5219\u4f1a\u628a\u811a\u672c\u6240\u5728\u76ee\u5f55\u6dfb\u52a0\u5230 sys.path \u4e2d\u3002 2\u3001 \u52a0\u4e0a -m \u53c2\u6570\u65f6 Python \u4f1a\u5148\u5c06\u6a21\u5757\u6216\u8005\u5305\u5bfc\u5165\uff0c\u7136\u540e\u518d\u6267\u884c 3\u3001 main.py \u6587\u4ef6\u662f\u4e00\u4e2a\u5305\u6216\u8005\u76ee\u5f55\u7684\u5165\u53e3\u7a0b\u5e8f\u3002\u4e0d\u7ba1\u662f\u7528 python package \u8fd8\u662f\u7528 python -m package \u8fd0\u884c\u65f6\uff0cmain.py \u6587\u4ef6\u603b\u662f\u88ab\u6267\u884c\u3002 \u540e\u5e8f \u6211\u8bd5\u56fe\u4f7f\u7528\u957f\u7bc7\u5927\u8bba\u6765\u9610\u8ff0\uff0c\u5728 Python \u4e2d\u5982\u4f55\u7406\u89e3 if name == 'main' \u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u6211\u6709\u6ca1\u6709\u63cf\u8ff0\u5f97\u8db3\u591f\u7684\u660e\u767d\u3002Python \u7684\u786e\u662f\u7b80\u5355\u7684\uff0c\u4f18\u96c5\u7684\uff0c\u4f46\u4e5f\u6709\u5f88\u591a\u95ee\u9898\u662f\u4e0d\u592a\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u4f8b\u5982\u5f88\u591a\u9ad8\u7ea7\u7684\u7279\u6027\uff0c\u50cf\u5143\u7c7b\u3001\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u3001\u63cf\u8ff0\u7b26\u3001\u534f\u7a0b\u7b49\u3002Python \u5e76\u6ca1\u6709\u5728\u592a\u591a\u7684\u5730\u65b9\u89c4\u5b9a\u8981\u5982\u4f55\u5982\u4f55\uff0c\u5f88\u591a\u7684\u7528\u6cd5\u53ea\u662f\u60ef\u7528\u6cd5\uff0c\u4f8b\u5982 self \u548c\u672c\u6587\u8ba8\u8bba\u7684\u5185\u5bb9\u3002\u8fd9\u4e9b\u7528\u6cd5\u6216\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u4f18\u96c5\uff0c\u6216\u662f\u524d\u4eba\u7684\u7ecf\u9a8c\u3002\u4f7f\u7528 Python \u662f\u6709\u65e0\u9650\u53ef\u80fd\u7684\uff0c\u4f60\u53ef\u4ee5\u5199\u51fa\u5f88\u591a\u7b80\u6d01\u4f18\u96c5\u7684\u4ee3\u7801\u3002 \u4f5c\u8005\uff1aPython\u5c0f\u8001\u5f1f \u94fe\u63a5\uff1a https://www.jianshu.com/p/e6ce07704312 \u6765\u6e90\uff1a\u7b80\u4e66","title":"\u7a0b\u5e8f\u5165\u53e3"},{"location":"python\u5b66\u4e60/031python\u81ea\u6d4b100\u9898/","text":"\u4f5c\u8005\uff1a\u6211\u7231\u5b66python \u94fe\u63a5\uff1a https://www.jianshu.com/p/6d9e126df239 \u5982\u679c\u4f60\u5728\u5bfb\u627epython\u5de5\u4f5c\uff0c\u90a3\u4f60\u7684\u9762\u8bd5\u53ef\u80fd\u4f1a\u6d89\u53caPython\u76f8\u5173\u7684\u95ee\u9898\u3002 \u901a\u8fc7\u5bf9\u7f51\u7edc\u8d44\u6599\u7684\u6536\u96c6\u6574\u7406\uff0c\u672c\u6587\u5217\u51fa\u4e86100\u9053python\u7684\u9762\u8bd5\u9898\u4ee5\u53ca\u7b54\u6848\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u9605\u8bfb\u6d4b\u8bd5\u3002 python\u57fa\u7840 Q1.\u4ec0\u4e48\u662fPython\uff1f Python\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u4ea4\u4e92\u5f0f\u7684\uff0c\u89e3\u91ca\u578b\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002Python\u7684\u8bbe\u8ba1\u5177\u6709\u9ad8\u53ef\u8bfb\u6027\uff0c\u5b83\u4f7f\u7528\u82f1\u8bed\u5173\u952e\u8bcd\u800c\u975e\u6807\u70b9\u7b26\u53f7\uff0c\u8bed\u6cd5\u7ed3\u6784\u4e5f\u6bd4\u5176\u4ed6\u8bed\u8a00\u7b80\u5355\u3002 Q2.Python\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4ec0\u4e48\uff1f 1\uff09python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u56e0\u6b64\u5728\u4f7f\u7528python\u65f6\u4e0d\u9700\u8981\u8fdb\u884c\u7f16\u8bd1 2\uff09\u58f0\u660e\u53d8\u91cf\u548c\u7c7b\u4f3c\u53d8\u91cf\u65f6\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u58f0\u660e\u53d8\u91cf\u7684\u7c7b\u578b\uff1b 3\uff09Python\u975e\u5e38\u9002\u5408\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7c7b\u7684\u5b9a\u4e49\u4ee5\u53ca\u7ec4\u5408\u548c\u7ee7\u627f\uff1b 4\uff09\u51fd\u6570\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u5206\u914d\u7ed9\u53d8\u91cf\uff0c\u4ece\u5176\u4ed6\u51fd\u6570\u8fd4\u56de\u5e76\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u7c7b\u4e5f\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\uff1b 5\uff09\u7528\u4e8e\u8bb8\u591a\u9886\u57df\uff0c\u5305\u62ecWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u81ea\u52a8\u5316\uff0c\u79d1\u5b66\u5efa\u6a21\uff0c\u5927\u6570\u636e\u5e94\u7528\u7a0b\u5e8f\u7b49\u7b49\u3002 Q3.Python\u4e2d\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u6709\u54ea\u4e9b\uff1f Python\u652f\u63015\u79cd\u6570\u636e\u7c7b\u578b\uff1a 1\uff09Numbers\uff08\u6570\u5b57\uff09\u2014\u2014\u7528\u4e8e\u4fdd\u5b58\u6570\u503c\uff1b a=7.0 2\uff09Strings\uff08\u5b57\u7b26\u4e32\uff09\u2014\u2014\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\uff0c\u6211\u4eec\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u6765\u58f0\u660e\u5b57\u7b26\u4e32\uff1b title=\"Data123\" 3\uff09Lists\uff08\u5217\u8868\uff09\u2014\u2014\u5217\u8868\u5c31\u662f\u4e00\u4e9b\u503c\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u6211\u4eec\u7528\u65b9\u62ec\u53f7\u58f0\u660e\u5217\u8868\uff1b colors=['red','green','blue'] type(colors) 4\uff09tuples\uff08\u5143\u7ec4\uff09\u2014\u2014\u5143\u7ec4\u548c\u5217\u8868\u4e00\u6837\uff0c\u4e5f\u662f\u4e00\u4e9b\u503c\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u533a\u522b\u662f\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u610f\u5473\u7740\u6211\u4eec\u65e0\u6cd5\u6539\u53d8\u5143\u7ec4\u5185\u7684\u503c\u3002 (1,2,3,abc) 5\uff09Dictionary\uff08\u5b57\u5178\uff09\u2014\u2014\u5b57\u5178(dictionary)\u662f\u9664\u5217\u8868\u4ee5\u5916Python\u4e4b\u4e2d\u6700\u7075\u6d3b\u7684\u5185\u7f6e\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u3002 \u5217\u8868\u662f\u6709\u5e8f\u7684\u5bf9\u8c61\u7ed3\u5408\uff0c\u5b57\u5178\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\u3002 \u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff1a\u5b57\u5178\u5f53\u4e2d\u7684\u5143\u7d20\u662f\u901a\u8fc7\u952e\u6765\u5b58\u53d6\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u504f\u79fb\u5b58\u53d6\u3002 \u5b57\u5178\u7528\"{ }\"\u6807\u8bc6\u3002\u5b57\u5178\u7531\u7d22\u5f15(key)\u548c\u5b83\u5bf9\u5e94\u7684\u503cvalue\u7ec4\u6210\u3002 dict = {} dict['one'] = 'This is one' dict[2] = 'This is two' tinydict = {'name':'john','code':5762,'dept':'sales'} print(dict['one']) #\u8f93\u51fa\u952e\u4e3a'one'\u7684\u503c print(dict[2]) #\u8f93\u51fa\u952e\u4e3a2\u7684\u503c print(tinydict) #\u8f93\u51fa\u5b8c\u6574\u7684\u5b57\u5178 print(tinydict.keys()) #\u8f93\u51fa\u6240\u6709\u952e print(tinydict.values()) #\u8f93\u51fa\u6240\u6709\u503c Q4.\u5217\u8868\u548c\u5143\u7ec4\u6709\u4ec0\u4e48\u533a\u522b\uff1f Q5.\u4ec0\u4e48\u662fPython\u6a21\u5757\uff1f \u6a21\u5757\u662f\u4e00\u4e2aPython\u811a\u672c\uff0c\u901a\u5e38\u5305\u542bimport\u8bed\u53e5\uff0c\u51fd\u6570\uff0c\u7c7b\u548c\u53d8\u91cf\u5b9a\u4e49\uff0c\u4ee5\u53caPython\u53ef\u8fd0\u884c\u4ee3\u7801\uff0c\u6587\u4ef6\u7684\u6269\u5c55\u540d\u4e3a\u201c.py\u201d\u3002 Q6.python\u89e3\u91ca\u5668\u79cd\u7c7b\u4ee5\u53ca\u7279\u70b9\uff1f CPython\uff1a\u8fd9\u4e2a\u89e3\u91ca\u5668\u662f\u7528C\u8bed\u8a00\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u53eb CPython\uff0c\u5728\u547d\u540d\u884c\u4e0b\u8fd0\u884cpython\uff0c\u5c31\u662f\u542f\u52a8CPython\u89e3\u91ca\u5668\uff0cCPython\u662f\u4f7f\u7528\u6700\u5e7f\u7684Python\u89e3\u91ca\u5668\uff1b IPython\uff1aIPython\u662f\u57fa\u4e8eCPython\u4e4b\u4e0a\u7684\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cIPython\u53ea\u662f\u5728\u4ea4\u4e92\u65b9\u5f0f\u4e0a\u6709\u6240\u589e\u5f3a\uff1b PyPy\uff1aPyPy\u662f\u53e6\u4e00\u4e2aPython\u89e3\u91ca\u5668\uff0c\u5b83\u7684\u76ee\u6807\u662f\u6267\u884c\u901f\u5ea6\uff0cPyPy\u91c7\u7528JIT\u6280\u672f\uff0c\u5bf9Python\u4ee3\u8fdb\u884c\u52a8\u6001\u7f16\u8bd1\uff0c\u6240\u4ee5\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8Python\u4ee3\u7801\u7684\u6267\u884c\u901f\u5ea6\uff1b Jython\uff1aJython\u662f\u8fd0\u884c\u5728Java\u5e73\u53f0\u4e0a\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u628aPython\u4ee3\u7801\u7f16\u8bd1\u6210Java\u5b57\u8282\u7801\u6267\u884c\u3002 IronPython\uff1aIronPython\u548cJython\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7IronPython\u662f\u8fd0\u884c\u5728\u5fae\u8f6f.Net\u5e73\u53f0\u4e0a\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u628aPython\u4ee3\u7801\u7f16\u8bd1\u6210.Net\u7684\u5b57\u8282\u7801\u3002 Q7.\u4ec0\u4e48\u662fPython\u5207\u7247\uff1f Python\u4e2d\u7b26\u5408\u5e8f\u5217\u7684\u6709\u5e8f\u5e8f\u5217\u90fd\u652f\u6301\u5207\u7247(slice)\uff0c\u5982:\u5217\u8868,\u5b57\u7b26,\u5143\u7956 Python\u4e2d\u5207\u7247\u7684\u683c\u5f0f\uff1a[start : end : step] Start:\u8d77\u59cb\u7d22\u5f15,\u4ece0\u5f00\u59cb,-1\u8868\u793a\u7ed3\u675f\uff1bEnd:\u7ed3\u675f\u7d22\u5f15\uff1bStep:\u6b65\u957f end-start=\u6b63\u6570\u65f6,\u4ece\u5de6\u5411\u53f3\u53d6\u503c,=\u8d1f\u6570\u65f6\u53cd\u5411\u53d6\u503c \u6ce8\u610f:\u5207\u7247\u7ed3\u679c\u4e0d\u5305\u542b\u7ed3\u675f\u7d22\u5f15,\u5373\u4e0d\u5305\u542b\u6700\u540e\u4e00\u4f4d,-1\u4ee3\u8868\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7d22\u5f15 str1 = 'abcdefghijklmnopqrstuvwxyz' str1[2:6] 'cdef' Q8.Python\u4e2d\u7684\uff05S\u662f\u4ec0\u4e48\uff1f Python\u652f\u6301\u5c06\u503c\u683c\u5f0f\u5316\u4e3a\u5b57\u7b26\u4e32\u3002\u867d\u7136\u8fd9\u53ef\u4ee5\u5305\u62ec\u975e\u5e38\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u6700\u57fa\u672c\u7684\u7528\u6cd5\u662f\u5c06\u503c\u63d2\u5165\u5230%s \u5360\u4f4d\u7b26\u7684\u5b57\u7b26\u4e32\u4e2d \u3002 name = raw_input(\"who are you?\") print \"hello %s\" % (name,) Q9.Python\u7f16\u7a0b\u4e2d\u7684\u51fd\u6570\u662f\u4ec0\u4e48\uff1f \u51fd\u6570\u662f\u8868\u793a\u4ee3\u7801\u5757\u5e76\u4e14\u662f\u53ef\u91cd\u7528\u5b9e\u4f53\u7684\u5bf9\u8c61\u3002 \u5b83\u4e3a\u7a0b\u5e8f\u5e26\u6765\u4e86\u6a21\u5757\u5316\uff0c\u5e76\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7a0b\u5ea6\u7684\u4ee3\u7801\u53ef\u91cd\u7528\u6027\u3002 Python\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u4f8b\u5982print\uff08\uff09\u7b49\uff0c\u5e76\u63d0\u4f9b\u4e86\u521b\u5efa\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u80fd\u529b\u3002 Q10.Python\u4e2d\u6709\u591a\u5c11\u57fa\u672c\u7c7b\u578b\u7684\u51fd\u6570\u53ef\u7528\uff1f Python\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u79cd\u57fa\u672c\u7c7b\u578b\u7684\u51fd\u6570\uff1a\u5185\u7f6e\u548c\u7528\u6237\u5b9a\u4e49\u3002 \u5185\u7f6e\u51fd\u6570\u662fPython\u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982print\uff08\uff09\uff0cdir\uff08\uff09\uff0clen\uff08\uff09\u548cabs\uff08\uff09\u7b49\u3002 Q11.\u6211\u4eec\u5982\u4f55\u7528Python\u7f16\u5199\u51fd\u6570\uff1f \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u521b\u5efaPython\u51fd\u6570\u3002 1\uff09\u7528def\u5b9a\u4e49\u51fd\u6570\u5e76\u94fe\u63a5\u529f\u80fd\u540d\u79f0\uff1b 2\uff09\u4f20\u9012\u53c2\u6570\u5e76\u4f7f\u7528\u62ec\u53f7\u5c06\u5b83\u4eec\u62ec\u8d77\u6765\uff0c\u4f7f\u7528\u5192\u53f7\u6765\u8868\u793a\u7ed3\u5c3e\uff1b 3\uff09\u6dfb\u52a0\u6240\u9700\u7684Python\u8bed\u53e5\u4ee5\u4f9b\u6267\u884c\u3002 Q12.\u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u6df1\u62f7\u8d1d\u5c31\u662f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u62f7\u8d1d\u505a\u51fa\u6539\u53d8\u65f6\uff0c\u4e0d\u4f1a\u5f71\u54cd\u539f\u5bf9\u8c61\u3002 \u5728Python\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u51fd\u6570deepcopy()\u6267\u884c\u6df1\u62f7\u8d1d\uff0c\u5bfc\u5165\u6a21\u5757copy\uff0c\u5982\u4e0b\u6240\u793a\uff1a import copy b=copy.deepcopy(a) \u800c\u6d45\u62f7\u8d1d\u5219\u662f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e0a\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5728\u62f7\u8d1d\u4e2d\u6539\u52a8\uff0c\u4f1a\u5f71\u54cd\u5230\u539f\u5bf9\u8c61\u3002\u6211\u4eec\u4f7f\u7528\u51fd\u6570function()\u6267\u884c\u6d45\u62f7\u8d1d\uff0c\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a b=copy.copy(a) Q13.Python\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u6216\u53ef\u8c03\u7528\u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f Python\u4e2d\u7684\u51fd\u6570\u88ab\u89c6\u4e3a\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5b83\u53ef\u4ee5\u5141\u8bb8\u4e00\u4e9b\u53c2\u6570\uff0c\u5e76\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u503c\u6216\u591a\u4e2a\u503c\u3002\u9664\u4e86\u51fd\u6570\u4e4b\u5916\uff0cPython\u8fd8\u6709\u5176\u4ed6\u6784\u9020\uff0c\u4f8b\u5982\u7c7b\u6216\u9002\u5408\u540c\u4e00\u7c7b\u522b\u7684\u7c7b\u5b9e\u4f8b\u3002 Q14.Python\u4e2dPass\u548cContinue\u6709\u4ec0\u4e48\u533a\u522b\uff1f continue\u8bed\u53e5\u4f7f\u5faa\u73af\u4ece\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u6062\u590d\u3002pass\u8bed\u53e5\u6307\u793a\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206\u50cf\u5f80\u5e38\u4e00\u6837\u6267\u884c\u3002 Q15. PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f PYTHONPATH - \u5b83\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8ePATH\u3002\u6b64\u53d8\u91cf\u544a\u8bc9Python\u89e3\u91ca\u5668\u5728\u4f55\u5904\u627e\u5230\u5bfc\u5165\u7a0b\u5e8f\u7684\u6a21\u5757\u6587\u4ef6\u3002\u5b83\u5e94\u8be5\u5305\u62ecPython\u6e90\u5e93\u76ee\u5f55\u548c\u5305\u542bPython\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u3002PYTHONPATH\u6709\u65f6\u7531Python\u5b89\u88c5\u7a0b\u5e8f\u9884\u8bbe\u3002 Q16.**PYTHONSTARTUP\uff0cPYTHONCASEOK\uff0cPYTHONHOME\uff0cPYTHONSTARTUP**\u73af\u5883\u53d8\u91cf\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f PYTHONSTARTUP - \u5b83\u5305\u542b\u4e00\u4e2a\u5305\u542bPython\u6e90\u4ee3\u7801\u7684\u521d\u59cb\u5316\u6587\u4ef6\u7684\u8def\u5f84\u3002\u6bcf\u6b21\u542f\u52a8\u89e3\u91ca\u5668\u65f6\u90fd\u4f1a\u6267\u884c\u5b83\u3002\u5b83\u5728Unix\u4e2d\u547d\u540d\u4e3a.pythonrc.py\uff0c\u5b83\u5305\u542b\u52a0\u8f7d\u5b9e\u7528\u7a0b\u5e8f\u6216\u4fee\u6539PYTHONPATH\u7684\u547d\u4ee4\u3002 PYTHONCASEOK - \u5728Windows\u4e2d\u7528\u4e8e\u6307\u793aPython\u5728import\u8bed\u53e5\u4e2d\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\u9879\u3002\u5c06\u6b64\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u503c\u4ee5\u6fc0\u6d3b\u5b83\u3002 PYTHONHOME - \u5b83\u662f\u53e6\u4e00\u79cd\u6a21\u5757\u641c\u7d22\u8def\u5f84\u3002\u5b83\u901a\u5e38\u5d4c\u5165\u5728PYTHONSTARTUP\u6216PYTHONPATH\u76ee\u5f55\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u5207\u6362\u6a21\u5757\u5e93\u3002 Q17.\u5982\u4f55\u5728Python\u4e2d\u5b9e\u73b0\u591a\u7ebf\u7a0b\uff1f python\u4e3b\u8981\u662f\u901a\u8fc7thread\u548cthreading\u8fd9\u4e24\u4e2a\u6a21\u5757\u6765\u5b9e\u73b0\u591a\u7ebf\u7a0b\u652f\u6301\u3002 python\u7684thread\u6a21\u5757\u662f\u6bd4\u8f83\u5e95\u5c42\u7684\u6a21\u5757\uff0cpython\u7684threading\u6a21\u5757\u662f\u5bf9thread\u505a\u4e86\u4e00\u4e9b\u5c01\u88c5\uff0c\u53ef\u4ee5\u66f4\u52a0\u65b9\u4fbf\u7684\u88ab\u4f7f\u7528\u3002\u4f46\u662fpython\uff08cpython\uff09\u7531\u4e8eGIL\u7684\u5b58\u5728\u65e0\u6cd5\u4f7f\u7528threading\u5145\u5206\u5229\u7528CPU\u8d44\u6e90\uff0c\u5982\u679c\u60f3\u5145\u5206\u53d1\u6325\u591a\u6838CPU\u7684\u8ba1\u7b97\u80fd\u529b\u9700\u8981\u4f7f\u7528multiprocessing\u6a21\u5757(Windows\u4e0b\u4f7f\u7528\u4f1a\u6709\u8bf8\u591a\u95ee\u9898)\u3002 python3.x\u4e2d\u5df2\u7ecf\u6452\u5f03\u4e86Python2.x\u4e2d\u91c7\u7528\u51fd\u6570\u5f0fthread\u6a21\u5757\u4e2d\u7684start_new_thread()\u51fd\u6570\u6765\u4ea7\u751f\u65b0\u7ebf\u7a0b\u65b9\u5f0f\u3002python3.x\u4e2d\u901a\u8fc7threading\u6a21\u5757\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a 1\uff09\u901a\u8fc7threading.Thread(Target=executable Method)-\u5373\u4f20\u9012\u7ed9Thread\u5bf9\u8c61\u4e00\u4e2a\u53ef\u6267\u884c\u65b9\u6cd5\uff08\u6216\u5bf9\u8c61\uff09 2\uff09\u7ee7\u627fthreading.Thread\u5b9a\u4e49\u5b50\u7c7b\u5e76\u91cd\u5199run()\u65b9\u6cd5\u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e2d\uff0c\u552f\u4e00\u5fc5\u987b\u91cd\u5199\u7684\u65b9\u6cd5\u662frun()\u3002 Q18.\u5982\u4f55\u5728python\u4e2d\u4f7f\u7528\u4e09\u5143\u8fd0\u7b97\u7b26\uff1f Ternary\u8fd0\u7b97\u7b26\u662f\u7528\u4e8e\u663e\u793a\u6761\u4ef6\u8bed\u53e5\u7684\u8fd0\u7b97\u7b26\u3002\u8fd9\u5305\u542btrue\u6216false\u503c\uff0c\u5e76\u4e14\u5fc5\u987b\u4e3a\u5176\u8bc4\u4f30\u8bed\u53e5\u3002 \u4e09\u5143\u8fd0\u7b97\u7b26\u5c06\u88ab\u7ed9\u51fa\u4e3a\uff1a [on_true] if [expression] else [on_false] x\uff0cy = 25,50big =x if x <y else y \u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0ex <y else y\u4e00\u6837\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679cx <y\u4e3a\u771f\uff0c\u5219\u8fd4\u56de\u503c\u4e3abig = x\uff0c\u5982\u679c\u4e0d\u6b63\u786e\u5219\u8fd4\u56debig = y\u4f5c\u4e3a\u7ed3\u679c\u3002 Q19.\u4ec0\u4e48\u662fTkinter \uff1f TKinter\u662f\u4e00\u6b3e\u5f88\u77e5\u540d\u7684Python\u5e93\uff0c\u7528\u5b83\u6211\u4eec\u53ef\u4ee5\u5236\u4f5c\u56fe\u5f62\u7528\u6237\u754c\u9762\u3002\u5176\u652f\u6301\u4e0d\u540c\u7684GUI\u5de5\u5177\u548c\u7a97\u53e3\u6784\u4ef6\uff0c\u6bd4\u5982\u6309\u94ae\u3001\u6807\u7b7e\u3001\u6587\u672c\u6846\u7b49\u7b49\u3002\u8fd9\u4e9b\u5de5\u5177\u548c\u6784\u4ef6\u5747\u6709\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u7ef4\u5ea6\u3001\u989c\u8272\u3001\u5b57\u4f53\u7b49\u3002 Q20.Python\u4e2d\u7684\u7ee7\u627f \u7ee7\u627f\u5141\u8bb8\u4e00\u4e2a\u7c7b\u83b7\u5f97\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u6210\u5458\uff08\u6bd4\u5982\u5c5e\u6027\u548c\u65b9\u6cd5\uff09\u3002\u7ee7\u627f\u63d0\u4f9b\u4ee3\u7801\u53ef\u91cd\u7528\u6027\uff0c\u4f7f\u521b\u5efa\u548c\u7ef4\u62a4\u5e94\u7528\u7a0b\u5e8f\u66f4\u5bb9\u6613\u3002 Python\u652f\u6301\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u7ee7\u627f\uff1a 1\uff09\u5355\u4e00\u7ee7\u627f - \u6d3e\u751f\u7c7b\u83b7\u53d6\u5355\u4e2a\u8d85\u7c7b\u7684\u6210\u5458\uff1b 2\uff09\u591a\u7ea7\u7ee7\u627f - \u4ece\u57fa\u7c7bbase1\u7ee7\u627f\u7684\u6d3e\u751f\u7c7bd1\uff0cd2\u7ee7\u627f\u81eabase2\uff1b 3\uff09\u5206\u5c42\u7ee7\u627f - \u4ece\u4e00\u4e2a\u57fa\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4efb\u610f\u6570\u91cf\u7684\u5b50\u7c7b\uff1b 4\uff09\u591a\u91cd\u7ee7\u627f - \u6d3e\u751f\u7c7b\u4ece\u591a\u4e2a\u57fa\u7c7b\u7ee7\u627f\u3002 Q21.\u8bf7\u8c08\u8c08.pyc\u6587\u4ef6\u548c.py\u6587\u4ef6\u7684\u4e0d\u540c\u4e4b\u5904 \u867d\u7136\u8fd9\u4e24\u79cd\u6587\u4ef6\u5747\u4fdd\u5b58\u5b57\u8282\u4ee3\u7801\uff0c\u4f46.pyc\u6587\u4ef6\u662fPython\u6587\u4ef6\u7684\u7f16\u8bd1\u7248\u672c\uff0c\u5b83\u6709\u5e73\u53f0\u65e0\u5173\u7684\u5b57\u8282\u4ee3\u7801\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301.pyc\u683c\u5f0f\u6587\u4ef6\u7684\u5e73\u53f0\u4e0a\u6267\u884c\u5b83\u3002 Q22.\u4ec0\u4e48\u662f\u9178\u6d17\u548c\u53bb\u9664\uff1f Pickle\u6a21\u5757\u63a5\u53d7\u4efb\u4f55Python\u5bf9\u8c61\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\uff0c\u5e76\u4f7f\u7528dump\u51fd\u6570\u5c06\u5176\u8f6c\u50a8\u5230\u6587\u4ef6\u4e2d\uff0c\u6b64\u8fc7\u7a0b\u79f0\u4e3apickling\u3002\u4ece\u5b58\u50a8\u7684\u5b57\u7b26\u4e32\u8868\u793a\u4e2d\u68c0\u7d22\u539f\u59cbPython\u5bf9\u8c61\u7684\u8fc7\u7a0b\u79f0\u4e3aunpickling\u3002 Q23.\u5728Python\u4e2d\u547d\u540d\u4e0e\u6587\u4ef6\u76f8\u5173\u7684\u6a21\u5757\uff1f Python\u4e3a\u5e93/\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e9b\u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u64cd\u4f5c\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4f7f\u7528\u5b83\u4eec\u5b8c\u6210\u521b\u5efa\u6587\u4ef6\uff0c\u66f4\u65b0\u5185\u5bb9\uff0c\u590d\u5236\u548c\u5220\u9664\u6587\u4ef6\u7684\u64cd\u4f5c\u3002\u8fd9\u4e9b\u5e93\u662f\uff1aos\uff0cos.path\u548cshutil\u3002 Q24.\u89e3\u91ca\u4f7f\u7528with\u58f0\u660e\uff1f \u5728python\u4e2d\uff0c\u901a\u5e38\u201cwith\u201d\u8bed\u53e5\u7528\u4e8e\u6253\u5f00\u6587\u4ef6\uff0c\u5904\u7406\u6587\u4ef6\u4e2d\u5b58\u5728\u7684\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5728\u4e0d\u8c03\u7528close\uff08\uff09\u65b9\u6cd5\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\u6587\u4ef6\u3002 Q25.\u89e3\u91caPython\u652f\u6301\u7684\u6240\u6709\u6587\u4ef6\u5904\u7406\u6a21\u5f0f\uff1f Python\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u79cd\u65b9\u6cd5\u6253\u5f00\u6587\u4ef6\u3002\u4ed6\u4eec\u662f\uff1a 1)\u901a\u8fc7\u5206\u522b\u6307\u5b9a\u6807\u5fd7\u201cr\u201d\uff0c\u201cw\u201d\uff0c\u201crw\u201d\uff0c\u201ca\u201d\uff0c\u53ea\u8bfb\u6a21\u5f0f\uff0c\u53ea\u5199\u6a21\u5f0f\uff0c\u8bfb\u5199\u6a21\u5f0f\u548c\u9644\u52a0\u6a21\u5f0f; 2)\u901a\u8fc7\u6307\u5b9a\u9009\u9879\u201ct\u201d\uff0c\u53ef\u4ee5\u5728\u4e0a\u8ff0\u4efb\u4f55\u4e00\u79cd\u6a21\u5f0f\u4e2d\u6253\u5f00\u6587\u672c\u6587\u4ef6; 3)\u201cr\u201d\uff0c\u201cw\u201d\uff0c\u201crw\u201d\u548c\u201ca\u201d\uff0c\u4ee5\u4fbf\u524d\u9762\u7684\u6a21\u5f0f\u53d8\u4e3a\u201crt\u201d\uff0c\u201cwt\u201d\uff0c\u201crwt\u201d\u548c\u201cat\u201d\u3002\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u4e2d\u6253\u5f00\u4e0a\u8ff0\u6a21\u5f0f\u901a\u8fc7\u6307\u5b9a\u9009\u9879\u201cb\u201d\u4ee5\u53ca\u201cr\u201d\uff0c\u201cw\u201d\uff0c\u201crw\u201d\u548c\u201ca\u201d\u4f7f\u5f97\u524d\u9762\u7684\u6a21\u5f0f\u4e3a\u201crb\u201d\uff0c\u201cwb\u201d\uff0c\u201crwb\u201d\uff0c\u201cab\u201d\u3002 Q26. Python\u652f\u6301\u591a\u5c11\u79cd\u5e8f\u5217\uff1f Python\u652f\u63017\u79cd\u5e8f\u5217\u7c7b\u578b\u3002\u5b83\u4eec\u662fstr\uff0clist\uff0ctuple\uff0cunicode\uff0cbyte array\uff0cxrange\u548cbuffer\u3002\u5176\u4e2dxrange\u5728python 3.5.X\u4e2d\u5df2\u5f03\u7528\u3002 Q27.\u5982\u4f55\u5728Python\u4e2d\u6267\u884c\u6a21\u5f0f\u5339\u914d\uff1f \u6b63\u5219\u8868\u8fbe\u5f0f\uff08RE\uff09\u4f7f\u6211\u4eec\u80fd\u591f\u6307\u5b9a\u5339\u914d\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u7279\u5b9a\u201c\u90e8\u5206\u201d\u7684\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u5355\u4e2a\u5b57\u7b26\u6216\u6570\u5b57\uff0c\u7535\u8bdd\u53f7\u7801\u6216\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7b49.Python\u7684\u201cre\u201d\u6a21\u5757\u63d0\u4f9b\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\uff0c\u5e76\u4ecePython 2.5\u7684\u66f4\u9ad8\u7248\u672c\u4e2d\u5f15\u5165\u3002\u201cre\u201d\u6a21\u5757\u63d0\u4f9b\u641c\u7d22\u6587\u672c\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u66ff\u6362\u6587\u672c\u5b57\u7b26\u4e32\u4ee5\u53ca\u57fa\u4e8e\u5b9a\u4e49\u7684\u6a21\u5f0f\u62c6\u5206\u6587\u672c\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u3002 Q28.Python\u5982\u4f55\u5904\u7406\u5185\u5b58\u7ba1\u7406\uff1f Python\u5185\u5b58\u7531Python\u79c1\u6709\u5806\u7a7a\u95f4\u7ba1\u7406\u3002\u6240\u6709Python\u5bf9\u8c61\u548c\u6570\u636e\u7ed3\u6784\u90fd\u4f4d\u4e8e\u79c1\u6709\u5806\u4e2d\u3002\u7a0b\u5e8f\u5458\u65e0\u6743\u8bbf\u95ee\u6b64\u79c1\u6709\u5806\uff0c\u89e3\u91ca\u5668\u8d1f\u8d23\u5904\u7406\u6b64\u79c1\u6709\u5806\u3002Python\u5bf9\u8c61\u7684Python\u5806\u7a7a\u95f4\u5206\u914d\u7531Python\u5185\u5b58\u7ba1\u7406\u5668\u5b8c\u6210\u3002\u6838\u5fc3API\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7a0b\u5e8f\u5458\u7f16\u5199\u4ee3\u7801\u7684\u5de5\u5177\u3002Python\u8fd8\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u5783\u573e\u6536\u96c6\u5668\uff0c\u5b83\u53ef\u4ee5\u56de\u6536\u6240\u6709\u672a\u4f7f\u7528\u7684\u5185\u5b58\u5e76\u91ca\u653e\u5185\u5b58\u5e76\u4f7f\u5176\u53ef\u7528\u4e8e\u5806\u7a7a\u95f4\u3002 Q29.\u5982\u4f55\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u663e\u793a\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff1f 1)\u5c06\u7ed9\u5b9a\u6587\u4ef6\u8f6c\u6362\u4e3a\u5217\u8868 2)\u4f7f\u7528reverse\uff08\uff09\u53cd\u8f6c\u5217\u8868\u4f8b\u5982\uff1a for reverse in reverse\uff08list\uff08open\uff08\u201cfile-name\u201d\uff0c\u201cr\u201d\uff09\uff09\uff09\uff1a print\uff08\uff09 Q30.\u4ec0\u4e48\u662f\u8d1f\u7d22\u5f15 Python\u5e8f\u5217\u53ef\u4ee5\u662f\u6b63\u6570\u548c\u8d1f\u6570\u7684\u7d22\u5f15\u3002\u5bf9\u4e8e\u6b63\u7d22\u5f15\uff0c0\u662f\u7b2c\u4e00\u4e2a\u7d22\u5f15\uff0c1\u662f\u7b2c\u4e8c\u4e2a\u7d22\u5f15\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5bf9\u4e8e\u8d1f\u7d22\u5f15\uff0c\uff08 - 1\uff09\u662f\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\uff0c\uff08 - 2\uff09\u662f\u5012\u6570\u7b2c\u4e8c\u4e2a\u7d22\u5f15\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 Q31.\u89e3\u91caPython\u4e2d\u201cre\u201d\u6a21\u5757\u7684split\uff08\uff09\uff0csub\uff08\uff09\uff0csubn\uff08\uff09\u65b9\u6cd5\u3002 \u4e3a\u4e86\u4fee\u6539\u5b57\u7b26\u4e32\uff0cPython\u7684\u201cre\u201d\u6a21\u5757\u63d0\u4f9b\u4e863\u79cd\u65b9\u6cd5\u3002 1\uff09split\uff08\uff09 - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u5c06\u7ed9\u5b9a\u5b57\u7b26\u4e32\u201c\u62c6\u5206\u201d\u5230\u5217\u8868\u4e2d\uff1b 2\uff09sub\uff08\uff09 - \u67e5\u627e\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u5339\u914d\u7684\u6240\u6709\u5b50\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u5b83\u4eec\uff1b 3\uff09subn\uff08\uff09 - \u5b83\u7c7b\u4f3c\u4e8esub\uff08\uff09\uff0c\u5e76\u4e14\u8fd8\u8fd4\u56de\u65b0\u5b57\u7b26\u4e32\u548cno\u3002\u66ff\u6362\u3002 Q32.\u89e3\u91caPython Flask\u4e2d\u7684\u6570\u636e\u5e93\u8fde\u63a5 Flask\u652f\u6301\u6570\u636e\u5e93\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff08RDBS\uff09\u3002Flask\u5141\u8bb8\u4ee5\u4e09\u79cd\u65b9\u5f0f\u8bf7\u6c42\u6570\u636e\u5e93 1)before_request\uff08\uff09\uff1a\u5728\u8bf7\u6c42\u4e4b\u524d\u8c03\u7528\u5b83\u4eec\u5e76\u4e14\u4e0d\u4f20\u9012\u4efb\u4f55\u53c2\u6570 2)after_request\uff08\uff09\uff1a\u5728\u8bf7\u6c42\u540e\u8c03\u7528\u5b83\u4eec\u5e76\u4f20\u9012\u5c06\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u7684\u54cd\u5e94 3)teardown_request\uff08\uff09\uff1a\u5728\u5f15\u53d1\u5f02\u5e38\u65f6\u8c03\u7528\u5b83\u4eec\uff0c\u5e76\u4e14\u4e0d\u4fdd\u8bc1\u54cd\u5e94\u3002\u5b83\u4eec\u5728\u54cd\u5e94\u6784\u5efa\u540e\u88ab\u8c03\u7528\u3002\u4e0d\u5141\u8bb8\u4ed6\u4eec\u4fee\u6539\u8bf7\u6c42\uff0c\u5e76\u5ffd\u7565\u5b83\u4eec\u7684\u503c\u3002 Q33. range\u548cxrange\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cxrange\u548crange\u5728\u529f\u80fd\u65b9\u9762\u5b8c\u5168\u76f8\u540c\uff0c\u5b83\u4eec\u90fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u751f\u6210\u6574\u6570\u5217\u8868\u7684\u65b9\u6cd5\u3002\u552f\u4e00\u7684\u533a\u522b\u662frange\u8fd4\u56de\u4e00\u4e2aPython\u5217\u8868\u5bf9\u8c61\uff0cx range\u8fd4\u56de\u4e00\u4e2axrange\u5bf9\u8c61\u3002 Q34.Python\u4e2d\u7684\u201c\u6309\u503c\u8c03\u7528\u201d\u662f\u4ec0\u4e48\uff1f \u5728call-by-value\u4e2d\uff0c\u8868\u8fbe\u5f0f\u6216\u503c\u662f\u5426\u7ed1\u5b9a\u5230\u51fd\u6570\u4e2d\u7684\u76f8\u5e94\u53d8\u91cf\u7684\u53c2\u6570\u3002Python\u4f1a\u5c06\u8be5\u53d8\u91cf\u89c6\u4e3a\u51fd\u6570\u7ea7\u8303\u56f4\u4e2d\u7684\u672c\u5730\u53d8\u91cf\u3002\u5bf9\u8be5\u53d8\u91cf\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u4fdd\u7559\u5728\u672c\u5730\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53cd\u6620\u5728\u8be5\u51fd\u6570\u4e4b\u5916\u3002 Q35.\u4ec0\u4e48\u662fPython\u4e2d\u7684\u201c\u6309\u5f15\u7528\u8c03\u7528\u201d\uff1f \u6211\u4eec\u53ef\u4ee5\u4e92\u6362\u5730\u4f7f\u7528\u201c\u5f15\u7528\u8c03\u7528\u201d\u548c\u201c\u5f15\u7528\u4f20\u9012\u201d\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u9690\u5f0f\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u526f\u672c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u53c2\u6570\u7684\u4efb\u4f55\u4fee\u6539\u4e5f\u5c06\u5bf9\u8c03\u7528\u8005\u53ef\u89c1\u3002 \u8be5\u65b9\u6848\u8fd8\u5177\u6709\u5e26\u6765\u66f4\u591a\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387\u7684\u4f18\u70b9\uff0c\u56e0\u4e3a\u5b83\u7559\u4e0b\u4e86\u521b\u5efa\u672c\u5730\u526f\u672c\u7684\u9700\u8981\u3002\u76f8\u53cd\uff0c\u7f3a\u70b9\u53ef\u80fd\u662f\u51fd\u6570\u8c03\u7528\u671f\u95f4\u53d8\u91cf\u53ef\u80fd\u4f1a\u610f\u5916\u66f4\u6539\u3002 Q36.Lambda\u548cDef\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u662f\u4ec0\u4e48\uff1f \u5f53lambda\u662funi-expression\u51fd\u6570\u65f6\uff0cDef\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u8868\u8fbe\u5f0f\u3002Def\u751f\u6210\u4e00\u4e2a\u51fd\u6570\u5e76\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\u4ee5\u4fbf\u7a0d\u540e\u8c03\u7528\u5b83\u3002Lambda\u5f62\u6210\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u5e76\u8fd4\u56de\u3002Def\u53ef\u4ee5\u6709\u4e00\u4e2areturn\u8bed\u53e5\u3002Lambda\u4e0d\u80fd\u6709return\u8bed\u53e5\u3002Lambda\u652f\u6301\u5728\u5217\u8868\u548c\u5b57\u5178\u4e2d\u4f7f\u7528\u3002 Q37.ascii\u3001unicode\u3001utf-8\u3001gbk \u533a\u522b\uff1f ASCII\u7801\uff1a\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282\u7f16\u7801\uff0c\u6240\u4ee5\u5b83\u7684\u8303\u56f4\u57fa\u672c\u662f\u53ea\u6709\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e00\u4e9b\u7279\u6b8a\u7b26\u53f7 \uff0c\u53ea\u6709256\u4e2a\u5b57\u7b26; Unicode\uff1a\u80fd\u591f\u8868\u793a\u5168\u4e16\u754c\u6240\u6709\u7684\u5b57\u8282; GBK\uff1a\u662f\u53ea\u7528\u6765\u7f16\u7801\u6c49\u5b57\u7684\uff0cGBK\u5168\u79f0\u300a\u6c49\u5b57\u5185\u7801\u6269\u5c55\u89c4\u8303\u300b\uff0c\u4f7f\u7528\u53cc\u5b57\u8282\u7f16\u7801; UTF-8\uff1a\u662f\u4e00\u79cd\u9488\u5bf9Unicode\u7684\u53ef\u53d8\u957f\u5ea6\u5b57\u7b26\u7f16\u7801\uff0c\u53c8\u79f0\u4e07\u56fd\u7801\u3002 Q38.\u6bcf\u5f53Python\u9000\u51fa\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662f\u6240\u6709\u7684\u5185\u5b58\u90fd\u88ab\u89e3\u9664\u5206\u914d\uff1f \u6bcf\u5f53python\u9000\u51fa\u65f6\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u5bf9\u5176\u4ed6\u5bf9\u8c61\u5177\u6709\u5faa\u73af\u5f15\u7528\u7684Python\u6a21\u5757\u6216\u8005\u4ece\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\u5f15\u7528\u7684\u5bf9\u8c61\u5e76\u4e0d\u603b\u662f\u88ab\u89e3\u9664\u5206\u914d\u6216\u91ca\u653e\u3002\u7531\u4e8epython\u62e5\u6709\u81ea\u5df1\u7684\u9ad8\u6548\u6e05\u7406\u673a\u5236\uff0c\u65e0\u6cd5\u89e3\u9664\u5206\u914d\u4fdd\u7559\u7684\u90a3\u4e9b\u5185\u5b58\u90e8\u5206\u4f1a\u5728\u9000\u51fa\u65f6\u5c1d\u8bd5\u53d6\u6d88\u5206\u914d/\u9500\u6bc1\u5176\u4ed6\u6240\u6709\u5bf9\u8c61\u3002 Q 39.\u89e3\u91caPython\u7684\u53c2\u6570\u4f20\u9012\u673a\u5236 Python\u4f7f\u7528\u6309\u5f15\u7528\u4f20\u9012\uff08pass-by-reference\uff09\u5c06\u53c2\u6570\u4f20\u9012\u5230\u51fd\u6570\u4e2d\u3002\u5982\u679c\u4f60\u6539\u53d8\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u53c2\u6570\uff0c\u4f1a\u5f71\u54cd\u5230\u51fd\u6570\u7684\u8c03\u7528\u3002\u8fd9\u662fPython\u7684\u9ed8\u8ba4\u64cd\u4f5c\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u6211\u4eec\u4f20\u9012\u5b57\u9762\u53c2\u6570\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u6216\u5143\u7ec4\uff0c\u5b83\u4eec\u662f\u6309\u503c\u4f20\u9012\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u53ef\u53d8\u7684\u3002 Q40.\u4ec0\u4e48\u662f\u7334\u5b50\u8865\u4e01\uff1f \u5728\u8fd0\u884c\u671f\u95f4\u52a8\u6001\u4fee\u6539\u4e00\u4e2a\u7c7b\u6216\u6a21\u5757\u3002 class A: def func(self): print(\"Hi\") def monkey(self): print \"Hi, monkey\" m.A.func = monkey a = m.A() a.func() Hi, Monkey Q41.\u5927\u6570\u636e\u7684\u6587\u4ef6\u8bfb\u53d6 1\uff09\u5229\u7528\u751f\u6210\u5668generator 2\uff09\u8fed\u4ee3\u5668\u8fdb\u884c\u8fed\u4ee3\u904d\u5386\uff1afor line in file Q42.find\u548cgrep grep\u547d\u4ee4\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177\uff0cgrep\u641c\u7d22\u5185\u5bb9\u4e32\u53ef\u4ee5\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5141\u8bb8\u5bf9\u6587\u672c\u6587\u4ef6\u8fdb\u884c\u6a21\u5f0f\u67e5\u627e\u3002\u5982\u679c\u627e\u5230\u5339\u914d\u6a21\u5f0f\uff0cgrep\u6253\u5370\u5305\u542b\u6a21\u5f0f\u7684\u6240\u6709\u884c\u3002find\u901a\u5e38\u7528\u6765\u518d\u7279\u5b9a\u7684\u76ee\u5f55\u4e0b\u641c\u7d22\u7b26\u5408\u6761\u4ef6\u7684\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u641c\u7d22\u7279\u5b9a\u7528\u6237\u5c5e\u4e3b\u7684\u6587\u4ef6\u3002 Q43.\u7ebf\u4e0a\u670d\u52a1\u53ef\u80fd\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u5bfc\u81f4\u6302\u6389\u600e\u4e48\u529e\uff1f linux\u4e0b\u7684\u540e\u53f0\u8fdb\u7a0b\u7ba1\u7406\u5229\u5668 supervisor \u6bcf\u6b21\u6587\u4ef6\u4fee\u6539\u540e\u518dlinux\u6267\u884c service supervisord restart Q44.\u5982\u4f55\u63d0\u9ad8python\u7684\u8fd0\u884c\u6548\u7387 \u4f7f\u7528\u751f\u6210\u5668\uff1b\u5173\u952e\u4ee3\u7801\u4f7f\u7528\u5916\u90e8\u529f\u80fd\u5305\uff08Cython\uff0cpylnlne\uff0cpypy\uff0cpyrex\uff09\uff1b\u9488\u5bf9\u5faa\u73af\u7684\u4f18\u5316--\u5c3d\u91cf\u907f\u514d\u5728\u5faa\u73af\u4e2d\u8bbf\u95ee\u53d8\u91cf\u7684\u5c5e\u6027 Q45.\u5e38\u7528Linux\u547d\u4ee4 ls,help,cd,more,clear,mkdir,pwd,rm,grep,find,mv,su,date Q46.Python\u4e2d\u7684yield\u7528\u6cd5 yield\u7b80\u5355\u8bf4\u6765\u5c31\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u8fd9\u6837\u51fd\u6570\u5b83\u8bb0\u4f4f\u4e0a\u6b21\u8fd4 \u56de\u65f6\u5728\u51fd\u6570\u4f53\u4e2d\u7684\u4f4d\u7f6e\u3002\u5bf9\u751f\u6210\u5668\u7b2c \u4e8c\u6b21\uff08\u6216n \u6b21\uff09\u8c03\u7528\u8df3\u8f6c\u81f3\u8be5\u51fd \u6b21\uff09\u8c03\u7528\u8df3\u8f6c\u81f3\u8be5\u51fd\u6570\u3002 Q47.\u63cf\u8ff0\u6570\u7ec4\u3001\u94fe\u8868\u3001\u961f\u5217\u3001\u5806\u6808\u7684\u533a\u522b\uff1f \u6570\u7ec4\u4e0e\u94fe\u8868\u662f\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u7684\u6982\u5ff5\uff0c\u6570\u7ec4\u5728\u8fde\u7eed\u7684\u7a7a\u95f4\u4e2d\u5b58\u50a8\u6570\u636e\uff0c\u800c\u94fe\u8868\u53ef\u4ee5\u5728\u975e\u8fde\u7eed\u7684\u7a7a\u95f4\u4e2d\u5b58\u50a8\u6570\u636e\uff1b\u961f\u5217\u548c\u5806\u6808\u662f\u63cf\u8ff0\u6570\u636e\u5b58\u53d6\u65b9\u5f0f\u7684\u6982\u5ff5\uff0c\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u800c\u5806\u6808\u662f\u540e\u8fdb\u5148\u51fa\uff1b\u961f\u5217\u548c\u5806\u6808\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u7528\u94fe\u8868\u5b9e\u73b0\u3002 Q48.\u5982\u4f55\u4f7f\u7528\u6211\u5df2\u7ecf\u77e5\u9053\u7684URL\u5730\u5740\u672c\u5730\u4fdd\u5b58\u56fe\u50cf\uff1f \u5c06\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u4eceURL\u5730\u5740\u672c\u5730\u4fdd\u5b58\u56fe\u50cf: import urllib.request urllib.request.urlretrieve(\"URL\", \"local-filename.jpg\") Q49.\u5982\u4f55\u83b7\u53d6\u4efb\u4f55\u7f51\u5740\u6216\u7f51\u9875\u7684Google\u7f13\u5b58\u65f6\u9650\uff1f \u4f7f\u7528\u4ee5\u4e0bURL\u683c\u5f0f\uff1a http://webcache.googleusercontent.com/search?q=cache:URLGOESHERE \u8bf7\u52a1\u5fc5\u5c06\u201cURLGOESHERE\u201d\u66ff\u6362\u4e3a\u60a8\u8981\u68c0\u7d22\u5176\u7f13\u5b58\u7684\u9875\u9762\u6216\u7f51\u7ad9\u7684\u6b63\u786e\u7f51\u5740\uff0c\u5e76\u67e5\u770b\u65f6\u95f4\u3002 \u4f8b\u5982\uff0c\u8981\u67e5\u770b http://edureka.co \u7684Google Webcache\u65f6\u4ee3\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u4ee5\u4e0b\u7f51\u5740\uff1a http://webcache.googleusercontent.com/search?q=cache:edureka.co Q50.\u60a8\u9700\u8981\u4eceIMDb\u524d250\u7535\u5f71\u9875\u9762\u4e2d\u5220\u9664\u6570\u636e,\u53ea\u6709\u5b57\u6bb5\u7535\u5f71\u540d\u79f0\uff0c\u5e74\u4efd\u548c\u8bc4\u7ea7 from bs4 import BeautifulSoup import requests import sys url =' http://www.imdb.com/chart/top ' response =requests.get(url) soup =BeautifulSoup(response.text) tr =soup.findChildren(\"tr\") tr =iter(tr) next(tr) formovie intr: title =movie.find('td', {'class': 'titleColumn'} ).find('a').contents[0] year =movie.find('td', {'class': 'titleColumn'} ).find('span', {'class': 'secondaryInfo'}).contents[0] rating =movie.find('td', {'class': 'ratingColumn imdbRating'} ).find('strong').contents[0] row =title +' - '+year +' '+' '+rating print(row) \u4e0a\u8ff0\u4ee3\u7801\u5c06\u6709\u52a9\u4e8e\u4eceIMDb\u7684\u524d250\u540d\u5217\u8868\u4e2d\u5220\u9664\u6570\u636e\u3002 Q51.\u8bf7\u89e3\u91ca\u4f7f\u7528*args\u548c*kwargs\u7684\u542b\u4e49 \u5f53\u6211\u4eec\u4e0d\u77e5\u9053\u5411\u51fd\u6570\u4f20\u9012\u591a\u5c11\u53c2\u6570\u65f6\uff0c\u6bd4\u5982\u6211\u4eec\u5411\u4f20\u9012\u4e00\u4e2a\u5217\u8868\u6216\u5143\u7ec4\uff0c\u6211\u4eec\u5c31\u4f7f\u7528*args\uff1a def func(*args): for i in args: print(i) func(3,2,1,4,7) 3 2 1 4 7 \u5728\u6211\u4eec\u4e0d\u77e5\u9053\u8be5\u4f20\u9012\u591a\u5c11\u5173\u952e\u5b57\u53c2\u6570\u65f6\uff0c\u4f7f\u7528**kwargs\u6765\u6536\u96c6\u5173\u952e\u5b57\u53c2\u6570\uff1a def func(**kwargs): for i in kwargs: print(i,kwargs[i]) func(a=1,b=2,c=7) a.1 b.2 c.7 Q52.\u5982\u4f55\u5728Python\u4e2d\u5220\u9664\u6587\u4ef6\uff1f \u4f7f\u7528\u547d\u4ee4os.remove\uff08filename\uff09\u6216os.unlink\uff08filename\uff09 Q53.\u89e3\u91ca\u5982\u4f55\u4eceC\u8bbf\u95ee\u7528Python\u7f16\u5199\u7684\u6a21\u5757\uff1f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8bbf\u95eeC\u4e2d\u7528Python\u7f16\u5199\u7684\u6a21\u5757\uff1a Module = = PyImport_ImportModule\uff08\u201c \u201d\uff09 Q54.\u5728Python\u4e2d\u4f7f\u7528//\u8fd0\u7b97\u7b26\uff1f \u5b83\u662f\u4e00\u4e2aFloor Divisionoperator\uff0c\u7528\u4e8e\u5206\u5272\u4e24\u4e2a\u64cd\u4f5c\u6570\uff0c\u7ed3\u679c\u4e3a\u5546\uff0c\u53ea\u663e\u793a\u5c0f\u6570\u70b9\u524d\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c10 // 5 = 2\u548c10.0 // 5.0 = 2.0\u3002 Q55.\u600e\u4e48\u79fb\u9664\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u5bfc\u7a7a\u683c\uff1f \u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u5bfc\u7a7a\u683c\u5c31\u662f\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u524d\u7684\u7a7a\u683c\u3002\u6211\u4eec\u4f7f\u7528\u65b9\u6cd5Istrip()\u53ef\u4ee5\u5c06\u5b83\u4ece\u5b57\u7b26\u4e32\u4e2d\u79fb\u9664\u3002 ' Data123 '.lstrip() \u7ed3\u679c\uff1a 'Data123 ' \u6700\u521d\u7684\u5b57\u7b26\u4e32\u5f53\u4e2d\u65e2\u6709\u524d\u5bfc\u5b57\u7b26\u4e5f\u6709\u540e\u7f00\u5b57\u7b26\uff0c\u8c03\u7528Istrip()\u53bb\u9664\u4e86\u524d\u5bfc\u7a7a\u683c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u53bb\u9664\u540e\u7f00\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528rstrip()\u65b9\u6cd5\u3002 'Data123 '.rstrip() 'Data123' Q56.\u5982\u4f55\u7528Python\u8f93\u51fa\u4e00\u4e2aFibonacci\u6570\u5217? a,b = 0, 1 while b<100: print (b) a, b = b, a+b Q57.\u5728Python\u4e2d\u600e\u6837\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u578b\u53d8\u91cf\uff1f \u5982\u679c\u5b57\u7b26\u4e32\u53ea\u542b\u6709\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528\u51fd\u6570int()\u5c06\u5176\u8f6c\u6362\u4e3a\u6574\u6570\u3002 int('22') \u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u53d8\u91cf\u7c7b\u578b\uff1a type('22') type(int('22')) Q58.\u5728Python\u4e2d\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\uff1f \u8981\u60f3\u751f\u6210\u968f\u673a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4ecerandom\u6a21\u5757\u4e2d\u5bfc\u5165\u51fd\u6570random()\u3002 from random import random random() 0.013501571090371978 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570randint()\uff0c\u5b83\u4f1a\u7528\u4e24\u4e2a\u53c2\u6570\u8868\u793a\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd4\u56de\u8be5\u533a\u95f4\u5185\u7684\u4e00\u4e2a\u968f\u673a\u6574\u6570\u3002 from random import randint randint(2,7) 4 Q59.\u600e\u6837\u5c06\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\uff1f \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u7528capitalize()\u65b9\u6cd5\u3002 'daxie'.capitalize() 'Daxie' Q60.\u5982\u4f55\u68c0\u67e5\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684\u5b57\u7b26\u90fd\u4e3a\u5b57\u6bcd\u6570\u5b57\uff1f \u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528isalnum()\u65b9\u6cd5\u3002 'DATA123'.isalnum() True 'DATA123!'.isalnum() False \u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u5176\u5b83\u4e00\u4e9b\u65b9\u6cd5\uff1a '123'.isdigit()#\u68c0\u6d4b\u5b57\u7b26\u4e32\u662f\u5426\u53ea\u7531\u6570\u5b57\u7ec4\u6210 True '123'.isnumeric()#\u53ea\u9488\u5bf9unicode\u5bf9\u8c61 True 'data'.islower()#\u662f\u5426\u90fd\u4e3a\u5c0f\u5199 True 'Data'.isupper()#\u662f\u5426\u90fd\u4e3a\u5927\u5199 False Q61.\u4ec0\u4e48\u662fPython\u4e2d\u7684\u8fde\u63a5\uff08concatenation\uff09\uff1f Python\u4e2d\u7684\u8fde\u63a5\u5c31\u662f\u5c06\u4e24\u4e2a\u5e8f\u5217\u8fde\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u4f7f\u7528+\u8fd0\u7b97\u7b26\u5b8c\u6210\uff1a '22'+'33' \u20182233\u2019 [1,2,3]+[4,5,6] [1, 2,3, 4, 5, 6] (2,3)+(4) TypeError Traceback (most recent call last) in ----> 1 (2,3)+(4) TypeError: can only concatenate tuple (not \"int\") to tuple \u8fd9\u91cc\u8fd0\u884c\u51fa\u9519\uff0c\u56e0\u4e3a\uff084\uff09\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4fee\u6539\u4e00\u4e0b\u518d\u91cd\u65b0\u8fd0\u884c\uff1a (2,3)+(4,) (2, 3,4) Q62.\u4ec0\u4e48\u662f\u9012\u5f52\uff1f \u5728\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8c03\u7528\u4e86\u51fd\u6570\u672c\u8eab\u8fd9\u4e2a\u5c31\u53eb\u9012\u5f52\u3002\u4f46\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7ed3\u675f\u6761\u4ef6\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a def facto(n): if n==1: return 1 return n*facto(n-1) facto(5) 120 Q63.\u4ec0\u4e48\u662f\u751f\u6210\u5668\uff1f \u751f\u6210\u5668\u4f1a\u751f\u6210\u4e00\u7cfb\u5217\u7684\u503c\u7528\u4e8e\u8fed\u4ee3\uff0c\u8fd9\u6837\u770b\u5b83\u53c8\u662f\u4e00\u79cd\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002\u5b83\u662f\u5728for\u5faa\u73af\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u8ba1\u7b97\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5728\u9002\u5f53\u7684\u6761\u4ef6\u7ed3\u675ffor\u5faa\u73af\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u80fd\u9010\u4e2a\u201cyield\u201d\u503c\u7684\u51fd\u6570\uff0c\u7136\u540e\u7528\u4e00\u4e2afor\u5faa\u73af\u6765\u8fed\u4ee3\u5b83\u3002 def squares(n): i=1 while(i<=n): yield i**2 i+=1 for i in squares(5): print(i) 1 4 9 16 25 Q64.\u4ec0\u4e48\u662f\u8fed\u4ee3\u5668\uff1f \u8fed\u4ee3\u5668\u662f\u8bbf\u95ee\u96c6\u5408\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u8fed\u4ee3\u5668\u5bf9\u8c61\u4ece\u96c6\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u8bbf\u95ee\uff0c\u76f4\u5230\u6240\u6709\u7684\u5143\u7d20\u88ab\u8bbf\u95ee\u5b8c\u7ed3\u675f\u3002\u8fed\u4ee3\u5668\u53ea\u80fd\u5f80\u524d\u4e0d\u4f1a\u540e\u9000\u3002\u6211\u4eec\u4f7f\u7528inter()\u51fd\u6570\u521b\u5efa\u8fed\u4ee3\u5668\u3002 odds=iter([1,2,3,4,5]) \u6bcf\u6b21\u60f3\u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u5c31\u8c03\u7528next()\u51fd\u6570 \u00b6 next (odds) 1 next (odds) 2 next (odds) 3 next (odds) 4 next (odds) 5 Q65.\u8bf7\u8bf4\u8bf4\u751f\u6210\u5668\u548c\u8fed\u4ee3\u5668\u4e4b\u95f4\u7684\u533a\u522b 1\uff09\u5728\u4f7f\u7528\u751f\u6210\u5668\u65f6\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff1b\u5728\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u5185\u7f6e\u51fd\u6570iter()\u548cnext()\uff1b 2\uff09\u5728\u751f\u6210\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5173\u952e\u5b57\u2018yield\u2019\u6765\u6bcf\u6b21\u751f\u6210/\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff1b 3\uff09\u751f\u6210\u5668\u4e2d\u6709\u591a\u5c11\u2018yield\u2019\u8bed\u53e5\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff1b 4\uff09\u6bcf\u6b21\u2018yield\u2019\u6682\u505c\u5faa\u73af\u65f6\uff0c\u751f\u6210\u5668\u4f1a\u4fdd\u5b58\u672c\u5730\u53d8\u91cf\u7684\u72b6\u6001\u3002\u800c\u8fed\u4ee3\u5668\u5e76\u4e0d\u4f1a\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u8fed\u4ee3\uff1b 5\uff09\u4f7f\u7528\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u4f60\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u4f46\u65e0\u6cd5\u5b9e\u73b0\u751f\u6210\u5668\uff1b 6\uff09\u751f\u6210\u5668\u8fd0\u884c\u901f\u5ea6\u5feb\uff0c\u8bed\u6cd5\u7b80\u6d01\uff0c\u66f4\u7b80\u5355\uff1b 7\uff09\u8fed\u4ee3\u5668\u66f4\u80fd\u8282\u7ea6\u5185\u5b58\u3002 Q66.\u51fd\u6570zip()\u7684\u662f\u5e72\u561b\u7684\uff1f Python\u65b0\u624b\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u51fd\u6570\u4e0d\u662f\u5f88\u719f\u6089\uff0czip()\u53ef\u4ee5\u8fd4\u56de\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\u3002 list(zip(['a','b','c'],[1,2,3])) [(\u2018a\u2019,1), (\u2018b\u2019, 2), (\u2018c\u2019, 3)] \u5728\u8fd9\u91cczip()\u51fd\u6570\u5bf9\u4e24\u4e2a\u5217\u8868\u4e2d\u7684\u6570\u636e\u9879\u8fdb\u884c\u4e86\u914d\u5bf9\uff0c\u5e76\u7528\u5b83\u4eec\u521b\u5efa\u4e86\u5143\u7ec4\u3002 Q67.\u5982\u4f55\u7528Python\u627e\u51fa\u4f60\u76ee\u524d\u5728\u54ea\u4e2a\u76ee\u5f55\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570/\u65b9\u6cd5getcwd()\uff0c\u4ece\u6a21\u5757os\u4e2d\u5c06\u5176\u5bfc\u5165\u3002 import os os.getcwd() 'C:\\Users\\37410\\Desktop\\\u4ee3\u7801' Q68.\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1f \u8fd9\u4e2a\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5728\u6211\u4eec\u60f3\u8ba1\u7b97\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u4e0a\u8c03\u7528\u51fd\u6570len()\u5373\u53ef\u3002 len('Data 123') 8 Q69.\u5982\u4f55\u4ece\u5217\u8868\u4e2d\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\uff1f \u4ece\u5217\u8868\u4e2d\u5220\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\u6216obj\u3002 list.pop\uff08obj = list [-1]\uff09 Q70.\u89e3\u91ca\u4e00\u4e9b\u5728Python\u4e2d\u5b9e\u73b0\u9762\u5411\u529f\u80fd\u7684\u7f16\u7a0b\u7684\u65b9\u6cd5 \u6709\u65f6\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u904d\u5386\u5217\u8868\u65f6\uff0c\u4e00\u4e9b\u65b9\u6cd5\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002 1\uff09filter\uff08\uff09 \u8fc7\u6ee4\u5668\u5141\u8bb8\u6211\u4eec\u6839\u636e\u6761\u4ef6\u903b\u8f91\u8fc7\u6ee4\u4e00\u4e9b\u503c\u3002 list\uff08filter\uff08lambda x\uff1ax> 5\uff0crange\uff088\uff09\uff09\uff09 [6,7] 2\uff09map\uff08\uff09 Map\u5c06\u51fd\u6570\u5e94\u7528\u4e8eiterable\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 list\uff08map\uff08lambda x\uff1ax ** 2\uff0crange\uff088\uff09\uff09\uff09 [0,1,4,9,16,25,36,49] 3\uff09reduce\uff08\uff09 \u5728\u6211\u4eec\u8fbe\u5230\u5355\u4e2a\u503c\u4e4b\u524d\uff0cReduce\u4f1a\u53cd\u590d\u51cf\u5c11\u5e8f\u5217\u987a\u5e8f\u3002 from functools import reduce reduce\uff08lambda x\uff0cy\uff1axy\uff0c[1,2,3,4,5]\uff09 -13 Q71.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8ba1\u7b97\u6570\u5b57\u5217\u8868\u7684\u603b\u548c def list_sum\uff08num_List\uff09\uff1a\u5982\u679clen\uff08num_List\uff09== 1\uff1a return num_List [0] else\uff1a return num_List [0] + list_sum\uff08num_List [1\uff1a]\uff09 print\uff08list_sum\uff08[3,4,5,6,11]\uff09\uff09 29 Q72.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u968f\u673a\u884c import random def random_line\uff08fname\uff09\uff1a lines = open\uff08fname\uff09.read\uff08\uff09.splitlines\uff08\uff09 return random.choice\uff08lines\uff09 print\uff08random_line\uff08'test.txt'\uff09\uff09 Q73.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8ba1\u7b97\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u884c\u6570 def file_lengthy\uff08fname\uff09\uff1a open\uff08fname\uff09as f\uff1a for i\uff0cl in enumerate\uff08f\uff09\uff1a pass return i + 1 print\uff08\u201cfile of lines\uff1a\u201d\uff0cfile_lengthy\uff08\u201ctest.txt\u201d\uff09\uff09 Q74.\u8bf7\u5199\u4e00\u4e2aPython\u903b\u8f91\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u6570\u91cf import os os.chdir('C:\\Users\\lifei\\Desktop') with open('Today.txt') as today: count=0 for i in today.read(): if i.isupper(): count+=1 print(count) Q75.\u5728Python\u4e2d\u4e3a\u6570\u503c\u6570\u636e\u96c6\u7f16\u5199\u6392\u5e8f\u7b97\u6cd5 \u4ee5\u4e0b\u4ee3\u7801\u53ef\u7528\u4e8e\u5728Python\u4e2d\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f\uff1a list = [\"1\", \"4\", \"0\", \"6\", \"9\"] list = [int(i) for i in list] list.sort() print (list) Django\u6709\u5173 Q76.\u8bf7\u89e3\u91ca\u6216\u63cf\u8ff0\u4e00\u4e0bDjango\u7684\u67b6\u6784 \u5bf9\u4e8eDjango\u6846\u67b6\u9075\u5faaMVC\u8bbe\u8ba1\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd\uff1aMVT\uff0cM\u5168\u62fc\u4e3aModel\uff0c\u4e0eMVC\u4e2d\u7684M\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u6570\u636e\u5904\u7406\uff0c\u5185\u5d4c\u4e86ORM\u6846\u67b6\uff1bV\u5168\u62fc\u4e3aView\uff0c\u4e0eMVC\u4e2d\u7684C\u529f\u80fd\u76f8\u540c\uff0c\u63a5\u6536HttpRequest\uff0c\u4e1a\u52a1\u5904\u7406\uff0c\u8fd4\u56deHttpResponse\uff1bT\u5168\u62fc\u4e3aTemplate\uff0c\u4e0eMVC\u4e2d\u7684V\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u5c01\u88c5\u6784\u9020\u8981\u8fd4\u56de\u7684html\uff0c\u5185\u5d4c\u4e86\u6a21\u677f\u5f15\u64ce Q77.Django\uff0cPyramid\u548cFlask\u4e4b\u95f4\u7684\u5dee\u5f02 Flask\u662f\u4e00\u4e2a\u201c\u5fae\u6846\u67b6\u201d\uff0c\u4e3b\u8981\u7528\u4e8e\u5177\u6709\u66f4\u7b80\u5355\u8981\u6c42\u7684\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u3002Pyramid\u9002\u7528\u4e8e\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u7075\u6d3b\u6027\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4e3a\u4ed6\u4eec\u7684\u9879\u76ee\u4f7f\u7528\u6570\u636e\u5e93\uff0cURL\u7ed3\u6784\uff0c\u6a21\u677f\u6837\u5f0f\u7b49\u6b63\u786e\u7684\u5de5\u5177\u3002Django\u4e5f\u53ef\u4ee5\u50cfPyramid\u4e00\u6837\u7528\u4e8e\u66f4\u5927\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5305\u62ec\u4e00\u4e2aORM\u3002 Q78.\u8ba8\u8bbaDjango\u67b6\u6784 Django\u67b6\u6784 \u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u6a21\u578b\uff0c\u89c6\u56fe\u548c\u6a21\u677f\uff0c\u7136\u540e\u5c06\u5176\u6620\u5c04\u5230URL\uff0cDjango\u53ef\u4ee5\u4e3a\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002 Q79.\u89e3\u91ca\u5982\u4f55\u5728Django\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93 Django\u4f7f\u7528SQLite\u4f5c\u4e3a\u9ed8\u8ba4\u6570\u636e\u5e93\uff0c\u5b83\u5c06\u6570\u636e\u4f5c\u4e3a\u5355\u4e2a\u6587\u4ef6\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002 \u5982\u8fc7\u4f60\u6709\u6570\u636e\u5e93\u670d\u52a1\u5668-PostgreSQL\uff0cMySQL\uff0cOracle\uff0cMSSQL-\u5e76\u4e14\u60f3\u8981\u4f7f\u7528\u5b83\u800c\u4e0d\u662fSQLite\uff0c\u90a3\u4e48\u4f7f\u7528\u6570\u636e\u5e93\u7684\u7ba1\u7406\u5de5\u5177\u4e3a\u4f60\u7684Django\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\u3002 \u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5728\u60a8\u7684\uff08\u7a7a\uff09\u6570\u636e\u5e93\u5230\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u544a\u8bc9Django\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u8fd9\u662f\u9879\u76ee\u7684settings.py\u6587\u4ef6\u7684\u6765\u6e90\u3002 \u6211\u4eec\u5c06\u4ee5\u4e0b\u4ee3\u7801\u884c\u6dfb\u52a0\u5230setting.py\u6587\u4ef6\u4e2d\uff1a DATABASES ={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), Q80.\u4e3e\u4f8b\u8bf4\u660e\u5982\u4f55\u5728Django\u4e2d\u7f16\u5199VIEW\uff1f \u8fd9\u662f\u6211\u4eec\u5728Django\u4e2d\u4f7f\u7528write\u4e00\u4e2a\u89c6\u56fe\u7684\u65b9\u6cd5\uff1a from django.http import HttpResponse import datetime def Current_datetime(request): now =datetime.datetime.now() html =\" It is now %s \"%now return HttpResponse(html) \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u4f5c\u4e3aHTML\u6587\u6863\u3002 Q81.\u63d0\u5230Django\u6a21\u677f\u7684\u7ec4\u6210\u90e8\u5206\u3002 \u6a21\u677f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u672c\u6587\u4ef6\u3002\u5b83\u53ef\u4ee5\u521b\u5efa\u4efb\u4f55\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f\uff0c\u5982XML\uff0cCSV\uff0cHTML\u7b49\u3002\u6a21\u677f\u5305\u542b\u5728\u8bc4\u4f30\u6a21\u677f\u65f6\u66ff\u6362\u4e3a\u503c\u7684\u53d8\u91cf\u548c\u63a7\u5236\u6a21\u677f\u903b\u8f91\u7684\u6807\u8bb0\uff08\uff05tag\uff05\uff09\u3002 Q82.\u5728Django\u6846\u67b6\u4e2d\u89e3\u91ca\u4f1a\u8bdd\u7684\u4f7f\u7528\uff1f Django\u63d0\u4f9b\u7684\u4f1a\u8bdd\u5141\u8bb8\u60a8\u57fa\u4e8e\u6bcf\u4e2a\u7ad9\u70b9\u8bbf\u95ee\u8005\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u3002Django\u901a\u8fc7\u5728\u5ba2\u6237\u7aef\u653e\u7f6e\u4f1a\u8bddID cookie\u5e76\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u6240\u6709\u76f8\u5173\u6570\u636e\u6765\u62bd\u8c61\u53d1\u9001\u548c\u63a5\u6536cookie\u7684\u8fc7\u7a0b\u3002 \u6240\u4ee5\u6570\u636e\u672c\u8eab\u5e76\u4e0d\u5b58\u50a8\u5728\u5ba2\u6237\u7aef\u3002\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u5f88\u597d\u3002 Q83.\u5217\u51faDjango\u4e2d\u7684\u7ee7\u627f\u6837\u5f0f \u5728Django\u4e2d\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u7ee7\u627f\u6837\u5f0f\uff1a \u62bd\u8c61\u57fa\u7c7b\uff1a\u5f53\u4f60\u53ea\u5e0c\u671b\u7236\u7c7b\u5305\u542b\u800c\u4f60\u4e0d\u60f3\u4e3a\u6bcf\u4e2a\u5b50\u6a21\u578b\u952e\u5165\u7684\u4fe1\u606f\u65f6\u4f7f\u7528\uff1b \u591a\u8868\u7ee7\u627f\uff1a\u5bf9\u73b0\u6709\u6a21\u578b\u8fdb\u884c\u5b50\u7c7b\u5316\uff0c\u5e76\u4e14\u9700\u8981\u6bcf\u4e2a\u6a21\u578b\u90fd\u6709\u81ea\u5df1\u7684\u6570\u636e\u5e93\u8868\u3002 \u4ee3\u7406\u6a21\u578b\uff1a\u53ea\u60f3\u4fee\u6539\u6a21\u578b\u7684Python\u7ea7\u522b\u884c\u4e3a\uff0c\u800c\u65e0\u9700\u66f4\u6539\u6a21\u578b\u7684\u5b57\u6bb5\u3002 \u6570\u636e\u5206\u6790 Q84.\u4ec0\u4e48\u662fPython\u4e2d\u7684map\u51fd\u6570\uff1f map\u51fd\u6570\u6267\u884c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ed9\u51fa\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7ed9\u51fa\u7684iterable\u7684\u6240\u6709\u5143\u7d20\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u51fd\u6570\u63a5\u53d7\u591a\u4e8e1\u4e2a\u53c2\u6570\uff0c\u5219\u7ed9\u51fa\u4e86\u8bb8\u591a\u8fed\u4ee3\u3002 Q85.\u5982\u4f55\u5728NumPy\u6570\u7ec4\u4e2d\u83b7\u5f97N\u4e2a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5728NumPy\u6570\u7ec4\u4e2d\u83b7\u5f97N\u4e2a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff1a importnumpy as np arr =np.array([1, 3, 2, 4, 5]) print(arr.argsort()[-3:][::-1]) 4 3 1 Q86.\u5982\u4f55\u7528Python/ NumPy\u8ba1\u7b97\u767e\u5206\u4f4d\u6570\uff1f importnumpy as np a =np.array([1,2,3,4,5] p =np.percentile(a, 50) #Returns 50 th percentile, e.g. median print(p) 3 Q87.NumPy\u9635\u5217\u5728\uff08\u5d4c\u5957\uff09Python\u5217\u8868\u4e2d\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff1f 1\uff09Python\u7684\u5217\u8868\u662f\u9ad8\u6548\u7684\u901a\u7528\u5bb9\u5668\u3002 \u5b83\u4eec\u652f\u6301\uff08\u76f8\u5f53\uff09\u6709\u6548\u7684\u63d2\u5165\uff0c\u5220\u9664\uff0c\u8ffd\u52a0\u548c\u8fde\u63a5\uff0cPython\u7684\u5217\u8868\u63a8\u5bfc\u4f7f\u5b83\u4eec\u6613\u4e8e\u6784\u9020\u548c\u64cd\u4f5c\u3002 2\uff09\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027 \u5b83\u4eec\u4e0d\u652f\u6301\u5143\u7d20\u5316\u52a0\u6cd5\u548c\u4e58\u6cd5\u7b49\u201c\u5411\u91cf\u5316\u201d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740Python\u5fc5\u987b\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u5e76\u4e14\u5fc5\u987b\u5728\u64cd\u4f5c\u65f6\u6267\u884c\u7c7b\u578b\u8c03\u5ea6\u4ee3\u7801\u5728\u6bcf\u4e2a\u5143\u7d20\u4e0a\u3002 3\uff09NumPy\u4e0d\u4ec5\u6548\u7387\u66f4\u9ad8\uff0c\u4e5f\u66f4\u65b9\u4fbf \u4f60\u53ef\u4ee5\u83b7\u5f97\u5927\u91cf\u7684\u77e2\u91cf\u548c\u77e9\u9635\u8fd0\u7b97\uff0c\u8fd9\u6709\u65f6\u53ef\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u3002 4\uff09NumPy\u6570\u7ec4\u66f4\u5feb \u4f60\u53ef\u4ee5\u4f7f\u7528NumPy\uff0cFFT\uff0c\u5377\u79ef\uff0c\u5feb\u901f\u641c\u7d22\uff0c\u57fa\u672c\u7edf\u8ba1\uff0c\u7ebf\u6027\u4ee3\u6570\uff0c\u76f4\u65b9\u56fe\u7b49\u5185\u7f6e\u3002 Q88.\u89e3\u91ca\u88c5\u9970\u5668\u7684\u7528\u6cd5 Python\u4e2d\u7684\u88c5\u9970\u5668\u7528\u4e8e\u4fee\u6539\u6216\u6ce8\u5165\u51fd\u6570\u6216\u7c7b\u4e2d\u7684\u4ee3\u7801\u3002\u4f7f\u7528\u88c5\u9970\u5668\uff0c\u60a8\u53ef\u4ee5\u5305\u88c5\u7c7b\u6216\u51fd\u6570\u65b9\u6cd5\u8c03\u7528\uff0c\u4ee5\u4fbf\u5728\u6267\u884c\u539f\u59cb\u4ee3\u7801\u4e4b\u524d\u6216\u4e4b\u540e\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u3002\u88c5\u9970\u5668\u53ef\u7528\u4e8e\u68c0\u67e5\u6743\u9650\uff0c\u4fee\u6539\u6216\u8ddf\u8e2a\u4f20\u9012\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5c06\u8c03\u7528\u8bb0\u5f55\u5230\u7279\u5b9a\u65b9\u6cd5\u7b49 Q89.NumPy\u548cSciPy\u6709\u4ec0\u4e48\u533a\u522b\uff1f 1\uff09\u5728\u7406\u60f3\u7684\u4e16\u754c\u4e2d\uff0cNumPy\u53ea\u5305\u542b\u6570\u7ec4\u6570\u636e\u7c7b\u578b\u548c\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff1a\u7d22\u5f15\uff0c\u6392\u5e8f\uff0c\u91cd\u65b0\u6574\u5f62\uff0c\u57fa\u672c\u5143\u7d20\u51fd\u6570\u7b49\u3002 2\uff09\u6240\u6709\u6570\u5b57\u4ee3\u7801\u90fd\u5c06\u9a7b\u7559\u5728SciPy\u4e2d\u3002\u7136\u800c\uff0cNumPy\u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\u662f\u517c\u5bb9\u6027\uff0c\u56e0\u6b64NumPy\u8bd5\u56fe\u4fdd\u7559\u5176\u524d\u4efb\u4efb\u4f55\u4e00\u4e2a\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\u3002 3\uff09\u56e0\u6b64\uff0cNumPy\u5305\u542b\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u51fd\u6570\uff0c\u5373\u4f7f\u5b83\u4eec\u66f4\u6070\u5f53\u5730\u5c5e\u4e8eSciPy\u3002\u65e0\u8bba\u5982\u4f55\uff0cSciPy\u5305\u542b\u66f4\u591a\u5168\u529f\u80fd\u7684\u7ebf\u6027\u4ee3\u6570\u6a21\u5757\u7248\u672c\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u6570\u503c\u7b97\u6cd5\u3002 4\uff09\u5982\u679c\u4f60\u4f7f\u7528python\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\uff0c\u4f60\u5e94\u8be5\u5b89\u88c5NumPy\u548cSciPy\u3002\u5927\u591a\u6570\u65b0\u529f\u80fd\u5c5e\u4e8eSciPy\u800c\u975eNumPy\u3002 Q90.\u5982\u4f55\u4f7f\u7528NumPy / SciPy\u5236\u4f5c3D\u7ed8\u56fe/\u53ef\u89c6\u5316\uff1f \u4e0e2D\u7ed8\u56fe\u4e00\u6837\uff0c3D\u56fe\u5f62\u8d85\u51fa\u4e86NumPy\u548cSciPy\u7684\u8303\u56f4\uff0c\u4f46\u5c31\u50cf2D\u60c5\u51b5\u4e00\u6837\uff0c\u5b58\u5728\u4e0eNumPy\u96c6\u6210\u7684\u5305\u3002Matplotlib\u5728mplot3d\u5b50\u5305\u4e2d\u63d0\u4f9b\u57fa\u672c\u76843D\u7ed8\u56fe\uff0c\u800cMayavi\u4f7f\u7528\u529f\u80fd\u5f3a\u5927\u7684VTK\u5f15\u64ce\u63d0\u4f9b\u5404\u79cd\u9ad8\u8d28\u91cf\u76843D\u53ef\u89c6\u5316\u529f\u80fd\u3002 \u722c\u866b\u548cscary\u6846\u67b6 Q91.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f 1) scrapy\u662f\u4e00\u4e2aPython\u722c\u866b\u6846\u67b6\uff0c\u722c\u53d6\u6548\u7387\u6781\u9ad8\uff0c\u5177\u6709\u9ad8\u5ea6\u5b9a\u5236\u6027\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u5206\u5e03\u5f0f\u3002 \u800cscrapy-redis\u4e00\u5957\u57fa\u4e8eredis\u6570\u636e\u5e93\u3001\u8fd0\u884c\u5728scrapy\u6846\u67b6\u4e4b\u4e0a\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u8ba9scrapy\u652f\u6301\u5206\u5e03\u5f0f\u7b56\u7565\uff0cSlaver\u7aef\u5171\u4eabMaster\u7aefredis\u6570\u636e\u5e93\u91cc\u7684item\u961f\u5217\u3001\u8bf7\u6c42\u961f\u5217\u548c\u8bf7\u6c42\u6307\u7eb9\u96c6\u5408\u3002 2) \u56e0\u4e3aredis\u652f\u6301\u4e3b\u4ece\u540c\u6b65\uff0c\u800c\u4e14\u6570\u636e\u90fd\u662f\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u6240\u4ee5\u57fa\u4e8eredis\u7684\u5206\u5e03\u5f0f\u722c\u866b\uff0c\u5bf9\u8bf7\u6c42\u548c\u6570\u636e\u7684\u9ad8\u9891\u8bfb\u53d6\u6548\u7387\u975e\u5e38\u9ad8\u3002 Q92.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f Python\u81ea\u5e26\uff1aurllib\uff0curllib2 \u7b2c \u4e09 \u65b9\uff1arequests \u6846 \u67b6\uff1aScrapy urllib\u548curllib2\u6a21\u5757\u90fd\u505a\u4e0e\u8bf7\u6c42URL\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\u3002 urllib2.\uff1aurllib2.urlopen\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u5bf9\u8c61\u6216\u8005url\uff0c\uff08\u5728\u63a5\u53d7Request\u5bf9\u8c61\u65f6\u5019\uff0c\u5e76\u4ee5\u6b64\u53ef\u4ee5\u6765\u8bbe\u7f6e\u4e00\u4e2aURL \u7684headers\uff09\uff0curllib.urlopen\u53ea\u63a5\u6536\u4e00\u4e2aurl urllib \u6709urlencode,urllib2\u6ca1\u6709\uff0c\u56e0\u6b64\u603b\u662furllib\uff0curllib2\u5e38\u4f1a\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0 scrapy\u662f\u5c01\u88c5\u8d77\u6765\u7684\u6846\u67b6\uff0c\u4ed6\u5305\u542b\u4e86\u4e0b\u8f7d\u5668\uff0c\u89e3\u6790\u5668\uff0c\u65e5\u5fd7\u53ca\u5f02\u5e38\u5904\u7406\uff0c\u57fa\u4e8e\u591a\u7ebf\u7a0b\uff0c twisted\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u5355\u4e2a\u7f51\u7ad9\u7684\u722c\u53d6\u5f00\u53d1\uff0c\u6709\u4f18\u52bf\uff1b\u4f46\u662f\u5bf9\u4e8e\u591a\u7f51\u7ad9\u722c\u53d6 100\u4e2a\u7f51\u7ad9\uff0c\u5e76\u53d1\u53ca\u5206\u5e03\u5f0f\u5904\u7406\u65b9\u9762\uff0c\u4e0d\u591f\u7075\u6d3b\uff0c\u4e0d\u4fbf\u8c03\u6574\u4e0e\u62ec\u5c55\u3002 request \u662f\u4e00\u4e2aHTTP\u5e93\uff0c \u5b83\u53ea\u662f\u7528\u6765\uff0c\u8fdb\u884c\u8bf7\u6c42\uff0c\u5bf9\u4e8eHTTP\u8bf7\u6c42\uff0c\u4ed6\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5e93\uff0c\u4e0b\u8f7d\uff0c\u89e3\u6790\u5168\u90e8\u81ea\u5df1\u5904\u7406\uff0c\u7075\u6d3b\u6027\u66f4\u9ad8\uff0c\u9ad8\u5e76\u53d1\u4e0e\u5206\u5e03\u5f0f\u90e8\u7f72\u4e5f\u975e\u5e38\u7075\u6d3b\uff0c\u5bf9\u4e8e\u529f\u80fd\u53ef\u4ee5\u66f4\u597d\u5b9e\u73b0\u3002 Q93.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b\uff1f\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u4e3b\u8981 MyISAM \u4e0e InnoDB \u4e24\u4e2a\u5f15\u64ce\uff0c\u5176\u4e3b\u8981\u533a\u522b\u5982\u4e0b\uff1a 1\uff09InnoDB \u652f\u6301\u4e8b\u52a1\uff0cMyISAM \u4e0d\u652f\u6301\uff0c\u8fd9\u4e00\u70b9\u662f\u975e\u5e38\u4e4b\u91cd\u8981\u3002\u4e8b\u52a1\u662f\u4e00\u79cd\u9ad8 \u7ea7\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5982\u5728\u4e00\u4e9b\u5217\u589e\u5220\u6539\u4e2d\u53ea\u8981\u54ea\u4e2a\u51fa\u9519\u8fd8\u53ef\u4ee5\u56de\u6eda\u8fd8\u539f\uff0c\u800c MyISAM \u5c31\u4e0d\u53ef\u4ee5\u4e86\uff1b 2)MyISAM \u9002\u5408\u67e5\u8be2\u4ee5\u53ca\u63d2\u5165\u4e3a\u4e3b\u7684\u5e94\u7528\uff0cInnoDB \u9002\u5408\u9891\u7e41\u4fee\u6539\u4ee5\u53ca\u6d89\u53ca\u5230 \u5b89\u5168\u6027\u8f83\u9ad8\u7684\u5e94\u7528\uff1b 3)InnoDB \u652f\u6301\u5916\u952e\uff0cMyISAM \u4e0d\u652f\u6301\uff1b 4)MyISAM \u662f\u9ed8\u8ba4\u5f15\u64ce\uff0cInnoDB \u9700\u8981\u6307\u5b9a\uff1b 5)InnoDB \u4e0d\u652f\u6301 FULLTEXT \u7c7b\u578b\u7684\u7d22\u5f15\uff1b 6)InnoDB \u4e2d\u4e0d\u4fdd\u5b58\u8868\u7684\u884c\u6570\uff0c\u5982 select count(*) from table \u65f6\uff0cInnoDB\uff1b\u9700\u8981 \u626b\u63cf\u4e00\u904d\u6574\u4e2a\u8868\u6765\u8ba1\u7b97\u6709\u591a\u5c11\u884c\uff0c\u4f46\u662f MyISAM \u53ea\u8981\u7b80\u5355\u7684\u8bfb\u51fa\u4fdd\u5b58\u597d\u7684\u884c\u6570\u5373 \u53ef\u3002\u6ce8\u610f\u7684\u662f\uff0c\u5f53 count(*)\u8bed\u53e5\u5305\u542b where \u6761\u4ef6\u65f6 MyISAM \u4e5f\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\uff1b 7)\u5bf9\u4e8e\u81ea\u589e\u957f\u7684\u5b57\u6bb5\uff0cInnoDB \u4e2d\u5fc5\u987b\u5305\u542b\u53ea\u6709\u8be5\u5b57\u6bb5\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u5728 MyISAM \u8868\u4e2d\u53ef\u4ee5\u548c\u5176\u4ed6\u5b57\u6bb5\u4e00\u8d77\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff1b 8)\u6e05\u7a7a\u6574\u4e2a\u8868\u65f6\uff0cInnoDB \u662f\u4e00\u884c\u4e00\u884c\u7684\u5220\u9664\uff0c\u6548\u7387\u975e\u5e38\u6162\u3002MyISAM \u5219\u4f1a\u91cd \u5efa\u8868\uff1b 9)InnoDB \u652f\u6301\u884c\u9501\uff08\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u9501\u6574\u8868\uff0c\u5982 update table set a=1 where user like '%lee%' Q94.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f \u4ecestart_urls\u91cc\u83b7\u53d6\u7b2c\u4e00\u6279url\u5e76\u53d1\u9001\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7531\u5f15\u64ce\u4ea4\u7ed9\u8c03\u5ea6\u5668\u5165\u8bf7\u6c42\u961f\u5217\uff0c\u83b7\u53d6\u5b8c\u6bd5\u540e\uff0c \u8c03\u5ea6\u5668\u5c06\u8bf7\u6c42\u961f\u5217\u91cc\u7684\u8bf7\u6c42\u4ea4\u7ed9\u4e0b\u8f7d\u5668\u53bb\u83b7\u53d6\u8bf7\u6c42\u5bf9\u5e94\u7684\u54cd\u5e94\u8d44\u6e90\uff0c\u5e76\u5c06\u54cd\u5e94\u4ea4\u7ed9\u81ea\u5df1\u7f16\u5199\u7684\u89e3\u6790\u65b9\u6cd5\u505a\u63d0\u53d6\u5904\u7406\uff1a 1) \u5982\u679c\u63d0\u53d6\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u5219\u4ea4\u7ed9\u7ba1\u9053\u6587\u4ef6\u5904\u7406\uff1b 2)\u5982\u679c\u63d0\u53d6\u51faurl\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u7684\u6b65\u9aa4\uff08\u53d1\u9001url\u8bf7\u6c42\uff0c\u5e76\u7531\u5f15\u64ce\u5c06\u8bf7\u6c42\u4ea4\u7ed9\u8c03\u5ea6\u5668\u5165\u961f\u5217...)\uff0c\u76f4\u5230\u8bf7\u6c42\u961f\u5217\u91cc\u6ca1\u6709\u8bf7\u6c42\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002 Q95.\u4ec0\u4e48\u662f\u5173\u8054\u67e5\u8be2\uff0c\u6709\u54ea\u4e9b\uff1f \u5c06\u591a\u4e2a\u8868\u8054\u5408\u8d77\u6765\u8fdb\u884c\u67e5\u8be2\uff0c\u4e3b\u8981\u6709\u5185\u8fde\u63a5\u3001\u5de6\u8fde\u63a5\u3001\u53f3\u8fde\u63a5\u3001\u5168\u8fde\u63a5\uff08\u5916\u8fde\u63a5\uff09 Q96.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f \u4e3a\u4ec0\u4e48\uff1f IO\u5bc6\u96c6\u578b\u4ee3\u7801(\u6587\u4ef6\u5904\u7406\u3001\u7f51\u7edc\u722c\u866b\u7b49)\uff0c\u591a\u7ebf\u7a0b\u80fd\u591f\u6709\u6548\u63d0\u5347\u6548\u7387(\u5355\u7ebf\u7a0b\u4e0b\u6709IO\u64cd\u4f5c\u4f1a\u8fdb\u884cIO\u7b49\u5f85\uff0c\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u6d6a\u8d39\uff0c \u800c\u5f00\u542f\u591a\u7ebf\u7a0b\u80fd\u5728\u7ebf\u7a0bA\u7b49\u5f85\u65f6\uff0c\u81ea\u52a8\u5207\u6362\u5230\u7ebf\u7a0bB\uff0c\u53ef\u4ee5\u4e0d\u6d6a\u8d39CPU\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u80fd\u63d0\u5347\u7a0b\u5e8f\u6267\u884c\u6548\u7387)\u3002 \u5728\u5b9e\u9645\u7684\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u65e2\u8003\u8651\u7f51\u901f\u548c\u54cd\u5e94\u7684\u95ee\u9898\uff0c\u4e5f\u9700\u8981\u8003\u8651\u81ea\u8eab\u673a\u5668\u7684\u786c\u4ef6\u60c5\u51b5\u6765\u8bbe\u7f6e\u591a\u8fdb\u7a0b\u6216\u591a\u7ebf\u7a0b\u3002 Q97.\u6570\u636e\u5e93\u7684\u4f18\u5316\uff1f 1)\u4f18\u5316\u7d22\u5f15\u3001SQL \u8bed\u53e5\u3001\u5206\u6790\u6162\u67e5\u8be2\uff1b 2)\u4f18\u5316\u786c\u4ef6\uff1b\u91c7\u7528SSD\uff0c\u4f7f\u7528\u78c1\u76d8\u961f\u5217\u6280\u672f(RAID0,RAID1,RDID5)\u7b49\uff1b 3)\u91c7\u7528MySQL \u5185\u90e8\u81ea\u5e26\u7684\u8868\u5206\u533a\u6280\u672f\uff0c\u628a\u6570\u636e\u5206\u5c42\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u80fd\u591f\u63d0\u9ad8\u78c1 \u76d8\u7684\u8bfb\u53d6\u6548\u7387\uff1b 4)\u9009\u62e9\u5408\u9002\u7684\u8868\u5f15\u64ce\uff0c\u53c2\u6570\u4e0a\u7684\u4f18\u5316\uff1b 5)\u8fdb\u884c\u67b6\u6784\u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u9759\u6001\u5316\u548c\u5206\u5e03\u5f0f\uff1b 6)\u91c7\u7528\u66f4\u5feb\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u4f8b\u5982 NoSQL\u5b58\u50a8\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e Q98.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f 1)ip 2)\u5e26\u5bbd 3\uff09cpu 4\uff09io Q99.\u722c\u866b\u8fc7\u7a0b\u4e2d\u9a8c\u8bc1\u7801\u600e\u4e48\u5904\u7406\uff1f 1)scrapy\u81ea\u5e26 2)\u4ed8\u8d39\u63a5\u53e3 Q100.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f 1\uff09\u901a\u8fc7Headers\u53cd\u722c\u866b \u4ece\u7528\u6237\u8bf7\u6c42\u7684Headers\u53cd\u722c\u866b\u662f\u6700\u5e38\u89c1\u7684\u53cd\u722c\u866b\u7b56\u7565\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u722c\u866b\u4e2d\u6dfb\u52a0Headers\uff0c\u5c06\u6d4f\u89c8\u5668\u7684User-Agent\u590d\u5236\u5230\u722c\u866b\u7684Headers\u4e2d\uff1b\u6216\u8005\u5c06Referer\u503c\u4fee\u6539\u4e3a\u76ee\u6807\u7f51\u7ad9\u57df\u540d\u3002 2\uff09\u57fa\u4e8e\u7528\u6237\u884c\u4e3a\u53cd\u722c\u866b \u901a\u8fc7\u68c0\u6d4b\u7528\u6237\u884c\u4e3a\uff0c\u4f8b\u5982\u540c\u4e00IP\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u8bbf\u95ee\u540c\u4e00\u9875\u9762\uff0c\u6216\u8005\u540c\u4e00\u8d26\u6237\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\u3002 \u5927\u591a\u6570\u7f51\u7ad9\u90fd\u662f\u524d\u4e00\u79cd\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f7f\u7528IP\u4ee3\u7406\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002 \u53ef\u4ee5\u4e13\u95e8\u5199\u4e00\u4e2a\u722c\u866b\uff0c\u722c\u53d6\u7f51\u4e0a\u516c\u5f00\u7684\u4ee3\u7406ip\uff0c\u68c0\u6d4b\u540e\u5168\u90e8\u4fdd\u5b58\u8d77\u6765\u3002 \u6709\u4e86\u5927\u91cf\u4ee3\u7406ip\u540e\u53ef\u4ee5\u6bcf\u8bf7\u6c42\u51e0\u6b21\u66f4\u6362\u4e00\u4e2aip\uff0c\u8fd9\u5728requests\u6216\u8005urllib2\u4e2d\u5f88\u5bb9\u6613\u505a\u5230\uff0c\u8fd9\u6837\u5c31\u80fd\u5f88\u5bb9\u6613\u7684\u7ed5\u8fc7\u7b2c\u4e00\u79cd\u53cd\u722c\u866b\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5728\u6bcf\u6b21\u8bf7\u6c42\u540e\u968f\u673a\u95f4\u9694\u51e0\u79d2\u518d\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bf7\u6c42\u3002 \u6709\u4e9b\u6709\u903b\u8f91\u6f0f\u6d1e\u7684\u7f51\u7ad9\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u51e0\u6b21\uff0c\u9000\u51fa\u767b\u5f55\uff0c\u91cd\u65b0\u767b\u5f55\uff0c\u7ee7\u7eed\u8bf7\u6c42\u6765\u7ed5\u8fc7\u540c\u4e00\u8d26\u53f7\u77ed\u65f6\u95f4\u5185\u4e0d\u80fd\u591a\u6b21\u8fdb\u884c\u76f8\u540c\u8bf7\u6c42\u7684\u9650\u5236\u3002 3\uff09\u52a8\u6001\u9875\u9762\u7684\u53cd\u722c\u866b \u9996\u5148\u7528Fiddler\u5bf9\u7f51\u7edc\u8bf7\u6c42\u8fdb\u884c\u5206\u6790\uff0c\u5982\u679c\u80fd\u591f\u627e\u5230ajax\u8bf7\u6c42\uff0c\u4e5f\u80fd\u5206\u6790\u51fa\u5177\u4f53\u7684\u53c2\u6570\u548c\u54cd\u5e94\u7684\u5177\u4f53\u542b\u4e49\uff0c\u6211\u4eec\u5c31\u80fd\u91c7\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u3002 \u76f4\u63a5\u5229\u7528requests\u6216\u8005urllib2\u6a21\u62dfajax\u8bf7\u6c42\uff0c\u5bf9\u54cd\u5e94\u7684json\u8fdb\u884c\u5206\u6790\u5f97\u5230\u9700\u8981\u7684\u6570\u636e\u3002 \u4f46\u662f\u6709\u4e9b\u7f51\u7ad9\u628aajax\u8bf7\u6c42\u7684\u6240\u6709\u53c2\u6570\u5168\u90e8\u52a0\u5bc6\u4e86\uff0c\u6ca1\u529e\u6cd5\u6784\u9020\u81ea\u5df1\u6240\u9700\u8981\u7684\u6570\u636e\u7684\u8bf7\u6c42\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u7528selenium+phantomJS\uff0c\u8c03\u7528\u6d4f\u89c8\u5668\u5185\u6838\uff0c\u5e76\u5229\u7528phantomJS\u6267\u884cjs\u6765\u6a21\u62df\u4eba\u4e3a\u64cd\u4f5c\u4ee5\u53ca\u89e6\u53d1\u9875\u9762\u4e2d\u7684js\u811a\u672c\u3002","title":"031 python\u81ea\u6d4b100\u9898"},{"location":"python\u5b66\u4e60/031python\u81ea\u6d4b100\u9898/#next","text":"next (odds) 1 next (odds) 2 next (odds) 3 next (odds) 4 next (odds) 5 Q65.\u8bf7\u8bf4\u8bf4\u751f\u6210\u5668\u548c\u8fed\u4ee3\u5668\u4e4b\u95f4\u7684\u533a\u522b 1\uff09\u5728\u4f7f\u7528\u751f\u6210\u5668\u65f6\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff1b\u5728\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u5185\u7f6e\u51fd\u6570iter()\u548cnext()\uff1b 2\uff09\u5728\u751f\u6210\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5173\u952e\u5b57\u2018yield\u2019\u6765\u6bcf\u6b21\u751f\u6210/\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff1b 3\uff09\u751f\u6210\u5668\u4e2d\u6709\u591a\u5c11\u2018yield\u2019\u8bed\u53e5\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff1b 4\uff09\u6bcf\u6b21\u2018yield\u2019\u6682\u505c\u5faa\u73af\u65f6\uff0c\u751f\u6210\u5668\u4f1a\u4fdd\u5b58\u672c\u5730\u53d8\u91cf\u7684\u72b6\u6001\u3002\u800c\u8fed\u4ee3\u5668\u5e76\u4e0d\u4f1a\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u8fed\u4ee3\uff1b 5\uff09\u4f7f\u7528\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u4f60\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u4f46\u65e0\u6cd5\u5b9e\u73b0\u751f\u6210\u5668\uff1b 6\uff09\u751f\u6210\u5668\u8fd0\u884c\u901f\u5ea6\u5feb\uff0c\u8bed\u6cd5\u7b80\u6d01\uff0c\u66f4\u7b80\u5355\uff1b 7\uff09\u8fed\u4ee3\u5668\u66f4\u80fd\u8282\u7ea6\u5185\u5b58\u3002 Q66.\u51fd\u6570zip()\u7684\u662f\u5e72\u561b\u7684\uff1f Python\u65b0\u624b\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u51fd\u6570\u4e0d\u662f\u5f88\u719f\u6089\uff0czip()\u53ef\u4ee5\u8fd4\u56de\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\u3002 list(zip(['a','b','c'],[1,2,3])) [(\u2018a\u2019,1), (\u2018b\u2019, 2), (\u2018c\u2019, 3)] \u5728\u8fd9\u91cczip()\u51fd\u6570\u5bf9\u4e24\u4e2a\u5217\u8868\u4e2d\u7684\u6570\u636e\u9879\u8fdb\u884c\u4e86\u914d\u5bf9\uff0c\u5e76\u7528\u5b83\u4eec\u521b\u5efa\u4e86\u5143\u7ec4\u3002 Q67.\u5982\u4f55\u7528Python\u627e\u51fa\u4f60\u76ee\u524d\u5728\u54ea\u4e2a\u76ee\u5f55\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570/\u65b9\u6cd5getcwd()\uff0c\u4ece\u6a21\u5757os\u4e2d\u5c06\u5176\u5bfc\u5165\u3002 import os os.getcwd() 'C:\\Users\\37410\\Desktop\\\u4ee3\u7801' Q68.\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1f \u8fd9\u4e2a\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5728\u6211\u4eec\u60f3\u8ba1\u7b97\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u4e0a\u8c03\u7528\u51fd\u6570len()\u5373\u53ef\u3002 len('Data 123') 8 Q69.\u5982\u4f55\u4ece\u5217\u8868\u4e2d\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\uff1f \u4ece\u5217\u8868\u4e2d\u5220\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\u6216obj\u3002 list.pop\uff08obj = list [-1]\uff09 Q70.\u89e3\u91ca\u4e00\u4e9b\u5728Python\u4e2d\u5b9e\u73b0\u9762\u5411\u529f\u80fd\u7684\u7f16\u7a0b\u7684\u65b9\u6cd5 \u6709\u65f6\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u904d\u5386\u5217\u8868\u65f6\uff0c\u4e00\u4e9b\u65b9\u6cd5\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002 1\uff09filter\uff08\uff09 \u8fc7\u6ee4\u5668\u5141\u8bb8\u6211\u4eec\u6839\u636e\u6761\u4ef6\u903b\u8f91\u8fc7\u6ee4\u4e00\u4e9b\u503c\u3002 list\uff08filter\uff08lambda x\uff1ax> 5\uff0crange\uff088\uff09\uff09\uff09 [6,7] 2\uff09map\uff08\uff09 Map\u5c06\u51fd\u6570\u5e94\u7528\u4e8eiterable\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 list\uff08map\uff08lambda x\uff1ax ** 2\uff0crange\uff088\uff09\uff09\uff09 [0,1,4,9,16,25,36,49] 3\uff09reduce\uff08\uff09 \u5728\u6211\u4eec\u8fbe\u5230\u5355\u4e2a\u503c\u4e4b\u524d\uff0cReduce\u4f1a\u53cd\u590d\u51cf\u5c11\u5e8f\u5217\u987a\u5e8f\u3002 from functools import reduce reduce\uff08lambda x\uff0cy\uff1axy\uff0c[1,2,3,4,5]\uff09 -13 Q71.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8ba1\u7b97\u6570\u5b57\u5217\u8868\u7684\u603b\u548c def list_sum\uff08num_List\uff09\uff1a\u5982\u679clen\uff08num_List\uff09== 1\uff1a return num_List [0] else\uff1a return num_List [0] + list_sum\uff08num_List [1\uff1a]\uff09 print\uff08list_sum\uff08[3,4,5,6,11]\uff09\uff09 29 Q72.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u968f\u673a\u884c import random def random_line\uff08fname\uff09\uff1a lines = open\uff08fname\uff09.read\uff08\uff09.splitlines\uff08\uff09 return random.choice\uff08lines\uff09 print\uff08random_line\uff08'test.txt'\uff09\uff09 Q73.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u8ba1\u7b97\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u884c\u6570 def file_lengthy\uff08fname\uff09\uff1a open\uff08fname\uff09as f\uff1a for i\uff0cl in enumerate\uff08f\uff09\uff1a pass return i + 1 print\uff08\u201cfile of lines\uff1a\u201d\uff0cfile_lengthy\uff08\u201ctest.txt\u201d\uff09\uff09 Q74.\u8bf7\u5199\u4e00\u4e2aPython\u903b\u8f91\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u6570\u91cf import os os.chdir('C:\\Users\\lifei\\Desktop') with open('Today.txt') as today: count=0 for i in today.read(): if i.isupper(): count+=1 print(count) Q75.\u5728Python\u4e2d\u4e3a\u6570\u503c\u6570\u636e\u96c6\u7f16\u5199\u6392\u5e8f\u7b97\u6cd5 \u4ee5\u4e0b\u4ee3\u7801\u53ef\u7528\u4e8e\u5728Python\u4e2d\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f\uff1a list = [\"1\", \"4\", \"0\", \"6\", \"9\"] list = [int(i) for i in list] list.sort() print (list) Django\u6709\u5173 Q76.\u8bf7\u89e3\u91ca\u6216\u63cf\u8ff0\u4e00\u4e0bDjango\u7684\u67b6\u6784 \u5bf9\u4e8eDjango\u6846\u67b6\u9075\u5faaMVC\u8bbe\u8ba1\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd\uff1aMVT\uff0cM\u5168\u62fc\u4e3aModel\uff0c\u4e0eMVC\u4e2d\u7684M\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u6570\u636e\u5904\u7406\uff0c\u5185\u5d4c\u4e86ORM\u6846\u67b6\uff1bV\u5168\u62fc\u4e3aView\uff0c\u4e0eMVC\u4e2d\u7684C\u529f\u80fd\u76f8\u540c\uff0c\u63a5\u6536HttpRequest\uff0c\u4e1a\u52a1\u5904\u7406\uff0c\u8fd4\u56deHttpResponse\uff1bT\u5168\u62fc\u4e3aTemplate\uff0c\u4e0eMVC\u4e2d\u7684V\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u5c01\u88c5\u6784\u9020\u8981\u8fd4\u56de\u7684html\uff0c\u5185\u5d4c\u4e86\u6a21\u677f\u5f15\u64ce Q77.Django\uff0cPyramid\u548cFlask\u4e4b\u95f4\u7684\u5dee\u5f02 Flask\u662f\u4e00\u4e2a\u201c\u5fae\u6846\u67b6\u201d\uff0c\u4e3b\u8981\u7528\u4e8e\u5177\u6709\u66f4\u7b80\u5355\u8981\u6c42\u7684\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u3002Pyramid\u9002\u7528\u4e8e\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u7075\u6d3b\u6027\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4e3a\u4ed6\u4eec\u7684\u9879\u76ee\u4f7f\u7528\u6570\u636e\u5e93\uff0cURL\u7ed3\u6784\uff0c\u6a21\u677f\u6837\u5f0f\u7b49\u6b63\u786e\u7684\u5de5\u5177\u3002Django\u4e5f\u53ef\u4ee5\u50cfPyramid\u4e00\u6837\u7528\u4e8e\u66f4\u5927\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5305\u62ec\u4e00\u4e2aORM\u3002 Q78.\u8ba8\u8bbaDjango\u67b6\u6784 Django\u67b6\u6784 \u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u6a21\u578b\uff0c\u89c6\u56fe\u548c\u6a21\u677f\uff0c\u7136\u540e\u5c06\u5176\u6620\u5c04\u5230URL\uff0cDjango\u53ef\u4ee5\u4e3a\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002 Q79.\u89e3\u91ca\u5982\u4f55\u5728Django\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93 Django\u4f7f\u7528SQLite\u4f5c\u4e3a\u9ed8\u8ba4\u6570\u636e\u5e93\uff0c\u5b83\u5c06\u6570\u636e\u4f5c\u4e3a\u5355\u4e2a\u6587\u4ef6\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002 \u5982\u8fc7\u4f60\u6709\u6570\u636e\u5e93\u670d\u52a1\u5668-PostgreSQL\uff0cMySQL\uff0cOracle\uff0cMSSQL-\u5e76\u4e14\u60f3\u8981\u4f7f\u7528\u5b83\u800c\u4e0d\u662fSQLite\uff0c\u90a3\u4e48\u4f7f\u7528\u6570\u636e\u5e93\u7684\u7ba1\u7406\u5de5\u5177\u4e3a\u4f60\u7684Django\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\u3002 \u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5728\u60a8\u7684\uff08\u7a7a\uff09\u6570\u636e\u5e93\u5230\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u544a\u8bc9Django\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u8fd9\u662f\u9879\u76ee\u7684settings.py\u6587\u4ef6\u7684\u6765\u6e90\u3002 \u6211\u4eec\u5c06\u4ee5\u4e0b\u4ee3\u7801\u884c\u6dfb\u52a0\u5230setting.py\u6587\u4ef6\u4e2d\uff1a DATABASES ={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), Q80.\u4e3e\u4f8b\u8bf4\u660e\u5982\u4f55\u5728Django\u4e2d\u7f16\u5199VIEW\uff1f \u8fd9\u662f\u6211\u4eec\u5728Django\u4e2d\u4f7f\u7528write\u4e00\u4e2a\u89c6\u56fe\u7684\u65b9\u6cd5\uff1a from django.http import HttpResponse import datetime def Current_datetime(request): now =datetime.datetime.now() html =\" It is now %s \"%now return HttpResponse(html) \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u4f5c\u4e3aHTML\u6587\u6863\u3002 Q81.\u63d0\u5230Django\u6a21\u677f\u7684\u7ec4\u6210\u90e8\u5206\u3002 \u6a21\u677f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u672c\u6587\u4ef6\u3002\u5b83\u53ef\u4ee5\u521b\u5efa\u4efb\u4f55\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f\uff0c\u5982XML\uff0cCSV\uff0cHTML\u7b49\u3002\u6a21\u677f\u5305\u542b\u5728\u8bc4\u4f30\u6a21\u677f\u65f6\u66ff\u6362\u4e3a\u503c\u7684\u53d8\u91cf\u548c\u63a7\u5236\u6a21\u677f\u903b\u8f91\u7684\u6807\u8bb0\uff08\uff05tag\uff05\uff09\u3002 Q82.\u5728Django\u6846\u67b6\u4e2d\u89e3\u91ca\u4f1a\u8bdd\u7684\u4f7f\u7528\uff1f Django\u63d0\u4f9b\u7684\u4f1a\u8bdd\u5141\u8bb8\u60a8\u57fa\u4e8e\u6bcf\u4e2a\u7ad9\u70b9\u8bbf\u95ee\u8005\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u3002Django\u901a\u8fc7\u5728\u5ba2\u6237\u7aef\u653e\u7f6e\u4f1a\u8bddID cookie\u5e76\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u6240\u6709\u76f8\u5173\u6570\u636e\u6765\u62bd\u8c61\u53d1\u9001\u548c\u63a5\u6536cookie\u7684\u8fc7\u7a0b\u3002 \u6240\u4ee5\u6570\u636e\u672c\u8eab\u5e76\u4e0d\u5b58\u50a8\u5728\u5ba2\u6237\u7aef\u3002\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u5f88\u597d\u3002 Q83.\u5217\u51faDjango\u4e2d\u7684\u7ee7\u627f\u6837\u5f0f \u5728Django\u4e2d\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u7ee7\u627f\u6837\u5f0f\uff1a \u62bd\u8c61\u57fa\u7c7b\uff1a\u5f53\u4f60\u53ea\u5e0c\u671b\u7236\u7c7b\u5305\u542b\u800c\u4f60\u4e0d\u60f3\u4e3a\u6bcf\u4e2a\u5b50\u6a21\u578b\u952e\u5165\u7684\u4fe1\u606f\u65f6\u4f7f\u7528\uff1b \u591a\u8868\u7ee7\u627f\uff1a\u5bf9\u73b0\u6709\u6a21\u578b\u8fdb\u884c\u5b50\u7c7b\u5316\uff0c\u5e76\u4e14\u9700\u8981\u6bcf\u4e2a\u6a21\u578b\u90fd\u6709\u81ea\u5df1\u7684\u6570\u636e\u5e93\u8868\u3002 \u4ee3\u7406\u6a21\u578b\uff1a\u53ea\u60f3\u4fee\u6539\u6a21\u578b\u7684Python\u7ea7\u522b\u884c\u4e3a\uff0c\u800c\u65e0\u9700\u66f4\u6539\u6a21\u578b\u7684\u5b57\u6bb5\u3002 \u6570\u636e\u5206\u6790 Q84.\u4ec0\u4e48\u662fPython\u4e2d\u7684map\u51fd\u6570\uff1f map\u51fd\u6570\u6267\u884c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ed9\u51fa\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7ed9\u51fa\u7684iterable\u7684\u6240\u6709\u5143\u7d20\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u51fd\u6570\u63a5\u53d7\u591a\u4e8e1\u4e2a\u53c2\u6570\uff0c\u5219\u7ed9\u51fa\u4e86\u8bb8\u591a\u8fed\u4ee3\u3002 Q85.\u5982\u4f55\u5728NumPy\u6570\u7ec4\u4e2d\u83b7\u5f97N\u4e2a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5728NumPy\u6570\u7ec4\u4e2d\u83b7\u5f97N\u4e2a\u6700\u5927\u503c\u7684\u7d22\u5f15\uff1a importnumpy as np arr =np.array([1, 3, 2, 4, 5]) print(arr.argsort()[-3:][::-1]) 4 3 1 Q86.\u5982\u4f55\u7528Python/ NumPy\u8ba1\u7b97\u767e\u5206\u4f4d\u6570\uff1f importnumpy as np a =np.array([1,2,3,4,5] p =np.percentile(a, 50) #Returns 50 th percentile, e.g. median print(p) 3 Q87.NumPy\u9635\u5217\u5728\uff08\u5d4c\u5957\uff09Python\u5217\u8868\u4e2d\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff1f 1\uff09Python\u7684\u5217\u8868\u662f\u9ad8\u6548\u7684\u901a\u7528\u5bb9\u5668\u3002 \u5b83\u4eec\u652f\u6301\uff08\u76f8\u5f53\uff09\u6709\u6548\u7684\u63d2\u5165\uff0c\u5220\u9664\uff0c\u8ffd\u52a0\u548c\u8fde\u63a5\uff0cPython\u7684\u5217\u8868\u63a8\u5bfc\u4f7f\u5b83\u4eec\u6613\u4e8e\u6784\u9020\u548c\u64cd\u4f5c\u3002 2\uff09\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027 \u5b83\u4eec\u4e0d\u652f\u6301\u5143\u7d20\u5316\u52a0\u6cd5\u548c\u4e58\u6cd5\u7b49\u201c\u5411\u91cf\u5316\u201d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740Python\u5fc5\u987b\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u5e76\u4e14\u5fc5\u987b\u5728\u64cd\u4f5c\u65f6\u6267\u884c\u7c7b\u578b\u8c03\u5ea6\u4ee3\u7801\u5728\u6bcf\u4e2a\u5143\u7d20\u4e0a\u3002 3\uff09NumPy\u4e0d\u4ec5\u6548\u7387\u66f4\u9ad8\uff0c\u4e5f\u66f4\u65b9\u4fbf \u4f60\u53ef\u4ee5\u83b7\u5f97\u5927\u91cf\u7684\u77e2\u91cf\u548c\u77e9\u9635\u8fd0\u7b97\uff0c\u8fd9\u6709\u65f6\u53ef\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u3002 4\uff09NumPy\u6570\u7ec4\u66f4\u5feb \u4f60\u53ef\u4ee5\u4f7f\u7528NumPy\uff0cFFT\uff0c\u5377\u79ef\uff0c\u5feb\u901f\u641c\u7d22\uff0c\u57fa\u672c\u7edf\u8ba1\uff0c\u7ebf\u6027\u4ee3\u6570\uff0c\u76f4\u65b9\u56fe\u7b49\u5185\u7f6e\u3002 Q88.\u89e3\u91ca\u88c5\u9970\u5668\u7684\u7528\u6cd5 Python\u4e2d\u7684\u88c5\u9970\u5668\u7528\u4e8e\u4fee\u6539\u6216\u6ce8\u5165\u51fd\u6570\u6216\u7c7b\u4e2d\u7684\u4ee3\u7801\u3002\u4f7f\u7528\u88c5\u9970\u5668\uff0c\u60a8\u53ef\u4ee5\u5305\u88c5\u7c7b\u6216\u51fd\u6570\u65b9\u6cd5\u8c03\u7528\uff0c\u4ee5\u4fbf\u5728\u6267\u884c\u539f\u59cb\u4ee3\u7801\u4e4b\u524d\u6216\u4e4b\u540e\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u3002\u88c5\u9970\u5668\u53ef\u7528\u4e8e\u68c0\u67e5\u6743\u9650\uff0c\u4fee\u6539\u6216\u8ddf\u8e2a\u4f20\u9012\u7ed9\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5c06\u8c03\u7528\u8bb0\u5f55\u5230\u7279\u5b9a\u65b9\u6cd5\u7b49 Q89.NumPy\u548cSciPy\u6709\u4ec0\u4e48\u533a\u522b\uff1f 1\uff09\u5728\u7406\u60f3\u7684\u4e16\u754c\u4e2d\uff0cNumPy\u53ea\u5305\u542b\u6570\u7ec4\u6570\u636e\u7c7b\u578b\u548c\u6700\u57fa\u672c\u7684\u64cd\u4f5c\uff1a\u7d22\u5f15\uff0c\u6392\u5e8f\uff0c\u91cd\u65b0\u6574\u5f62\uff0c\u57fa\u672c\u5143\u7d20\u51fd\u6570\u7b49\u3002 2\uff09\u6240\u6709\u6570\u5b57\u4ee3\u7801\u90fd\u5c06\u9a7b\u7559\u5728SciPy\u4e2d\u3002\u7136\u800c\uff0cNumPy\u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\u662f\u517c\u5bb9\u6027\uff0c\u56e0\u6b64NumPy\u8bd5\u56fe\u4fdd\u7559\u5176\u524d\u4efb\u4efb\u4f55\u4e00\u4e2a\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\u3002 3\uff09\u56e0\u6b64\uff0cNumPy\u5305\u542b\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u51fd\u6570\uff0c\u5373\u4f7f\u5b83\u4eec\u66f4\u6070\u5f53\u5730\u5c5e\u4e8eSciPy\u3002\u65e0\u8bba\u5982\u4f55\uff0cSciPy\u5305\u542b\u66f4\u591a\u5168\u529f\u80fd\u7684\u7ebf\u6027\u4ee3\u6570\u6a21\u5757\u7248\u672c\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u6570\u503c\u7b97\u6cd5\u3002 4\uff09\u5982\u679c\u4f60\u4f7f\u7528python\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\uff0c\u4f60\u5e94\u8be5\u5b89\u88c5NumPy\u548cSciPy\u3002\u5927\u591a\u6570\u65b0\u529f\u80fd\u5c5e\u4e8eSciPy\u800c\u975eNumPy\u3002 Q90.\u5982\u4f55\u4f7f\u7528NumPy / SciPy\u5236\u4f5c3D\u7ed8\u56fe/\u53ef\u89c6\u5316\uff1f \u4e0e2D\u7ed8\u56fe\u4e00\u6837\uff0c3D\u56fe\u5f62\u8d85\u51fa\u4e86NumPy\u548cSciPy\u7684\u8303\u56f4\uff0c\u4f46\u5c31\u50cf2D\u60c5\u51b5\u4e00\u6837\uff0c\u5b58\u5728\u4e0eNumPy\u96c6\u6210\u7684\u5305\u3002Matplotlib\u5728mplot3d\u5b50\u5305\u4e2d\u63d0\u4f9b\u57fa\u672c\u76843D\u7ed8\u56fe\uff0c\u800cMayavi\u4f7f\u7528\u529f\u80fd\u5f3a\u5927\u7684VTK\u5f15\u64ce\u63d0\u4f9b\u5404\u79cd\u9ad8\u8d28\u91cf\u76843D\u53ef\u89c6\u5316\u529f\u80fd\u3002 \u722c\u866b\u548cscary\u6846\u67b6 Q91.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f 1) scrapy\u662f\u4e00\u4e2aPython\u722c\u866b\u6846\u67b6\uff0c\u722c\u53d6\u6548\u7387\u6781\u9ad8\uff0c\u5177\u6709\u9ad8\u5ea6\u5b9a\u5236\u6027\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u5206\u5e03\u5f0f\u3002 \u800cscrapy-redis\u4e00\u5957\u57fa\u4e8eredis\u6570\u636e\u5e93\u3001\u8fd0\u884c\u5728scrapy\u6846\u67b6\u4e4b\u4e0a\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u8ba9scrapy\u652f\u6301\u5206\u5e03\u5f0f\u7b56\u7565\uff0cSlaver\u7aef\u5171\u4eabMaster\u7aefredis\u6570\u636e\u5e93\u91cc\u7684item\u961f\u5217\u3001\u8bf7\u6c42\u961f\u5217\u548c\u8bf7\u6c42\u6307\u7eb9\u96c6\u5408\u3002 2) \u56e0\u4e3aredis\u652f\u6301\u4e3b\u4ece\u540c\u6b65\uff0c\u800c\u4e14\u6570\u636e\u90fd\u662f\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u6240\u4ee5\u57fa\u4e8eredis\u7684\u5206\u5e03\u5f0f\u722c\u866b\uff0c\u5bf9\u8bf7\u6c42\u548c\u6570\u636e\u7684\u9ad8\u9891\u8bfb\u53d6\u6548\u7387\u975e\u5e38\u9ad8\u3002 Q92.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f Python\u81ea\u5e26\uff1aurllib\uff0curllib2 \u7b2c \u4e09 \u65b9\uff1arequests \u6846 \u67b6\uff1aScrapy urllib\u548curllib2\u6a21\u5757\u90fd\u505a\u4e0e\u8bf7\u6c42URL\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\u3002 urllib2.\uff1aurllib2.urlopen\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u5bf9\u8c61\u6216\u8005url\uff0c\uff08\u5728\u63a5\u53d7Request\u5bf9\u8c61\u65f6\u5019\uff0c\u5e76\u4ee5\u6b64\u53ef\u4ee5\u6765\u8bbe\u7f6e\u4e00\u4e2aURL \u7684headers\uff09\uff0curllib.urlopen\u53ea\u63a5\u6536\u4e00\u4e2aurl urllib \u6709urlencode,urllib2\u6ca1\u6709\uff0c\u56e0\u6b64\u603b\u662furllib\uff0curllib2\u5e38\u4f1a\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0 scrapy\u662f\u5c01\u88c5\u8d77\u6765\u7684\u6846\u67b6\uff0c\u4ed6\u5305\u542b\u4e86\u4e0b\u8f7d\u5668\uff0c\u89e3\u6790\u5668\uff0c\u65e5\u5fd7\u53ca\u5f02\u5e38\u5904\u7406\uff0c\u57fa\u4e8e\u591a\u7ebf\u7a0b\uff0c twisted\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u5355\u4e2a\u7f51\u7ad9\u7684\u722c\u53d6\u5f00\u53d1\uff0c\u6709\u4f18\u52bf\uff1b\u4f46\u662f\u5bf9\u4e8e\u591a\u7f51\u7ad9\u722c\u53d6 100\u4e2a\u7f51\u7ad9\uff0c\u5e76\u53d1\u53ca\u5206\u5e03\u5f0f\u5904\u7406\u65b9\u9762\uff0c\u4e0d\u591f\u7075\u6d3b\uff0c\u4e0d\u4fbf\u8c03\u6574\u4e0e\u62ec\u5c55\u3002 request \u662f\u4e00\u4e2aHTTP\u5e93\uff0c \u5b83\u53ea\u662f\u7528\u6765\uff0c\u8fdb\u884c\u8bf7\u6c42\uff0c\u5bf9\u4e8eHTTP\u8bf7\u6c42\uff0c\u4ed6\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5e93\uff0c\u4e0b\u8f7d\uff0c\u89e3\u6790\u5168\u90e8\u81ea\u5df1\u5904\u7406\uff0c\u7075\u6d3b\u6027\u66f4\u9ad8\uff0c\u9ad8\u5e76\u53d1\u4e0e\u5206\u5e03\u5f0f\u90e8\u7f72\u4e5f\u975e\u5e38\u7075\u6d3b\uff0c\u5bf9\u4e8e\u529f\u80fd\u53ef\u4ee5\u66f4\u597d\u5b9e\u73b0\u3002 Q93.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b\uff1f\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u4e3b\u8981 MyISAM \u4e0e InnoDB \u4e24\u4e2a\u5f15\u64ce\uff0c\u5176\u4e3b\u8981\u533a\u522b\u5982\u4e0b\uff1a 1\uff09InnoDB \u652f\u6301\u4e8b\u52a1\uff0cMyISAM \u4e0d\u652f\u6301\uff0c\u8fd9\u4e00\u70b9\u662f\u975e\u5e38\u4e4b\u91cd\u8981\u3002\u4e8b\u52a1\u662f\u4e00\u79cd\u9ad8 \u7ea7\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5982\u5728\u4e00\u4e9b\u5217\u589e\u5220\u6539\u4e2d\u53ea\u8981\u54ea\u4e2a\u51fa\u9519\u8fd8\u53ef\u4ee5\u56de\u6eda\u8fd8\u539f\uff0c\u800c MyISAM \u5c31\u4e0d\u53ef\u4ee5\u4e86\uff1b 2)MyISAM \u9002\u5408\u67e5\u8be2\u4ee5\u53ca\u63d2\u5165\u4e3a\u4e3b\u7684\u5e94\u7528\uff0cInnoDB \u9002\u5408\u9891\u7e41\u4fee\u6539\u4ee5\u53ca\u6d89\u53ca\u5230 \u5b89\u5168\u6027\u8f83\u9ad8\u7684\u5e94\u7528\uff1b 3)InnoDB \u652f\u6301\u5916\u952e\uff0cMyISAM \u4e0d\u652f\u6301\uff1b 4)MyISAM \u662f\u9ed8\u8ba4\u5f15\u64ce\uff0cInnoDB \u9700\u8981\u6307\u5b9a\uff1b 5)InnoDB \u4e0d\u652f\u6301 FULLTEXT \u7c7b\u578b\u7684\u7d22\u5f15\uff1b 6)InnoDB \u4e2d\u4e0d\u4fdd\u5b58\u8868\u7684\u884c\u6570\uff0c\u5982 select count(*) from table \u65f6\uff0cInnoDB\uff1b\u9700\u8981 \u626b\u63cf\u4e00\u904d\u6574\u4e2a\u8868\u6765\u8ba1\u7b97\u6709\u591a\u5c11\u884c\uff0c\u4f46\u662f MyISAM \u53ea\u8981\u7b80\u5355\u7684\u8bfb\u51fa\u4fdd\u5b58\u597d\u7684\u884c\u6570\u5373 \u53ef\u3002\u6ce8\u610f\u7684\u662f\uff0c\u5f53 count(*)\u8bed\u53e5\u5305\u542b where \u6761\u4ef6\u65f6 MyISAM \u4e5f\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\uff1b 7)\u5bf9\u4e8e\u81ea\u589e\u957f\u7684\u5b57\u6bb5\uff0cInnoDB \u4e2d\u5fc5\u987b\u5305\u542b\u53ea\u6709\u8be5\u5b57\u6bb5\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u5728 MyISAM \u8868\u4e2d\u53ef\u4ee5\u548c\u5176\u4ed6\u5b57\u6bb5\u4e00\u8d77\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff1b 8)\u6e05\u7a7a\u6574\u4e2a\u8868\u65f6\uff0cInnoDB \u662f\u4e00\u884c\u4e00\u884c\u7684\u5220\u9664\uff0c\u6548\u7387\u975e\u5e38\u6162\u3002MyISAM \u5219\u4f1a\u91cd \u5efa\u8868\uff1b 9)InnoDB \u652f\u6301\u884c\u9501\uff08\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u9501\u6574\u8868\uff0c\u5982 update table set a=1 where user like '%lee%' Q94.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f \u4ecestart_urls\u91cc\u83b7\u53d6\u7b2c\u4e00\u6279url\u5e76\u53d1\u9001\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7531\u5f15\u64ce\u4ea4\u7ed9\u8c03\u5ea6\u5668\u5165\u8bf7\u6c42\u961f\u5217\uff0c\u83b7\u53d6\u5b8c\u6bd5\u540e\uff0c \u8c03\u5ea6\u5668\u5c06\u8bf7\u6c42\u961f\u5217\u91cc\u7684\u8bf7\u6c42\u4ea4\u7ed9\u4e0b\u8f7d\u5668\u53bb\u83b7\u53d6\u8bf7\u6c42\u5bf9\u5e94\u7684\u54cd\u5e94\u8d44\u6e90\uff0c\u5e76\u5c06\u54cd\u5e94\u4ea4\u7ed9\u81ea\u5df1\u7f16\u5199\u7684\u89e3\u6790\u65b9\u6cd5\u505a\u63d0\u53d6\u5904\u7406\uff1a 1) \u5982\u679c\u63d0\u53d6\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u5219\u4ea4\u7ed9\u7ba1\u9053\u6587\u4ef6\u5904\u7406\uff1b 2)\u5982\u679c\u63d0\u53d6\u51faurl\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u7684\u6b65\u9aa4\uff08\u53d1\u9001url\u8bf7\u6c42\uff0c\u5e76\u7531\u5f15\u64ce\u5c06\u8bf7\u6c42\u4ea4\u7ed9\u8c03\u5ea6\u5668\u5165\u961f\u5217...)\uff0c\u76f4\u5230\u8bf7\u6c42\u961f\u5217\u91cc\u6ca1\u6709\u8bf7\u6c42\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002 Q95.\u4ec0\u4e48\u662f\u5173\u8054\u67e5\u8be2\uff0c\u6709\u54ea\u4e9b\uff1f \u5c06\u591a\u4e2a\u8868\u8054\u5408\u8d77\u6765\u8fdb\u884c\u67e5\u8be2\uff0c\u4e3b\u8981\u6709\u5185\u8fde\u63a5\u3001\u5de6\u8fde\u63a5\u3001\u53f3\u8fde\u63a5\u3001\u5168\u8fde\u63a5\uff08\u5916\u8fde\u63a5\uff09 Q96.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f \u4e3a\u4ec0\u4e48\uff1f IO\u5bc6\u96c6\u578b\u4ee3\u7801(\u6587\u4ef6\u5904\u7406\u3001\u7f51\u7edc\u722c\u866b\u7b49)\uff0c\u591a\u7ebf\u7a0b\u80fd\u591f\u6709\u6548\u63d0\u5347\u6548\u7387(\u5355\u7ebf\u7a0b\u4e0b\u6709IO\u64cd\u4f5c\u4f1a\u8fdb\u884cIO\u7b49\u5f85\uff0c\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u6d6a\u8d39\uff0c \u800c\u5f00\u542f\u591a\u7ebf\u7a0b\u80fd\u5728\u7ebf\u7a0bA\u7b49\u5f85\u65f6\uff0c\u81ea\u52a8\u5207\u6362\u5230\u7ebf\u7a0bB\uff0c\u53ef\u4ee5\u4e0d\u6d6a\u8d39CPU\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u80fd\u63d0\u5347\u7a0b\u5e8f\u6267\u884c\u6548\u7387)\u3002 \u5728\u5b9e\u9645\u7684\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u65e2\u8003\u8651\u7f51\u901f\u548c\u54cd\u5e94\u7684\u95ee\u9898\uff0c\u4e5f\u9700\u8981\u8003\u8651\u81ea\u8eab\u673a\u5668\u7684\u786c\u4ef6\u60c5\u51b5\u6765\u8bbe\u7f6e\u591a\u8fdb\u7a0b\u6216\u591a\u7ebf\u7a0b\u3002 Q97.\u6570\u636e\u5e93\u7684\u4f18\u5316\uff1f 1)\u4f18\u5316\u7d22\u5f15\u3001SQL \u8bed\u53e5\u3001\u5206\u6790\u6162\u67e5\u8be2\uff1b 2)\u4f18\u5316\u786c\u4ef6\uff1b\u91c7\u7528SSD\uff0c\u4f7f\u7528\u78c1\u76d8\u961f\u5217\u6280\u672f(RAID0,RAID1,RDID5)\u7b49\uff1b 3)\u91c7\u7528MySQL \u5185\u90e8\u81ea\u5e26\u7684\u8868\u5206\u533a\u6280\u672f\uff0c\u628a\u6570\u636e\u5206\u5c42\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u80fd\u591f\u63d0\u9ad8\u78c1 \u76d8\u7684\u8bfb\u53d6\u6548\u7387\uff1b 4)\u9009\u62e9\u5408\u9002\u7684\u8868\u5f15\u64ce\uff0c\u53c2\u6570\u4e0a\u7684\u4f18\u5316\uff1b 5)\u8fdb\u884c\u67b6\u6784\u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u9759\u6001\u5316\u548c\u5206\u5e03\u5f0f\uff1b 6)\u91c7\u7528\u66f4\u5feb\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u4f8b\u5982 NoSQL\u5b58\u50a8\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e Q98.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f 1)ip 2)\u5e26\u5bbd 3\uff09cpu 4\uff09io Q99.\u722c\u866b\u8fc7\u7a0b\u4e2d\u9a8c\u8bc1\u7801\u600e\u4e48\u5904\u7406\uff1f 1)scrapy\u81ea\u5e26 2)\u4ed8\u8d39\u63a5\u53e3 Q100.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f 1\uff09\u901a\u8fc7Headers\u53cd\u722c\u866b \u4ece\u7528\u6237\u8bf7\u6c42\u7684Headers\u53cd\u722c\u866b\u662f\u6700\u5e38\u89c1\u7684\u53cd\u722c\u866b\u7b56\u7565\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u722c\u866b\u4e2d\u6dfb\u52a0Headers\uff0c\u5c06\u6d4f\u89c8\u5668\u7684User-Agent\u590d\u5236\u5230\u722c\u866b\u7684Headers\u4e2d\uff1b\u6216\u8005\u5c06Referer\u503c\u4fee\u6539\u4e3a\u76ee\u6807\u7f51\u7ad9\u57df\u540d\u3002 2\uff09\u57fa\u4e8e\u7528\u6237\u884c\u4e3a\u53cd\u722c\u866b \u901a\u8fc7\u68c0\u6d4b\u7528\u6237\u884c\u4e3a\uff0c\u4f8b\u5982\u540c\u4e00IP\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u8bbf\u95ee\u540c\u4e00\u9875\u9762\uff0c\u6216\u8005\u540c\u4e00\u8d26\u6237\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\u3002 \u5927\u591a\u6570\u7f51\u7ad9\u90fd\u662f\u524d\u4e00\u79cd\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f7f\u7528IP\u4ee3\u7406\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002 \u53ef\u4ee5\u4e13\u95e8\u5199\u4e00\u4e2a\u722c\u866b\uff0c\u722c\u53d6\u7f51\u4e0a\u516c\u5f00\u7684\u4ee3\u7406ip\uff0c\u68c0\u6d4b\u540e\u5168\u90e8\u4fdd\u5b58\u8d77\u6765\u3002 \u6709\u4e86\u5927\u91cf\u4ee3\u7406ip\u540e\u53ef\u4ee5\u6bcf\u8bf7\u6c42\u51e0\u6b21\u66f4\u6362\u4e00\u4e2aip\uff0c\u8fd9\u5728requests\u6216\u8005urllib2\u4e2d\u5f88\u5bb9\u6613\u505a\u5230\uff0c\u8fd9\u6837\u5c31\u80fd\u5f88\u5bb9\u6613\u7684\u7ed5\u8fc7\u7b2c\u4e00\u79cd\u53cd\u722c\u866b\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5728\u6bcf\u6b21\u8bf7\u6c42\u540e\u968f\u673a\u95f4\u9694\u51e0\u79d2\u518d\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bf7\u6c42\u3002 \u6709\u4e9b\u6709\u903b\u8f91\u6f0f\u6d1e\u7684\u7f51\u7ad9\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u51e0\u6b21\uff0c\u9000\u51fa\u767b\u5f55\uff0c\u91cd\u65b0\u767b\u5f55\uff0c\u7ee7\u7eed\u8bf7\u6c42\u6765\u7ed5\u8fc7\u540c\u4e00\u8d26\u53f7\u77ed\u65f6\u95f4\u5185\u4e0d\u80fd\u591a\u6b21\u8fdb\u884c\u76f8\u540c\u8bf7\u6c42\u7684\u9650\u5236\u3002 3\uff09\u52a8\u6001\u9875\u9762\u7684\u53cd\u722c\u866b \u9996\u5148\u7528Fiddler\u5bf9\u7f51\u7edc\u8bf7\u6c42\u8fdb\u884c\u5206\u6790\uff0c\u5982\u679c\u80fd\u591f\u627e\u5230ajax\u8bf7\u6c42\uff0c\u4e5f\u80fd\u5206\u6790\u51fa\u5177\u4f53\u7684\u53c2\u6570\u548c\u54cd\u5e94\u7684\u5177\u4f53\u542b\u4e49\uff0c\u6211\u4eec\u5c31\u80fd\u91c7\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u3002 \u76f4\u63a5\u5229\u7528requests\u6216\u8005urllib2\u6a21\u62dfajax\u8bf7\u6c42\uff0c\u5bf9\u54cd\u5e94\u7684json\u8fdb\u884c\u5206\u6790\u5f97\u5230\u9700\u8981\u7684\u6570\u636e\u3002 \u4f46\u662f\u6709\u4e9b\u7f51\u7ad9\u628aajax\u8bf7\u6c42\u7684\u6240\u6709\u53c2\u6570\u5168\u90e8\u52a0\u5bc6\u4e86\uff0c\u6ca1\u529e\u6cd5\u6784\u9020\u81ea\u5df1\u6240\u9700\u8981\u7684\u6570\u636e\u7684\u8bf7\u6c42\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u7528selenium+phantomJS\uff0c\u8c03\u7528\u6d4f\u89c8\u5668\u5185\u6838\uff0c\u5e76\u5229\u7528phantomJS\u6267\u884cjs\u6765\u6a21\u62df\u4eba\u4e3a\u64cd\u4f5c\u4ee5\u53ca\u89e6\u53d1\u9875\u9762\u4e2d\u7684js\u811a\u672c\u3002","title":"\u6bcf\u6b21\u60f3\u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u5c31\u8c03\u7528next()\u51fd\u6570"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/","text":"\u672c\u6587\u7814\u7a76\u7684\u4e3b\u8981\u662fpandas\u5e38\u7528\u51fd\u6570\uff0c\u5177\u4f53\u4ecb\u7ecd\u5982\u4e0b\u3002 1 import\u8bed\u53e5 \u00b6 import pandas as pd import numpy as np import matplotlib.pyplot as plt import datetime import re 2 \u6587\u4ef6\u8bfb\u53d6 \u00b6 df = pd.read_csv(path='file.csv') \u53c2\u6570\uff1aheader=None \u7528\u9ed8\u8ba4\u5217\u540d\uff0c0\uff0c1\uff0c2\uff0c3... names=['A', 'B', 'C'...] \u81ea\u5b9a\u4e49\u5217\u540d index_col='A'|['A', 'B'...] \u7ed9\u7d22\u5f15\u5217\u6307\u5b9a\u540d\u79f0\uff0c\u5982\u679c\u662f\u591a\u91cd\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f20list skiprows=[0,1,2] \u9700\u8981\u8df3\u8fc7\u7684\u884c\u53f7\uff0c\u4ece\u6587\u4ef6\u59340\u5f00\u59cb\uff0cskip_footer\u4ece\u6587\u4ef6\u5c3e\u5f00\u59cb nrows=N \u9700\u8981\u8bfb\u53d6\u7684\u884c\u6570\uff0c\u524dN\u884c chunksize=M \u8fd4\u56de\u8fed\u4ee3\u7c7b\u578bTextFileReader\uff0c\u6bcfM\u6761\u8fed\u4ee3\u4e00\u6b21\uff0c\u6570\u636e\u5360\u7528\u8f83\u5927\u5185\u5b58\u65f6\u4f7f\u7528 sep=':'\u6570\u636e\u5206\u9694\u9ed8\u8ba4\u662f','\uff0c\u6839\u636e\u6587\u4ef6\u9009\u62e9\u5408\u9002\u7684\u5206\u9694\u7b26\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u53c2\u6570\uff0c\u4f1a\u81ea\u52a8\u89e3\u6790 skip_blank_lines=False \u9ed8\u8ba4\u4e3aTrue\uff0c\u8df3\u8fc7\u7a7a\u884c\uff0c\u5982\u679c\u9009\u62e9\u4e0d\u8df3\u8fc7\uff0c\u4f1a\u586b\u5145NaN converters={'col1', func} \u5bf9\u9009\u5b9a\u5217\u4f7f\u7528\u51fd\u6570func\u8f6c\u6362\uff0c\u901a\u5e38\u8868\u793a\u7f16\u53f7\u7684\u5217\u4f1a\u4f7f\u7528\uff08\u907f\u514d\u8f6c\u6362\u6210int\uff09 dfjs = pd.read_json('file.json') \u53ef\u4ee5\u4f20\u5165json\u683c\u5f0f\u5b57\u7b26\u4e32 dfex = pd.read_excel('file.xls', sheetname=[0,1..]) \u8bfb\u53d6\u591a\u4e2asheet\u9875\uff0c\u8fd4\u56de\u591a\u4e2adf\u7684\u5b57\u5178 3 \u6570\u636e\u9884\u5904\u7406 \u00b6 df.duplicated() \u8fd4\u56de\u5404\u884c\u662f\u5426\u662f\u4e0a\u4e00\u884c\u7684\u91cd\u590d\u884c df.drop_duplicates() \u5220\u9664\u91cd\u590d\u884c\uff0c\u5982\u679c\u9700\u8981\u6309\u7167\u5217\u8fc7\u6ee4\uff0c\u53c2\u6570\u9009\u586b['col1', 'col2',...] df.fillna(0) \u7528\u5b9e\u65700\u586b\u5145na df.dropna() axis=0|1 0-index 1-column how='all'|'any' all-\u5168\u90e8\u662fNA\u624d\u5220 any-\u53ea\u8981\u6709NA\u5c31\u5168\u5220 del df['col1'] \u76f4\u63a5\u5220\u9664\u67d0\u4e00\u5217 df.drop(['col1',...], aixs=1) \u5220\u9664\u6307\u5b9a\u5217\uff0c\u4e5f\u53ef\u4ee5\u5220\u9664\u884c df.column = col_lst \u91cd\u65b0\u5236\u5b9a\u5217\u540d df.rename(index={'row1':'A'}, \u91cd\u547d\u540d\u7d22\u5f15\u540d\u548c\u5217\u540d columns={'col1':'A1'}) df.replace(dict) \u66ff\u6362df\u503c\uff0c\u524d\u540e\u503c\u53ef\u4ee5\u7528\u5b57\u5178\u8868\uff0c{1:\u2018A', '2':'B'} def get_digits(str): m = re.match(r'(\\d+(.\\d+)?)', str.decode('utf-8')) if m is not None: return float(m.groups()[0]) else: return 0 df.apply(get_digits) DataFrame.apply\uff0c\u53ea\u83b7\u53d6\u5c0f\u6570\u90e8\u5206\uff0c\u53ef\u4ee5\u9009\u5b9a\u67d0\u4e00\u5217\u6216\u884c df['col1'].map(func) Series.map\uff0c\u53ea\u5bf9\u5217\u8fdb\u884c\u51fd\u6570\u8f6c\u6362 pd.merge(df1, df2, on='col1', how='inner'\uff0csort=True) \u5408\u5e76\u4e24\u4e2aDataFrame\uff0c\u6309\u7167\u5171\u6709\u7684\u67d0\u5217\u505a\u5185\u8fde\u63a5\uff08\u4ea4\u96c6\uff09\uff0coutter\u4e3a\u5916\u8fde\u63a5\uff08\u5e76\u96c6\uff09\uff0c\u7ed3\u679c\u6392\u5e8f pd.merge(df1, df2, left_on='col1', right_on='col2') df1 df2\u6ca1\u6709\u516c\u5171\u5217\u540d\uff0c\u6240\u4ee5\u5408\u5e76\u9700\u6307\u5b9a\u4e24\u8fb9\u7684\u53c2\u8003\u5217 pd.concat([sr1, sr2, sr3,...], axis=0) \u591a\u4e2aSeries\u5806\u53e0\u6210\u591a\u884c\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u4e00\u4e2aSeries pd.concat([sr1, sr2, sr3,...], axis=1) \u591a\u4e2aSeries\u7ec4\u5408\u6210\u591a\u884c\u591a\u5217\uff0c\u7ed3\u679c\u662f\u4e00\u4e2aDataFrame\uff0c\u7d22\u5f15\u53d6\u5e76\u96c6\uff0c\u6ca1\u6709\u4ea4\u96c6\u7684\u4f4d\u7f6e\u586b\u5165\u7f3a\u7701\u503cNaN df1.combine_first(df2) \u7528df2\u7684\u6570\u636e\u8865\u5145df1\u7684\u7f3a\u7701\u503cNaN\uff0c\u5982\u679cdf2\u6709\u66f4\u591a\u884c\uff0c\u4e5f\u4e00\u5e76\u8865\u4e0a df.stack() \u5217\u65cb\u8f6c\u6210\u884c\uff0c\u4e5f\u5c31\u662f\u5217\u540d\u53d8\u4e3a\u7d22\u5f15\u540d\uff0c\u539f\u7d22\u5f15\u53d8\u6210\u591a\u5c42\u7d22\u5f15\uff0c\u7ed3\u679c\u662f\u5177\u6709\u591a\u5c42\u7d22\u5f15\u7684Series\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u6570\u636e\u96c6\u62c9\u957f df.unstack() \u5c06\u542b\u6709\u591a\u5c42\u7d22\u5f15\u7684Series\u8f6c\u6362\u4e3aDataFrame\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u6570\u636e\u96c6\u538b\u6241\uff0c\u5982\u679c\u67d0\u4e00\u5217\u5177\u6709\u8f83\u5c11\u7c7b\u522b\uff0c\u90a3\u4e48\u628a\u8fd9\u4e9b\u7c7b\u522b\u62c9\u51fa\u6765\u4f5c\u4e3a\u5217 df.pivot() \u5b9e\u9645\u4e0a\u662funstack\u7684\u5e94\u7528\uff0c\u628a\u6570\u636e\u96c6\u538b\u6241 pd.get_dummies(df['col1'], prefix='key') \u67d0\u5217\u542b\u6709\u6709\u9650\u4e2a\u503c\uff0c\u4e14\u8fd9\u4e9b\u503c\u4e00\u822c\u662f\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u56fd\u5bb6\uff0c\u501f\u9274\u4f4d\u56fe\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u628ak\u4e2a\u56fd\u5bb6\u8fd9\u4e00\u5217\u91cf\u5316\u6210k\u5217\uff0c\u6bcf\u5217\u75280\u30011\u8868\u793a 4 \u6570\u636e\u7b5b\u9009 \u00b6 df.columns \u5217\u540d\uff0c\u8fd4\u56deIndex\u7c7b\u578b\u7684\u5217\u7684\u96c6\u5408 df.index \u7d22\u5f15\u540d\uff0c\u8fd4\u56deIndex\u7c7b\u578b\u7684\u7d22\u5f15\u7684\u96c6\u5408 df.shape \u8fd4\u56detuple\uff0c\u884cx\u5217 df.head(n=N) \u8fd4\u56de\u524dN\u6761 df.tail(n=M) \u8fd4\u56de\u540eM\u6761 df.values \u503c\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4ee5numpy.ndarray\u5bf9\u8c61\u8fd4\u56de df.index DataFrame\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u4fee\u6539 df.reindex(index=['row1', 'row2',...] columns=['col1', 'col2',...]) \u6839\u636e\u65b0\u7d22\u5f15\u91cd\u65b0\u6392\u5e8f df[m:n] \u5207\u7247\uff0c\u9009\u53d6m~n-1\u884c df[df['col1'] > 1] \u9009\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u884c df.query('col1 > 1') \u9009\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u884c df.query('col1==[v1,v2,...]') df.ix[:,'col1'] \u9009\u53d6\u67d0\u4e00\u5217 df.ix['row1', 'col2'] \u9009\u53d6\u67d0\u4e00\u5143\u7d20 df.ix[:,:'col2'] \u5207\u7247\u9009\u53d6\u67d0\u4e00\u5217\u4e4b\u524d\uff08\u5305\u62eccol2\uff09\u7684\u6240\u6709\u5217 df.loc[m:n] \u83b7\u53d6\u4ecem~n\u884c\uff08\u63a8\u8350\uff09 df.iloc[m:n] \u83b7\u53d6\u4ecem~n-1\u884c df.loc[m:n-1,'col1':'coln'] \u83b7\u53d6\u4ecem n\u884c\u7684col1 coln\u5217 sr=df['col'] \u53d6\u67d0\u4e00\u5217\uff0c\u8fd4\u56deSeries sr.values Series\u7684\u503c\uff0c\u4ee5numpy.ndarray\u5bf9\u8c61\u8fd4\u56de sr.index Series\u7684\u7d22\u5f15\uff0c\u4ee5index\u5bf9\u8c61\u8fd4\u56de 5 \u6570\u636e\u8fd0\u7b97\u4e0e\u6392\u5e8f \u00b6 df.T DataFrame\u8f6c\u7f6e df1 + df2 \u6309\u7167\u7d22\u5f15\u548c\u5217\u76f8\u52a0\uff0c\u5f97\u5230\u5e76\u96c6\uff0cNaN\u586b\u5145 df1.add(df2, fill_value=0) \u7528\u5176\u4ed6\u503c\u586b\u5145 df1.add/sub//mul/div \u56db\u5219\u8fd0\u7b97\u7684\u65b9\u6cd5 df - sr DataFrame\u7684\u6240\u6709\u884c\u540c\u65f6\u51cf\u53bbSeries df * N \u6240\u6709\u5143\u7d20\u4e58\u4ee5N df.add(sr, axis=0) DataFrame\u7684\u6240\u6709\u5217\u540c\u65f6\u51cf\u53bbSeries sr.order() Series\u5347\u5e8f\u6392\u5217 df.sort_index(aixs=0, ascending=True) \u6309\u884c\u7d22\u5f15\u5347\u5e8f df.sort_index(by=['col1', 'col2'...]) \u6309\u6307\u5b9a\u5217\u4f18\u5148\u6392\u5e8f df.rank() \u8ba1\u7b97\u6392\u540drank\u503c 6 \u6570\u5b66\u7edf\u8ba1 \u00b6 sr.unique Series\u53bb\u91cd sr.value_counts() Series\u7edf\u8ba1\u9891\u7387\uff0c\u5e76\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0cDataFrame\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5 sr.describe() \u8fd4\u56de\u57fa\u672c\u7edf\u8ba1\u91cf\u548c\u5206\u4f4d\u6570 df.describe() \u6309\u5404\u5217\u8fd4\u56de\u57fa\u672c\u7edf\u8ba1\u91cf\u548c\u5206\u4f4d\u6570 df.count() \u6c42\u975eNA\u503c\u5f97\u6570\u91cf df.max() \u6c42\u6700\u5927\u503c df.min() \u6c42\u6700\u5927\u503c df.sum(axis=0) \u6309\u5404\u5217\u6c42\u548c df.mean() \u6309\u5404\u5217\u6c42\u5e73\u5747\u503c df.median() \u6c42\u4e2d\u4f4d\u6570 df.var() \u6c42\u65b9\u5dee df.std() \u6c42\u6807\u51c6\u5dee df.mad() \u6839\u636e\u5e73\u5747\u503c\u8ba1\u7b97\u5e73\u5747\u7edd\u5bf9\u5229\u5dee df.cumsum() \u6c42\u7d2f\u8ba1\u548c sr1.corr(sr2) \u6c42\u76f8\u5173\u7cfb\u6570 df.cov() \u6c42\u534f\u65b9\u5dee\u77e9\u9635 df1.corrwith(df2) \u6c42\u76f8\u5173\u7cfb\u6570 pd.cut(array1, bins) \u6c42\u4e00\u7ef4\u6570\u636e\u7684\u533a\u95f4\u5206\u5e03 pd.qcut(array1, 4) \u6309\u6307\u5b9a\u5206\u4f4d\u6570\u8fdb\u884c\u533a\u95f4\u5212\u5206\uff0c4\u53ef\u4ee5\u66ff\u6362\u6210\u81ea\u5b9a\u4e49\u7684\u5206\u4f4d\u6570\u5217\u8868 df['col1'].groupby(df['col2']) \u52171\u6309\u7167\u52172\u5206\u7ec4\uff0c\u5373\u52172\u4f5c\u4e3akey df.groupby('col1') DataFrame\u6309\u7167\u52171\u5206\u7ec4 grouped.aggreagte(func) \u5206\u7ec4\u540e\u6839\u636e\u4f20\u5165\u51fd\u6570\u6765\u805a\u5408 grouped.aggregate([f1, f2,...]) \u6839\u636e\u591a\u4e2a\u51fd\u6570\u805a\u5408\uff0c\u8868\u73b0\u6210\u591a\u5217\uff0c\u51fd\u6570\u540d\u4e3a\u5217\u540d grouped.aggregate([('f1_name', f1), ('f2_name', f2)]) \u91cd\u547d\u540d\u805a\u5408\u540e\u7684\u5217\u540d grouped.aggregate({'col1':f1, 'col2':f2,...}) \u5bf9\u4e0d\u540c\u7684\u5217\u5e94\u7528\u4e0d\u540c\u51fd\u6570\u7684\u805a\u5408\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a df.pivot_table(['col1', 'col2'], rows=['row1', 'row2'], aggfunc=[np.mean, np.sum] fill_value=0, margins=True) \u6839\u636erow1, row2\u5bf9col1\uff0c col2\u505a\u5206\u7ec4\u805a\u5408\uff0c\u805a\u5408\u65b9\u6cd5\u53ef\u4ee5\u6307\u5b9a\u591a\u79cd\uff0c\u5e76\u7528\u6307\u5b9a\u503c\u66ff\u6362\u7f3a\u7701\u503c pd.crosstab(df['col1'], df['col2']) \u4ea4\u53c9\u8868\uff0c\u8ba1\u7b97\u5206\u7ec4\u7684\u9891\u7387","title":"032 pandas\u5e38\u7528\u7684\u51fd\u6570"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#1-import","text":"import pandas as pd import numpy as np import matplotlib.pyplot as plt import datetime import re","title":"1 import\u8bed\u53e5"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#2","text":"df = pd.read_csv(path='file.csv') \u53c2\u6570\uff1aheader=None \u7528\u9ed8\u8ba4\u5217\u540d\uff0c0\uff0c1\uff0c2\uff0c3... names=['A', 'B', 'C'...] \u81ea\u5b9a\u4e49\u5217\u540d index_col='A'|['A', 'B'...] \u7ed9\u7d22\u5f15\u5217\u6307\u5b9a\u540d\u79f0\uff0c\u5982\u679c\u662f\u591a\u91cd\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f20list skiprows=[0,1,2] \u9700\u8981\u8df3\u8fc7\u7684\u884c\u53f7\uff0c\u4ece\u6587\u4ef6\u59340\u5f00\u59cb\uff0cskip_footer\u4ece\u6587\u4ef6\u5c3e\u5f00\u59cb nrows=N \u9700\u8981\u8bfb\u53d6\u7684\u884c\u6570\uff0c\u524dN\u884c chunksize=M \u8fd4\u56de\u8fed\u4ee3\u7c7b\u578bTextFileReader\uff0c\u6bcfM\u6761\u8fed\u4ee3\u4e00\u6b21\uff0c\u6570\u636e\u5360\u7528\u8f83\u5927\u5185\u5b58\u65f6\u4f7f\u7528 sep=':'\u6570\u636e\u5206\u9694\u9ed8\u8ba4\u662f','\uff0c\u6839\u636e\u6587\u4ef6\u9009\u62e9\u5408\u9002\u7684\u5206\u9694\u7b26\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u53c2\u6570\uff0c\u4f1a\u81ea\u52a8\u89e3\u6790 skip_blank_lines=False \u9ed8\u8ba4\u4e3aTrue\uff0c\u8df3\u8fc7\u7a7a\u884c\uff0c\u5982\u679c\u9009\u62e9\u4e0d\u8df3\u8fc7\uff0c\u4f1a\u586b\u5145NaN converters={'col1', func} \u5bf9\u9009\u5b9a\u5217\u4f7f\u7528\u51fd\u6570func\u8f6c\u6362\uff0c\u901a\u5e38\u8868\u793a\u7f16\u53f7\u7684\u5217\u4f1a\u4f7f\u7528\uff08\u907f\u514d\u8f6c\u6362\u6210int\uff09 dfjs = pd.read_json('file.json') \u53ef\u4ee5\u4f20\u5165json\u683c\u5f0f\u5b57\u7b26\u4e32 dfex = pd.read_excel('file.xls', sheetname=[0,1..]) \u8bfb\u53d6\u591a\u4e2asheet\u9875\uff0c\u8fd4\u56de\u591a\u4e2adf\u7684\u5b57\u5178","title":"2 \u6587\u4ef6\u8bfb\u53d6"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#3","text":"df.duplicated() \u8fd4\u56de\u5404\u884c\u662f\u5426\u662f\u4e0a\u4e00\u884c\u7684\u91cd\u590d\u884c df.drop_duplicates() \u5220\u9664\u91cd\u590d\u884c\uff0c\u5982\u679c\u9700\u8981\u6309\u7167\u5217\u8fc7\u6ee4\uff0c\u53c2\u6570\u9009\u586b['col1', 'col2',...] df.fillna(0) \u7528\u5b9e\u65700\u586b\u5145na df.dropna() axis=0|1 0-index 1-column how='all'|'any' all-\u5168\u90e8\u662fNA\u624d\u5220 any-\u53ea\u8981\u6709NA\u5c31\u5168\u5220 del df['col1'] \u76f4\u63a5\u5220\u9664\u67d0\u4e00\u5217 df.drop(['col1',...], aixs=1) \u5220\u9664\u6307\u5b9a\u5217\uff0c\u4e5f\u53ef\u4ee5\u5220\u9664\u884c df.column = col_lst \u91cd\u65b0\u5236\u5b9a\u5217\u540d df.rename(index={'row1':'A'}, \u91cd\u547d\u540d\u7d22\u5f15\u540d\u548c\u5217\u540d columns={'col1':'A1'}) df.replace(dict) \u66ff\u6362df\u503c\uff0c\u524d\u540e\u503c\u53ef\u4ee5\u7528\u5b57\u5178\u8868\uff0c{1:\u2018A', '2':'B'} def get_digits(str): m = re.match(r'(\\d+(.\\d+)?)', str.decode('utf-8')) if m is not None: return float(m.groups()[0]) else: return 0 df.apply(get_digits) DataFrame.apply\uff0c\u53ea\u83b7\u53d6\u5c0f\u6570\u90e8\u5206\uff0c\u53ef\u4ee5\u9009\u5b9a\u67d0\u4e00\u5217\u6216\u884c df['col1'].map(func) Series.map\uff0c\u53ea\u5bf9\u5217\u8fdb\u884c\u51fd\u6570\u8f6c\u6362 pd.merge(df1, df2, on='col1', how='inner'\uff0csort=True) \u5408\u5e76\u4e24\u4e2aDataFrame\uff0c\u6309\u7167\u5171\u6709\u7684\u67d0\u5217\u505a\u5185\u8fde\u63a5\uff08\u4ea4\u96c6\uff09\uff0coutter\u4e3a\u5916\u8fde\u63a5\uff08\u5e76\u96c6\uff09\uff0c\u7ed3\u679c\u6392\u5e8f pd.merge(df1, df2, left_on='col1', right_on='col2') df1 df2\u6ca1\u6709\u516c\u5171\u5217\u540d\uff0c\u6240\u4ee5\u5408\u5e76\u9700\u6307\u5b9a\u4e24\u8fb9\u7684\u53c2\u8003\u5217 pd.concat([sr1, sr2, sr3,...], axis=0) \u591a\u4e2aSeries\u5806\u53e0\u6210\u591a\u884c\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u4e00\u4e2aSeries pd.concat([sr1, sr2, sr3,...], axis=1) \u591a\u4e2aSeries\u7ec4\u5408\u6210\u591a\u884c\u591a\u5217\uff0c\u7ed3\u679c\u662f\u4e00\u4e2aDataFrame\uff0c\u7d22\u5f15\u53d6\u5e76\u96c6\uff0c\u6ca1\u6709\u4ea4\u96c6\u7684\u4f4d\u7f6e\u586b\u5165\u7f3a\u7701\u503cNaN df1.combine_first(df2) \u7528df2\u7684\u6570\u636e\u8865\u5145df1\u7684\u7f3a\u7701\u503cNaN\uff0c\u5982\u679cdf2\u6709\u66f4\u591a\u884c\uff0c\u4e5f\u4e00\u5e76\u8865\u4e0a df.stack() \u5217\u65cb\u8f6c\u6210\u884c\uff0c\u4e5f\u5c31\u662f\u5217\u540d\u53d8\u4e3a\u7d22\u5f15\u540d\uff0c\u539f\u7d22\u5f15\u53d8\u6210\u591a\u5c42\u7d22\u5f15\uff0c\u7ed3\u679c\u662f\u5177\u6709\u591a\u5c42\u7d22\u5f15\u7684Series\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u6570\u636e\u96c6\u62c9\u957f df.unstack() \u5c06\u542b\u6709\u591a\u5c42\u7d22\u5f15\u7684Series\u8f6c\u6362\u4e3aDataFrame\uff0c\u5b9e\u9645\u4e0a\u662f\u628a\u6570\u636e\u96c6\u538b\u6241\uff0c\u5982\u679c\u67d0\u4e00\u5217\u5177\u6709\u8f83\u5c11\u7c7b\u522b\uff0c\u90a3\u4e48\u628a\u8fd9\u4e9b\u7c7b\u522b\u62c9\u51fa\u6765\u4f5c\u4e3a\u5217 df.pivot() \u5b9e\u9645\u4e0a\u662funstack\u7684\u5e94\u7528\uff0c\u628a\u6570\u636e\u96c6\u538b\u6241 pd.get_dummies(df['col1'], prefix='key') \u67d0\u5217\u542b\u6709\u6709\u9650\u4e2a\u503c\uff0c\u4e14\u8fd9\u4e9b\u503c\u4e00\u822c\u662f\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u56fd\u5bb6\uff0c\u501f\u9274\u4f4d\u56fe\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u628ak\u4e2a\u56fd\u5bb6\u8fd9\u4e00\u5217\u91cf\u5316\u6210k\u5217\uff0c\u6bcf\u5217\u75280\u30011\u8868\u793a","title":"3 \u6570\u636e\u9884\u5904\u7406"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#4","text":"df.columns \u5217\u540d\uff0c\u8fd4\u56deIndex\u7c7b\u578b\u7684\u5217\u7684\u96c6\u5408 df.index \u7d22\u5f15\u540d\uff0c\u8fd4\u56deIndex\u7c7b\u578b\u7684\u7d22\u5f15\u7684\u96c6\u5408 df.shape \u8fd4\u56detuple\uff0c\u884cx\u5217 df.head(n=N) \u8fd4\u56de\u524dN\u6761 df.tail(n=M) \u8fd4\u56de\u540eM\u6761 df.values \u503c\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4ee5numpy.ndarray\u5bf9\u8c61\u8fd4\u56de df.index DataFrame\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u4fee\u6539 df.reindex(index=['row1', 'row2',...] columns=['col1', 'col2',...]) \u6839\u636e\u65b0\u7d22\u5f15\u91cd\u65b0\u6392\u5e8f df[m:n] \u5207\u7247\uff0c\u9009\u53d6m~n-1\u884c df[df['col1'] > 1] \u9009\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u884c df.query('col1 > 1') \u9009\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u884c df.query('col1==[v1,v2,...]') df.ix[:,'col1'] \u9009\u53d6\u67d0\u4e00\u5217 df.ix['row1', 'col2'] \u9009\u53d6\u67d0\u4e00\u5143\u7d20 df.ix[:,:'col2'] \u5207\u7247\u9009\u53d6\u67d0\u4e00\u5217\u4e4b\u524d\uff08\u5305\u62eccol2\uff09\u7684\u6240\u6709\u5217 df.loc[m:n] \u83b7\u53d6\u4ecem~n\u884c\uff08\u63a8\u8350\uff09 df.iloc[m:n] \u83b7\u53d6\u4ecem~n-1\u884c df.loc[m:n-1,'col1':'coln'] \u83b7\u53d6\u4ecem n\u884c\u7684col1 coln\u5217 sr=df['col'] \u53d6\u67d0\u4e00\u5217\uff0c\u8fd4\u56deSeries sr.values Series\u7684\u503c\uff0c\u4ee5numpy.ndarray\u5bf9\u8c61\u8fd4\u56de sr.index Series\u7684\u7d22\u5f15\uff0c\u4ee5index\u5bf9\u8c61\u8fd4\u56de","title":"4 \u6570\u636e\u7b5b\u9009"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#5","text":"df.T DataFrame\u8f6c\u7f6e df1 + df2 \u6309\u7167\u7d22\u5f15\u548c\u5217\u76f8\u52a0\uff0c\u5f97\u5230\u5e76\u96c6\uff0cNaN\u586b\u5145 df1.add(df2, fill_value=0) \u7528\u5176\u4ed6\u503c\u586b\u5145 df1.add/sub//mul/div \u56db\u5219\u8fd0\u7b97\u7684\u65b9\u6cd5 df - sr DataFrame\u7684\u6240\u6709\u884c\u540c\u65f6\u51cf\u53bbSeries df * N \u6240\u6709\u5143\u7d20\u4e58\u4ee5N df.add(sr, axis=0) DataFrame\u7684\u6240\u6709\u5217\u540c\u65f6\u51cf\u53bbSeries sr.order() Series\u5347\u5e8f\u6392\u5217 df.sort_index(aixs=0, ascending=True) \u6309\u884c\u7d22\u5f15\u5347\u5e8f df.sort_index(by=['col1', 'col2'...]) \u6309\u6307\u5b9a\u5217\u4f18\u5148\u6392\u5e8f df.rank() \u8ba1\u7b97\u6392\u540drank\u503c","title":"5 \u6570\u636e\u8fd0\u7b97\u4e0e\u6392\u5e8f"},{"location":"python\u5b66\u4e60/032pandas\u5e38\u7528\u7684\u51fd\u6570/#6","text":"sr.unique Series\u53bb\u91cd sr.value_counts() Series\u7edf\u8ba1\u9891\u7387\uff0c\u5e76\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0cDataFrame\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5 sr.describe() \u8fd4\u56de\u57fa\u672c\u7edf\u8ba1\u91cf\u548c\u5206\u4f4d\u6570 df.describe() \u6309\u5404\u5217\u8fd4\u56de\u57fa\u672c\u7edf\u8ba1\u91cf\u548c\u5206\u4f4d\u6570 df.count() \u6c42\u975eNA\u503c\u5f97\u6570\u91cf df.max() \u6c42\u6700\u5927\u503c df.min() \u6c42\u6700\u5927\u503c df.sum(axis=0) \u6309\u5404\u5217\u6c42\u548c df.mean() \u6309\u5404\u5217\u6c42\u5e73\u5747\u503c df.median() \u6c42\u4e2d\u4f4d\u6570 df.var() \u6c42\u65b9\u5dee df.std() \u6c42\u6807\u51c6\u5dee df.mad() \u6839\u636e\u5e73\u5747\u503c\u8ba1\u7b97\u5e73\u5747\u7edd\u5bf9\u5229\u5dee df.cumsum() \u6c42\u7d2f\u8ba1\u548c sr1.corr(sr2) \u6c42\u76f8\u5173\u7cfb\u6570 df.cov() \u6c42\u534f\u65b9\u5dee\u77e9\u9635 df1.corrwith(df2) \u6c42\u76f8\u5173\u7cfb\u6570 pd.cut(array1, bins) \u6c42\u4e00\u7ef4\u6570\u636e\u7684\u533a\u95f4\u5206\u5e03 pd.qcut(array1, 4) \u6309\u6307\u5b9a\u5206\u4f4d\u6570\u8fdb\u884c\u533a\u95f4\u5212\u5206\uff0c4\u53ef\u4ee5\u66ff\u6362\u6210\u81ea\u5b9a\u4e49\u7684\u5206\u4f4d\u6570\u5217\u8868 df['col1'].groupby(df['col2']) \u52171\u6309\u7167\u52172\u5206\u7ec4\uff0c\u5373\u52172\u4f5c\u4e3akey df.groupby('col1') DataFrame\u6309\u7167\u52171\u5206\u7ec4 grouped.aggreagte(func) \u5206\u7ec4\u540e\u6839\u636e\u4f20\u5165\u51fd\u6570\u6765\u805a\u5408 grouped.aggregate([f1, f2,...]) \u6839\u636e\u591a\u4e2a\u51fd\u6570\u805a\u5408\uff0c\u8868\u73b0\u6210\u591a\u5217\uff0c\u51fd\u6570\u540d\u4e3a\u5217\u540d grouped.aggregate([('f1_name', f1), ('f2_name', f2)]) \u91cd\u547d\u540d\u805a\u5408\u540e\u7684\u5217\u540d grouped.aggregate({'col1':f1, 'col2':f2,...}) \u5bf9\u4e0d\u540c\u7684\u5217\u5e94\u7528\u4e0d\u540c\u51fd\u6570\u7684\u805a\u5408\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a df.pivot_table(['col1', 'col2'], rows=['row1', 'row2'], aggfunc=[np.mean, np.sum] fill_value=0, margins=True) \u6839\u636erow1, row2\u5bf9col1\uff0c col2\u505a\u5206\u7ec4\u805a\u5408\uff0c\u805a\u5408\u65b9\u6cd5\u53ef\u4ee5\u6307\u5b9a\u591a\u79cd\uff0c\u5e76\u7528\u6307\u5b9a\u503c\u66ff\u6362\u7f3a\u7701\u503c pd.crosstab(df['col1'], df['col2']) \u4ea4\u53c9\u8868\uff0c\u8ba1\u7b97\u5206\u7ec4\u7684\u9891\u7387","title":"6 \u6570\u5b66\u7edf\u8ba1"},{"location":"python\u5b66\u4e60/033\u5728\u4f7f\u7528jupyter-notebook\u660e\u660e\u5b89\u88c5\u4e86\u5305,\u5374\u5bfc\u5165\u5931\u8d25-/","text":"\u4f7f\u7528jupyter notebook\u7684\u65f6\u5019\u5982\u679c\u7f3a\u5c11\u4e86\u67d0\u4e9b\u5305,\u5728\u5b89\u88c5\u597d\u4e4b\u540e\u4e00\u5b9a\u8981\u91cd\u542f\u670d\u52a1 \u00b6 from PIL import Image \u00b6 \u53ea\u7528\u91cd\u542f\u670d\u52a1\u624d\u4f1a\u771f\u6b63\u7684\u80fd\u591f\u5bfc\u5165\u65b0\u5b89\u88c5\u7684\u5305,\u9047\u89c1\u8fc7\u4e24\u6b21\u90fd\u662f\u8fd9\u6837\u7684\u95ee\u9898\u4e86 \u4ec5\u6b64\u8bb0\u5f55\u4e00\u4e0b","title":"033 \u5728\u4f7f\u7528jupyter-notebook\u660e\u660e\u5b89\u88c5\u4e86\u5305,\u5374\u5bfc\u5165\u5931\u8d25-"},{"location":"python\u5b66\u4e60/033\u5728\u4f7f\u7528jupyter-notebook\u660e\u660e\u5b89\u88c5\u4e86\u5305,\u5374\u5bfc\u5165\u5931\u8d25-/#jupyter-notebook","text":"","title":"\u4f7f\u7528jupyter notebook\u7684\u65f6\u5019\u5982\u679c\u7f3a\u5c11\u4e86\u67d0\u4e9b\u5305,\u5728\u5b89\u88c5\u597d\u4e4b\u540e\u4e00\u5b9a\u8981\u91cd\u542f\u670d\u52a1"},{"location":"python\u5b66\u4e60/033\u5728\u4f7f\u7528jupyter-notebook\u660e\u660e\u5b89\u88c5\u4e86\u5305,\u5374\u5bfc\u5165\u5931\u8d25-/#from-pil-import-image","text":"\u53ea\u7528\u91cd\u542f\u670d\u52a1\u624d\u4f1a\u771f\u6b63\u7684\u80fd\u591f\u5bfc\u5165\u65b0\u5b89\u88c5\u7684\u5305,\u9047\u89c1\u8fc7\u4e24\u6b21\u90fd\u662f\u8fd9\u6837\u7684\u95ee\u9898\u4e86 \u4ec5\u6b64\u8bb0\u5f55\u4e00\u4e0b","title":"from PIL import Image"},{"location":"python\u5b66\u4e60/034Python\u4ee3\u7801\u5199\u5f97\u4e11\u600e\u4e48\u529e\uff1f/","text":"\u4e00\u3001Jupyter notebook \u7bc7Jupyter notebook\u7684\u4ee3\u7801\u8981\u60f3\u5199\u5f97\u89c4\u8303\uff0c\u63a8\u8350\u7528 Code prettify \u63d2\u4ef6\u3002\u5b89\u88c5\u63d2\u4ef6\u9996\u5148\u63d2\u4ef6Nbextensions\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 pip install jupyter_contrib_nbextensions ```` < hr > \u65e0\u62a5\u9519\u518d\u6267\u884c\uff1a < hr > `` ` python jupyter contrib nbextension install -- user \u9009\u53d6 Code prettify \u6a21\u5757 \u5907\u6ce8\uff1a\u9700\u8981\u5b89\u88c5 yapf\u6a21\u5757 pip install yapf \u5b89\u88c5\u5b8c\u6210\u540e\u6253\u5f00jupyter notebook 1 \u6253\u5f00\u7f16\u8f91 2 \u70b9\u5f00 nbxtensions config 3 \u9009\u4e2dcode pretlity 4 \u8fd4\u56de\u4ee3\u7801\u754c\u9762\u5237\u65b0\u4e00\u4e0b\u5c31\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u6574\u7406\u5de5\u5177: \u662f\u4e2a\u5c0f\u9524\u5b50,\u53ea\u8981\u4e66\u5199\u5b8c\u4ee3\u7801\u70b9\u51fb\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86. \u6bd4\u5982\u4e00\u5f00\u59cb\u5199\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684: \u6574\u7406\u5b8c\u6210\u540e\u5c31\u4f1a\u53d8\u6210\u8fd9\u6837\u7684 \u518d\u4e5f\u4e0d\u6015\u5199\u7684\u4ee3\u7801\u4e11\u4e86 \u4ee3\u7801\u4e0d\u89c4\u8303,\u540c\u4e8b\u4e24\u884c\u6cea,\u54c8\u54c8","title":"034 Python\u4ee3\u7801\u5199\u5f97\u4e11\u600e\u4e48\u529e\uff1f"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/","text":"1. \u7b80\u4ecb \u00b6 Python\u4f20\u7edf\u7684\u56fe\u50cf\u5904\u7406\u5e93 PIL(Python Imaging Library ) \uff0c\u53ef\u4ee5\u8bf4\u57fa\u672c\u4e0a\u662fPython\u5904\u7406\u56fe\u50cf\u7684\u6807\u51c6\u5e93\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u4f7f\u7528\u7b80\u5355\u3002 \u4f46\u662f\u7531\u4e8e PIL \u4e0d\u652f\u6301Python3\uff0c\u800c\u4e14\u66f4\u65b0\u7f13\u6162\u3002\u6240\u4ee5\u6709\u5fd7\u613f\u8005\u5728PIL\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u5206\u652f\u7248\u672c\uff0c\u547d\u540d\u4e3a Pillow \uff0cPillow\u76ee\u524d\u6700\u65b0\u652f\u6301\u5230python3.6\uff0c\u66f4\u65b0\u6d3b\u8dc3\uff0c\u5e76\u4e14\u589e\u6dfb\u4e86\u8bb8\u591a\u65b0\u7684\u7279\u6027\u3002\u6240\u4ee5\u6211\u4eec\u5b89\u88c5 Pillow \u5373\u53ef\u3002 2. \u5b89\u88c5 \u00b6 Pillow\u7684\u5b89\u88c5\u6bd4\u8f83\u7684\u7b80\u5355\uff0c\u76f4\u63a5pip\u5b89\u88c5\u5373\u53ef\uff1a pip install Pillow \u4f46\u662f\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cPillow\u548cPIL\u4e0d\u80fd\u5171\u5b58\u5728\u540c\u4e00\u4e2a\u73af\u5883\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u5b89\u88c5\u7684\u6709PIL\u7684\u8bdd\uff0c\u90a3\u4e48\u5b89\u88c5Pillow\u4e4b\u524d\u5e94\u8be5\u5220\u9664PIL\u3002 \u7531\u4e8e\u662f\u7ee7\u627f\u81eaPIL\u7684\u5206\u652f\uff0c\u6240\u4ee5Pillow\u7684\u5bfc\u5165\u662f\u8fd9\u6837\u7684\uff1a import PIL \u6216\u8005 \u00b6 from PIL import Image 3. Image \u00b6 Image\u662fPillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u7c7b\uff0c\u5b9e\u73b0\u4e86Pillow\u4e2d\u5927\u90e8\u5206\u7684\u529f\u80fd\uff0c\u8fd9\u4e2a\u7c7b\u7684\u4e3b\u8981\u7528\u6765\u8868\u793a\u56fe\u7247\u5bf9\u8c61\u3002\u8981\u521b\u5efa\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4e3b\u8981\u6709\u4e09\u4e2a\u65b9\u5f0f\uff1a \u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf \u5904\u7406\u5176\u4ed6\u56fe\u50cf\u83b7\u5f97 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u50cf 3.1. \u8bfb\u53d6\u56fe\u50cf \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90fd\u662f\u90fd\u8fc7\u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf\u6765\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a from PIL import Image picture = Image . open ( 'happy.png' ) \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u56fe\u7247\u683c\u5f0f\u7684\u8bdd\uff0c\u90a3\u4e48Pillow\u4f1a\u81ea\u52a8\u8bc6\u522b\u6587\u4ef6\u5185\u5bb9\u4e3a\u6587\u4ef6\u683c\u5f0f\u3002 3.2. \u65b0\u5efa\u56fe\u50cf \u00b6 Pillow\u65b0\u5efa\u7a7a\u767d\u56fe\u50cf\u4f7f\u7528 new() \u65b9\u6cd5\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fmode\u5373\u989c\u8272\u7a7a\u95f4\u6a21\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u56fe\u50cf\u7684\u5206\u8fa8\u7387(\u5bbdx\u9ad8)\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u989c\u8272\u3002 \u53ef\u4ee5\u76f4\u63a5\u586b\u5165\u5e38\u7528\u989c\u8272\u7684\u540d\u79f0\u3002\u5982'red'\u3002 \u4e5f\u53ef\u4ee5\u586b\u5165\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u989c\u8272\uff0c\u5982#FF0000\u8868\u793a\u7ea2\u8272\u3002 \u8fd8\u80fd\u4f20\u5165\u5143\u7ec4\uff0c\u6bd4\u5982(255, 0, 0, 255)\u6216\u8005(255\uff0c 0\uff0c 0)\u8868\u793a\u7ea2\u8272\u3002 picture = Image . new ( 'RGB' , ( 200 , 100 ), 'red' ) #\u6a21\u5f0f\u662fRGB\uff0c200*100. \u5168\u7ea2 3.3. \u4fdd\u5b58\u56fe\u50cf \u00b6 \u4fdd\u5b58\u56fe\u7247\u7684\u8bdd\u9700\u8981\u4f7f\u7528 save() \u65b9\u6cd5\uff1a picture . save ( 'happy.png' ) \u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u56fe\u7247\u683c\u5f0f\u7684\u8bdd\uff0c\u90a3\u4e48Pillow\u4f1a\u6839\u636e\u8f93\u5165\u7684\u540e\u7f00\u540d\u51b3\u5b9a\u4fdd\u5b58\u7684\u6587\u4ef6\u683c\u5f0f\u3002 3.4. \u56fe\u50cf\u7684\u5750\u6807\u8868\u793a \u00b6 \u5728 Pillow \u4e2d\uff0c\u7528\u7684\u662f\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\u4e3a\u5750\u6807\u7684\u539f\u70b9 \uff080\uff0c0\uff09 \uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\uff0cx\u8f74\u7684\u6570\u503c\u662f\u4ece\u5de6\u5230\u53f3\u589e\u957f\u7684\uff0cy\u8f74\u7684\u6570\u503c\u662f\u4ece\u4e0a\u5230\u4e0b\u589e\u957f\u7684\u3002 \u6211\u4eec\u5904\u7406\u56fe\u50cf\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u53bb\u8868\u793a\u4e00\u4e2a\u77e9\u5f62\u7684\u56fe\u50cf\u533a\u57df\u3002Pillow\u4e2d\u5f88\u591a\u65b9\u6cd5\u90fd\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u77e9\u5f62\u533a\u57df\u7684\u5143\u7956\u53c2\u6570\u3002 \u8fd9\u4e2a\u5143\u7ec4\u53c2\u6570\u5305\u542b\u56db\u4e2a\u503c\uff0c\u5206\u522b\u4ee3\u8868\u77e9\u5f62\u56db\u6761\u8fb9\u7684\u8ddd\u79bbX\u8f74\u6216\u8005Y\u8f74\u7684\u8ddd\u79bb\u3002\u987a\u5e8f\u662f (\u5de6\uff0c\u9876\uff0c\u53f3\uff0c\u5e95) \u3002\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\uff0c\u77e9\u5f62\u7684\u5de6\u4e0a\u9876\u70b9\u5750\u6807\u4e3a(\u5de6\uff0c\u9876)\uff0c\u77e9\u5f62\u7684\u53f3\u4e0b\u9876\u70b9\u5750\u6807\u4e3a(\u53f3\uff0c\u5e95)\uff0c\u4e24\u4e2a\u9876\u70b9\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u77e9\u5f62\u7684\u4f4d\u7f6e\u3002 \u53f3\u548c\u5e95\u5750\u6807\u7a0d\u5fae\u7279\u6b8a\uff0c\u8ddfpython\u5217\u8868\u7d22\u5f15\u89c4\u5219\u4e00\u6837\uff0c\u662f\u5de6\u95ed\u53c8\u5f00\u7684\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a[\u5de6, \u53f3)\u548c[\u9876\uff0c \u5e95)\u8fd9\u6837\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\u3002\u6bd4\u5982 (3, 2, 8, 9) \u5c31\u8868\u793a\u4e86\u6a2a\u5750\u6807\u8303\u56f4 [3, 7] \uff1b\u7eb5\u5750\u6807\u8303\u56f4 [2, 8] \u7684\u77e9\u5f62\u533a\u57df\u3002 3.6. \u5e38\u7528\u65b9\u6cd5 \u00b6 3.6.1. \u88c1\u526a\u56fe\u7247 \u00b6 Image\u4f7f\u7528 crop() \u65b9\u6cd5\u6765\u88c1\u526a\u56fe\u50cf\uff0c\u6b64\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u77e9\u5f62\u5143\u7956\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684Image\u5bf9\u8c61\uff0c\u5bf9\u539f\u56fe\u6ca1\u6709\u5f71\u54cd\u3002 croped_im = im.crop((100, 100, 200, 200)) 3.6.2. \u590d\u5236\u4e0e\u7c98\u8d34\u56fe\u50cf \u00b6 \u590d\u5236\u56fe\u50cf\u4f7f\u7528copy()\u65b9\u6cd5\uff1a copyed_im = im.copy() \u7c98\u8d34\u56fe\u50cf\u4f7f\u7528paste()\u65b9\u6cd5\uff1a croped_im = im.crop((100, 100, 200, 200)) im.paste(croped_im, (0, 0)) im \u5bf9\u8c61\u8c03\u7528\u4e86 paste() \u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u88ab\u88c1\u526a\u4e0b\u6765\u7528\u6765\u7c98\u8d34\u7684\u56fe\u50cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\u5143\u7956\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u53c2\u6570\u662f\u7c98\u8d34\u7684\u56fe\u50cf\u7684\u5de6\u9876\u70b9\u3002 3.6.3 \u8c03\u6574\u56fe\u50cf\u7684\u5927\u5c0f \u00b6 \u8c03\u6574\u56fe\u50cf\u5927\u5c0f\u4f7f\u7528 resize() \u65b9\u6cd5\uff1a resized_im = im.resize((width, height)) resize() \u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u91cd\u8bbe\u4e86\u5927\u5c0f\u7684Image\u5bf9\u8c61\u3002 3.6.4. \u65cb\u8f6c\u56fe\u50cf\u548c\u7ffb\u8f6c\u56fe\u50cf \u65cb\u8f6c\u56fe\u50cf\u4f7f\u7528 rotate() \u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u6309\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684Image\u5bf9\u8c61\uff1a \u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6 \u00b6 im . rotate ( 90 ) im . rotate ( 180 ) im . rotate ( 20 , expand = True ) \u65cb\u8f6c\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u56fe\u7247\u8d85\u51fa\u8fb9\u754c\u7684\u8fb9\u89d2\u88c1\u526a\u6389\u3002\u5982\u679c\u52a0\u5165expand=True\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u5c06\u56fe\u7247\u8fb9\u89d2\u4fdd\u5b58\u4f4f\u3002 \u7ffb\u8f6c\u56fe\u50cf\u4f7f\u7528 transpose() \uff1a \u6c34\u5e73\u7ffb\u8f6c \u00b6 im.transpose(Image.FLIP_LEFT_RIGHT) \u5782\u76f4\u7ffb\u8f6c \u00b6 im.transpose(Image.FLIP_TOP_BOTTOM) 3.6.5. \u83b7\u53d6\u5355\u4e2a\u50cf\u7d20\u7684\u503c \u00b6 \u4f7f\u7528 getpixel(xy) \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u7684\u503c\uff1a im.getpixel((100, 100)) \u4f20\u5165\u7684 xy \u9700\u8981\u662f\u4e00\u4e2a \u5143\u7956 \u5f62\u5f0f\u7684\u5750\u6807\u3002 \u5982\u679c\u56fe\u7247\u662f\u591a\u901a\u9053\u7684\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7956\u3002 3.6.6. \u901a\u8fc7\u901a\u9053\u5206\u5272\u56fe\u7247 \u00b6 split() split() \u53ef\u4ee5\u5c06\u591a\u901a\u9053\u56fe\u7247\u6309\u901a\u9053\u5206\u5272\u4e3a\u5355\u901a\u9053\u56fe\u7247\uff1a R, G, B = im.split() split() \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u5143\u7956\u4e2d\u7684\u5143\u7d20\u5219\u662f\u5206\u5272\u540e\u7684\u5355\u4e2a\u901a\u9053\u7684\u503c\u3002 getchannel(channel) getchannel() \u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u901a\u9053\u7684\u6570\u636e\uff1a R = im.getchannel(\"R\") 3.6.7. \u52a0\u8f7d\u56fe\u7247\u5168\u90e8\u6570\u636e \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 load() \u65b9\u6cd5\u52a0\u8f7d\u56fe\u7247\u6240\u6709\u7684\u6570\u636e\uff0c\u5e76\u6bd4\u8f83\u65b9\u4fbf\u7684\u4fee\u6539\u50cf\u7d20\u7684\u503c\uff1a pixdata = im.load() pixdata[100,200] = 255 \u6b64\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a PIL.PyAccess \uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u7684\u7d22\u5f15\u6765\u5bf9\u6307\u5b9a\u5750\u6807\u7684\u50cf\u7d20\u70b9\u8fdb\u884c\u4fee\u6539\u3002 3.6.8. \u5173\u95ed\u56fe\u7247\u5e76\u91ca\u653e\u5185\u5b58 \u00b6 \u6b64\u65b9\u6cd5\u4f1a\u5220\u9664\u56fe\u7247\u5bf9\u8c61\u5e76\u91ca\u653e\u5185\u5b58 im.close()","title":"035 python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#1","text":"Python\u4f20\u7edf\u7684\u56fe\u50cf\u5904\u7406\u5e93 PIL(Python Imaging Library ) \uff0c\u53ef\u4ee5\u8bf4\u57fa\u672c\u4e0a\u662fPython\u5904\u7406\u56fe\u50cf\u7684\u6807\u51c6\u5e93\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u4f7f\u7528\u7b80\u5355\u3002 \u4f46\u662f\u7531\u4e8e PIL \u4e0d\u652f\u6301Python3\uff0c\u800c\u4e14\u66f4\u65b0\u7f13\u6162\u3002\u6240\u4ee5\u6709\u5fd7\u613f\u8005\u5728PIL\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u5206\u652f\u7248\u672c\uff0c\u547d\u540d\u4e3a Pillow \uff0cPillow\u76ee\u524d\u6700\u65b0\u652f\u6301\u5230python3.6\uff0c\u66f4\u65b0\u6d3b\u8dc3\uff0c\u5e76\u4e14\u589e\u6dfb\u4e86\u8bb8\u591a\u65b0\u7684\u7279\u6027\u3002\u6240\u4ee5\u6211\u4eec\u5b89\u88c5 Pillow \u5373\u53ef\u3002","title":"1. \u7b80\u4ecb"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#2","text":"Pillow\u7684\u5b89\u88c5\u6bd4\u8f83\u7684\u7b80\u5355\uff0c\u76f4\u63a5pip\u5b89\u88c5\u5373\u53ef\uff1a pip install Pillow \u4f46\u662f\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cPillow\u548cPIL\u4e0d\u80fd\u5171\u5b58\u5728\u540c\u4e00\u4e2a\u73af\u5883\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u5b89\u88c5\u7684\u6709PIL\u7684\u8bdd\uff0c\u90a3\u4e48\u5b89\u88c5Pillow\u4e4b\u524d\u5e94\u8be5\u5220\u9664PIL\u3002 \u7531\u4e8e\u662f\u7ee7\u627f\u81eaPIL\u7684\u5206\u652f\uff0c\u6240\u4ee5Pillow\u7684\u5bfc\u5165\u662f\u8fd9\u6837\u7684\uff1a import PIL","title":"2. \u5b89\u88c5"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#_1","text":"from PIL import Image","title":"\u6216\u8005"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#3-image","text":"Image\u662fPillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u7c7b\uff0c\u5b9e\u73b0\u4e86Pillow\u4e2d\u5927\u90e8\u5206\u7684\u529f\u80fd\uff0c\u8fd9\u4e2a\u7c7b\u7684\u4e3b\u8981\u7528\u6765\u8868\u793a\u56fe\u7247\u5bf9\u8c61\u3002\u8981\u521b\u5efa\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4e3b\u8981\u6709\u4e09\u4e2a\u65b9\u5f0f\uff1a \u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf \u5904\u7406\u5176\u4ed6\u56fe\u50cf\u83b7\u5f97 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u50cf","title":"3. Image"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#31","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90fd\u662f\u90fd\u8fc7\u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf\u6765\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a from PIL import Image picture = Image . open ( 'happy.png' ) \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u56fe\u7247\u683c\u5f0f\u7684\u8bdd\uff0c\u90a3\u4e48Pillow\u4f1a\u81ea\u52a8\u8bc6\u522b\u6587\u4ef6\u5185\u5bb9\u4e3a\u6587\u4ef6\u683c\u5f0f\u3002","title":"3.1. \u8bfb\u53d6\u56fe\u50cf"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#32","text":"Pillow\u65b0\u5efa\u7a7a\u767d\u56fe\u50cf\u4f7f\u7528 new() \u65b9\u6cd5\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fmode\u5373\u989c\u8272\u7a7a\u95f4\u6a21\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u56fe\u50cf\u7684\u5206\u8fa8\u7387(\u5bbdx\u9ad8)\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u989c\u8272\u3002 \u53ef\u4ee5\u76f4\u63a5\u586b\u5165\u5e38\u7528\u989c\u8272\u7684\u540d\u79f0\u3002\u5982'red'\u3002 \u4e5f\u53ef\u4ee5\u586b\u5165\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u989c\u8272\uff0c\u5982#FF0000\u8868\u793a\u7ea2\u8272\u3002 \u8fd8\u80fd\u4f20\u5165\u5143\u7ec4\uff0c\u6bd4\u5982(255, 0, 0, 255)\u6216\u8005(255\uff0c 0\uff0c 0)\u8868\u793a\u7ea2\u8272\u3002 picture = Image . new ( 'RGB' , ( 200 , 100 ), 'red' ) #\u6a21\u5f0f\u662fRGB\uff0c200*100. \u5168\u7ea2","title":"3.2. \u65b0\u5efa\u56fe\u50cf"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#33","text":"\u4fdd\u5b58\u56fe\u7247\u7684\u8bdd\u9700\u8981\u4f7f\u7528 save() \u65b9\u6cd5\uff1a picture . save ( 'happy.png' ) \u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u56fe\u7247\u683c\u5f0f\u7684\u8bdd\uff0c\u90a3\u4e48Pillow\u4f1a\u6839\u636e\u8f93\u5165\u7684\u540e\u7f00\u540d\u51b3\u5b9a\u4fdd\u5b58\u7684\u6587\u4ef6\u683c\u5f0f\u3002","title":"3.3. \u4fdd\u5b58\u56fe\u50cf"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#34","text":"\u5728 Pillow \u4e2d\uff0c\u7528\u7684\u662f\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\u4e3a\u5750\u6807\u7684\u539f\u70b9 \uff080\uff0c0\uff09 \uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\uff0cx\u8f74\u7684\u6570\u503c\u662f\u4ece\u5de6\u5230\u53f3\u589e\u957f\u7684\uff0cy\u8f74\u7684\u6570\u503c\u662f\u4ece\u4e0a\u5230\u4e0b\u589e\u957f\u7684\u3002 \u6211\u4eec\u5904\u7406\u56fe\u50cf\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u53bb\u8868\u793a\u4e00\u4e2a\u77e9\u5f62\u7684\u56fe\u50cf\u533a\u57df\u3002Pillow\u4e2d\u5f88\u591a\u65b9\u6cd5\u90fd\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u77e9\u5f62\u533a\u57df\u7684\u5143\u7956\u53c2\u6570\u3002 \u8fd9\u4e2a\u5143\u7ec4\u53c2\u6570\u5305\u542b\u56db\u4e2a\u503c\uff0c\u5206\u522b\u4ee3\u8868\u77e9\u5f62\u56db\u6761\u8fb9\u7684\u8ddd\u79bbX\u8f74\u6216\u8005Y\u8f74\u7684\u8ddd\u79bb\u3002\u987a\u5e8f\u662f (\u5de6\uff0c\u9876\uff0c\u53f3\uff0c\u5e95) \u3002\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\uff0c\u77e9\u5f62\u7684\u5de6\u4e0a\u9876\u70b9\u5750\u6807\u4e3a(\u5de6\uff0c\u9876)\uff0c\u77e9\u5f62\u7684\u53f3\u4e0b\u9876\u70b9\u5750\u6807\u4e3a(\u53f3\uff0c\u5e95)\uff0c\u4e24\u4e2a\u9876\u70b9\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u77e9\u5f62\u7684\u4f4d\u7f6e\u3002 \u53f3\u548c\u5e95\u5750\u6807\u7a0d\u5fae\u7279\u6b8a\uff0c\u8ddfpython\u5217\u8868\u7d22\u5f15\u89c4\u5219\u4e00\u6837\uff0c\u662f\u5de6\u95ed\u53c8\u5f00\u7684\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a[\u5de6, \u53f3)\u548c[\u9876\uff0c \u5e95)\u8fd9\u6837\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\u3002\u6bd4\u5982 (3, 2, 8, 9) \u5c31\u8868\u793a\u4e86\u6a2a\u5750\u6807\u8303\u56f4 [3, 7] \uff1b\u7eb5\u5750\u6807\u8303\u56f4 [2, 8] \u7684\u77e9\u5f62\u533a\u57df\u3002","title":"3.4. \u56fe\u50cf\u7684\u5750\u6807\u8868\u793a"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#36","text":"","title":"3.6. \u5e38\u7528\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#361","text":"Image\u4f7f\u7528 crop() \u65b9\u6cd5\u6765\u88c1\u526a\u56fe\u50cf\uff0c\u6b64\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u77e9\u5f62\u5143\u7956\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684Image\u5bf9\u8c61\uff0c\u5bf9\u539f\u56fe\u6ca1\u6709\u5f71\u54cd\u3002 croped_im = im.crop((100, 100, 200, 200))","title":"3.6.1. \u88c1\u526a\u56fe\u7247"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#362","text":"\u590d\u5236\u56fe\u50cf\u4f7f\u7528copy()\u65b9\u6cd5\uff1a copyed_im = im.copy() \u7c98\u8d34\u56fe\u50cf\u4f7f\u7528paste()\u65b9\u6cd5\uff1a croped_im = im.crop((100, 100, 200, 200)) im.paste(croped_im, (0, 0)) im \u5bf9\u8c61\u8c03\u7528\u4e86 paste() \u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u88ab\u88c1\u526a\u4e0b\u6765\u7528\u6765\u7c98\u8d34\u7684\u56fe\u50cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\u5143\u7956\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u53c2\u6570\u662f\u7c98\u8d34\u7684\u56fe\u50cf\u7684\u5de6\u9876\u70b9\u3002","title":"3.6.2. \u590d\u5236\u4e0e\u7c98\u8d34\u56fe\u50cf"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#363","text":"\u8c03\u6574\u56fe\u50cf\u5927\u5c0f\u4f7f\u7528 resize() \u65b9\u6cd5\uff1a resized_im = im.resize((width, height)) resize() \u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u91cd\u8bbe\u4e86\u5927\u5c0f\u7684Image\u5bf9\u8c61\u3002 3.6.4. \u65cb\u8f6c\u56fe\u50cf\u548c\u7ffb\u8f6c\u56fe\u50cf \u65cb\u8f6c\u56fe\u50cf\u4f7f\u7528 rotate() \u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u6309\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684Image\u5bf9\u8c61\uff1a","title":"3.6.3 \u8c03\u6574\u56fe\u50cf\u7684\u5927\u5c0f"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#90","text":"im . rotate ( 90 ) im . rotate ( 180 ) im . rotate ( 20 , expand = True ) \u65cb\u8f6c\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u56fe\u7247\u8d85\u51fa\u8fb9\u754c\u7684\u8fb9\u89d2\u88c1\u526a\u6389\u3002\u5982\u679c\u52a0\u5165expand=True\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u5c06\u56fe\u7247\u8fb9\u89d2\u4fdd\u5b58\u4f4f\u3002 \u7ffb\u8f6c\u56fe\u50cf\u4f7f\u7528 transpose() \uff1a","title":"\u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#_2","text":"im.transpose(Image.FLIP_LEFT_RIGHT)","title":"\u6c34\u5e73\u7ffb\u8f6c"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#_3","text":"im.transpose(Image.FLIP_TOP_BOTTOM)","title":"\u5782\u76f4\u7ffb\u8f6c"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#365","text":"\u4f7f\u7528 getpixel(xy) \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u7684\u503c\uff1a im.getpixel((100, 100)) \u4f20\u5165\u7684 xy \u9700\u8981\u662f\u4e00\u4e2a \u5143\u7956 \u5f62\u5f0f\u7684\u5750\u6807\u3002 \u5982\u679c\u56fe\u7247\u662f\u591a\u901a\u9053\u7684\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7956\u3002","title":"3.6.5. \u83b7\u53d6\u5355\u4e2a\u50cf\u7d20\u7684\u503c"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#366","text":"split() split() \u53ef\u4ee5\u5c06\u591a\u901a\u9053\u56fe\u7247\u6309\u901a\u9053\u5206\u5272\u4e3a\u5355\u901a\u9053\u56fe\u7247\uff1a R, G, B = im.split() split() \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u5143\u7956\u4e2d\u7684\u5143\u7d20\u5219\u662f\u5206\u5272\u540e\u7684\u5355\u4e2a\u901a\u9053\u7684\u503c\u3002 getchannel(channel) getchannel() \u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u901a\u9053\u7684\u6570\u636e\uff1a R = im.getchannel(\"R\")","title":"3.6.6. \u901a\u8fc7\u901a\u9053\u5206\u5272\u56fe\u7247"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#367","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 load() \u65b9\u6cd5\u52a0\u8f7d\u56fe\u7247\u6240\u6709\u7684\u6570\u636e\uff0c\u5e76\u6bd4\u8f83\u65b9\u4fbf\u7684\u4fee\u6539\u50cf\u7d20\u7684\u503c\uff1a pixdata = im.load() pixdata[100,200] = 255 \u6b64\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a PIL.PyAccess \uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u7684\u7d22\u5f15\u6765\u5bf9\u6307\u5b9a\u5750\u6807\u7684\u50cf\u7d20\u70b9\u8fdb\u884c\u4fee\u6539\u3002","title":"3.6.7. \u52a0\u8f7d\u56fe\u7247\u5168\u90e8\u6570\u636e"},{"location":"python\u5b66\u4e60/035python\u4e2d\u56fe\u50cf\u5904\u7406\u7684\u5de5\u5177Pillow\u7684\u4f7f\u7528/#368","text":"\u6b64\u65b9\u6cd5\u4f1a\u5220\u9664\u56fe\u7247\u5bf9\u8c61\u5e76\u91ca\u653e\u5185\u5b58 im.close()","title":"3.6.8. \u5173\u95ed\u56fe\u7247\u5e76\u91ca\u653e\u5185\u5b58"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/","text":"1.pandas\u57fa\u7840,Series,DataFrame \u00b6 import pandas as pd import numpy as np #\u5bfc\u5305 s1 = pd . Series ([ 4 , 7 , - 5 , 3 ]) #\u521b\u5efa\u4e00\u4e2aseries\uff0c\u7d22\u5f15\u4e3a\u9ed8\u8ba4\u503c print ( s1 ) \u6267\u884c\u7ed3\u679c: 0 4 1 7 2 -5 3 3 dtype: int64 s1 . values #series\u7684\u503c \u6267\u884c\u7ed3\u679c: array ([ 4 , 7 , - 5 , 3 ], dtype = int64 ) s1 . index #series\u7684\u7d22\u5f15 \u6267\u884c\u7ed3\u679c: RangeIndex ( start = 0 , stop = 4 , step = 1 ) s2 = pd . Series ([ 4.0 , 6.5 , - 0.5 , 4.2 ], index = [ 'd' , 'b' , 'a' , 'c' ]) #\u5e26\u7d22\u5f15\u521b\u5efa\u4e00\u4e2aseries print ( s2 ) \u6267\u884c\u7ed3\u679c: d 4.0 b 6.5 a - 0.5 c 4.2 dtype : float64 s2 [ 'a' ] #\u6839\u636e\u7d22\u5f15\u53d6\u503c,\u8ddf\u5217\u8868\u76f8\u4f3c \u6267\u884c\u7ed3\u679c: - 0.5 s2 [[ 'a' , 'b' , 'c' ]] #\u6839\u636e\u7d22\u5f15\u53d6\u591a\u884c\u503c,\u8bb0\u5f97\u662f\u53cc\u62ec\u53f7,\u5355\u4e2a\u503c\u662f\u5355\u62ec\u53f7 \u6267\u884c\u7ed3\u679c: a - 0.5 b 6.5 c 4.2 dtype : float64 'b' in s2 #\u5224\u65ad\u7d22\u5f15\u5728\u4e0d\u5728series\u4e2d \u6267\u884c\u7ed3\u679c: True 'e' in s2 \u6267\u884c\u7ed3\u679c: False #Series\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u5b9a\u957f\u7684\u6709\u5e8f\u5b57\u5178,\u4f7f\u7528\u5b57\u5178\u521b\u5efaseries dic1 = { 'apple' : 5 , 'pen' : 3 , 'applepen' : 10 } s3 = pd . Series ( dic1 ) print ( s3 ) \u6267\u884c\u7ed3\u679c: apple 5 pen 3 applepen 10 dtype : int64 #DataFrame ,\u4f7f\u7528\u5b57\u5178\u521b\u5efadataframe data = { 'year' :[ 2014 , 2015 , 2016 , 2017 ], 'income' :[ 10000 , 30000 , 50000 , 80000 ], 'pay' :[ 5000 , 20000 , 30000 , 30000 ] } df1 = pd . DataFrame ( data ) df1 \u6267\u884c\u7ed3\u679c: year income pay 0 2014 10000 5000 1 2015 30000 20000 2 2016 50000 30000 3 2017 80000 30000 df2 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 ))) df2 \u6267\u884c\u7ed3\u679c: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 df3 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), index = [ 'a' , 'c' , 'b' ], columns = [ 2 , 33 , 44 , 5 ]) #\u521b\u5efadataframe\u65f6\u6307\u5b9a\u7d22\u5f15\u548c\u5217\u540d df3 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11 df1 . columns #\u5217,\u53d6\u51fa\u5217\u540d \u6267\u884c\u7ed3\u679c: Index ([ 'year' , 'income' , 'pay' ], dtype = 'object' ) df1 . index #\u884c,\u53d6\u51fa\u884c\u7d22\u5f15 \u6267\u884c\u7ed3\u679c: RangeIndex ( start = 0 , stop = 4 , step = 1 ) df1 . values #\u6253\u5370dataframe\u7684\u6240\u6709\u503c,\u662f\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u5f0f \u6267\u884c\u7ed3\u679c: array ([[ 2014 , 10000 , 5000 ], [ 2015 , 30000 , 20000 ], [ 2016 , 50000 , 30000 ], [ 2017 , 80000 , 30000 ]], dtype = int64 ) df1 . describe () #describe\u63cf\u8ff0\u8868,\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e9b\u5206\u6790,\u8ba1\u6570,\u5e73\u5747\u503c,\u6807\u51c6\u5dee,\u6700\u5c0f\u503c,\u6700\u5927\u503c\u7b49\u7b49 \u6267\u884c\u7ed3\u679c: year income pay count 4.000000 4.000000 4.000000 mean 2015.500000 42500.000000 21250.000000 std 1.290994 29860.788112 11814.539066 min 2014.000000 10000.000000 5000.000000 25 % 2014.750000 25000.000000 16250.000000 50 % 2015.500000 40000.000000 25000.000000 75 % 2016.250000 57500.000000 30000.000000 max 2017.000000 80000.000000 30000.000000 df1 . T #\u5bf9dataframe\u8fdb\u884c\u8f6c\u7f6e \u6267\u884c\u7ed3\u679c: 0 1 2 3 year 2014 2015 2016 2017 income 10000 30000 50000 80000 pay 5000 20000 30000 30000 df3 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11 df3 . sort_index ( axis = 1 ) #\u5217\u6392\u5e8f,\u6839\u636e\u5217\u7d22\u5f15\u540d\u6392\u5e8f \u6267\u884c\u7ed3\u679c: 2 5 33 44 a 0 3 1 2 c 4 7 5 6 b 8 11 9 10 df3 . sort_index ( axis = 0 ) #\u884c\u6392\u5e8f,\u6839\u636e\u884c\u7d22\u5f15\u540d\u6392\u5e8f \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 b 8 9 10 11 c 4 5 6 7 df3 . sort_values ( by = 44 ) #\u6839\u636e\u5217\u540d\u5bf9\u503c\u8fdb\u884c\u6392\u5e8f,\u5168\u90e8\u4f1a\u53d8 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11 2 pandas\u9009\u62e9\u6570\u636e \u00b6 import pandas as pd import numpy as np #\u521b\u5efa\u4e00\u4e2adataframe dates = pd . date_range ( '20170101' , periods = 6 ) #periods\u662f\u5468\u671f\u7684\u610f\u601d,\u521d\u59cb\u503c:20170101 print ( dates ) df1 = pd . DataFrame ( np . arange ( 24 ) . reshape (( 6 , 4 )), index = dates , columns = [ 'A' , 'B' , 'C' , 'D' ]) df1 \u6267\u884c\u7ed3\u679c: DatetimeIndex ([ '2017-01-01' , '2017-01-02' , '2017-01-03' , '2017-01-04' , '2017-01-05' , '2017-01-06' ], dtype = 'datetime64[ns]' , freq = 'D' ) A B C D 2017 - 01 - 01 0 1 2 3 2017 - 01 - 02 4 5 6 7 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 2017 - 01 - 05 16 17 18 19 2017 - 01 - 06 20 21 22 23 df1 [ 'A' ] #\u5c06DataFrame\u7684\u5217\u83b7\u53d6\u4e3a\u4e00\u4e2aSeries \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 . A ##\u5c06DataFrame\u7684\u5217\u83b7\u53d6\u4e3a\u4e00\u4e2aSeries,\u8ddf\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u4e00\u6837\u7684 \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 [ 0 : 2 ] #\u53d60-1\u884c\u7684dataframe \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 01 0 1 2 3 2017 - 01 - 02 4 5 6 7 df1 [ '20170102' : '20170104' ] #\u901a\u8fc7\u7d22\u5f15\u53d6\u591a\u884c \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 02 4 5 6 7 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 #\u901a\u8fc7\u884c\u6807\u7b7e\u9009\u62e9\u6570\u636e df1 . loc [ '20170102' ] \u6267\u884c\u7ed3\u679c: A 4 B 5 C 6 D 7 Name : 2017 - 01 - 02 00 : 00 : 00 , dtype : int32 #\u901a\u8fc7\u884c\u6807\u7b7e\u53ca\u5217\u540d\u53d6\u6570\u636e,\u5148\u53d6\u51fa\u884c,\u518d\u53d6\u5217 df1 . loc [ '20170101' ,[ 'A' , 'C' ]] \u6267\u884c\u7ed3\u679c: A 0 C 2 Name : 2017 - 01 - 01 00 : 00 : 00 , dtype : int32 df1 . loc [:,[ 'A' , 'B' ]] #\u53d6\u51fa\u6240\u6709\u884c\u7684\u67d0\u51e0\u5217 \u6267\u884c\u7ed3\u679c: A B 2017 - 01 - 01 0 1 2017 - 01 - 02 4 5 2017 - 01 - 03 8 9 2017 - 01 - 04 12 13 2017 - 01 - 05 16 17 2017 - 01 - 06 20 21 #\u901a\u8fc7\u4f4d\u7f6e\u9009\u62e9\u6570\u636e df1 . iloc [ 2 ] #\u7b2c\u4e8c\u884c \u6267\u884c\u7ed3\u679c: A 8 B 9 C 10 D 11 Name : 2017 - 01 - 03 00 : 00 : 00 , dtype : int32 df1 . iloc [ 1 : 3 , 2 : 4 ] #\u53d6\u5f97\u662f2-3\u884c,3-4\u5217 \u6267\u884c\u7ed3\u679c: C D 2017 - 01 - 02 6 7 2017 - 01 - 03 10 11 df1 . iloc [[ 1 , 2 , 4 ],[ 1 , 3 ]] #\u53d62,3,5\u884c\u76842,4\u5217 \u6267\u884c\u7ed3\u679c: B D 2017 - 01 - 02 5 7 2017 - 01 - 03 9 11 2017 - 01 - 05 17 19 #\u6df7\u5408\u6807\u7b7e\u4f4d\u7f6e\u9009\u62e9(\u6807\u7b7e\u52a0\u4f4d\u7f6e) df1 . ix [ 2 : 4 ,[ 'A' , 'C' ]] \u6267\u884c\u7ed3\u679c: A C 2017 - 01 - 03 8 10 2017 - 01 - 04 12 14 df1 . ix [ '20170102' : '20170104' , 2 : 4 ] \u6267\u884c\u7ed3\u679c: C D 2017 - 01 - 02 6 7 2017 - 01 - 03 10 11 2017 - 01 - 04 14 15 df1 . A #\u6309\u5217\u540d\u53d6\u51fa\u8be5\u5217 \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 . A > 6 #\u63d0\u53d6\u67d0\u4e00\u5217\u8fdb\u884c\u5224\u65ad \u6267\u884c\u7ed3\u679c 2017-01-01 False 2017-01-02 False 2017-01-03 True 2017-01-04 True 2017-01-05 True 2017-01-06 True Freq: D, Name: A, dtype: bool df1 [ df1 . A > 6 ] #\u5c06\u7b26\u5408\u5224\u65ad\u6761\u4ef6\u7684\u6570\u636e\u518d\u53d6\u51fa\u6765,\u8fd9\u4e00\u5217\u6570\u636e\u4e2d\u5927\u4e8e6\u7684\u6570\u636e \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 2017 - 01 - 05 16 17 18 19 2017 - 01 - 06 20 21 22 23 3.pandas\u8d4b\u503c\u53ca\u64cd\u4f5c \u00b6 import pandas as pd import numpy as np dates = np . arange ( 20170101 , 20170107 ) df1 = pd . DataFrame ( np . arange ( 24 ) . reshape (( 6 , 4 )), index = dates , columns = [ 'A' , 'B' , 'C' , 'D' ]) df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 5 6 7 20170103 8 9 10 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 . iloc [ 2 , 2 ] #\u6309\u7167\u4f4d\u7f6e\u53d6\u51fa3\u884c3\u5217\u7684\u6570 \u6267\u884c\u7ed3\u679c: 10 df1 . iloc [ 2 , 2 ] = 100 #\u5c063\u884c3\u5217\u4f4d\u7f6e\u7684\u6570\u8fdb\u884c\u91cd\u65b0\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 5 6 7 20170103 8 9 100 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 . loc [ 20170102 , 'B' ] = 200 #\u4f7f\u7528\u6807\u7b7e\u53d6\u51fa\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\u8fdb\u884c\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 [ df1 . A > 10 ] = 0 #\u4f7f\u7528\u6761\u4ef6\u5224\u65ad\u5bf9\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u636e\u8fdb\u884c\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 0 0 0 0 20170105 0 0 0 0 20170106 0 0 0 0 df1 . A [ df1 . A == 0 ] = 1 df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 1 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 1 0 0 0 20170105 1 0 0 0 20170106 1 0 0 0 df1 [ 'E' ] = 10 #\u6dfb\u52a0\u4e00\u5217,\u8fd9\u4e00\u5217\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u8fd9\u4e2a\u6570 df1 \u6267\u884c\u7ed3\u679c: A B C D E 20170101 1 1 2 3 10 20170102 4 200 6 7 10 20170103 8 9 100 11 10 20170104 1 0 0 0 10 20170105 1 0 0 0 10 20170106 1 0 0 0 10 df1 [ 'F' ] = pd . Series ([ 1 , 2 , 3 , 4 , 5 , 6 ], index = dates ) #\u6dfb\u52a0\u4e00\u5217,\u4f7f\u7528series\u6dfb\u52a0 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1 1 2 3 10 1 20170102 4 200 6 7 10 2 20170103 8 9 100 11 10 3 20170104 1 0 0 0 10 4 20170105 1 0 0 0 10 5 20170106 1 0 0 0 10 6 df1 . loc [ 20170107 ,[ 'A' , 'B' , 'C' ]] = [ 1 , 2 , 3 ] #\u6dfb\u52a0\u4e00\u884c\u4e2d\u54ea\u4e9b\u5217(\u6309\u7167\u6807\u7b7e) df1 \u6267\u884c\u7ed3\u679c:\u6ca1\u6709\u8d4b\u503c\u7684\u5217\u5c31\u662fnan A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN s1 = pd . Series ([ 1 , 2 , 3 , 4 , 5 , 6 ], index = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ]) s1 . name = 'S1' df2 = df1 . append ( s1 ) #\u4f7f\u7528append\u6dfb\u52a0\u4e00\u884c(series) df2 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN S1 1.0 2.0 3.0 4.0 5.0 6.0 df1 . insert ( 1 , 'G' , df2 [ 'E' ]) #\u5728\u7b2c\u4e00\u5217\u63d2\u5165\u7d22\u5f15\u4e3aG\u7684df2\u4e2d\u7684E\u5217 df1 \u6267\u884c\u7ed3\u679c: A G B C D E F 20170101 1.0 10.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 10.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 10.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 10.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 10.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 10.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 NaN 2.0 3.0 NaN NaN NaN g = df1 . pop ( 'G' ) #\u5f39\u51faG\u5217 df1 . insert ( 6 , 'G' , g ) #\u5728\u6700\u540e\u63d2\u5165 df1 \u6267\u884c\u7ed3\u679c: A B C D E F G 20170101 1.0 1.0 2.0 3.0 10.0 1.0 10.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 10.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 10.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 10.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 10.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 10.0 20170107 1.0 2.0 3.0 NaN NaN NaN NaN del df1 [ 'G' ] #\u5220\u9664G\u5217 df1 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN df2 = df1 . drop ([ 'A' , 'B' ], axis = 1 ) #\u5220\u9664AB\u5217 df2 \u6267\u884c\u7ed3\u679c: C D E F 20170101 2.0 3.0 10.0 1.0 20170102 6.0 7.0 10.0 2.0 20170103 100.0 11.0 10.0 3.0 20170104 0.0 0.0 10.0 4.0 20170105 0.0 0.0 10.0 5.0 20170106 0.0 0.0 10.0 6.0 20170107 3.0 NaN NaN NaN df2 = df1 . drop ([ 20170101 , 20170102 ], axis = 0 ) #\u5220\u966420170101,20170102\u884c,axis=0\u4ee3\u8868\u5220\u9664\u7684\u662f\u884c df1 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN df2 \u6267\u884c\u7ed3\u679c: A B C D E F 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN 4.pandas\u5904\u7406\u4e22\u5931\u6570\u636e \u00b6 import pandas as pd import numpy as np dates = np . arange ( 20170101 , 20170105 ) df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 4 , 3 )), index = dates , columns = [ 'A' , 'B' , 'C' ]) df1 \u6267\u884c\u7ed3\u679c: df2 = pd . DataFrame ( df1 , index = dates , columns = [ 'A' , 'B' , 'C' , 'D' , 'E' ]) #\u521b\u5efa\u5305\u542bnan\u7684dataframe df2 \u6267\u884c: s1 = pd . Series ([ 3 , 4 , 6 ], index = dates [: 3 ]) s2 = pd . Series ([ 32 , 5 , 2 ], index = dates [ 1 :]) df2 [ 'D' ] = s1 df2 [ 'E' ] = s2 df2 df2 . dropna ( axis = 0 , how = 'any' ) #axis=[0,1] 0\u4ee3\u8868\u884c\uff0c1\u4ee3\u8868\u5217\u3002how=['any','all'] any\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a all\u5168\u90e8,\u5220\u9664\u542b\u6709\u7a7a\u503c\u7684\u884c df2 . dropna ( axis = 1 , how = 'any' ) #axis=[0,1] 0\u4ee3\u8868\u884c\uff0c1\u4ee3\u8868\u5217\u3002how=['any','all'] any\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a all\u5168\u90e8 df2 . fillna ( value = 0 ) #\u628a\u7a7a\u503c\u8d4b\u503c\u4e3a0,fill\u586b\u5145\u7684\u610f\u601d df2 . isnull () #\u67e5\u770b\u7a7a\u503c np . any ( df2 . isnull ()) #\u53ea\u8981\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u503c\u5c31\u4f1a\u8fd4\u56detrue \u6267\u884c\u7ed3\u679c: True np . all ( df2 . isnull ()) #\u6240\u6709\u4e3a\u7a7a\u503c\u624d\u8fd4\u56detrue False 5.pandas\u8bfb\u53d6\u53ca\u5199\u5165\u6587\u4ef6 \u00b6 import pandas as pd file = pd . read_csv ( 'people.csv' , encoding = 'gbk' ) file file . iloc [ 2 , 0 ] = '\u6df1\u5733' #\u8d4b\u503c\u64cd\u4f5c file file . to_csv ( 'people2.csv' ) #\u5199\u5165\u6587\u4ef6 6.pandas\u5408\u5e76,concat \u00b6 import pandas as pd import numpy as np df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) df3 = pd . DataFrame ( np . arange ( 24 , 36 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) print ( df1 ) print ( df2 ) print ( df3 ) df4 = pd . concat ([ df1 , df2 , df3 ], axis = 0 ) #\u7eb5\u5411\u5408\u5e76,concat\u8fde\u63a5 df4 df4 = pd . concat ([ df1 , df2 , df3 ], axis = 0 , ignore_index = True ) #\u7eb5\u5411\u5408\u5e76\uff0c\u4e0d\u8003\u8651\u539f\u6765\u7684index df4 df5 = pd . concat ([ df1 , df2 , df3 ], axis = 1 ) #\u6a2a\u5411\u5408\u5e76 df5 df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'f' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'c' , 'd' , 'e' ]) print ( df1 ) print ( df2 ) df6 = pd . concat ([ df1 , df2 ], join = 'outer' , ignore_index = True ) #\u5408\u5e76\u4e24\u4e2a\u8868\uff0c\u7f3a\u5c11\u7684\u90e8\u5206\u586b\u5145NaN df6 df7 = pd . concat ([ df1 , df2 ], join = 'inner' , ignore_index = True ) #\u5408\u5e76\u4e24\u4e2a\u8868\uff0c\u7f3a\u5c11\u7684\u90e8\u5206\u53bb\u6389 df7 df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'f' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 4 , 3 )), columns = [ 'a' , 'c' , 'd' ]) print ( df1 ) print ( df2 ) df8 = pd . concat ([ df1 , df2 ], axis = 1 , join_axes = [ df1 . index ]) #\u6a2a\u5411\u5408\u5e76\uff0cindex\u4f7f\u7528df1\u7684index df8 df8 = pd . concat ([ df1 , df2 ], axis = 1 ) #\u6a2a\u5411\u5408\u5e76 df8 7.pandas\u5408\u5e76merge \u00b6 import pandas as pd left = pd . DataFrame ({ 'key' :[ 'K0' , 'K1' , 'K2' , 'K3' ], 'A' :[ 'A0' , 'A1' , 'A2' , 'A3' ], 'B' :[ 'B0' , 'B1' , 'B2' , 'B3' ]}) right = pd . DataFrame ({ 'key' :[ 'K0' , 'K1' , 'K2' , 'K3' ], 'C' :[ 'C0' , 'C1' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D1' , 'D2' , 'D3' ]}) print ( left ) print ( right ) res = pd . merge ( left , right , on = 'key' ) #\u6839\u636e\u54ea\u4e00\u5217\u8fdb\u884c\u5408\u5e76 res left = pd . DataFrame ({ 'key1' :[ 'K0' , 'K0' , 'K1' , 'K2' ], 'key2' :[ 'K0' , 'K1' , 'K0' , 'K1' ], 'A' :[ 'A0' , 'A1' , 'A2' , 'A3' ], 'B' :[ 'B0' , 'B1' , 'B2' , 'B3' ]}) right = pd . DataFrame ({ 'key1' :[ 'K0' , 'K1' , 'K1' , 'K3' ], 'key2' :[ 'K0' , 'K0' , 'K0' , 'K0' ], 'C' :[ 'C0' , 'C1' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D1' , 'D2' , 'D3' ]}) print ( left ) print ( right ) #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' ) #how\u9ed8\u8ba4inner,\u5e26\u7f3a\u5931\u503c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'inner' ) #how\u9ed8\u8ba4inner,\u4e0d\u5e26\u7f3a\u5931\u503c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'left' ) #how\u9ed8\u8ba4inner,\u4f7f\u7528left,\u6309\u7167\u5de6\u8fb9\u8868\u7684\u7d22\u5f15\u6765\u5408\u5e76,\u7531\u4e8e2\u8868\u4e2d\u6709\u4e24\u4e2ak1,k0\u884c.\u56e0\u6b64\u9700\u8981\u4e24\u884c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' , indicator = True ) #\u663e\u793amerge\u4fe1\u606f res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' , indicator = 'indicator_column' ) #\u663e\u793amerge\u4fe1\u606f res left = pd . DataFrame ({ 'A' :[ 'A0' , 'A1' , 'A2' ], 'B' :[ 'B0' , 'B1' , 'B2' ]}, index = [ 'K0' , 'K1' , 'K2' ]) right = pd . DataFrame ({ 'C' :[ 'C0' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D2' , 'D3' ]}, index = [ 'K0' , 'K2' , 'K3' ]) print ( left ) print ( right ) boys = pd . DataFrame ({ 'k' :[ 'K0' , 'K1' , 'K2' ], 'age' :[ 1 , 2 , 3 ]}) girls = pd . DataFrame ({ 'k' :[ 'K0' , 'K0' , 'K3' ], 'age' :[ 4 , 5 , 6 ]}) print ( boys ) print ( girls ) res = pd . merge ( boys , girls , on = 'k' , suffixes = [ '_boy' , '_girl' ], how = 'outer' ) #\u6839\u636ek\u8fdb\u884c\u5408\u5e76,suffixs\u4e3a\u4e86\u533a\u522b\u5408\u5e76\u540e\u7684\u4fe1\u606f res 8.pandas plot \u00b6 import pandas as pd import numpy as np import matplotlib.pyplot as plt data = pd . Series ( np . random . randn ( 1000 ), index = np . arange ( 1000 )) # print(data) data = data . cumsum () #\u7d2f\u52a0\u64cd\u4f5c # print(data) #\u7d22\u5f15\u52a0\u6570\u636e data . plot () #\u8c03\u7528\u753b\u56fe,\u7d22\u5f15\u4e3ax,\u503c\u4e3ay plt . show () data = pd . DataFrame ( np . random . randn ( 1000 , 4 ), index = np . arange ( 1000 ), columns = [ 'A' , 'B' , 'C' , 'D' ]) data = data . cumsum () print ( data . head ()) data . plot () plt . show () ax = data . plot . scatter ( x = 'A' , y = 'B' , color = 'Blue' , label = 'class 1' ) data . plot . scatter ( x = 'A' , y = 'C' , color = 'Green' , label = 'class 2' , ax = ax ) plt . show () 9 \u5bfc\u51facsv\u6587\u4ef6\u53c2\u6570\u7684\u8bbe\u7f6e \u00b6 to_csv \u65b9\u6cd5\u548c\u4e3b\u8981\u53c2\u6570 \u00b6 to_csv \u65b9\u6cd5\u53ef\u4ee5\u5c06Series\u548cDataFrame\u5bf9\u8c61\u8f93\u51fa\u6210\u9017\u53f7\u5206\u9694\u7684csv\u6587\u4ef6 df . to_csv ( path_or_buf , sep , na_rep , float_format , columns , header , index , index_label , mode , encoding , line_terminator , quoting , quotechar , doublequote , escapechar , chunksize , tupleize_cols , date_format ) \u53c2\u6570\u8bf4\u660e * path_or_buf \uff1a\u8981\u4fdd\u5b58\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d df.to_csv(\"./output.csv\") #\u4fdd\u5b58\u5728\u5f53\u524d\u6587\u4ef6\u5939 * sep \uff1a\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u662f\",\" df . to_csv ( \"./output.csv\" , sep = \" \\t \" ) #\u7528Tab\u505a\u5206\u9694\u7b26 * na_rep \uff1a\u6307\u5b9a\u7a7a\u503c\u7684\u8f93\u51fa\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u662f\u7a7a\u5b57\u7b26\u4e32 float_format \uff1a\u6d6e\u70b9\u6570\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u8981\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 df . to_csv ( \"./output.csv\" , float_format = \" %.2f \" ) #\u6d6e\u70b9\u6570\u683c\u5f0f\u8868\u793a\u65b9\u6cd5 * columns \uff1a\u6307\u5b9a\u8981\u8f93\u51fa\u7684\u5217\uff0c\u7528\u5217\u540d\u5217\u8868\u8868\u793a\uff0c\u9ed8\u8ba4\u662fNone \u6ce8\u610f\u6587\u6863\u6709\u4e9b\u5730\u65b9\u5199\u7684\u53c2\u6570\u540d\u662fcols\uff0c\u662f\u4e0d\u5bf9\u7684 df . to_csv ( \"./output.csv\" , cols = [ \"month\" , \"fruit\" ]) * header \uff1a\u662f\u5426\u8f93\u51fa\u5217\u540d\uff0c\u9ed8\u8ba4\u662fTrue df . to_csv ( \"./output.csv\" , header = False ) #\u4e0d\u8f93\u51fa\u5217\u540d * index \uff1a\u662f\u5426\u8f93\u51fa\u7d22\u5f15\uff0c\u9ed8\u8ba4\u662fTrue df . to_csv ( \"./output.csv\" , index = False ) #\u4e0d\u8f93\u51fa\u7d22\u5f15 * index_label \uff1a\u7d22\u5f15\u5217\u7684\u5217\u540d\uff0c\u9ed8\u8ba4\u662fNone df . to_csv ( \"./output.csv\" , index_label = \"id\" ) #\u7d22\u5f15\u5217\u7684\u5217\u540d\u4e3aid * encoding \uff1a\u7f16\u7801\u65b9\u5f0f\uff0cPython2\u4e0b\u9ed8\u8ba4\u201cascii\u201d\uff0cPython3\u4e0b\u9ed8\u8ba4\u201cutf-8\u201d df . to_csv ( \"./output.csv\" , encoding = \"utf-8\" ) * line_terminator \uff1a\u6362\u884c\u7b26\uff0c\u9ed8\u8ba4\u662f'\\n' df . to_csv ( \"./output.csv\" , line_terminator = \" \\r\\n \" ) #\u7528dos\u4e0b\u7684\u6362\u884c\u7b26\u8f93\u51fa * quoting \uff1a\u8f93\u51fa\u662f\u5426\u7528\u5f15\u53f7\uff0c\u9ed8\u8ba4\u53c2\u6570\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u52a0\u53cc\u5f15\u53f7\uff0c\u53c2\u6570\u503c\u4e3a1\uff0c\u5219\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u4f1a\u52a0\u4e0a\u5f15\u53f7\uff0c\u6570\u503c\u4e5f\u4f1a\u88ab\u5f53\u4f5c\u5b57\u7b26\u4e32\u770b\u5f85 df . to_csv ( \"./output.csv\" , quoting = 1 ) #\u7ed9\u8f93\u51fa\u7684\u6bcf\u4e2a\u5b57\u6bb5\u52a0\u4e0a\u53cc\u5f15\u53f7 * quotechar \uff1a\u5f15\u7528\u5b57\u7b26\uff0c\u5f53quoting=1\u53ef\u4ee5\u6307\u5b9a\u5f15\u53f7\u5b57\u7b26\u4e3a\u53cc\u5f15\u53f7\"\\\"\"\u6216\u5355\u5f15\u53f7\"\\'\" df . to_csv ( \"./output.csv\" , quoting = 1 , quotechar = \" \\' \" ) * chunksize \uff1a\u4e00\u6b21\u5199\u5165csv\u6587\u4ef6\u7684\u884c\u6570\uff0c\u5f53df\u8868\u5185\u5bb9\u7279\u522b\u5927\u65f6\u9700\u8981\u4e00\u70b9\u4e00\u70b9\u5199\u5165csv\u6587\u4ef6 df . to_csv ( \"./output.csv\" , chunksize = 100 ) * date_format \uff1a\u65e5\u671f\u8f93\u51fa\u683c\u5f0f 10pandas\u91cd\u7f6eDataFrame\u6216Series\u7684\u7d22\u5f15index(\u91cd\u7f6e\u7d22\u5f15) \u00b6 \u5f53\u6211\u4eec\u5728\u6e05\u6d17\u6570\u636e\u65f6\u5f80\u5f80\u4f1a\u5c06\u5e26\u6709\u7a7a\u503c\u7684\u884c\u5220\u9664\uff0c\u4e0d\u8bba\u662fDataFrame\u8fd8\u662fSeries\u7684index\u90fd\u5c06\u4e0d\u518d\u662f\u8fde\u7eed\u7684\u7d22\u5f15\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528reset_index()\u65b9\u6cd5\u6765\u91cd\u7f6e\u5b83\u4eec\u7684\u7d22\u5f15\uff0c\u4ee5\u4fbf\u540e\u7eed\u7684\u64cd\u4f5c\u3002 \u5177\u4f53\u4f8b\u5b501\uff1a import pandas as pd import numpy as np df = pd . DataFrame ( np . arange ( 20 ) . reshape ( 5 , 4 ), index = [ 1 , 3 , 4 , 6 , 8 ]) print ( df ) \u6267\u884c\u7ed3\u679c: 0 1 2 3 1 0 1 2 3 3 4 5 6 7 4 8 9 10 11 6 12 13 14 15 8 16 17 18 19 \u6211\u4eec\u4f7f\u7528 reset_index() \u6765\u5904\u7406\uff1a print ( df . reset_index ()) \u6267\u884c\u7ed3\u679c: index 0 1 2 3 0 1 0 1 2 3 1 3 4 5 6 7 2 4 8 9 10 11 3 6 12 13 14 15 4 8 16 17 18 19 \u53ef\u4ee5\u770b\u5230\u6b64\u65f6\u83b7\u5f97\u4e86\u65b0\u7684index\u5217\uff0c\u800c\u539f\u6765\u7684index\u53d8\u6210\u4e86\u6211\u4eec\u7684\u6570\u636e\u5217\uff0c\u4fdd\u7559\u4e86\u4e0b\u6765\u3002\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u4fdd\u7559\u539f\u6765\u7684index\uff0c\u76f4\u63a5\u4f7f\u7528\u91cd\u7f6e\u540e\u7684\u7d22\u5f15\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570drop=True\uff0c\u9ed8\u8ba4\u503c\u662fFalse print ( df . reset_index ( drop = True )) \u6267\u884c\u7ed3\u679c: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 3 12 13 14 15 4 16 17 18 19 df.reset_index(drop=True) \u4ec5\u4ec5\u53ea\u662f\u53bb\u9664\u4e86\u539f\u672c\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u66ff\u6362\uff0cdf\u7684\u7d22\u5f15\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002\u82e5\u8981\u76f4\u63a5\u66ff\u6362\uff0c\u5e94\u8be5\u662f\u8fd9\u6837 df.reset_index(drop=True,inplace=True) df Out [ 4 ]: 0 1 2 3 1 0 1 2 3 3 4 5 6 7 4 8 9 10 11 6 12 13 14 15 8 16 17 18 19 \u5728\u539f\u6765\u7684\u5217\u8868\u4e0a\u4e0a\u91cd\u7f6e\u7d22\u5f15 df . reset_index ( drop = True , inplace = True ) df Out [ 6 ]: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 3 12 13 14 15 4 16 17 18 19","title":"036 pandas\u5e38\u7528"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#1pandasseriesdataframe","text":"import pandas as pd import numpy as np #\u5bfc\u5305 s1 = pd . Series ([ 4 , 7 , - 5 , 3 ]) #\u521b\u5efa\u4e00\u4e2aseries\uff0c\u7d22\u5f15\u4e3a\u9ed8\u8ba4\u503c print ( s1 ) \u6267\u884c\u7ed3\u679c: 0 4 1 7 2 -5 3 3 dtype: int64 s1 . values #series\u7684\u503c \u6267\u884c\u7ed3\u679c: array ([ 4 , 7 , - 5 , 3 ], dtype = int64 ) s1 . index #series\u7684\u7d22\u5f15 \u6267\u884c\u7ed3\u679c: RangeIndex ( start = 0 , stop = 4 , step = 1 ) s2 = pd . Series ([ 4.0 , 6.5 , - 0.5 , 4.2 ], index = [ 'd' , 'b' , 'a' , 'c' ]) #\u5e26\u7d22\u5f15\u521b\u5efa\u4e00\u4e2aseries print ( s2 ) \u6267\u884c\u7ed3\u679c: d 4.0 b 6.5 a - 0.5 c 4.2 dtype : float64 s2 [ 'a' ] #\u6839\u636e\u7d22\u5f15\u53d6\u503c,\u8ddf\u5217\u8868\u76f8\u4f3c \u6267\u884c\u7ed3\u679c: - 0.5 s2 [[ 'a' , 'b' , 'c' ]] #\u6839\u636e\u7d22\u5f15\u53d6\u591a\u884c\u503c,\u8bb0\u5f97\u662f\u53cc\u62ec\u53f7,\u5355\u4e2a\u503c\u662f\u5355\u62ec\u53f7 \u6267\u884c\u7ed3\u679c: a - 0.5 b 6.5 c 4.2 dtype : float64 'b' in s2 #\u5224\u65ad\u7d22\u5f15\u5728\u4e0d\u5728series\u4e2d \u6267\u884c\u7ed3\u679c: True 'e' in s2 \u6267\u884c\u7ed3\u679c: False #Series\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u5b9a\u957f\u7684\u6709\u5e8f\u5b57\u5178,\u4f7f\u7528\u5b57\u5178\u521b\u5efaseries dic1 = { 'apple' : 5 , 'pen' : 3 , 'applepen' : 10 } s3 = pd . Series ( dic1 ) print ( s3 ) \u6267\u884c\u7ed3\u679c: apple 5 pen 3 applepen 10 dtype : int64 #DataFrame ,\u4f7f\u7528\u5b57\u5178\u521b\u5efadataframe data = { 'year' :[ 2014 , 2015 , 2016 , 2017 ], 'income' :[ 10000 , 30000 , 50000 , 80000 ], 'pay' :[ 5000 , 20000 , 30000 , 30000 ] } df1 = pd . DataFrame ( data ) df1 \u6267\u884c\u7ed3\u679c: year income pay 0 2014 10000 5000 1 2015 30000 20000 2 2016 50000 30000 3 2017 80000 30000 df2 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 ))) df2 \u6267\u884c\u7ed3\u679c: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 df3 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), index = [ 'a' , 'c' , 'b' ], columns = [ 2 , 33 , 44 , 5 ]) #\u521b\u5efadataframe\u65f6\u6307\u5b9a\u7d22\u5f15\u548c\u5217\u540d df3 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11 df1 . columns #\u5217,\u53d6\u51fa\u5217\u540d \u6267\u884c\u7ed3\u679c: Index ([ 'year' , 'income' , 'pay' ], dtype = 'object' ) df1 . index #\u884c,\u53d6\u51fa\u884c\u7d22\u5f15 \u6267\u884c\u7ed3\u679c: RangeIndex ( start = 0 , stop = 4 , step = 1 ) df1 . values #\u6253\u5370dataframe\u7684\u6240\u6709\u503c,\u662f\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u5f0f \u6267\u884c\u7ed3\u679c: array ([[ 2014 , 10000 , 5000 ], [ 2015 , 30000 , 20000 ], [ 2016 , 50000 , 30000 ], [ 2017 , 80000 , 30000 ]], dtype = int64 ) df1 . describe () #describe\u63cf\u8ff0\u8868,\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e9b\u5206\u6790,\u8ba1\u6570,\u5e73\u5747\u503c,\u6807\u51c6\u5dee,\u6700\u5c0f\u503c,\u6700\u5927\u503c\u7b49\u7b49 \u6267\u884c\u7ed3\u679c: year income pay count 4.000000 4.000000 4.000000 mean 2015.500000 42500.000000 21250.000000 std 1.290994 29860.788112 11814.539066 min 2014.000000 10000.000000 5000.000000 25 % 2014.750000 25000.000000 16250.000000 50 % 2015.500000 40000.000000 25000.000000 75 % 2016.250000 57500.000000 30000.000000 max 2017.000000 80000.000000 30000.000000 df1 . T #\u5bf9dataframe\u8fdb\u884c\u8f6c\u7f6e \u6267\u884c\u7ed3\u679c: 0 1 2 3 year 2014 2015 2016 2017 income 10000 30000 50000 80000 pay 5000 20000 30000 30000 df3 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11 df3 . sort_index ( axis = 1 ) #\u5217\u6392\u5e8f,\u6839\u636e\u5217\u7d22\u5f15\u540d\u6392\u5e8f \u6267\u884c\u7ed3\u679c: 2 5 33 44 a 0 3 1 2 c 4 7 5 6 b 8 11 9 10 df3 . sort_index ( axis = 0 ) #\u884c\u6392\u5e8f,\u6839\u636e\u884c\u7d22\u5f15\u540d\u6392\u5e8f \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 b 8 9 10 11 c 4 5 6 7 df3 . sort_values ( by = 44 ) #\u6839\u636e\u5217\u540d\u5bf9\u503c\u8fdb\u884c\u6392\u5e8f,\u5168\u90e8\u4f1a\u53d8 \u6267\u884c\u7ed3\u679c: 2 33 44 5 a 0 1 2 3 c 4 5 6 7 b 8 9 10 11","title":"1.pandas\u57fa\u7840,Series,DataFrame"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#2-pandas","text":"import pandas as pd import numpy as np #\u521b\u5efa\u4e00\u4e2adataframe dates = pd . date_range ( '20170101' , periods = 6 ) #periods\u662f\u5468\u671f\u7684\u610f\u601d,\u521d\u59cb\u503c:20170101 print ( dates ) df1 = pd . DataFrame ( np . arange ( 24 ) . reshape (( 6 , 4 )), index = dates , columns = [ 'A' , 'B' , 'C' , 'D' ]) df1 \u6267\u884c\u7ed3\u679c: DatetimeIndex ([ '2017-01-01' , '2017-01-02' , '2017-01-03' , '2017-01-04' , '2017-01-05' , '2017-01-06' ], dtype = 'datetime64[ns]' , freq = 'D' ) A B C D 2017 - 01 - 01 0 1 2 3 2017 - 01 - 02 4 5 6 7 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 2017 - 01 - 05 16 17 18 19 2017 - 01 - 06 20 21 22 23 df1 [ 'A' ] #\u5c06DataFrame\u7684\u5217\u83b7\u53d6\u4e3a\u4e00\u4e2aSeries \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 . A ##\u5c06DataFrame\u7684\u5217\u83b7\u53d6\u4e3a\u4e00\u4e2aSeries,\u8ddf\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u4e00\u6837\u7684 \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 [ 0 : 2 ] #\u53d60-1\u884c\u7684dataframe \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 01 0 1 2 3 2017 - 01 - 02 4 5 6 7 df1 [ '20170102' : '20170104' ] #\u901a\u8fc7\u7d22\u5f15\u53d6\u591a\u884c \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 02 4 5 6 7 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 #\u901a\u8fc7\u884c\u6807\u7b7e\u9009\u62e9\u6570\u636e df1 . loc [ '20170102' ] \u6267\u884c\u7ed3\u679c: A 4 B 5 C 6 D 7 Name : 2017 - 01 - 02 00 : 00 : 00 , dtype : int32 #\u901a\u8fc7\u884c\u6807\u7b7e\u53ca\u5217\u540d\u53d6\u6570\u636e,\u5148\u53d6\u51fa\u884c,\u518d\u53d6\u5217 df1 . loc [ '20170101' ,[ 'A' , 'C' ]] \u6267\u884c\u7ed3\u679c: A 0 C 2 Name : 2017 - 01 - 01 00 : 00 : 00 , dtype : int32 df1 . loc [:,[ 'A' , 'B' ]] #\u53d6\u51fa\u6240\u6709\u884c\u7684\u67d0\u51e0\u5217 \u6267\u884c\u7ed3\u679c: A B 2017 - 01 - 01 0 1 2017 - 01 - 02 4 5 2017 - 01 - 03 8 9 2017 - 01 - 04 12 13 2017 - 01 - 05 16 17 2017 - 01 - 06 20 21 #\u901a\u8fc7\u4f4d\u7f6e\u9009\u62e9\u6570\u636e df1 . iloc [ 2 ] #\u7b2c\u4e8c\u884c \u6267\u884c\u7ed3\u679c: A 8 B 9 C 10 D 11 Name : 2017 - 01 - 03 00 : 00 : 00 , dtype : int32 df1 . iloc [ 1 : 3 , 2 : 4 ] #\u53d6\u5f97\u662f2-3\u884c,3-4\u5217 \u6267\u884c\u7ed3\u679c: C D 2017 - 01 - 02 6 7 2017 - 01 - 03 10 11 df1 . iloc [[ 1 , 2 , 4 ],[ 1 , 3 ]] #\u53d62,3,5\u884c\u76842,4\u5217 \u6267\u884c\u7ed3\u679c: B D 2017 - 01 - 02 5 7 2017 - 01 - 03 9 11 2017 - 01 - 05 17 19 #\u6df7\u5408\u6807\u7b7e\u4f4d\u7f6e\u9009\u62e9(\u6807\u7b7e\u52a0\u4f4d\u7f6e) df1 . ix [ 2 : 4 ,[ 'A' , 'C' ]] \u6267\u884c\u7ed3\u679c: A C 2017 - 01 - 03 8 10 2017 - 01 - 04 12 14 df1 . ix [ '20170102' : '20170104' , 2 : 4 ] \u6267\u884c\u7ed3\u679c: C D 2017 - 01 - 02 6 7 2017 - 01 - 03 10 11 2017 - 01 - 04 14 15 df1 . A #\u6309\u5217\u540d\u53d6\u51fa\u8be5\u5217 \u6267\u884c\u7ed3\u679c: 2017 - 01 - 01 0 2017 - 01 - 02 4 2017 - 01 - 03 8 2017 - 01 - 04 12 2017 - 01 - 05 16 2017 - 01 - 06 20 Freq : D , Name : A , dtype : int32 df1 . A > 6 #\u63d0\u53d6\u67d0\u4e00\u5217\u8fdb\u884c\u5224\u65ad \u6267\u884c\u7ed3\u679c 2017-01-01 False 2017-01-02 False 2017-01-03 True 2017-01-04 True 2017-01-05 True 2017-01-06 True Freq: D, Name: A, dtype: bool df1 [ df1 . A > 6 ] #\u5c06\u7b26\u5408\u5224\u65ad\u6761\u4ef6\u7684\u6570\u636e\u518d\u53d6\u51fa\u6765,\u8fd9\u4e00\u5217\u6570\u636e\u4e2d\u5927\u4e8e6\u7684\u6570\u636e \u6267\u884c\u7ed3\u679c: A B C D 2017 - 01 - 03 8 9 10 11 2017 - 01 - 04 12 13 14 15 2017 - 01 - 05 16 17 18 19 2017 - 01 - 06 20 21 22 23","title":"2 pandas\u9009\u62e9\u6570\u636e"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#3pandas","text":"import pandas as pd import numpy as np dates = np . arange ( 20170101 , 20170107 ) df1 = pd . DataFrame ( np . arange ( 24 ) . reshape (( 6 , 4 )), index = dates , columns = [ 'A' , 'B' , 'C' , 'D' ]) df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 5 6 7 20170103 8 9 10 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 . iloc [ 2 , 2 ] #\u6309\u7167\u4f4d\u7f6e\u53d6\u51fa3\u884c3\u5217\u7684\u6570 \u6267\u884c\u7ed3\u679c: 10 df1 . iloc [ 2 , 2 ] = 100 #\u5c063\u884c3\u5217\u4f4d\u7f6e\u7684\u6570\u8fdb\u884c\u91cd\u65b0\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 5 6 7 20170103 8 9 100 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 . loc [ 20170102 , 'B' ] = 200 #\u4f7f\u7528\u6807\u7b7e\u53d6\u51fa\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\u8fdb\u884c\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 12 13 14 15 20170105 16 17 18 19 20170106 20 21 22 23 df1 [ df1 . A > 10 ] = 0 #\u4f7f\u7528\u6761\u4ef6\u5224\u65ad\u5bf9\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u636e\u8fdb\u884c\u8d4b\u503c df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 0 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 0 0 0 0 20170105 0 0 0 0 20170106 0 0 0 0 df1 . A [ df1 . A == 0 ] = 1 df1 \u6267\u884c\u7ed3\u679c: A B C D 20170101 1 1 2 3 20170102 4 200 6 7 20170103 8 9 100 11 20170104 1 0 0 0 20170105 1 0 0 0 20170106 1 0 0 0 df1 [ 'E' ] = 10 #\u6dfb\u52a0\u4e00\u5217,\u8fd9\u4e00\u5217\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u8fd9\u4e2a\u6570 df1 \u6267\u884c\u7ed3\u679c: A B C D E 20170101 1 1 2 3 10 20170102 4 200 6 7 10 20170103 8 9 100 11 10 20170104 1 0 0 0 10 20170105 1 0 0 0 10 20170106 1 0 0 0 10 df1 [ 'F' ] = pd . Series ([ 1 , 2 , 3 , 4 , 5 , 6 ], index = dates ) #\u6dfb\u52a0\u4e00\u5217,\u4f7f\u7528series\u6dfb\u52a0 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1 1 2 3 10 1 20170102 4 200 6 7 10 2 20170103 8 9 100 11 10 3 20170104 1 0 0 0 10 4 20170105 1 0 0 0 10 5 20170106 1 0 0 0 10 6 df1 . loc [ 20170107 ,[ 'A' , 'B' , 'C' ]] = [ 1 , 2 , 3 ] #\u6dfb\u52a0\u4e00\u884c\u4e2d\u54ea\u4e9b\u5217(\u6309\u7167\u6807\u7b7e) df1 \u6267\u884c\u7ed3\u679c:\u6ca1\u6709\u8d4b\u503c\u7684\u5217\u5c31\u662fnan A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN s1 = pd . Series ([ 1 , 2 , 3 , 4 , 5 , 6 ], index = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ]) s1 . name = 'S1' df2 = df1 . append ( s1 ) #\u4f7f\u7528append\u6dfb\u52a0\u4e00\u884c(series) df2 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN S1 1.0 2.0 3.0 4.0 5.0 6.0 df1 . insert ( 1 , 'G' , df2 [ 'E' ]) #\u5728\u7b2c\u4e00\u5217\u63d2\u5165\u7d22\u5f15\u4e3aG\u7684df2\u4e2d\u7684E\u5217 df1 \u6267\u884c\u7ed3\u679c: A G B C D E F 20170101 1.0 10.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 10.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 10.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 10.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 10.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 10.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 NaN 2.0 3.0 NaN NaN NaN g = df1 . pop ( 'G' ) #\u5f39\u51faG\u5217 df1 . insert ( 6 , 'G' , g ) #\u5728\u6700\u540e\u63d2\u5165 df1 \u6267\u884c\u7ed3\u679c: A B C D E F G 20170101 1.0 1.0 2.0 3.0 10.0 1.0 10.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 10.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 10.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 10.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 10.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 10.0 20170107 1.0 2.0 3.0 NaN NaN NaN NaN del df1 [ 'G' ] #\u5220\u9664G\u5217 df1 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN df2 = df1 . drop ([ 'A' , 'B' ], axis = 1 ) #\u5220\u9664AB\u5217 df2 \u6267\u884c\u7ed3\u679c: C D E F 20170101 2.0 3.0 10.0 1.0 20170102 6.0 7.0 10.0 2.0 20170103 100.0 11.0 10.0 3.0 20170104 0.0 0.0 10.0 4.0 20170105 0.0 0.0 10.0 5.0 20170106 0.0 0.0 10.0 6.0 20170107 3.0 NaN NaN NaN df2 = df1 . drop ([ 20170101 , 20170102 ], axis = 0 ) #\u5220\u966420170101,20170102\u884c,axis=0\u4ee3\u8868\u5220\u9664\u7684\u662f\u884c df1 \u6267\u884c\u7ed3\u679c: A B C D E F 20170101 1.0 1.0 2.0 3.0 10.0 1.0 20170102 4.0 200.0 6.0 7.0 10.0 2.0 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN df2 \u6267\u884c\u7ed3\u679c: A B C D E F 20170103 8.0 9.0 100.0 11.0 10.0 3.0 20170104 1.0 0.0 0.0 0.0 10.0 4.0 20170105 1.0 0.0 0.0 0.0 10.0 5.0 20170106 1.0 0.0 0.0 0.0 10.0 6.0 20170107 1.0 2.0 3.0 NaN NaN NaN","title":"3.pandas\u8d4b\u503c\u53ca\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#4pandas","text":"import pandas as pd import numpy as np dates = np . arange ( 20170101 , 20170105 ) df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 4 , 3 )), index = dates , columns = [ 'A' , 'B' , 'C' ]) df1 \u6267\u884c\u7ed3\u679c: df2 = pd . DataFrame ( df1 , index = dates , columns = [ 'A' , 'B' , 'C' , 'D' , 'E' ]) #\u521b\u5efa\u5305\u542bnan\u7684dataframe df2 \u6267\u884c: s1 = pd . Series ([ 3 , 4 , 6 ], index = dates [: 3 ]) s2 = pd . Series ([ 32 , 5 , 2 ], index = dates [ 1 :]) df2 [ 'D' ] = s1 df2 [ 'E' ] = s2 df2 df2 . dropna ( axis = 0 , how = 'any' ) #axis=[0,1] 0\u4ee3\u8868\u884c\uff0c1\u4ee3\u8868\u5217\u3002how=['any','all'] any\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a all\u5168\u90e8,\u5220\u9664\u542b\u6709\u7a7a\u503c\u7684\u884c df2 . dropna ( axis = 1 , how = 'any' ) #axis=[0,1] 0\u4ee3\u8868\u884c\uff0c1\u4ee3\u8868\u5217\u3002how=['any','all'] any\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a all\u5168\u90e8 df2 . fillna ( value = 0 ) #\u628a\u7a7a\u503c\u8d4b\u503c\u4e3a0,fill\u586b\u5145\u7684\u610f\u601d df2 . isnull () #\u67e5\u770b\u7a7a\u503c np . any ( df2 . isnull ()) #\u53ea\u8981\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u503c\u5c31\u4f1a\u8fd4\u56detrue \u6267\u884c\u7ed3\u679c: True np . all ( df2 . isnull ()) #\u6240\u6709\u4e3a\u7a7a\u503c\u624d\u8fd4\u56detrue False","title":"4.pandas\u5904\u7406\u4e22\u5931\u6570\u636e"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#5pandas","text":"import pandas as pd file = pd . read_csv ( 'people.csv' , encoding = 'gbk' ) file file . iloc [ 2 , 0 ] = '\u6df1\u5733' #\u8d4b\u503c\u64cd\u4f5c file file . to_csv ( 'people2.csv' ) #\u5199\u5165\u6587\u4ef6","title":"5.pandas\u8bfb\u53d6\u53ca\u5199\u5165\u6587\u4ef6"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#6pandasconcat","text":"import pandas as pd import numpy as np df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) df3 = pd . DataFrame ( np . arange ( 24 , 36 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'd' ]) print ( df1 ) print ( df2 ) print ( df3 ) df4 = pd . concat ([ df1 , df2 , df3 ], axis = 0 ) #\u7eb5\u5411\u5408\u5e76,concat\u8fde\u63a5 df4 df4 = pd . concat ([ df1 , df2 , df3 ], axis = 0 , ignore_index = True ) #\u7eb5\u5411\u5408\u5e76\uff0c\u4e0d\u8003\u8651\u539f\u6765\u7684index df4 df5 = pd . concat ([ df1 , df2 , df3 ], axis = 1 ) #\u6a2a\u5411\u5408\u5e76 df5 df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'f' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'c' , 'd' , 'e' ]) print ( df1 ) print ( df2 ) df6 = pd . concat ([ df1 , df2 ], join = 'outer' , ignore_index = True ) #\u5408\u5e76\u4e24\u4e2a\u8868\uff0c\u7f3a\u5c11\u7684\u90e8\u5206\u586b\u5145NaN df6 df7 = pd . concat ([ df1 , df2 ], join = 'inner' , ignore_index = True ) #\u5408\u5e76\u4e24\u4e2a\u8868\uff0c\u7f3a\u5c11\u7684\u90e8\u5206\u53bb\u6389 df7 df1 = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), columns = [ 'a' , 'b' , 'c' , 'f' ]) df2 = pd . DataFrame ( np . arange ( 12 , 24 ) . reshape (( 4 , 3 )), columns = [ 'a' , 'c' , 'd' ]) print ( df1 ) print ( df2 ) df8 = pd . concat ([ df1 , df2 ], axis = 1 , join_axes = [ df1 . index ]) #\u6a2a\u5411\u5408\u5e76\uff0cindex\u4f7f\u7528df1\u7684index df8 df8 = pd . concat ([ df1 , df2 ], axis = 1 ) #\u6a2a\u5411\u5408\u5e76 df8","title":"6.pandas\u5408\u5e76,concat"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#7pandasmerge","text":"import pandas as pd left = pd . DataFrame ({ 'key' :[ 'K0' , 'K1' , 'K2' , 'K3' ], 'A' :[ 'A0' , 'A1' , 'A2' , 'A3' ], 'B' :[ 'B0' , 'B1' , 'B2' , 'B3' ]}) right = pd . DataFrame ({ 'key' :[ 'K0' , 'K1' , 'K2' , 'K3' ], 'C' :[ 'C0' , 'C1' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D1' , 'D2' , 'D3' ]}) print ( left ) print ( right ) res = pd . merge ( left , right , on = 'key' ) #\u6839\u636e\u54ea\u4e00\u5217\u8fdb\u884c\u5408\u5e76 res left = pd . DataFrame ({ 'key1' :[ 'K0' , 'K0' , 'K1' , 'K2' ], 'key2' :[ 'K0' , 'K1' , 'K0' , 'K1' ], 'A' :[ 'A0' , 'A1' , 'A2' , 'A3' ], 'B' :[ 'B0' , 'B1' , 'B2' , 'B3' ]}) right = pd . DataFrame ({ 'key1' :[ 'K0' , 'K1' , 'K1' , 'K3' ], 'key2' :[ 'K0' , 'K0' , 'K0' , 'K0' ], 'C' :[ 'C0' , 'C1' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D1' , 'D2' , 'D3' ]}) print ( left ) print ( right ) #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' ) #how\u9ed8\u8ba4inner,\u5e26\u7f3a\u5931\u503c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'inner' ) #how\u9ed8\u8ba4inner,\u4e0d\u5e26\u7f3a\u5931\u503c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'left' ) #how\u9ed8\u8ba4inner,\u4f7f\u7528left,\u6309\u7167\u5de6\u8fb9\u8868\u7684\u7d22\u5f15\u6765\u5408\u5e76,\u7531\u4e8e2\u8868\u4e2d\u6709\u4e24\u4e2ak1,k0\u884c.\u56e0\u6b64\u9700\u8981\u4e24\u884c res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' , indicator = True ) #\u663e\u793amerge\u4fe1\u606f res #how = ['left','right','inner','outer'] res = pd . merge ( left , right , on = [ 'key1' , 'key2' ], how = 'outer' , indicator = 'indicator_column' ) #\u663e\u793amerge\u4fe1\u606f res left = pd . DataFrame ({ 'A' :[ 'A0' , 'A1' , 'A2' ], 'B' :[ 'B0' , 'B1' , 'B2' ]}, index = [ 'K0' , 'K1' , 'K2' ]) right = pd . DataFrame ({ 'C' :[ 'C0' , 'C2' , 'C3' ], 'D' :[ 'D0' , 'D2' , 'D3' ]}, index = [ 'K0' , 'K2' , 'K3' ]) print ( left ) print ( right ) boys = pd . DataFrame ({ 'k' :[ 'K0' , 'K1' , 'K2' ], 'age' :[ 1 , 2 , 3 ]}) girls = pd . DataFrame ({ 'k' :[ 'K0' , 'K0' , 'K3' ], 'age' :[ 4 , 5 , 6 ]}) print ( boys ) print ( girls ) res = pd . merge ( boys , girls , on = 'k' , suffixes = [ '_boy' , '_girl' ], how = 'outer' ) #\u6839\u636ek\u8fdb\u884c\u5408\u5e76,suffixs\u4e3a\u4e86\u533a\u522b\u5408\u5e76\u540e\u7684\u4fe1\u606f res","title":"7.pandas\u5408\u5e76merge"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#8pandas-plot","text":"import pandas as pd import numpy as np import matplotlib.pyplot as plt data = pd . Series ( np . random . randn ( 1000 ), index = np . arange ( 1000 )) # print(data) data = data . cumsum () #\u7d2f\u52a0\u64cd\u4f5c # print(data) #\u7d22\u5f15\u52a0\u6570\u636e data . plot () #\u8c03\u7528\u753b\u56fe,\u7d22\u5f15\u4e3ax,\u503c\u4e3ay plt . show () data = pd . DataFrame ( np . random . randn ( 1000 , 4 ), index = np . arange ( 1000 ), columns = [ 'A' , 'B' , 'C' , 'D' ]) data = data . cumsum () print ( data . head ()) data . plot () plt . show () ax = data . plot . scatter ( x = 'A' , y = 'B' , color = 'Blue' , label = 'class 1' ) data . plot . scatter ( x = 'A' , y = 'C' , color = 'Green' , label = 'class 2' , ax = ax ) plt . show ()","title":"8.pandas plot"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#9-csv","text":"","title":"9 \u5bfc\u51facsv\u6587\u4ef6\u53c2\u6570\u7684\u8bbe\u7f6e"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#to_csv","text":"to_csv \u65b9\u6cd5\u53ef\u4ee5\u5c06Series\u548cDataFrame\u5bf9\u8c61\u8f93\u51fa\u6210\u9017\u53f7\u5206\u9694\u7684csv\u6587\u4ef6 df . to_csv ( path_or_buf , sep , na_rep , float_format , columns , header , index , index_label , mode , encoding , line_terminator , quoting , quotechar , doublequote , escapechar , chunksize , tupleize_cols , date_format ) \u53c2\u6570\u8bf4\u660e * path_or_buf \uff1a\u8981\u4fdd\u5b58\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d df.to_csv(\"./output.csv\") #\u4fdd\u5b58\u5728\u5f53\u524d\u6587\u4ef6\u5939 * sep \uff1a\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u662f\",\" df . to_csv ( \"./output.csv\" , sep = \" \\t \" ) #\u7528Tab\u505a\u5206\u9694\u7b26 * na_rep \uff1a\u6307\u5b9a\u7a7a\u503c\u7684\u8f93\u51fa\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u662f\u7a7a\u5b57\u7b26\u4e32 float_format \uff1a\u6d6e\u70b9\u6570\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u8981\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 df . to_csv ( \"./output.csv\" , float_format = \" %.2f \" ) #\u6d6e\u70b9\u6570\u683c\u5f0f\u8868\u793a\u65b9\u6cd5 * columns \uff1a\u6307\u5b9a\u8981\u8f93\u51fa\u7684\u5217\uff0c\u7528\u5217\u540d\u5217\u8868\u8868\u793a\uff0c\u9ed8\u8ba4\u662fNone \u6ce8\u610f\u6587\u6863\u6709\u4e9b\u5730\u65b9\u5199\u7684\u53c2\u6570\u540d\u662fcols\uff0c\u662f\u4e0d\u5bf9\u7684 df . to_csv ( \"./output.csv\" , cols = [ \"month\" , \"fruit\" ]) * header \uff1a\u662f\u5426\u8f93\u51fa\u5217\u540d\uff0c\u9ed8\u8ba4\u662fTrue df . to_csv ( \"./output.csv\" , header = False ) #\u4e0d\u8f93\u51fa\u5217\u540d * index \uff1a\u662f\u5426\u8f93\u51fa\u7d22\u5f15\uff0c\u9ed8\u8ba4\u662fTrue df . to_csv ( \"./output.csv\" , index = False ) #\u4e0d\u8f93\u51fa\u7d22\u5f15 * index_label \uff1a\u7d22\u5f15\u5217\u7684\u5217\u540d\uff0c\u9ed8\u8ba4\u662fNone df . to_csv ( \"./output.csv\" , index_label = \"id\" ) #\u7d22\u5f15\u5217\u7684\u5217\u540d\u4e3aid * encoding \uff1a\u7f16\u7801\u65b9\u5f0f\uff0cPython2\u4e0b\u9ed8\u8ba4\u201cascii\u201d\uff0cPython3\u4e0b\u9ed8\u8ba4\u201cutf-8\u201d df . to_csv ( \"./output.csv\" , encoding = \"utf-8\" ) * line_terminator \uff1a\u6362\u884c\u7b26\uff0c\u9ed8\u8ba4\u662f'\\n' df . to_csv ( \"./output.csv\" , line_terminator = \" \\r\\n \" ) #\u7528dos\u4e0b\u7684\u6362\u884c\u7b26\u8f93\u51fa * quoting \uff1a\u8f93\u51fa\u662f\u5426\u7528\u5f15\u53f7\uff0c\u9ed8\u8ba4\u53c2\u6570\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u52a0\u53cc\u5f15\u53f7\uff0c\u53c2\u6570\u503c\u4e3a1\uff0c\u5219\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u4f1a\u52a0\u4e0a\u5f15\u53f7\uff0c\u6570\u503c\u4e5f\u4f1a\u88ab\u5f53\u4f5c\u5b57\u7b26\u4e32\u770b\u5f85 df . to_csv ( \"./output.csv\" , quoting = 1 ) #\u7ed9\u8f93\u51fa\u7684\u6bcf\u4e2a\u5b57\u6bb5\u52a0\u4e0a\u53cc\u5f15\u53f7 * quotechar \uff1a\u5f15\u7528\u5b57\u7b26\uff0c\u5f53quoting=1\u53ef\u4ee5\u6307\u5b9a\u5f15\u53f7\u5b57\u7b26\u4e3a\u53cc\u5f15\u53f7\"\\\"\"\u6216\u5355\u5f15\u53f7\"\\'\" df . to_csv ( \"./output.csv\" , quoting = 1 , quotechar = \" \\' \" ) * chunksize \uff1a\u4e00\u6b21\u5199\u5165csv\u6587\u4ef6\u7684\u884c\u6570\uff0c\u5f53df\u8868\u5185\u5bb9\u7279\u522b\u5927\u65f6\u9700\u8981\u4e00\u70b9\u4e00\u70b9\u5199\u5165csv\u6587\u4ef6 df . to_csv ( \"./output.csv\" , chunksize = 100 ) * date_format \uff1a\u65e5\u671f\u8f93\u51fa\u683c\u5f0f","title":"to_csv \u65b9\u6cd5\u548c\u4e3b\u8981\u53c2\u6570"},{"location":"python\u5b66\u4e60/036-pandas\u5e38\u7528/#10pandasdataframeseriesindex","text":"\u5f53\u6211\u4eec\u5728\u6e05\u6d17\u6570\u636e\u65f6\u5f80\u5f80\u4f1a\u5c06\u5e26\u6709\u7a7a\u503c\u7684\u884c\u5220\u9664\uff0c\u4e0d\u8bba\u662fDataFrame\u8fd8\u662fSeries\u7684index\u90fd\u5c06\u4e0d\u518d\u662f\u8fde\u7eed\u7684\u7d22\u5f15\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528reset_index()\u65b9\u6cd5\u6765\u91cd\u7f6e\u5b83\u4eec\u7684\u7d22\u5f15\uff0c\u4ee5\u4fbf\u540e\u7eed\u7684\u64cd\u4f5c\u3002 \u5177\u4f53\u4f8b\u5b501\uff1a import pandas as pd import numpy as np df = pd . DataFrame ( np . arange ( 20 ) . reshape ( 5 , 4 ), index = [ 1 , 3 , 4 , 6 , 8 ]) print ( df ) \u6267\u884c\u7ed3\u679c: 0 1 2 3 1 0 1 2 3 3 4 5 6 7 4 8 9 10 11 6 12 13 14 15 8 16 17 18 19 \u6211\u4eec\u4f7f\u7528 reset_index() \u6765\u5904\u7406\uff1a print ( df . reset_index ()) \u6267\u884c\u7ed3\u679c: index 0 1 2 3 0 1 0 1 2 3 1 3 4 5 6 7 2 4 8 9 10 11 3 6 12 13 14 15 4 8 16 17 18 19 \u53ef\u4ee5\u770b\u5230\u6b64\u65f6\u83b7\u5f97\u4e86\u65b0\u7684index\u5217\uff0c\u800c\u539f\u6765\u7684index\u53d8\u6210\u4e86\u6211\u4eec\u7684\u6570\u636e\u5217\uff0c\u4fdd\u7559\u4e86\u4e0b\u6765\u3002\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u4fdd\u7559\u539f\u6765\u7684index\uff0c\u76f4\u63a5\u4f7f\u7528\u91cd\u7f6e\u540e\u7684\u7d22\u5f15\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570drop=True\uff0c\u9ed8\u8ba4\u503c\u662fFalse print ( df . reset_index ( drop = True )) \u6267\u884c\u7ed3\u679c: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 3 12 13 14 15 4 16 17 18 19 df.reset_index(drop=True) \u4ec5\u4ec5\u53ea\u662f\u53bb\u9664\u4e86\u539f\u672c\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u66ff\u6362\uff0cdf\u7684\u7d22\u5f15\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002\u82e5\u8981\u76f4\u63a5\u66ff\u6362\uff0c\u5e94\u8be5\u662f\u8fd9\u6837 df.reset_index(drop=True,inplace=True) df Out [ 4 ]: 0 1 2 3 1 0 1 2 3 3 4 5 6 7 4 8 9 10 11 6 12 13 14 15 8 16 17 18 19 \u5728\u539f\u6765\u7684\u5217\u8868\u4e0a\u4e0a\u91cd\u7f6e\u7d22\u5f15 df . reset_index ( drop = True , inplace = True ) df Out [ 6 ]: 0 1 2 3 0 0 1 2 3 1 4 5 6 7 2 8 9 10 11 3 12 13 14 15 4 16 17 18 19","title":"10pandas\u91cd\u7f6eDataFrame\u6216Series\u7684\u7d22\u5f15index(\u91cd\u7f6e\u7d22\u5f15)"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/","text":"\u8f6c\u8f7d \u7b2c\u4e00\u7ae0 PyQt5\u7684\u8d77\u70b9 \u00b6 1.1 \u5f00\u59cb\u5b89\u88c5PyQt5 \u00b6 \u5c31\u8ddf\u5b89\u88c5\u5176\u4ed6\u5e93\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u975e\u5e38\u7b80\u5355\uff1a Windows\u4e0a\u5b89\u88c5\uff1a pip install pyqt5 Linux\u4e0a\u5b89\u88c5\uff1a sudo apt-get install python3-pyqt5 MacOS\u4e0a\u5b89\u88c5\uff1a pip3 install pyqt5 \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0c\u53ea\u9700\u8981\u5bfc\u5165\u4e0b\u8be5\u6a21\u5757\u5c31\u53ef\u4ee5(\u6ce8\u610f\u5927\u5c0f\u5199)\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u63d0\u793a\uff0c\u5219\u5b89\u88c5\u6210\u529f\uff1a 1.2 \u7a0b\u5e8f\u8fd0\u884c\u8d77\u70b9 \u00b6 \u901a\u8fc7\u4e0b\u65b9\u4ee3\u7801\u5c31\u53ef\u4ee5\u5448\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684PyQt5\u7a0b\u5e8f\u3002 import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : #1. \u60f3\u8981\u521b\u5efa\u5e94\u7528\u5fc5\u987b\u5148\u5b9e\u4f8b\u5316\u4e00\u4e2aQApplication\uff0c #\u5e76\u5c06sys.argv\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff1b #2. \u5b9e\u4f8b\u5316\u4e00\u4e2aQLabel\u63a7\u4ef6\uff0c #\u8be5\u63a7\u4ef6\u7528\u6765\u5c55\u793a\u6587\u5b57\u6216\u56fe\u7247(\u53ef\u4ee5\u60f3\u8c61\u4e0b\u8863\u670d\u6807\u7b7e\uff0c\u4e0a\u9762\u65e2\u6709\u6587\u5b57\u4e5f\u6709\u56fe\u7247)\uff0c #\u8fd9\u91cc\u7528\u4e8e\u5c55\u793a\u6587\u672c\u3002 #\u53ef\u4ee5\u50cf\u4e0a\u65b9\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u5165'Hello World'\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c #\u4e5f\u53ef\u4ee5\u5148\u5b9e\u4f8b\u5316\uff0c\u518d\u8c03\u7528`setText()`\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6587\u672c\uff1a app = QApplication ( sys . argv ) #1 label = QLabel ( 'Hello World' ) # 2 label . show () # 3 sys . exit ( app . exec_ ()) # 4 * 1. \u60f3\u8981\u521b\u5efa\u5e94\u7528\u5fc5\u987b\u5148\u5b9e\u4f8b\u5316\u4e00\u4e2a QApplication \uff0c\u5e76\u5c06 sys.argv \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff1b * 2. \u5b9e\u4f8b\u5316\u4e00\u4e2a QLabel \u63a7\u4ef6\uff0c\u8be5\u63a7\u4ef6\u7528\u6765\u5c55\u793a\u6587\u5b57\u6216\u56fe\u7247(\u53ef\u4ee5\u60f3\u8c61\u4e0b\u8863\u670d\u6807\u7b7e\uff0c\u4e0a\u9762\u65e2\u6709\u6587\u5b57\u4e5f\u6709\u56fe\u7247)\uff0c\u8fd9\u91cc\u7528\u4e8e\u5c55\u793a\u6587\u672c\u3002\u53ef\u4ee5\u50cf\u4e0a\u65b9\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u5165'Hello World'\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u4e5f\u53ef\u4ee5\u5148\u5b9e\u4f8b\u5316\uff0c\u518d\u8c03\u7528 setText() \u65b9\u6cd5\u6765\u8bbe\u7f6e\u6587\u672c\uff1a import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : app = QApplication ( sys . argv ) #\u5b9e\u4f8b\u5316QApplication label = QLabel () #\u5b9e\u4f8b\u5316Qlabel label . setText ( 'Hello World' ) #\u8bbe\u7f6e\u6587\u672c label . show () #\u8bbe\u7f6e\u663e\u793a sys . exit ( app . exec_ ()) #\u5f53app.exec_() \u8fd4\u56de\u503c\u4e3a0\u65f6\u7cfb\u7edf\u9000\u51fa * 3. \u901a\u8fc7\u8c03\u7528show()\u65b9\u6cd5\u4f7f\u63a7\u4ef6\u53ef\u89c1(\u9ed8\u8ba4\u662f\u9690\u85cf)\uff1b 4. app.exec_() \u662f\u6267\u884c\u5e94\u7528\uff0c\u8ba9\u5e94\u7528\u5f00\u59cb\u8fd0\u8f6c\u5faa\u73af\uff0c\u76f4\u5230\u7a97\u53e3\u5173\u95ed\u8fd4\u56de 0 \u7ed9 sys.exit() \uff0c\u9000\u51fa\u6574\u4e2a\u7a0b\u5e8f\u3002 \u6709\u4e9b\u5c0f\u4f19\u4f34\u53ef\u80fd\u53d1\u73b0\u8fd8\u6709 exec() \uff0c\u5728Python2\u4e2dexec\u662f\u5173\u952e\u5b57\uff0c\u6240\u4ee5PyQt5\u5c31\u4f7f\u7528 exec_() \u800c\u4e0d\u662f exec() \u3002\u4e0d\u8fc7 exec \u5728Python3\u4e2d\u5df2\u7ecf\u4e0d\u518d\u662f\u5173\u952e\u5b57\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u8bfb\u8005\u4f7f\u7528\u7684\u662fPython3\u7684\u8bdd\u90a3\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7528`exec()\u4e5f\u5b8c\u5168\u6ca1\u5173\u7cfb\u3002 \u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u4e2d\u52a0\u4e0ahtml\u4ee3\u7801\uff0c\u4fee\u6539\u6587\u672c\u6837\u5f0f\u3002 import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : app = QApplication ( sys . argv ) label = QLabel ( '<font color=\"red\">Hello</font> <h1>World</h1>' ) #\u6ce8\u610f\u8fd9\u91cc\u7684font\u6807\u7b7e\u4e0d\u80fd\u968f\u610f\u4fee\u6539 # label.setText('<font color=\"red\">Hello</font> <h1>World</h1>') label . show () sys . exit ( app . exec_ ()) \u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u5b8c\u5168\u6ca1\u6709\u5173\u7cfb\uff0c\u5148\u8bb0\u4f4f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u5f80\u4e0b\u6162\u6162\u770b\uff0c\u5c31\u4f1a\u8d8a\u61c2\u8d8a\u591a\u4e86\u3002\u6bd4\u5982\u53ef\u4ee5\u7406\u89e3\u7684\u662fQLabel\u63a7\u4ef6\u7684\u7528\u6cd5\uff0c\u77e5\u9053\u8fd9\u4e2a\u63a7\u4ef6\u662f\u4ec0\u4e48\u7528\u7684\uff0c\u800c\u4e0a\u65b9\u7684\u7b2c4\u70b9\u53ef\u4ee5\u5c31\u5148\u8bb0\u4f4f\u8fd9\u4e48\u5199\u5c31\u597d\u3002 1.3 \u5c0f\u7ed3 \u00b6 QLabel\u662f\u6587\u672c\u63a7\u4ef6\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u7528\u6765\u5c55\u793a\u56fe\u7247(\u5728\u4e4b\u540e\u7ae0\u8282\u8bb2\u89e3)\uff1b \u53ef\u4ee5\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0html\u4ee3\u7801\uff1b app.exec_()\u7528\u6765\u6267\u884c\u5e94\u7528\uff0csys.exit()\u9000\u51fa\u7a0b\u5e8f(exec\u5c31\u662f\u82f1\u6587\u5f53\u4e2d\u7684execute\u3010\u6267\u884c\u3011\u7684\u7f29\u5199\uff0c\u8fd9\u6837\u8bb0\u5c31\u5bb9\u6613\u4e86)\u3002 \u7b2c\u4e8c\u7ae0 \u4fe1\u53f7\u4e0e\u69fd\u2014\u2014\u88c1\u5224\u9e23\u67aa\u4e0e\u9009\u624b\u5f00\u8dd1 \u00b6 \u4e0d\u7528\u591a\u8bf4\uff0c\u4fe1\u53f7(signal)\u4e0e\u69fd(slot)\u673a\u5236\u5f88\u91cd\u8981\u3002\u5728\u8fd9\u91cc\u6211\u628a\u4fe1\u53f7\u89c6\u4f5c\u88c1\u5224\u9e23\u67aa\uff0c\u800c\u7528\u4e8e\u884c\u52a8\u7684\u69fd\u51fd\u6570\u5219\u89c6\u4f5c\u9009\u624b\u5f00\u8dd1\uff0c\u5f53\u88c1\u5224\u9e23\u67aa\u540e(\u5373\u4fe1\u53f7\u53d1\u51fa)\uff0c\u9009\u624b\u5c31\u5f00\u59cb\u5f80\u524d\u8dd1(\u69fd\u51fd\u6570\u542f\u52a8)\u3002PyQt5\u4e2d\u5404\u4e2a\u5bf9\u8c61\u95f4\u6216\u5404\u4e2a\u5bf9\u8c61\u81ea\u8eab\u5c31\u662f\u901a\u8fc7\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236\u6765\u76f8\u4e92\u901a\u4fe1\u7684\uff0c\u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002 2.1 \u901a\u8fc7\u6309\u94ae\u6765\u6539\u53d8\u6587\u672c(\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u4e00\u4e2a\u69fd) \u00b6 \u5f88\u591a\u7a0b\u5e8f\u4e0a\u662f\u6709\u201c\u5f00\u59cb\u201d\u6309\u94ae\u7684\uff0c\u6309\u4e0b\u53bb\u540e\u6309\u94ae\u4e0a\u7684\u6587\u672c\u5c31\u53d8\u6210\u4e86\u201c\u505c\u6b62\u201d\u3002\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u793a\u4f8b(\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4f1a\u7528\u7c7b\u6765\u5448\u73b0)\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Fri May 24 08:47:52 2019 @author: zangz \"\"\" import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): # 1 def __init__ ( self ): # \u9996\u5148\u627e\u5230Demo\u7684\u7236\u7c7b\uff08\u6bd4\u5982\u662f\u7c7bQWidget\uff09\uff0c #\u7136\u540e\u628a\u7c7bDemo\u7684\u5bf9\u8c61self\u8f6c\u6362\u4e3a\u7c7bQWigget\u7684\u5bf9\u8c61\uff0c #\u7136\u540e\u201c\u88ab\u8f6c\u6362\u201d\u7684\u7c7bQWidget\u5bf9\u8c61\u8c03\u7528\u81ea\u5df1\u7684__init__\u51fd\u6570 super ( Demo , self ) . __init__ () # self . button = QPushButton ( 'Start' , self ) # 2 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6309\u94ae self . button . clicked . connect ( self . change_text ) # 3 def change_text ( self ): print ( 'change text' ) self . button . setText ( 'Stop' ) # 4 self . button . clicked . disconnect ( self . change_text ) # 5 if __name__ == '__main__' : app = QApplication ( sys . argv ) #\u5b9e\u4f8b\u5316\u4e00\u4e2aQApplication demo = Demo () #\u5b9e\u4f8b\u5316\u4e00\u4e2ademo # 6 demo . show () #\u663e\u793a\u6240\u6709\u7684\u63a7\u4ef6 # 7 sys . exit ( app . exec_ ()) * 1. \u8be5\u7c7b\u7ee7\u627fQWidget\uff0c\u53ef\u4ee5\u5c06QWidget\u770b\u4f5c\u662f\u4e00\u79cd\u6bdb\u576f\u623f\uff0c\u8fd8\u6ca1\u6709\u88c5\u4fee\uff0c\u800c\u6211\u4eec\u5f80\u5176\u4e2d\u653e\u5165QPushButton\u3001QLabel\u7b49\u63a7\u4ef6\u5c31\u76f8\u5f53\u4e8e\u5728\u88c5\u4fee\u8fd9\u95f4\u6bdb\u576f\u623f\u3002\u7c7b\u4f3c\u7684\u6bdb\u576f\u623f\u8fd8\u6709QMainWindow\u548cQDialog\uff0c\u4e4b\u540e\u7ae0\u8282\u518d\u8bb2\u8ff0\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2aQPushButton\uff0c\u56e0\u4e3a\u7ee7\u627f\u4e8eQWidget\uff0c\u6240\u4ee5self\u4e0d\u80fd\u5fd8\u4e86(\u76f8\u5f53\u4e8e\u544a\u8bc9\u7a0b\u5e8f\u8fd9\u4e2aQPushButton\u662f\u653e\u5728QWidget\u8fd9\u4e2a\u623f\u5b50\u4e2d\u7684)\uff1b \u8fde\u63a5\u4fe1\u53f7\u4e0e\u69fd\u51fd\u6570\u3002self.button\u5c31\u662f\u4e00\u4e2a\u63a7\u4ef6\uff0cclicked(\u6309\u94ae\u88ab\u70b9\u51fb)\u662f\u8be5\u63a7\u4ef6\u7684\u4e00\u4e2a\u4fe1\u53f7\uff0cconnect()\u5373\u8fde\u63a5\uff0cself.change_text\u5373\u4e0b\u65b9\u5b9a\u4e49\u7684\u51fd\u6570(\u6211\u4eec\u79f0\u4e4b\u4e3a\u69fd\u51fd\u6570)\u3002\u6240\u4ee5\u901a\u7528\u7684\u516c\u5f0f\u53ef\u4ee5\u662f\uff1awidget.signal.connect(slot)\uff1b (\u63a7\u4ef6.\u4fe1\u53f7(\u4ec0\u4e48\u4fe1\u53f7).\u8fde\u63a5(\u51fd\u6570)) \u5c06\u6309\u94ae\u6587\u672c\u4ece\u2018Start\u2019\u6539\u6210\u2018Stop\u2019\uff1b \u4fe1\u53f7\u548c\u69fd\u89e3\u7ed1\uff0c\u89e3\u7ed1\u540e\u518d\u6309\u6309\u94ae\u4f60\u4f1a\u53d1\u73b0\u63a7\u5236\u53f0\u4e0d\u4f1a\u518d\u8f93\u51fa\u2018change text\u2019\uff0c\u5982\u679c\u628a\u8fd9\u884c\u89e3\u7ed1\u7684\u4ee3\u7801\u6ce8\u91ca\u6389\uff0c\u4f60\u4f1a\u53d1\u73b0\u6bcf\u6309\u4e00\u6b21\u6309\u94ae\uff0c\u63a7\u5236\u53f0\u90fd\u4f1a\u8f93\u51fa\u4e00\u6b21\u2018change text\u2019\uff1b \u5b9e\u4f8b\u5316Demo\u7c7b\uff1b \u4f7fdemo\u53ef\u89c1\uff0c\u5176\u4e2d\u7684\u63a7\u4ef6\u81ea\u7136\u90fd\u53ef\u89c1(\u9664\u975e\u67d0\u63a7\u4ef6\u521a\u5f00\u59cb\u8bbe\u5b9a\u9690\u85cf) \u73b0\u5728\u7528\u9e23\u67aa\u548c\u5f00\u8dd1\u6765\u5206\u6790\u4e0b\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a\u6309\u94ae\u63a7\u4ef6\u662f\u88c1\u5224\uff0c\u4ed6\u9e23\u67aa\u53d1\u51fa\u4fe1\u53f7(clicked)\uff0cchange_text()\u69fd\u51fd\u6570\u8fd0\u884c\u5c31\u662f\u9009\u624b\u5f00\u8dd1\u3002 \u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u7a97\u53e3\u663e\u793a\u5982\u4e0b\uff1a \u70b9\u51fb\u4e4b\u540e\u6587\u672c\u5219\u6539\u53d8\uff1a 2.2 \u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u540c\u4e00\u4e2a\u69fd \u00b6 2.1 \u8fd9\u4e2a\u793a\u4f8b\u662f\u7528\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u4e00\u4e2a\u69fd\uff0c\u73b0\u5728\u6765\u770b\u4e0b\u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u540c\u4e00\u4e2a\u69fd\u3002 QPushButton\u8fd8\u6709\u4e24\u4e2a\u4fe1\u53f7\u662fpressed\u548creleased\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u89e3\u91ca\u5982\u4e0b\uff1a pressed: \u5f53\u9f20\u6807\u5728button\u4e0a\u5e76\u70b9\u51fb\u5de6\u952e\u7684\u65f6\u5019\uff0c\u89e6\u53d1\u4fe1\u53f7 \u3002 released: \u5f53\u9f20\u6807\u5de6\u952e\u88ab\u91ca\u653e\u7684\u65f6\u5019\u89e6\u53d1\u4fe1\u53f7\u3002 \u6240\u4ee5\u5176\u5b9epressed\u548creleased\u4e24\u4e2a\u8fde\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684clicked \u4e0b\u9762\u7528\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u6765\u89e3\u91ca\u5982\u4f55\u5c06\u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u69fd\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Start' , self ) self . button . pressed . connect ( self . change_text ) # 1 self . button . released . connect ( self . change_text ) # 2 def change_text ( self ): if self . button . text () == 'Start' : # 3 self . button . setText ( 'Stop' ) else : self . button . setText ( 'Start' ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-2. \u5c06pressed\u548creleased\u4fe1\u53f7\u8fde\u63a5\u642d\u914dchange_text()\u69fd\u51fd\u6570\u4e0a\uff1b \u82e5\u5f53\u524d\u6309\u94ae\u6587\u672c\u4e3a\u2018Start\u2019\uff0c\u5219\u5c06\u6587\u672c\u6539\u4e3a\u2018Stop\u2019\uff1b\u82e5\u4e3a\u2018Stop\u2019\uff0c\u5219\u6539\u4e3a\u2018Start\u2019\u3002 \u6240\u4ee5\u5f53\u9f20\u6807\u70b9\u51fb\u6309\u94ae\u4e0d\u653e\u65f6\uff0c\u53d1\u51fapressed\u4fe1\u53f7\uff0c\u8c03\u7528\u69fd\u51fd\u6570\uff0c\u5c06\u2018Start\u2019\u6587\u672c\u6539\u4e3a\u2018Stop\u2019\uff1b\u5f53\u9f20\u6807\u653e\u5f00\u540e\u91ca\u653ereleased\u4fe1\u53f7\uff0c\u518d\u6b21\u8c03\u7528\u69fd\u51fd\u6570\uff0c\u5c06\u6587\u672c\u6539\u56de\u2018Start\u2019\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff0c\u70b9\u51fb\u4e0d\u653e\u65f6\uff1a \u653e\u5f00\u540e\uff1a 2.3 \u4e00\u4e2a\u4fe1\u53f7\u4e0e\u53e6\u5916\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5 \u00b6 import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Start' , self ) self . button . pressed . connect ( self . button . released ) # 1 self . button . released . connect ( self . change_text ) # 2 def change_text ( self ): if self . button . text () == 'Start' : self . button . setText ( 'Stop' ) else : self . button . setText ( 'Start' ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-2. \u5c06pressed\u4fe1\u53f7\u548creleased\u4fe1\u53f7\u8fde\u63a5\u8d77\u6765\uff0c\u800creleased\u4fe1\u53f7\u5219\u4e0e\u69fd\u51fd\u6570\u8fde\u63a5\u3002\u8fd9\u6837\u5f53\u70b9\u51fb\u4e0d\u653e\u65f6\uff0cpressed\u4fe1\u53f7\u53d1\u51fa\uff0creleased\u4fe1\u53f7\u4e5f\u4f1a\u53d1\u51fa\uff0c\u4ece\u800c\u542f\u52a8\u69fd\u51fd\u6570\u3002\u91ca\u653e\u9f20\u6807\u5219\u53d1\u51fareleased\u4fe1\u53f7\uff0c\u518d\u6b21\u542f\u52a8\u69fd\u51fd\u6570\u3002\u6240\u4ee5\u7a0b\u5e8f\u8fd0\u884c\u6548\u679c\u8ddf2.2\u5c0f\u8282\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002 2. 4 \u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u591a\u4e2a\u69fd \u00b6 \u4fe1\u53f7\u90fd\u4e3aclicked\uff0c\u7136\u540e\u518d\u591a\u5b9a\u4e49\u51e0\u4e2a\u69fd\u51fd\u6570\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 300 ) # 1 self . setWindowTitle ( 'demo' ) # 2 self . button = QPushButton ( 'Start' , self ) self . button . clicked . connect ( self . change_text ) self . button . clicked . connect ( self . change_window_size ) # 3 self . button . clicked . connect ( self . change_window_title ) # 4 def change_text ( self ): print ( 'change text' ) self . button . setText ( 'Stop' ) self . button . clicked . disconnect ( self . change_text ) def change_window_size ( self ): # 5 print ( 'change window size' ) self . resize ( 500 , 500 ) self . button . clicked . disconnect ( self . change_window_size ) def change_window_title ( self ): # 6 print ( 'change window title' ) self . setWindowTitle ( 'window title changed' ) self . button . clicked . disconnect ( self . change_window_title ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u9996\u5148\u5728\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u5c06\u7a97\u53e3\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u5bbd300\uff0c\u957f300\uff1b \u5176\u6b21\u5c06\u7a97\u53e3\u540d\u79f0\u8bbe\u7f6e\u4e3a\u2018demo\u2019\uff1b 3-4. \u4fe1\u53f7\u548c\u69fd\u8fde\u63a5\uff0c\u53ef\u4ee5\u770b\u5230\u4fe1\u53f7\u8fd8\u662fclicked\uff0c\u800c\u69fd\u51fd\u6570\u591a\u4e86\u4e24\u4e2a\uff1b \u4fee\u6539\u7a97\u53e3\u5927\u5c0f\u7684\u69fd\u51fd\u6570\uff1b \u4fee\u6539\u7a97\u53e3\u540d\u79f0\u7684\u69fd\u51fd\u6570\uff1b \u73b0\u5728\u8fd0\u884c\u70b9\u51fb\u6309\u94ae\u540e\uff0c\u6309\u94ae\u6587\u672c\u4f1a\u7531\u2018Start\u2019\u53d8\u4e3a\u2018Stop\u2019\uff0c\u7a97\u53e3\u5927\u5c0f\u4ece(300, 300)\u53d8\u4e3a(500, 500)\uff0c\u7a97\u53e3\u6807\u9898\u7531\u2018demo\u2019\u53d8\u4e3a\u2018window title changed\u2019 \u4ee5\u4e0b\u662f\u8fd0\u884c\u622a\u56fe\uff1a \u70b9\u51fb\u540e\u5219\u53d8\u6210\uff1a 2.5 \u81ea\u5b9a\u4e49\u4fe1\u53f7 \u00b6 \u6ce8\u610f\u8fd9\u91cc\u5c06QPushButton\u6362\u6210\u4e86QLabel\u6765\u8bb2\u89e3\uff1a import sys from PyQt5.QtCore import pyqtSignal # 1 from PyQt5.QtWidgets import QApplication , QWidget , QLabel class Demo ( QWidget ): my_signal = pyqtSignal () # 2 def __init__ ( self ): super ( Demo , self ) . __init__ () self . label = QLabel ( 'Hello World' , self ) self . my_signal . connect ( self . change_text ) # 3 def change_text ( self ): if self . label . text () == 'Hello World' : self . label . setText ( 'Hello PyQt5' ) else : self . label . setText ( 'Hello World' ) def mousePressEvent ( self , QMouseEvent ): # 4 self . my_signal . emit () if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u9700\u8981\u5148\u5bfc\u5165pyqtSignal\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\uff1b \u5c06\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\u8fde\u63a5\u5230\u81ea\u5b9a\u4e49\u7684\u69fd\u51fd\u6570\u4e0a\uff1b mousePressEvent()\u65b9\u6cd5\u662f\u8bb8\u591a\u63a7\u4ef6\u81ea\u5e26\u7684\uff0c\u8fd9\u91cc\u6765\u81ea\u4e8eQWidget\u3002\u8be5\u65b9\u6cd5\u7528\u6765\u76d1\u6d4b\u9f20\u6807\u662f\u5426\u6709\u6309\u4e0b\u3002\u73b0\u5728\u9f20\u6807\u82e5\u88ab\u6309\u4e0b\uff0c\u5219\u4f1a\u53d1\u51fa\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u5f53\u5728\u7a97\u4f53\u7a7a\u767d\u5904\u6309\u4e0b\u9f20\u6807\uff0c\u5219\u6587\u672c\u53d1\u751f\u53d8\u5316\uff1a 2.6 \u5c0f\u7ed3 \u00b6 \u53ef\u4ee5\u5c06\u4fe1\u53f7\u548c\u69fd\u89c6\u4f5c\u88c1\u7247\u9e23\u67aa\u4e0e\u9009\u624b\u5f00\u8dd1\uff0c\u4fe1\u53f7\u53d1\u51fa\uff0c\u5219\u76f8\u5e94\u8fde\u63a5\u7684\u69fd\u51fd\u6570\u542f\u52a8\uff1b \u5355\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u5355\u4e2a\u69fd\uff1b\u5355\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u591a\u4e2a\u69fd\uff1b\u591a\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u5355\u4e2a\u69fd\uff1b\u4fe1\u53f7\u53ef\u4ee5\u4e0e\u4fe1\u53f7\u8fde\u63a5\uff1b\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4fe1\u53f7\uff1b mousePressEvent()\u65b9\u6cd5\u662f\u8bb8\u591a\u63a7\u4ef6\u81ea\u5e26\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u76d1\u6d4b\u9f20\u6807\u662f\u5426\u88ab\u6309\u4e0b\u3002 \u7b2c\u4e09\u7ae0 \u5e03\u5c40\u7ba1\u7406 \u00b6 \u628a\u5404\u4e2a\u63a7\u4ef6\u6446\u6446\u597d\uff0c\u8ba9\u6574\u4e2a\u754c\u9762\u66f4\u52a0\u6709\u5e8f\u597d\u770b\uff0c\u8fd9\u5c31\u662f\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u4f5c\u7528\u3002 3.1 \u5782\u76f4\u5e03\u5c40QVBoxLayout \u00b6 \u8be5\u5e03\u5c40\u65b9\u5f0f\u5c31\u662f\u5c06\u5404\u4e2a\u63a7\u4ef6\u6309\u4ece\u4e0a\u5230\u4e0b\u5782\u76f4\u7684\u65b9\u5f0f\u6446\u653e\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . v_layout = QVBoxLayout () # 1 self . v_layout . addWidget ( self . user_label ) # 2 self . v_layout . addWidget ( self . pwd_label ) # 3 self . setLayout ( self . v_layout ) # 4 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668QVBoxLayout\uff1b 2-3. \u901a\u8fc7\u8c03\u7528addWidget()\u65b9\u6cd5\u6765\u5c06\u63a7\u4ef6\u4e00\u4e2a\u4e2a\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\u4e2d\uff0c\u6700\u5148\u6dfb\u52a0\u7684\u51fa\u73b0\u5728\u6700\u4e0a\u65b9\uff1b \u5c06self.v_layout\u8bbe\u4e3a\u6574\u4e2a\u7a97\u53e3\u7684\u6700\u7ec8\u5e03\u5c40\u65b9\u5f0f\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u51fa\u4e24\u4e2a\u6807\u7b7e\u6587\u672c\u662f\u5782\u76f4\u5bf9\u9f50\u6392\u5217\u7684\uff1a 3.2 \u6c34\u5e73\u5e03\u5c40QHBoxLayout \u00b6 \u5c06\u63a7\u4ef6\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6c34\u5e73\u6446\u653e\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QHBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . user_line = QLineEdit ( self ) # 1 self . h_layout = QHBoxLayout () # 2 self . h_layout . addWidget ( self . user_label ) # 3 self . h_layout . addWidget ( self . user_line ) # 4 self . setLayout ( self . h_layout ) # 5 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. QLineEdit\u63a7\u4ef6\u5c31\u662f\u4e00\u4e2a\u7528\u6765\u8fdb\u884c\u5355\u884c\u6587\u672c\u8f93\u5165\u7684\u6846\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\uff1b 3-4. \u5c06QLabel\u548cQLineEdit\u63a7\u4ef6\u6dfb\u52a0\u5230\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u4e2d\uff0c\u5148\u6dfb\u52a0\u7684\u51fa\u73b0\u5728\u5de6\u8fb9\uff1b \u5c06self.h_layout\u8bbe\u4e3a\u6574\u4e2a\u7a97\u53e3\u7684\u6700\u7ec8\u5e03\u5c40\u65b9\u5f0f\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a 3.3 \u6df7\u5408\u4f7f\u7528QVBoxLayout\u548cQHBoxLayout \u00b6 \u6211\u4eec\u5c06\u5b9e\u73b0\u4e00\u4e2a\u7528\u4e8e\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\uff0c\u5e76\u6709\u767b\u9646\u548c\u6ce8\u518c\u6309\u94ae\u7684\u5c0f\u7a97\u53e3\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . label_v_layout = QVBoxLayout () # 1 self . line_v_layout = QVBoxLayout () # 2 self . button_h_layout = QHBoxLayout () # 3 self . label_line_h_layout = QHBoxLayout () # 4 self . all_v_layout = QVBoxLayout () # 5 self . label_v_layout . addWidget ( self . user_label ) # 6 self . label_v_layout . addWidget ( self . pwd_label ) self . line_v_layout . addWidget ( self . user_line ) self . line_v_layout . addWidget ( self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . label_line_h_layout . addLayout ( self . label_v_layout ) # 7 self . label_line_h_layout . addLayout ( self . line_v_layout ) self . all_v_layout . addLayout ( self . label_line_h_layout ) self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-3. \u5b9e\u4f8b\u5316\u4e09\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u5206\u522b\u7528\u6765\u7ba1\u7406 QLabel\uff0cQLineEdit \u548c QPushButton \uff1b 4-5. \u8fd9\u4e24\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u7528\u6765\u7ba1\u74061-3\u4e2d\u7684\u5e03\u5c40\uff0c\u5b83\u4eec\u6dfb\u52a0\u7684\u4e0d\u662f QLabel\u3001QLineEdit \u6216\u8005 QPushButton \u63a7\u4ef6\uff0c\u800c\u662f\u901a\u8fc7 addLayout() \u65b9\u6cd5\u6dfb\u52a0\u5e03\u5c40\u7ba1\u7406\u5668\u3002\u7b2c4\u884c\u7684\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u5c06 self.label_v_layout \u5782\u76f4\u5e03\u5c40\u548c self.line_vlayout \u5782\u76f4\u5e03\u5c40\u8fd9\u4e24\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6c34\u5e73\u6446\u653e\u3002\u7b2c5\u884c\u7684\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u5c06 self.label_line_h_layout \u548c self.button_h_layout \u5782\u76f4\u4ece\u4e0a\u5230\u4e0b\u6446\u653e\uff1b 6-7. \u6dfb\u52a0\u63a7\u4ef6\u7528 addWidght() \uff0c\u6dfb\u52a0\u5e03\u5c40\u7528 addLayout() \u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u662f\u5c06\u4e24\u4e2a QLabel \u7528\u5782\u76f4\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff0c\u5c06\u4e24\u4e2a QLineEdit \u4e5f\u7528\u5782\u76f4\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff0c\u6700\u540e\u7528\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u6765\u6446\u653e\u7740\u4e24\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u3002\u90a3\u6362\u79cd\u601d\u8def\uff0c\u53ef\u4ee5\u628aQLabel\u548cQLineEdit\u7528\u6c34\u5e73\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . button_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . user_h_layout . addWidget ( self . user_label ) self . user_h_layout . addWidget ( self . user_line ) self . pwd_h_layout . addWidget ( self . pwd_label ) self . pwd_h_layout . addWidget ( self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u76f8\u6bd4\u800c\u8a00\uff0c\u8fd9\u79cd\u5e03\u5c40\u65b9\u5f0f\u66f4\u52a0\u6e05\u6670\u660e\u4e86\u3002 3.4 \u8868\u5355\u5e03\u5c40QFormLayout \u00b6 \u8868\u5355\u5e03\u5c40\u53ef\u4ee5\u5c06\u63a7\u4ef6\u4ee5\u4e24\u5217\u7684\u5f62\u5f0f\u8fdb\u884c\u6392\u5e03\uff0c\u5de6\u5217\u63a7\u4ef6\u4e3a\u6587\u672c\u6807\u7b7e\uff0c\u53f3\u5217\u4e3a\u8f93\u5165\u578b\u7684\u63a7\u4ef6\uff0c\u5982 QLineEdit \u3002\u7528\u8fd9\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u5feb\u901f\u65b9\u4fbf\u5730\u6784\u5199\u6709\u8868\u5355\u7684\u754c\u9762\u3002\u6211\u4eec\u7528 QFormLayout \u6765\u6539\u5199\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout , QFormLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . f_layout = QFormLayout () # 1 self . button_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . f_layout . addRow ( self . user_label , self . user_line ) # 2 self . f_layout . addRow ( self . pwd_label , self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . all_v_layout . addLayout ( self . f_layout ) # 3 self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2aQFormLayout\u63a7\u4ef6\uff1b \u8c03\u7528addRow()\u65b9\u6cd5\u4f20\u5165QLabel\u548cQLineEdit\u63a7\u4ef6\uff1b \u5c06\u8868\u5355\u5e03\u5c40\u6dfb\u52a0\u5230\u603b\u5e03\u5c40\u4e2d\u3002 \u53ef\u4ee5\u53d1\u73b0\u4ee3\u7801\u6bd4\u4e4b\u524d\u7684\u66f4\u52a0\u7b80\u6d01\u4e86\u3002 3.5 \u7f51\u683c\u5e03\u5c40QGridLayout \u00b6 \u5f53\u4f7f\u7528\u8be5\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u628a\u6574\u4e2a\u7a97\u4f53\u60f3\u8c61\u6210\u5e26\u6709\u5750\u6807\u7684\uff0c\u7136\u540e\u53ea\u7528\u628a\u5404\u4e2a\u63a7\u4ef6\u653e\u5728\u76f8\u5e94\u7684\u5750\u6807\u5c31\u597d\u4e86\uff0c\u8bf7\u770b\u793a\u4f8b(\u8fd8\u662f\u4e0a\u65b9\u7684\u767b\u5f55\u6846)\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () # 1 self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) # 2 self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) # 3 self . v_layout . addLayout ( self . h_layout ) # 4 self . setLayout ( self . v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u8fd9\u91cc\u6df7\u5408\u4f7f\u7528 QVBoxLayout\u3001QHBoxLayout \u548c QGridLayou t\u6765\u5b8c\u6210\u5e03\u5c40\u3002 \u5b9e\u4f8b\u5316\u4e00\u4e2a QGridLayout \u5e03\u5c40\u7ba1\u7406\u5668 2. QGridLayout \u7684 addWidget() \u65b9\u6cd5\u9075\u5faa\u5982\u4e0b\u8bed\u6cd5\u5f62\u5f0f\uff1a addWidget(widget, row, column, rowSpan, columnSpan) widget \u5c31\u662f\u8981\u6dfb\u52a0\u7684\u63a7\u4ef6\uff1b row \u4e3a\u7b2c\u51e0\u884c\uff0c 0 \u4ee3\u8868\u7b2c\u4e00\u884c\uff1b column \u4e3a\u7b2c\u51e0\u5217\uff0c 0 \u4ee3\u8868\u7b2c\u4e00\u5217\uff1b rowSpan \u8868\u793a\u8981\u8ba9\u8fd9\u4e2a\u63a7\u4ef6\u53bb\u5360\u7528\u51e0\u884c(\u9ed8\u8ba4\u4e00\u884c)\uff1b columnSpan \u8868\u793a\u8981\u8ba9\u8fd9\u4e2a\u63a7\u4ef6\u53bb\u5360\u7528\u51e0\u5217(\u9ed8\u8ba4\u4e00\u5217)\u3002 \u5728\u4e0a\u65b9\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06 self.user_label \u653e\u5728 (0, 0) \u8fd9\u4e2a\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u5c06 self.user_line \u653e\u5728 (0, 1) \uff0c\u5373\u7b2c\u4e00\u884c\u7b2c\u4e8c\u5217\uff0c\u4e5f\u5c31\u662f self.user_label \u7684\u53f3\u8fb9\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u5c06 self.pwd_label \u653e\u5728 (1, 0) \uff0c\u5373\u7b2c\u4e8c\u884c\u7b2c\u4e00\u5217\uff0c\u5728 self.user_label \u7684\u6b63\u4e0b\u65b9\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u6700\u540e\u6211\u4eec\u5c06 self.pwd_line \u653e\u5728 (1, 1) \uff0c\u5373\u7b2c\u4e8c\u884c\u7b2c\u4e8c\u5217\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\u3002 \u56e0\u4e3a\u9ed8\u8ba4\u90fd\u662f\u4e00\u884c\u4e00\u5217\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a self . grid_layout . addWidget ( self . user_label , 0 , 0 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 ) * 3-4. \u6700\u540e\uff0c\u7a0b\u5e8f\u7528\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u5c06\u4e00\u4e2a\u7f51\u683c\u5e03\u5c40\u548c\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u6dfb\u52a0\u8fdb\u53bb\u3002 \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5355\u5355\u7528QGridLayout\u6765\u5b8c\u6210\u8fd9\u6b21\u754c\u9762\u7684\u5e03\u5c40\uff0c\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u6548\u679c\u5e76\u4e0d\u4f1a\u8ba9\u4eba\u5f88\u6ee1\u610f\uff0c\u53ef\u4ee5\u81ea\u884c\u53bb\u8bd5\u4e00\u4e0b\u3002 \u5408\u7406\u7684\u8fd0\u7528\u8fd9\u4e09\u79cd\u5e03\u5c40\u65b9\u5f0f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e0a\u4e8b\u534a\u529f\u500d\u3002 3.6 \u5c0f\u7ed3 \u00b6 QLineEdit\u63a7\u4ef6\u4e3a\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\uff1b \u4e86\u89e3\u56db\u79cd\u5e03\u5c40\u65b9\u5f0f\uff1a\u5782\u76f4\u5e03\u5c40QVBoxLayout\u3001\u6c34\u5e73\u5e03\u5c40QHBoxLayout\u3001\u8868\u5355\u5e03\u5c40QFormLayout\u548c\u7f51\u683c\u5e03\u5c40QGridLayout\uff1b addWidget()\u65b9\u6cd5\u7528\u6765\u6dfb\u52a0\u63a7\u4ef6\uff0caddLayout()\u65b9\u6cd5\u7528\u6765\u6dfb\u52a0\u5e03\u5c40\uff1b \u8bf7\u8bb0\u4f4fQGridLayout\u7684addWidget()\u8bed\u6cd5\u5f62\u5f0f\uff1a addWidget(widget, row, column, rowSpan, columnSpan) \u7b2c\u56db\u7ae0 QMessageBox\u6d88\u606f\u6846 \u00b6 \u5728\u7a0b\u5e8f\u4e2d\u52a0\u5165\u5404\u79cd\u6d88\u606f\u6846\u6765\u63d0\u793a\u53ef\u4ee5\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u5ea6\u3002 4.1 \u5404\u79cd\u7c7b\u578b\u7684\u6d88\u606f\u6846 \u00b6 import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'information' , self ) self . button . clicked . connect ( self . show_messagebox ) # 1 def show_messagebox ( self ): QMessageBox . information ( self , 'Title' , 'Content' , QMessageBox . Yes | QMessageBox . No | QMessageBox . Cancel ) # 2 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2aQPushButton\u5e76\u5c06clicked\u4fe1\u53f7\u4e0e\u81ea\u5b9a\u4e49\u7684show_messagebox\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u6837\u70b9\u51fb\u6309\u94ae\u540e\uff0c\u4fe1\u53f7\u53d1\u51fa\uff0c\u69fd\u51fd\u6570\u5c31\u4f1a\u542f\u52a8\uff1b \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u4fe1\u606f\u6846(information)\uff0c\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a QMessageBox.information(QWidget, \u2018Title\u2019, \u2019Content\u2018, buttons) \u7b2c\u4e00\u4e2a\u53c2\u6570\u586bself\uff0c\u8868\u793a\u8be5\u4fe1\u606f\u6846\u5c5e\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684Demo\u7a97\u53e3\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u586b\u5165\u7684\u662f\u8be5\u4fe1\u606f\u6846\u7684\u6807\u9898\uff1b\u7b2c\u4e09\u4e2a\u53c2\u6570\u7c7b\u578b\u4e5f\u662f\u5b57\u7b26\u4e32\uff0c\u586b\u5165\u7684\u662f\u4fe1\u606f\u6846\u7684\u63d0\u793a\u5185\u5bb9\uff1b\u6700\u540e\u4e2a\u53c2\u6570\u4e3a\u4fe1\u606f\u6846\u4e0a\u8981\u6dfb\u52a0\u7684\u6309\u94ae\uff0c\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u6211\u4eec\u6dfb\u52a0\u4e86Yes\u3001No\u548cCancel\u4e09\u4e2a\u6309\u94ae\uff0c\u591a\u4e2a\u6309\u94ae\u4e4b\u95f4\u7528 | \u6765\u8fde\u63a5\uff0c\u5e38\u89c1\u7684\u6309\u94ae\u79cd\u7c7b\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a QMessageBox . Ok QMessageBox . Yes QMessageBox . No QMessageBox . Close QMessageBox . Cancel QMessage . Open QMessage . Save \u6700\u540e\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fb\u540e\u663e\u793a\u63d0\u793a\u6846\uff1a \u6ce8\uff1a\u6211\u662f\u5728Mac\u7535\u8111\u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4fe1\u606f\u6846\u7684\u6807\u9898\u5e76\u6ca1\u6709\u663e\u793a\u51fa\u6765\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u663e\u793a\u6307\u5b9a\u4fe1\u606f\u6846\u7684\u6309\u94ae\uff0c\u90a3\u4fe1\u606f\u6846\u4f1a\u81ea\u5df1\u9ed8\u8ba4\u52a0\u4e0a\u5408\u9002\u7684\u6309\u94ae\u4e0a\u53bb\uff1a QMessageBox.information(self, 'Title', 'Content') \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u9664\u4e86\u4fe1\u606f\u6846(information)\uff0c\u8fd8\u6709\u4ee5\u4e0b\u51e0\u79cd\uff0c\u7528\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684(\u8bf7\u6ce8\u610f\u6d88\u606f\u6846\u4e0a\u7684\u56fe\u6807\u53d8\u5316)\uff1a QMessageBox.question \u95ee\u7b54\u6846 QMessageBox.warning \u8b66\u544a\u6846 QMessageBox.critical \u9519\u8bef\u6846 QMessageBox.about \u5173\u4e8e\u6846 4.2 \u4e0e\u6d88\u606f\u6846\u4ea4\u4e92 \u00b6 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4e0d\u7ba1\u7528\u6237\u6309\u4e86\u54ea\u4e2a\u6309\u94ae\uff0c\u7a0b\u5e8f\u90fd\u7528\u5173\u95ed\u6d88\u606f\u6846\u6765\u4f5c\u51fa\u53cd\u5e94\u3002\u7136\u800c\u7528\u6237\u4f1a\u5e0c\u671b\u70b9\u51fb\u4e0d\u540c\u6309\u94ae\uff0c\u7a0b\u5e8f\u4f5c\u51fa\u7684\u53cd\u5e94\u4e0d\u540c\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Click Me!' , self ) self . button . clicked . connect ( self . show_messagebox ) def show_messagebox ( self ): choice = QMessageBox . question ( self , 'Change Text?' , 'Would you like to change the button text?' , QMessageBox . Yes | QMessageBox . No ) # 1 if choice == QMessageBox . Yes : # 2 self . button . setText ( 'Changed!' ) elif choice == QMessageBox . No : # 4 pass if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5f53\u70b9\u51fb\u6d88\u606f\u6846\u4e0a\u7684\u67d0\u4e2a\u6309\u94ae\u4e4b\u540e\uff0c\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u6309\u94ae\uff0c\u800c\u8fd9\u91cc\u5c06\u8fd4\u56de\u7684\u6309\u94ae\u7ed3\u679c\u4fdd\u5b58\u5728choice\u4e2d\uff1b\u6709\u8fd4\u56de\u503c \u82e5\u662f\u6309\u4e0b\u4e86Yes\uff0c\u5219\u6539\u53d8\u6309\u94ae\u7684\u6587\u5b57\uff1b \u82e5\u662f\u6309\u4e0b\u4e86No\uff0c\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fbYes\u4e4b\u540e\uff0c\u6309\u94ae\u6587\u672c\u6539\u53d8\uff1a 4.3 \u5c0f\u7ed3 \u00b6 \u6d88\u606f\u6846\u7684\u79cd\u7c7b\u6709\uff1a information \u4fe1\u606f\u6846\uff1bquestion \u95ee\u7b54\u6846\uff1b warning \u8b66\u544a\u6846\uff1b critical \u9519\u8bef\u6846\uff1b about \u5173\u4e8e\u6846( \u5176\u5b9e\u8fd8\u6709\u4e00\u4e2aaboutQt\u6846\uff0c\u662f\u4e13\u95e8\u7528\u6765\u5c55\u793aQt\u8f6f\u4ef6\u4fe1\u606f\u7684\uff0c\u8fd9\u91cc\u4e0d\u518d\u8bb2\u8ff0)\u3002 \u8bed\u6cd5\u5f62\u5f0f(buttons\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a)\uff1a QMessageBox.information(QWidget, \u2018Title\u2019, \u2019Content\u2018, buttons) \u5728\u4e0e\u6d88\u606f\u6846\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58\u6d88\u606f\u6846\u8fd4\u56de\u7684\u6309\u94ae\u4fe1\u606f\uff0c\u63a5\u4e0b\u6765\u518d\u7528\u5224\u65ad\u8bed\u53e5\u6765\u4f5c\u51fa\u4e0d\u540c\u7684\u53cd\u5e94\u3002 \u7b2c\u4e94\u7ae0 \u5b8c\u5584\u767b\u5f55\u6846\u5c0f\u7a0b\u5e8f \u00b6 \u5728\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ed3\u5408\u524d\u9762\u6240\u5b66\u7684\u77e5\u8bc6\u6765\u5b8c\u5584\u767b\u5f55\u6846\u5c0f\u7a0b\u5e8f\u3002 \u4e3a\u4fdd\u8bc1\u4ee3\u7801\u6572\u51fb\u7545\u901a\uff0c\u53ef\u4ee5\u5148\u5f15\u5165\u8be5\u7a0b\u5e8f\u7528\u5230\u7684\u6a21\u5757\u548c\u63a7\u4ef6\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox 5.1 \u767b\u5f55\u754c\u9762\u5e03\u5c40 \u00b6 \u9996\u5148\u5b8c\u6210\u767b\u5f55\u754c\u9762\u5e03\u5c40\uff0c\u8bf7\u770b\u4e0b\u65b9\u4ee3\u7801\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) #\u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f\u4e3a300*100 self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . layout_init () def layout_init ( self ): self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) self . v_layout . addLayout ( self . h_layout ) self . setLayout ( self . v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u7a0b\u5e8f\u9996\u5148\u5c06\u7a97\u53e3\u7684\u5bbd\u8bbe\u4e3a300\uff0c\u957f\u8bbe\u4e3a100\u3002\u63a5\u7740\u518d\u5b9e\u4f8b\u5316\u4e86\u51e0\u4e2a\u63a7\u4ef6\uff1a\u4e24\u4e2a\u6587\u672c\u6807\u7b7e\u3001\u4e24\u4e2a\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u548c\u4e24\u4e2a\u6309\u94ae\u3002\u7136\u540e\u642d\u914d\u4f7f\u7528\u7f51\u683c\u5e03\u5c40\u7ba1\u7406\u5668\u3001\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u548c\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u6765\u5b8c\u6210\u6574\u4e2a\u754c\u9762\u7684\u5e03\u5c40\u3002\u76f8\u4fe1\u770b\u8fc7\u524d\u9762\u7ae0\u8282\u7684\u5c0f\u4f19\u4f34\u5df2\u7ecf\u53ef\u4ee5\u7406\u89e3\u4e0a\u65b9\u4ee3\u7801\u7684\u610f\u601d\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8be6\u7ec6\u89e3\u91ca\u3002 \u8fd9\u91cc\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u6211\u628a\u5e03\u5c40\u7ba1\u7406\u4e13\u95e8\u653e\u5728\u4e86\u4e00\u4e2a\u51fd\u6570\u4e2dlayout_init()\uff0c\u7136\u540e\u53ea\u7528\u5728\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u52a0\u4e0alayout_init()\u4e2d\u5c31\u884c\u3002\u628a\u5bf9\u4e0d\u540c\u63a7\u4ef6\u7684\u64cd\u4f5c\u5206\u5f00\u6765\u653e\u5728\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5199\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff0c\u4e5f\u65b9\u4fbf\u65e5\u540e\u7ef4\u62a4\u3002 \u6b64\u65f6\u7a0b\u5e8f\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a 5.2 \u5b8c\u5584\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u548c\u6309\u94ae\u529f\u80fd \u00b6 \u8be5\u6b65\u9aa4\u8981\u5b8c\u6210\u7684\u7ed3\u679c\u622a\u56fe\u5982\u4e0b\uff1a \u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u4e2d\u6709\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u5b57\uff0cLog in\u6309\u94ae\u521a\u5f00\u59cb\u65e0\u6cd5\u70b9\u51fb\uff0c\u53ea\u80fd\u7b49\u4e24\u4e2a\u8f93\u5165\u6846\u4e2d\u90fd\u6709\u6587\u672c\u8f93\u5165\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u8fdb\u884c\u70b9\u51fb\u3002 \u9996\u5148\u5bf9\u8f93\u5165\u6846\u529f\u80fd\u8fdb\u884c\u5b8c\u5584\u3002 def lineedit_init ( self ): self . user_line . setPlaceholderText ( 'Please enter your username' ) self . pwd_line . setPlaceholderText ( 'Please enter your password' ) self . user_line . textChanged . connect ( self . check_input_func ) self . pwd_line . textChanged . connect ( self . check_input_func ) \u5728\u672a\u8f93\u5165\u524d\uff0c\u6211\u4eec\u6709\u4f1a\u770b\u5230\u8f93\u5165\u6846\u4e0a\u5c31\u5df2\u7ecf\u6709\u4e86\u4e00\u884c\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u5b57\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u79cd\uff1a \u4f46\u70b9\u51fb\u7684\u8bdd\u6d45\u7070\u8272\u7684\u6587\u5b57\u5c31\u4f1a\u4e0d\u89c1\uff1a \u8fd9\u79cd\u529f\u80fd\u5c31\u662f\u901a\u8fc7 setPlaceholderText() \u65b9\u6cd5\u6765\u5b9e\u73b0\u7684\u3002\u5728\u8fd9\u91cc\u8fd8\u8fdb\u884c\u4e86\u4fe1\u53f7\u548c\u69fd\u7684\u8fde\u63a5\uff0c\u5c06 QLineEdit \u7684 textChanged() \u4fe1\u53f7\u8fde\u63a5\u5230\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u69fd self.check_input_func \u4e0a\u3002 textChanged() \u4fe1\u53f7\u4f1a\u5728\u8f93\u5165\u6846\u4e2d\u6587\u672c\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\u53d1\u51fa, \u6240\u4ee5\u69fd\u51fd\u6570\u7684\u4efb\u52a1\u5c31\u662f\u5224\u65ad\u4e24\u4e2a\u8f93\u5165\u6846\u662f\u5426\u90fd\u6709\u6587\u5b57\u4e86\uff1a def check_input_func ( self ): if self . user_line . text () and self . pwd_line . text (): self . login_button . setEnabled ( True ) else : self . login_button . setEnabled ( False ) \u5982\u679c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c(\u901a\u8fc7text()\u65b9\u6cd5\u83b7\u53d6\u8f93\u5165\u6846\u6587\u672c)\uff0c\u90a3\u5c31\u4f7f\u767b\u5f55\u6309\u94ae\u53ef\u7528(setEnabled(True))\uff0c\u5426\u5219\u767b\u5f55\u6309\u94ae\u4e0d\u53ef\u7528\u3002 \u63a5\u4e0b\u6765\u5bf9\u6309\u94ae\u8fdb\u884c\u5b8c\u5584\uff1a def pushbutton_init ( self ): self . login_button . setEnabled ( False ) \u4f7f\u521a\u5f00\u59cb\u663e\u793a\u7684\u767b\u5f55\u6309\u94ae\u4e0d\u53ef\u7528\uff0c\u53ea\u6709\u7b49\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c\u7684\u65f6\u5019\u624d\u80fd\u7528(\u4e0a\u9762\u7684\u69fd\u51fd\u6570)\u3002 \u5f53\u6211\u4eec\u70b9\u51fb\u767b\u5f55\u6309\u94ae\u7684\u65f6\u5019\uff0c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c\u4e86\uff0c\u90a3\u70b9\u51fb\u540e\u80af\u5b9a\u662f\u8981\u9a8c\u8bc1\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e\uff1a def pushbutton_init ( self ): self . login_button . setEnabled ( False ) #\u6309\u4e0b\u6309\u94ae\u540e,\u4e0d\u80fd\u518d\u6b21\u6309\u4e0b self . login_button . clicked . connect ( self . check_login_func ) #\u540c\u65f6\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e \u6240\u4ee5\u6211\u4eec\u5c06\u767b\u5f55\u6309\u94ae\u7684clicked\u4fe1\u53f7\u548c\u4e00\u4e2a\u7528\u4e8e\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e\u7684\u81ea\u5b9a\u4e49\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff1a \u9996\u5148\u6211\u4eec\u5728\u7a0b\u5e8f\u7684\u6700\u5f00\u59cb\u5904\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf USER_PWD \uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox USER_PWD = { 'la_vie' : 'password' } #\u5b9a\u4e49\u8d26\u53f7\u5bc6\u7801\u7684\u5168\u5c40\u53d8\u91cf \u8be5\u5b57\u5178\u7684\u952e'la_vie'\u5c31\u662f\u5f53\u4f5c\u8d26\u53f7\uff0c\u503c\u2018password\u2019\u5c31\u5f53\u4f5c\u5bc6\u7801(\u4e4b\u540e\u590d\u6742\u7684\u7a0b\u5e8f\u4f1a\u4f7f\u7528\u6570\u636e\u5e93\uff0c\u8fd9\u91cc\u5c31\u5148\u7b80\u5355\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u4f7f\u7528)\u3002 \u7136\u540e\u5b9a\u4e49\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u7684\u69fd\u51fd\u6570\uff1a def check_login_func ( self ): if USER_PWD . get ( self . user_line . text ()) == self . pwd_line . text (): QMessageBox . information ( self , 'Information' , 'Log in Successfully!' ) else : QMessageBox . critical ( self , 'Wrong' , 'Wrong Username or Password!' ) self . user_line . clear () self . pwd_line . clear () \u5c06\u8d26\u53f7\u6846\u7684\u6587\u672c\u5f53\u4f5cget()\u7684\u53c2\u6570\u6765\u83b7\u53d6\u503c\uff0c\u7136\u540e\u8ddf\u5bc6\u7801\u6846\u7684\u6587\u672c\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u76f8\u540c\u5219\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u767b\u5f55\u6210\u529f\uff0c\u5426\u5219\u663e\u793a\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\u3002\u6700\u540e\u65e0\u8bba\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff0c\u90fd\u4f1a\u7528clear()\u65b9\u6cd5\u6765\u6e05\u7a7a\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u3002 \u6700\u540e\u5c06 self.lineedit_init() \u548c self.pushbutton_init() \u653e\u5728\u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570__init__()\u4e2d\uff1a class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () # \u5355\u884c\u6587\u672c\u8f93\u5165\u6846 self . pushbutton_init () # \u6309\u94ae,\u76f4\u63a5\u5c06\u5b9a\u4e49\u7684\u6309\u94ae\u653e\u5728\u7c7b\u4e2d\u8fdb\u884c\u521d\u59cb\u5316 self . layout_init () \u6b64\u65f6\u7a0b\u5e8f\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u8f93\u5165la_vie\u548cpassword\uff0c\u70b9\u51fbLog in\u6309\u94ae\uff0c\u5219\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u767b\u5f55\u6210\u529f\u3002 \u8f93\u5165\u4e00\u4e2a\u9519\u8bef\u7684\u8d26\u53f7\u6216\u9519\u8bef\u7684\u5bc6\u7801\uff0c\u5c31\u4f1a\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\uff1a \u70b9\u51fbOK\u540e\uff0c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u6587\u672c\u90fd\u88ab\u6e05\u7a7a\uff0c\u6062\u590d\u539f\u72b6\uff1a 5.3 \u5b8c\u5584\u6ce8\u518c\u754c\u9762\u5e03\u5c40\u53ca\u529f\u80fd \u00b6 \u63a5\u4e0b\u6765\u5c31\u662f\u8981\u5b8c\u5584Sign in\u6309\u94ae\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u60f3\u7684\u662f\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u540e\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684\u754c\u9762\u7528\u4e8e\u6ce8\u518c\uff0c\u5373\u4e0b\u65b9\u622a\u56fe\u6240\u793a\uff1a \u53ef\u4ee5\u770b\u51fa\u8be5\u754c\u9762\u4e00\u5171\u662f\u7531\u4e09\u4e2aQLabel\u3001\u4e09\u4e2aQLineEdit\u548c\u4e00\u4e2aQPushButton\u7ec4\u6210\u7684\uff0c\u90a3\u9996\u5148\u5c31\u6765\u5b8c\u6210\u754c\u9762\u5e03\u5c40\uff1a class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . layout_init () def layout_init ( self ): self . user_h_layout . addWidget ( self . signin_user_label ) self . user_h_layout . addWidget ( self . signin_user_line ) self . pwd_h_layout . addWidget ( self . signin_pwd_label ) self . pwd_h_layout . addWidget ( self . signin_pwd_line ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_label ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_line ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . pwd2_h_layout ) self . all_v_layout . addWidget ( self . signin_button ) self . setLayout ( self . all_v_layout ) \u8fd9\u91cc\u6211\u4eec\u65b0\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f\u4e8eQDialog(\u53e6\u4e00\u4e2a\u6bdb\u576f\u623f)\u3002QDialog\u5c31\u662f\u6307\u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u5e73\u65f6\u5728\u8f6f\u4ef6\u4e2d\u70b9\u51fb\u201c\u6253\u5f00\u201d\u6216\u201c\u53e6\u5b58\u4e3a\u201d\u800c\u51fa\u73b0\u7684\u6587\u4ef6\u5bf9\u8bdd\u6846\u5c31\u662f\u5176\u4e2d\u4e00\u79cd\u3002\u5f53\u7136\u4f60\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u540c\u6837\u7ee7\u627f\u4e8eQWidget\uff0c\u4f46\u662fQDialog\u4e2d\u6709\u4e00\u4e2a\u65b9\u6cd5\u662fQWidget\u6240\u4e0d\u5177\u6709\u7684\uff0c\u7a0d\u540e\u6765\u8bb2\u8ff0\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u518d\u8be6\u7ec6\u89e3\u91ca\uff0c\u76f8\u4fe1\u5927\u5bb6\u53ef\u4ee5\u770b\u61c2\u4e86\u3002 \u9996\u5148\u540c\u6837\u5c06 Sign in \u6309\u94ae\u8bbe\u4e3a\u4e0d\u53ef\u7528( setEnabled(False) )\uff0c\u5e76\u4e14\u53ea\u6709\u5f53\u4e09\u4e2a\u8f93\u5165\u6846\u4e2d\u90fd\u6709\u6587\u672c\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u542f\u7528\u8fd9\u4e2a\u6309\u94ae\u3002\u539f\u7406\u8ddf\u4e4b\u524d\u8bb2\u7684\u4e00\u6837\uff1a def lineedit_init ( self ): self . signin_user_line . textChanged . connect ( self . check_input_func ) self . signin_pwd_line . textChanged . connect ( self . check_input_func ) self . signin_pwd2_line . textChanged . connect ( self . check_input_func ) \u5728lineedit_init()\u4e2d\u6211\u4eec\u5c06\u4e09\u4e2a\u8f93\u5165\u6846\u7684textChanged()\u4fe1\u53f7\u8ddf\u81ea\u5b9a\u4e49\u7684 check_input_func() \u69fd\u51fd\u6570\u8fdb\u884c\u8fde\u63a5\uff1b def check_input_func ( self ): if self . signin_user_line . text () and self . signin_pwd_line . text () and self . signin_pwd2_line . text (): self . signin_button . setEnabled ( True ) else : self . signin_button . setEnabled ( False ) \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u5224\u65ad\u4e09\u4e2a\u8f93\u5165\u6846\u662f\u5426\u90fd\u6709\u6587\u672c\uff0c\u6709\u7684\u8bdd\u5219\u5c06\u6309\u94ae\u542f\u7528\uff0c\u5426\u5219\u7981\u7528\uff1b \u200b def pushbutton_init ( self ): #\u521d\u59cb\u5316 self . signin_button . setEnabled ( False ) self . signin_button . clicked . connect ( self . check_signin_func ) \u7136\u540e\u5728pushbutton_init()\u4e2d\u5148\u5c06sign in\u6309\u94ae\u8bbe\u4e3a\u7981\u7528\u72b6\u6001\uff0c\u7136\u540e\u5c06clicked()\u4fe1\u53f7\u548c\u4e4b\u540e\u81ea\u5b9a\u4e49\u7684check_signin_func()\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\u3002\u56e0\u4e3a\u5728\u70b9\u51fb\u6ce8\u518c\u6309\u94ae\u7684\u65f6\u5019\u6211\u4eec\u8981\u5bf9\u8f93\u5165\u7684\u6587\u672c\u5185\u5bb9\u8fdb\u884c\u68c0\u67e5\uff0c\u770b\u7b26\u4e0d\u7b26\u5408\u8981\u6c42\uff1b def check_signin_func ( self ): if self . signin_pwd_line . text () != self . signin_pwd2_line . text (): QMessageBox . critical ( self , 'Wrong' , 'Two Passwords Typed Are Not Same!' ) elif self . signin_user_line . text () not in USER_PWD : USER_PWD [ self . signin_user_line . text ()] = self . signin_pwd_line . text () QMessageBox . information ( self , 'Information' , 'Register Successfully' ) self . close () else : QMessageBox . critical ( self , 'Wrong' , 'This Username Has Been Registered!' ) self . signin_user_line . clear () self . signin_pwd_line . clear () self . signin_pwd2_line . clear () \u9996\u5148\u5224\u65ad\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u6846\u8f93\u5165\u7684\u6587\u672c\u662f\u5426\u4e00\u81f4\uff0c\u82e5\u4e0d\u76f8\u540c\u7684\u8bdd\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\uff1b\u5f53\u7136\u6211\u4eec\u8fd8\u8981\u5bf9\u8981\u6ce8\u518c\u7684\u8d26\u53f7\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u5728\u5b57\u5178\u76f8\u5bf9\u5e94\u7684\u952e\uff0c\u5219\u8bf4\u660e\u8be5\u8d26\u53f7\u5e76\u6ca1\u6709\u88ab\u6ce8\u518c\u8fc7\uff0c\u63a5\u7740\u5c06\u8981\u6ce8\u518c\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u653e\u8fdb\u5b57\u5178\u4e2d\uff0c\u5e76\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u6ce8\u518c\u6210\u529f\u3002self.close()\u662f\u6307\u5173\u95ed\u5bf9\u8bdd\u6846\u81ea\u8eab\uff0c\u4e5f\u5c31\u662f\u5728\u4fe1\u606f\u6846\u6309\u94ae\u88ab\u6309\u4e0b\u53bb\u5173\u95ed\u4e4b\u540e\uff0c\u6ce8\u518c\u754c\u9762\u7684\u5bf9\u8bdd\u6846\u4e5f\u8981\u4e00\u8d77\u5173\u95ed\u3002\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u8d26\u53f7\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\u4e86\uff0c\u4e8e\u662f\u663e\u793a\u9519\u8bef\u6846\u6765\u8fdb\u884c\u63d0\u793a\u3002 \u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u6700\u540e\u90fd\u4f1a\u5c06\u4e09\u4e2a\u8f93\u5165\u6846\u7684\u6587\u672c\u6e05\u7a7a\u6389\u3002 \u90a3\u4e48\u6700\u540e\u5c06self.lineedit_init()\u548cself.pushbutton_init()\u653e\u5728\u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570__init__()\u4e2d\uff1a class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . lineedit_init () # \u5355\u884c\u6587\u672c\u8f93\u5165\u6846 self . pushbutton_init () # \u6309\u94ae self . layout_init () 5.4 \u6574\u5408\u767b\u5f55\u754c\u9762\u548c\u6ce8\u518c\u754c\u9762 \u00b6 \u4f46\u662f\u6b64\u65f6\u8fd0\u884c\u7a0b\u5e8f\u70b9\u51fb\u767b\u5f55\u754c\u9762\u4e0a\u7684sign in\u6309\u94ae\u7684\u8bdd\uff0c\u6ce8\u518c\u754c\u9762\u662f\u663e\u793a\u4e0d\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u767b\u5f55\u754c\u9762sign in\u6309\u94ae\u7684clicked()\u4fe1\u53f7\u548c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7528\u6765\u663e\u793a\u6ce8\u518c\u754c\u9762\u7684\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff1a class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () self . signin_page = SigninPage () # \u5b9e\u4f8b\u5316SigninPage() \u9996\u5148\u6211\u4eec\u5728Demo\u7684\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u5148\u5b9e\u4f8b\u5316\u4e86SigninPage\uff1b def pushbutton_init ( self ): self . login_button . setEnabled ( False ) self . login_button . clicked . connect ( self . check_login_func ) self . signin_button . clicked . connect ( self . show_signin_page_func ) \u63a5\u7740\u5728\u5904\u7406\u6309\u94ae\u7684\u51fd\u6570\u4e2d\u5c06sign in\u6309\u94ae\u7684clicked\u4fe1\u53f7\u548cshow_signin_page_func()\u69fd\u51fd\u6570\u8fdb\u884c\u8fde\u63a5\uff1b def show_signin_page_func ( self ): self . signin_page . exec_ () \u5728\u69fd\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u7528exec_\u65b9\u6cd5\u6765\u6267\u884c\u6ce8\u518c\u754c\u9762\u3002\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528exec_\u800c\u4e0d\u662fshow()\uff1f\u4e0b\u9762\u6765\u8be6\u7ec6\u89e3\u91ca\u4e0b\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\uff1a \u82e5\u4f7f\u7528exec_()\u7684\u8bdd\uff0c\u90a3\u4e48\u663e\u793a\u51fa\u6765\u7684\u6ce8\u518c\u754c\u9762\u5c31\u662f\u6a21\u6001\u7684\uff0c\u610f\u601d\u5c31\u662f\u5f53\u524d\u667a\u80fd\u5bf9\u8be5\u6ce8\u518c\u754c\u9762\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ea\u6709\u5173\u95ed\u4e86\u8be5\u754c\u9762\u624d\u80fd\u5bf9\u5176\u4ed6\u754c\u9762\u8fdb\u884c\u64cd\u4f5c\uff1b\u82e5\u4f7f\u7528show()\u7684\u8bdd\uff0c\u90a3\u6ce8\u518c\u754c\u9762\u5c31\u662f\u975e\u6a21\u6001\u7684\uff0c\u5219\u5728\u663e\u793a\u4e86\u6ce8\u518c\u754c\u9762\u540e\uff0c\u8fd8\u80fd\u540c\u65f6\u5bf9\u767b\u5f55\u754c\u9762\u8fdb\u884c\u64cd\u4f5c(QDialog\u6709ecec_()\u65b9\u6cd5\uff0c\u800cQWidget\u6ca1\u6709)\u3002 \u6b64\u65f6\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684Sign in\uff0c\u663e\u793a\u6ce8\u518c\u754c\u9762\uff0c\u7136\u540e\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\uff0c\u82e5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u663e\u793a\u6ce8\u518c\u6210\u529f\uff1b \u82e5\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u4e0d\u4e00\u81f4\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\uff1b \u82e5\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\u4e86\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\u3002 \u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u6240\u4ee5\u5bc6\u7801\u6846\u8f93\u5165\u7684\u65f6\u5019\u90fd\u6ca1\u6709\u7528\u539f\u70b9\u66ff\u4ee3\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u8f93\u5165\u6846\u4f7f\u7528setEchoMode(QLineEdit.Password)\u65b9\u6cd5\u6765\u5b8c\u6210\u6b64\u529f\u80fd\uff1a \u6700\u7ec8\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox USER_PWD = { 'la_vie' : 'password' } class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () self . signin_page = SigninPage () # \u5b9e\u4f8b\u5316SigninPage() def layout_init ( self ): self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) self . v_layout . addLayout ( self . h_layout ) self . setLayout ( self . v_layout ) def lineedit_init ( self ): self . user_line . setPlaceholderText ( 'Please enter your username' ) self . pwd_line . setPlaceholderText ( 'Please enter your password' ) self . pwd_line . setEchoMode ( QLineEdit . Password ) self . user_line . textChanged . connect ( self . check_input_func ) self . pwd_line . textChanged . connect ( self . check_input_func ) def pushbutton_init ( self ): self . login_button . setEnabled ( False ) self . login_button . clicked . connect ( self . check_login_func ) self . signin_button . clicked . connect ( self . show_signin_page_func ) def check_login_func ( self ): if USER_PWD . get ( self . user_line . text ()) == self . pwd_line . text (): QMessageBox . information ( self , 'Information' , 'Log in Successfully!' ) else : QMessageBox . critical ( self , 'Wrong' , 'Wrong Username or Password!' ) self . user_line . clear () self . pwd_line . clear () def show_signin_page_func ( self ): self . signin_page . exec_ () def check_input_func ( self ): if self . user_line . text () and self . pwd_line . text (): self . login_button . setEnabled ( True ) else : self . login_button . setEnabled ( False ) class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () def layout_init ( self ): self . user_h_layout . addWidget ( self . signin_user_label ) self . user_h_layout . addWidget ( self . signin_user_line ) self . pwd_h_layout . addWidget ( self . signin_pwd_label ) self . pwd_h_layout . addWidget ( self . signin_pwd_line ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_label ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_line ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . pwd2_h_layout ) self . all_v_layout . addWidget ( self . signin_button ) self . setLayout ( self . all_v_layout ) def lineedit_init ( self ): self . signin_pwd_line . setEchoMode ( QLineEdit . Password ) self . signin_pwd2_line . setEchoMode ( QLineEdit . Password ) self . signin_user_line . textChanged . connect ( self . check_input_func ) self . signin_pwd_line . textChanged . connect ( self . check_input_func ) self . signin_pwd2_line . textChanged . connect ( self . check_input_func ) def pushbutton_init ( self ): self . signin_button . setEnabled ( False ) self . signin_button . clicked . connect ( self . check_signin_func ) def check_input_func ( self ): if self . signin_user_line . text () and self . signin_pwd_line . text () and self . signin_pwd2_line . text (): self . signin_button . setEnabled ( True ) else : self . signin_button . setEnabled ( False ) def check_signin_func ( self ): if self . signin_pwd_line . text () != self . signin_pwd2_line . text (): QMessageBox . critical ( self , 'Wrong' , 'Two Passwords Typed Are Not Same!' ) elif self . signin_user_line . text () not in USER_PWD : USER_PWD [ self . signin_user_line . text ()] = self . signin_pwd_line . text () QMessageBox . information ( self , 'Information' , 'Register Successfully' ) self . close () else : QMessageBox . critical ( self , 'Wrong' , 'This Username Has Been Registered!' ) self . signin_user_line . clear () self . signin_pwd_line . clear () self . signin_pwd2_line . clear () if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) 5.5 \u5c0f\u7ed3 \u00b6 setPlaceholderText()\u65b9\u6cd5\u7528\u4e8e\u5728\u8f93\u5165\u6846\u663e\u793a\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u672c\uff1b ecec_()\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u7a97\u53e3\u6210\u4e3a\u6a21\u6001\u7a97\u53e3\uff0c\u800c\u8c03\u7528show()\u65b9\u6cd5\uff0c\u7a97\u53e3\u662f\u975e\u6a21\u6001\u7684\u3002\u6a21\u6001\u7a97\u53e3\u5c06\u7a0b\u5e8f\u63a7\u5236\u6743\u5360\u636e\uff0c\u53ea\u6709\u5bf9\u5f53\u524d\u7a97\u53e3\u5173\u95ed\u540e\u624d\u80fd\u64cd\u4f5c\u5176\u4ed6\u7a97\u53e3\uff1b QDialog\u6709exec_()\u65b9\u6cd5\uff0c\u800cQWidget\u6ca1\u6709\uff1b \u53ef\u4ee5\u7528setEchoMode(QLineEdit.Password)\u5c06\u666e\u901a\u8f93\u5165\u6846\u4e2d\u7684\u6587\u5b57\u53d8\u6210\u539f\u70b9\u3002 \u7b2c\u516d\u7ae0 \u6587\u672c\u7f16\u8f91\u6846QTextEdit\u548c\u6587\u672c\u6d4f\u89c8\u6846QTextBrowser \u00b6 6.1 \u540c\u6b65\u663e\u793a\u6587\u672c \u00b6 \u76f8\u4fe1\u901a\u8fc7\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u4e2d\u6587\u540d\u5927\u5bb6\u5e94\u8be5\u4e5f\u77e5\u9053\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u529f\u80fd\u662f\u4ec0\u4e48\u4e86\uff0c\u524d\u8005\u7528\u6765\u7f16\u8f91\u6587\u672c\uff0c\u540e\u8005\u65e0\u6cd5\u7f16\u8f91\uff0c\u53ea\u7528\u4e8e\u663e\u793a\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u5b8c\u6210\u4ee5\u4e0b\u7a0b\u5e8f\u6765\u8bb2\u89e3\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u7528\u6cd5\uff1a \u5de6\u8fb9\u4e3aQTextEdit\u63a7\u4ef6\uff0c\u53f3\u8fb9\u4e3aQTextBrowser\u63a7\u4ef6\u3002\u5728\u5de6\u8fb9\u8f93\u5165\u6587\u5b57\u65f6\uff0c\u53f3\u8fb9\u4f1a\u540c\u6b65\u663e\u793a\u3002\u8bf7\u770b\u4e0b\u65b9\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QTextEdit , QTextBrowser , QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . edit_label = QLabel ( 'QTextEdit' , self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7f16\u8f91label self . browser_label = QLabel ( 'QTextBrowser' , self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u73b0\u5b9elabel self . text_edit = QTextEdit ( self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7f16\u8f91\u6587\u672c\u6846 self . text_browser = QTextBrowser ( self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u663e\u793a\u6587\u672c\u6846 self . edit_v_layout = QVBoxLayout () self . browser_v_layout = QVBoxLayout () self . all_h_layout = QHBoxLayout () self . layout_init () #\u5e03\u5c40\u521d\u59cb\u5316 self . text_edit_init () def layout_init ( self ): #\u5e03\u5c40\u51fd\u6570 self . edit_v_layout . addWidget ( self . edit_label ) self . edit_v_layout . addWidget ( self . text_edit ) self . browser_v_layout . addWidget ( self . browser_label ) self . browser_v_layout . addWidget ( self . text_browser ) self . all_h_layout . addLayout ( self . edit_v_layout ) self . all_h_layout . addLayout ( self . browser_v_layout ) self . setLayout ( self . all_h_layout ) def text_edit_init ( self ): self . text_edit . textChanged . connect ( self . show_text_func ) # 1\u5982\u679ctext_edit\u4e2d\u7684\u6587\u672c\u53d1\u751f\u6539\u53d8\u7684\u8bdd\u8c03\u7528\u4e0b\u4e00\u4e2a\u51fd\u6570 def show_text_func ( self ): self . text_browser . setText ( self . text_edit . toPlainText ()) # 2\u5c06\u6587\u672c\u8bbe\u7f6e\u4e3a\u83b7\u53d6\u5230\u7684text_edit\u4e2d\u7684\u6587\u672c,\u6ce8\u610f\u989d\u662f\u4f7f\u7528\u7684toPlainText\u6765\u83b7\u53d6\u7684\u6587\u672c if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u5b9e\u4f8b\u5316\u4e24\u4e2aQLabel\u3001\u4e00\u4e2aQTextEdit\u4ee5\u53ca\u4e00\u4e2aQTextBrowser\u518d\u901a\u8fc7\u5782\u76f4\u5e03\u5c40\u548c\u6c34\u5e73\u5e03\u5c40\u5c31\u53ef\u4ee5\u5b8c\u6210\u6574\u4e2a\u754c\u9762\u3002\u5173\u952e\u70b9\u662f\u5728\u4fe1\u53f7\u548c\u69fd\u7684\u8fde\u63a5\u4e0a\u3002 \u5c06self.text_edit\u7684textChanged\u4fe1\u53f7\u8fde\u63a5\u5230\u81ea\u5b9a\u4e49\u7684\u69fd\u51fd\u6570\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53self.text_edit\u4e2d\u7684\u6587\u672c\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u51fatextChanged\u4fe1\u53f7\uff0c\u7136\u540e\u8c03\u7528show_text_func()\u69fd\u51fd\u6570\u3002 \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u901a\u8fc7setText()\u65b9\u6cd5\u5c06self.text_browser\u7684\u6587\u672c\u8bbe\u4e3aself.text_edit\u7684\u6587\u672c\uff0c\u800cself.text_edit\u7684\u6587\u672c\u901a\u8fc7toPlainText()\u83b7\u53d6\uff0c\u800c\u4e0d\u662ftext(). \u6709\u8da3\u7684\u662f\uff0c\u5f53\u6211\u4eec\u5728\u7f16\u8f91\u6846\u4e2d\u8f93\u5165Html\u4ee3\u7801\u65f6\uff0c\u53f3\u8fb9\u7684\u6d4f\u89c8\u6846\u4f1a\u5bf9\u5176\u6267\u884c\uff1a \u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u5176\u5b9e\u4e5f\u5df2\u7ecf\u5f88\u591f\u7528\u4e86\u3002\u7b49\u4e4b\u540e\u7528\u5230\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u5176\u4ed6\u65b9\u6cd5\u65f6\uff0c\u4f1a\u518d\u8be6\u7ec6\u4ecb\u7ecd\u3002 6.2 \u5c0f\u7ed3 \u00b6 \u987e\u540d\u601d\u4e49\uff0c QTextEdit \u4e3a\u7528\u6765\u7f16\u8f91\u6587\u672c\uff0c\u800c QTextBrowser \u7528\u6765\u663e\u793a\u6587\u672c\uff1b setText() \u7528\u6765\u8bbe\u7f6e\u6587\u672c\uff0c toPlainText() \u7528\u6765\u83b7\u53d6\u6587\u672c\uff0c\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u90fd\u6709\u8fd9\u4e9b\u65b9\u6cd5\uff1b \u6d4f\u89c8\u6846\u4f1a\u6267\u884cHtml\u4ee3\u7801\u3002","title":"037 pyqt5\u5b66\u4e60"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#pyqt5","text":"","title":"\u7b2c\u4e00\u7ae0  PyQt5\u7684\u8d77\u70b9"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#11-pyqt5","text":"\u5c31\u8ddf\u5b89\u88c5\u5176\u4ed6\u5e93\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u975e\u5e38\u7b80\u5355\uff1a Windows\u4e0a\u5b89\u88c5\uff1a pip install pyqt5 Linux\u4e0a\u5b89\u88c5\uff1a sudo apt-get install python3-pyqt5 MacOS\u4e0a\u5b89\u88c5\uff1a pip3 install pyqt5 \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0c\u53ea\u9700\u8981\u5bfc\u5165\u4e0b\u8be5\u6a21\u5757\u5c31\u53ef\u4ee5(\u6ce8\u610f\u5927\u5c0f\u5199)\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u63d0\u793a\uff0c\u5219\u5b89\u88c5\u6210\u529f\uff1a","title":"1.1 \u5f00\u59cb\u5b89\u88c5PyQt5"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#12","text":"\u901a\u8fc7\u4e0b\u65b9\u4ee3\u7801\u5c31\u53ef\u4ee5\u5448\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684PyQt5\u7a0b\u5e8f\u3002 import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : #1. \u60f3\u8981\u521b\u5efa\u5e94\u7528\u5fc5\u987b\u5148\u5b9e\u4f8b\u5316\u4e00\u4e2aQApplication\uff0c #\u5e76\u5c06sys.argv\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff1b #2. \u5b9e\u4f8b\u5316\u4e00\u4e2aQLabel\u63a7\u4ef6\uff0c #\u8be5\u63a7\u4ef6\u7528\u6765\u5c55\u793a\u6587\u5b57\u6216\u56fe\u7247(\u53ef\u4ee5\u60f3\u8c61\u4e0b\u8863\u670d\u6807\u7b7e\uff0c\u4e0a\u9762\u65e2\u6709\u6587\u5b57\u4e5f\u6709\u56fe\u7247)\uff0c #\u8fd9\u91cc\u7528\u4e8e\u5c55\u793a\u6587\u672c\u3002 #\u53ef\u4ee5\u50cf\u4e0a\u65b9\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u5165'Hello World'\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c #\u4e5f\u53ef\u4ee5\u5148\u5b9e\u4f8b\u5316\uff0c\u518d\u8c03\u7528`setText()`\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6587\u672c\uff1a app = QApplication ( sys . argv ) #1 label = QLabel ( 'Hello World' ) # 2 label . show () # 3 sys . exit ( app . exec_ ()) # 4 * 1. \u60f3\u8981\u521b\u5efa\u5e94\u7528\u5fc5\u987b\u5148\u5b9e\u4f8b\u5316\u4e00\u4e2a QApplication \uff0c\u5e76\u5c06 sys.argv \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff1b * 2. \u5b9e\u4f8b\u5316\u4e00\u4e2a QLabel \u63a7\u4ef6\uff0c\u8be5\u63a7\u4ef6\u7528\u6765\u5c55\u793a\u6587\u5b57\u6216\u56fe\u7247(\u53ef\u4ee5\u60f3\u8c61\u4e0b\u8863\u670d\u6807\u7b7e\uff0c\u4e0a\u9762\u65e2\u6709\u6587\u5b57\u4e5f\u6709\u56fe\u7247)\uff0c\u8fd9\u91cc\u7528\u4e8e\u5c55\u793a\u6587\u672c\u3002\u53ef\u4ee5\u50cf\u4e0a\u65b9\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u5165'Hello World'\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u4e5f\u53ef\u4ee5\u5148\u5b9e\u4f8b\u5316\uff0c\u518d\u8c03\u7528 setText() \u65b9\u6cd5\u6765\u8bbe\u7f6e\u6587\u672c\uff1a import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : app = QApplication ( sys . argv ) #\u5b9e\u4f8b\u5316QApplication label = QLabel () #\u5b9e\u4f8b\u5316Qlabel label . setText ( 'Hello World' ) #\u8bbe\u7f6e\u6587\u672c label . show () #\u8bbe\u7f6e\u663e\u793a sys . exit ( app . exec_ ()) #\u5f53app.exec_() \u8fd4\u56de\u503c\u4e3a0\u65f6\u7cfb\u7edf\u9000\u51fa * 3. \u901a\u8fc7\u8c03\u7528show()\u65b9\u6cd5\u4f7f\u63a7\u4ef6\u53ef\u89c1(\u9ed8\u8ba4\u662f\u9690\u85cf)\uff1b 4. app.exec_() \u662f\u6267\u884c\u5e94\u7528\uff0c\u8ba9\u5e94\u7528\u5f00\u59cb\u8fd0\u8f6c\u5faa\u73af\uff0c\u76f4\u5230\u7a97\u53e3\u5173\u95ed\u8fd4\u56de 0 \u7ed9 sys.exit() \uff0c\u9000\u51fa\u6574\u4e2a\u7a0b\u5e8f\u3002 \u6709\u4e9b\u5c0f\u4f19\u4f34\u53ef\u80fd\u53d1\u73b0\u8fd8\u6709 exec() \uff0c\u5728Python2\u4e2dexec\u662f\u5173\u952e\u5b57\uff0c\u6240\u4ee5PyQt5\u5c31\u4f7f\u7528 exec_() \u800c\u4e0d\u662f exec() \u3002\u4e0d\u8fc7 exec \u5728Python3\u4e2d\u5df2\u7ecf\u4e0d\u518d\u662f\u5173\u952e\u5b57\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u8bfb\u8005\u4f7f\u7528\u7684\u662fPython3\u7684\u8bdd\u90a3\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7528`exec()\u4e5f\u5b8c\u5168\u6ca1\u5173\u7cfb\u3002 \u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u4e2d\u52a0\u4e0ahtml\u4ee3\u7801\uff0c\u4fee\u6539\u6587\u672c\u6837\u5f0f\u3002 import sys from PyQt5.QtWidgets import QApplication , QLabel if __name__ == '__main__' : app = QApplication ( sys . argv ) label = QLabel ( '<font color=\"red\">Hello</font> <h1>World</h1>' ) #\u6ce8\u610f\u8fd9\u91cc\u7684font\u6807\u7b7e\u4e0d\u80fd\u968f\u610f\u4fee\u6539 # label.setText('<font color=\"red\">Hello</font> <h1>World</h1>') label . show () sys . exit ( app . exec_ ()) \u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u5b8c\u5168\u6ca1\u6709\u5173\u7cfb\uff0c\u5148\u8bb0\u4f4f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u5f80\u4e0b\u6162\u6162\u770b\uff0c\u5c31\u4f1a\u8d8a\u61c2\u8d8a\u591a\u4e86\u3002\u6bd4\u5982\u53ef\u4ee5\u7406\u89e3\u7684\u662fQLabel\u63a7\u4ef6\u7684\u7528\u6cd5\uff0c\u77e5\u9053\u8fd9\u4e2a\u63a7\u4ef6\u662f\u4ec0\u4e48\u7528\u7684\uff0c\u800c\u4e0a\u65b9\u7684\u7b2c4\u70b9\u53ef\u4ee5\u5c31\u5148\u8bb0\u4f4f\u8fd9\u4e48\u5199\u5c31\u597d\u3002","title":"1.2 \u7a0b\u5e8f\u8fd0\u884c\u8d77\u70b9"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#13","text":"QLabel\u662f\u6587\u672c\u63a7\u4ef6\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u7528\u6765\u5c55\u793a\u56fe\u7247(\u5728\u4e4b\u540e\u7ae0\u8282\u8bb2\u89e3)\uff1b \u53ef\u4ee5\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0html\u4ee3\u7801\uff1b app.exec_()\u7528\u6765\u6267\u884c\u5e94\u7528\uff0csys.exit()\u9000\u51fa\u7a0b\u5e8f(exec\u5c31\u662f\u82f1\u6587\u5f53\u4e2d\u7684execute\u3010\u6267\u884c\u3011\u7684\u7f29\u5199\uff0c\u8fd9\u6837\u8bb0\u5c31\u5bb9\u6613\u4e86)\u3002","title":"1.3 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#_1","text":"\u4e0d\u7528\u591a\u8bf4\uff0c\u4fe1\u53f7(signal)\u4e0e\u69fd(slot)\u673a\u5236\u5f88\u91cd\u8981\u3002\u5728\u8fd9\u91cc\u6211\u628a\u4fe1\u53f7\u89c6\u4f5c\u88c1\u5224\u9e23\u67aa\uff0c\u800c\u7528\u4e8e\u884c\u52a8\u7684\u69fd\u51fd\u6570\u5219\u89c6\u4f5c\u9009\u624b\u5f00\u8dd1\uff0c\u5f53\u88c1\u5224\u9e23\u67aa\u540e(\u5373\u4fe1\u53f7\u53d1\u51fa)\uff0c\u9009\u624b\u5c31\u5f00\u59cb\u5f80\u524d\u8dd1(\u69fd\u51fd\u6570\u542f\u52a8)\u3002PyQt5\u4e2d\u5404\u4e2a\u5bf9\u8c61\u95f4\u6216\u5404\u4e2a\u5bf9\u8c61\u81ea\u8eab\u5c31\u662f\u901a\u8fc7\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236\u6765\u76f8\u4e92\u901a\u4fe1\u7684\uff0c\u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002","title":"\u7b2c\u4e8c\u7ae0  \u4fe1\u53f7\u4e0e\u69fd\u2014\u2014\u88c1\u5224\u9e23\u67aa\u4e0e\u9009\u624b\u5f00\u8dd1"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#21","text":"\u5f88\u591a\u7a0b\u5e8f\u4e0a\u662f\u6709\u201c\u5f00\u59cb\u201d\u6309\u94ae\u7684\uff0c\u6309\u4e0b\u53bb\u540e\u6309\u94ae\u4e0a\u7684\u6587\u672c\u5c31\u53d8\u6210\u4e86\u201c\u505c\u6b62\u201d\u3002\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u793a\u4f8b(\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4f1a\u7528\u7c7b\u6765\u5448\u73b0)\uff1a # -*- coding: utf-8 -*- \"\"\" Created on Fri May 24 08:47:52 2019 @author: zangz \"\"\" import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): # 1 def __init__ ( self ): # \u9996\u5148\u627e\u5230Demo\u7684\u7236\u7c7b\uff08\u6bd4\u5982\u662f\u7c7bQWidget\uff09\uff0c #\u7136\u540e\u628a\u7c7bDemo\u7684\u5bf9\u8c61self\u8f6c\u6362\u4e3a\u7c7bQWigget\u7684\u5bf9\u8c61\uff0c #\u7136\u540e\u201c\u88ab\u8f6c\u6362\u201d\u7684\u7c7bQWidget\u5bf9\u8c61\u8c03\u7528\u81ea\u5df1\u7684__init__\u51fd\u6570 super ( Demo , self ) . __init__ () # self . button = QPushButton ( 'Start' , self ) # 2 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6309\u94ae self . button . clicked . connect ( self . change_text ) # 3 def change_text ( self ): print ( 'change text' ) self . button . setText ( 'Stop' ) # 4 self . button . clicked . disconnect ( self . change_text ) # 5 if __name__ == '__main__' : app = QApplication ( sys . argv ) #\u5b9e\u4f8b\u5316\u4e00\u4e2aQApplication demo = Demo () #\u5b9e\u4f8b\u5316\u4e00\u4e2ademo # 6 demo . show () #\u663e\u793a\u6240\u6709\u7684\u63a7\u4ef6 # 7 sys . exit ( app . exec_ ()) * 1. \u8be5\u7c7b\u7ee7\u627fQWidget\uff0c\u53ef\u4ee5\u5c06QWidget\u770b\u4f5c\u662f\u4e00\u79cd\u6bdb\u576f\u623f\uff0c\u8fd8\u6ca1\u6709\u88c5\u4fee\uff0c\u800c\u6211\u4eec\u5f80\u5176\u4e2d\u653e\u5165QPushButton\u3001QLabel\u7b49\u63a7\u4ef6\u5c31\u76f8\u5f53\u4e8e\u5728\u88c5\u4fee\u8fd9\u95f4\u6bdb\u576f\u623f\u3002\u7c7b\u4f3c\u7684\u6bdb\u576f\u623f\u8fd8\u6709QMainWindow\u548cQDialog\uff0c\u4e4b\u540e\u7ae0\u8282\u518d\u8bb2\u8ff0\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2aQPushButton\uff0c\u56e0\u4e3a\u7ee7\u627f\u4e8eQWidget\uff0c\u6240\u4ee5self\u4e0d\u80fd\u5fd8\u4e86(\u76f8\u5f53\u4e8e\u544a\u8bc9\u7a0b\u5e8f\u8fd9\u4e2aQPushButton\u662f\u653e\u5728QWidget\u8fd9\u4e2a\u623f\u5b50\u4e2d\u7684)\uff1b \u8fde\u63a5\u4fe1\u53f7\u4e0e\u69fd\u51fd\u6570\u3002self.button\u5c31\u662f\u4e00\u4e2a\u63a7\u4ef6\uff0cclicked(\u6309\u94ae\u88ab\u70b9\u51fb)\u662f\u8be5\u63a7\u4ef6\u7684\u4e00\u4e2a\u4fe1\u53f7\uff0cconnect()\u5373\u8fde\u63a5\uff0cself.change_text\u5373\u4e0b\u65b9\u5b9a\u4e49\u7684\u51fd\u6570(\u6211\u4eec\u79f0\u4e4b\u4e3a\u69fd\u51fd\u6570)\u3002\u6240\u4ee5\u901a\u7528\u7684\u516c\u5f0f\u53ef\u4ee5\u662f\uff1awidget.signal.connect(slot)\uff1b (\u63a7\u4ef6.\u4fe1\u53f7(\u4ec0\u4e48\u4fe1\u53f7).\u8fde\u63a5(\u51fd\u6570)) \u5c06\u6309\u94ae\u6587\u672c\u4ece\u2018Start\u2019\u6539\u6210\u2018Stop\u2019\uff1b \u4fe1\u53f7\u548c\u69fd\u89e3\u7ed1\uff0c\u89e3\u7ed1\u540e\u518d\u6309\u6309\u94ae\u4f60\u4f1a\u53d1\u73b0\u63a7\u5236\u53f0\u4e0d\u4f1a\u518d\u8f93\u51fa\u2018change text\u2019\uff0c\u5982\u679c\u628a\u8fd9\u884c\u89e3\u7ed1\u7684\u4ee3\u7801\u6ce8\u91ca\u6389\uff0c\u4f60\u4f1a\u53d1\u73b0\u6bcf\u6309\u4e00\u6b21\u6309\u94ae\uff0c\u63a7\u5236\u53f0\u90fd\u4f1a\u8f93\u51fa\u4e00\u6b21\u2018change text\u2019\uff1b \u5b9e\u4f8b\u5316Demo\u7c7b\uff1b \u4f7fdemo\u53ef\u89c1\uff0c\u5176\u4e2d\u7684\u63a7\u4ef6\u81ea\u7136\u90fd\u53ef\u89c1(\u9664\u975e\u67d0\u63a7\u4ef6\u521a\u5f00\u59cb\u8bbe\u5b9a\u9690\u85cf) \u73b0\u5728\u7528\u9e23\u67aa\u548c\u5f00\u8dd1\u6765\u5206\u6790\u4e0b\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a\u6309\u94ae\u63a7\u4ef6\u662f\u88c1\u5224\uff0c\u4ed6\u9e23\u67aa\u53d1\u51fa\u4fe1\u53f7(clicked)\uff0cchange_text()\u69fd\u51fd\u6570\u8fd0\u884c\u5c31\u662f\u9009\u624b\u5f00\u8dd1\u3002 \u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u7a97\u53e3\u663e\u793a\u5982\u4e0b\uff1a \u70b9\u51fb\u4e4b\u540e\u6587\u672c\u5219\u6539\u53d8\uff1a","title":"2.1 \u901a\u8fc7\u6309\u94ae\u6765\u6539\u53d8\u6587\u672c(\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u4e00\u4e2a\u69fd)"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#22","text":"2.1 \u8fd9\u4e2a\u793a\u4f8b\u662f\u7528\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u4e00\u4e2a\u69fd\uff0c\u73b0\u5728\u6765\u770b\u4e0b\u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u540c\u4e00\u4e2a\u69fd\u3002 QPushButton\u8fd8\u6709\u4e24\u4e2a\u4fe1\u53f7\u662fpressed\u548creleased\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u89e3\u91ca\u5982\u4e0b\uff1a pressed: \u5f53\u9f20\u6807\u5728button\u4e0a\u5e76\u70b9\u51fb\u5de6\u952e\u7684\u65f6\u5019\uff0c\u89e6\u53d1\u4fe1\u53f7 \u3002 released: \u5f53\u9f20\u6807\u5de6\u952e\u88ab\u91ca\u653e\u7684\u65f6\u5019\u89e6\u53d1\u4fe1\u53f7\u3002 \u6240\u4ee5\u5176\u5b9epressed\u548creleased\u4e24\u4e2a\u8fde\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684clicked \u4e0b\u9762\u7528\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u6765\u89e3\u91ca\u5982\u4f55\u5c06\u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u69fd\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Start' , self ) self . button . pressed . connect ( self . change_text ) # 1 self . button . released . connect ( self . change_text ) # 2 def change_text ( self ): if self . button . text () == 'Start' : # 3 self . button . setText ( 'Stop' ) else : self . button . setText ( 'Start' ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-2. \u5c06pressed\u548creleased\u4fe1\u53f7\u8fde\u63a5\u642d\u914dchange_text()\u69fd\u51fd\u6570\u4e0a\uff1b \u82e5\u5f53\u524d\u6309\u94ae\u6587\u672c\u4e3a\u2018Start\u2019\uff0c\u5219\u5c06\u6587\u672c\u6539\u4e3a\u2018Stop\u2019\uff1b\u82e5\u4e3a\u2018Stop\u2019\uff0c\u5219\u6539\u4e3a\u2018Start\u2019\u3002 \u6240\u4ee5\u5f53\u9f20\u6807\u70b9\u51fb\u6309\u94ae\u4e0d\u653e\u65f6\uff0c\u53d1\u51fapressed\u4fe1\u53f7\uff0c\u8c03\u7528\u69fd\u51fd\u6570\uff0c\u5c06\u2018Start\u2019\u6587\u672c\u6539\u4e3a\u2018Stop\u2019\uff1b\u5f53\u9f20\u6807\u653e\u5f00\u540e\u91ca\u653ereleased\u4fe1\u53f7\uff0c\u518d\u6b21\u8c03\u7528\u69fd\u51fd\u6570\uff0c\u5c06\u6587\u672c\u6539\u56de\u2018Start\u2019\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff0c\u70b9\u51fb\u4e0d\u653e\u65f6\uff1a \u653e\u5f00\u540e\uff1a","title":"2.2 \u591a\u4e2a\u4fe1\u53f7\u8fde\u63a5\u540c\u4e00\u4e2a\u69fd"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#23","text":"import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Start' , self ) self . button . pressed . connect ( self . button . released ) # 1 self . button . released . connect ( self . change_text ) # 2 def change_text ( self ): if self . button . text () == 'Start' : self . button . setText ( 'Stop' ) else : self . button . setText ( 'Start' ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-2. \u5c06pressed\u4fe1\u53f7\u548creleased\u4fe1\u53f7\u8fde\u63a5\u8d77\u6765\uff0c\u800creleased\u4fe1\u53f7\u5219\u4e0e\u69fd\u51fd\u6570\u8fde\u63a5\u3002\u8fd9\u6837\u5f53\u70b9\u51fb\u4e0d\u653e\u65f6\uff0cpressed\u4fe1\u53f7\u53d1\u51fa\uff0creleased\u4fe1\u53f7\u4e5f\u4f1a\u53d1\u51fa\uff0c\u4ece\u800c\u542f\u52a8\u69fd\u51fd\u6570\u3002\u91ca\u653e\u9f20\u6807\u5219\u53d1\u51fareleased\u4fe1\u53f7\uff0c\u518d\u6b21\u542f\u52a8\u69fd\u51fd\u6570\u3002\u6240\u4ee5\u7a0b\u5e8f\u8fd0\u884c\u6548\u679c\u8ddf2.2\u5c0f\u8282\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002","title":"2.3 \u4e00\u4e2a\u4fe1\u53f7\u4e0e\u53e6\u5916\u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#2-4","text":"\u4fe1\u53f7\u90fd\u4e3aclicked\uff0c\u7136\u540e\u518d\u591a\u5b9a\u4e49\u51e0\u4e2a\u69fd\u51fd\u6570\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 300 ) # 1 self . setWindowTitle ( 'demo' ) # 2 self . button = QPushButton ( 'Start' , self ) self . button . clicked . connect ( self . change_text ) self . button . clicked . connect ( self . change_window_size ) # 3 self . button . clicked . connect ( self . change_window_title ) # 4 def change_text ( self ): print ( 'change text' ) self . button . setText ( 'Stop' ) self . button . clicked . disconnect ( self . change_text ) def change_window_size ( self ): # 5 print ( 'change window size' ) self . resize ( 500 , 500 ) self . button . clicked . disconnect ( self . change_window_size ) def change_window_title ( self ): # 6 print ( 'change window title' ) self . setWindowTitle ( 'window title changed' ) self . button . clicked . disconnect ( self . change_window_title ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u9996\u5148\u5728\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u5c06\u7a97\u53e3\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u5bbd300\uff0c\u957f300\uff1b \u5176\u6b21\u5c06\u7a97\u53e3\u540d\u79f0\u8bbe\u7f6e\u4e3a\u2018demo\u2019\uff1b 3-4. \u4fe1\u53f7\u548c\u69fd\u8fde\u63a5\uff0c\u53ef\u4ee5\u770b\u5230\u4fe1\u53f7\u8fd8\u662fclicked\uff0c\u800c\u69fd\u51fd\u6570\u591a\u4e86\u4e24\u4e2a\uff1b \u4fee\u6539\u7a97\u53e3\u5927\u5c0f\u7684\u69fd\u51fd\u6570\uff1b \u4fee\u6539\u7a97\u53e3\u540d\u79f0\u7684\u69fd\u51fd\u6570\uff1b \u73b0\u5728\u8fd0\u884c\u70b9\u51fb\u6309\u94ae\u540e\uff0c\u6309\u94ae\u6587\u672c\u4f1a\u7531\u2018Start\u2019\u53d8\u4e3a\u2018Stop\u2019\uff0c\u7a97\u53e3\u5927\u5c0f\u4ece(300, 300)\u53d8\u4e3a(500, 500)\uff0c\u7a97\u53e3\u6807\u9898\u7531\u2018demo\u2019\u53d8\u4e3a\u2018window title changed\u2019 \u4ee5\u4e0b\u662f\u8fd0\u884c\u622a\u56fe\uff1a \u70b9\u51fb\u540e\u5219\u53d8\u6210\uff1a","title":"2. 4 \u4e00\u4e2a\u4fe1\u53f7\u8fde\u63a5\u591a\u4e2a\u69fd"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#25","text":"\u6ce8\u610f\u8fd9\u91cc\u5c06QPushButton\u6362\u6210\u4e86QLabel\u6765\u8bb2\u89e3\uff1a import sys from PyQt5.QtCore import pyqtSignal # 1 from PyQt5.QtWidgets import QApplication , QWidget , QLabel class Demo ( QWidget ): my_signal = pyqtSignal () # 2 def __init__ ( self ): super ( Demo , self ) . __init__ () self . label = QLabel ( 'Hello World' , self ) self . my_signal . connect ( self . change_text ) # 3 def change_text ( self ): if self . label . text () == 'Hello World' : self . label . setText ( 'Hello PyQt5' ) else : self . label . setText ( 'Hello World' ) def mousePressEvent ( self , QMouseEvent ): # 4 self . my_signal . emit () if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u9700\u8981\u5148\u5bfc\u5165pyqtSignal\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\uff1b \u5c06\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\u8fde\u63a5\u5230\u81ea\u5b9a\u4e49\u7684\u69fd\u51fd\u6570\u4e0a\uff1b mousePressEvent()\u65b9\u6cd5\u662f\u8bb8\u591a\u63a7\u4ef6\u81ea\u5e26\u7684\uff0c\u8fd9\u91cc\u6765\u81ea\u4e8eQWidget\u3002\u8be5\u65b9\u6cd5\u7528\u6765\u76d1\u6d4b\u9f20\u6807\u662f\u5426\u6709\u6309\u4e0b\u3002\u73b0\u5728\u9f20\u6807\u82e5\u88ab\u6309\u4e0b\uff0c\u5219\u4f1a\u53d1\u51fa\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u5f53\u5728\u7a97\u4f53\u7a7a\u767d\u5904\u6309\u4e0b\u9f20\u6807\uff0c\u5219\u6587\u672c\u53d1\u751f\u53d8\u5316\uff1a","title":"2.5 \u81ea\u5b9a\u4e49\u4fe1\u53f7"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#26","text":"\u53ef\u4ee5\u5c06\u4fe1\u53f7\u548c\u69fd\u89c6\u4f5c\u88c1\u7247\u9e23\u67aa\u4e0e\u9009\u624b\u5f00\u8dd1\uff0c\u4fe1\u53f7\u53d1\u51fa\uff0c\u5219\u76f8\u5e94\u8fde\u63a5\u7684\u69fd\u51fd\u6570\u542f\u52a8\uff1b \u5355\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u5355\u4e2a\u69fd\uff1b\u5355\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u591a\u4e2a\u69fd\uff1b\u591a\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u8fde\u63a5\u5355\u4e2a\u69fd\uff1b\u4fe1\u53f7\u53ef\u4ee5\u4e0e\u4fe1\u53f7\u8fde\u63a5\uff1b\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4fe1\u53f7\uff1b mousePressEvent()\u65b9\u6cd5\u662f\u8bb8\u591a\u63a7\u4ef6\u81ea\u5e26\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u76d1\u6d4b\u9f20\u6807\u662f\u5426\u88ab\u6309\u4e0b\u3002","title":"2.6 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#_2","text":"\u628a\u5404\u4e2a\u63a7\u4ef6\u6446\u6446\u597d\uff0c\u8ba9\u6574\u4e2a\u754c\u9762\u66f4\u52a0\u6709\u5e8f\u597d\u770b\uff0c\u8fd9\u5c31\u662f\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u4f5c\u7528\u3002","title":"\u7b2c\u4e09\u7ae0 \u5e03\u5c40\u7ba1\u7406"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#31-qvboxlayout","text":"\u8be5\u5e03\u5c40\u65b9\u5f0f\u5c31\u662f\u5c06\u5404\u4e2a\u63a7\u4ef6\u6309\u4ece\u4e0a\u5230\u4e0b\u5782\u76f4\u7684\u65b9\u5f0f\u6446\u653e\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . v_layout = QVBoxLayout () # 1 self . v_layout . addWidget ( self . user_label ) # 2 self . v_layout . addWidget ( self . pwd_label ) # 3 self . setLayout ( self . v_layout ) # 4 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668QVBoxLayout\uff1b 2-3. \u901a\u8fc7\u8c03\u7528addWidget()\u65b9\u6cd5\u6765\u5c06\u63a7\u4ef6\u4e00\u4e2a\u4e2a\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\u4e2d\uff0c\u6700\u5148\u6dfb\u52a0\u7684\u51fa\u73b0\u5728\u6700\u4e0a\u65b9\uff1b \u5c06self.v_layout\u8bbe\u4e3a\u6574\u4e2a\u7a97\u53e3\u7684\u6700\u7ec8\u5e03\u5c40\u65b9\u5f0f\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u51fa\u4e24\u4e2a\u6807\u7b7e\u6587\u672c\u662f\u5782\u76f4\u5bf9\u9f50\u6392\u5217\u7684\uff1a","title":"3.1 \u5782\u76f4\u5e03\u5c40QVBoxLayout"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#32-qhboxlayout","text":"\u5c06\u63a7\u4ef6\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6c34\u5e73\u6446\u653e\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QHBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . user_line = QLineEdit ( self ) # 1 self . h_layout = QHBoxLayout () # 2 self . h_layout . addWidget ( self . user_label ) # 3 self . h_layout . addWidget ( self . user_line ) # 4 self . setLayout ( self . h_layout ) # 5 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. QLineEdit\u63a7\u4ef6\u5c31\u662f\u4e00\u4e2a\u7528\u6765\u8fdb\u884c\u5355\u884c\u6587\u672c\u8f93\u5165\u7684\u6846\uff1b \u5b9e\u4f8b\u5316\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\uff1b 3-4. \u5c06QLabel\u548cQLineEdit\u63a7\u4ef6\u6dfb\u52a0\u5230\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u4e2d\uff0c\u5148\u6dfb\u52a0\u7684\u51fa\u73b0\u5728\u5de6\u8fb9\uff1b \u5c06self.h_layout\u8bbe\u4e3a\u6574\u4e2a\u7a97\u53e3\u7684\u6700\u7ec8\u5e03\u5c40\u65b9\u5f0f\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a","title":"3.2 \u6c34\u5e73\u5e03\u5c40QHBoxLayout"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#33-qvboxlayoutqhboxlayout","text":"\u6211\u4eec\u5c06\u5b9e\u73b0\u4e00\u4e2a\u7528\u4e8e\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\uff0c\u5e76\u6709\u767b\u9646\u548c\u6ce8\u518c\u6309\u94ae\u7684\u5c0f\u7a97\u53e3\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . label_v_layout = QVBoxLayout () # 1 self . line_v_layout = QVBoxLayout () # 2 self . button_h_layout = QHBoxLayout () # 3 self . label_line_h_layout = QHBoxLayout () # 4 self . all_v_layout = QVBoxLayout () # 5 self . label_v_layout . addWidget ( self . user_label ) # 6 self . label_v_layout . addWidget ( self . pwd_label ) self . line_v_layout . addWidget ( self . user_line ) self . line_v_layout . addWidget ( self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . label_line_h_layout . addLayout ( self . label_v_layout ) # 7 self . label_line_h_layout . addLayout ( self . line_v_layout ) self . all_v_layout . addLayout ( self . label_line_h_layout ) self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1-3. \u5b9e\u4f8b\u5316\u4e09\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u5206\u522b\u7528\u6765\u7ba1\u7406 QLabel\uff0cQLineEdit \u548c QPushButton \uff1b 4-5. \u8fd9\u4e24\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u7528\u6765\u7ba1\u74061-3\u4e2d\u7684\u5e03\u5c40\uff0c\u5b83\u4eec\u6dfb\u52a0\u7684\u4e0d\u662f QLabel\u3001QLineEdit \u6216\u8005 QPushButton \u63a7\u4ef6\uff0c\u800c\u662f\u901a\u8fc7 addLayout() \u65b9\u6cd5\u6dfb\u52a0\u5e03\u5c40\u7ba1\u7406\u5668\u3002\u7b2c4\u884c\u7684\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u5c06 self.label_v_layout \u5782\u76f4\u5e03\u5c40\u548c self.line_vlayout \u5782\u76f4\u5e03\u5c40\u8fd9\u4e24\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6c34\u5e73\u6446\u653e\u3002\u7b2c5\u884c\u7684\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u5c06 self.label_line_h_layout \u548c self.button_h_layout \u5782\u76f4\u4ece\u4e0a\u5230\u4e0b\u6446\u653e\uff1b 6-7. \u6dfb\u52a0\u63a7\u4ef6\u7528 addWidght() \uff0c\u6dfb\u52a0\u5e03\u5c40\u7528 addLayout() \u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u662f\u5c06\u4e24\u4e2a QLabel \u7528\u5782\u76f4\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff0c\u5c06\u4e24\u4e2a QLineEdit \u4e5f\u7528\u5782\u76f4\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff0c\u6700\u540e\u7528\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u6765\u6446\u653e\u7740\u4e24\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u3002\u90a3\u6362\u79cd\u601d\u8def\uff0c\u53ef\u4ee5\u628aQLabel\u548cQLineEdit\u7528\u6c34\u5e73\u5e03\u5c40\u65b9\u5f0f\u6446\u653e\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . button_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . user_h_layout . addWidget ( self . user_label ) self . user_h_layout . addWidget ( self . user_line ) self . pwd_h_layout . addWidget ( self . pwd_label ) self . pwd_h_layout . addWidget ( self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u76f8\u6bd4\u800c\u8a00\uff0c\u8fd9\u79cd\u5e03\u5c40\u65b9\u5f0f\u66f4\u52a0\u6e05\u6670\u660e\u4e86\u3002","title":"3.3 \u6df7\u5408\u4f7f\u7528QVBoxLayout\u548cQHBoxLayout"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#34-qformlayout","text":"\u8868\u5355\u5e03\u5c40\u53ef\u4ee5\u5c06\u63a7\u4ef6\u4ee5\u4e24\u5217\u7684\u5f62\u5f0f\u8fdb\u884c\u6392\u5e03\uff0c\u5de6\u5217\u63a7\u4ef6\u4e3a\u6587\u672c\u6807\u7b7e\uff0c\u53f3\u5217\u4e3a\u8f93\u5165\u578b\u7684\u63a7\u4ef6\uff0c\u5982 QLineEdit \u3002\u7528\u8fd9\u4e2a\u5e03\u5c40\u7ba1\u7406\u5668\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u5feb\u901f\u65b9\u4fbf\u5730\u6784\u5199\u6709\u8868\u5355\u7684\u754c\u9762\u3002\u6211\u4eec\u7528 QFormLayout \u6765\u6539\u5199\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QHBoxLayout , QVBoxLayout , QFormLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . f_layout = QFormLayout () # 1 self . button_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . f_layout . addRow ( self . user_label , self . user_line ) # 2 self . f_layout . addRow ( self . pwd_label , self . pwd_line ) self . button_h_layout . addWidget ( self . login_button ) self . button_h_layout . addWidget ( self . signin_button ) self . all_v_layout . addLayout ( self . f_layout ) # 3 self . all_v_layout . addLayout ( self . button_h_layout ) self . setLayout ( self . all_v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2aQFormLayout\u63a7\u4ef6\uff1b \u8c03\u7528addRow()\u65b9\u6cd5\u4f20\u5165QLabel\u548cQLineEdit\u63a7\u4ef6\uff1b \u5c06\u8868\u5355\u5e03\u5c40\u6dfb\u52a0\u5230\u603b\u5e03\u5c40\u4e2d\u3002 \u53ef\u4ee5\u53d1\u73b0\u4ee3\u7801\u6bd4\u4e4b\u524d\u7684\u66f4\u52a0\u7b80\u6d01\u4e86\u3002","title":"3.4 \u8868\u5355\u5e03\u5c40QFormLayout"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#35-qgridlayout","text":"\u5f53\u4f7f\u7528\u8be5\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u628a\u6574\u4e2a\u7a97\u4f53\u60f3\u8c61\u6210\u5e26\u6709\u5750\u6807\u7684\uff0c\u7136\u540e\u53ea\u7528\u628a\u5404\u4e2a\u63a7\u4ef6\u653e\u5728\u76f8\u5e94\u7684\u5750\u6807\u5c31\u597d\u4e86\uff0c\u8bf7\u770b\u793a\u4f8b(\u8fd8\u662f\u4e0a\u65b9\u7684\u767b\u5f55\u6846)\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () # 1 self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) # 2 self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) # 3 self . v_layout . addLayout ( self . h_layout ) # 4 self . setLayout ( self . v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u8fd9\u91cc\u6df7\u5408\u4f7f\u7528 QVBoxLayout\u3001QHBoxLayout \u548c QGridLayou t\u6765\u5b8c\u6210\u5e03\u5c40\u3002 \u5b9e\u4f8b\u5316\u4e00\u4e2a QGridLayout \u5e03\u5c40\u7ba1\u7406\u5668 2. QGridLayout \u7684 addWidget() \u65b9\u6cd5\u9075\u5faa\u5982\u4e0b\u8bed\u6cd5\u5f62\u5f0f\uff1a addWidget(widget, row, column, rowSpan, columnSpan) widget \u5c31\u662f\u8981\u6dfb\u52a0\u7684\u63a7\u4ef6\uff1b row \u4e3a\u7b2c\u51e0\u884c\uff0c 0 \u4ee3\u8868\u7b2c\u4e00\u884c\uff1b column \u4e3a\u7b2c\u51e0\u5217\uff0c 0 \u4ee3\u8868\u7b2c\u4e00\u5217\uff1b rowSpan \u8868\u793a\u8981\u8ba9\u8fd9\u4e2a\u63a7\u4ef6\u53bb\u5360\u7528\u51e0\u884c(\u9ed8\u8ba4\u4e00\u884c)\uff1b columnSpan \u8868\u793a\u8981\u8ba9\u8fd9\u4e2a\u63a7\u4ef6\u53bb\u5360\u7528\u51e0\u5217(\u9ed8\u8ba4\u4e00\u5217)\u3002 \u5728\u4e0a\u65b9\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06 self.user_label \u653e\u5728 (0, 0) \u8fd9\u4e2a\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u5c06 self.user_line \u653e\u5728 (0, 1) \uff0c\u5373\u7b2c\u4e00\u884c\u7b2c\u4e8c\u5217\uff0c\u4e5f\u5c31\u662f self.user_label \u7684\u53f3\u8fb9\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u5c06 self.pwd_label \u653e\u5728 (1, 0) \uff0c\u5373\u7b2c\u4e8c\u884c\u7b2c\u4e00\u5217\uff0c\u5728 self.user_label \u7684\u6b63\u4e0b\u65b9\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\uff1b\u6700\u540e\u6211\u4eec\u5c06 self.pwd_line \u653e\u5728 (1, 1) \uff0c\u5373\u7b2c\u4e8c\u884c\u7b2c\u4e8c\u5217\uff0c\u5360\u7528\u4e00\u884c\u4e00\u5217\u3002 \u56e0\u4e3a\u9ed8\u8ba4\u90fd\u662f\u4e00\u884c\u4e00\u5217\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a self . grid_layout . addWidget ( self . user_label , 0 , 0 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 ) * 3-4. \u6700\u540e\uff0c\u7a0b\u5e8f\u7528\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u5c06\u4e00\u4e2a\u7f51\u683c\u5e03\u5c40\u548c\u4e00\u4e2a\u6c34\u5e73\u5e03\u5c40\u6dfb\u52a0\u8fdb\u53bb\u3002 \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5355\u5355\u7528QGridLayout\u6765\u5b8c\u6210\u8fd9\u6b21\u754c\u9762\u7684\u5e03\u5c40\uff0c\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u6548\u679c\u5e76\u4e0d\u4f1a\u8ba9\u4eba\u5f88\u6ee1\u610f\uff0c\u53ef\u4ee5\u81ea\u884c\u53bb\u8bd5\u4e00\u4e0b\u3002 \u5408\u7406\u7684\u8fd0\u7528\u8fd9\u4e09\u79cd\u5e03\u5c40\u65b9\u5f0f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e0a\u4e8b\u534a\u529f\u500d\u3002","title":"3.5 \u7f51\u683c\u5e03\u5c40QGridLayout"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#36","text":"QLineEdit\u63a7\u4ef6\u4e3a\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\uff1b \u4e86\u89e3\u56db\u79cd\u5e03\u5c40\u65b9\u5f0f\uff1a\u5782\u76f4\u5e03\u5c40QVBoxLayout\u3001\u6c34\u5e73\u5e03\u5c40QHBoxLayout\u3001\u8868\u5355\u5e03\u5c40QFormLayout\u548c\u7f51\u683c\u5e03\u5c40QGridLayout\uff1b addWidget()\u65b9\u6cd5\u7528\u6765\u6dfb\u52a0\u63a7\u4ef6\uff0caddLayout()\u65b9\u6cd5\u7528\u6765\u6dfb\u52a0\u5e03\u5c40\uff1b \u8bf7\u8bb0\u4f4fQGridLayout\u7684addWidget()\u8bed\u6cd5\u5f62\u5f0f\uff1a addWidget(widget, row, column, rowSpan, columnSpan)","title":"3.6 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#qmessagebox","text":"\u5728\u7a0b\u5e8f\u4e2d\u52a0\u5165\u5404\u79cd\u6d88\u606f\u6846\u6765\u63d0\u793a\u53ef\u4ee5\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u5ea6\u3002","title":"\u7b2c\u56db\u7ae0 QMessageBox\u6d88\u606f\u6846"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#41","text":"import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'information' , self ) self . button . clicked . connect ( self . show_messagebox ) # 1 def show_messagebox ( self ): QMessageBox . information ( self , 'Title' , 'Content' , QMessageBox . Yes | QMessageBox . No | QMessageBox . Cancel ) # 2 if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5b9e\u4f8b\u5316\u4e00\u4e2aQPushButton\u5e76\u5c06clicked\u4fe1\u53f7\u4e0e\u81ea\u5b9a\u4e49\u7684show_messagebox\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u6837\u70b9\u51fb\u6309\u94ae\u540e\uff0c\u4fe1\u53f7\u53d1\u51fa\uff0c\u69fd\u51fd\u6570\u5c31\u4f1a\u542f\u52a8\uff1b \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u4fe1\u606f\u6846(information)\uff0c\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a QMessageBox.information(QWidget, \u2018Title\u2019, \u2019Content\u2018, buttons) \u7b2c\u4e00\u4e2a\u53c2\u6570\u586bself\uff0c\u8868\u793a\u8be5\u4fe1\u606f\u6846\u5c5e\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684Demo\u7a97\u53e3\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u586b\u5165\u7684\u662f\u8be5\u4fe1\u606f\u6846\u7684\u6807\u9898\uff1b\u7b2c\u4e09\u4e2a\u53c2\u6570\u7c7b\u578b\u4e5f\u662f\u5b57\u7b26\u4e32\uff0c\u586b\u5165\u7684\u662f\u4fe1\u606f\u6846\u7684\u63d0\u793a\u5185\u5bb9\uff1b\u6700\u540e\u4e2a\u53c2\u6570\u4e3a\u4fe1\u606f\u6846\u4e0a\u8981\u6dfb\u52a0\u7684\u6309\u94ae\uff0c\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u6211\u4eec\u6dfb\u52a0\u4e86Yes\u3001No\u548cCancel\u4e09\u4e2a\u6309\u94ae\uff0c\u591a\u4e2a\u6309\u94ae\u4e4b\u95f4\u7528 | \u6765\u8fde\u63a5\uff0c\u5e38\u89c1\u7684\u6309\u94ae\u79cd\u7c7b\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a QMessageBox . Ok QMessageBox . Yes QMessageBox . No QMessageBox . Close QMessageBox . Cancel QMessage . Open QMessage . Save \u6700\u540e\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fb\u540e\u663e\u793a\u63d0\u793a\u6846\uff1a \u6ce8\uff1a\u6211\u662f\u5728Mac\u7535\u8111\u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4fe1\u606f\u6846\u7684\u6807\u9898\u5e76\u6ca1\u6709\u663e\u793a\u51fa\u6765\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u663e\u793a\u6307\u5b9a\u4fe1\u606f\u6846\u7684\u6309\u94ae\uff0c\u90a3\u4fe1\u606f\u6846\u4f1a\u81ea\u5df1\u9ed8\u8ba4\u52a0\u4e0a\u5408\u9002\u7684\u6309\u94ae\u4e0a\u53bb\uff1a QMessageBox.information(self, 'Title', 'Content') \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u9664\u4e86\u4fe1\u606f\u6846(information)\uff0c\u8fd8\u6709\u4ee5\u4e0b\u51e0\u79cd\uff0c\u7528\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684(\u8bf7\u6ce8\u610f\u6d88\u606f\u6846\u4e0a\u7684\u56fe\u6807\u53d8\u5316)\uff1a QMessageBox.question \u95ee\u7b54\u6846 QMessageBox.warning \u8b66\u544a\u6846 QMessageBox.critical \u9519\u8bef\u6846 QMessageBox.about \u5173\u4e8e\u6846","title":"4.1 \u5404\u79cd\u7c7b\u578b\u7684\u6d88\u606f\u6846"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#42","text":"\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4e0d\u7ba1\u7528\u6237\u6309\u4e86\u54ea\u4e2a\u6309\u94ae\uff0c\u7a0b\u5e8f\u90fd\u7528\u5173\u95ed\u6d88\u606f\u6846\u6765\u4f5c\u51fa\u53cd\u5e94\u3002\u7136\u800c\u7528\u6237\u4f1a\u5e0c\u671b\u70b9\u51fb\u4e0d\u540c\u6309\u94ae\uff0c\u7a0b\u5e8f\u4f5c\u51fa\u7684\u53cd\u5e94\u4e0d\u540c\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QPushButton , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . button = QPushButton ( 'Click Me!' , self ) self . button . clicked . connect ( self . show_messagebox ) def show_messagebox ( self ): choice = QMessageBox . question ( self , 'Change Text?' , 'Would you like to change the button text?' , QMessageBox . Yes | QMessageBox . No ) # 1 if choice == QMessageBox . Yes : # 2 self . button . setText ( 'Changed!' ) elif choice == QMessageBox . No : # 4 pass if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) * 1. \u5f53\u70b9\u51fb\u6d88\u606f\u6846\u4e0a\u7684\u67d0\u4e2a\u6309\u94ae\u4e4b\u540e\uff0c\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u6309\u94ae\uff0c\u800c\u8fd9\u91cc\u5c06\u8fd4\u56de\u7684\u6309\u94ae\u7ed3\u679c\u4fdd\u5b58\u5728choice\u4e2d\uff1b\u6709\u8fd4\u56de\u503c \u82e5\u662f\u6309\u4e0b\u4e86Yes\uff0c\u5219\u6539\u53d8\u6309\u94ae\u7684\u6587\u5b57\uff1b \u82e5\u662f\u6309\u4e0b\u4e86No\uff0c\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 \u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fbYes\u4e4b\u540e\uff0c\u6309\u94ae\u6587\u672c\u6539\u53d8\uff1a","title":"4.2 \u4e0e\u6d88\u606f\u6846\u4ea4\u4e92"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#43","text":"\u6d88\u606f\u6846\u7684\u79cd\u7c7b\u6709\uff1a information \u4fe1\u606f\u6846\uff1bquestion \u95ee\u7b54\u6846\uff1b warning \u8b66\u544a\u6846\uff1b critical \u9519\u8bef\u6846\uff1b about \u5173\u4e8e\u6846( \u5176\u5b9e\u8fd8\u6709\u4e00\u4e2aaboutQt\u6846\uff0c\u662f\u4e13\u95e8\u7528\u6765\u5c55\u793aQt\u8f6f\u4ef6\u4fe1\u606f\u7684\uff0c\u8fd9\u91cc\u4e0d\u518d\u8bb2\u8ff0)\u3002 \u8bed\u6cd5\u5f62\u5f0f(buttons\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a)\uff1a QMessageBox.information(QWidget, \u2018Title\u2019, \u2019Content\u2018, buttons) \u5728\u4e0e\u6d88\u606f\u6846\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58\u6d88\u606f\u6846\u8fd4\u56de\u7684\u6309\u94ae\u4fe1\u606f\uff0c\u63a5\u4e0b\u6765\u518d\u7528\u5224\u65ad\u8bed\u53e5\u6765\u4f5c\u51fa\u4e0d\u540c\u7684\u53cd\u5e94\u3002","title":"4.3 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#_3","text":"\u5728\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ed3\u5408\u524d\u9762\u6240\u5b66\u7684\u77e5\u8bc6\u6765\u5b8c\u5584\u767b\u5f55\u6846\u5c0f\u7a0b\u5e8f\u3002 \u4e3a\u4fdd\u8bc1\u4ee3\u7801\u6572\u51fb\u7545\u901a\uff0c\u53ef\u4ee5\u5148\u5f15\u5165\u8be5\u7a0b\u5e8f\u7528\u5230\u7684\u6a21\u5757\u548c\u63a7\u4ef6\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox","title":"\u7b2c\u4e94\u7ae0 \u5b8c\u5584\u767b\u5f55\u6846\u5c0f\u7a0b\u5e8f"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#51","text":"\u9996\u5148\u5b8c\u6210\u767b\u5f55\u754c\u9762\u5e03\u5c40\uff0c\u8bf7\u770b\u4e0b\u65b9\u4ee3\u7801\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) #\u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f\u4e3a300*100 self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . layout_init () def layout_init ( self ): self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) self . v_layout . addLayout ( self . h_layout ) self . setLayout ( self . v_layout ) if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u7a0b\u5e8f\u9996\u5148\u5c06\u7a97\u53e3\u7684\u5bbd\u8bbe\u4e3a300\uff0c\u957f\u8bbe\u4e3a100\u3002\u63a5\u7740\u518d\u5b9e\u4f8b\u5316\u4e86\u51e0\u4e2a\u63a7\u4ef6\uff1a\u4e24\u4e2a\u6587\u672c\u6807\u7b7e\u3001\u4e24\u4e2a\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u548c\u4e24\u4e2a\u6309\u94ae\u3002\u7136\u540e\u642d\u914d\u4f7f\u7528\u7f51\u683c\u5e03\u5c40\u7ba1\u7406\u5668\u3001\u6c34\u5e73\u5e03\u5c40\u7ba1\u7406\u5668\u548c\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\u6765\u5b8c\u6210\u6574\u4e2a\u754c\u9762\u7684\u5e03\u5c40\u3002\u76f8\u4fe1\u770b\u8fc7\u524d\u9762\u7ae0\u8282\u7684\u5c0f\u4f19\u4f34\u5df2\u7ecf\u53ef\u4ee5\u7406\u89e3\u4e0a\u65b9\u4ee3\u7801\u7684\u610f\u601d\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8be6\u7ec6\u89e3\u91ca\u3002 \u8fd9\u91cc\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u6211\u628a\u5e03\u5c40\u7ba1\u7406\u4e13\u95e8\u653e\u5728\u4e86\u4e00\u4e2a\u51fd\u6570\u4e2dlayout_init()\uff0c\u7136\u540e\u53ea\u7528\u5728\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u52a0\u4e0alayout_init()\u4e2d\u5c31\u884c\u3002\u628a\u5bf9\u4e0d\u540c\u63a7\u4ef6\u7684\u64cd\u4f5c\u5206\u5f00\u6765\u653e\u5728\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5199\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff0c\u4e5f\u65b9\u4fbf\u65e5\u540e\u7ef4\u62a4\u3002 \u6b64\u65f6\u7a0b\u5e8f\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a","title":"5.1 \u767b\u5f55\u754c\u9762\u5e03\u5c40"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#52","text":"\u8be5\u6b65\u9aa4\u8981\u5b8c\u6210\u7684\u7ed3\u679c\u622a\u56fe\u5982\u4e0b\uff1a \u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u4e2d\u6709\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u5b57\uff0cLog in\u6309\u94ae\u521a\u5f00\u59cb\u65e0\u6cd5\u70b9\u51fb\uff0c\u53ea\u80fd\u7b49\u4e24\u4e2a\u8f93\u5165\u6846\u4e2d\u90fd\u6709\u6587\u672c\u8f93\u5165\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u8fdb\u884c\u70b9\u51fb\u3002 \u9996\u5148\u5bf9\u8f93\u5165\u6846\u529f\u80fd\u8fdb\u884c\u5b8c\u5584\u3002 def lineedit_init ( self ): self . user_line . setPlaceholderText ( 'Please enter your username' ) self . pwd_line . setPlaceholderText ( 'Please enter your password' ) self . user_line . textChanged . connect ( self . check_input_func ) self . pwd_line . textChanged . connect ( self . check_input_func ) \u5728\u672a\u8f93\u5165\u524d\uff0c\u6211\u4eec\u6709\u4f1a\u770b\u5230\u8f93\u5165\u6846\u4e0a\u5c31\u5df2\u7ecf\u6709\u4e86\u4e00\u884c\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u5b57\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u79cd\uff1a \u4f46\u70b9\u51fb\u7684\u8bdd\u6d45\u7070\u8272\u7684\u6587\u5b57\u5c31\u4f1a\u4e0d\u89c1\uff1a \u8fd9\u79cd\u529f\u80fd\u5c31\u662f\u901a\u8fc7 setPlaceholderText() \u65b9\u6cd5\u6765\u5b9e\u73b0\u7684\u3002\u5728\u8fd9\u91cc\u8fd8\u8fdb\u884c\u4e86\u4fe1\u53f7\u548c\u69fd\u7684\u8fde\u63a5\uff0c\u5c06 QLineEdit \u7684 textChanged() \u4fe1\u53f7\u8fde\u63a5\u5230\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u69fd self.check_input_func \u4e0a\u3002 textChanged() \u4fe1\u53f7\u4f1a\u5728\u8f93\u5165\u6846\u4e2d\u6587\u672c\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\u53d1\u51fa, \u6240\u4ee5\u69fd\u51fd\u6570\u7684\u4efb\u52a1\u5c31\u662f\u5224\u65ad\u4e24\u4e2a\u8f93\u5165\u6846\u662f\u5426\u90fd\u6709\u6587\u5b57\u4e86\uff1a def check_input_func ( self ): if self . user_line . text () and self . pwd_line . text (): self . login_button . setEnabled ( True ) else : self . login_button . setEnabled ( False ) \u5982\u679c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c(\u901a\u8fc7text()\u65b9\u6cd5\u83b7\u53d6\u8f93\u5165\u6846\u6587\u672c)\uff0c\u90a3\u5c31\u4f7f\u767b\u5f55\u6309\u94ae\u53ef\u7528(setEnabled(True))\uff0c\u5426\u5219\u767b\u5f55\u6309\u94ae\u4e0d\u53ef\u7528\u3002 \u63a5\u4e0b\u6765\u5bf9\u6309\u94ae\u8fdb\u884c\u5b8c\u5584\uff1a def pushbutton_init ( self ): self . login_button . setEnabled ( False ) \u4f7f\u521a\u5f00\u59cb\u663e\u793a\u7684\u767b\u5f55\u6309\u94ae\u4e0d\u53ef\u7528\uff0c\u53ea\u6709\u7b49\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c\u7684\u65f6\u5019\u624d\u80fd\u7528(\u4e0a\u9762\u7684\u69fd\u51fd\u6570)\u3002 \u5f53\u6211\u4eec\u70b9\u51fb\u767b\u5f55\u6309\u94ae\u7684\u65f6\u5019\uff0c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u90fd\u6709\u6587\u672c\u4e86\uff0c\u90a3\u70b9\u51fb\u540e\u80af\u5b9a\u662f\u8981\u9a8c\u8bc1\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e\uff1a def pushbutton_init ( self ): self . login_button . setEnabled ( False ) #\u6309\u4e0b\u6309\u94ae\u540e,\u4e0d\u80fd\u518d\u6b21\u6309\u4e0b self . login_button . clicked . connect ( self . check_login_func ) #\u540c\u65f6\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e \u6240\u4ee5\u6211\u4eec\u5c06\u767b\u5f55\u6309\u94ae\u7684clicked\u4fe1\u53f7\u548c\u4e00\u4e2a\u7528\u4e8e\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u662f\u5426\u6b63\u786e\u7684\u81ea\u5b9a\u4e49\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff1a \u9996\u5148\u6211\u4eec\u5728\u7a0b\u5e8f\u7684\u6700\u5f00\u59cb\u5904\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf USER_PWD \uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox USER_PWD = { 'la_vie' : 'password' } #\u5b9a\u4e49\u8d26\u53f7\u5bc6\u7801\u7684\u5168\u5c40\u53d8\u91cf \u8be5\u5b57\u5178\u7684\u952e'la_vie'\u5c31\u662f\u5f53\u4f5c\u8d26\u53f7\uff0c\u503c\u2018password\u2019\u5c31\u5f53\u4f5c\u5bc6\u7801(\u4e4b\u540e\u590d\u6742\u7684\u7a0b\u5e8f\u4f1a\u4f7f\u7528\u6570\u636e\u5e93\uff0c\u8fd9\u91cc\u5c31\u5148\u7b80\u5355\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u4f7f\u7528)\u3002 \u7136\u540e\u5b9a\u4e49\u68c0\u67e5\u8d26\u53f7\u5bc6\u7801\u7684\u69fd\u51fd\u6570\uff1a def check_login_func ( self ): if USER_PWD . get ( self . user_line . text ()) == self . pwd_line . text (): QMessageBox . information ( self , 'Information' , 'Log in Successfully!' ) else : QMessageBox . critical ( self , 'Wrong' , 'Wrong Username or Password!' ) self . user_line . clear () self . pwd_line . clear () \u5c06\u8d26\u53f7\u6846\u7684\u6587\u672c\u5f53\u4f5cget()\u7684\u53c2\u6570\u6765\u83b7\u53d6\u503c\uff0c\u7136\u540e\u8ddf\u5bc6\u7801\u6846\u7684\u6587\u672c\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u76f8\u540c\u5219\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u767b\u5f55\u6210\u529f\uff0c\u5426\u5219\u663e\u793a\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\u3002\u6700\u540e\u65e0\u8bba\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff0c\u90fd\u4f1a\u7528clear()\u65b9\u6cd5\u6765\u6e05\u7a7a\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u3002 \u6700\u540e\u5c06 self.lineedit_init() \u548c self.pushbutton_init() \u653e\u5728\u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570__init__()\u4e2d\uff1a class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () # \u5355\u884c\u6587\u672c\u8f93\u5165\u6846 self . pushbutton_init () # \u6309\u94ae,\u76f4\u63a5\u5c06\u5b9a\u4e49\u7684\u6309\u94ae\u653e\u5728\u7c7b\u4e2d\u8fdb\u884c\u521d\u59cb\u5316 self . layout_init () \u6b64\u65f6\u7a0b\u5e8f\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u8f93\u5165la_vie\u548cpassword\uff0c\u70b9\u51fbLog in\u6309\u94ae\uff0c\u5219\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u767b\u5f55\u6210\u529f\u3002 \u8f93\u5165\u4e00\u4e2a\u9519\u8bef\u7684\u8d26\u53f7\u6216\u9519\u8bef\u7684\u5bc6\u7801\uff0c\u5c31\u4f1a\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef\uff1a \u70b9\u51fbOK\u540e\uff0c\u8d26\u53f7\u6846\u548c\u5bc6\u7801\u6846\u6587\u672c\u90fd\u88ab\u6e05\u7a7a\uff0c\u6062\u590d\u539f\u72b6\uff1a","title":"5.2 \u5b8c\u5584\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u548c\u6309\u94ae\u529f\u80fd"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#53","text":"\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u5b8c\u5584Sign in\u6309\u94ae\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u91cc\u6211\u4eec\u60f3\u7684\u662f\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u540e\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684\u754c\u9762\u7528\u4e8e\u6ce8\u518c\uff0c\u5373\u4e0b\u65b9\u622a\u56fe\u6240\u793a\uff1a \u53ef\u4ee5\u770b\u51fa\u8be5\u754c\u9762\u4e00\u5171\u662f\u7531\u4e09\u4e2aQLabel\u3001\u4e09\u4e2aQLineEdit\u548c\u4e00\u4e2aQPushButton\u7ec4\u6210\u7684\uff0c\u90a3\u9996\u5148\u5c31\u6765\u5b8c\u6210\u754c\u9762\u5e03\u5c40\uff1a class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . layout_init () def layout_init ( self ): self . user_h_layout . addWidget ( self . signin_user_label ) self . user_h_layout . addWidget ( self . signin_user_line ) self . pwd_h_layout . addWidget ( self . signin_pwd_label ) self . pwd_h_layout . addWidget ( self . signin_pwd_line ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_label ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_line ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . pwd2_h_layout ) self . all_v_layout . addWidget ( self . signin_button ) self . setLayout ( self . all_v_layout ) \u8fd9\u91cc\u6211\u4eec\u65b0\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u7ee7\u627f\u4e8eQDialog(\u53e6\u4e00\u4e2a\u6bdb\u576f\u623f)\u3002QDialog\u5c31\u662f\u6307\u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u5e73\u65f6\u5728\u8f6f\u4ef6\u4e2d\u70b9\u51fb\u201c\u6253\u5f00\u201d\u6216\u201c\u53e6\u5b58\u4e3a\u201d\u800c\u51fa\u73b0\u7684\u6587\u4ef6\u5bf9\u8bdd\u6846\u5c31\u662f\u5176\u4e2d\u4e00\u79cd\u3002\u5f53\u7136\u4f60\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u540c\u6837\u7ee7\u627f\u4e8eQWidget\uff0c\u4f46\u662fQDialog\u4e2d\u6709\u4e00\u4e2a\u65b9\u6cd5\u662fQWidget\u6240\u4e0d\u5177\u6709\u7684\uff0c\u7a0d\u540e\u6765\u8bb2\u8ff0\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u518d\u8be6\u7ec6\u89e3\u91ca\uff0c\u76f8\u4fe1\u5927\u5bb6\u53ef\u4ee5\u770b\u61c2\u4e86\u3002 \u9996\u5148\u540c\u6837\u5c06 Sign in \u6309\u94ae\u8bbe\u4e3a\u4e0d\u53ef\u7528( setEnabled(False) )\uff0c\u5e76\u4e14\u53ea\u6709\u5f53\u4e09\u4e2a\u8f93\u5165\u6846\u4e2d\u90fd\u6709\u6587\u672c\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u542f\u7528\u8fd9\u4e2a\u6309\u94ae\u3002\u539f\u7406\u8ddf\u4e4b\u524d\u8bb2\u7684\u4e00\u6837\uff1a def lineedit_init ( self ): self . signin_user_line . textChanged . connect ( self . check_input_func ) self . signin_pwd_line . textChanged . connect ( self . check_input_func ) self . signin_pwd2_line . textChanged . connect ( self . check_input_func ) \u5728lineedit_init()\u4e2d\u6211\u4eec\u5c06\u4e09\u4e2a\u8f93\u5165\u6846\u7684textChanged()\u4fe1\u53f7\u8ddf\u81ea\u5b9a\u4e49\u7684 check_input_func() \u69fd\u51fd\u6570\u8fdb\u884c\u8fde\u63a5\uff1b def check_input_func ( self ): if self . signin_user_line . text () and self . signin_pwd_line . text () and self . signin_pwd2_line . text (): self . signin_button . setEnabled ( True ) else : self . signin_button . setEnabled ( False ) \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u5224\u65ad\u4e09\u4e2a\u8f93\u5165\u6846\u662f\u5426\u90fd\u6709\u6587\u672c\uff0c\u6709\u7684\u8bdd\u5219\u5c06\u6309\u94ae\u542f\u7528\uff0c\u5426\u5219\u7981\u7528\uff1b \u200b def pushbutton_init ( self ): #\u521d\u59cb\u5316 self . signin_button . setEnabled ( False ) self . signin_button . clicked . connect ( self . check_signin_func ) \u7136\u540e\u5728pushbutton_init()\u4e2d\u5148\u5c06sign in\u6309\u94ae\u8bbe\u4e3a\u7981\u7528\u72b6\u6001\uff0c\u7136\u540e\u5c06clicked()\u4fe1\u53f7\u548c\u4e4b\u540e\u81ea\u5b9a\u4e49\u7684check_signin_func()\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\u3002\u56e0\u4e3a\u5728\u70b9\u51fb\u6ce8\u518c\u6309\u94ae\u7684\u65f6\u5019\u6211\u4eec\u8981\u5bf9\u8f93\u5165\u7684\u6587\u672c\u5185\u5bb9\u8fdb\u884c\u68c0\u67e5\uff0c\u770b\u7b26\u4e0d\u7b26\u5408\u8981\u6c42\uff1b def check_signin_func ( self ): if self . signin_pwd_line . text () != self . signin_pwd2_line . text (): QMessageBox . critical ( self , 'Wrong' , 'Two Passwords Typed Are Not Same!' ) elif self . signin_user_line . text () not in USER_PWD : USER_PWD [ self . signin_user_line . text ()] = self . signin_pwd_line . text () QMessageBox . information ( self , 'Information' , 'Register Successfully' ) self . close () else : QMessageBox . critical ( self , 'Wrong' , 'This Username Has Been Registered!' ) self . signin_user_line . clear () self . signin_pwd_line . clear () self . signin_pwd2_line . clear () \u9996\u5148\u5224\u65ad\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u6846\u8f93\u5165\u7684\u6587\u672c\u662f\u5426\u4e00\u81f4\uff0c\u82e5\u4e0d\u76f8\u540c\u7684\u8bdd\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\uff1b\u5f53\u7136\u6211\u4eec\u8fd8\u8981\u5bf9\u8981\u6ce8\u518c\u7684\u8d26\u53f7\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u5728\u5b57\u5178\u76f8\u5bf9\u5e94\u7684\u952e\uff0c\u5219\u8bf4\u660e\u8be5\u8d26\u53f7\u5e76\u6ca1\u6709\u88ab\u6ce8\u518c\u8fc7\uff0c\u63a5\u7740\u5c06\u8981\u6ce8\u518c\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u653e\u8fdb\u5b57\u5178\u4e2d\uff0c\u5e76\u663e\u793a\u4fe1\u606f\u6846\u63d0\u793a\u6ce8\u518c\u6210\u529f\u3002self.close()\u662f\u6307\u5173\u95ed\u5bf9\u8bdd\u6846\u81ea\u8eab\uff0c\u4e5f\u5c31\u662f\u5728\u4fe1\u606f\u6846\u6309\u94ae\u88ab\u6309\u4e0b\u53bb\u5173\u95ed\u4e4b\u540e\uff0c\u6ce8\u518c\u754c\u9762\u7684\u5bf9\u8bdd\u6846\u4e5f\u8981\u4e00\u8d77\u5173\u95ed\u3002\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u8d26\u53f7\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\u4e86\uff0c\u4e8e\u662f\u663e\u793a\u9519\u8bef\u6846\u6765\u8fdb\u884c\u63d0\u793a\u3002 \u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u6700\u540e\u90fd\u4f1a\u5c06\u4e09\u4e2a\u8f93\u5165\u6846\u7684\u6587\u672c\u6e05\u7a7a\u6389\u3002 \u90a3\u4e48\u6700\u540e\u5c06self.lineedit_init()\u548cself.pushbutton_init()\u653e\u5728\u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570__init__()\u4e2d\uff1a class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . lineedit_init () # \u5355\u884c\u6587\u672c\u8f93\u5165\u6846 self . pushbutton_init () # \u6309\u94ae self . layout_init ()","title":"5.3 \u5b8c\u5584\u6ce8\u518c\u754c\u9762\u5e03\u5c40\u53ca\u529f\u80fd"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#54","text":"\u4f46\u662f\u6b64\u65f6\u8fd0\u884c\u7a0b\u5e8f\u70b9\u51fb\u767b\u5f55\u754c\u9762\u4e0a\u7684sign in\u6309\u94ae\u7684\u8bdd\uff0c\u6ce8\u518c\u754c\u9762\u662f\u663e\u793a\u4e0d\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u767b\u5f55\u754c\u9762sign in\u6309\u94ae\u7684clicked()\u4fe1\u53f7\u548c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7528\u6765\u663e\u793a\u6ce8\u518c\u754c\u9762\u7684\u69fd\u51fd\u6570\u8fde\u63a5\u8d77\u6765\uff1a class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () self . signin_page = SigninPage () # \u5b9e\u4f8b\u5316SigninPage() \u9996\u5148\u6211\u4eec\u5728Demo\u7684\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u5148\u5b9e\u4f8b\u5316\u4e86SigninPage\uff1b def pushbutton_init ( self ): self . login_button . setEnabled ( False ) self . login_button . clicked . connect ( self . check_login_func ) self . signin_button . clicked . connect ( self . show_signin_page_func ) \u63a5\u7740\u5728\u5904\u7406\u6309\u94ae\u7684\u51fd\u6570\u4e2d\u5c06sign in\u6309\u94ae\u7684clicked\u4fe1\u53f7\u548cshow_signin_page_func()\u69fd\u51fd\u6570\u8fdb\u884c\u8fde\u63a5\uff1b def show_signin_page_func ( self ): self . signin_page . exec_ () \u5728\u69fd\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u7528exec_\u65b9\u6cd5\u6765\u6267\u884c\u6ce8\u518c\u754c\u9762\u3002\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528exec_\u800c\u4e0d\u662fshow()\uff1f\u4e0b\u9762\u6765\u8be6\u7ec6\u89e3\u91ca\u4e0b\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\uff1a \u82e5\u4f7f\u7528exec_()\u7684\u8bdd\uff0c\u90a3\u4e48\u663e\u793a\u51fa\u6765\u7684\u6ce8\u518c\u754c\u9762\u5c31\u662f\u6a21\u6001\u7684\uff0c\u610f\u601d\u5c31\u662f\u5f53\u524d\u667a\u80fd\u5bf9\u8be5\u6ce8\u518c\u754c\u9762\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ea\u6709\u5173\u95ed\u4e86\u8be5\u754c\u9762\u624d\u80fd\u5bf9\u5176\u4ed6\u754c\u9762\u8fdb\u884c\u64cd\u4f5c\uff1b\u82e5\u4f7f\u7528show()\u7684\u8bdd\uff0c\u90a3\u6ce8\u518c\u754c\u9762\u5c31\u662f\u975e\u6a21\u6001\u7684\uff0c\u5219\u5728\u663e\u793a\u4e86\u6ce8\u518c\u754c\u9762\u540e\uff0c\u8fd8\u80fd\u540c\u65f6\u5bf9\u767b\u5f55\u754c\u9762\u8fdb\u884c\u64cd\u4f5c(QDialog\u6709ecec_()\u65b9\u6cd5\uff0c\u800cQWidget\u6ca1\u6709)\u3002 \u6b64\u65f6\u8fd0\u884c\u622a\u56fe\u5982\u4e0b\uff1a \u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684Sign in\uff0c\u663e\u793a\u6ce8\u518c\u754c\u9762\uff0c\u7136\u540e\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\uff0c\u82e5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u663e\u793a\u6ce8\u518c\u6210\u529f\uff1b \u82e5\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u4e0d\u4e00\u81f4\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\uff1b \u82e5\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\u4e86\uff0c\u5219\u663e\u793a\u9519\u8bef\u6846\u63d0\u793a\u3002 \u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u6240\u4ee5\u5bc6\u7801\u6846\u8f93\u5165\u7684\u65f6\u5019\u90fd\u6ca1\u6709\u7528\u539f\u70b9\u66ff\u4ee3\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u8f93\u5165\u6846\u4f7f\u7528setEchoMode(QLineEdit.Password)\u65b9\u6cd5\u6765\u5b8c\u6210\u6b64\u529f\u80fd\uff1a \u6700\u7ec8\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\uff1a import sys from PyQt5.QtWidgets import QApplication , QWidget , QDialog , QLabel , QLineEdit , QPushButton , \\ QGridLayout , QVBoxLayout , QHBoxLayout , QMessageBox USER_PWD = { 'la_vie' : 'password' } class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . resize ( 300 , 100 ) self . user_label = QLabel ( 'Username:' , self ) self . pwd_label = QLabel ( 'Password:' , self ) self . user_line = QLineEdit ( self ) self . pwd_line = QLineEdit ( self ) self . login_button = QPushButton ( 'Log in' , self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . grid_layout = QGridLayout () self . h_layout = QHBoxLayout () self . v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () self . signin_page = SigninPage () # \u5b9e\u4f8b\u5316SigninPage() def layout_init ( self ): self . grid_layout . addWidget ( self . user_label , 0 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . user_line , 0 , 1 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_label , 1 , 0 , 1 , 1 ) self . grid_layout . addWidget ( self . pwd_line , 1 , 1 , 1 , 1 ) self . h_layout . addWidget ( self . login_button ) self . h_layout . addWidget ( self . signin_button ) self . v_layout . addLayout ( self . grid_layout ) self . v_layout . addLayout ( self . h_layout ) self . setLayout ( self . v_layout ) def lineedit_init ( self ): self . user_line . setPlaceholderText ( 'Please enter your username' ) self . pwd_line . setPlaceholderText ( 'Please enter your password' ) self . pwd_line . setEchoMode ( QLineEdit . Password ) self . user_line . textChanged . connect ( self . check_input_func ) self . pwd_line . textChanged . connect ( self . check_input_func ) def pushbutton_init ( self ): self . login_button . setEnabled ( False ) self . login_button . clicked . connect ( self . check_login_func ) self . signin_button . clicked . connect ( self . show_signin_page_func ) def check_login_func ( self ): if USER_PWD . get ( self . user_line . text ()) == self . pwd_line . text (): QMessageBox . information ( self , 'Information' , 'Log in Successfully!' ) else : QMessageBox . critical ( self , 'Wrong' , 'Wrong Username or Password!' ) self . user_line . clear () self . pwd_line . clear () def show_signin_page_func ( self ): self . signin_page . exec_ () def check_input_func ( self ): if self . user_line . text () and self . pwd_line . text (): self . login_button . setEnabled ( True ) else : self . login_button . setEnabled ( False ) class SigninPage ( QDialog ): def __init__ ( self ): super ( SigninPage , self ) . __init__ () self . signin_user_label = QLabel ( 'Username:' , self ) self . signin_pwd_label = QLabel ( 'Password:' , self ) self . signin_pwd2_label = QLabel ( 'Password:' , self ) self . signin_user_line = QLineEdit ( self ) self . signin_pwd_line = QLineEdit ( self ) self . signin_pwd2_line = QLineEdit ( self ) self . signin_button = QPushButton ( 'Sign in' , self ) self . user_h_layout = QHBoxLayout () self . pwd_h_layout = QHBoxLayout () self . pwd2_h_layout = QHBoxLayout () self . all_v_layout = QVBoxLayout () self . lineedit_init () self . pushbutton_init () self . layout_init () def layout_init ( self ): self . user_h_layout . addWidget ( self . signin_user_label ) self . user_h_layout . addWidget ( self . signin_user_line ) self . pwd_h_layout . addWidget ( self . signin_pwd_label ) self . pwd_h_layout . addWidget ( self . signin_pwd_line ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_label ) self . pwd2_h_layout . addWidget ( self . signin_pwd2_line ) self . all_v_layout . addLayout ( self . user_h_layout ) self . all_v_layout . addLayout ( self . pwd_h_layout ) self . all_v_layout . addLayout ( self . pwd2_h_layout ) self . all_v_layout . addWidget ( self . signin_button ) self . setLayout ( self . all_v_layout ) def lineedit_init ( self ): self . signin_pwd_line . setEchoMode ( QLineEdit . Password ) self . signin_pwd2_line . setEchoMode ( QLineEdit . Password ) self . signin_user_line . textChanged . connect ( self . check_input_func ) self . signin_pwd_line . textChanged . connect ( self . check_input_func ) self . signin_pwd2_line . textChanged . connect ( self . check_input_func ) def pushbutton_init ( self ): self . signin_button . setEnabled ( False ) self . signin_button . clicked . connect ( self . check_signin_func ) def check_input_func ( self ): if self . signin_user_line . text () and self . signin_pwd_line . text () and self . signin_pwd2_line . text (): self . signin_button . setEnabled ( True ) else : self . signin_button . setEnabled ( False ) def check_signin_func ( self ): if self . signin_pwd_line . text () != self . signin_pwd2_line . text (): QMessageBox . critical ( self , 'Wrong' , 'Two Passwords Typed Are Not Same!' ) elif self . signin_user_line . text () not in USER_PWD : USER_PWD [ self . signin_user_line . text ()] = self . signin_pwd_line . text () QMessageBox . information ( self , 'Information' , 'Register Successfully' ) self . close () else : QMessageBox . critical ( self , 'Wrong' , 'This Username Has Been Registered!' ) self . signin_user_line . clear () self . signin_pwd_line . clear () self . signin_pwd2_line . clear () if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ())","title":"5.4 \u6574\u5408\u767b\u5f55\u754c\u9762\u548c\u6ce8\u518c\u754c\u9762"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#55","text":"setPlaceholderText()\u65b9\u6cd5\u7528\u4e8e\u5728\u8f93\u5165\u6846\u663e\u793a\u6d45\u7070\u8272\u7684\u63d0\u793a\u6587\u672c\uff1b ecec_()\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u7a97\u53e3\u6210\u4e3a\u6a21\u6001\u7a97\u53e3\uff0c\u800c\u8c03\u7528show()\u65b9\u6cd5\uff0c\u7a97\u53e3\u662f\u975e\u6a21\u6001\u7684\u3002\u6a21\u6001\u7a97\u53e3\u5c06\u7a0b\u5e8f\u63a7\u5236\u6743\u5360\u636e\uff0c\u53ea\u6709\u5bf9\u5f53\u524d\u7a97\u53e3\u5173\u95ed\u540e\u624d\u80fd\u64cd\u4f5c\u5176\u4ed6\u7a97\u53e3\uff1b QDialog\u6709exec_()\u65b9\u6cd5\uff0c\u800cQWidget\u6ca1\u6709\uff1b \u53ef\u4ee5\u7528setEchoMode(QLineEdit.Password)\u5c06\u666e\u901a\u8f93\u5165\u6846\u4e2d\u7684\u6587\u5b57\u53d8\u6210\u539f\u70b9\u3002","title":"5.5 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#qtexteditqtextbrowser","text":"","title":"\u7b2c\u516d\u7ae0 \u6587\u672c\u7f16\u8f91\u6846QTextEdit\u548c\u6587\u672c\u6d4f\u89c8\u6846QTextBrowser"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#61","text":"\u76f8\u4fe1\u901a\u8fc7\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u4e2d\u6587\u540d\u5927\u5bb6\u5e94\u8be5\u4e5f\u77e5\u9053\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u529f\u80fd\u662f\u4ec0\u4e48\u4e86\uff0c\u524d\u8005\u7528\u6765\u7f16\u8f91\u6587\u672c\uff0c\u540e\u8005\u65e0\u6cd5\u7f16\u8f91\uff0c\u53ea\u7528\u4e8e\u663e\u793a\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u5b8c\u6210\u4ee5\u4e0b\u7a0b\u5e8f\u6765\u8bb2\u89e3\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u7528\u6cd5\uff1a \u5de6\u8fb9\u4e3aQTextEdit\u63a7\u4ef6\uff0c\u53f3\u8fb9\u4e3aQTextBrowser\u63a7\u4ef6\u3002\u5728\u5de6\u8fb9\u8f93\u5165\u6587\u5b57\u65f6\uff0c\u53f3\u8fb9\u4f1a\u540c\u6b65\u663e\u793a\u3002\u8bf7\u770b\u4e0b\u65b9\u4ee3\u7801\uff1a # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" import sys from PyQt5.QtWidgets import QApplication , QWidget , QLabel , QTextEdit , QTextBrowser , QHBoxLayout , QVBoxLayout class Demo ( QWidget ): def __init__ ( self ): super ( Demo , self ) . __init__ () self . edit_label = QLabel ( 'QTextEdit' , self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7f16\u8f91label self . browser_label = QLabel ( 'QTextBrowser' , self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u73b0\u5b9elabel self . text_edit = QTextEdit ( self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7f16\u8f91\u6587\u672c\u6846 self . text_browser = QTextBrowser ( self ) #\u5b9e\u4f8b\u5316\u4e00\u4e2a\u663e\u793a\u6587\u672c\u6846 self . edit_v_layout = QVBoxLayout () self . browser_v_layout = QVBoxLayout () self . all_h_layout = QHBoxLayout () self . layout_init () #\u5e03\u5c40\u521d\u59cb\u5316 self . text_edit_init () def layout_init ( self ): #\u5e03\u5c40\u51fd\u6570 self . edit_v_layout . addWidget ( self . edit_label ) self . edit_v_layout . addWidget ( self . text_edit ) self . browser_v_layout . addWidget ( self . browser_label ) self . browser_v_layout . addWidget ( self . text_browser ) self . all_h_layout . addLayout ( self . edit_v_layout ) self . all_h_layout . addLayout ( self . browser_v_layout ) self . setLayout ( self . all_h_layout ) def text_edit_init ( self ): self . text_edit . textChanged . connect ( self . show_text_func ) # 1\u5982\u679ctext_edit\u4e2d\u7684\u6587\u672c\u53d1\u751f\u6539\u53d8\u7684\u8bdd\u8c03\u7528\u4e0b\u4e00\u4e2a\u51fd\u6570 def show_text_func ( self ): self . text_browser . setText ( self . text_edit . toPlainText ()) # 2\u5c06\u6587\u672c\u8bbe\u7f6e\u4e3a\u83b7\u53d6\u5230\u7684text_edit\u4e2d\u7684\u6587\u672c,\u6ce8\u610f\u989d\u662f\u4f7f\u7528\u7684toPlainText\u6765\u83b7\u53d6\u7684\u6587\u672c if __name__ == '__main__' : app = QApplication ( sys . argv ) demo = Demo () demo . show () sys . exit ( app . exec_ ()) \u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u5b9e\u4f8b\u5316\u4e24\u4e2aQLabel\u3001\u4e00\u4e2aQTextEdit\u4ee5\u53ca\u4e00\u4e2aQTextBrowser\u518d\u901a\u8fc7\u5782\u76f4\u5e03\u5c40\u548c\u6c34\u5e73\u5e03\u5c40\u5c31\u53ef\u4ee5\u5b8c\u6210\u6574\u4e2a\u754c\u9762\u3002\u5173\u952e\u70b9\u662f\u5728\u4fe1\u53f7\u548c\u69fd\u7684\u8fde\u63a5\u4e0a\u3002 \u5c06self.text_edit\u7684textChanged\u4fe1\u53f7\u8fde\u63a5\u5230\u81ea\u5b9a\u4e49\u7684\u69fd\u51fd\u6570\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53self.text_edit\u4e2d\u7684\u6587\u672c\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u51fatextChanged\u4fe1\u53f7\uff0c\u7136\u540e\u8c03\u7528show_text_func()\u69fd\u51fd\u6570\u3002 \u5728\u69fd\u51fd\u6570\u4e2d\u6211\u4eec\u901a\u8fc7setText()\u65b9\u6cd5\u5c06self.text_browser\u7684\u6587\u672c\u8bbe\u4e3aself.text_edit\u7684\u6587\u672c\uff0c\u800cself.text_edit\u7684\u6587\u672c\u901a\u8fc7toPlainText()\u83b7\u53d6\uff0c\u800c\u4e0d\u662ftext(). \u6709\u8da3\u7684\u662f\uff0c\u5f53\u6211\u4eec\u5728\u7f16\u8f91\u6846\u4e2d\u8f93\u5165Html\u4ee3\u7801\u65f6\uff0c\u53f3\u8fb9\u7684\u6d4f\u89c8\u6846\u4f1a\u5bf9\u5176\u6267\u884c\uff1a \u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u4f7f\u7528\uff0c\u4e0d\u8fc7\u5176\u5b9e\u4e5f\u5df2\u7ecf\u5f88\u591f\u7528\u4e86\u3002\u7b49\u4e4b\u540e\u7528\u5230\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u7684\u5176\u4ed6\u65b9\u6cd5\u65f6\uff0c\u4f1a\u518d\u8be6\u7ec6\u4ecb\u7ecd\u3002","title":"6.1 \u540c\u6b65\u663e\u793a\u6587\u672c"},{"location":"python\u5b66\u4e60/037 pyqt5\u5b66\u4e60/#62","text":"\u987e\u540d\u601d\u4e49\uff0c QTextEdit \u4e3a\u7528\u6765\u7f16\u8f91\u6587\u672c\uff0c\u800c QTextBrowser \u7528\u6765\u663e\u793a\u6587\u672c\uff1b setText() \u7528\u6765\u8bbe\u7f6e\u6587\u672c\uff0c toPlainText() \u7528\u6765\u83b7\u53d6\u6587\u672c\uff0c\u8fd9\u4e24\u4e2a\u63a7\u4ef6\u90fd\u6709\u8fd9\u4e9b\u65b9\u6cd5\uff1b \u6d4f\u89c8\u6846\u4f1a\u6267\u884cHtml\u4ee3\u7801\u3002","title":"6.2 \u5c0f\u7ed3"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/","text":"numpy\u7684\u5c5e\u6027 \u00b6 import numpy as np array = np . array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ]]) print ( array ) [[1 2 3] [4 5 6] [7 8 9]] print ( array . ndim ) #\u7ef4\u5ea6 2 print ( array . shape ) #\u5f62\u72b6 (3, 3) print ( array . size ) #\u5927\u5c0f 9 print ( array . dtype ) #\u5143\u7d20\u7c7b\u578b int32 \u521b\u5efaarray \u00b6 import numpy as np a = np . array ([ 1 , 2 , 3 ], dtype = np . int32 ) #\u521b\u5efaarray\u7684\u540c\u65f6\u7ed9\u5b9a\u7c7b\u578b print ( a . dtype ) int32 b = np . array ([ 1 , 2 , 3 ], dtype = np . float ) print ( b . dtype ) float64 c = np . array ([ 1 , 2 , 3 ]) #\u4e00\u7ef4\u6570\u636e print ( c ) [1 2 3] d = np . array ([[ 1 , 2 , 3 ], #2\u7ef4\u77e9\u9635 [ 4 , 5 , 6 ]]) print ( d ) [[1 2 3] [4 5 6]] zero = np . zeros (( 2 , 3 )) #\u751f\u62102\u884c3\u5217\u5168\u4e3a0\u7684\u77e9\u9635 zeros\u77e9\u9635 print ( zero ) [[ 0. 0. 0.] [ 0. 0. 0.]] one = np . ones (( 3 , 4 )) #\u751f\u62103\u884c4\u5217\u5168\u4e3a1\u7684\u77e9\u9635 ones\u77e9\u9635 print ( one ) [[ 1. 1. 1. 1.] [ 1. 1. 1. 1.] [ 1. 1. 1. 1.]] empty = np . empty (( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u5168\u90fd\u63a5\u8fd1\u4e8e0\uff08\u4e0d\u7b49\u4e8e0\uff09\u7684\u77e9\u9635 print ( empty ) [[ 0. 0.] [ 0. 0.] [ 0. 0.]] e = np . arange ( 10 ) #arange\u7684\u4f7f\u7528 print ( e ) [0 1 2 3 4 5 6 7 8 9] f = np . arange ( 4 , 12 ) print ( f ) [ 4 5 6 7 8 9 10 11] g = np . arange ( 1 , 20 , 3 ) print ( g ) [ 1 4 7 10 13 16 19] h = np . arange ( 8 ) . reshape ( 4 , 2 ) #\u91cd\u65b0\u5b9a\u4e49\u77e9\u9635\u7684\u5f62\u72b6 print ( h ) [[0 1] [2 3] [4 5] [6 7]] numpy\u7684\u8fd0\u7b97 \u00b6 import numpy as np arr1 = np . array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]]) arr2 = np . array ([[ 1 , 1 , 2 ], [ 2 , 3 , 3 ]]) print ( arr1 ) print ( arr2 ) [[1 2 3] [4 5 6]] [[1 1 2] [2 3 3]] print ( arr1 + arr2 ) #\u6570\u7ec4\u7684\u52a0\u6cd5,\u6309\u4f4d\u52a0 [[2 3 5] [6 8 9]] print ( arr1 - arr2 ) #\u6570\u7ec4\u51cf\u6cd5,\u6309\u4f4d\u51cf [[0 1 1] [2 2 3]] print ( arr1 * arr2 ) #\u6570\u7ec4\u4e58\u6cd5,\u6309\u4f4d\u4e58 [[ 1 2 6] [ 8 15 18]] print ( arr1 ** arr2 ) #\u6570\u7ec4\u53cc\u4e58\u53f7\u6c42\u5e42 [[ 1 2 9] [ 16 125 216]] print ( arr1 / arr2 ) #\u6570\u7ec4\u9664\u6cd5,\u6309\u4f4d\u9664 [[ 1. 2. 1.5 ] [ 2. 1.66666667 2. ]] print ( arr1 % arr2 ) #\u6570\u7ec4\u6c42\u4f59 [[0 0 1] [0 2 0]] print ( arr1 // arr2 ) [[1 2 1] [2 1 2]] print ( arr1 + 2 ) #\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u52a02 [[3 4 5] [6 7 8]] print ( arr1 * 10 ) #\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u4e58\u4ee510 [[10 20 30] [40 50 60]] arr3 = arr1 > 3 #\u5224\u65ad\u54ea\u4e9b\u5143\u7d20\u5927\u4e8e3,\u8fd4\u56de\u7684\u662f\u5e03\u5c14\u7c7b\u578b print ( arr3 ) [[False False False] [ True True True]] arr4 = np . ones (( 3 , 5 )) print ( arr4 ) [[ 1. 1. 1. 1. 1.] [ 1. 1. 1. 1. 1.] [ 1. 1. 1. 1. 1.]] print ( arr1 ) [[1 2 3] [4 5 6]] np . dot ( arr1 , arr4 ) #\u77e9\u9635\u4e58\u6cd5AB array([[ 6., 6., 6., 6., 6.], [ 15., 15., 15., 15., 15.]]) arr1 . dot ( arr4 ) #\u77e9\u9635\u4e58\u6cd5 array([[ 6., 6., 6., 6., 6.], [ 15., 15., 15., 15., 15.]]) print ( arr1 ) print ( arr1 . T ) #\u77e9\u9635\u8f6c\u7f6e print ( np . transpose ( arr1 )) #\u77e9\u9635\u8f6c\u7f6e [[1 2 3] [4 5 6]] [[1 4] [2 5] [3 6]] [[1 4] [2 5] [3 6]] \u968f\u673a\u6570\u751f\u6210\u53ca\u77e9\u9635\u7684\u8fd0\u7b972 \u00b6 import numpy as np sample1 = np . random . random (( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u4ece0\u52301\u7684\u968f\u673a\u6570,\u8c03\u7528\u7684\u662fnumpy\u4e2drandom\u7684random\u51fd\u6570 print ( sample1 ) [[ 0.42548654 0.60831272] [ 0.48034909 0.70289579] [ 0.96871932 0.33469266]] sample2 = np . random . normal ( size = ( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u7b26\u5408\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u6570,\u4f7f\u7528\u7684\u662frandom\u4e2d\u7684normal\u51fd\u6570(\u6807\u51c6\u6b63\u6001\u5206\u5e03) print ( sample2 ) [[ 0.82645622 -0.63300866] [ 0.18604463 -0.30988056] [-1.50301955 -0.51466896]] sample3 = np . random . randint ( 0 , 10 , size = ( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u4ece0\u523010\u7684\u968f\u673a\u6574\u6570 ,ranint(\u968f\u673a\u6574\u6570) print ( sample3 ) [[2 4] [3 1] [0 3]] np . sum ( sample1 ) #\u6c42\u548csum 3.5204561139867017 np . min ( sample1 ) #\u6c42\u6700\u5c0f\u503cmin 0.33469265548836047 np . max ( sample1 ) #\u6c42\u6700\u5927\u503cmax 0.96871931960307933 np . sum ( sample1 , axis = 0 ) #\u5bf9\u5217\u6c42\u548c,\u5173\u952e\u5b57axis0\u5c31\u662f\u5217,1\u5c31\u662f\u884c array([ 1.87455495, 1.64590117]) np . sum ( sample1 , axis = 1 ) #\u5bf9\u884c\u6c42\u548c array([ 1.03379926, 1.18324488, 1.30341198]) print ( sample1 ) [[ 0.42548654 0.60831272] [ 0.48034909 0.70289579] [ 0.96871932 0.33469266]] np . argmin ( sample1 ) #\u6c42\u6700\u5c0f\u503c\u7684\u7d22\u5f15 argmin(\u9010\u884c\u4ece0\u5f00\u59cb\u7684,\u5c06\u6574\u4e2a\u6570\u7ec4\u770b\u5c55\u5f00\u6210\u4e00\u7ef4\u7684) 5 np . argmax ( sample1 ) #\u6c42\u6700\u5927\u503c\u7684\u7d22\u5f15 4 print ( np . mean ( sample1 )) #\u6c42\u5e73\u5747\u503c print ( sample1 . mean ()) #\u6c42\u5e73\u5747\u503c 0.586742685664 0.586742685664 np . median ( sample1 ) #\u6c42\u4e2d\u4f4d\u6570median 0.5443309058371042 np . sqrt ( sample1 ) #\u5f00\u65b9 array([[ 0.65229329, 0.77994405], [ 0.69307221, 0.8383888 ], [ 0.9842354 , 0.57852628]]) sample4 = np . random . randint ( 0 , 10 , size = ( 1 , 10 )) print ( sample4 ) [[9 2 3 0 2 8 1 3 2 8]] np . sort ( sample4 ) #\u6392\u5e8f array([[0, 1, 2, 2, 2, 3, 3, 8, 8, 9]]) np . sort ( sample1 ) array([[ 0.42548654, 0.60831272], [ 0.48034909, 0.70289579], [ 0.33469266, 0.96871932]]) np . clip ( sample4 , 2 , 7 ) #\u5c0f\u4e8e2\u5c31\u53d8\u62102\uff0c\u5927\u4e8e7\u5c31\u53d8\u4e3a7 ,\u6570\u636e\u9608\u503c\u6539\u53d8 array([[7, 2, 3, 2, 2, 7, 2, 3, 2, 7]]) numpy\u7684\u7d22\u5f15 \u00b6 import numpy as np arr1 = np . arange ( 2 , 14 ) print ( arr1 ) [ 2 3 4 5 6 7 8 9 10 11 12 13] print ( arr1 [ 2 ]) #\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e,\u4e00\u7ef4 4 print ( arr1 [ 1 : 4 ]) #\u7b2c\u4e00\u5230\u7b2c\u56db\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e [3 4 5] print ( arr1 [ 2 : - 1 ]) #\u7b2c\u4e8c\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e [ 4 5 6 7 8 9 10 11 12] print ( arr1 [: 5 ]) #\u524d\u4e94\u4e2a\u6570\u636e [2 3 4 5 6] print ( arr1 [ - 2 :]) #\u6700\u540e\u4e24\u4e2a\u6570\u636e [12 13] arr2 = arr1 . reshape ( 3 , 4 ) print ( arr2 ) [[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]] print ( arr2 [ 1 ]) [6 7 8 9] print ( arr2 [ 1 ][ 1 ]) 7 print ( arr2 [ 1 , 2 ]) 8 print ( arr2 [:, 2 ]) [ 4 8 12] for i in arr2 : #\u8fed\u4ee3\u884c print ( i ) [2 3 4 5] [6 7 8 9] [10 11 12 13] for i in arr2 . T : #\u8fed\u4ee3\u5217,\u8f6c\u7f6e\u4e00\u4e0b\u518d\u8fdb\u884c\u8fed\u4ee3 print ( i ) [ 2 6 10] [ 3 7 11] [ 4 8 12] [ 5 9 13] for i in arr2 . flat : #\u4e00\u4e2a\u4e00\u4e2a\u5143\u7d20\u8fed\u4ee3flat print ( i ) 2 3 4 5 6 7 8 9 10 11 12 13 array\u5408\u5e76 \u00b6 import numpy as np arr1 = np . array ([ 1 , 2 , 3 ]) arr2 = np . array ([ 4 , 5 , 6 ]) arr3 = np . vstack (( arr1 , arr2 )) #\u5782\u76f4\u5408\u5e76vertical(\u5782\u76f4)stack(\u5806\u653e) print ( arr3 ) print ( arr3 . shape ) [[1 2 3] [4 5 6]] (2, 3) arr4 = np . hstack (( arr1 , arr2 )) #\u6c34\u5e73\u5408\u5e76horizontal(\u6c34\u5e73) print ( arr4 ) print ( arr4 . shape ) [1 2 3 4 5 6] (6,) arrv = np . vstack (( arr1 , arr2 , arr3 )) print ( arrv ) [[1 2 3] [4 5 6] [1 2 3] [4 5 6]] arrh = np . hstack (( arr1 , arr2 , arr4 )) print ( arrh ) [1 2 3 4 5 6 1 2 3 4 5 6] arr = np . concatenate (( arr1 , arr2 , arr1 )) print ( arr ) [1 2 3 4 5 6 1 2 3] arr = np . concatenate (( arr3 , arrv ), axis = 0 ) #\u5408\u5e76\u7684array\u7ef4\u5ea6\u8981\u76f8\u540c\uff0carray\u5f62\u72b6\u8981\u5339\u914d\uff0caxis=0\u7eb5\u5411\u5408\u5e76 print ( arr ) [[1 2 3] [4 5 6] [1 2 3] [4 5 6] [1 2 3] [4 5 6]] arr = np . concatenate (( arr3 , arr3 ), axis = 1 ) #\u5408\u5e76\u7684array\u7ef4\u5ea6\u8981\u76f8\u540c\uff0carray\u5f62\u72b6\u8981\u5339\u914d\uff0caxis=1\u6a2a\u5411\u5408\u5e76 print ( arr ) [[1 2 3 1 2 3] [4 5 6 4 5 6]] arr1 . T print ( arr1 . T ) #\u4e00\u7ef4\u7684array\u4e0d\u80fd\u8f6c\u7f6e [1 2 3] print ( arr1 . shape ) (3,) arr1_1 = arr1 [ np . newaxis ,:] #\u6dfb\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u5230\u884c print ( arr1_1 ) print ( arr1_1 . shape ) [[1 2 3]] (1, 3) print ( arr1_1 . T ) [[1] [2] [3]] arr1_2 = arr1 [:, np . newaxis ] #\u6dfb\u52a0\u7ef4\u5ea6\u5230\u5217 print ( arr1_2 ) print ( arr1_2 . shape ) [[1] [2] [3]] (3, 1) arr1_3 = np . atleast_2d ( arr1 ) #atleast_2d \u5c06\u6570\u636e\u53d8\u62102\u7ef4,\u7ef4\u5ea6\u6bd4\u4ed6\u9ad8\u7684\u4e0d\u53d1\u751f\u6539\u53d8 print ( arr1_3 ) print ( arr1_3 . T ) [[1 2 3]] [[1] [2] [3]] array\u7684\u5206\u5272 \u00b6 import numpy as np arr1 = np . arange ( 12 ) . reshape (( 3 , 4 )) print ( arr1 ) [[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]] arr2 , arr3 = np . split ( arr1 , 2 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62102\u4efdsplit(\u5206\u5272) \u5c06arr1\u5207\u9694\u62102\u4e2aarr2\u548carr3,\u5728\u6c34\u5e73\u65b9\u5411 print ( arr2 ) print ( arr3 ) [[0 1] [4 5] [8 9]] [[ 2 3] [ 6 7] [10 11]] arr4 , arr5 , arr6 = np . split ( arr1 , 3 , axis = 0 ) #\u5782\u76f4\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd print ( arr4 ) print ( arr5 ) print ( arr6 ) [[0 1 2 3]] [[4 5 6 7]] [[ 8 9 10 11]] arr2 , arr3 , arr4 = np . split ( arr1 , 3 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd,\u6ca1\u529e\u6cd5\u5207\u5272\u6210\u76f8\u540c\u5927\u5c0f\u7684\u90e8\u5206 print ( arr2 ) print ( arr3 ) print ( arr4 ) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) ~/anaconda3/lib/python3.6/site-packages/numpy/lib/shape_base.py in split(ary, indices_or_sections, axis) 552 try: --> 553 len(indices_or_sections) 554 except TypeError: TypeError: object of type 'int' has no len() \u200b \u200b During handling of the above exception, another exception occurred: ValueError Traceback (most recent call last) <ipython-input-5-2961433b0366> in <module>() ----> 1 arr2,arr3,arr4 = np.split(arr1,3,axis=1)#\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd 2 print(arr2) 3 print(arr3) 4 print(arr4) ~/anaconda3/lib/python3.6/site-packages/numpy/lib/shape_base.py in split(ary, indices_or_sections, axis) 557 if N % sections: 558 raise ValueError( --> 559 'array split does not result in an equal division') 560 res = array_split(ary, indices_or_sections, axis) 561 return res ValueError: array split does not result in an equal division arr7 , arr8 , arr9 = np . array_split ( arr1 , 3 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd\uff0c\u4e0d\u7b49\u5206\u5272 print ( arr7 ) print ( arr8 ) print ( arr9 ) [[0 1] [4 5] [8 9]] [[ 2] [ 6] [10]] [[ 3] [ 7] [11]] arrv1 , arrv2 , arrv3 = np . vsplit ( arr1 , 3 ) #\u5782\u76f4\u5206\u5272 print ( arrv1 ) print ( arrv2 ) print ( arrv3 ) [[0 1 2 3]] [[4 5 6 7]] [[ 8 9 10 11]] arrh1 , arrh2 = np . hsplit ( arr1 , 2 ) #\u6c34\u5e73\u5206\u5272 print ( arrh1 ) print ( arrh2 ) [[0 1] [4 5] [8 9]] [[ 2 3] [ 6 7] [10 11]] numpy\u7684\u6df1\u62f7\u8d1d,\u6d45\u62f7\u8d1d \u00b6 import numpy as np arr1 = np . array ([ 1 , 2 , 3 ]) arr2 = arr1 #arr1,arr2\u5171\u4eab\u4e00\u5757\u5185\u5b58\uff0c\u6d45\u62f7\u8d1d arr2 [ 0 ] = 5 #\u6d45\u62f7\u8d1d,\u540c\u6b65\u6539\u53d8 print ( arr1 ) print ( arr2 ) [5 2 3] [5 2 3] arr3 = arr1 . copy () #\u6df1\u62f7\u8d1d\u8fd9\u91cc\u5c31\u76f8\u5f53\u4e8e\u666e\u901a\u53d8\u91cf\u7684deepcopy arr3 [ 0 ] = 10 print ( arr1 ) print ( arr3 ) [5 2 3] [10 2 3]","title":"038 numpy\u5e38\u7528"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#numpy","text":"import numpy as np array = np . array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ]]) print ( array ) [[1 2 3] [4 5 6] [7 8 9]] print ( array . ndim ) #\u7ef4\u5ea6 2 print ( array . shape ) #\u5f62\u72b6 (3, 3) print ( array . size ) #\u5927\u5c0f 9 print ( array . dtype ) #\u5143\u7d20\u7c7b\u578b int32","title":"numpy\u7684\u5c5e\u6027"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#array","text":"import numpy as np a = np . array ([ 1 , 2 , 3 ], dtype = np . int32 ) #\u521b\u5efaarray\u7684\u540c\u65f6\u7ed9\u5b9a\u7c7b\u578b print ( a . dtype ) int32 b = np . array ([ 1 , 2 , 3 ], dtype = np . float ) print ( b . dtype ) float64 c = np . array ([ 1 , 2 , 3 ]) #\u4e00\u7ef4\u6570\u636e print ( c ) [1 2 3] d = np . array ([[ 1 , 2 , 3 ], #2\u7ef4\u77e9\u9635 [ 4 , 5 , 6 ]]) print ( d ) [[1 2 3] [4 5 6]] zero = np . zeros (( 2 , 3 )) #\u751f\u62102\u884c3\u5217\u5168\u4e3a0\u7684\u77e9\u9635 zeros\u77e9\u9635 print ( zero ) [[ 0. 0. 0.] [ 0. 0. 0.]] one = np . ones (( 3 , 4 )) #\u751f\u62103\u884c4\u5217\u5168\u4e3a1\u7684\u77e9\u9635 ones\u77e9\u9635 print ( one ) [[ 1. 1. 1. 1.] [ 1. 1. 1. 1.] [ 1. 1. 1. 1.]] empty = np . empty (( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u5168\u90fd\u63a5\u8fd1\u4e8e0\uff08\u4e0d\u7b49\u4e8e0\uff09\u7684\u77e9\u9635 print ( empty ) [[ 0. 0.] [ 0. 0.] [ 0. 0.]] e = np . arange ( 10 ) #arange\u7684\u4f7f\u7528 print ( e ) [0 1 2 3 4 5 6 7 8 9] f = np . arange ( 4 , 12 ) print ( f ) [ 4 5 6 7 8 9 10 11] g = np . arange ( 1 , 20 , 3 ) print ( g ) [ 1 4 7 10 13 16 19] h = np . arange ( 8 ) . reshape ( 4 , 2 ) #\u91cd\u65b0\u5b9a\u4e49\u77e9\u9635\u7684\u5f62\u72b6 print ( h ) [[0 1] [2 3] [4 5] [6 7]]","title":"\u521b\u5efaarray"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#numpy_1","text":"import numpy as np arr1 = np . array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]]) arr2 = np . array ([[ 1 , 1 , 2 ], [ 2 , 3 , 3 ]]) print ( arr1 ) print ( arr2 ) [[1 2 3] [4 5 6]] [[1 1 2] [2 3 3]] print ( arr1 + arr2 ) #\u6570\u7ec4\u7684\u52a0\u6cd5,\u6309\u4f4d\u52a0 [[2 3 5] [6 8 9]] print ( arr1 - arr2 ) #\u6570\u7ec4\u51cf\u6cd5,\u6309\u4f4d\u51cf [[0 1 1] [2 2 3]] print ( arr1 * arr2 ) #\u6570\u7ec4\u4e58\u6cd5,\u6309\u4f4d\u4e58 [[ 1 2 6] [ 8 15 18]] print ( arr1 ** arr2 ) #\u6570\u7ec4\u53cc\u4e58\u53f7\u6c42\u5e42 [[ 1 2 9] [ 16 125 216]] print ( arr1 / arr2 ) #\u6570\u7ec4\u9664\u6cd5,\u6309\u4f4d\u9664 [[ 1. 2. 1.5 ] [ 2. 1.66666667 2. ]] print ( arr1 % arr2 ) #\u6570\u7ec4\u6c42\u4f59 [[0 0 1] [0 2 0]] print ( arr1 // arr2 ) [[1 2 1] [2 1 2]] print ( arr1 + 2 ) #\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u52a02 [[3 4 5] [6 7 8]] print ( arr1 * 10 ) #\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u4e58\u4ee510 [[10 20 30] [40 50 60]] arr3 = arr1 > 3 #\u5224\u65ad\u54ea\u4e9b\u5143\u7d20\u5927\u4e8e3,\u8fd4\u56de\u7684\u662f\u5e03\u5c14\u7c7b\u578b print ( arr3 ) [[False False False] [ True True True]] arr4 = np . ones (( 3 , 5 )) print ( arr4 ) [[ 1. 1. 1. 1. 1.] [ 1. 1. 1. 1. 1.] [ 1. 1. 1. 1. 1.]] print ( arr1 ) [[1 2 3] [4 5 6]] np . dot ( arr1 , arr4 ) #\u77e9\u9635\u4e58\u6cd5AB array([[ 6., 6., 6., 6., 6.], [ 15., 15., 15., 15., 15.]]) arr1 . dot ( arr4 ) #\u77e9\u9635\u4e58\u6cd5 array([[ 6., 6., 6., 6., 6.], [ 15., 15., 15., 15., 15.]]) print ( arr1 ) print ( arr1 . T ) #\u77e9\u9635\u8f6c\u7f6e print ( np . transpose ( arr1 )) #\u77e9\u9635\u8f6c\u7f6e [[1 2 3] [4 5 6]] [[1 4] [2 5] [3 6]] [[1 4] [2 5] [3 6]]","title":"numpy\u7684\u8fd0\u7b97"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#2","text":"import numpy as np sample1 = np . random . random (( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u4ece0\u52301\u7684\u968f\u673a\u6570,\u8c03\u7528\u7684\u662fnumpy\u4e2drandom\u7684random\u51fd\u6570 print ( sample1 ) [[ 0.42548654 0.60831272] [ 0.48034909 0.70289579] [ 0.96871932 0.33469266]] sample2 = np . random . normal ( size = ( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u7b26\u5408\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u6570,\u4f7f\u7528\u7684\u662frandom\u4e2d\u7684normal\u51fd\u6570(\u6807\u51c6\u6b63\u6001\u5206\u5e03) print ( sample2 ) [[ 0.82645622 -0.63300866] [ 0.18604463 -0.30988056] [-1.50301955 -0.51466896]] sample3 = np . random . randint ( 0 , 10 , size = ( 3 , 2 )) #\u751f\u62103\u884c2\u5217\u4ece0\u523010\u7684\u968f\u673a\u6574\u6570 ,ranint(\u968f\u673a\u6574\u6570) print ( sample3 ) [[2 4] [3 1] [0 3]] np . sum ( sample1 ) #\u6c42\u548csum 3.5204561139867017 np . min ( sample1 ) #\u6c42\u6700\u5c0f\u503cmin 0.33469265548836047 np . max ( sample1 ) #\u6c42\u6700\u5927\u503cmax 0.96871931960307933 np . sum ( sample1 , axis = 0 ) #\u5bf9\u5217\u6c42\u548c,\u5173\u952e\u5b57axis0\u5c31\u662f\u5217,1\u5c31\u662f\u884c array([ 1.87455495, 1.64590117]) np . sum ( sample1 , axis = 1 ) #\u5bf9\u884c\u6c42\u548c array([ 1.03379926, 1.18324488, 1.30341198]) print ( sample1 ) [[ 0.42548654 0.60831272] [ 0.48034909 0.70289579] [ 0.96871932 0.33469266]] np . argmin ( sample1 ) #\u6c42\u6700\u5c0f\u503c\u7684\u7d22\u5f15 argmin(\u9010\u884c\u4ece0\u5f00\u59cb\u7684,\u5c06\u6574\u4e2a\u6570\u7ec4\u770b\u5c55\u5f00\u6210\u4e00\u7ef4\u7684) 5 np . argmax ( sample1 ) #\u6c42\u6700\u5927\u503c\u7684\u7d22\u5f15 4 print ( np . mean ( sample1 )) #\u6c42\u5e73\u5747\u503c print ( sample1 . mean ()) #\u6c42\u5e73\u5747\u503c 0.586742685664 0.586742685664 np . median ( sample1 ) #\u6c42\u4e2d\u4f4d\u6570median 0.5443309058371042 np . sqrt ( sample1 ) #\u5f00\u65b9 array([[ 0.65229329, 0.77994405], [ 0.69307221, 0.8383888 ], [ 0.9842354 , 0.57852628]]) sample4 = np . random . randint ( 0 , 10 , size = ( 1 , 10 )) print ( sample4 ) [[9 2 3 0 2 8 1 3 2 8]] np . sort ( sample4 ) #\u6392\u5e8f array([[0, 1, 2, 2, 2, 3, 3, 8, 8, 9]]) np . sort ( sample1 ) array([[ 0.42548654, 0.60831272], [ 0.48034909, 0.70289579], [ 0.33469266, 0.96871932]]) np . clip ( sample4 , 2 , 7 ) #\u5c0f\u4e8e2\u5c31\u53d8\u62102\uff0c\u5927\u4e8e7\u5c31\u53d8\u4e3a7 ,\u6570\u636e\u9608\u503c\u6539\u53d8 array([[7, 2, 3, 2, 2, 7, 2, 3, 2, 7]])","title":"\u968f\u673a\u6570\u751f\u6210\u53ca\u77e9\u9635\u7684\u8fd0\u7b972"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#numpy_2","text":"import numpy as np arr1 = np . arange ( 2 , 14 ) print ( arr1 ) [ 2 3 4 5 6 7 8 9 10 11 12 13] print ( arr1 [ 2 ]) #\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e,\u4e00\u7ef4 4 print ( arr1 [ 1 : 4 ]) #\u7b2c\u4e00\u5230\u7b2c\u56db\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e [3 4 5] print ( arr1 [ 2 : - 1 ]) #\u7b2c\u4e8c\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e [ 4 5 6 7 8 9 10 11 12] print ( arr1 [: 5 ]) #\u524d\u4e94\u4e2a\u6570\u636e [2 3 4 5 6] print ( arr1 [ - 2 :]) #\u6700\u540e\u4e24\u4e2a\u6570\u636e [12 13] arr2 = arr1 . reshape ( 3 , 4 ) print ( arr2 ) [[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]] print ( arr2 [ 1 ]) [6 7 8 9] print ( arr2 [ 1 ][ 1 ]) 7 print ( arr2 [ 1 , 2 ]) 8 print ( arr2 [:, 2 ]) [ 4 8 12] for i in arr2 : #\u8fed\u4ee3\u884c print ( i ) [2 3 4 5] [6 7 8 9] [10 11 12 13] for i in arr2 . T : #\u8fed\u4ee3\u5217,\u8f6c\u7f6e\u4e00\u4e0b\u518d\u8fdb\u884c\u8fed\u4ee3 print ( i ) [ 2 6 10] [ 3 7 11] [ 4 8 12] [ 5 9 13] for i in arr2 . flat : #\u4e00\u4e2a\u4e00\u4e2a\u5143\u7d20\u8fed\u4ee3flat print ( i ) 2 3 4 5 6 7 8 9 10 11 12 13","title":"numpy\u7684\u7d22\u5f15"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#array_1","text":"import numpy as np arr1 = np . array ([ 1 , 2 , 3 ]) arr2 = np . array ([ 4 , 5 , 6 ]) arr3 = np . vstack (( arr1 , arr2 )) #\u5782\u76f4\u5408\u5e76vertical(\u5782\u76f4)stack(\u5806\u653e) print ( arr3 ) print ( arr3 . shape ) [[1 2 3] [4 5 6]] (2, 3) arr4 = np . hstack (( arr1 , arr2 )) #\u6c34\u5e73\u5408\u5e76horizontal(\u6c34\u5e73) print ( arr4 ) print ( arr4 . shape ) [1 2 3 4 5 6] (6,) arrv = np . vstack (( arr1 , arr2 , arr3 )) print ( arrv ) [[1 2 3] [4 5 6] [1 2 3] [4 5 6]] arrh = np . hstack (( arr1 , arr2 , arr4 )) print ( arrh ) [1 2 3 4 5 6 1 2 3 4 5 6] arr = np . concatenate (( arr1 , arr2 , arr1 )) print ( arr ) [1 2 3 4 5 6 1 2 3] arr = np . concatenate (( arr3 , arrv ), axis = 0 ) #\u5408\u5e76\u7684array\u7ef4\u5ea6\u8981\u76f8\u540c\uff0carray\u5f62\u72b6\u8981\u5339\u914d\uff0caxis=0\u7eb5\u5411\u5408\u5e76 print ( arr ) [[1 2 3] [4 5 6] [1 2 3] [4 5 6] [1 2 3] [4 5 6]] arr = np . concatenate (( arr3 , arr3 ), axis = 1 ) #\u5408\u5e76\u7684array\u7ef4\u5ea6\u8981\u76f8\u540c\uff0carray\u5f62\u72b6\u8981\u5339\u914d\uff0caxis=1\u6a2a\u5411\u5408\u5e76 print ( arr ) [[1 2 3 1 2 3] [4 5 6 4 5 6]] arr1 . T print ( arr1 . T ) #\u4e00\u7ef4\u7684array\u4e0d\u80fd\u8f6c\u7f6e [1 2 3] print ( arr1 . shape ) (3,) arr1_1 = arr1 [ np . newaxis ,:] #\u6dfb\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u5230\u884c print ( arr1_1 ) print ( arr1_1 . shape ) [[1 2 3]] (1, 3) print ( arr1_1 . T ) [[1] [2] [3]] arr1_2 = arr1 [:, np . newaxis ] #\u6dfb\u52a0\u7ef4\u5ea6\u5230\u5217 print ( arr1_2 ) print ( arr1_2 . shape ) [[1] [2] [3]] (3, 1) arr1_3 = np . atleast_2d ( arr1 ) #atleast_2d \u5c06\u6570\u636e\u53d8\u62102\u7ef4,\u7ef4\u5ea6\u6bd4\u4ed6\u9ad8\u7684\u4e0d\u53d1\u751f\u6539\u53d8 print ( arr1_3 ) print ( arr1_3 . T ) [[1 2 3]] [[1] [2] [3]]","title":"array\u5408\u5e76"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#array_2","text":"import numpy as np arr1 = np . arange ( 12 ) . reshape (( 3 , 4 )) print ( arr1 ) [[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]] arr2 , arr3 = np . split ( arr1 , 2 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62102\u4efdsplit(\u5206\u5272) \u5c06arr1\u5207\u9694\u62102\u4e2aarr2\u548carr3,\u5728\u6c34\u5e73\u65b9\u5411 print ( arr2 ) print ( arr3 ) [[0 1] [4 5] [8 9]] [[ 2 3] [ 6 7] [10 11]] arr4 , arr5 , arr6 = np . split ( arr1 , 3 , axis = 0 ) #\u5782\u76f4\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd print ( arr4 ) print ( arr5 ) print ( arr6 ) [[0 1 2 3]] [[4 5 6 7]] [[ 8 9 10 11]] arr2 , arr3 , arr4 = np . split ( arr1 , 3 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd,\u6ca1\u529e\u6cd5\u5207\u5272\u6210\u76f8\u540c\u5927\u5c0f\u7684\u90e8\u5206 print ( arr2 ) print ( arr3 ) print ( arr4 ) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) ~/anaconda3/lib/python3.6/site-packages/numpy/lib/shape_base.py in split(ary, indices_or_sections, axis) 552 try: --> 553 len(indices_or_sections) 554 except TypeError: TypeError: object of type 'int' has no len() \u200b \u200b During handling of the above exception, another exception occurred: ValueError Traceback (most recent call last) <ipython-input-5-2961433b0366> in <module>() ----> 1 arr2,arr3,arr4 = np.split(arr1,3,axis=1)#\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd 2 print(arr2) 3 print(arr3) 4 print(arr4) ~/anaconda3/lib/python3.6/site-packages/numpy/lib/shape_base.py in split(ary, indices_or_sections, axis) 557 if N % sections: 558 raise ValueError( --> 559 'array split does not result in an equal division') 560 res = array_split(ary, indices_or_sections, axis) 561 return res ValueError: array split does not result in an equal division arr7 , arr8 , arr9 = np . array_split ( arr1 , 3 , axis = 1 ) #\u6c34\u5e73\u65b9\u5411\u5206\u5272\uff0c\u5206\u62103\u4efd\uff0c\u4e0d\u7b49\u5206\u5272 print ( arr7 ) print ( arr8 ) print ( arr9 ) [[0 1] [4 5] [8 9]] [[ 2] [ 6] [10]] [[ 3] [ 7] [11]] arrv1 , arrv2 , arrv3 = np . vsplit ( arr1 , 3 ) #\u5782\u76f4\u5206\u5272 print ( arrv1 ) print ( arrv2 ) print ( arrv3 ) [[0 1 2 3]] [[4 5 6 7]] [[ 8 9 10 11]] arrh1 , arrh2 = np . hsplit ( arr1 , 2 ) #\u6c34\u5e73\u5206\u5272 print ( arrh1 ) print ( arrh2 ) [[0 1] [4 5] [8 9]] [[ 2 3] [ 6 7] [10 11]]","title":"array\u7684\u5206\u5272"},{"location":"python\u5b66\u4e60/038 numpy\u5e38\u7528/#numpy_3","text":"import numpy as np arr1 = np . array ([ 1 , 2 , 3 ]) arr2 = arr1 #arr1,arr2\u5171\u4eab\u4e00\u5757\u5185\u5b58\uff0c\u6d45\u62f7\u8d1d arr2 [ 0 ] = 5 #\u6d45\u62f7\u8d1d,\u540c\u6b65\u6539\u53d8 print ( arr1 ) print ( arr2 ) [5 2 3] [5 2 3] arr3 = arr1 . copy () #\u6df1\u62f7\u8d1d\u8fd9\u91cc\u5c31\u76f8\u5f53\u4e8e\u666e\u901a\u53d8\u91cf\u7684deepcopy arr3 [ 0 ] = 10 print ( arr1 ) print ( arr3 ) [5 2 3] [10 2 3]","title":"numpy\u7684\u6df1\u62f7\u8d1d,\u6d45\u62f7\u8d1d"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/","text":"1.matplotlib\u57fa\u7840\u7528\u6cd5 \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) #\u4ece-1\u52301\u751f\u6210100\u4e2a\u70b9,\u5747\u5300\u7684 y = 2 * x + 1 plt . plot ( x , y ) plt . show () 2.matplotlib figure\u56fe\u50cf \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 plt . figure () #\u9ed8\u8ba4\u4e0d\u4f20\u53c2\u6570\u5219\u751f\u6210\u7684\u90fd\u662f\u65b0\u7684\u4e00\u526f\u56fe\u50cf,\u5982\u679c\u5728figure()\u4e2d\u4f20\u5165\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u6570\u5b571,\u90a3\u4e48\u753b\u7684\u56fe\u50cf\u662f\u5728\u4e00\u5f20\u56fe\u4e0a\u7684 plt . plot ( x , y1 ) plt . figure () plt . plot ( x , y2 ) plt . show () x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 plt . figure () plt . plot ( x , y1 ) plt . figure ( figsize = ( 8 , 5 )) #\u8bbe\u7f6efigure\u7684\u5927\u5c0f plt . plot ( x , y2 ) plt . show () \u7ed8\u5236\u56fe\u50cf\u5728\u540c\u4e00\u526f\u4e0a \u00b6 plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) #\u989c\u8272\u662fred,\u7ebf\u7684\u5bbd\u5ea6\u662f1.0,\u7ebf\u7684\u98ce\u683c\u662f--\u865a\u7ebf plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) #\u7ebf\u7684\u98ce\u683c\u662f\u5b9e\u7ebf plt . show () 3.matplotlib\u8bbe\u7f6e\u5750\u6807\u8f741 \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4(\u5750\u6807\u533a\u57df),\u8981\u663e\u793a\u7684\u533a\u57df plt . xlim (( - 1 , 2 )) #limit\u9650\u5236 plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) #\u6dfb\u52a0\u6807\u7b7e plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . show () new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ] x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . xticks ( new_ticks ) #x\u5750\u6807\u663e\u793a\u7684\u5c3a\u5ea6 plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) #y\u65b9\u5411\u5750\u6807\u7684\u5c3a\u5ea6(\u95f4\u9694\u663e\u793a\u7684\u5750\u6807),\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u5217\u8868,\u4e00\u4e2a\u662f\u6570\u5b57,\u53e6\u4e00\u4e2a\u662f\u6570\u5b57\u4ee3\u66ff\u7684\u6c49\u5b57 plt . show () 4.matplotlib\u8bbe\u7f6e\u5750\u6807\u8f742 \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) plt . xticks ( new_ticks ) plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) #gca get current axis ax = plt . gca () #\u83b7\u53d6\u5750\u6807\u8f74\u4fdd\u5b58\u5728ax\u4e2d #\u628a\u53f3\u8fb9\u548c\u4e0a\u8fb9\u7684\u8fb9\u6846\u53bb\u6389 ax . spines [ 'right' ] . set_color ( 'red' ) #\u5c06\u53f3\u8fb9\u6846\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u7ea2\u8272 ax . spines [ 'top' ] . set_color ( 'none' ) #\u5c06\u4e0a\u8fb9\u6846\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u7a7a,\u5c31\u662f\u6ca1\u6709\u989c\u8272 #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 ax . xaxis . set_ticks_position ( 'bottom' ) #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 ax . yaxis . set_ticks_position ( 'left' ) #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 #\u8bbe\u7f6ebottom\u5bf9\u5e94\u52300\u70b9 #\u8bbe\u7f6eleft\u5bf9\u5e94\u52300\u70b9 ax . spines [ 'bottom' ] . set_position (( 'data' , 0 )) ax . spines [ 'left' ] . set_position (( 'data' , 0 )) plt . show () [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ] 5.matplotlib legend\u56fe\u4f8b \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) l1 , = plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) #\u9996\u5148\u5c06\u7ed8\u5236\u7684\u7ebf\u4fdd\u5b58\u5230l1\u4e2d,\u9700\u8981\u6ce8\u610f\u7684\u662f\u9700\u8981\u52a0\u4e0a\u9017\u53f7 l2 , = plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . legend ( handles = [ l1 , l2 ], labels = [ 'test1' , 'test2' ], loc = 'best' ) #\u653e\u7f6e\u56fe\u4f8b,\u653e\u7f6e\u7684\u66f2\u7ebf,\u66f2\u7ebf\u7684\u6807\u7b7e,loc(\u4f4d\u7f6e)=best\u5c31\u662f\u4f4d\u7f6e\u6700\u597d\u7684\u610f\u601d new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) plt . xticks ( new_ticks ) plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) plt . show () [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ] 6.matplotlib \u6807\u6ce8 \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '-' ) #gca get current axis ax = plt . gca () #\u628a\u53f3\u8fb9\u548c\u4e0a\u8fb9\u7684\u8fb9\u6846\u53bb\u6389 ax . spines [ 'right' ] . set_color ( 'none' ) ax . spines [ 'top' ] . set_color ( 'none' ) #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 ax . xaxis . set_ticks_position ( 'bottom' ) ax . yaxis . set_ticks_position ( 'left' ) #\u8bbe\u7f6ebottom\u5bf9\u5e94\u52300\u70b9 #\u8bbe\u7f6eleft\u5bf9\u5e94\u52300\u70b9 ax . spines [ 'bottom' ] . set_position (( 'data' , 0 )) ax . spines [ 'left' ] . set_position (( 'data' , 0 )) # \u4e0d\u662f\u5f88\u61c2\u7684\u5730\u65b9\u5feb\u6377\u952e\u67e5\u770b\u63cf\u8ff0 x0 = 0.5 #\u6807\u6ce8\u7684x\u5750\u6807 y0 = 2 * x0 + 1 #\u6807\u6ce8\u7684y\\\u5750\u6807 #\u753b\u70b9 plt . scatter ( x0 , y0 , s = 50 , color = 'b' ) #\u4f7f\u7528\u7684\u662f\u79bb\u6563\u70b9, s=50 \u5c31\u662f\u5927\u5c0f #\u753b\u865a\u7ebf plt . plot ([ x0 , x0 ],[ y0 , 0 ], 'k--' , lw = 2 ) # \u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u4f20\u5165\u4e86\u4e24\u4e2ax\u503c\u4e24\u4e2ay\u503c,\u662f\u4e00\u4e00\u5bf9\u5e94\u7684,\u6309\u7167\u7d22\u5f15(x0,y0)\u4ee5\u53ca(x0,0) ,\u9ed1\u8272\u865a\u7ebf,lw\u5c31\u662f\u7ebf\u6b3e\u8bbe\u7f6e\u4e3a0 #\u753b\u63cf\u8ff0 \u9996\u5148%s %\u5bf9\u5e94\u7684\u662f\u540e\u9762\u7684y0 , xy\u4f4d\u7f6e\u662f(x0,y0),xy\u7684\u6587\u672c\u4f4d\u7f6e\u5728\u5728x\u52a030y\u51cf30\u7684\u4f4d\u7f6e,textcoords='offset points'\u662f\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9 # arrowprops\u662f\u52a0\u4e0a\u7bad\u5934\u7684\u610f\u601d plt . annotate ( r '$2x+1= %s $' % y0 , xy = ( x0 , y0 ), xytext = ( + 30 , - 30 ), textcoords = 'offset points' , fontsize = 16 , arrowprops = dict ( arrowstyle = '->' , connectionstyle = 'arc3,rad=.2' )) plt . text ( - 1 , 2 , r '$this\\ is\\ the\\ text$' , fontdict = dict = { 'size' : '16' , 'color' : 'r' }) #\u5750\u6807,\u6587\u672c,\u7a7a\u683c\u9700\u8981\u52a0\\\u8fdb\u884c\u8f6cyi,\u5b57\u4f53\u7684\u8bbe\u7f6e. plt . show () #\u4f7f\u7528plt.show()\u7684\u539f\u56e0\u5c31\u662f\u4f7f\u5f97\u81ea\u5df1\u6240\u6709\u7684\u8bbe\u7f6e\u5b8c\u6210\u4e86\u518d\u663e\u793a 7.matplotlib scatter\u6563\u70b9\u56fe \u00b6 import matplotlib.pyplot as plt import numpy as np plt . scatter ( np . arange ( 5 ), np . arange ( 5 )) plt . show () x = np . random . normal ( 0 , 1 , 500 ) y = np . random . normal ( 0 , 1 , 500 ) plt . scatter ( x , y , s = 50 , c = 'b' , alpha = 0.5 ) # c\u5c31\u662f\u989c\u8272,alpha=0.5\u8bbe\u7f6e\u7684\u989c\u8272\u7684\u900f\u660e\u5ea6 plt . xlim (( - 2 , 2 )) plt . ylim (( - 2 , 2 )) plt . xticks (()) #\u53d6\u6d88\u663e\u793a\u8fb9\u6846\u7684\u5c3a\u5ea6,\u4ec0\u4e48\u53c2\u6570\u4e0d\u4f20\u5165\u5c31\u53ef\u4ee5\u53d6\u6d88 plt . yticks (()) plt . show () 8.matplotlib bar\u76f4\u65b9\u56fe \u00b6 import matplotlib.pyplot as plt import numpy as np x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y ) plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , - y ) plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y , facecolor = '#9999ff' , edgecolor = 'white' ) #facecolor\u8bbe\u7f6e\u7684\u67f1\u5b50\u91cc\u9762\u7684\u989c\u8272,edgecolor\u8bbe\u7f6e\u7684\u662f\u67f1\u5b50\u8fb9\u6846\u7684\u989c\u8272 plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y , facecolor = '#9999ff' , edgecolor = 'white' ) for x , y in zip ( x , y ): #\u4f7f\u7528for\u5faa\u73af\u7ed9\u67f1\u5b50\u4e0a\u52a0\u4e0a\u503c,zip\u7684\u610f\u601d\u662f\u5c06x\u548cy\u6253\u5305\u6210\u4e00\u4e2a\u6574\u4f53,\u6bcf\u6b21\u5faa\u73af\u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\u4e00\u4e2ax\u548cy plt . text ( x + 0.4 , y , ' %.2f ' % y , ha = 'center' , va = 'bottom' ) #ha\u4ee3\u8868\u663e\u793a\u5728\u67f1\u5b50\u4e2d\u5fc3,va=bottom\u8868\u793a\u67f1\u5b50\u5728\u6570\u5b57\u7684\u4e0b\u9762 plt . show () 9.matplotlib contours\u7b49\u9ad8\u7ebf\u56fe \u00b6 import matplotlib.pyplot as plt import numpy as np def f ( x , y ): #\u5b9a\u4e49\u7684\u662fxy\u5bf9\u5e94\u7684\u9ad8\u5ea6 return ( 1 - x / 2 + x ** 5 + y ** 3 ) * np . exp ( - x ** 2 - y ** 2 ) x = np . linspace ( - 3 , 3 , 100 ) #\u6a2a\u5750\u6807 y = np . linspace ( - 3 , 3 , 100 ) #\u7eb5\u5750\u6807 X , Y = np . meshgrid ( x , y ) #\u751f\u6210\u4e00\u4e2a\u7f51\u683c plt . contourf ( X , Y , f ( X , Y ), 8 , alpha = 0.75 , cmap = plt . cm . hot ) #X,Y,\u9ad8\u5ea6\u51fd\u6570, 8\u662f\u7ebf\u7684\u4e2a\u6570 ,alpha\u662f\u900f\u660e\u5ea6,cmap\u662f\u989c\u8272,plt.cm.hot\u662f\u70ed\u529b\u56fe\u989c\u8272 # \u7ed9\u7b49\u9ad8\u7ebf\u52a0\u4e0a\u6846 C = plt . contour ( X , Y , f ( X , Y ), 8 , colors = 'black' , linewidth =. 5 ) plt . clabel ( C , inline = True , fontsize = 10 ) #\u7b49\u9ad8\u7ebf\u7684\u63cf\u8ff0 plt . xticks (()) plt . yticks (()) plt . show () /home/dlut/anaconda3/lib/python3.6/site-packages/matplotlib/contour.py:960: UserWarning: The following kwargs were not used by contour: 'linewidth' s) 10.matplotlib 3D\u56fe \u00b6 import matplotlib.pyplot as plt import numpy as np from mpl_toolkits.mplot3d import Axes3D #\u5bfc\u5165\u7ed8\u52363D\u56fe\u7684\u5305 fig = plt . figure () # ax = Axes3D ( fig ) #\u5efa\u7acb\u4e00\u4e2a3d\u7684\u89c6\u56fe x = np . arange ( - 4 , 4 , 0.25 ) y = np . arange ( - 4 , 4 , 0.25 ) X , Y = np . meshgrid ( x , y ) #XY\u7684\u5750\u6807\u7f51\u683c R = np . sqrt ( X ** 2 + Y ** 2 ) Z = np . sin ( R ) #Z\u5750\u6807 ax . plot_surface ( X , Y , Z , rstride = 1 , cstride = 1 , cmap = plt . get_cmap ( 'rainbow' )) #\u7ed8\u52363D\u56fe\uff0cX\uff0cY\uff0cZ\uff0cx\u65b9\u5411\uff0cy\u65b9\u5411\u7684\u8272\u5757\u5927\u5c0f \uff0c\u989c\u8272\u662f\u5f69\u8679\u8272 ax . contourf ( X , Y , Z , zdir = 'z' , offset =- 2 , cmap = 'rainbow' ) # \u9700\u8981\u6620\u5c04\u7684\u65b9\u5411\u662fz\u65b9\u5411\uff08\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\uff09\uff0coffset\u6620\u5c04\u7684\u4f4d\u7f6e\u662f-2 ax . set_zlim ( - 2 , 2 ) plt . show () 11.matplotlib subplot \u5b50\u56fe\u50cf \u00b6 import matplotlib.pyplot as plt import numpy as np plt . figure () plt . subplot ( 2 , 2 , 1 ) #\u7ed8\u5236\u540c\u7b49\u5927\u5c0f\u7684\u5b50\u56fe\u50cf plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 2 , 2 , 2 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 223 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 224 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . show () plt . figure () #\u7ed8\u5236\u4e0d\u540c\u5927\u5c0f\u7684\u5b50\u56fe plt . subplot ( 2 , 1 , 1 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 2 , 3 , 4 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 235 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 236 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . show () 12.matplotlib \u52a8\u6001\u56fe \u00b6 import matplotlib.pyplot as plt import numpy as np from matplotlib import animation #\u5bfc\u5165\u7ed8\u5236\u52a8\u6001\u56fe\u7684\u5305 # \u9700\u8981\u4f7f\u7528ipython\u89c2\u770b fig , ax = plt . subplots () x = np . arange ( 0 , 2 * np . pi , 0.01 ) line , = ax . plot ( x , np . sin ( x )) #\u753b\u4e00\u6761\u7ebf\uff0c\u4e00\u5b9a\u6ce8\u610f\u8fd9\u6837\u7684\u4e00\u5b9a\u8981\u52a0\u9017\u53f7 def animate ( i ): line . set_ydata ( np . sin ( x + i / 10 )) return line , def init (): #\u521d\u59cb\u5316\u7684\u51fd\u6570 line . set_ydata ( np . sin ( x )) return line , ani = animation . FuncAnimation ( fig = fig , func = animate , init_func = init , interval = 200 ) #interval=200\u95f4\u9694\u7684\u6539\u53d8\u662f200ms plt . show ()","title":"039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#1matplotlib","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) #\u4ece-1\u52301\u751f\u6210100\u4e2a\u70b9,\u5747\u5300\u7684 y = 2 * x + 1 plt . plot ( x , y ) plt . show ()","title":"1.matplotlib\u57fa\u7840\u7528\u6cd5"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#2matplotlib-figure","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 plt . figure () #\u9ed8\u8ba4\u4e0d\u4f20\u53c2\u6570\u5219\u751f\u6210\u7684\u90fd\u662f\u65b0\u7684\u4e00\u526f\u56fe\u50cf,\u5982\u679c\u5728figure()\u4e2d\u4f20\u5165\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u6570\u5b571,\u90a3\u4e48\u753b\u7684\u56fe\u50cf\u662f\u5728\u4e00\u5f20\u56fe\u4e0a\u7684 plt . plot ( x , y1 ) plt . figure () plt . plot ( x , y2 ) plt . show () x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 plt . figure () plt . plot ( x , y1 ) plt . figure ( figsize = ( 8 , 5 )) #\u8bbe\u7f6efigure\u7684\u5927\u5c0f plt . plot ( x , y2 ) plt . show ()","title":"2.matplotlib figure\u56fe\u50cf"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#_1","text":"plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) #\u989c\u8272\u662fred,\u7ebf\u7684\u5bbd\u5ea6\u662f1.0,\u7ebf\u7684\u98ce\u683c\u662f--\u865a\u7ebf plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) #\u7ebf\u7684\u98ce\u683c\u662f\u5b9e\u7ebf plt . show ()","title":"\u7ed8\u5236\u56fe\u50cf\u5728\u540c\u4e00\u526f\u4e0a"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#3matplotlib1","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4(\u5750\u6807\u533a\u57df),\u8981\u663e\u793a\u7684\u533a\u57df plt . xlim (( - 1 , 2 )) #limit\u9650\u5236 plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) #\u6dfb\u52a0\u6807\u7b7e plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . show () new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ] x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . xticks ( new_ticks ) #x\u5750\u6807\u663e\u793a\u7684\u5c3a\u5ea6 plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) #y\u65b9\u5411\u5750\u6807\u7684\u5c3a\u5ea6(\u95f4\u9694\u663e\u793a\u7684\u5750\u6807),\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u5217\u8868,\u4e00\u4e2a\u662f\u6570\u5b57,\u53e6\u4e00\u4e2a\u662f\u6570\u5b57\u4ee3\u66ff\u7684\u6c49\u5b57 plt . show ()","title":"3.matplotlib\u8bbe\u7f6e\u5750\u6807\u8f741"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#4matplotlib2","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) plt . xticks ( new_ticks ) plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) #gca get current axis ax = plt . gca () #\u83b7\u53d6\u5750\u6807\u8f74\u4fdd\u5b58\u5728ax\u4e2d #\u628a\u53f3\u8fb9\u548c\u4e0a\u8fb9\u7684\u8fb9\u6846\u53bb\u6389 ax . spines [ 'right' ] . set_color ( 'red' ) #\u5c06\u53f3\u8fb9\u6846\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u7ea2\u8272 ax . spines [ 'top' ] . set_color ( 'none' ) #\u5c06\u4e0a\u8fb9\u6846\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u7a7a,\u5c31\u662f\u6ca1\u6709\u989c\u8272 #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 ax . xaxis . set_ticks_position ( 'bottom' ) #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 ax . yaxis . set_ticks_position ( 'left' ) #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 #\u8bbe\u7f6ebottom\u5bf9\u5e94\u52300\u70b9 #\u8bbe\u7f6eleft\u5bf9\u5e94\u52300\u70b9 ax . spines [ 'bottom' ] . set_position (( 'data' , 0 )) ax . spines [ 'left' ] . set_position (( 'data' , 0 )) plt . show () [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ]","title":"4.matplotlib\u8bbe\u7f6e\u5750\u6807\u8f742"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#5matplotlib-legend","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 3 , 3 , 100 ) y1 = 2 * x + 1 y2 = x ** 2 #xy\u8303\u56f4 plt . xlim (( - 1 , 2 )) plt . ylim (( - 2 , 3 )) #xy\u63cf\u8ff0 plt . xlabel ( 'I AM X' ) plt . ylabel ( 'I AM Y' ) l1 , = plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '--' ) #\u9996\u5148\u5c06\u7ed8\u5236\u7684\u7ebf\u4fdd\u5b58\u5230l1\u4e2d,\u9700\u8981\u6ce8\u610f\u7684\u662f\u9700\u8981\u52a0\u4e0a\u9017\u53f7 l2 , = plt . plot ( x , y2 , color = 'blue' , linewidth = 5.0 , linestyle = '-' ) plt . legend ( handles = [ l1 , l2 ], labels = [ 'test1' , 'test2' ], loc = 'best' ) #\u653e\u7f6e\u56fe\u4f8b,\u653e\u7f6e\u7684\u66f2\u7ebf,\u66f2\u7ebf\u7684\u6807\u7b7e,loc(\u4f4d\u7f6e)=best\u5c31\u662f\u4f4d\u7f6e\u6700\u597d\u7684\u610f\u601d new_ticks = np . linspace ( - 2 , 2 , 11 ) print ( new_ticks ) plt . xticks ( new_ticks ) plt . yticks ([ - 1 , 0 , 1 , 2 , 3 ], [ 'level1' , 'level2' , 'level3' , 'level4' , 'level5' ]) plt . show () [-2. -1.6 -1.2 -0.8 -0.4 0. 0.4 0.8 1.2 1.6 2. ]","title":"5.matplotlib legend\u56fe\u4f8b"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#6matplotlib","text":"import matplotlib.pyplot as plt import numpy as np x = np . linspace ( - 1 , 1 , 100 ) y1 = 2 * x + 1 plt . plot ( x , y1 , color = 'red' , linewidth = 1.0 , linestyle = '-' ) #gca get current axis ax = plt . gca () #\u628a\u53f3\u8fb9\u548c\u4e0a\u8fb9\u7684\u8fb9\u6846\u53bb\u6389 ax . spines [ 'right' ] . set_color ( 'none' ) ax . spines [ 'top' ] . set_color ( 'none' ) #\u628ax\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018bottom\u2019 #\u628ay\u8f74\u7684\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u2018left\u2019 ax . xaxis . set_ticks_position ( 'bottom' ) ax . yaxis . set_ticks_position ( 'left' ) #\u8bbe\u7f6ebottom\u5bf9\u5e94\u52300\u70b9 #\u8bbe\u7f6eleft\u5bf9\u5e94\u52300\u70b9 ax . spines [ 'bottom' ] . set_position (( 'data' , 0 )) ax . spines [ 'left' ] . set_position (( 'data' , 0 )) # \u4e0d\u662f\u5f88\u61c2\u7684\u5730\u65b9\u5feb\u6377\u952e\u67e5\u770b\u63cf\u8ff0 x0 = 0.5 #\u6807\u6ce8\u7684x\u5750\u6807 y0 = 2 * x0 + 1 #\u6807\u6ce8\u7684y\\\u5750\u6807 #\u753b\u70b9 plt . scatter ( x0 , y0 , s = 50 , color = 'b' ) #\u4f7f\u7528\u7684\u662f\u79bb\u6563\u70b9, s=50 \u5c31\u662f\u5927\u5c0f #\u753b\u865a\u7ebf plt . plot ([ x0 , x0 ],[ y0 , 0 ], 'k--' , lw = 2 ) # \u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u4f20\u5165\u4e86\u4e24\u4e2ax\u503c\u4e24\u4e2ay\u503c,\u662f\u4e00\u4e00\u5bf9\u5e94\u7684,\u6309\u7167\u7d22\u5f15(x0,y0)\u4ee5\u53ca(x0,0) ,\u9ed1\u8272\u865a\u7ebf,lw\u5c31\u662f\u7ebf\u6b3e\u8bbe\u7f6e\u4e3a0 #\u753b\u63cf\u8ff0 \u9996\u5148%s %\u5bf9\u5e94\u7684\u662f\u540e\u9762\u7684y0 , xy\u4f4d\u7f6e\u662f(x0,y0),xy\u7684\u6587\u672c\u4f4d\u7f6e\u5728\u5728x\u52a030y\u51cf30\u7684\u4f4d\u7f6e,textcoords='offset points'\u662f\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9 # arrowprops\u662f\u52a0\u4e0a\u7bad\u5934\u7684\u610f\u601d plt . annotate ( r '$2x+1= %s $' % y0 , xy = ( x0 , y0 ), xytext = ( + 30 , - 30 ), textcoords = 'offset points' , fontsize = 16 , arrowprops = dict ( arrowstyle = '->' , connectionstyle = 'arc3,rad=.2' )) plt . text ( - 1 , 2 , r '$this\\ is\\ the\\ text$' , fontdict = dict = { 'size' : '16' , 'color' : 'r' }) #\u5750\u6807,\u6587\u672c,\u7a7a\u683c\u9700\u8981\u52a0\\\u8fdb\u884c\u8f6cyi,\u5b57\u4f53\u7684\u8bbe\u7f6e. plt . show () #\u4f7f\u7528plt.show()\u7684\u539f\u56e0\u5c31\u662f\u4f7f\u5f97\u81ea\u5df1\u6240\u6709\u7684\u8bbe\u7f6e\u5b8c\u6210\u4e86\u518d\u663e\u793a","title":"6.matplotlib \u6807\u6ce8"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#7matplotlib-scatter","text":"import matplotlib.pyplot as plt import numpy as np plt . scatter ( np . arange ( 5 ), np . arange ( 5 )) plt . show () x = np . random . normal ( 0 , 1 , 500 ) y = np . random . normal ( 0 , 1 , 500 ) plt . scatter ( x , y , s = 50 , c = 'b' , alpha = 0.5 ) # c\u5c31\u662f\u989c\u8272,alpha=0.5\u8bbe\u7f6e\u7684\u989c\u8272\u7684\u900f\u660e\u5ea6 plt . xlim (( - 2 , 2 )) plt . ylim (( - 2 , 2 )) plt . xticks (()) #\u53d6\u6d88\u663e\u793a\u8fb9\u6846\u7684\u5c3a\u5ea6,\u4ec0\u4e48\u53c2\u6570\u4e0d\u4f20\u5165\u5c31\u53ef\u4ee5\u53d6\u6d88 plt . yticks (()) plt . show ()","title":"7.matplotlib scatter\u6563\u70b9\u56fe"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#8matplotlib-bar","text":"import matplotlib.pyplot as plt import numpy as np x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y ) plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , - y ) plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y , facecolor = '#9999ff' , edgecolor = 'white' ) #facecolor\u8bbe\u7f6e\u7684\u67f1\u5b50\u91cc\u9762\u7684\u989c\u8272,edgecolor\u8bbe\u7f6e\u7684\u662f\u67f1\u5b50\u8fb9\u6846\u7684\u989c\u8272 plt . show () x = np . arange ( 10 ) y = 2 ** x + 10 plt . bar ( x , y , facecolor = '#9999ff' , edgecolor = 'white' ) for x , y in zip ( x , y ): #\u4f7f\u7528for\u5faa\u73af\u7ed9\u67f1\u5b50\u4e0a\u52a0\u4e0a\u503c,zip\u7684\u610f\u601d\u662f\u5c06x\u548cy\u6253\u5305\u6210\u4e00\u4e2a\u6574\u4f53,\u6bcf\u6b21\u5faa\u73af\u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\u4e00\u4e2ax\u548cy plt . text ( x + 0.4 , y , ' %.2f ' % y , ha = 'center' , va = 'bottom' ) #ha\u4ee3\u8868\u663e\u793a\u5728\u67f1\u5b50\u4e2d\u5fc3,va=bottom\u8868\u793a\u67f1\u5b50\u5728\u6570\u5b57\u7684\u4e0b\u9762 plt . show ()","title":"8.matplotlib bar\u76f4\u65b9\u56fe"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#9matplotlib-contours","text":"import matplotlib.pyplot as plt import numpy as np def f ( x , y ): #\u5b9a\u4e49\u7684\u662fxy\u5bf9\u5e94\u7684\u9ad8\u5ea6 return ( 1 - x / 2 + x ** 5 + y ** 3 ) * np . exp ( - x ** 2 - y ** 2 ) x = np . linspace ( - 3 , 3 , 100 ) #\u6a2a\u5750\u6807 y = np . linspace ( - 3 , 3 , 100 ) #\u7eb5\u5750\u6807 X , Y = np . meshgrid ( x , y ) #\u751f\u6210\u4e00\u4e2a\u7f51\u683c plt . contourf ( X , Y , f ( X , Y ), 8 , alpha = 0.75 , cmap = plt . cm . hot ) #X,Y,\u9ad8\u5ea6\u51fd\u6570, 8\u662f\u7ebf\u7684\u4e2a\u6570 ,alpha\u662f\u900f\u660e\u5ea6,cmap\u662f\u989c\u8272,plt.cm.hot\u662f\u70ed\u529b\u56fe\u989c\u8272 # \u7ed9\u7b49\u9ad8\u7ebf\u52a0\u4e0a\u6846 C = plt . contour ( X , Y , f ( X , Y ), 8 , colors = 'black' , linewidth =. 5 ) plt . clabel ( C , inline = True , fontsize = 10 ) #\u7b49\u9ad8\u7ebf\u7684\u63cf\u8ff0 plt . xticks (()) plt . yticks (()) plt . show () /home/dlut/anaconda3/lib/python3.6/site-packages/matplotlib/contour.py:960: UserWarning: The following kwargs were not used by contour: 'linewidth' s)","title":"9.matplotlib contours\u7b49\u9ad8\u7ebf\u56fe"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#10matplotlib-3d","text":"import matplotlib.pyplot as plt import numpy as np from mpl_toolkits.mplot3d import Axes3D #\u5bfc\u5165\u7ed8\u52363D\u56fe\u7684\u5305 fig = plt . figure () # ax = Axes3D ( fig ) #\u5efa\u7acb\u4e00\u4e2a3d\u7684\u89c6\u56fe x = np . arange ( - 4 , 4 , 0.25 ) y = np . arange ( - 4 , 4 , 0.25 ) X , Y = np . meshgrid ( x , y ) #XY\u7684\u5750\u6807\u7f51\u683c R = np . sqrt ( X ** 2 + Y ** 2 ) Z = np . sin ( R ) #Z\u5750\u6807 ax . plot_surface ( X , Y , Z , rstride = 1 , cstride = 1 , cmap = plt . get_cmap ( 'rainbow' )) #\u7ed8\u52363D\u56fe\uff0cX\uff0cY\uff0cZ\uff0cx\u65b9\u5411\uff0cy\u65b9\u5411\u7684\u8272\u5757\u5927\u5c0f \uff0c\u989c\u8272\u662f\u5f69\u8679\u8272 ax . contourf ( X , Y , Z , zdir = 'z' , offset =- 2 , cmap = 'rainbow' ) # \u9700\u8981\u6620\u5c04\u7684\u65b9\u5411\u662fz\u65b9\u5411\uff08\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\uff09\uff0coffset\u6620\u5c04\u7684\u4f4d\u7f6e\u662f-2 ax . set_zlim ( - 2 , 2 ) plt . show ()","title":"10.matplotlib 3D\u56fe"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#11matplotlib-subplot","text":"import matplotlib.pyplot as plt import numpy as np plt . figure () plt . subplot ( 2 , 2 , 1 ) #\u7ed8\u5236\u540c\u7b49\u5927\u5c0f\u7684\u5b50\u56fe\u50cf plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 2 , 2 , 2 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 223 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 224 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . show () plt . figure () #\u7ed8\u5236\u4e0d\u540c\u5927\u5c0f\u7684\u5b50\u56fe plt . subplot ( 2 , 1 , 1 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 2 , 3 , 4 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 235 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . subplot ( 236 ) plt . plot ([ 0 , 1 ],[ 0 , 1 ]) plt . show ()","title":"11.matplotlib subplot \u5b50\u56fe\u50cf"},{"location":"python\u5b66\u4e60/039 matplotlib\u7ed8\u56fe\u7684\u4f7f\u7528/#12matplotlib","text":"import matplotlib.pyplot as plt import numpy as np from matplotlib import animation #\u5bfc\u5165\u7ed8\u5236\u52a8\u6001\u56fe\u7684\u5305 # \u9700\u8981\u4f7f\u7528ipython\u89c2\u770b fig , ax = plt . subplots () x = np . arange ( 0 , 2 * np . pi , 0.01 ) line , = ax . plot ( x , np . sin ( x )) #\u753b\u4e00\u6761\u7ebf\uff0c\u4e00\u5b9a\u6ce8\u610f\u8fd9\u6837\u7684\u4e00\u5b9a\u8981\u52a0\u9017\u53f7 def animate ( i ): line . set_ydata ( np . sin ( x + i / 10 )) return line , def init (): #\u521d\u59cb\u5316\u7684\u51fd\u6570 line . set_ydata ( np . sin ( x )) return line , ani = animation . FuncAnimation ( fig = fig , func = animate , init_func = init , interval = 200 ) #interval=200\u95f4\u9694\u7684\u6539\u53d8\u662f200ms plt . show ()","title":"12.matplotlib \u52a8\u6001\u56fe"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/","text":"7.1\u8fed\u4ee3\u5668 \u00b6 \u8fed\u4ee3\u662f\u8bbf\u95ee\u96c6\u5408\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5bf9\u8c61\u4ece\u96c6\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u8bbf\u95ee\uff0c\u76f4\u5230\u6240\u6709\u7684\u5143\u7d20\u88ab\u8bbf\u95ee\u5b8c\u7ed3\u675f\u3002\u8fed\u4ee3\u5668\u53ea\u80fd\u5f80\u524d\u4e0d\u4f1a\u540e\u9000\u3002 1. \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u00b6 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u53ef\u4ee5\u5bf9 list\u3001tuple\u3001str \u7b49\u7c7b\u578b\u7684\u6570\u636e\u4f7f\u7528 for...in... \u7684\u5faa\u73af\u8bed\u6cd5\u4ece\u5176\u4e2d\u4f9d\u6b21\u62ff\u5230\u6570\u636e\u8fdb\u884c\u4f7f\u7528\uff0c\u6211\u4eec\u628a\u8fd9\u6837\u7684\u8fc7\u7a0b\u79f0\u4e3a\u904d\u5386\uff0c\u4e5f\u53eb\u8fed\u4ee3\u3002 \u4f46\u662f\uff0c\u662f\u5426\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u653e\u5230 for...in... \u7684\u8bed\u53e5\u4e2d\uff0c\u7136\u540e\u8ba9 for...in... \u6bcf\u6b21\u4ece\u4e2d\u53d6\u51fa\u4e00\u6761\u6570\u636e\u4f9b\u6211\u4eec\u4f7f\u7528\uff0c\u5373\u4f9b\u6211\u4eec\u8fed\u4ee3\u5417\uff1f for i in 100 : print ( i ) Traceback ( most recent call last ): File \"<ipython-input-3-86150fa0c47d>\" , line 1 , in < module > for i in 100 : TypeError : 'int' object is not iterable # int\u6574\u578b\u4e0d\u662fiterable\uff0c\u5373int\u6574\u578b\u4e0d\u662f\u53ef\u4ee5\u8fed\u4ee3\u7684 # \u6211\u4eec\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5bb9\u5668MyList\u7528\u6765\u5b58\u653e\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7add\u65b9\u6cd5\u5411\u5176\u4e2d\u6dfb\u52a0\u6570\u636e class MyList ( object ): def __init__ ( self ): self . container = [] def add ( self , item ): self . container . append ( item ) mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) for num in mylist : print ( num ) ... Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > TypeError : 'MyList' object is not iterable >>> # MyList\u5bb9\u5668\u7684\u5bf9\u8c61\u4e5f\u662f\u4e0d\u80fd\u8fed\u4ee3\u7684 \u4f46\u662f\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027 ( \u6211\u4eec\u5b58\u6570\u636e\u5230\u7684\u5217\u8868\u4e2d\u662f\u53ef\u4ee5\u8fdb\u884c\u8fed\u4ee3\u7684 ) for num in mylist . container : print ( num ) \u6211\u4eec\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bb9\u5668\u7c7b\u578b MyList \uff0c\u5728\u5c06\u4e00\u4e2a\u5b58\u653e\u4e86\u591a\u4e2a\u6570\u636e\u7684 MyList \u5bf9\u8c61\u653e\u5230 for...in... \u7684\u8bed\u53e5\u4e2d\uff0c\u53d1\u73b0 for...in... \u5e76\u4e0d\u80fd\u4ece\u4e2d\u4f9d\u6b21\u53d6\u51fa\u4e00\u6761\u6570\u636e\u8fd4\u56de\u7ed9\u6211\u4eec\uff0c\u4e5f\u5c31\u8bf4\u6211\u4eec\u968f\u4fbf\u5c01\u88c5\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5b58\u653e\u591a\u6761\u6570\u636e\u7684\u7c7b\u578b\u5374\u5e76\u4e0d\u80fd\u88ab\u8fed\u4ee3\u4f7f\u7528\u3002 \u6211\u4eec\u628a\u53ef\u4ee5\u901a\u8fc7 for...in... \u8fd9\u7c7b\u8bed\u53e5\u8fed\u4ee3\u8bfb\u53d6\u4e00\u6761\u6570\u636e\u4f9b\u6211\u4eec\u4f7f\u7528\u7684\u5bf9\u8c61\u79f0\u4e4b\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61**\uff08Iterable)**\u3002 2. \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3 \u00b6 \u53ef\u4ee5\u4f7f\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f Iterable \u5bf9\u8c61\uff1a In [ 50 ]: from collections import Iterable #\u5bfc\u5165\u8fed\u4ee3\u7c7b In [ 51 ]: isinstance ([], Iterable ) Out [ 51 ]: True #\u5217\u8868\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 52 ]: isinstance ({}, Iterable ) Out [ 52 ]: True #\u5b57\u5178\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 53 ]: isinstance ( 'abc' , Iterable ) Out [ 53 ]: True #\u5b57\u7b26\u4e32\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 54 ]: isinstance ( mylist , Iterable ) Out [ 54 ]: False #\u81ea\u5df1\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e0d\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61(\u4e0d\u4e00\u5b9a) In [ 55 ]: isinstance ( 100 , Iterable ) Out [ 55 ]: False #\u6574\u5f62,\u6d6e\u70b9\u578b\u4e0d\u662f\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61 3. \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u672c\u8d28 \u00b6 \u6211\u4eec\u5206\u6790\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u8fed\u4ee3\u4f7f\u7528\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u6bcf\u8fed\u4ee3\u4e00\u6b21\uff08\u5373\u5728 for...in... \u4e2d\u6bcf\u5faa\u73af\u4e00\u6b21\uff09\u90fd\u4f1a\u8fd4\u56de\u5bf9\u8c61\u4e2d\u7684\u4e0b\u4e00\u6761\u6570\u636e\uff0c\u4e00\u76f4\u5411\u540e\u8bfb\u53d6\u6570\u636e\u76f4\u5230\u8fed\u4ee3\u4e86\u6240\u6709\u6570\u636e\u540e\u7ed3\u675f\u3002\u90a3\u4e48\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c31\u5e94\u8be5\u6709\u4e00\u4e2a \u201c\u4eba\u201d \u53bb\u8bb0\u5f55\u6bcf\u6b21\u8bbf\u95ee\u5230\u4e86\u7b2c\u51e0\u6761\u6570\u636e\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u8fed\u4ee3\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e0b\u4e00\u6761\u6570\u636e\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u80fd\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u6570\u636e\u8fed\u4ee3\u7684 \u201c\u4eba\u201d \u79f0\u4e3a\u8fed\u4ee3\u5668**(Iterator)**\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u672c\u8d28\u5c31\u662f\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8fd9\u6837\u7684 \u4e2d\u95f4\u201c\u4eba\u201d \u5373\u8fed\u4ee3\u5668\u5e2e\u52a9\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u904d\u5386\u4f7f\u7528\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u901a\u8fc7 __iter__ \u65b9\u6cd5\u5411\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u5728\u8fed\u4ee3\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5148\u83b7\u53d6\u8be5\u5bf9\u8c61\u63d0\u4f9b\u7684\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6765\u4f9d\u6b21\u83b7\u53d6\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e. \u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u5177\u5907\u4e86 __iter__ \u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 class MyList ( object ): def __init__ ( self ): self . container = [] def add ( self , item ): self . container . append ( item ) def __iter__ ( self ): #\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 # \u6211\u4eec\u6682\u65f6\u5ffd\u7565\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 pass mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) from collections import Iterable isinstance ( mylist , Iterable ) =============== Out [ 13 ]: True # \u8fd9\u56de\u6d4b\u8bd5\u53d1\u73b0\u6dfb\u52a0\u4e86__iter__\u65b9\u6cd5\u7684mylist\u5bf9\u8c61\u5df2\u7ecf\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e86 4. iter()\u51fd\u6570\u4e0enext()\u51fd\u6570 \u00b6 list\u3001tuple \u7b49\u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 iter() \u51fd\u6570\u83b7\u53d6\u8fd9\u4e9b\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u8fed\u4ee3\u5668\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5bf9\u83b7\u53d6\u5230\u7684\u8fed\u4ee3\u5668\u4e0d\u65ad\u4f7f\u7528 next() \u51fd\u6570\u6765\u83b7\u53d6\u4e0b\u4e00\u6761\u6570\u636e\u3002 iter() \u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528\u4e86\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684 __iter__ \u65b9\u6cd5\u3002 li = [ 11 , 22 , 33 ] li_iter = iter ( li ) next ( li_iter ) Out [ 16 ]: 11 next ( li_iter ) Out [ 17 ]: 22 next ( li_iter ) Out [ 18 ]: 33 next ( li_iter ) ============= Traceback ( most recent call last ): File \"<ipython-input-21-ab6a83f394a1>\" , line 1 , in < module > next ( li_iter ) StopIteration \u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5df2\u7ecf\u8fed\u4ee3\u5b8c\u6700\u540e\u4e00\u4e2a\u6570\u636e\u4e4b\u540e\uff0c\u518d\u6b21\u8c03\u7528next()\u51fd\u6570\u4f1a\u629b\u51faStopIteration\u7684\u5f02\u5e38\uff0c\u6765\u544a\u8bc9\u6211\u4eec\u6240\u6709\u6570\u636e\u90fd\u5df2\u8fed\u4ee3\u5b8c\u6210\uff0c\u4e0d\u7528\u518d\u6267\u884cnext()\u51fd\u6570\u4e86\u3002 5. \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u8fed\u4ee3\u5668(\u524d\u9762\u4ecb\u7ecd\u7684\u662f\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3),\u8fd9\u91cc\u662f\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u8fed\u4ee3\u5668,\u542b\u4e49\u662f\u4e0d\u4e00\u6837\u7684,\u4f7f\u7528\u7684\u5224\u65ad\u51fd\u6570\u4e5f\u4e0d\u4e00\u6837 \u00b6 \u53ef\u4ee5\u4f7f\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f Iterator \u5bf9\u8c61\uff1a In [ 56 ]: from collections import Iterator In [ 57 ]: isinstance ([], Iterator ) Out [ 57 ]: False In [ 58 ]: isinstance ( iter ([]), Iterator ) Out [ 58 ]: True In [ 59 ]: isinstance ( iter ( \"abc\" ), Iterator ) Out [ 59 ]: True 6. \u8fed\u4ee3\u5668Iterator \u00b6 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u8fed\u4ee3\u5668\u662f\u7528\u6765\u5e2e\u52a9\u6211\u4eec\u8bb0\u5f55\u6bcf\u6b21\u8fed\u4ee3\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e\uff0c\u5f53\u6211\u4eec\u5bf9\u8fed\u4ee3\u5668\u4f7f\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u8fed\u4ee3\u5668\u4f1a\u5411\u6211\u4eec\u8fd4\u56de\u5b83\u6240\u8bb0\u5f55\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u4f7f\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u5c31\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684 __next__ \u65b9\u6cd5\uff08Python3\u4e2d\u662f\u5bf9\u8c61\u7684 __next__ \u65b9\u6cd5\uff0cPython2\u4e2d\u662f\u5bf9\u8c61\u7684 next() \u65b9\u6cd5\uff09\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u60f3\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5c31\u8981\u5b9e\u73b0\u5b83\u7684 __next__ \u65b9\u6cd5\u3002\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0cpython\u8981\u6c42\u8fed\u4ee3\u5668\u672c\u8eab\u4e5f\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u4e3a\u8fed\u4ee3\u5668\u5b9e\u73b0 __iter__ \u65b9\u6cd5\uff0c\u800c __iter__ \u65b9\u6cd5\u8981\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u81ea\u8eab\u6b63\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8fed\u4ee3\u5668\u7684 __iter__ \u65b9\u6cd5\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\u3002 \u4e00\u4e2a\u5b9e\u73b0\u4e86 __iter__ \u65b9\u6cd5\u548c __next__ \u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u8fed\u4ee3\u5668\u3002 #\u5b9a\u4e49\u53ef\u8fed\u4ee3\u5bf9\u8c61 class MyList ( object ): \"\"\"\u81ea\u5b9a\u4e49\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\"\"\" def __init__ ( self ): self . items = [] def add ( self , val ): self . items . append ( val ) def __iter__ ( self ): #\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u5176\u5b9e\u5c31\u628amylist(\u8fed\u4ee3\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316)\u4f20\u9012\u7ed9\u4e86Myiterator myiterator = MyIterator ( self ) #\u4f7f\u7528\u4e0b\u9762\u7684\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f7f\u7528\u7684\u8fed\u4ee3\u5668(\u5b9e\u4f8b\u5316\u4e00\u4e2a\u8fed\u4ee3\u5668) return myiterator #\u8fd4\u56de\u8fd9\u4e2a\u4f7f\u7528\u7684\u8fed\u4ee3\u5668 #\u8fed\u4ee3\u5668 class MyIterator ( object ): \"\"\"\u81ea\u5b9a\u4e49\u7684\u4f9b\u4e0a\u9762\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f7f\u7528\u7684\u4e00\u4e2a\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , obj ): #\u8fd9\u91cc\u7684obj\u5c31\u662f\u5f15\u7528\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61,\u6bd4\u5982\u8bf4\u524d\u9762\u5efa\u7acb\u4e86\u4e00\u4e2amylist\u5bf9\u8c61,\u7136\u540e\u5728__iter__\u65b9\u6cd5\u4e2d\u8fd4\u56de\u7684\u662f\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61,\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2amylist\u4f20\u9012\u7ed9\u8fd9\u4e2aobj self . mylist = obj #\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u4e2a\u5bf9\u8c61 # current\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e self . current = 0 def __next__ ( self ): if self . current < len ( self . mylist . items ): item = self . mylist . items [ self . current ] #\u8fd9\u4e2a\u5c31\u662f\u53d6\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u5217\u8868\u7684\u503c self . current += 1 return item #\u6bcf\u6b21\u4f7f\u7528next()\u8fd4\u56de\u4e00\u4e2a\u503c else : raise StopIteration #\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\u544a\u8bc9for\u5faa\u73af\u8be5\u505c\u6b62\u4e86 def __iter__ ( self ): #\u8fed\u4ee3\u5668\u540c\u6837\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668,\u8fd4\u56de\u81ea\u8eab\u5373\u53ef return self #\u8fd4\u56de\u81ea\u8eab if __name__ == '__main__' : mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) mylist . add ( 4 ) mylist . add ( 5 ) for num in mylist : print ( num ) \u6267\u884c\u7ed3\u679c: 1 2 3 4 5 7. for...in...\u5faa\u73af\u7684\u672c\u8d28 \u00b6 for item in Iterable \u5faa\u73af\u7684\u672c\u8d28\u5c31\u662f\u5148\u901a\u8fc7 iter() \u51fd\u6570\u83b7\u53d6\u53ef\u8fed\u4ee3\u5bf9\u8c61 Iterable \u7684\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u5bf9\u83b7\u53d6\u5230\u7684\u8fed\u4ee3\u5668\u4e0d\u65ad\u8c03\u7528 next() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9 item \uff0c\u5f53\u9047\u5230 StopIteration \u7684\u5f02\u5e38\u540e\u5faa\u73af\u7ed3\u675f\u3002 8. \u8fed\u4ee3\u5668\u7684\u5e94\u7528\u573a\u666f \u00b6 \u6211\u4eec\u53d1\u73b0\u8fed\u4ee3\u5668\u6700\u6838\u5fc3\u7684\u529f\u80fd\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7 next() \u51fd\u6570\u7684\u8c03\u7528\u6765\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u503c\u3002\u5982\u679c\u6bcf\u6b21\u8fd4\u56de\u7684\u6570\u636e\u503c\u4e0d\u662f\u5728\u4e00\u4e2a\u5df2\u6709\u7684\u6570\u636e\u96c6\u5408\u4e2d\u8bfb\u53d6\u7684\uff0c\u800c\u662f\u901a\u8fc7\u7a0b\u5e8f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5f8b\u8ba1\u7b97\u751f\u6210\u7684\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u4e0d\u7528\u518d\u4f9d\u8d56\u4e00\u4e2a\u5df2\u6709\u7684\u6570\u636e\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7528\u518d\u5c06\u6240\u6709\u8981\u8fed\u4ee3\u7684\u6570\u636e\u90fd\u4e00\u6b21\u6027\u7f13\u5b58\u4e0b\u6765\u4f9b\u540e\u7eed\u4f9d\u6b21\u8bfb\u53d6\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5b58\u50a8\uff08\u5185\u5b58\uff09\u7a7a\u95f4\u3002 range ( 100000 ) Out [ 4 ]: range ( 0 , 100000 ) \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\uff0c\u6570\u5b66\u4e2d\u6709\u4e2a\u8457\u540d\u7684\u6590\u6ce2\u62c9\u5951\u6570\u5217 \uff08Fibonacci\uff09 \uff0c\u6570\u5217\u4e2d\u7b2c\u4e00\u4e2a\u6570\u4e3a0\uff0c\u7b2c\u4e8c\u4e2a\u6570\u4e3a1\uff0c\u5176\u540e\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ef\u7531\u524d\u4e24\u4e2a\u6570\u76f8\u52a0\u5f97\u5230\uff1a 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ... \u73b0\u5728\u6211\u4eec\u60f3\u8981\u901a\u8fc7 for...in... \u5faa\u73af\u6765\u904d\u5386\u8fed\u4ee3\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\u7684\u524d n \u4e2a\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668\u6765\u5b9e\u73b0\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u901a\u8fc7\u6570\u5b66\u8ba1\u7b97\u6765\u751f\u6210\u4e0b\u4e00\u4e2a\u6570\u3002 class FibIterator ( object ): \"\"\"\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , n ): \"\"\" :param n: int, \u6307\u660e\u751f\u6210\u6570\u5217\u7684\u524dn\u4e2a\u6570 \"\"\" self . n = n # current\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u751f\u6210\u5230\u6570\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a\u6570\u4e86 self . current = 0 # num1\u7528\u6765\u4fdd\u5b58\u524d\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u65700 self . num1 = 0 # num2\u7528\u6765\u4fdd\u5b58\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u65701 self . num2 = 1 def __next__ ( self ): \"\"\"\u88abnext()\u51fd\u6570\u8c03\u7528\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6570\"\"\" if self . current < self . n : num = self . num1 self . num1 , self . num2 = self . num2 , self . num1 + self . num2 self . current += 1 return num else : raise StopIteration def __iter__ ( self ): \"\"\"\u8fed\u4ee3\u5668\u7684__iter__\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\"\"\" return self if __name__ == '__main__' : fib = FibIterator ( 10 ) for num in fib : print ( num , end = \" \" ) 9. \u5e76\u4e0d\u662f\u53ea\u6709for\u5faa\u73af\u80fd\u63a5\u6536\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u00b6 \u9664\u4e86for\u5faa\u73af\u80fd\u63a5\u6536\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0clist\u3001tuple\u7b49\u4e5f\u80fd\u63a5\u6536\u3002 li = list ( FibIterator ( 15 )) #\u5176\u5b9e\u662f\u6328\u4e2a\u53d6\u503c\u5199\u5165\u5230\u4e86\u65b0\u7684\u5217\u8868\u4e2d,\u5728\u5143\u7ec4\u8ddf\u5217\u8868\u8fdb\u884c\u7c7b\u578b\u7684\u8f6c\u6362\u7684\u65f6\u5019\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406,\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u7c7b\u578b\u8f6c\u6362.\u800c\u662f\u4f1a\u76f8\u5f53\u4e8e\u8fed\u4ee3\u5668\u7684\u53d6\u503c\u8d4b\u503c print ( li ) tp = tuple ( FibIterator ( 6 )) print ( tp ) 7.2\u751f\u6210\u5668 \u00b6 1. \u751f\u6210\u5668 \u00b6 \u5229\u7528\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fed\u4ee3\u83b7\u53d6\u6570\u636e\uff08\u901a\u8fc7 next() \u65b9\u6cd5\uff09\u65f6\u6309\u7167\u7279\u5b9a\u7684\u89c4\u5f8b\u8fdb\u884c\u751f\u6210\u3002\u4f46\u662f\u6211\u4eec\u5728\u5b9e\u73b0\u4e00\u4e2a\u8fed\u4ee3\u5668\u65f6\uff0c\u5173\u4e8e\u5f53\u524d\u8fed\u4ee3\u5230\u7684\u72b6\u6001\u9700\u8981\u6211\u4eec\u81ea\u5df1\u8bb0\u5f55\uff0c\u8fdb\u800c\u624d\u80fd\u6839\u636e\u5f53\u524d\u72b6\u6001\u751f\u6210\u4e0b\u4e00\u4e2a\u6570\u636e\u3002\u4e3a\u4e86\u8fbe\u5230\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u914d\u5408 next() \u51fd\u6570\u8fdb\u884c\u8fed\u4ee3\u4f7f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u66f4\u7b80\u4fbf\u7684\u8bed\u6cd5\uff0c\u5373\u751f\u6210\u5668 (generator) \u3002\u751f\u6210\u5668\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002 2. \u521b\u5efa\u751f\u6210\u5668\u65b9\u6cd51 \u00b6 \u8981\u521b\u5efa\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u7684 [ ] \u6539\u6210 ( ) In [ 15 ]: L = [ x * 2 for x in range ( 5 )] #\u4f7f\u7528[]\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5217\u8868 In [ 16 ]: L Out [ 16 ]: [ 0 , 2 , 4 , 6 , 8 ] In [ 17 ]: G = ( x * 2 for x in range ( 5 )) #\u800c\u4f7f\u7528()\u751f\u6210\u7684\u5c31\u662f\u4e00\u4e2a\u751f\u6210\u5668 In [ 18 ]: G Out [ 18 ]: < generator object < genexpr > at 0x7f626c132db0 > \u521b\u5efa L \u548c G \u7684\u533a\u522b\u4ec5\u5728\u4e8e\u6700\u5916\u5c42\u7684 [ ] \u548c ( ) \uff0c L \u662f\u4e00\u4e2a\u5217\u8868\uff0c\u800c G \u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6253\u5370\u51fa\u5217\u8868L\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u5bf9\u4e8e\u751f\u6210\u5668G\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u6765\u4f7f\u7528\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7next()\u51fd\u6570\u3001for\u5faa\u73af\u3001list()\u7b49\u65b9\u6cd5\u4f7f\u7528\u3002 In [ 19 ]: next ( G ) Out [ 19 ]: 0 In [ 20 ]: next ( G ) Out [ 20 ]: 2 In [ 21 ]: next ( G ) Out [ 21 ]: 4 In [ 22 ]: next ( G ) Out [ 22 ]: 6 In [ 23 ]: next ( G ) Out [ 23 ]: 8 In [ 24 ]: next ( G ) --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 24 - 380e167 d6934 > in < module > () ----> 1 next ( G ) StopIteration : In [ 25 ]: In [ 26 ]: G = ( x * 2 for x in range ( 5 )) In [ 27 ]: for x in G : .... : print ( x ) .... : 0 2 4 6 8 3. \u521b\u5efa\u751f\u6210\u5668\u65b9\u6cd52 \u00b6 generator\u975e\u5e38\u5f3a\u5927\u3002\u5982\u679c\u63a8\u7b97\u7684\u7b97\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u7528\u7c7b\u4f3c\u5217\u8868\u751f\u6210\u5f0f\u7684 for \u5faa\u73af\u65e0\u6cd5\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8fd8\u53ef\u4ee5\u7528\u51fd\u6570\u6765\u5b9e\u73b0\u3002 \u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6765\u4e3e\u4f8b\uff0c\u56de\u60f3\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u7528\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a class FibIterator ( object ): \"\"\"\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , n ): \"\"\" :param n: int, \u6307\u660e\u751f\u6210\u6570\u5217\u7684\u524dn\u4e2a\u6570 \"\"\" self . n = n # current\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u751f\u6210\u5230\u6570\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a\u6570\u4e86 self . current = 0 # num1\u7528\u6765\u4fdd\u5b58\u524d\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u65700 self . num1 = 0 # num2\u7528\u6765\u4fdd\u5b58\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u65701 self . num2 = 1 def __next__ ( self ): \"\"\"\u88abnext()\u51fd\u6570\u8c03\u7528\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6570\"\"\" if self . current < self . n : num = self . num1 self . num1 , self . num2 = self . num2 , self . num1 + self . num2 self . current += 1 return num else : raise StopIteration def __iter__ ( self ): \"\"\"\u8fed\u4ee3\u5668\u7684__iter__\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\"\"\" return self \u6ce8\u610f\uff0c\u5728\u7528\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e2d\uff0c\u6211\u4eec\u8981\u501f\u52a9\u51e0\u4e2a\u53d8\u91cf(n\u3001current\u3001num1\u3001num2)\u6765\u4fdd\u5b58\u8fed\u4ee3\u7684\u72b6\u6001\u3002\u73b0\u5728\u6211\u4eec\u7528\u751f\u6210\u5668\u6765\u5b9e\u73b0\u4e00\u4e0b\u3002 \u4e0d\u4f7f\u7528\u751f\u6210\u5668\u51fd\u6570: def fib ( n ): current = 0 num1 , num2 = 0 , 1 while current < n : num = num1 print ( num ) num1 , num2 = num2 , num1 + num2 current += 1 # yield num # return 'done' \u6267\u884c: fib ( 10 ) 0 1 1 2 3 5 8 13 21 34 \u4f7f\u7528\u751f\u6210\u5668: def fib ( n ): current = 0 num1 , num2 = 0 , 1 while current < n : num = num1 num1 , num2 = num2 , num1 + num2 current += 1 yield num #\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6709yield\u8bed\u53e5,\u90a3\u4e48\u8fd9\u4e2a\u5c31\u4e0d\u5728\u662f\u51fd\u6570,\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u6a21\u677f return 'done' #\u5982\u679c\u5728\u8c03\u7528fib\u65f6,\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u6709yield,\u90a3\u4e48\u6b64\u65f6\u4e0d\u662f\u8c03\u7528\u4e00\u4e2a\u51fd\u6570,\u800c\u662f\u751f\u6210\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 a = fib ( 10 ) In [ 31 ]: F = fib ( 5 ) In [ 32 ]: next ( F ) Out [ 32 ]: 1 In [ 33 ]: next ( F ) Out [ 33 ]: 1 In [ 34 ]: next ( F ) Out [ 34 ]: 2 In [ 35 ]: next ( F ) Out [ 35 ]: 3 In [ 36 ]: next ( F ) Out [ 36 ]: 5 In [ 37 ]: next ( F ) --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 37 - 8 c2b02b4361a > in < module > () ----> 1 next ( F ) StopIteration : done \u5728\u4f7f\u7528\u751f\u6210\u5668\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e2d\uff0c\u6211\u4eec\u5c06\u539f\u672c\u5728\u8fed\u4ee3\u5668 __next__ \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u7684\u57fa\u672c\u903b\u8f91\u653e\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u5c06\u6bcf\u6b21\u8fed\u4ee3\u8fd4\u56de\u6570\u503c\u7684 return \u6362\u6210\u4e86 yield \uff0c\u6b64\u65f6\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u4fbf\u4e0d\u518d\u662f\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u4e86\u3002\u7b80\u5355\u6765\u8bf4\uff1a\u53ea\u8981\u5728 def \u4e2d\u6709 yield \u5173\u952e\u5b57\u7684 \u5c31\u79f0\u4e3a \u751f\u6210\u5668 \u6b64\u65f6\u6309\u7167\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f( \u6848\u4f8b\u4e2d\u4e3a F = fib(5) )\u4f7f\u7528\u751f\u6210\u5668\u5c31\u4e0d\u518d\u662f\u6267\u884c\u51fd\u6570\u4f53\u4e86\uff0c\u800c\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff08 \u6848\u4f8b\u4e2d\u4e3a F \uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167\u4f7f\u7528\u8fed\u4ee3\u5668\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u751f\u6210\u5668\u4e86\u3002 In [ 38 ]: for n in fib ( 5 ): .... : print ( n ) .... : 1 1 2 3 5 \u4f46\u662f\u7528for\u5faa\u73af\u8c03\u7528generator\u65f6\uff0c\u53d1\u73b0\u62ff\u4e0d\u5230generator\u7684return\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u60f3\u8981\u62ff\u5230\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u6355\u83b7 StopIteration \u9519\u8bef\uff0c\u8fd4\u56de\u503c\u5305\u542b\u5728 StopIteration \u7684 value \u4e2d\uff1a In [ 39 ]: g = fib ( 5 ) In [ 40 ]: while True : .... : try : .... : x = next ( g ) .... : print ( \"value: %d \" % x ) .... : except StopIteration as e : .... : print ( \"\u751f\u6210\u5668\u8fd4\u56de\u503c: %s \" % e . value ) .... : break .... : value : 1 value : 1 value : 2 value : 3 value : 5 \u751f\u6210\u5668\u8fd4\u56de\u503c : done \u603b\u7ed3 \u00b6 \u4f7f\u7528\u4e86yield\u5173\u952e\u5b57\u7684\u51fd\u6570\u4e0d\u518d\u662f\u51fd\u6570\uff0c\u800c\u662f\u751f\u6210\u5668\u3002\uff08\u4f7f\u7528\u4e86yield\u7684\u51fd\u6570\u5c31\u662f\u751f\u6210\u5668\uff09 yield\u5173\u952e\u5b57\u6709\u4e24\u70b9\u4f5c\u7528\uff1a \u4fdd\u5b58\u5f53\u524d\u8fd0\u884c\u72b6\u6001\uff08\u65ad\u70b9\uff09\uff0c\u7136\u540e\u6682\u505c\u6267\u884c\uff0c\u5373\u5c06\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\u6302\u8d77 \u5c06yield\u5173\u952e\u5b57\u540e\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u6b64\u65f6\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d77\u5230\u4e86return\u7684\u4f5c\u7528 \u53ef\u4ee5\u4f7f\u7528next()\u51fd\u6570\u8ba9\u751f\u6210\u5668\u4ece\u65ad\u70b9\u5904\u7ee7\u7eed\u6267\u884c\uff0c\u5373\u5524\u9192\u751f\u6210\u5668\uff08\u51fd\u6570\uff09 Python3\u4e2d\u7684\u751f\u6210\u5668\u53ef\u4ee5\u4f7f\u7528return\u8fd4\u56de\u6700\u7ec8\u8fd0\u884c\u7684\u8fd4\u56de\u503c\uff0c\u800cPython2\u4e2d\u7684\u751f\u6210\u5668\u4e0d\u5141\u8bb8\u4f7f\u7528return\u8fd4\u56de\u4e00\u4e2a\u8fd4\u56de\u503c\uff08\u5373\u53ef\u4ee5\u4f7f\u7528return\u4ece\u751f\u6210\u5668\u4e2d\u9000\u51fa\uff0c\u4f46return\u540e\u4e0d\u80fd\u6709\u4efb\u4f55\u8868\u8fbe\u5f0f\uff09\u3002 4. \u4f7f\u7528send\u5524\u9192 \u00b6 \u6211\u4eec\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528 next() \u51fd\u6570\u6765\u5524\u9192\u751f\u6210\u5668\u7ee7\u7eed\u6267\u884c\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 send() \u51fd\u6570\u6765\u5524\u9192\u6267\u884c\u3002\u4f7f\u7528 send() \u51fd\u6570\u7684\u4e00\u4e2a\u597d\u5904\u662f\u53ef\u4ee5\u5728\u5524\u9192\u7684\u540c\u65f6\u5411\u65ad\u70b9\u5904\u4f20\u5165\u4e00\u4e2a\u9644\u52a0\u6570\u636e\u3002 \u4f8b\u5b50\uff1a\u6267\u884c\u5230 yield \u65f6\uff0c gen \u51fd\u6570\u4f5c\u7528\u6682\u65f6\u4fdd\u5b58\uff0c\u8fd4\u56de i \u7684\u503c; temp \u63a5\u6536\u4e0b\u6b21 c.send(\"python\") \uff0c send \u53d1\u9001\u8fc7\u6765\u7684\u503c\uff0c c.next( )\u7b49\u4ef7 c.send(None) def gen (): i = 0 while i < 5 : temp = yield i print ( temp ) #\u8fd9\u91cc\u4f7f\u7528send\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u8fd4\u56de\u503c i += 1 \u4f7f\u7528send(\u7b2c\u4e00\u6b21\u4e0d\u80fd\u4f7f\u7528,\u6ca1\u6709\u4eba\u63a5\u6536\u503c) In [ 43 ]: f = gen () In [ 44 ]: next ( f ) Out [ 44 ]: 0 In [ 45 ]: f . send ( 'haha' ) haha Out [ 45 ]: 1 In [ 46 ]: next ( f ) None Out [ 46 ]: 2 In [ 47 ]: f . send ( 'haha' ) haha Out [ 47 ]: 3 In [ 48 ]: \u4f7f\u7528next\u51fd\u6570 In [ 11 ]: f = gen () In [ 12 ]: next ( f ) Out [ 12 ]: 0 In [ 13 ]: next ( f ) None Out [ 13 ]: 1 In [ 14 ]: next ( f ) None Out [ 14 ]: 2 In [ 15 ]: next ( f ) None Out [ 15 ]: 3 In [ 16 ]: next ( f ) None Out [ 16 ]: 4 In [ 17 ]: next ( f ) None --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 17 - 468 f0afdf1b9 > in < module > () ----> 1 next ( f ) StopIteration : \u4f7f\u7528 __next__() \u65b9\u6cd5\uff08\u4e0d\u5e38\u4f7f\u7528\uff09 In [ 18 ]: f = gen () In [ 19 ]: f . __next__ () Out [ 19 ]: 0 In [ 20 ]: f . __next__ () None Out [ 20 ]: 1 In [ 21 ]: f . __next__ () None Out [ 21 ]: 2 In [ 22 ]: f . __next__ () None Out [ 22 ]: 3 In [ 23 ]: f . __next__ () None Out [ 23 ]: 4 In [ 24 ]: f . __next__ () None --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 24 - 39 ec527346a9 > in < module > () ----> 1 f . __next__ () StopIteration : \u603b\u7ed3 \u00b6 \u8fed\u4ee3\u5668\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u7684\u7a7a\u95f4 \u751f\u6210\u5668\u53ef\u4ee5\u662f\u51fd\u6570\u6682\u65f6\u505c\u6b62\u6267\u884c,\u4f7f\u7528next\u65b9\u6cd5\u7ee7\u7eed\u6267\u884c 7.3\u534f\u7a0b-yield \u00b6 \u534f\u7a0b\uff0c\u53c8\u79f0\u5fae\u7ebf\u7a0b\uff0c\u7ea4\u7a0b\u3002\u82f1\u6587\u540d Coroutine \u3002 \u534f\u7a0b\u662f\u5565 \u00b6 \u534f\u7a0b\u662fpython\u4e2a\u4e2d\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u591a\u4efb\u52a1\u7684\u65b9\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u7ebf\u7a0b\u66f4\u5c0f\u5360\u7528\u66f4\u5c0f\u6267\u884c\u5355\u5143\uff08\u7406\u89e3\u4e3a\u9700\u8981\u7684\u8d44\u6e90\uff09\u3002 \u4e3a\u5565\u8bf4\u5b83\u662f\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u56e0\u4e3a\u5b83\u81ea\u5e26CPU\u4e0a\u4e0b\u6587\u3002\u8fd9\u6837\u53ea\u8981\u5728\u5408\u9002\u7684\u65f6\u673a\uff0c \u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u534f\u7a0b \u5207\u6362\u5230\u53e6\u4e00\u4e2a\u534f\u7a0b\u3002 \u53ea\u8981\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u6216\u6062\u590d CPU\u4e0a\u4e0b\u6587\u90a3\u4e48\u7a0b\u5e8f\u8fd8\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002 \u901a\u4fd7\u7684\u7406\u89e3\uff1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u67d0\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u4e00\u4e9b\u4e34\u65f6\u53d8\u91cf\u7b49\u4fe1\u606f\uff0c\u7136\u540e\u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\u6267\u884c\uff0c\u6ce8\u610f\u4e0d\u662f\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u505a\u5230\u7684\uff0c\u5e76\u4e14\u5207\u6362\u7684\u6b21\u6570\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u518d\u5207\u6362\u5230\u539f\u6765\u7684\u51fd\u6570\u90fd\u7531\u5f00\u53d1\u8005\u81ea\u5df1\u786e\u5b9a \u534f\u7a0b\u548c\u7ebf\u7a0b\u5dee\u5f02 \u00b6 \u5728\u5b9e\u73b0\u591a\u4efb\u52a1\u65f6, \u7ebf\u7a0b\u5207\u6362\u4ece\u7cfb\u7edf\u5c42\u9762\u8fdc\u4e0d\u6b62\u4fdd\u5b58\u548c\u6062\u590d CPU\u4e0a\u4e0b\u6587\u8fd9\u4e48\u7b80\u5355\u3002 \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u9ad8\u6548\u6027\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7f13\u5b58Cache\u7b49\u7b49\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u4f1a\u5e2e\u4f60\u505a\u8fd9\u4e9b\u6570\u636e\u7684\u6062\u590d\u64cd\u4f5c\u3002 \u6240\u4ee5\u7ebf\u7a0b\u7684\u5207\u6362\u975e\u5e38\u8017\u6027\u80fd\u3002\u4f46\u662f\u534f\u7a0b\u7684\u5207\u6362\u53ea\u662f\u5355\u7eaf\u7684\u64cd\u4f5cCPU\u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u4e00\u79d2\u949f\u5207\u6362\u4e2a\u4e0a\u767e\u4e07\u6b21\u7cfb\u7edf\u90fd\u6297\u7684\u4f4f\u3002 \u7b80\u5355\u5b9e\u73b0\u534f\u7a0b \u00b6 \u5982\u679c\u4e0d\u52a0yield\u90a3\u4e48\u56e0\u4e3a\u662f\u6b7b\u5faa\u73af\u90a3\u4e48\u5c31\u4f1a\u5728work\u4e2d\u8df3\u4e0d\u51fa\u6765\u4e86 import time def work1 (): while True : print ( \"----work1---\" ) yield time . sleep ( 0.5 ) def work2 (): while True : print ( \"----work2---\" ) yield time . sleep ( 0.5 ) def main (): w1 = work1 () w2 = work2 () while True : next ( w1 ) next ( w2 ) if __name__ == \"__main__\" : main () \u8fd0\u884c\u7ed3\u679c\uff1a ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ... \u7701\u7565 ... 7.4\u534f\u7a0b-greenlet(\u4e00\u822c\u4e0d\u7528) \u00b6 \u4e3a\u4e86\u66f4\u597d\u4f7f\u7528\u534f\u7a0b\u6765\u5b8c\u6210\u591a\u4efb\u52a1\uff0cpython\u4e2d\u7684 greenlet \u6a21\u5757\u5bf9\u5176\u5c01\u88c5\uff0c\u4ece\u800c\u4f7f\u5f97\u5207\u6362\u4efb\u52a1\u53d8\u7684\u66f4\u52a0\u7b80\u5355 #coding=utf-8 from greenlet import greenlet import time def test1 (): while True : print \"---A--\" gr2 . switch () time . sleep ( 0.5 ) def test2 (): while True : print \"---B--\" gr1 . switch () time . sleep ( 0.5 ) gr1 = greenlet ( test1 ) gr2 = greenlet ( test2 ) #\u5207\u6362\u5230gr1\u4e2d\u8fd0\u884c gr1 . switch () 7.5\u534f\u7a0b-gevent(\u5e38\u7528) \u00b6 greenlet \u5df2\u7ecf\u5b9e\u73b0\u4e86\u534f\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fd8\u7684\u4eba\u5de5\u5207\u6362\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u592a\u9ebb\u70e6\u4e86\uff0c\u4e0d\u8981\u6349\u6025\uff0cpython\u8fd8\u6709\u4e00\u4e2a\u6bd4 greenlet \u66f4\u5f3a\u5927\u7684\u5e76\u4e14\u80fd\u591f\u81ea\u52a8\u5207\u6362\u4efb\u52a1\u7684\u6a21\u5757 gevent \u5176\u539f\u7406\u662f\u5f53\u4e00\u4e2a greenlet \u9047\u5230 IO (\u6307\u7684\u662f input output \u8f93\u5165\u8f93\u51fa\uff0c\u6bd4\u5982\u7f51\u7edc\u3001\u6587\u4ef6\u64cd\u4f5c\u7b49)\u64cd\u4f5c\u65f6\uff0c\u6bd4\u5982\u8bbf\u95ee\u7f51\u7edc\uff0c\u5c31\u81ea\u52a8\u5207\u6362\u5230\u5176\u4ed6\u7684 greenlet \uff0c\u7b49\u5230 IO \u64cd\u4f5c\u5b8c\u6210\uff0c\u518d\u5728\u9002\u5f53\u7684\u65f6\u5019\u5207\u6362\u56de\u6765\u7ee7\u7eed\u6267\u884c\u3002 \u7531\u4e8e IO \u64cd\u4f5c\u975e\u5e38\u8017\u65f6\uff0c\u7ecf\u5e38\u4f7f\u7a0b\u5e8f\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u6709\u4e86 gevent \u4e3a\u6211\u4eec\u81ea\u52a8\u5207\u6362\u534f\u7a0b\uff0c\u5c31\u4fdd\u8bc1\u603b\u6709 greenlet \u5728\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u5f85 IO (\u6709\u5ef6\u65f6\u5c31\u5207\u6362) \u5b89\u88c5: pip3 install gevent 1. gevent\u7684\u4f7f\u7528 \u00b6 import gevent def f ( n ): for i in range ( n ): print ( gevent . getcurrent (), i ) g1 = gevent . spawn ( f , 5 ) g2 = gevent . spawn ( f , 5 ) g3 = gevent . spawn ( f , 5 ) g1 . join () g2 . join () g3 . join () \u8fd0\u884c\u7ed3\u679c < Greenlet at 0x10e49f550 : f ( 5 ) > 0 < Greenlet at 0x10e49f550 : f ( 5 ) > 1 < Greenlet at 0x10e49f550 : f ( 5 ) > 2 < Greenlet at 0x10e49f550 : f ( 5 ) > 3 < Greenlet at 0x10e49f550 : f ( 5 ) > 4 < Greenlet at 0x10e49f910 : f ( 5 ) > 0 < Greenlet at 0x10e49f910 : f ( 5 ) > 1 < Greenlet at 0x10e49f910 : f ( 5 ) > 2 < Greenlet at 0x10e49f910 : f ( 5 ) > 3 < Greenlet at 0x10e49f910 : f ( 5 ) > 4 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 0 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 1 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 2 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 3 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 4 \u53ef\u4ee5\u770b\u5230\uff0c3\u4e2agreenlet\u662f\u4f9d\u6b21\u8fd0\u884c\u800c\u4e0d\u662f\u4ea4\u66ff\u8fd0\u884c 2. gevent\u5207\u6362\u6267\u884c \u00b6 import gevent def f ( n ): for i in range ( n ): print ( gevent . getcurrent (), i ) #\u7528\u6765\u6a21\u62df\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u6ce8\u610f\u4e0d\u662ftime\u6a21\u5757\u4e2d\u7684sleep gevent . sleep ( 1 ) #\u6ce8\u610f\u8fd9\u91cc\u7684\u5ef6\u65f6\u4e0d\u662f\u7528\u7684time.sleep() g1 = gevent . spawn ( f , 5 ) g2 = gevent . spawn ( f , 5 ) g3 = gevent . spawn ( f , 5 ) g1 . join () g2 . join () g3 . join () \u8fd0\u884c\u7ed3\u679c < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 4 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 4 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 4 3. \u7ed9\u7a0b\u5e8f\u6253\u8865\u4e01(\u4e0d\u4f7f\u7528gevent\u7684\u5ef6\u65f6\u51fd\u6570) \u00b6 from gevent import monkey import gevent import random import time def coroutine_work ( coroutine_name ): for i in range ( 10 ): print ( coroutine_name , i ) time . sleep ( random . random ()) gevent . joinall ([ gevent . spawn ( coroutine_work , \"work1\" ), gevent . spawn ( coroutine_work , \"work2\" ) ]) \u8fd0\u884c\u7ed3\u679c work1 0 work1 1 work1 2 work1 3 work1 4 work1 5 work1 6 work1 7 work1 8 work1 9 work2 0 work2 1 work2 2 work2 3 work2 4 work2 5 work2 6 work2 7 work2 8 work2 9 from gevent import monkey import gevent import random import time # \u6709\u8017\u65f6\u64cd\u4f5c\u65f6\u9700\u8981 monkey . patch_all () # \u5c06\u7a0b\u5e8f\u4e2d\u7528\u5230\u7684\u8017\u65f6\u64cd\u4f5c\u7684\u4ee3\u7801\uff0c\u6362\u4e3agevent\u4e2d\u81ea\u5df1\u5b9e\u73b0\u7684\u6a21\u5757 def coroutine_work ( coroutine_name ): for i in range ( 10 ): print ( coroutine_name , i ) time . sleep ( random . random ()) gevent . joinall ([ gevent . spawn ( coroutine_work , \"work1\" ), gevent . spawn ( coroutine_work , \"work2\" ) ]) #\u6dfb\u52a0\u6240\u6709\u7684\u643a\u7a0b\u4efb\u52a1(\u66f4\u65b9\u4fbf) \u8fd0\u884c\u7ed3\u679c work1 0 work2 0 work1 1 work1 2 work1 3 work2 1 work1 4 work2 2 work1 5 work2 3 work1 6 work1 7 work1 8 work2 4 work2 5 work1 9 work2 6 work2 7 work2 8 work2 9 7.6\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\u5bf9\u6bd4 \u00b6 \u8bf7\u4ed4\u7ec6\u7406\u89e3\u5982\u4e0b\u7684\u901a\u4fd7\u63cf\u8ff0 \u00b6 \u6709\u4e00\u4e2a\u8001\u677f\u60f3\u8981\u5f00\u4e2a\u5de5\u5382\u8fdb\u884c\u751f\u4ea7\u67d0\u4ef6\u5546\u54c1\uff08\u4f8b\u5982\u526a\u5b50\uff09 \u4ed6\u9700\u8981\u82b1\u4e00\u4e9b\u8d22\u529b\u7269\u529b\u5236\u4f5c\u4e00\u6761\u751f\u4ea7\u7ebf\uff0c\u8fd9\u4e2a\u751f\u4ea7\u7ebf\u4e0a\u6709\u5f88\u591a\u7684\u5668\u4ef6\u4ee5\u53ca\u6750\u6599\u8fd9\u4e9b\u6240\u6709\u7684 \u4e3a\u4e86\u80fd\u591f\u751f\u4ea7\u526a\u5b50\u800c\u51c6\u5907\u7684\u8d44\u6e90\u79f0\u4e4b\u4e3a\uff1a\u8fdb\u7a0b \u53ea\u6709\u751f\u4ea7\u7ebf\u662f\u4e0d\u80fd\u591f\u8fdb\u884c\u751f\u4ea7\u7684\uff0c\u6240\u4ee5\u8001\u677f\u7684\u627e\u4e2a\u5de5\u4eba\u6765\u8fdb\u884c\u751f\u4ea7\uff0c\u8fd9\u4e2a\u5de5\u4eba\u80fd\u591f\u5229\u7528\u8fd9\u4e9b\u6750\u6599\u6700\u7ec8\u4e00\u6b65\u6b65\u7684\u5c06\u526a\u5b50\u505a\u51fa\u6765\uff0c\u8fd9\u4e2a\u6765\u505a\u4e8b\u60c5\u7684\u5de5\u4eba\u79f0\u4e4b\u4e3a\uff1a\u7ebf\u7a0b \u8fd9\u4e2a\u8001\u677f\u4e3a\u4e86\u63d0\u9ad8\u751f\u4ea7\u7387\uff0c\u60f3\u52303\u79cd\u529e\u6cd5\uff1a \u5728\u8fd9\u6761\u751f\u4ea7\u7ebf\u4e0a\u591a\u62db\u4e9b\u5de5\u4eba\uff0c\u4e00\u8d77\u6765\u505a\u526a\u5b50\uff0c\u8fd9\u6837\u6548\u7387\u662f\u6210\u500d\u5897\u957f\uff0c\u5373\u5355\u8fdb\u7a0b \u591a\u7ebf\u7a0b\u65b9\u5f0f \u8001\u677f\u53d1\u73b0\u8fd9\u6761\u751f\u4ea7\u7ebf\u4e0a\u7684\u5de5\u4eba\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff0c\u56e0\u4e3a\u4e00\u6761\u751f\u4ea7\u7ebf\u7684\u8d44\u6e90\u4ee5\u53ca\u6750\u6599\u6bd5\u7adf\u6709\u9650\uff0c\u6240\u4ee5\u8001\u677f\u53c8\u82b1\u4e86\u4e9b\u8d22\u529b\u7269\u529b\u8d2d\u7f6e\u4e86\u53e6\u5916\u4e00\u6761\u751f\u4ea7\u7ebf\uff0c\u7136\u540e\u518d\u62db\u4e9b\u5de5\u4eba\u8fd9\u6837\u6548\u7387\u53c8\u518d\u4e00\u6b65\u63d0\u9ad8\u4e86\uff0c\u5373\u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b\u65b9\u5f0f \u8001\u677f\u53d1\u73b0\uff0c\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u6761\u751f\u4ea7\u7ebf\uff0c\u5e76\u4e14\u6bcf\u6761\u751f\u4ea7\u7ebf\u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u5de5\u4eba\u4e86\uff08\u5373\u7a0b\u5e8f\u662f\u591a\u8fdb\u7a0b\u7684\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u53c8\u6709\u591a\u4e2a\u7ebf\u7a0b\uff09\uff0c\u4e3a\u4e86\u518d\u6b21\u63d0\u9ad8\u6548\u7387\uff0c\u8001\u677f\u60f3\u4e86\u4e2a\u635f\u62db\uff0c\u89c4\u5b9a\uff1a\u5982\u679c\u67d0\u4e2a\u5458\u5de5\u5728\u4e0a\u73ed\u65f6\u4e34\u65f6\u6ca1\u4e8b\u6216\u8005\u518d\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\uff08\u6bd4\u5982\u7b49\u5f85\u53e6\u4e00\u4e2a\u5de5\u4eba\u751f\u4ea7\u5b8c\u8c0b\u9053\u5de5\u5e8f \u4e4b\u540e\u4ed6\u624d\u80fd\u518d\u6b21\u5de5\u4f5c\uff09 \uff0c\u90a3\u4e48\u8fd9\u4e2a\u5458\u5de5\u5c31\u5229\u7528\u8fd9\u4e2a\u65f6\u95f4\u53bb\u505a\u5176\u5b83\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8fd9\u4e2a\u65f6\u95f4\u53bb\u505a\u5176\u5b83\u4e8b\u60c5\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f\uff1a\u534f\u7a0b\u65b9\u5f0f \u7b80\u5355\u603b\u7ed3 \u00b6 \u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u5355\u4f4d 2.\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\u5355\u4f4d 3.\u8fdb\u7a0b\u5207\u6362\u9700\u8981\u7684\u8d44\u6e90\u5f88\u6700\u5927\uff0c\u6548\u7387\u5f88\u4f4e 4.\u7ebf\u7a0b\u5207\u6362\u9700\u8981\u7684\u8d44\u6e90\u4e00\u822c\uff0c\u6548\u7387\u4e00\u822c\uff08\u5f53\u7136\u4e86\u5728\u4e0d\u8003\u8651GIL\u7684\u60c5\u51b5\u4e0b\uff09 5.\u534f\u7a0b\u5207\u6362\u4efb\u52a1\u8d44\u6e90\u5f88\u5c0f\uff0c\u6548\u7387\u9ad8 6.\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u6839\u636ecpu\u6838\u6570\u4e0d\u4e00\u6837\u53ef\u80fd\u662f\u5e76\u884c\u7684\uff0c\u4f46\u662f\u534f\u7a0b\u662f\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d \u6240\u4ee5\u662f\u5e76\u53d1 7.7\u5e76\u53d1\u4e0b\u8f7d\u5668 \u00b6 \u5e76\u53d1\u4e0b\u8f7d\u539f\u7406 \u00b6 from gevent import monkey import gevent import urllib.request # \u6709\u8017\u65f6\u64cd\u4f5c\u65f6\u9700\u8981 monkey . patch_all () def my_downLoad ( url ): print ( 'GET: %s ' % url ) resp = urllib . request . urlopen ( url ) #\u6253\u5f00\u8fd9\u4e2aurl data = resp . read () #\u8bfb\u53d6\u7684\u662f\u56fe\u7247\u7684\u5185\u5bb9 print ( ' %d bytes received from %s .' % ( len ( data ), url )) gevent . joinall ([ gevent . spawn ( my_downLoad , 'http://www.baidu.com/' ), gevent . spawn ( my_downLoad , 'http://www.itcast.cn/' ), gevent . spawn ( my_downLoad , 'http://www.itheima.com/' ), ]) \u8fd0\u884c\u7ed3\u679c GET : http : // www . baidu . com / GET : http : // www . itcast . cn / GET : http : // www . itheima . com / 111327 bytes received from http : // www . baidu . com /. 172054 bytes received from http : // www . itheima . com /. 215035 bytes received from http : // www . itcast . cn /. \u4ece\u4e0a\u80fd\u591f\u770b\u5230\u662f\u5148\u53d1\u9001\u7684\u83b7\u53d6baidu\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u7136\u540e\u4f9d\u6b21\u662fitcast\u3001itheima\uff0c\u4f46\u662f\u6536\u5230\u6570\u636e\u7684\u5148\u540e\u987a\u5e8f\u4e0d\u4e00\u5b9a\u4e0e\u53d1\u9001\u987a\u5e8f\u76f8\u540c\uff0c\u8fd9\u4e5f\u5c31\u4f53\u73b0\u51fa\u4e86\u5f02\u6b65\uff0c\u5373\u4e0d\u786e\u5b9a\u4ec0\u4e48\u65f6\u5019\u4f1a\u6536\u5230\u6570\u636e\uff0c\u987a\u5e8f\u4e0d\u4e00\u5b9a \u5b9e\u73b0\u591a\u4e2a\u89c6\u9891\u4e0b\u8f7d \u00b6 from gevent import monkey import gevent import urllib.request #\u6709IO\u624d\u505a\u65f6\u9700\u8981\u8fd9\u4e00\u53e5 monkey . patch_all () def my_downLoad ( file_name , url ): print ( 'GET: %s ' % url ) resp = urllib . request . urlopen ( url ) data = resp . read () with open ( file_name , \"wb\" ) as f : f . write ( data ) print ( ' %d bytes received from %s .' % ( len ( data ), url )) gevent . joinall ([ gevent . spawn ( my_downLoad , \"1.mp4\" , 'http://oo52bgdsl.bkt.clouddn.com/05day-08- %E 3 %80% 90 %E 7 %90% 86 %E 8%A7%A3 %E 3 %80% 91 %E 5 %87% BD %E 6 %95% B0 %E 4%BD%BF %E 7 %94% A8 %E 6 %80% BB %E 7%BB %93% EF%BC %88% E4%B8 %80% EF%BC%89.mp4' ), gevent . spawn ( my_downLoad , \"2.mp4\" , 'http://oo52bgdsl.bkt.clouddn.com/05day-03- %E 3 %80% 90 %E 6 %8E %8C %E 6 %8F %A1 %E 3 %80% 91 %E 6 %97% A0 %E 5 %8F%82% E6 %95% B0 %E 6 %97% A0 %E 8%BF %94% E5%9B %9E%E 5 %80% BC %E 5 %87% BD %E 6 %95% B0 %E 7%9A %84% E5%AE%9A %E 4%B9 %89% E3 %80% 81 %E 8%B0 %83% E7 %94% A8 %28% E4%B8%8B%29.mp4' ), ]) \u4e0a\u9762\u7684url\u53ef\u4ee5\u6362\u4e3a\u81ea\u5df1\u9700\u8981\u4e0b\u8f7d\u89c6\u9891\u3001\u97f3\u4e50\u3001\u56fe\u7247\u7b49\u7f51\u5740","title":"040 python\u591a\u4efb\u52a1\u534f\u7a0b"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#71","text":"\u8fed\u4ee3\u662f\u8bbf\u95ee\u96c6\u5408\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u5bf9\u8c61\u4ece\u96c6\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u8bbf\u95ee\uff0c\u76f4\u5230\u6240\u6709\u7684\u5143\u7d20\u88ab\u8bbf\u95ee\u5b8c\u7ed3\u675f\u3002\u8fed\u4ee3\u5668\u53ea\u80fd\u5f80\u524d\u4e0d\u4f1a\u540e\u9000\u3002","title":"7.1\u8fed\u4ee3\u5668"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#1","text":"\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u53ef\u4ee5\u5bf9 list\u3001tuple\u3001str \u7b49\u7c7b\u578b\u7684\u6570\u636e\u4f7f\u7528 for...in... \u7684\u5faa\u73af\u8bed\u6cd5\u4ece\u5176\u4e2d\u4f9d\u6b21\u62ff\u5230\u6570\u636e\u8fdb\u884c\u4f7f\u7528\uff0c\u6211\u4eec\u628a\u8fd9\u6837\u7684\u8fc7\u7a0b\u79f0\u4e3a\u904d\u5386\uff0c\u4e5f\u53eb\u8fed\u4ee3\u3002 \u4f46\u662f\uff0c\u662f\u5426\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u653e\u5230 for...in... \u7684\u8bed\u53e5\u4e2d\uff0c\u7136\u540e\u8ba9 for...in... \u6bcf\u6b21\u4ece\u4e2d\u53d6\u51fa\u4e00\u6761\u6570\u636e\u4f9b\u6211\u4eec\u4f7f\u7528\uff0c\u5373\u4f9b\u6211\u4eec\u8fed\u4ee3\u5417\uff1f for i in 100 : print ( i ) Traceback ( most recent call last ): File \"<ipython-input-3-86150fa0c47d>\" , line 1 , in < module > for i in 100 : TypeError : 'int' object is not iterable # int\u6574\u578b\u4e0d\u662fiterable\uff0c\u5373int\u6574\u578b\u4e0d\u662f\u53ef\u4ee5\u8fed\u4ee3\u7684 # \u6211\u4eec\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5bb9\u5668MyList\u7528\u6765\u5b58\u653e\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7add\u65b9\u6cd5\u5411\u5176\u4e2d\u6dfb\u52a0\u6570\u636e class MyList ( object ): def __init__ ( self ): self . container = [] def add ( self , item ): self . container . append ( item ) mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) for num in mylist : print ( num ) ... Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > TypeError : 'MyList' object is not iterable >>> # MyList\u5bb9\u5668\u7684\u5bf9\u8c61\u4e5f\u662f\u4e0d\u80fd\u8fed\u4ee3\u7684 \u4f46\u662f\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027 ( \u6211\u4eec\u5b58\u6570\u636e\u5230\u7684\u5217\u8868\u4e2d\u662f\u53ef\u4ee5\u8fdb\u884c\u8fed\u4ee3\u7684 ) for num in mylist . container : print ( num ) \u6211\u4eec\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bb9\u5668\u7c7b\u578b MyList \uff0c\u5728\u5c06\u4e00\u4e2a\u5b58\u653e\u4e86\u591a\u4e2a\u6570\u636e\u7684 MyList \u5bf9\u8c61\u653e\u5230 for...in... \u7684\u8bed\u53e5\u4e2d\uff0c\u53d1\u73b0 for...in... \u5e76\u4e0d\u80fd\u4ece\u4e2d\u4f9d\u6b21\u53d6\u51fa\u4e00\u6761\u6570\u636e\u8fd4\u56de\u7ed9\u6211\u4eec\uff0c\u4e5f\u5c31\u8bf4\u6211\u4eec\u968f\u4fbf\u5c01\u88c5\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5b58\u653e\u591a\u6761\u6570\u636e\u7684\u7c7b\u578b\u5374\u5e76\u4e0d\u80fd\u88ab\u8fed\u4ee3\u4f7f\u7528\u3002 \u6211\u4eec\u628a\u53ef\u4ee5\u901a\u8fc7 for...in... \u8fd9\u7c7b\u8bed\u53e5\u8fed\u4ee3\u8bfb\u53d6\u4e00\u6761\u6570\u636e\u4f9b\u6211\u4eec\u4f7f\u7528\u7684\u5bf9\u8c61\u79f0\u4e4b\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61**\uff08Iterable)**\u3002","title":"1. \u53ef\u8fed\u4ee3\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#2","text":"\u53ef\u4ee5\u4f7f\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f Iterable \u5bf9\u8c61\uff1a In [ 50 ]: from collections import Iterable #\u5bfc\u5165\u8fed\u4ee3\u7c7b In [ 51 ]: isinstance ([], Iterable ) Out [ 51 ]: True #\u5217\u8868\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 52 ]: isinstance ({}, Iterable ) Out [ 52 ]: True #\u5b57\u5178\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 53 ]: isinstance ( 'abc' , Iterable ) Out [ 53 ]: True #\u5b57\u7b26\u4e32\u662f\u8fed\u4ee3\u5bf9\u8c61 In [ 54 ]: isinstance ( mylist , Iterable ) Out [ 54 ]: False #\u81ea\u5df1\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e0d\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61(\u4e0d\u4e00\u5b9a) In [ 55 ]: isinstance ( 100 , Iterable ) Out [ 55 ]: False #\u6574\u5f62,\u6d6e\u70b9\u578b\u4e0d\u662f\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61","title":"2. \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#3","text":"\u6211\u4eec\u5206\u6790\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u8fed\u4ee3\u4f7f\u7528\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u6bcf\u8fed\u4ee3\u4e00\u6b21\uff08\u5373\u5728 for...in... \u4e2d\u6bcf\u5faa\u73af\u4e00\u6b21\uff09\u90fd\u4f1a\u8fd4\u56de\u5bf9\u8c61\u4e2d\u7684\u4e0b\u4e00\u6761\u6570\u636e\uff0c\u4e00\u76f4\u5411\u540e\u8bfb\u53d6\u6570\u636e\u76f4\u5230\u8fed\u4ee3\u4e86\u6240\u6709\u6570\u636e\u540e\u7ed3\u675f\u3002\u90a3\u4e48\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c31\u5e94\u8be5\u6709\u4e00\u4e2a \u201c\u4eba\u201d \u53bb\u8bb0\u5f55\u6bcf\u6b21\u8bbf\u95ee\u5230\u4e86\u7b2c\u51e0\u6761\u6570\u636e\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u8fed\u4ee3\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e0b\u4e00\u6761\u6570\u636e\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u80fd\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u6570\u636e\u8fed\u4ee3\u7684 \u201c\u4eba\u201d \u79f0\u4e3a\u8fed\u4ee3\u5668**(Iterator)**\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u672c\u8d28\u5c31\u662f\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8fd9\u6837\u7684 \u4e2d\u95f4\u201c\u4eba\u201d \u5373\u8fed\u4ee3\u5668\u5e2e\u52a9\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u904d\u5386\u4f7f\u7528\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u901a\u8fc7 __iter__ \u65b9\u6cd5\u5411\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u5728\u8fed\u4ee3\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5148\u83b7\u53d6\u8be5\u5bf9\u8c61\u63d0\u4f9b\u7684\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6765\u4f9d\u6b21\u83b7\u53d6\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e. \u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u5177\u5907\u4e86 __iter__ \u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 class MyList ( object ): def __init__ ( self ): self . container = [] def add ( self , item ): self . container . append ( item ) def __iter__ ( self ): #\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 # \u6211\u4eec\u6682\u65f6\u5ffd\u7565\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 pass mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) from collections import Iterable isinstance ( mylist , Iterable ) =============== Out [ 13 ]: True # \u8fd9\u56de\u6d4b\u8bd5\u53d1\u73b0\u6dfb\u52a0\u4e86__iter__\u65b9\u6cd5\u7684mylist\u5bf9\u8c61\u5df2\u7ecf\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e86","title":"3. \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u672c\u8d28"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#4-iternext","text":"list\u3001tuple \u7b49\u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 iter() \u51fd\u6570\u83b7\u53d6\u8fd9\u4e9b\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u8fed\u4ee3\u5668\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5bf9\u83b7\u53d6\u5230\u7684\u8fed\u4ee3\u5668\u4e0d\u65ad\u4f7f\u7528 next() \u51fd\u6570\u6765\u83b7\u53d6\u4e0b\u4e00\u6761\u6570\u636e\u3002 iter() \u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528\u4e86\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684 __iter__ \u65b9\u6cd5\u3002 li = [ 11 , 22 , 33 ] li_iter = iter ( li ) next ( li_iter ) Out [ 16 ]: 11 next ( li_iter ) Out [ 17 ]: 22 next ( li_iter ) Out [ 18 ]: 33 next ( li_iter ) ============= Traceback ( most recent call last ): File \"<ipython-input-21-ab6a83f394a1>\" , line 1 , in < module > next ( li_iter ) StopIteration \u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5df2\u7ecf\u8fed\u4ee3\u5b8c\u6700\u540e\u4e00\u4e2a\u6570\u636e\u4e4b\u540e\uff0c\u518d\u6b21\u8c03\u7528next()\u51fd\u6570\u4f1a\u629b\u51faStopIteration\u7684\u5f02\u5e38\uff0c\u6765\u544a\u8bc9\u6211\u4eec\u6240\u6709\u6570\u636e\u90fd\u5df2\u8fed\u4ee3\u5b8c\u6210\uff0c\u4e0d\u7528\u518d\u6267\u884cnext()\u51fd\u6570\u4e86\u3002","title":"4. iter()\u51fd\u6570\u4e0enext()\u51fd\u6570"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#5","text":"\u53ef\u4ee5\u4f7f\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f Iterator \u5bf9\u8c61\uff1a In [ 56 ]: from collections import Iterator In [ 57 ]: isinstance ([], Iterator ) Out [ 57 ]: False In [ 58 ]: isinstance ( iter ([]), Iterator ) Out [ 58 ]: True In [ 59 ]: isinstance ( iter ( \"abc\" ), Iterator ) Out [ 59 ]: True","title":"5. \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u8fed\u4ee3\u5668(\u524d\u9762\u4ecb\u7ecd\u7684\u662f\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3),\u8fd9\u91cc\u662f\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u8fed\u4ee3\u5668,\u542b\u4e49\u662f\u4e0d\u4e00\u6837\u7684,\u4f7f\u7528\u7684\u5224\u65ad\u51fd\u6570\u4e5f\u4e0d\u4e00\u6837"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#6-iterator","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u8fed\u4ee3\u5668\u662f\u7528\u6765\u5e2e\u52a9\u6211\u4eec\u8bb0\u5f55\u6bcf\u6b21\u8fed\u4ee3\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e\uff0c\u5f53\u6211\u4eec\u5bf9\u8fed\u4ee3\u5668\u4f7f\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u8fed\u4ee3\u5668\u4f1a\u5411\u6211\u4eec\u8fd4\u56de\u5b83\u6240\u8bb0\u5f55\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u4f7f\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u5c31\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684 __next__ \u65b9\u6cd5\uff08Python3\u4e2d\u662f\u5bf9\u8c61\u7684 __next__ \u65b9\u6cd5\uff0cPython2\u4e2d\u662f\u5bf9\u8c61\u7684 next() \u65b9\u6cd5\uff09\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u60f3\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5c31\u8981\u5b9e\u73b0\u5b83\u7684 __next__ \u65b9\u6cd5\u3002\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0cpython\u8981\u6c42\u8fed\u4ee3\u5668\u672c\u8eab\u4e5f\u662f\u53ef\u8fed\u4ee3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u4e3a\u8fed\u4ee3\u5668\u5b9e\u73b0 __iter__ \u65b9\u6cd5\uff0c\u800c __iter__ \u65b9\u6cd5\u8981\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u81ea\u8eab\u6b63\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8fed\u4ee3\u5668\u7684 __iter__ \u65b9\u6cd5\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\u3002 \u4e00\u4e2a\u5b9e\u73b0\u4e86 __iter__ \u65b9\u6cd5\u548c __next__ \u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u8fed\u4ee3\u5668\u3002 #\u5b9a\u4e49\u53ef\u8fed\u4ee3\u5bf9\u8c61 class MyList ( object ): \"\"\"\u81ea\u5b9a\u4e49\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\"\"\" def __init__ ( self ): self . items = [] def add ( self , val ): self . items . append ( val ) def __iter__ ( self ): #\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u5176\u5b9e\u5c31\u628amylist(\u8fed\u4ee3\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316)\u4f20\u9012\u7ed9\u4e86Myiterator myiterator = MyIterator ( self ) #\u4f7f\u7528\u4e0b\u9762\u7684\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f7f\u7528\u7684\u8fed\u4ee3\u5668(\u5b9e\u4f8b\u5316\u4e00\u4e2a\u8fed\u4ee3\u5668) return myiterator #\u8fd4\u56de\u8fd9\u4e2a\u4f7f\u7528\u7684\u8fed\u4ee3\u5668 #\u8fed\u4ee3\u5668 class MyIterator ( object ): \"\"\"\u81ea\u5b9a\u4e49\u7684\u4f9b\u4e0a\u9762\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f7f\u7528\u7684\u4e00\u4e2a\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , obj ): #\u8fd9\u91cc\u7684obj\u5c31\u662f\u5f15\u7528\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61,\u6bd4\u5982\u8bf4\u524d\u9762\u5efa\u7acb\u4e86\u4e00\u4e2amylist\u5bf9\u8c61,\u7136\u540e\u5728__iter__\u65b9\u6cd5\u4e2d\u8fd4\u56de\u7684\u662f\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61,\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2amylist\u4f20\u9012\u7ed9\u8fd9\u4e2aobj self . mylist = obj #\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u4e2a\u5bf9\u8c61 # current\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e self . current = 0 def __next__ ( self ): if self . current < len ( self . mylist . items ): item = self . mylist . items [ self . current ] #\u8fd9\u4e2a\u5c31\u662f\u53d6\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u5217\u8868\u7684\u503c self . current += 1 return item #\u6bcf\u6b21\u4f7f\u7528next()\u8fd4\u56de\u4e00\u4e2a\u503c else : raise StopIteration #\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\u544a\u8bc9for\u5faa\u73af\u8be5\u505c\u6b62\u4e86 def __iter__ ( self ): #\u8fed\u4ee3\u5668\u540c\u6837\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668,\u8fd4\u56de\u81ea\u8eab\u5373\u53ef return self #\u8fd4\u56de\u81ea\u8eab if __name__ == '__main__' : mylist = MyList () mylist . add ( 1 ) mylist . add ( 2 ) mylist . add ( 3 ) mylist . add ( 4 ) mylist . add ( 5 ) for num in mylist : print ( num ) \u6267\u884c\u7ed3\u679c: 1 2 3 4 5","title":"6. \u8fed\u4ee3\u5668Iterator"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#7-forin","text":"for item in Iterable \u5faa\u73af\u7684\u672c\u8d28\u5c31\u662f\u5148\u901a\u8fc7 iter() \u51fd\u6570\u83b7\u53d6\u53ef\u8fed\u4ee3\u5bf9\u8c61 Iterable \u7684\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u5bf9\u83b7\u53d6\u5230\u7684\u8fed\u4ee3\u5668\u4e0d\u65ad\u8c03\u7528 next() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9 item \uff0c\u5f53\u9047\u5230 StopIteration \u7684\u5f02\u5e38\u540e\u5faa\u73af\u7ed3\u675f\u3002","title":"7. for...in...\u5faa\u73af\u7684\u672c\u8d28"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#8","text":"\u6211\u4eec\u53d1\u73b0\u8fed\u4ee3\u5668\u6700\u6838\u5fc3\u7684\u529f\u80fd\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7 next() \u51fd\u6570\u7684\u8c03\u7528\u6765\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u503c\u3002\u5982\u679c\u6bcf\u6b21\u8fd4\u56de\u7684\u6570\u636e\u503c\u4e0d\u662f\u5728\u4e00\u4e2a\u5df2\u6709\u7684\u6570\u636e\u96c6\u5408\u4e2d\u8bfb\u53d6\u7684\uff0c\u800c\u662f\u901a\u8fc7\u7a0b\u5e8f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5f8b\u8ba1\u7b97\u751f\u6210\u7684\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u4e0d\u7528\u518d\u4f9d\u8d56\u4e00\u4e2a\u5df2\u6709\u7684\u6570\u636e\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7528\u518d\u5c06\u6240\u6709\u8981\u8fed\u4ee3\u7684\u6570\u636e\u90fd\u4e00\u6b21\u6027\u7f13\u5b58\u4e0b\u6765\u4f9b\u540e\u7eed\u4f9d\u6b21\u8bfb\u53d6\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5b58\u50a8\uff08\u5185\u5b58\uff09\u7a7a\u95f4\u3002 range ( 100000 ) Out [ 4 ]: range ( 0 , 100000 ) \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\uff0c\u6570\u5b66\u4e2d\u6709\u4e2a\u8457\u540d\u7684\u6590\u6ce2\u62c9\u5951\u6570\u5217 \uff08Fibonacci\uff09 \uff0c\u6570\u5217\u4e2d\u7b2c\u4e00\u4e2a\u6570\u4e3a0\uff0c\u7b2c\u4e8c\u4e2a\u6570\u4e3a1\uff0c\u5176\u540e\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ef\u7531\u524d\u4e24\u4e2a\u6570\u76f8\u52a0\u5f97\u5230\uff1a 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ... \u73b0\u5728\u6211\u4eec\u60f3\u8981\u901a\u8fc7 for...in... \u5faa\u73af\u6765\u904d\u5386\u8fed\u4ee3\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\u7684\u524d n \u4e2a\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668\u6765\u5b9e\u73b0\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u901a\u8fc7\u6570\u5b66\u8ba1\u7b97\u6765\u751f\u6210\u4e0b\u4e00\u4e2a\u6570\u3002 class FibIterator ( object ): \"\"\"\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , n ): \"\"\" :param n: int, \u6307\u660e\u751f\u6210\u6570\u5217\u7684\u524dn\u4e2a\u6570 \"\"\" self . n = n # current\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u751f\u6210\u5230\u6570\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a\u6570\u4e86 self . current = 0 # num1\u7528\u6765\u4fdd\u5b58\u524d\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u65700 self . num1 = 0 # num2\u7528\u6765\u4fdd\u5b58\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u65701 self . num2 = 1 def __next__ ( self ): \"\"\"\u88abnext()\u51fd\u6570\u8c03\u7528\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6570\"\"\" if self . current < self . n : num = self . num1 self . num1 , self . num2 = self . num2 , self . num1 + self . num2 self . current += 1 return num else : raise StopIteration def __iter__ ( self ): \"\"\"\u8fed\u4ee3\u5668\u7684__iter__\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\"\"\" return self if __name__ == '__main__' : fib = FibIterator ( 10 ) for num in fib : print ( num , end = \" \" )","title":"8. \u8fed\u4ee3\u5668\u7684\u5e94\u7528\u573a\u666f"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#9-for","text":"\u9664\u4e86for\u5faa\u73af\u80fd\u63a5\u6536\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0clist\u3001tuple\u7b49\u4e5f\u80fd\u63a5\u6536\u3002 li = list ( FibIterator ( 15 )) #\u5176\u5b9e\u662f\u6328\u4e2a\u53d6\u503c\u5199\u5165\u5230\u4e86\u65b0\u7684\u5217\u8868\u4e2d,\u5728\u5143\u7ec4\u8ddf\u5217\u8868\u8fdb\u884c\u7c7b\u578b\u7684\u8f6c\u6362\u7684\u65f6\u5019\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406,\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u7c7b\u578b\u8f6c\u6362.\u800c\u662f\u4f1a\u76f8\u5f53\u4e8e\u8fed\u4ee3\u5668\u7684\u53d6\u503c\u8d4b\u503c print ( li ) tp = tuple ( FibIterator ( 6 )) print ( tp )","title":"9. \u5e76\u4e0d\u662f\u53ea\u6709for\u5faa\u73af\u80fd\u63a5\u6536\u53ef\u8fed\u4ee3\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#72","text":"","title":"7.2\u751f\u6210\u5668"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#1_1","text":"\u5229\u7528\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fed\u4ee3\u83b7\u53d6\u6570\u636e\uff08\u901a\u8fc7 next() \u65b9\u6cd5\uff09\u65f6\u6309\u7167\u7279\u5b9a\u7684\u89c4\u5f8b\u8fdb\u884c\u751f\u6210\u3002\u4f46\u662f\u6211\u4eec\u5728\u5b9e\u73b0\u4e00\u4e2a\u8fed\u4ee3\u5668\u65f6\uff0c\u5173\u4e8e\u5f53\u524d\u8fed\u4ee3\u5230\u7684\u72b6\u6001\u9700\u8981\u6211\u4eec\u81ea\u5df1\u8bb0\u5f55\uff0c\u8fdb\u800c\u624d\u80fd\u6839\u636e\u5f53\u524d\u72b6\u6001\u751f\u6210\u4e0b\u4e00\u4e2a\u6570\u636e\u3002\u4e3a\u4e86\u8fbe\u5230\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u914d\u5408 next() \u51fd\u6570\u8fdb\u884c\u8fed\u4ee3\u4f7f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u66f4\u7b80\u4fbf\u7684\u8bed\u6cd5\uff0c\u5373\u751f\u6210\u5668 (generator) \u3002\u751f\u6210\u5668\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002","title":"1. \u751f\u6210\u5668"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#2-1","text":"\u8981\u521b\u5efa\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u7684 [ ] \u6539\u6210 ( ) In [ 15 ]: L = [ x * 2 for x in range ( 5 )] #\u4f7f\u7528[]\u751f\u6210\u7684\u662f\u4e00\u4e2a\u5217\u8868 In [ 16 ]: L Out [ 16 ]: [ 0 , 2 , 4 , 6 , 8 ] In [ 17 ]: G = ( x * 2 for x in range ( 5 )) #\u800c\u4f7f\u7528()\u751f\u6210\u7684\u5c31\u662f\u4e00\u4e2a\u751f\u6210\u5668 In [ 18 ]: G Out [ 18 ]: < generator object < genexpr > at 0x7f626c132db0 > \u521b\u5efa L \u548c G \u7684\u533a\u522b\u4ec5\u5728\u4e8e\u6700\u5916\u5c42\u7684 [ ] \u548c ( ) \uff0c L \u662f\u4e00\u4e2a\u5217\u8868\uff0c\u800c G \u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6253\u5370\u51fa\u5217\u8868L\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u5bf9\u4e8e\u751f\u6210\u5668G\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u6765\u4f7f\u7528\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7next()\u51fd\u6570\u3001for\u5faa\u73af\u3001list()\u7b49\u65b9\u6cd5\u4f7f\u7528\u3002 In [ 19 ]: next ( G ) Out [ 19 ]: 0 In [ 20 ]: next ( G ) Out [ 20 ]: 2 In [ 21 ]: next ( G ) Out [ 21 ]: 4 In [ 22 ]: next ( G ) Out [ 22 ]: 6 In [ 23 ]: next ( G ) Out [ 23 ]: 8 In [ 24 ]: next ( G ) --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 24 - 380e167 d6934 > in < module > () ----> 1 next ( G ) StopIteration : In [ 25 ]: In [ 26 ]: G = ( x * 2 for x in range ( 5 )) In [ 27 ]: for x in G : .... : print ( x ) .... : 0 2 4 6 8","title":"2. \u521b\u5efa\u751f\u6210\u5668\u65b9\u6cd51"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#3-2","text":"generator\u975e\u5e38\u5f3a\u5927\u3002\u5982\u679c\u63a8\u7b97\u7684\u7b97\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u7528\u7c7b\u4f3c\u5217\u8868\u751f\u6210\u5f0f\u7684 for \u5faa\u73af\u65e0\u6cd5\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8fd8\u53ef\u4ee5\u7528\u51fd\u6570\u6765\u5b9e\u73b0\u3002 \u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6765\u4e3e\u4f8b\uff0c\u56de\u60f3\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u7528\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a class FibIterator ( object ): \"\"\"\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fed\u4ee3\u5668\"\"\" def __init__ ( self , n ): \"\"\" :param n: int, \u6307\u660e\u751f\u6210\u6570\u5217\u7684\u524dn\u4e2a\u6570 \"\"\" self . n = n # current\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u751f\u6210\u5230\u6570\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a\u6570\u4e86 self . current = 0 # num1\u7528\u6765\u4fdd\u5b58\u524d\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u65700 self . num1 = 0 # num2\u7528\u6765\u4fdd\u5b58\u524d\u4e00\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a\u6570\u5217\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u65701 self . num2 = 1 def __next__ ( self ): \"\"\"\u88abnext()\u51fd\u6570\u8c03\u7528\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u6570\"\"\" if self . current < self . n : num = self . num1 self . num1 , self . num2 = self . num2 , self . num1 + self . num2 self . current += 1 return num else : raise StopIteration def __iter__ ( self ): \"\"\"\u8fed\u4ee3\u5668\u7684__iter__\u8fd4\u56de\u81ea\u8eab\u5373\u53ef\"\"\" return self \u6ce8\u610f\uff0c\u5728\u7528\u8fed\u4ee3\u5668\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e2d\uff0c\u6211\u4eec\u8981\u501f\u52a9\u51e0\u4e2a\u53d8\u91cf(n\u3001current\u3001num1\u3001num2)\u6765\u4fdd\u5b58\u8fed\u4ee3\u7684\u72b6\u6001\u3002\u73b0\u5728\u6211\u4eec\u7528\u751f\u6210\u5668\u6765\u5b9e\u73b0\u4e00\u4e0b\u3002 \u4e0d\u4f7f\u7528\u751f\u6210\u5668\u51fd\u6570: def fib ( n ): current = 0 num1 , num2 = 0 , 1 while current < n : num = num1 print ( num ) num1 , num2 = num2 , num1 + num2 current += 1 # yield num # return 'done' \u6267\u884c: fib ( 10 ) 0 1 1 2 3 5 8 13 21 34 \u4f7f\u7528\u751f\u6210\u5668: def fib ( n ): current = 0 num1 , num2 = 0 , 1 while current < n : num = num1 num1 , num2 = num2 , num1 + num2 current += 1 yield num #\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6709yield\u8bed\u53e5,\u90a3\u4e48\u8fd9\u4e2a\u5c31\u4e0d\u5728\u662f\u51fd\u6570,\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u6a21\u677f return 'done' #\u5982\u679c\u5728\u8c03\u7528fib\u65f6,\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u6709yield,\u90a3\u4e48\u6b64\u65f6\u4e0d\u662f\u8c03\u7528\u4e00\u4e2a\u51fd\u6570,\u800c\u662f\u751f\u6210\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 a = fib ( 10 ) In [ 31 ]: F = fib ( 5 ) In [ 32 ]: next ( F ) Out [ 32 ]: 1 In [ 33 ]: next ( F ) Out [ 33 ]: 1 In [ 34 ]: next ( F ) Out [ 34 ]: 2 In [ 35 ]: next ( F ) Out [ 35 ]: 3 In [ 36 ]: next ( F ) Out [ 36 ]: 5 In [ 37 ]: next ( F ) --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 37 - 8 c2b02b4361a > in < module > () ----> 1 next ( F ) StopIteration : done \u5728\u4f7f\u7528\u751f\u6210\u5668\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e2d\uff0c\u6211\u4eec\u5c06\u539f\u672c\u5728\u8fed\u4ee3\u5668 __next__ \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u7684\u57fa\u672c\u903b\u8f91\u653e\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u5c06\u6bcf\u6b21\u8fed\u4ee3\u8fd4\u56de\u6570\u503c\u7684 return \u6362\u6210\u4e86 yield \uff0c\u6b64\u65f6\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u4fbf\u4e0d\u518d\u662f\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u4e86\u3002\u7b80\u5355\u6765\u8bf4\uff1a\u53ea\u8981\u5728 def \u4e2d\u6709 yield \u5173\u952e\u5b57\u7684 \u5c31\u79f0\u4e3a \u751f\u6210\u5668 \u6b64\u65f6\u6309\u7167\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f( \u6848\u4f8b\u4e2d\u4e3a F = fib(5) )\u4f7f\u7528\u751f\u6210\u5668\u5c31\u4e0d\u518d\u662f\u6267\u884c\u51fd\u6570\u4f53\u4e86\uff0c\u800c\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff08 \u6848\u4f8b\u4e2d\u4e3a F \uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167\u4f7f\u7528\u8fed\u4ee3\u5668\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u751f\u6210\u5668\u4e86\u3002 In [ 38 ]: for n in fib ( 5 ): .... : print ( n ) .... : 1 1 2 3 5 \u4f46\u662f\u7528for\u5faa\u73af\u8c03\u7528generator\u65f6\uff0c\u53d1\u73b0\u62ff\u4e0d\u5230generator\u7684return\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u60f3\u8981\u62ff\u5230\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u6355\u83b7 StopIteration \u9519\u8bef\uff0c\u8fd4\u56de\u503c\u5305\u542b\u5728 StopIteration \u7684 value \u4e2d\uff1a In [ 39 ]: g = fib ( 5 ) In [ 40 ]: while True : .... : try : .... : x = next ( g ) .... : print ( \"value: %d \" % x ) .... : except StopIteration as e : .... : print ( \"\u751f\u6210\u5668\u8fd4\u56de\u503c: %s \" % e . value ) .... : break .... : value : 1 value : 1 value : 2 value : 3 value : 5 \u751f\u6210\u5668\u8fd4\u56de\u503c : done","title":"3. \u521b\u5efa\u751f\u6210\u5668\u65b9\u6cd52"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_1","text":"\u4f7f\u7528\u4e86yield\u5173\u952e\u5b57\u7684\u51fd\u6570\u4e0d\u518d\u662f\u51fd\u6570\uff0c\u800c\u662f\u751f\u6210\u5668\u3002\uff08\u4f7f\u7528\u4e86yield\u7684\u51fd\u6570\u5c31\u662f\u751f\u6210\u5668\uff09 yield\u5173\u952e\u5b57\u6709\u4e24\u70b9\u4f5c\u7528\uff1a \u4fdd\u5b58\u5f53\u524d\u8fd0\u884c\u72b6\u6001\uff08\u65ad\u70b9\uff09\uff0c\u7136\u540e\u6682\u505c\u6267\u884c\uff0c\u5373\u5c06\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\u6302\u8d77 \u5c06yield\u5173\u952e\u5b57\u540e\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u6b64\u65f6\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d77\u5230\u4e86return\u7684\u4f5c\u7528 \u53ef\u4ee5\u4f7f\u7528next()\u51fd\u6570\u8ba9\u751f\u6210\u5668\u4ece\u65ad\u70b9\u5904\u7ee7\u7eed\u6267\u884c\uff0c\u5373\u5524\u9192\u751f\u6210\u5668\uff08\u51fd\u6570\uff09 Python3\u4e2d\u7684\u751f\u6210\u5668\u53ef\u4ee5\u4f7f\u7528return\u8fd4\u56de\u6700\u7ec8\u8fd0\u884c\u7684\u8fd4\u56de\u503c\uff0c\u800cPython2\u4e2d\u7684\u751f\u6210\u5668\u4e0d\u5141\u8bb8\u4f7f\u7528return\u8fd4\u56de\u4e00\u4e2a\u8fd4\u56de\u503c\uff08\u5373\u53ef\u4ee5\u4f7f\u7528return\u4ece\u751f\u6210\u5668\u4e2d\u9000\u51fa\uff0c\u4f46return\u540e\u4e0d\u80fd\u6709\u4efb\u4f55\u8868\u8fbe\u5f0f\uff09\u3002","title":"\u603b\u7ed3"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#4-send","text":"\u6211\u4eec\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528 next() \u51fd\u6570\u6765\u5524\u9192\u751f\u6210\u5668\u7ee7\u7eed\u6267\u884c\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 send() \u51fd\u6570\u6765\u5524\u9192\u6267\u884c\u3002\u4f7f\u7528 send() \u51fd\u6570\u7684\u4e00\u4e2a\u597d\u5904\u662f\u53ef\u4ee5\u5728\u5524\u9192\u7684\u540c\u65f6\u5411\u65ad\u70b9\u5904\u4f20\u5165\u4e00\u4e2a\u9644\u52a0\u6570\u636e\u3002 \u4f8b\u5b50\uff1a\u6267\u884c\u5230 yield \u65f6\uff0c gen \u51fd\u6570\u4f5c\u7528\u6682\u65f6\u4fdd\u5b58\uff0c\u8fd4\u56de i \u7684\u503c; temp \u63a5\u6536\u4e0b\u6b21 c.send(\"python\") \uff0c send \u53d1\u9001\u8fc7\u6765\u7684\u503c\uff0c c.next( )\u7b49\u4ef7 c.send(None) def gen (): i = 0 while i < 5 : temp = yield i print ( temp ) #\u8fd9\u91cc\u4f7f\u7528send\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u8fd4\u56de\u503c i += 1 \u4f7f\u7528send(\u7b2c\u4e00\u6b21\u4e0d\u80fd\u4f7f\u7528,\u6ca1\u6709\u4eba\u63a5\u6536\u503c) In [ 43 ]: f = gen () In [ 44 ]: next ( f ) Out [ 44 ]: 0 In [ 45 ]: f . send ( 'haha' ) haha Out [ 45 ]: 1 In [ 46 ]: next ( f ) None Out [ 46 ]: 2 In [ 47 ]: f . send ( 'haha' ) haha Out [ 47 ]: 3 In [ 48 ]: \u4f7f\u7528next\u51fd\u6570 In [ 11 ]: f = gen () In [ 12 ]: next ( f ) Out [ 12 ]: 0 In [ 13 ]: next ( f ) None Out [ 13 ]: 1 In [ 14 ]: next ( f ) None Out [ 14 ]: 2 In [ 15 ]: next ( f ) None Out [ 15 ]: 3 In [ 16 ]: next ( f ) None Out [ 16 ]: 4 In [ 17 ]: next ( f ) None --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 17 - 468 f0afdf1b9 > in < module > () ----> 1 next ( f ) StopIteration : \u4f7f\u7528 __next__() \u65b9\u6cd5\uff08\u4e0d\u5e38\u4f7f\u7528\uff09 In [ 18 ]: f = gen () In [ 19 ]: f . __next__ () Out [ 19 ]: 0 In [ 20 ]: f . __next__ () None Out [ 20 ]: 1 In [ 21 ]: f . __next__ () None Out [ 21 ]: 2 In [ 22 ]: f . __next__ () None Out [ 22 ]: 3 In [ 23 ]: f . __next__ () None Out [ 23 ]: 4 In [ 24 ]: f . __next__ () None --------------------------------------------------------------------------- StopIteration Traceback ( most recent call last ) < ipython - input - 24 - 39 ec527346a9 > in < module > () ----> 1 f . __next__ () StopIteration :","title":"4. \u4f7f\u7528send\u5524\u9192"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_2","text":"\u8fed\u4ee3\u5668\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u7684\u7a7a\u95f4 \u751f\u6210\u5668\u53ef\u4ee5\u662f\u51fd\u6570\u6682\u65f6\u505c\u6b62\u6267\u884c,\u4f7f\u7528next\u65b9\u6cd5\u7ee7\u7eed\u6267\u884c","title":"\u603b\u7ed3"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#73-yield","text":"\u534f\u7a0b\uff0c\u53c8\u79f0\u5fae\u7ebf\u7a0b\uff0c\u7ea4\u7a0b\u3002\u82f1\u6587\u540d Coroutine \u3002","title":"7.3\u534f\u7a0b-yield"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_3","text":"\u534f\u7a0b\u662fpython\u4e2a\u4e2d\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u591a\u4efb\u52a1\u7684\u65b9\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u7ebf\u7a0b\u66f4\u5c0f\u5360\u7528\u66f4\u5c0f\u6267\u884c\u5355\u5143\uff08\u7406\u89e3\u4e3a\u9700\u8981\u7684\u8d44\u6e90\uff09\u3002 \u4e3a\u5565\u8bf4\u5b83\u662f\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u56e0\u4e3a\u5b83\u81ea\u5e26CPU\u4e0a\u4e0b\u6587\u3002\u8fd9\u6837\u53ea\u8981\u5728\u5408\u9002\u7684\u65f6\u673a\uff0c \u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u534f\u7a0b \u5207\u6362\u5230\u53e6\u4e00\u4e2a\u534f\u7a0b\u3002 \u53ea\u8981\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u6216\u6062\u590d CPU\u4e0a\u4e0b\u6587\u90a3\u4e48\u7a0b\u5e8f\u8fd8\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002 \u901a\u4fd7\u7684\u7406\u89e3\uff1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u67d0\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u4e00\u4e9b\u4e34\u65f6\u53d8\u91cf\u7b49\u4fe1\u606f\uff0c\u7136\u540e\u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\u6267\u884c\uff0c\u6ce8\u610f\u4e0d\u662f\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u505a\u5230\u7684\uff0c\u5e76\u4e14\u5207\u6362\u7684\u6b21\u6570\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u518d\u5207\u6362\u5230\u539f\u6765\u7684\u51fd\u6570\u90fd\u7531\u5f00\u53d1\u8005\u81ea\u5df1\u786e\u5b9a","title":"\u534f\u7a0b\u662f\u5565"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_4","text":"\u5728\u5b9e\u73b0\u591a\u4efb\u52a1\u65f6, \u7ebf\u7a0b\u5207\u6362\u4ece\u7cfb\u7edf\u5c42\u9762\u8fdc\u4e0d\u6b62\u4fdd\u5b58\u548c\u6062\u590d CPU\u4e0a\u4e0b\u6587\u8fd9\u4e48\u7b80\u5355\u3002 \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u9ad8\u6548\u6027\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7f13\u5b58Cache\u7b49\u7b49\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u4f1a\u5e2e\u4f60\u505a\u8fd9\u4e9b\u6570\u636e\u7684\u6062\u590d\u64cd\u4f5c\u3002 \u6240\u4ee5\u7ebf\u7a0b\u7684\u5207\u6362\u975e\u5e38\u8017\u6027\u80fd\u3002\u4f46\u662f\u534f\u7a0b\u7684\u5207\u6362\u53ea\u662f\u5355\u7eaf\u7684\u64cd\u4f5cCPU\u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u4e00\u79d2\u949f\u5207\u6362\u4e2a\u4e0a\u767e\u4e07\u6b21\u7cfb\u7edf\u90fd\u6297\u7684\u4f4f\u3002","title":"\u534f\u7a0b\u548c\u7ebf\u7a0b\u5dee\u5f02"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_5","text":"\u5982\u679c\u4e0d\u52a0yield\u90a3\u4e48\u56e0\u4e3a\u662f\u6b7b\u5faa\u73af\u90a3\u4e48\u5c31\u4f1a\u5728work\u4e2d\u8df3\u4e0d\u51fa\u6765\u4e86 import time def work1 (): while True : print ( \"----work1---\" ) yield time . sleep ( 0.5 ) def work2 (): while True : print ( \"----work2---\" ) yield time . sleep ( 0.5 ) def main (): w1 = work1 () w2 = work2 () while True : next ( w1 ) next ( w2 ) if __name__ == \"__main__\" : main () \u8fd0\u884c\u7ed3\u679c\uff1a ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ---- work1 --- ---- work2 --- ... \u7701\u7565 ...","title":"\u7b80\u5355\u5b9e\u73b0\u534f\u7a0b"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#74-greenlet","text":"\u4e3a\u4e86\u66f4\u597d\u4f7f\u7528\u534f\u7a0b\u6765\u5b8c\u6210\u591a\u4efb\u52a1\uff0cpython\u4e2d\u7684 greenlet \u6a21\u5757\u5bf9\u5176\u5c01\u88c5\uff0c\u4ece\u800c\u4f7f\u5f97\u5207\u6362\u4efb\u52a1\u53d8\u7684\u66f4\u52a0\u7b80\u5355 #coding=utf-8 from greenlet import greenlet import time def test1 (): while True : print \"---A--\" gr2 . switch () time . sleep ( 0.5 ) def test2 (): while True : print \"---B--\" gr1 . switch () time . sleep ( 0.5 ) gr1 = greenlet ( test1 ) gr2 = greenlet ( test2 ) #\u5207\u6362\u5230gr1\u4e2d\u8fd0\u884c gr1 . switch ()","title":"7.4\u534f\u7a0b-greenlet(\u4e00\u822c\u4e0d\u7528)"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#75-gevent","text":"greenlet \u5df2\u7ecf\u5b9e\u73b0\u4e86\u534f\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fd8\u7684\u4eba\u5de5\u5207\u6362\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u592a\u9ebb\u70e6\u4e86\uff0c\u4e0d\u8981\u6349\u6025\uff0cpython\u8fd8\u6709\u4e00\u4e2a\u6bd4 greenlet \u66f4\u5f3a\u5927\u7684\u5e76\u4e14\u80fd\u591f\u81ea\u52a8\u5207\u6362\u4efb\u52a1\u7684\u6a21\u5757 gevent \u5176\u539f\u7406\u662f\u5f53\u4e00\u4e2a greenlet \u9047\u5230 IO (\u6307\u7684\u662f input output \u8f93\u5165\u8f93\u51fa\uff0c\u6bd4\u5982\u7f51\u7edc\u3001\u6587\u4ef6\u64cd\u4f5c\u7b49)\u64cd\u4f5c\u65f6\uff0c\u6bd4\u5982\u8bbf\u95ee\u7f51\u7edc\uff0c\u5c31\u81ea\u52a8\u5207\u6362\u5230\u5176\u4ed6\u7684 greenlet \uff0c\u7b49\u5230 IO \u64cd\u4f5c\u5b8c\u6210\uff0c\u518d\u5728\u9002\u5f53\u7684\u65f6\u5019\u5207\u6362\u56de\u6765\u7ee7\u7eed\u6267\u884c\u3002 \u7531\u4e8e IO \u64cd\u4f5c\u975e\u5e38\u8017\u65f6\uff0c\u7ecf\u5e38\u4f7f\u7a0b\u5e8f\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u6709\u4e86 gevent \u4e3a\u6211\u4eec\u81ea\u52a8\u5207\u6362\u534f\u7a0b\uff0c\u5c31\u4fdd\u8bc1\u603b\u6709 greenlet \u5728\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u5f85 IO (\u6709\u5ef6\u65f6\u5c31\u5207\u6362) \u5b89\u88c5: pip3 install gevent","title":"7.5\u534f\u7a0b-gevent(\u5e38\u7528)"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#1-gevent","text":"import gevent def f ( n ): for i in range ( n ): print ( gevent . getcurrent (), i ) g1 = gevent . spawn ( f , 5 ) g2 = gevent . spawn ( f , 5 ) g3 = gevent . spawn ( f , 5 ) g1 . join () g2 . join () g3 . join () \u8fd0\u884c\u7ed3\u679c < Greenlet at 0x10e49f550 : f ( 5 ) > 0 < Greenlet at 0x10e49f550 : f ( 5 ) > 1 < Greenlet at 0x10e49f550 : f ( 5 ) > 2 < Greenlet at 0x10e49f550 : f ( 5 ) > 3 < Greenlet at 0x10e49f550 : f ( 5 ) > 4 < Greenlet at 0x10e49f910 : f ( 5 ) > 0 < Greenlet at 0x10e49f910 : f ( 5 ) > 1 < Greenlet at 0x10e49f910 : f ( 5 ) > 2 < Greenlet at 0x10e49f910 : f ( 5 ) > 3 < Greenlet at 0x10e49f910 : f ( 5 ) > 4 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 0 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 1 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 2 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 3 < Greenlet at 0x10e49f4b0 : f ( 5 ) > 4 \u53ef\u4ee5\u770b\u5230\uff0c3\u4e2agreenlet\u662f\u4f9d\u6b21\u8fd0\u884c\u800c\u4e0d\u662f\u4ea4\u66ff\u8fd0\u884c","title":"1. gevent\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#2-gevent","text":"import gevent def f ( n ): for i in range ( n ): print ( gevent . getcurrent (), i ) #\u7528\u6765\u6a21\u62df\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u6ce8\u610f\u4e0d\u662ftime\u6a21\u5757\u4e2d\u7684sleep gevent . sleep ( 1 ) #\u6ce8\u610f\u8fd9\u91cc\u7684\u5ef6\u65f6\u4e0d\u662f\u7528\u7684time.sleep() g1 = gevent . spawn ( f , 5 ) g2 = gevent . spawn ( f , 5 ) g3 = gevent . spawn ( f , 5 ) g1 . join () g2 . join () g3 . join () \u8fd0\u884c\u7ed3\u679c < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 0 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 1 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 2 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 3 < Greenlet at 0x7fa70ffa1c30 : f ( 5 ) > 4 < Greenlet at 0x7fa70ffa1870 : f ( 5 ) > 4 < Greenlet at 0x7fa70ffa1eb0 : f ( 5 ) > 4","title":"2. gevent\u5207\u6362\u6267\u884c"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#3-gevent","text":"from gevent import monkey import gevent import random import time def coroutine_work ( coroutine_name ): for i in range ( 10 ): print ( coroutine_name , i ) time . sleep ( random . random ()) gevent . joinall ([ gevent . spawn ( coroutine_work , \"work1\" ), gevent . spawn ( coroutine_work , \"work2\" ) ]) \u8fd0\u884c\u7ed3\u679c work1 0 work1 1 work1 2 work1 3 work1 4 work1 5 work1 6 work1 7 work1 8 work1 9 work2 0 work2 1 work2 2 work2 3 work2 4 work2 5 work2 6 work2 7 work2 8 work2 9 from gevent import monkey import gevent import random import time # \u6709\u8017\u65f6\u64cd\u4f5c\u65f6\u9700\u8981 monkey . patch_all () # \u5c06\u7a0b\u5e8f\u4e2d\u7528\u5230\u7684\u8017\u65f6\u64cd\u4f5c\u7684\u4ee3\u7801\uff0c\u6362\u4e3agevent\u4e2d\u81ea\u5df1\u5b9e\u73b0\u7684\u6a21\u5757 def coroutine_work ( coroutine_name ): for i in range ( 10 ): print ( coroutine_name , i ) time . sleep ( random . random ()) gevent . joinall ([ gevent . spawn ( coroutine_work , \"work1\" ), gevent . spawn ( coroutine_work , \"work2\" ) ]) #\u6dfb\u52a0\u6240\u6709\u7684\u643a\u7a0b\u4efb\u52a1(\u66f4\u65b9\u4fbf) \u8fd0\u884c\u7ed3\u679c work1 0 work2 0 work1 1 work1 2 work1 3 work2 1 work1 4 work2 2 work1 5 work2 3 work1 6 work1 7 work1 8 work2 4 work2 5 work1 9 work2 6 work2 7 work2 8 work2 9","title":"3. \u7ed9\u7a0b\u5e8f\u6253\u8865\u4e01(\u4e0d\u4f7f\u7528gevent\u7684\u5ef6\u65f6\u51fd\u6570)"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#76","text":"","title":"7.6\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\u5bf9\u6bd4"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_6","text":"\u6709\u4e00\u4e2a\u8001\u677f\u60f3\u8981\u5f00\u4e2a\u5de5\u5382\u8fdb\u884c\u751f\u4ea7\u67d0\u4ef6\u5546\u54c1\uff08\u4f8b\u5982\u526a\u5b50\uff09 \u4ed6\u9700\u8981\u82b1\u4e00\u4e9b\u8d22\u529b\u7269\u529b\u5236\u4f5c\u4e00\u6761\u751f\u4ea7\u7ebf\uff0c\u8fd9\u4e2a\u751f\u4ea7\u7ebf\u4e0a\u6709\u5f88\u591a\u7684\u5668\u4ef6\u4ee5\u53ca\u6750\u6599\u8fd9\u4e9b\u6240\u6709\u7684 \u4e3a\u4e86\u80fd\u591f\u751f\u4ea7\u526a\u5b50\u800c\u51c6\u5907\u7684\u8d44\u6e90\u79f0\u4e4b\u4e3a\uff1a\u8fdb\u7a0b \u53ea\u6709\u751f\u4ea7\u7ebf\u662f\u4e0d\u80fd\u591f\u8fdb\u884c\u751f\u4ea7\u7684\uff0c\u6240\u4ee5\u8001\u677f\u7684\u627e\u4e2a\u5de5\u4eba\u6765\u8fdb\u884c\u751f\u4ea7\uff0c\u8fd9\u4e2a\u5de5\u4eba\u80fd\u591f\u5229\u7528\u8fd9\u4e9b\u6750\u6599\u6700\u7ec8\u4e00\u6b65\u6b65\u7684\u5c06\u526a\u5b50\u505a\u51fa\u6765\uff0c\u8fd9\u4e2a\u6765\u505a\u4e8b\u60c5\u7684\u5de5\u4eba\u79f0\u4e4b\u4e3a\uff1a\u7ebf\u7a0b \u8fd9\u4e2a\u8001\u677f\u4e3a\u4e86\u63d0\u9ad8\u751f\u4ea7\u7387\uff0c\u60f3\u52303\u79cd\u529e\u6cd5\uff1a \u5728\u8fd9\u6761\u751f\u4ea7\u7ebf\u4e0a\u591a\u62db\u4e9b\u5de5\u4eba\uff0c\u4e00\u8d77\u6765\u505a\u526a\u5b50\uff0c\u8fd9\u6837\u6548\u7387\u662f\u6210\u500d\u5897\u957f\uff0c\u5373\u5355\u8fdb\u7a0b \u591a\u7ebf\u7a0b\u65b9\u5f0f \u8001\u677f\u53d1\u73b0\u8fd9\u6761\u751f\u4ea7\u7ebf\u4e0a\u7684\u5de5\u4eba\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff0c\u56e0\u4e3a\u4e00\u6761\u751f\u4ea7\u7ebf\u7684\u8d44\u6e90\u4ee5\u53ca\u6750\u6599\u6bd5\u7adf\u6709\u9650\uff0c\u6240\u4ee5\u8001\u677f\u53c8\u82b1\u4e86\u4e9b\u8d22\u529b\u7269\u529b\u8d2d\u7f6e\u4e86\u53e6\u5916\u4e00\u6761\u751f\u4ea7\u7ebf\uff0c\u7136\u540e\u518d\u62db\u4e9b\u5de5\u4eba\u8fd9\u6837\u6548\u7387\u53c8\u518d\u4e00\u6b65\u63d0\u9ad8\u4e86\uff0c\u5373\u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b\u65b9\u5f0f \u8001\u677f\u53d1\u73b0\uff0c\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u6761\u751f\u4ea7\u7ebf\uff0c\u5e76\u4e14\u6bcf\u6761\u751f\u4ea7\u7ebf\u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u5de5\u4eba\u4e86\uff08\u5373\u7a0b\u5e8f\u662f\u591a\u8fdb\u7a0b\u7684\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u53c8\u6709\u591a\u4e2a\u7ebf\u7a0b\uff09\uff0c\u4e3a\u4e86\u518d\u6b21\u63d0\u9ad8\u6548\u7387\uff0c\u8001\u677f\u60f3\u4e86\u4e2a\u635f\u62db\uff0c\u89c4\u5b9a\uff1a\u5982\u679c\u67d0\u4e2a\u5458\u5de5\u5728\u4e0a\u73ed\u65f6\u4e34\u65f6\u6ca1\u4e8b\u6216\u8005\u518d\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\uff08\u6bd4\u5982\u7b49\u5f85\u53e6\u4e00\u4e2a\u5de5\u4eba\u751f\u4ea7\u5b8c\u8c0b\u9053\u5de5\u5e8f \u4e4b\u540e\u4ed6\u624d\u80fd\u518d\u6b21\u5de5\u4f5c\uff09 \uff0c\u90a3\u4e48\u8fd9\u4e2a\u5458\u5de5\u5c31\u5229\u7528\u8fd9\u4e2a\u65f6\u95f4\u53bb\u505a\u5176\u5b83\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8fd9\u4e2a\u65f6\u95f4\u53bb\u505a\u5176\u5b83\u4e8b\u60c5\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f\uff1a\u534f\u7a0b\u65b9\u5f0f","title":"\u8bf7\u4ed4\u7ec6\u7406\u89e3\u5982\u4e0b\u7684\u901a\u4fd7\u63cf\u8ff0"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_7","text":"\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u5355\u4f4d 2.\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\u5355\u4f4d 3.\u8fdb\u7a0b\u5207\u6362\u9700\u8981\u7684\u8d44\u6e90\u5f88\u6700\u5927\uff0c\u6548\u7387\u5f88\u4f4e 4.\u7ebf\u7a0b\u5207\u6362\u9700\u8981\u7684\u8d44\u6e90\u4e00\u822c\uff0c\u6548\u7387\u4e00\u822c\uff08\u5f53\u7136\u4e86\u5728\u4e0d\u8003\u8651GIL\u7684\u60c5\u51b5\u4e0b\uff09 5.\u534f\u7a0b\u5207\u6362\u4efb\u52a1\u8d44\u6e90\u5f88\u5c0f\uff0c\u6548\u7387\u9ad8 6.\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u6839\u636ecpu\u6838\u6570\u4e0d\u4e00\u6837\u53ef\u80fd\u662f\u5e76\u884c\u7684\uff0c\u4f46\u662f\u534f\u7a0b\u662f\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d \u6240\u4ee5\u662f\u5e76\u53d1","title":"\u7b80\u5355\u603b\u7ed3"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#77","text":"","title":"7.7\u5e76\u53d1\u4e0b\u8f7d\u5668"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_8","text":"from gevent import monkey import gevent import urllib.request # \u6709\u8017\u65f6\u64cd\u4f5c\u65f6\u9700\u8981 monkey . patch_all () def my_downLoad ( url ): print ( 'GET: %s ' % url ) resp = urllib . request . urlopen ( url ) #\u6253\u5f00\u8fd9\u4e2aurl data = resp . read () #\u8bfb\u53d6\u7684\u662f\u56fe\u7247\u7684\u5185\u5bb9 print ( ' %d bytes received from %s .' % ( len ( data ), url )) gevent . joinall ([ gevent . spawn ( my_downLoad , 'http://www.baidu.com/' ), gevent . spawn ( my_downLoad , 'http://www.itcast.cn/' ), gevent . spawn ( my_downLoad , 'http://www.itheima.com/' ), ]) \u8fd0\u884c\u7ed3\u679c GET : http : // www . baidu . com / GET : http : // www . itcast . cn / GET : http : // www . itheima . com / 111327 bytes received from http : // www . baidu . com /. 172054 bytes received from http : // www . itheima . com /. 215035 bytes received from http : // www . itcast . cn /. \u4ece\u4e0a\u80fd\u591f\u770b\u5230\u662f\u5148\u53d1\u9001\u7684\u83b7\u53d6baidu\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u7136\u540e\u4f9d\u6b21\u662fitcast\u3001itheima\uff0c\u4f46\u662f\u6536\u5230\u6570\u636e\u7684\u5148\u540e\u987a\u5e8f\u4e0d\u4e00\u5b9a\u4e0e\u53d1\u9001\u987a\u5e8f\u76f8\u540c\uff0c\u8fd9\u4e5f\u5c31\u4f53\u73b0\u51fa\u4e86\u5f02\u6b65\uff0c\u5373\u4e0d\u786e\u5b9a\u4ec0\u4e48\u65f6\u5019\u4f1a\u6536\u5230\u6570\u636e\uff0c\u987a\u5e8f\u4e0d\u4e00\u5b9a","title":"\u5e76\u53d1\u4e0b\u8f7d\u539f\u7406"},{"location":"python\u5b66\u4e60/040 python\u591a\u4efb\u52a1\u534f\u7a0b/#_9","text":"from gevent import monkey import gevent import urllib.request #\u6709IO\u624d\u505a\u65f6\u9700\u8981\u8fd9\u4e00\u53e5 monkey . patch_all () def my_downLoad ( file_name , url ): print ( 'GET: %s ' % url ) resp = urllib . request . urlopen ( url ) data = resp . read () with open ( file_name , \"wb\" ) as f : f . write ( data ) print ( ' %d bytes received from %s .' % ( len ( data ), url )) gevent . joinall ([ gevent . spawn ( my_downLoad , \"1.mp4\" , 'http://oo52bgdsl.bkt.clouddn.com/05day-08- %E 3 %80% 90 %E 7 %90% 86 %E 8%A7%A3 %E 3 %80% 91 %E 5 %87% BD %E 6 %95% B0 %E 4%BD%BF %E 7 %94% A8 %E 6 %80% BB %E 7%BB %93% EF%BC %88% E4%B8 %80% EF%BC%89.mp4' ), gevent . spawn ( my_downLoad , \"2.mp4\" , 'http://oo52bgdsl.bkt.clouddn.com/05day-03- %E 3 %80% 90 %E 6 %8E %8C %E 6 %8F %A1 %E 3 %80% 91 %E 6 %97% A0 %E 5 %8F%82% E6 %95% B0 %E 6 %97% A0 %E 8%BF %94% E5%9B %9E%E 5 %80% BC %E 5 %87% BD %E 6 %95% B0 %E 7%9A %84% E5%AE%9A %E 4%B9 %89% E3 %80% 81 %E 8%B0 %83% E7 %94% A8 %28% E4%B8%8B%29.mp4' ), ]) \u4e0a\u9762\u7684url\u53ef\u4ee5\u6362\u4e3a\u81ea\u5df1\u9700\u8981\u4e0b\u8f7d\u89c6\u9891\u3001\u97f3\u4e50\u3001\u56fe\u7247\u7b49\u7f51\u5740","title":"\u5b9e\u73b0\u591a\u4e2a\u89c6\u9891\u4e0b\u8f7d"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/","text":"8.1\u6b63\u5219\u8868\u8fbe\u5f0f\u6982\u8ff0 \u00b6 \u601d\u8003 \u00b6 \u573a\u666f1\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u67e5\u627e\u51faitcast\u5f00\u5934\u7684\u8bed\u53e5 \u00b6 \u6d4b\u8bd5\u6587\u4ef6 itcast hello python itcast c++ itheima ios itheima php \u573a\u666f\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u627e\u5230\u542b\u6709itcast\u7684\u8bed\u53e5 \u00b6 \u6d4b\u8bd5\u6587\u4ef6 hello itcast python www.itcast.cn c++ itheima ios itheima php \u573a\u666f\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u627e\u5230\u90ae\u7bb1\u4e3a163\u6216\u8005126\u7684\u6240\u6709\u90ae\u4ef6\u5730\u5740 \u00b6 8.2 re\u6a21\u5757\u64cd\u4f5c \u00b6 \u5728Python\u4e2d\u9700\u8981\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u5757\uff0c\u540d\u5b57\u4e3a re 1. re\u6a21\u5757\u7684\u4f7f\u7528\u8fc7\u7a0b \u00b6 #coding=utf-8 # \u5bfc\u5165re\u6a21\u5757 import re # \u4f7f\u7528match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\u64cd\u4f5c result = re . match ( \u6b63\u5219\u8868\u8fbe\u5f0f , \u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32 ) # \u5982\u679c\u4e0a\u4e00\u6b65\u5339\u914d\u5230\u6570\u636e\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528group\u65b9\u6cd5\u6765\u63d0\u53d6\u6570\u636e result . group () 2. re\u6a21\u5757\u793a\u4f8b(\u5339\u914d\u4ee5itcast\u5f00\u5934\u7684\u8bed\u53e5) \u00b6 import re #\u7b2c\u4e00\u4e2a\u662f\u6b63\u5219\u8868\u8fbe\u5f0f,\u7b2c\u4e8c\u4e2a\u662f\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32 result = re . match ( \"itcast\" , \"itcast.cn\" ) #match\u5339\u914d\u7684\u610f\u601d #\u5339\u914d\u6210\u529f\u5c31\u6709\u8fd4\u56de\u503c,\u4e0d\u6210\u529f\u5c31\u6ca1\u6709\u8fd4\u56de\u503c result . group () #\u5982\u679c\u5339\u914d\u6210\u529f\u83b7\u5f97\u8fd4\u56de\u503c \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a itcast 3. \u8bf4\u660e \u00b6 re.match() \u80fd\u591f\u5339\u914d\u51fa\u4ee5 xxx \u5f00\u5934\u7684\u5b57\u7b26\u4e32 8.3\u5339\u914d\u5355\u4e2a\u5b57\u7b26 \u00b6 \u5728\u4e0a\u4e00\u5c0f\u8282\u4e2d\uff0c\u4e86\u89e3\u5230\u901a\u8fc7re\u6a21\u5757\u80fd\u591f\u5b8c\u6210\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u5b57\u7b26\u4e32 \u672c\u5c0f\u8282\uff0c\u5c06\u8981\u8bb2\u89e3\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5355\u5b57\u7b26\u5339\u914d \u5b57\u7b26 \u529f\u80fd . \u5339\u914d\u4efb\u610f1\u4e2a\u5b57\u7b26\uff08\u9664\u4e86\\n\uff09 [ ] \u5339\u914d[ ]\u4e2d\u5217\u4e3e\u7684\u5b57\u7b26 (\u6bd4\u5982[1-8]\u5c31\u662f\u5339\u914d\u8fd9\u4e00\u4f4d\u53ea\u8981\u662f1-8\u4e4b\u95f4\u7684\u6570\u5c31\u884c,\u4e0d\u8fde\u7eed\u4e5f\u53ef\u4ee5[123678]\u6216\u8005[1-36-8 ]\u4e5f\u53ef\u4ee5\u662f[123abc]\u7b49\u7b49) \\d \u5339\u914d\u6570\u5b57\uff0c\u53730-9 \\D \u5339\u914d\u975e\u6570\u5b57\uff0c\u5373\u4e0d\u662f\u6570\u5b57 \\s \u5339\u914d\u7a7a\u767d\uff0c\u5373 \u7a7a\u683c\uff0ctab\u952e \\S \u5339\u914d\u975e\u7a7a\u767d \\w \u5339\u914d\u5355\u8bcd\u5b57\u7b26\uff0c\u5373a-z\u3001A-Z\u30010-9\u3001_(\u4e5f\u53ef\u4ee5\u5339\u914d\u6c49\u5b57\u7b49\u7b49,\u4f7f\u7528\u9700\u8c28\u614e) \\W \u5339\u914d\u975e\u5355\u8bcd\u5b57\u7b26 \u793a\u4f8b1\uff1a . \u00b6 #coding=utf-8 import re ret = re . match ( \".\" , \"M\" ) print ( ret . group ()) ret = re . match ( \"t.o\" , \"too\" ) print ( ret . group ()) ret = re . match ( \"t.o\" , \"two\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a M too two \u793a\u4f8b2\uff1a[ ] \u00b6 #coding=utf-8 import re # \u5982\u679chello\u7684\u9996\u5b57\u7b26\u5c0f\u5199\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u5c0f\u5199\u7684h ret = re . match ( \"h\" , \"hello Python\" ) print ( ret . group ()) # \u5982\u679chello\u7684\u9996\u5b57\u7b26\u5927\u5199\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u5927\u5199\u7684H ret = re . match ( \"H\" , \"Hello Python\" ) print ( ret . group ()) # \u5927\u5c0f\u5199h\u90fd\u53ef\u4ee5\u7684\u60c5\u51b5 ret = re . match ( \"[hH]\" , \"hello Python\" ) print ( ret . group ()) ret = re . match ( \"[hH]\" , \"Hello Python\" ) print ( ret . group ()) ret = re . match ( \"[hH]ello Python\" , \"Hello Python\" ) print ( ret . group ()) # \u5339\u914d0\u52309\u7b2c\u4e00\u79cd\u5199\u6cd5 ret = re . match ( \"[0123456789]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) # \u5339\u914d0\u52309\u7b2c\u4e8c\u79cd\u5199\u6cd5 ret = re . match ( \"[0-9]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) #\u5339\u914d0-3\u4ee5\u53ca5-9\u7684\u5199\u6cd5 ret = re . match ( \"[0-35-9]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) # \u4e0b\u9762\u8fd9\u4e2a\u6b63\u5219\u4e0d\u80fd\u591f\u5339\u914d\u5230\u6570\u5b574\uff0c\u56e0\u6b64ret\u4e3aNone ret = re . match ( \"[0-35-9]Hello Python\" , \"4Hello Python\" ) # print(ret.group()) \u8fd0\u884c\u7ed3\u679c\uff1a h H h H Hello Python 7 Hello Python 7 Hello Python 7 Hello Python \u793a\u4f8b3\uff1a\\d \u00b6 #coding=utf-8 import re # \u666e\u901a\u7684\u5339\u914d\u65b9\u5f0f ret = re . match ( \"\u5ae6\u5a251\u53f7\" , \"\u5ae6\u5a251\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a252\u53f7\" , \"\u5ae6\u5a252\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a253\u53f7\" , \"\u5ae6\u5a253\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) # \u4f7f\u7528\\d\u8fdb\u884c\u5339\u914d ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a251\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a252\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a253\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a \u5ae6\u5a25 1 \u53f7 \u5ae6\u5a25 2 \u53f7 \u5ae6\u5a25 3 \u53f7 \u5ae6\u5a25 1 \u53f7 \u5ae6\u5a25 2 \u53f7 \u5ae6\u5a25 3 \u53f7 \u8bf4\u660e \u00b6 \u5176\u4ed6\u7684\u5339\u914d\u7b26\u53c2\u89c1\u540e\u9762\u7ae0\u8282\u7684\u8bb2\u89e3 8.4 \u5339\u914d\u591a\u4e2a\u5b57\u7b26 \u00b6 \u5339\u914d\u591a\u4e2a\u5b57\u7b26\u7684\u76f8\u5173\u683c\u5f0f | \u5b57\u7b26 | \u529f\u80fd | | ----- | --------------------------------------------------- | | * | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b00\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u53ef\u6709\u53ef\u65e0 | | + | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u81f3\u5c11\u67091\u6b21 | | ? | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u80050\u6b21\uff0c\u5373\u8981\u4e48\u67091\u6b21\uff0c\u8981\u4e48\u6ca1\u6709 | | {m} | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21 | | {m,n} | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0\u4ecem\u5230n\u6b21 | \u793a\u4f8b1\uff1a* \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u5927\u5c0f\u5b57\u7b26\uff0c\u540e\u9762\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u5e76\u4e14\u8fd9\u4e9b\u5c0f\u5199\u5b57\u6bcd\u53ef\u6709\u53ef\u65e0 #coding=utf-8 import re ret = re . match ( \"[A-Z][a-z]*\" , \"M\" ) print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"MnnM\" ) print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"Aabcdef\" ) #*\u662f\u5339\u914d\u524d\u9762\u7684[a-z]\u51fa\u73b0\u4efb\u610f\u591a\u6b21\u7684 print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"AabcdefH\" ) print ( ret . group ()) \u6267\u884c\u7ed3\u679c: M Mnn Aabcdef AabcdefH \u793a\u4f8b2\uff1a+ \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c\u53d8\u91cf\u540d\u662f\u5426\u6709\u6548 #coding=utf-8 import re names = [ \"name1\" , \"_name\" , \"2_name\" , \"__name__\" ] for name in names : ret = re . match ( \"[a-zA-Z_]+[\\w]*\" , name ) if ret : print ( \"\u53d8\u91cf\u540d %s \u7b26\u5408\u8981\u6c42\" % ret . group ()) else : print ( \"\u53d8\u91cf\u540d %s \u975e\u6cd5\" % name ) \u8fd0\u884c\u7ed3\u679c\uff1a \u53d8\u91cf\u540d name1 \u7b26\u5408\u8981\u6c42 \u53d8\u91cf\u540d _name \u7b26\u5408\u8981\u6c42 \u53d8\u91cf\u540d 2 _name \u975e\u6cd5 \u53d8\u91cf\u540d __name__ \u7b26\u5408\u8981\u6c42 \u793a\u4f8b3\uff1a? \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c0\u523099\u4e4b\u95f4\u7684\u6570\u5b57 #coding=utf-8 import re ret = re . match ( \"[1-9]?[0-9]\" , \"7\" ) print ( ret . group ()) ret = re . match ( \"[1-9]?\\d\" , \"33\" ) print ( ret . group ()) ret = re . match ( \"[1-9]?\\d\" , \"09\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a 7 33 0 # \u8fd9\u4e2a\u7ed3\u679c\u5e76\u4e0d\u662f\u60f3\u8981\u7684\uff0c\u5229\u7528$\u624d\u80fd\u89e3\u51b3 \u793a\u4f8b4\uff1a{m} \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c8\u523020\u4f4d\u7684\u5bc6\u7801\uff0c\u53ef\u4ee5\u662f\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf #coding=utf-8 import re ret = re . match ( \"[a-zA-Z0-9_]{6}\" , \"12a3g45678\" ) print ( ret . group ()) ret = re . match ( \"[a-zA-Z0-9_]{8,20}\" , \"1ad12f23s34455ff66\" ) #\u8fd9\u91cc{8,20}\u662f8-20\u4f4d\u7684\u610f\u601d print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a 12 a3g4 1 ad12f23s34455ff66 ## \u5339\u914d\u5f00\u5934\u7ed3\u5c3e | \u5b57\u7b26 | \u529f\u80fd | | ---- | -------------- | | ^ | \u5339\u914d\u5b57\u7b26\u4e32\u5f00\u5934 | | $ | \u5339\u914d\u5b57\u7b26\u4e32\u7ed3\u5c3e | \u6ce8\u610f [ a]\u8868\u793a\u201c\u5339\u914d\u9664\u4e86a\u7684\u4efb\u610f\u5b57\u7b26, [a]\u8868\u793a\u5339\u914d\u5f00\u5934\u662fa\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b1\uff1a$ \u00b6 \u9700\u6c42\uff1a\u5339\u914d163.com\u7684\u90ae\u7bb1\u5730\u5740 #coding=utf-8 import re email_list = [ \"xiaoWang@163.com\" , \"xiaoWang@163.comheihei\" , \".com.xiaowang@qq.com\" ] for email in email_list : ret = re . match ( \"[\\w]{4,20}@163\\.com\" , email ) if ret : print ( \" %s \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740,\u5339\u914d\u540e\u7684\u7ed3\u679c\u662f: %s \" % ( email , ret . group ())) else : print ( \" %s \u4e0d\u7b26\u5408\u8981\u6c42\" % email ) \u8fd0\u884c\u7ed3\u679c: xiaoWang @163.com \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com xiaoWang @163.comheihei \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com . com . xiaowang @qq.com \u4e0d\u7b26\u5408\u8981\u6c42 \u5b8c\u5584\u540e email_list = [ \"xiaoWang@163.com\" , \"xiaoWang@163.comheihei\" , \".com.xiaowang@qq.com\" ] for email in email_list : ret = re . match ( \"[\\w]{4,20}@163\\.com$\" , email ) if ret : print ( \" %s \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740,\u5339\u914d\u540e\u7684\u7ed3\u679c\u662f: %s \" % ( email , ret . group ())) else : print ( \" %s \u4e0d\u7b26\u5408\u8981\u6c42\" % email ) \u8fd0\u884c\u7ed3\u679c\uff1a xiaoWang @163.com \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com xiaoWang @163.comheihei \u4e0d\u7b26\u5408\u8981\u6c42 . com . xiaowang @qq.com \u4e0d\u7b26\u5408\u8981\u6c42 8.5\u5339\u914d\u5206\u7ec4 \u00b6 \u5b57\u7b26 \u529f\u80fd | \u5339\u914d\u5de6\u53f3\u4efb\u610f\u4e00\u4e2a\u8868\u8fbe\u5f0f (ab) \u5c06\u62ec\u53f7\u4e2d\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u5206\u7ec4 \\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 (?P ) \u5206\u7ec4\u8d77\u522b\u540d (?P=name) \u5f15\u7528\u522b\u540d\u4e3aname\u5206\u7ec4\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b1\uff1a| \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa0-100\u4e4b\u95f4\u7684\u6570\u5b57 \u9519\u8bef\u64cd\u4f5c: #coding=utf-8 import re ret = re . match ( \"[1-9]?\\d\" , \"8\" ) print ( ret . group ()) # 8 ret = re . match ( \"[1-9]?\\d\" , \"78\" ) print ( ret . group ()) # 78 # \u4e0d\u6b63\u786e\u7684\u60c5\u51b5 ret = re . match ( \"[1-9]?\\d\" , \"08\" ) print ( ret . group ()) # 0 #?\u5339\u914d\u7684\u662f\u524d\u9762\u51fa\u73b0\u7684\u5b57\u7b26\u53ef\u4ee5\u6709\u4e00\u6b21\u62160\u6b21,\u7136\u540e\u6ca1\u6709\u51fa\u73b0,\u7136\u540e\\d\u5339\u914d\u5230\u4e860,\u6240\u4ee5\u8fd4\u56de\u7684\u662f0 \u4fee\u6b63\u540e\u7684\u64cd\u4f5c # \u4fee\u6b63\u4e4b\u540e\u7684 ret = re . match ( \"[1-9]?\\d$\" , \"008\" ) #\u8fd9\u4e2a$\u662f\u5339\u914d\u4fee\u9970\\d\u4e5f\u5c31\u662f\u8bf4\u7ed3\u5c3e\u5fc5\u987b\u662f\u6574\u6570 \u7684.\u7136\u540e?\u8fd9\u91cc\u5c31\u5339\u914d\u4e0d\u5230 if ret : print ( ret . group ()) else : print ( \"\u4e0d\u57280-100\u4e4b\u95f4\" ) ============ \u4e0d\u5728 0 - 100 \u4e4b\u95f4 \u4f7f\u7528 | # \u6dfb\u52a0| ret = re . match ( \"[1-9]?\\d$|100\" , \"8\" ) print ( ret . group ()) # 8 ret = re . match ( \"[1-9]?\\d$|100\" , \"78\" ) print ( ret . group ()) # 78 ret = re . match ( \"[1-9]?\\d$|100\" , \"08\" ) # print(ret.group()) # \u4e0d\u662f0-100\u4e4b\u95f4 ret = re . match ( \"[1-9]?\\d$|100\" , \"100\" ) print ( ret . group ()) # 100 \u6267\u884c\u7ed3\u679c: 8 78 100 \u793a\u4f8b2\uff1a( ) \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa163\u3001126\u3001qq\u90ae\u7bb1 #coding=utf-8 import re ret = re . match ( \"\\w{4,20}@163\\.com\" , \"test@163.com\" ) print ( ret . group ()) # test@163.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@126.com\" ) #\u8fd9\u91cc\u9700\u8981\u5c06\u6216\u7684\u5185\u5bb9\u7528\u5c0f\u62ec\u53f7\u9614\u8d77\u6765,\u9632\u6b62\u51fa\u73b0\u903b\u8f91\u4e0a\u7684\u9519\u8bef print ( ret . group ()) # test@126.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@qq.com\" ) print ( ret . group ()) # test@qq.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@gmail.com\" ) if ret : print ( ret . group ()) else : print ( \"\u4e0d\u662f163\u3001126\u3001qq\u90ae\u7bb1\" ) # \u4e0d\u662f163\u3001126\u3001qq\u90ae\u7bb1 \u6267\u884c\u7ed3\u679c: test @163.com test @126.com test @qq.com \u4e0d\u662f 163 \u3001 126 \u3001 qq\u90ae\u7bb1 \u4e0d\u662f\u4ee54\u30017\u7ed3\u5c3e\u7684\u624b\u673a\u53f7\u7801(11\u4f4d) \u00b6 import re tels = [ \"13100001234\" , \"18912344321\" , \"10086\" , \"18800007777\" ] for tel in tels : ret = re . match ( \"1\\d{9}[0-35-68-9]\" , tel ) if ret : print ( ret . group ()) else : print ( \" %s \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7\" % tel ) \u6267\u884c\u7ed3\u679c: 13100001234 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7 18912344321 10086 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7 18800007777 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7 \u63d0\u53d6\u533a\u53f7\u548c\u7535\u8bdd\u53f7\u7801(\u4e00\u4e2a\u62ec\u53f7\u5c31\u662f\u4e00\u4e2a\u5206\u7ec4,\u4f7f\u7528group\u7684\u65f6\u5019\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u7f16\u53f7\u8fdb\u884c\u63d0\u53d6) \u00b6 ret = re . match ( \"([^-]*)-(\\d+)\" , \"010-12345678\" ) ret . group ( 1 ) ret . group ( 2 ) \u6267\u884c\u7ed3\u679c: '010' '12345678' \u9700\u6c42\uff1a\u5339\u914d\u51fa hh \u00b6 import re # \u80fd\u591f\u5b8c\u6210\u5bf9\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u7684\u5339\u914d ret = re . match ( \"<[a-zA-Z]*>\\w*</[a-zA-Z]*>\" , \"<html>hh</html>\" ) print ( ret . group ()) # \u5982\u679c\u9047\u5230\u975e\u6b63\u5e38\u7684html\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u5339\u914d\u51fa\u9519 ret = re . match ( \"<[a-zA-Z]*>\\w*</[a-zA-Z]*>\" , \"<html>hh</htmlbalabala>\" ) print ( ret . group ()) # \u6b63\u786e\u7684\u7406\u89e3\u601d\u8def\uff1a\u5982\u679c\u5728\u7b2c\u4e00\u5bf9<>\u4e2d\u662f\u4ec0\u4e48\uff0c\u6309\u7406\u8bf4\u5728\u540e\u9762\u7684\u90a3\u5bf9<>\u4e2d\u5c31\u5e94\u8be5\u662f\u4ec0\u4e48 # \u901a\u8fc7\u5f15\u7528\u5206\u7ec4\u4e2d\u5339\u914d\u5230\u7684\u6570\u636e\u5373\u53ef\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u662f\u5143\u5b57\u7b26\u4e32\uff0c\u5373\u7c7b\u4f3c r\"\"\u8fd9\u79cd\u683c\u5f0f #\\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 ret = re . match ( r \"<([a-zA-Z]*)>\\w*</\\1>\" , \"<html>hh</html>\" ) # \\1 1\u5c31\u662f\u7b2c\u4e00\u4e2a\u62ec\u53f7\u51fa\u73b0\u7684\u5185\u5bb9 print ( ret . group ()) # \u56e0\u4e3a2\u5bf9<>\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u6ca1\u6709\u5339\u914d\u51fa\u6765 test_label = \"<html>hh</htmlbalabala>\" ret = re . match ( r \"<([a-zA-Z]*)>\\w*</\\1>\" , test_label ) if ret : print ( ret . group ()) else : print ( \" %s \u8fd9\u662f\u4e00\u5bf9\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\" % test_label ) \u6267\u884c\u7ed3\u679c: < html > hh </ html > < html > hh </ htmlbalabala > < html > hh </ html > < html > hh </ htmlbalabala > \u8fd9\u662f\u4e00\u5bf9\u4e0d\u6b63\u786e\u7684\u6807\u7b7e \u793a\u4f8b4\uff1a\\number \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa www.itcast.cn #coding=utf-8 import re labels = [ \"<html><h1>www.itcast.cn</h1></html>\" , \"<html><h1>www.itcast.cn</h2></html>\" ] for label in labels : ret = re . match ( r \"<(\\w*)><(\\w*)>.*</\\2></\\1>\" , label ) if ret : print ( \" %s \u662f\u7b26\u5408\u8981\u6c42\u7684\u6807\u7b7e\" % ret . group ()) else : print ( \" %s \u4e0d\u7b26\u5408\u8981\u6c42\" % label ) \u8fd0\u884c\u7ed3\u679c\uff1a < html >< h1 > www . itcast . cn </ h1 ></ html > \u662f\u7b26\u5408\u8981\u6c42\u7684\u6807\u7b7e < html >< h1 > www . itcast . cn </ h2 ></ html > \u4e0d\u7b26\u5408\u8981\u6c42 \u793a\u4f8b5\uff1a(?P ) (?P=name) ====(?P \\w*) \u8fd9\u4e2a\u662f\u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26,\u5e76\u4e14\u5c06\u5206\u7ec4\u547d\u540d\u4e3aname \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa www.itcast.cn #coding=utf-8 import re ret = re . match ( r \"<(?P<name1>\\w*)><(?P<name2>\\w*)>.*</(?P=name2)></(?P=name1)>\" , \"<html><h1>www.itcast.cn</h1></html>\" ) ret . group () ret = re . match ( r \"<(?P<name1>\\w*)><(?P<name2>\\w*)>.*</(?P=name2)></(?P=name1)>\" , \"<html><h1>www.itcast.cn</h2></html>\" ) ret . group () \u6267\u884c\u7ed3\u679c: '<html><h1>www.itcast.cn</h1></html>' ------------------------------------------------ AttributeError Traceback ( most recent call last ) < ipython - input - 6 - 2744835e3 ab3 > in < module > 1 ret = re . match ( r \"<(?P<name1>\\w*)><(?P<name2>\\w*)>.*</(?P=name2)></(?P=name1)>\" , \"<html><h1>www.itcast.cn</h2></html>\" ) ----> 2 ret . group () AttributeError : 'NoneType' object has no attribute 'group' \u6ce8\u610f\uff1a(?P )\u548c(?P=name)\u4e2d\u7684\u5b57\u6bcdp\u5927\u5199 \u00b6 \u8fd0\u884c\u7ed3\u679c\uff1a re\u6a21\u5757\u7684\u9ad8\u7ea7\u7528\u6cd5(python\u72ec\u6709\u7684) \u00b6 search(\u4e0d\u4f1a\u4ece\u5934\u5f00\u59cb\u5339\u914d) \u00b6 \u9700\u6c42\uff1a\u5339\u914d\u51fa\u6587\u7ae0\u9605\u8bfb\u7684\u6b21\u6570 #coding=utf-8 import re ret = re . search ( r \"\\d+\" , \"\u9605\u8bfb\u6b21\u6570\u4e3a 9999\" ) ret . group () \u8fd0\u884c\u7ed3\u679c\uff1a '9999' findall (\u76f4\u63a5\u8fd4\u56de\u7684\u5c31\u662f\u4e00\u4e2a\u5217\u8868) \u00b6 \u9700\u6c42\uff1a\u7edf\u8ba1\u51fapython\u3001c\u3001c++\u76f8\u5e94\u6587\u7ae0\u9605\u8bfb\u7684\u6b21\u6570 #coding=utf-8 import re ret = re . findall ( r \"\\d+\" , \"python = 9999, c = 7890, c++ = 12345\" ) print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a [ '9999' , '7890' , '12345' ] sub \u5c06\u5339\u914d\u5230\u7684\u6570\u636e\u8fdb\u884c\u66ff\u6362 \u00b6 \u9700\u6c42\uff1a\u5c06\u5339\u914d\u5230\u7684\u9605\u8bfb\u6b21\u6570\u52a01 \u65b9\u6cd51\uff1a #\u76f4\u63a5\u66ff\u6362 #coding=utf-8 import re ret = re . sub ( r \"\\d+\" , '998' , \"python = 997\" ) print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a python = 998 \u65b9\u6cd52\uff1a sub\u652f\u6301\u51fd\u6570\u7684\u8c03\u7528,\u901a\u8fc7\u51fd\u6570\u8fdb\u884c\u4e0d\u540c\u7684\u66ff\u6362(\u72ec\u6709\u7684,\u8fdb\u884c;\u4e86\u89e3) #coding=utf-8 import re def add ( temp ): strNum = temp . group () #\u83b7\u5f97\u6b63\u5219\u5bf9\u8c61\u7684\u6570\u636e num = int ( strNum ) + 1 return str ( num ) #\u6700\u540e\u8fd4\u56de\u7684\u5c31\u662f\u9700\u8981\u66ff\u6362\u7684\u5b57\u7b26\u4e32 ret = re . sub ( r \"\\d+\" , add , \"python = 997\" ) #\u4f1a\u5c06\u5339\u914d\u540e\u7684\u6b63\u5219\u5bf9\u8c61\u4f20\u9012\u7ed9\u8fd9\u4e2a\u51fd\u6570 print ( ret ) ret = re . sub ( r \"\\d+\" , add , \"python = 99\" ) print ( ret ) \u6267\u884c\u7ed3\u679c: python = 998 python = 100 \u7ec3\u4e60 \u00b6 \u4ece\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6587\u672c < div > < p > \u5c97\u4f4d\u804c\u8d23\uff1a </ p > < p > \u5b8c\u6210\u63a8\u8350\u7b97\u6cd5\u3001\u6570\u636e\u7edf\u8ba1\u3001\u63a5\u53e3\u3001\u540e\u53f0\u7b49\u670d\u52a1\u5668\u7aef\u76f8\u5173\u5de5\u4f5c </ p > < p >< br ></ p > < p > \u5fc5\u5907\u8981\u6c42\uff1a </ p > < p > \u826f\u597d\u7684\u81ea\u6211\u9a71\u52a8\u529b\u548c\u804c\u4e1a\u7d20\u517b\uff0c\u5de5\u4f5c\u79ef\u6781\u4e3b\u52a8\u3001\u7ed3\u679c\u5bfc\u5411 </ p > < p > &nbsp; < br ></ p > < p > \u6280\u672f\u8981\u6c42\uff1a </ p > < p > 1\u3001\u4e00\u5e74\u4ee5\u4e0a Python \u5f00\u53d1\u7ecf\u9a8c\uff0c\u638c\u63e1\u9762\u5411\u5bf9\u8c61\u5206\u6790\u548c\u8bbe\u8ba1\uff0c\u4e86\u89e3\u8bbe\u8ba1\u6a21\u5f0f </ p > < p > 2\u3001\u638c\u63e1HTTP\u534f\u8bae\uff0c\u719f\u6089MVC\u3001MVVM\u7b49\u6982\u5ff5\u4ee5\u53ca\u76f8\u5173WEB\u5f00\u53d1\u6846\u67b6 </ p > < p > 3\u3001\u638c\u63e1\u5173\u7cfb\u6570\u636e\u5e93\u5f00\u53d1\u8bbe\u8ba1\uff0c\u638c\u63e1 SQL\uff0c\u719f\u7ec3\u4f7f\u7528 MySQL/PostgreSQL \u4e2d\u7684\u4e00\u79cd < br ></ p > < p > 4\u3001\u638c\u63e1NoSQL\u3001MQ\uff0c\u719f\u7ec3\u4f7f\u7528\u5bf9\u5e94\u6280\u672f\u89e3\u51b3\u65b9\u6848 </ p > < p > 5\u3001\u719f\u6089 Javascript/CSS/HTML5\uff0cJQuery\u3001React\u3001Vue.js </ p > < p > &nbsp; < br ></ p > < p > \u52a0\u5206\u9879\uff1a </ p > < p > \u5927\u6570\u636e\uff0c\u6570\u7406\u7edf\u8ba1\uff0c\u673a\u5668\u5b66\u4e60\uff0csklearn\uff0c\u9ad8\u6027\u80fd\uff0c\u5927\u5e76\u53d1\u3002 </ p > </ div > \u53c2\u8003\u7b54\u6848:\u4f7f\u7528sub\u8fdb\u884c\u5220\u9664\u6ca1\u6709\u7528\u7684\u6807\u7b7e re . sub ( r \"<[^>]*>|&nbsp;|\\n\" , \"\" , test_str ) split \u6839\u636e\u5339\u914d\u8fdb\u884c\u5207\u5272\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 \u00b6 \u9700\u6c42\uff1a\u5207\u5272\u5b57\u7b26\u4e32\u201cinfo:xiaoZhang 33 shandong\u201d #coding=utf-8 import re ret = re . split ( r \":| \" , \"info:xiaoZhang 33 shandong\" ) #\u4ee5\u5192\u53f7\u6216\u8005\u7a7a\u683c\u4e3a\u5206\u5272\u5b57\u7b26 print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a [ 'info' , 'xiaoZhang' , '33' , 'shandong' ] 8.8python\u8d2a\u5a6a\u548c\u975e\u8d2a\u5a6a \u00b6 Python\u91cc\u6570\u91cf\u8bcd\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u7684\uff08\u5728\u5c11\u6570\u8bed\u8a00\u91cc\u4e5f\u53ef\u80fd\u662f\u9ed8\u8ba4\u975e\u8d2a\u5a6a\uff09\uff0c\u603b\u662f\u5c1d\u8bd5\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u7b26\uff1b \u975e\u8d2a\u5a6a\u5219\u76f8\u53cd\uff0c\u603b\u662f\u5c1d\u8bd5\u5339\u914d\u5c3d\u53ef\u80fd\u5c11\u7684\u5b57\u7b26\u3002 \u5728\" * \",\" ? \",\" + \",\" {m,n} \"\u540e\u9762\u52a0\u4e0a \uff1f \uff0c\u4f7f\u8d2a\u5a6a\u53d8\u6210\u975e\u8d2a\u5a6a\u3002 >>> s = \"This is a number 234-235-22-423\" >>> r = re . match ( \".+(\\d+-\\d+-\\d+-\\d+)\" , s ) >>> r . group ( 1 ) '4-235-22-423' >>> r = re . match ( \".+?(\\d+-\\d+-\\d+-\\d+)\" , s ) >>> r . group ( 1 ) '234-235-22-423' >>> \u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u4e2d\u4f7f\u7528\u5230\u901a\u914d\u5b57\uff0c\u90a3\u5b83\u5728\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u6c42\u503c\u65f6\uff0c\u4f1a\u5c3d\u91cf\u201c\u6293\u53d6\u201d\u6ee1\u8db3\u5339\u914d\u6700\u957f\u5b57\u7b26\u4e32\uff0c\u5728\u6211\u4eec\u4e0a\u9762\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u201c .+ \u201d\u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u542f\u59cb\u5904\u6293\u53d6\u6ee1\u8db3\u6a21\u5f0f\u7684\u6700\u957f\u5b57\u7b26\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u60f3\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u6574\u578b\u5b57\u6bb5\u7684\u4e2d\u7684\u5927\u90e8\u5206\uff0c\u201c \\d+ \u201d\u53ea\u9700\u4e00\u4f4d\u5b57\u7b26\u5c31\u53ef\u4ee5\u5339\u914d\uff0c\u6240\u4ee5\u5b83\u5339\u914d\u4e86\u6570\u5b57\u201c 4 \u201d\uff0c\u800c\u201c .+ \u201d\u5219\u5339\u914d\u4e86\u4ece\u5b57\u7b26\u4e32\u8d77\u59cb\u5230\u8fd9\u4e2a\u7b2c\u4e00\u4f4d\u6570\u5b574\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1a\u975e\u8d2a\u5a6a\u64cd\u4f5c\u7b26\u201c \uff1f \u201d\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u5728\" * \",\" + \",\" ? \"\u7684\u540e\u9762\uff0c\u8981\u6c42\u6b63\u5219\u5339\u914d\u7684\u8d8a\u5c11\u8d8a\u597d\u3002 >>> re . match ( r \"aa(\\d+)\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>> re . match ( r \"aa(\\d+?)\" , \"aa2343ddd\" ) . group ( 1 ) '2' >>> re . match ( r \"aa(\\d+)ddd\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>> re . match ( r \"aa(\\d+?)ddd\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>> \u7ec3\u4e00\u7ec3 \u00b6 \u5b57\u7b26\u4e32\u4e3a: < img data - original = \"https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg\" src = \"https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg\" style = \"display: inline;\" > \u8bf7\u63d0\u53d6url\u5730\u5740 \u53c2\u8003\u7b54\u6848 ret = re . search ( r \"https://.*?\\.jpg\" , test ) ret . group () \u6267\u884c\u7ed3\u679c: 'https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg' 8.9r\u7684\u4f5c\u7528 \u00b6 >>> mm = \"c: \\\\ a \\\\ b \\\\ c\" >>> mm 'c: \\\\ a \\\\ b \\\\ c' >>> print ( mm ) c : \\ a \\ b \\ c >>> re . match ( \"c: \\\\\\\\ \" , mm ) . group () 'c: \\\\ ' >>> ret = re . match ( \"c: \\\\\\\\ \" , mm ) . group () >>> print ( ret ) c : \\ >>> ret = re . match ( \"c: \\\\\\\\ a\" , mm ) . group () >>> print ( ret ) c : \\ a >>> ret = re . match ( r \"c: \\\\ a\" , mm ) . group () >>> print ( ret ) c : \\ a >>> ret = re . match ( r \"c:\\a\" , mm ) . group () Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > AttributeError : 'NoneType' object has no attribute 'group' >>> \u8bf4\u660e Python\u4e2d\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a r \u8868\u793a\u539f\u751f\u5b57\u7b26\u4e32\uff0c \u4e0e\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u76f8\u540c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u4f7f\u7528\" \\ \"\u4f5c\u4e3a\u8f6c\u4e49\u5b57\u7b26\uff0c\u8fd9\u5c31\u53ef\u80fd\u9020\u6210\u53cd\u659c\u6760\u56f0\u6270\u3002\u5047\u5982\u4f60\u9700\u8981\u5339\u914d\u6587\u672c\u4e2d\u7684\u5b57\u7b26\" \\ \"\uff0c\u90a3\u4e48\u4f7f\u7528\u7f16\u7a0b\u8bed\u8a00\u8868\u793a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u5c06\u9700\u89814\u4e2a\u53cd\u659c\u6760\" \\\\ \"\uff1a\u524d\u4e24\u4e2a\u548c\u540e\u4e24\u4e2a\u5206\u522b\u7528\u4e8e\u5728\u7f16\u7a0b\u8bed\u8a00\u91cc\u8f6c\u4e49\u6210\u53cd\u659c\u6760\uff0c\u8f6c\u6362\u6210\u4e24\u4e2a\u53cd\u659c\u6760\u540e\u518d\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u8f6c\u4e49\u6210\u4e00\u4e2a\u53cd\u659c\u6760\u3002 Python\u91cc\u7684\u539f\u751f\u5b57\u7b26\u4e32\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e86\u539f\u751f\u5b57\u7b26\u4e32\uff0c\u4f60\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u662f\u4e0d\u662f\u6f0f\u5199\u4e86\u53cd\u659c\u6760\uff0c\u5199\u51fa\u6765\u7684\u8868\u8fbe\u5f0f\u4e5f\u66f4\u76f4\u89c2\u3002 mm = \"c: \\\\ a \\\\ b \\\\ c\" ret = re . match ( r \"c: \\\\ a\" , mm ) . group () ret 'c: \\\\ a'","title":"041 python\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#81","text":"","title":"8.1\u6b63\u5219\u8868\u8fbe\u5f0f\u6982\u8ff0"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#_1","text":"","title":"\u601d\u8003"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1itcast","text":"\u6d4b\u8bd5\u6587\u4ef6 itcast hello python itcast c++ itheima ios itheima php","title":"\u573a\u666f1\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u67e5\u627e\u51faitcast\u5f00\u5934\u7684\u8bed\u53e5"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#itcast","text":"\u6d4b\u8bd5\u6587\u4ef6 hello itcast python www.itcast.cn c++ itheima ios itheima php","title":"\u573a\u666f\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u627e\u5230\u542b\u6709itcast\u7684\u8bed\u53e5"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#163126","text":"","title":"\u573a\u666f\uff1a\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u627e\u5230\u90ae\u7bb1\u4e3a163\u6216\u8005126\u7684\u6240\u6709\u90ae\u4ef6\u5730\u5740"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#82-re","text":"\u5728Python\u4e2d\u9700\u8981\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u5757\uff0c\u540d\u5b57\u4e3a re","title":"8.2 re\u6a21\u5757\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1-re","text":"#coding=utf-8 # \u5bfc\u5165re\u6a21\u5757 import re # \u4f7f\u7528match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\u64cd\u4f5c result = re . match ( \u6b63\u5219\u8868\u8fbe\u5f0f , \u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32 ) # \u5982\u679c\u4e0a\u4e00\u6b65\u5339\u914d\u5230\u6570\u636e\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528group\u65b9\u6cd5\u6765\u63d0\u53d6\u6570\u636e result . group ()","title":"1. re\u6a21\u5757\u7684\u4f7f\u7528\u8fc7\u7a0b"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#2-reitcast","text":"import re #\u7b2c\u4e00\u4e2a\u662f\u6b63\u5219\u8868\u8fbe\u5f0f,\u7b2c\u4e8c\u4e2a\u662f\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32 result = re . match ( \"itcast\" , \"itcast.cn\" ) #match\u5339\u914d\u7684\u610f\u601d #\u5339\u914d\u6210\u529f\u5c31\u6709\u8fd4\u56de\u503c,\u4e0d\u6210\u529f\u5c31\u6ca1\u6709\u8fd4\u56de\u503c result . group () #\u5982\u679c\u5339\u914d\u6210\u529f\u83b7\u5f97\u8fd4\u56de\u503c \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a itcast","title":"2. re\u6a21\u5757\u793a\u4f8b(\u5339\u914d\u4ee5itcast\u5f00\u5934\u7684\u8bed\u53e5)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#3","text":"re.match() \u80fd\u591f\u5339\u914d\u51fa\u4ee5 xxx \u5f00\u5934\u7684\u5b57\u7b26\u4e32","title":"3. \u8bf4\u660e"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#83","text":"\u5728\u4e0a\u4e00\u5c0f\u8282\u4e2d\uff0c\u4e86\u89e3\u5230\u901a\u8fc7re\u6a21\u5757\u80fd\u591f\u5b8c\u6210\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u5b57\u7b26\u4e32 \u672c\u5c0f\u8282\uff0c\u5c06\u8981\u8bb2\u89e3\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5355\u5b57\u7b26\u5339\u914d \u5b57\u7b26 \u529f\u80fd . \u5339\u914d\u4efb\u610f1\u4e2a\u5b57\u7b26\uff08\u9664\u4e86\\n\uff09 [ ] \u5339\u914d[ ]\u4e2d\u5217\u4e3e\u7684\u5b57\u7b26 (\u6bd4\u5982[1-8]\u5c31\u662f\u5339\u914d\u8fd9\u4e00\u4f4d\u53ea\u8981\u662f1-8\u4e4b\u95f4\u7684\u6570\u5c31\u884c,\u4e0d\u8fde\u7eed\u4e5f\u53ef\u4ee5[123678]\u6216\u8005[1-36-8 ]\u4e5f\u53ef\u4ee5\u662f[123abc]\u7b49\u7b49) \\d \u5339\u914d\u6570\u5b57\uff0c\u53730-9 \\D \u5339\u914d\u975e\u6570\u5b57\uff0c\u5373\u4e0d\u662f\u6570\u5b57 \\s \u5339\u914d\u7a7a\u767d\uff0c\u5373 \u7a7a\u683c\uff0ctab\u952e \\S \u5339\u914d\u975e\u7a7a\u767d \\w \u5339\u914d\u5355\u8bcd\u5b57\u7b26\uff0c\u5373a-z\u3001A-Z\u30010-9\u3001_(\u4e5f\u53ef\u4ee5\u5339\u914d\u6c49\u5b57\u7b49\u7b49,\u4f7f\u7528\u9700\u8c28\u614e) \\W \u5339\u914d\u975e\u5355\u8bcd\u5b57\u7b26","title":"8.3\u5339\u914d\u5355\u4e2a\u5b57\u7b26"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1","text":"#coding=utf-8 import re ret = re . match ( \".\" , \"M\" ) print ( ret . group ()) ret = re . match ( \"t.o\" , \"too\" ) print ( ret . group ()) ret = re . match ( \"t.o\" , \"two\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a M too two","title":"\u793a\u4f8b1\uff1a ."},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#2","text":"#coding=utf-8 import re # \u5982\u679chello\u7684\u9996\u5b57\u7b26\u5c0f\u5199\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u5c0f\u5199\u7684h ret = re . match ( \"h\" , \"hello Python\" ) print ( ret . group ()) # \u5982\u679chello\u7684\u9996\u5b57\u7b26\u5927\u5199\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u5927\u5199\u7684H ret = re . match ( \"H\" , \"Hello Python\" ) print ( ret . group ()) # \u5927\u5c0f\u5199h\u90fd\u53ef\u4ee5\u7684\u60c5\u51b5 ret = re . match ( \"[hH]\" , \"hello Python\" ) print ( ret . group ()) ret = re . match ( \"[hH]\" , \"Hello Python\" ) print ( ret . group ()) ret = re . match ( \"[hH]ello Python\" , \"Hello Python\" ) print ( ret . group ()) # \u5339\u914d0\u52309\u7b2c\u4e00\u79cd\u5199\u6cd5 ret = re . match ( \"[0123456789]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) # \u5339\u914d0\u52309\u7b2c\u4e8c\u79cd\u5199\u6cd5 ret = re . match ( \"[0-9]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) #\u5339\u914d0-3\u4ee5\u53ca5-9\u7684\u5199\u6cd5 ret = re . match ( \"[0-35-9]Hello Python\" , \"7Hello Python\" ) print ( ret . group ()) # \u4e0b\u9762\u8fd9\u4e2a\u6b63\u5219\u4e0d\u80fd\u591f\u5339\u914d\u5230\u6570\u5b574\uff0c\u56e0\u6b64ret\u4e3aNone ret = re . match ( \"[0-35-9]Hello Python\" , \"4Hello Python\" ) # print(ret.group()) \u8fd0\u884c\u7ed3\u679c\uff1a h H h H Hello Python 7 Hello Python 7 Hello Python 7 Hello Python","title":"\u793a\u4f8b2\uff1a[ ]"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#3d","text":"#coding=utf-8 import re # \u666e\u901a\u7684\u5339\u914d\u65b9\u5f0f ret = re . match ( \"\u5ae6\u5a251\u53f7\" , \"\u5ae6\u5a251\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a252\u53f7\" , \"\u5ae6\u5a252\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a253\u53f7\" , \"\u5ae6\u5a253\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) # \u4f7f\u7528\\d\u8fdb\u884c\u5339\u914d ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a251\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a252\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) ret = re . match ( \"\u5ae6\u5a25\\d\u53f7\" , \"\u5ae6\u5a253\u53f7\u53d1\u5c04\u6210\u529f\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a \u5ae6\u5a25 1 \u53f7 \u5ae6\u5a25 2 \u53f7 \u5ae6\u5a25 3 \u53f7 \u5ae6\u5a25 1 \u53f7 \u5ae6\u5a25 2 \u53f7 \u5ae6\u5a25 3 \u53f7","title":"\u793a\u4f8b3\uff1a\\d"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#_2","text":"\u5176\u4ed6\u7684\u5339\u914d\u7b26\u53c2\u89c1\u540e\u9762\u7ae0\u8282\u7684\u8bb2\u89e3","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#84","text":"\u5339\u914d\u591a\u4e2a\u5b57\u7b26\u7684\u76f8\u5173\u683c\u5f0f | \u5b57\u7b26 | \u529f\u80fd | | ----- | --------------------------------------------------- | | * | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b00\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u53ef\u6709\u53ef\u65e0 | | + | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u81f3\u5c11\u67091\u6b21 | | ? | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u80050\u6b21\uff0c\u5373\u8981\u4e48\u67091\u6b21\uff0c\u8981\u4e48\u6ca1\u6709 | | {m} | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21 | | {m,n} | \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0\u4ecem\u5230n\u6b21 |","title":"8.4 \u5339\u914d\u591a\u4e2a\u5b57\u7b26"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1_1","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u5927\u5c0f\u5b57\u7b26\uff0c\u540e\u9762\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u5e76\u4e14\u8fd9\u4e9b\u5c0f\u5199\u5b57\u6bcd\u53ef\u6709\u53ef\u65e0 #coding=utf-8 import re ret = re . match ( \"[A-Z][a-z]*\" , \"M\" ) print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"MnnM\" ) print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"Aabcdef\" ) #*\u662f\u5339\u914d\u524d\u9762\u7684[a-z]\u51fa\u73b0\u4efb\u610f\u591a\u6b21\u7684 print ( ret . group ()) ret = re . match ( \"[A-Z][a-z]*\" , \"AabcdefH\" ) print ( ret . group ()) \u6267\u884c\u7ed3\u679c: M Mnn Aabcdef AabcdefH","title":"\u793a\u4f8b1\uff1a*"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#2_1","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c\u53d8\u91cf\u540d\u662f\u5426\u6709\u6548 #coding=utf-8 import re names = [ \"name1\" , \"_name\" , \"2_name\" , \"__name__\" ] for name in names : ret = re . match ( \"[a-zA-Z_]+[\\w]*\" , name ) if ret : print ( \"\u53d8\u91cf\u540d %s \u7b26\u5408\u8981\u6c42\" % ret . group ()) else : print ( \"\u53d8\u91cf\u540d %s \u975e\u6cd5\" % name ) \u8fd0\u884c\u7ed3\u679c\uff1a \u53d8\u91cf\u540d name1 \u7b26\u5408\u8981\u6c42 \u53d8\u91cf\u540d _name \u7b26\u5408\u8981\u6c42 \u53d8\u91cf\u540d 2 _name \u975e\u6cd5 \u53d8\u91cf\u540d __name__ \u7b26\u5408\u8981\u6c42","title":"\u793a\u4f8b2\uff1a+"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#3_1","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c0\u523099\u4e4b\u95f4\u7684\u6570\u5b57 #coding=utf-8 import re ret = re . match ( \"[1-9]?[0-9]\" , \"7\" ) print ( ret . group ()) ret = re . match ( \"[1-9]?\\d\" , \"33\" ) print ( ret . group ()) ret = re . match ( \"[1-9]?\\d\" , \"09\" ) print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a 7 33 0 # \u8fd9\u4e2a\u7ed3\u679c\u5e76\u4e0d\u662f\u60f3\u8981\u7684\uff0c\u5229\u7528$\u624d\u80fd\u89e3\u51b3","title":"\u793a\u4f8b3\uff1a?"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#4m","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa\uff0c8\u523020\u4f4d\u7684\u5bc6\u7801\uff0c\u53ef\u4ee5\u662f\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf #coding=utf-8 import re ret = re . match ( \"[a-zA-Z0-9_]{6}\" , \"12a3g45678\" ) print ( ret . group ()) ret = re . match ( \"[a-zA-Z0-9_]{8,20}\" , \"1ad12f23s34455ff66\" ) #\u8fd9\u91cc{8,20}\u662f8-20\u4f4d\u7684\u610f\u601d print ( ret . group ()) \u8fd0\u884c\u7ed3\u679c\uff1a 12 a3g4 1 ad12f23s34455ff66 ## \u5339\u914d\u5f00\u5934\u7ed3\u5c3e | \u5b57\u7b26 | \u529f\u80fd | | ---- | -------------- | | ^ | \u5339\u914d\u5b57\u7b26\u4e32\u5f00\u5934 | | $ | \u5339\u914d\u5b57\u7b26\u4e32\u7ed3\u5c3e | \u6ce8\u610f [ a]\u8868\u793a\u201c\u5339\u914d\u9664\u4e86a\u7684\u4efb\u610f\u5b57\u7b26, [a]\u8868\u793a\u5339\u914d\u5f00\u5934\u662fa\u7684\u5b57\u7b26\u4e32","title":"\u793a\u4f8b4\uff1a{m}"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1_2","text":"\u9700\u6c42\uff1a\u5339\u914d163.com\u7684\u90ae\u7bb1\u5730\u5740 #coding=utf-8 import re email_list = [ \"xiaoWang@163.com\" , \"xiaoWang@163.comheihei\" , \".com.xiaowang@qq.com\" ] for email in email_list : ret = re . match ( \"[\\w]{4,20}@163\\.com\" , email ) if ret : print ( \" %s \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740,\u5339\u914d\u540e\u7684\u7ed3\u679c\u662f: %s \" % ( email , ret . group ())) else : print ( \" %s \u4e0d\u7b26\u5408\u8981\u6c42\" % email ) \u8fd0\u884c\u7ed3\u679c: xiaoWang @163.com \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com xiaoWang @163.comheihei \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com . com . xiaowang @qq.com \u4e0d\u7b26\u5408\u8981\u6c42 \u5b8c\u5584\u540e email_list = [ \"xiaoWang@163.com\" , \"xiaoWang@163.comheihei\" , \".com.xiaowang@qq.com\" ] for email in email_list : ret = re . match ( \"[\\w]{4,20}@163\\.com$\" , email ) if ret : print ( \" %s \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740,\u5339\u914d\u540e\u7684\u7ed3\u679c\u662f: %s \" % ( email , ret . group ())) else : print ( \" %s \u4e0d\u7b26\u5408\u8981\u6c42\" % email ) \u8fd0\u884c\u7ed3\u679c\uff1a xiaoWang @163.com \u662f\u7b26\u5408\u89c4\u5b9a\u7684\u90ae\u4ef6\u5730\u5740 , \u5339\u914d\u540e\u7684\u7ed3\u679c\u662f : xiaoWang @163.com xiaoWang @163.comheihei \u4e0d\u7b26\u5408\u8981\u6c42 . com . xiaowang @qq.com \u4e0d\u7b26\u5408\u8981\u6c42","title":"\u793a\u4f8b1\uff1a$"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#85","text":"\u5b57\u7b26 \u529f\u80fd | \u5339\u914d\u5de6\u53f3\u4efb\u610f\u4e00\u4e2a\u8868\u8fbe\u5f0f (ab) \u5c06\u62ec\u53f7\u4e2d\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u5206\u7ec4 \\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 (?P ) \u5206\u7ec4\u8d77\u522b\u540d (?P=name) \u5f15\u7528\u522b\u540d\u4e3aname\u5206\u7ec4\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32","title":"8.5\u5339\u914d\u5206\u7ec4"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#1_3","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa0-100\u4e4b\u95f4\u7684\u6570\u5b57 \u9519\u8bef\u64cd\u4f5c: #coding=utf-8 import re ret = re . match ( \"[1-9]?\\d\" , \"8\" ) print ( ret . group ()) # 8 ret = re . match ( \"[1-9]?\\d\" , \"78\" ) print ( ret . group ()) # 78 # \u4e0d\u6b63\u786e\u7684\u60c5\u51b5 ret = re . match ( \"[1-9]?\\d\" , \"08\" ) print ( ret . group ()) # 0 #?\u5339\u914d\u7684\u662f\u524d\u9762\u51fa\u73b0\u7684\u5b57\u7b26\u53ef\u4ee5\u6709\u4e00\u6b21\u62160\u6b21,\u7136\u540e\u6ca1\u6709\u51fa\u73b0,\u7136\u540e\\d\u5339\u914d\u5230\u4e860,\u6240\u4ee5\u8fd4\u56de\u7684\u662f0 \u4fee\u6b63\u540e\u7684\u64cd\u4f5c # \u4fee\u6b63\u4e4b\u540e\u7684 ret = re . match ( \"[1-9]?\\d$\" , \"008\" ) #\u8fd9\u4e2a$\u662f\u5339\u914d\u4fee\u9970\\d\u4e5f\u5c31\u662f\u8bf4\u7ed3\u5c3e\u5fc5\u987b\u662f\u6574\u6570 \u7684.\u7136\u540e?\u8fd9\u91cc\u5c31\u5339\u914d\u4e0d\u5230 if ret : print ( ret . group ()) else : print ( \"\u4e0d\u57280-100\u4e4b\u95f4\" ) ============ \u4e0d\u5728 0 - 100 \u4e4b\u95f4 \u4f7f\u7528 | # \u6dfb\u52a0| ret = re . match ( \"[1-9]?\\d$|100\" , \"8\" ) print ( ret . group ()) # 8 ret = re . match ( \"[1-9]?\\d$|100\" , \"78\" ) print ( ret . group ()) # 78 ret = re . match ( \"[1-9]?\\d$|100\" , \"08\" ) # print(ret.group()) # \u4e0d\u662f0-100\u4e4b\u95f4 ret = re . match ( \"[1-9]?\\d$|100\" , \"100\" ) print ( ret . group ()) # 100 \u6267\u884c\u7ed3\u679c: 8 78 100","title":"\u793a\u4f8b1\uff1a|"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#2_2","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa163\u3001126\u3001qq\u90ae\u7bb1 #coding=utf-8 import re ret = re . match ( \"\\w{4,20}@163\\.com\" , \"test@163.com\" ) print ( ret . group ()) # test@163.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@126.com\" ) #\u8fd9\u91cc\u9700\u8981\u5c06\u6216\u7684\u5185\u5bb9\u7528\u5c0f\u62ec\u53f7\u9614\u8d77\u6765,\u9632\u6b62\u51fa\u73b0\u903b\u8f91\u4e0a\u7684\u9519\u8bef print ( ret . group ()) # test@126.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@qq.com\" ) print ( ret . group ()) # test@qq.com ret = re . match ( \"\\w{4,20}@(163|126|qq)\\.com\" , \"test@gmail.com\" ) if ret : print ( ret . group ()) else : print ( \"\u4e0d\u662f163\u3001126\u3001qq\u90ae\u7bb1\" ) # \u4e0d\u662f163\u3001126\u3001qq\u90ae\u7bb1 \u6267\u884c\u7ed3\u679c: test @163.com test @126.com test @qq.com \u4e0d\u662f 163 \u3001 126 \u3001 qq\u90ae\u7bb1","title":"\u793a\u4f8b2\uff1a( )"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#4711","text":"import re tels = [ \"13100001234\" , \"18912344321\" , \"10086\" , \"18800007777\" ] for tel in tels : ret = re . match ( \"1\\d{9}[0-35-68-9]\" , tel ) if ret : print ( ret . group ()) else : print ( \" %s \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7\" % tel ) \u6267\u884c\u7ed3\u679c: 13100001234 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7 18912344321 10086 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7 18800007777 \u4e0d\u662f\u60f3\u8981\u7684\u624b\u673a\u53f7","title":"\u4e0d\u662f\u4ee54\u30017\u7ed3\u5c3e\u7684\u624b\u673a\u53f7\u7801(11\u4f4d)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#group","text":"ret = re . match ( \"([^-]*)-(\\d+)\" , \"010-12345678\" ) ret . group ( 1 ) ret . group ( 2 ) \u6267\u884c\u7ed3\u679c: '010' '12345678'","title":"\u63d0\u53d6\u533a\u53f7\u548c\u7535\u8bdd\u53f7\u7801(\u4e00\u4e2a\u62ec\u53f7\u5c31\u662f\u4e00\u4e2a\u5206\u7ec4,\u4f7f\u7528group\u7684\u65f6\u5019\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u7f16\u53f7\u8fdb\u884c\u63d0\u53d6)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#hh","text":"import re # \u80fd\u591f\u5b8c\u6210\u5bf9\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u7684\u5339\u914d ret = re . match ( \"<[a-zA-Z]*>\\w*</[a-zA-Z]*>\" , \"<html>hh</html>\" ) print ( ret . group ()) # \u5982\u679c\u9047\u5230\u975e\u6b63\u5e38\u7684html\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u5339\u914d\u51fa\u9519 ret = re . match ( \"<[a-zA-Z]*>\\w*</[a-zA-Z]*>\" , \"<html>hh</htmlbalabala>\" ) print ( ret . group ()) # \u6b63\u786e\u7684\u7406\u89e3\u601d\u8def\uff1a\u5982\u679c\u5728\u7b2c\u4e00\u5bf9<>\u4e2d\u662f\u4ec0\u4e48\uff0c\u6309\u7406\u8bf4\u5728\u540e\u9762\u7684\u90a3\u5bf9<>\u4e2d\u5c31\u5e94\u8be5\u662f\u4ec0\u4e48 # \u901a\u8fc7\u5f15\u7528\u5206\u7ec4\u4e2d\u5339\u914d\u5230\u7684\u6570\u636e\u5373\u53ef\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u662f\u5143\u5b57\u7b26\u4e32\uff0c\u5373\u7c7b\u4f3c r\"\"\u8fd9\u79cd\u683c\u5f0f #\\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 ret = re . match ( r \"<([a-zA-Z]*)>\\w*</\\1>\" , \"<html>hh</html>\" ) # \\1 1\u5c31\u662f\u7b2c\u4e00\u4e2a\u62ec\u53f7\u51fa\u73b0\u7684\u5185\u5bb9 print ( ret . group ()) # \u56e0\u4e3a2\u5bf9<>\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u6ca1\u6709\u5339\u914d\u51fa\u6765 test_label = \"<html>hh</htmlbalabala>\" ret = re . match ( r \"<([a-zA-Z]*)>\\w*</\\1>\" , test_label ) if ret : print ( ret . group ()) else : print ( \" %s \u8fd9\u662f\u4e00\u5bf9\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\" % test_label ) \u6267\u884c\u7ed3\u679c: < html > hh </ html > < html > hh </ htmlbalabala > < html > hh </ html > < html > hh </ htmlbalabala > \u8fd9\u662f\u4e00\u5bf9\u4e0d\u6b63\u786e\u7684\u6807\u7b7e","title":"\u9700\u6c42\uff1a\u5339\u914d\u51fahh"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#4number","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa","title":"\u793a\u4f8b4\uff1a\\number"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#5p-pname-pw-name","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa","title":"\u793a\u4f8b5\uff1a(?P) (?P=name)    ====(?P\\w*)  \u8fd9\u4e2a\u662f\u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26,\u5e76\u4e14\u5c06\u5206\u7ec4\u547d\u540d\u4e3aname"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#ppnamep","text":"\u8fd0\u884c\u7ed3\u679c\uff1a","title":"\u6ce8\u610f\uff1a(?P)\u548c(?P=name)\u4e2d\u7684\u5b57\u6bcdp\u5927\u5199"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#repython","text":"","title":"re\u6a21\u5757\u7684\u9ad8\u7ea7\u7528\u6cd5(python\u72ec\u6709\u7684)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#search","text":"\u9700\u6c42\uff1a\u5339\u914d\u51fa\u6587\u7ae0\u9605\u8bfb\u7684\u6b21\u6570 #coding=utf-8 import re ret = re . search ( r \"\\d+\" , \"\u9605\u8bfb\u6b21\u6570\u4e3a 9999\" ) ret . group () \u8fd0\u884c\u7ed3\u679c\uff1a '9999'","title":"search(\u4e0d\u4f1a\u4ece\u5934\u5f00\u59cb\u5339\u914d)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#findall","text":"\u9700\u6c42\uff1a\u7edf\u8ba1\u51fapython\u3001c\u3001c++\u76f8\u5e94\u6587\u7ae0\u9605\u8bfb\u7684\u6b21\u6570 #coding=utf-8 import re ret = re . findall ( r \"\\d+\" , \"python = 9999, c = 7890, c++ = 12345\" ) print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a [ '9999' , '7890' , '12345' ]","title":"findall  (\u76f4\u63a5\u8fd4\u56de\u7684\u5c31\u662f\u4e00\u4e2a\u5217\u8868)"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#sub","text":"\u9700\u6c42\uff1a\u5c06\u5339\u914d\u5230\u7684\u9605\u8bfb\u6b21\u6570\u52a01 \u65b9\u6cd51\uff1a #\u76f4\u63a5\u66ff\u6362 #coding=utf-8 import re ret = re . sub ( r \"\\d+\" , '998' , \"python = 997\" ) print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a python = 998 \u65b9\u6cd52\uff1a sub\u652f\u6301\u51fd\u6570\u7684\u8c03\u7528,\u901a\u8fc7\u51fd\u6570\u8fdb\u884c\u4e0d\u540c\u7684\u66ff\u6362(\u72ec\u6709\u7684,\u8fdb\u884c;\u4e86\u89e3) #coding=utf-8 import re def add ( temp ): strNum = temp . group () #\u83b7\u5f97\u6b63\u5219\u5bf9\u8c61\u7684\u6570\u636e num = int ( strNum ) + 1 return str ( num ) #\u6700\u540e\u8fd4\u56de\u7684\u5c31\u662f\u9700\u8981\u66ff\u6362\u7684\u5b57\u7b26\u4e32 ret = re . sub ( r \"\\d+\" , add , \"python = 997\" ) #\u4f1a\u5c06\u5339\u914d\u540e\u7684\u6b63\u5219\u5bf9\u8c61\u4f20\u9012\u7ed9\u8fd9\u4e2a\u51fd\u6570 print ( ret ) ret = re . sub ( r \"\\d+\" , add , \"python = 99\" ) print ( ret ) \u6267\u884c\u7ed3\u679c: python = 998 python = 100","title":"sub \u5c06\u5339\u914d\u5230\u7684\u6570\u636e\u8fdb\u884c\u66ff\u6362"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#_3","text":"\u4ece\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6587\u672c < div > < p > \u5c97\u4f4d\u804c\u8d23\uff1a </ p > < p > \u5b8c\u6210\u63a8\u8350\u7b97\u6cd5\u3001\u6570\u636e\u7edf\u8ba1\u3001\u63a5\u53e3\u3001\u540e\u53f0\u7b49\u670d\u52a1\u5668\u7aef\u76f8\u5173\u5de5\u4f5c </ p > < p >< br ></ p > < p > \u5fc5\u5907\u8981\u6c42\uff1a </ p > < p > \u826f\u597d\u7684\u81ea\u6211\u9a71\u52a8\u529b\u548c\u804c\u4e1a\u7d20\u517b\uff0c\u5de5\u4f5c\u79ef\u6781\u4e3b\u52a8\u3001\u7ed3\u679c\u5bfc\u5411 </ p > < p > &nbsp; < br ></ p > < p > \u6280\u672f\u8981\u6c42\uff1a </ p > < p > 1\u3001\u4e00\u5e74\u4ee5\u4e0a Python \u5f00\u53d1\u7ecf\u9a8c\uff0c\u638c\u63e1\u9762\u5411\u5bf9\u8c61\u5206\u6790\u548c\u8bbe\u8ba1\uff0c\u4e86\u89e3\u8bbe\u8ba1\u6a21\u5f0f </ p > < p > 2\u3001\u638c\u63e1HTTP\u534f\u8bae\uff0c\u719f\u6089MVC\u3001MVVM\u7b49\u6982\u5ff5\u4ee5\u53ca\u76f8\u5173WEB\u5f00\u53d1\u6846\u67b6 </ p > < p > 3\u3001\u638c\u63e1\u5173\u7cfb\u6570\u636e\u5e93\u5f00\u53d1\u8bbe\u8ba1\uff0c\u638c\u63e1 SQL\uff0c\u719f\u7ec3\u4f7f\u7528 MySQL/PostgreSQL \u4e2d\u7684\u4e00\u79cd < br ></ p > < p > 4\u3001\u638c\u63e1NoSQL\u3001MQ\uff0c\u719f\u7ec3\u4f7f\u7528\u5bf9\u5e94\u6280\u672f\u89e3\u51b3\u65b9\u6848 </ p > < p > 5\u3001\u719f\u6089 Javascript/CSS/HTML5\uff0cJQuery\u3001React\u3001Vue.js </ p > < p > &nbsp; < br ></ p > < p > \u52a0\u5206\u9879\uff1a </ p > < p > \u5927\u6570\u636e\uff0c\u6570\u7406\u7edf\u8ba1\uff0c\u673a\u5668\u5b66\u4e60\uff0csklearn\uff0c\u9ad8\u6027\u80fd\uff0c\u5927\u5e76\u53d1\u3002 </ p > </ div > \u53c2\u8003\u7b54\u6848:\u4f7f\u7528sub\u8fdb\u884c\u5220\u9664\u6ca1\u6709\u7528\u7684\u6807\u7b7e re . sub ( r \"<[^>]*>|&nbsp;|\\n\" , \"\" , test_str )","title":"\u7ec3\u4e60"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#split","text":"\u9700\u6c42\uff1a\u5207\u5272\u5b57\u7b26\u4e32\u201cinfo:xiaoZhang 33 shandong\u201d #coding=utf-8 import re ret = re . split ( r \":| \" , \"info:xiaoZhang 33 shandong\" ) #\u4ee5\u5192\u53f7\u6216\u8005\u7a7a\u683c\u4e3a\u5206\u5272\u5b57\u7b26 print ( ret ) \u8fd0\u884c\u7ed3\u679c\uff1a [ 'info' , 'xiaoZhang' , '33' , 'shandong' ]","title":"split \u6839\u636e\u5339\u914d\u8fdb\u884c\u5207\u5272\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#88python","text":"Python\u91cc\u6570\u91cf\u8bcd\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u7684\uff08\u5728\u5c11\u6570\u8bed\u8a00\u91cc\u4e5f\u53ef\u80fd\u662f\u9ed8\u8ba4\u975e\u8d2a\u5a6a\uff09\uff0c\u603b\u662f\u5c1d\u8bd5\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u7b26\uff1b \u975e\u8d2a\u5a6a\u5219\u76f8\u53cd\uff0c\u603b\u662f\u5c1d\u8bd5\u5339\u914d\u5c3d\u53ef\u80fd\u5c11\u7684\u5b57\u7b26\u3002 \u5728\" * \",\" ? \",\" + \",\" {m,n} \"\u540e\u9762\u52a0\u4e0a \uff1f \uff0c\u4f7f\u8d2a\u5a6a\u53d8\u6210\u975e\u8d2a\u5a6a\u3002 >>> s = \"This is a number 234-235-22-423\" >>> r = re . match ( \".+(\\d+-\\d+-\\d+-\\d+)\" , s ) >>> r . group ( 1 ) '4-235-22-423' >>> r = re . match ( \".+?(\\d+-\\d+-\\d+-\\d+)\" , s ) >>> r . group ( 1 ) '234-235-22-423' >>> \u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u4e2d\u4f7f\u7528\u5230\u901a\u914d\u5b57\uff0c\u90a3\u5b83\u5728\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u6c42\u503c\u65f6\uff0c\u4f1a\u5c3d\u91cf\u201c\u6293\u53d6\u201d\u6ee1\u8db3\u5339\u914d\u6700\u957f\u5b57\u7b26\u4e32\uff0c\u5728\u6211\u4eec\u4e0a\u9762\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u201c .+ \u201d\u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u542f\u59cb\u5904\u6293\u53d6\u6ee1\u8db3\u6a21\u5f0f\u7684\u6700\u957f\u5b57\u7b26\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u60f3\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u6574\u578b\u5b57\u6bb5\u7684\u4e2d\u7684\u5927\u90e8\u5206\uff0c\u201c \\d+ \u201d\u53ea\u9700\u4e00\u4f4d\u5b57\u7b26\u5c31\u53ef\u4ee5\u5339\u914d\uff0c\u6240\u4ee5\u5b83\u5339\u914d\u4e86\u6570\u5b57\u201c 4 \u201d\uff0c\u800c\u201c .+ \u201d\u5219\u5339\u914d\u4e86\u4ece\u5b57\u7b26\u4e32\u8d77\u59cb\u5230\u8fd9\u4e2a\u7b2c\u4e00\u4f4d\u6570\u5b574\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1a\u975e\u8d2a\u5a6a\u64cd\u4f5c\u7b26\u201c \uff1f \u201d\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u5728\" * \",\" + \",\" ? \"\u7684\u540e\u9762\uff0c\u8981\u6c42\u6b63\u5219\u5339\u914d\u7684\u8d8a\u5c11\u8d8a\u597d\u3002 >>> re . match ( r \"aa(\\d+)\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>> re . match ( r \"aa(\\d+?)\" , \"aa2343ddd\" ) . group ( 1 ) '2' >>> re . match ( r \"aa(\\d+)ddd\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>> re . match ( r \"aa(\\d+?)ddd\" , \"aa2343ddd\" ) . group ( 1 ) '2343' >>>","title":"8.8python\u8d2a\u5a6a\u548c\u975e\u8d2a\u5a6a"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#_4","text":"\u5b57\u7b26\u4e32\u4e3a: < img data - original = \"https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg\" src = \"https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg\" style = \"display: inline;\" > \u8bf7\u63d0\u53d6url\u5730\u5740 \u53c2\u8003\u7b54\u6848 ret = re . search ( r \"https://.*?\\.jpg\" , test ) ret . group () \u6267\u884c\u7ed3\u679c: 'https://rpic.douyucdn.cn/appCovers/2016/11/13/1213973_201611131917_small.jpg'","title":"\u7ec3\u4e00\u7ec3"},{"location":"python\u5b66\u4e60/041 python\u6b63\u5219\u8868\u8fbe\u5f0f/#89r","text":">>> mm = \"c: \\\\ a \\\\ b \\\\ c\" >>> mm 'c: \\\\ a \\\\ b \\\\ c' >>> print ( mm ) c : \\ a \\ b \\ c >>> re . match ( \"c: \\\\\\\\ \" , mm ) . group () 'c: \\\\ ' >>> ret = re . match ( \"c: \\\\\\\\ \" , mm ) . group () >>> print ( ret ) c : \\ >>> ret = re . match ( \"c: \\\\\\\\ a\" , mm ) . group () >>> print ( ret ) c : \\ a >>> ret = re . match ( r \"c: \\\\ a\" , mm ) . group () >>> print ( ret ) c : \\ a >>> ret = re . match ( r \"c:\\a\" , mm ) . group () Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > AttributeError : 'NoneType' object has no attribute 'group' >>> \u8bf4\u660e Python\u4e2d\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a r \u8868\u793a\u539f\u751f\u5b57\u7b26\u4e32\uff0c \u4e0e\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u76f8\u540c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u4f7f\u7528\" \\ \"\u4f5c\u4e3a\u8f6c\u4e49\u5b57\u7b26\uff0c\u8fd9\u5c31\u53ef\u80fd\u9020\u6210\u53cd\u659c\u6760\u56f0\u6270\u3002\u5047\u5982\u4f60\u9700\u8981\u5339\u914d\u6587\u672c\u4e2d\u7684\u5b57\u7b26\" \\ \"\uff0c\u90a3\u4e48\u4f7f\u7528\u7f16\u7a0b\u8bed\u8a00\u8868\u793a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u5c06\u9700\u89814\u4e2a\u53cd\u659c\u6760\" \\\\ \"\uff1a\u524d\u4e24\u4e2a\u548c\u540e\u4e24\u4e2a\u5206\u522b\u7528\u4e8e\u5728\u7f16\u7a0b\u8bed\u8a00\u91cc\u8f6c\u4e49\u6210\u53cd\u659c\u6760\uff0c\u8f6c\u6362\u6210\u4e24\u4e2a\u53cd\u659c\u6760\u540e\u518d\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u8f6c\u4e49\u6210\u4e00\u4e2a\u53cd\u659c\u6760\u3002 Python\u91cc\u7684\u539f\u751f\u5b57\u7b26\u4e32\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e86\u539f\u751f\u5b57\u7b26\u4e32\uff0c\u4f60\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u662f\u4e0d\u662f\u6f0f\u5199\u4e86\u53cd\u659c\u6760\uff0c\u5199\u51fa\u6765\u7684\u8868\u8fbe\u5f0f\u4e5f\u66f4\u76f4\u89c2\u3002 mm = \"c: \\\\ a \\\\ b \\\\ c\" ret = re . match ( r \"c: \\\\ a\" , mm ) . group () ret 'c: \\\\ a'","title":"8.9r\u7684\u4f5c\u7528"},{"location":"python\u5b66\u4e60/042-\u5c06\u6587\u4ef6\u5939\u4e2d\u56fe\u7247\u6309\u7167\u6a2a\u5c4f\u7ad6\u5c4f\u8fdb\u884c\u5206\u7c7b/","text":"\u4ee3\u7801\u5982\u4e0b:\u5173\u952e\u4f4d\u7f6e\u81ea\u884c\u4fee\u6539 \"\"\" \u53ef\u4ee5\u904d\u5386\u8f93\u5165\u7684\u8def\u5f84\u7684\u6307\u5b9a\u540e\u7f00\u7684\u6587\u4ef6,\u4e3b\u8981\u662f\u7528\u6765\u7b5b\u9009\u56fe\u7247,\u5c06\u56fe\u7247\u5206\u6210 \u6a2a\u5c4f,\u7ad6\u5c4f\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a\u6587\u4ef6\u5939\u4e2d \"\"\" from PIL import Image import os import os.path from tqdm import tqdm import shutil #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 path = input ( '\u8bf7\u8f93\u5165\u8def\u5f84\uff1a' ) . strip () #.strip()\u53bb\u9664\u9996\u5c3e\u7684\u7a7a\u683c file_path_list = get_file ( path ) #\u7b5b\u9009\u540e\u7f00\u51fd\u6570,\u4f20\u5165\u5305\u542b\u6240\u6709\u540e\u7f00\u540d\u7684\u5217\u8868,\u4ee5\u53ca\u9700\u8981\u7b5b\u9009\u7684\u540e\u7f00(\u9ed8\u8ba4\u7b5b\u9009txt\u6587\u4ef6) def shai_xuan_hou_zhui ( file_path_list , hou_zhui = '.txt' ): list2 = [] #\u7528\u4e8e\u50a8\u5b58\u7b5b\u9009\u597d\u7684\u6587\u4ef6\u7684\u8def\u5f84 for filepath in file_path_list : # os.path.splitext():\u5206\u79bb\u6587\u4ef6\u540d\u4e0e\u6269\u5c55\u540d if os . path . splitext ( filepath )[ 1 ] == hou_zhui : list2 . append ( filepath ) # print(filepath +'\\n') return list2 # hou_zhui='.jpg' # py_list=shai_xuan_hou_zhui(file_path_list,'.py') #\u7b5b\u9009py\u6587\u4ef6 pig_list = shai_xuan_hou_zhui ( file_path_list , '.jpg' ) #\u7b5b\u9009jpg\u683c\u5f0f\u6587\u4ef6 # print(txt_list) folder1 = #\u5b58\u653e\u6a2a\u5c4f\u56fe\u7247\u7684\u5730\u5740 folder2 = #\u5b58\u653e\u7ad6\u5c4f\u56fe\u7247\u7684\u5730\u5740 for i in tqdm ( range ( len ( pig_list ))): lujing = pig_list [ i ] picture = Image . open ( lujing ) width = picture . width height = picture . height picture . close () if width > height : shutil . move ( lujing , folder1 ) else : shutil . move ( lujing , folder2 )","title":"042 \u5c06\u6587\u4ef6\u5939\u4e2d\u56fe\u7247\u6309\u7167\u6a2a\u5c4f\u7ad6\u5c4f\u8fdb\u884c\u5206\u7c7b"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/","text":"\u7a0b\u5e8f\u5458\u6362\u58c1\u7eb8\u8fd8\u662f\u7528\u7a0b\u5e8f\u6bd4\u8f83\u597d\u554a,\u8c01\u8ba9windows\u5207\u6362\u58c1\u7eb8\u7684\u529f\u80fd\u90a3\u4e48\u7684\u5783\u573e\u5462 \u00b6 \u529f\u80fd\u5982\u4e0b,\u8fd9\u662f\u4f7f\u7528\u7684\u529f\u80fd1,\u521d\u59cb\u4f7f\u7528\u7684\u60c5\u51b5 \u00b6 \u6b22\u8fce\u4f7f\u7528\u58c1\u7eb8\u5207\u6362\u7cfb\u7edf \u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165 : 1 \u5728\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u7684\u57fa\u7840\u4e0a\u8ffd\u52a0\u8def\u5f84 : 2 \u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165 : 3 \u8bf7\u8f93\u5165\u9009\u9879 : 1 \u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728 , \u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84 \u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417? \u662f\u8bf7\u8f93\u5165 : 1 \u5426\u8bf7\u8f93\u5165 : 2 \u8bf7\u8f93\u5165\u9009\u9879 : 1 \u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417? \u662f\u8bf7\u8f93\u5165 : 1 \u5426\u8bf7\u8f93\u5165 : 2 \u8bf7\u8f93\u5165\u9009\u9879 : 2 \u8bf7\u8f93\u5165\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694 : 3 \u6b7b\u9b3c \u60f3\u8981\u7ed3\u675f\u7cfb\u7edf\u8bf7\u4f7f\u7528\u5feb\u6377\u952e : Ctrl + C \u53ef\u4ee5\u8bbe\u7f6e\u58c1\u7eb8\u5207\u6362\u7684\u591a\u4e2a\u8def\u5f84 \u00b6 \u53ef\u4ee5\u8ffd\u52a0\u58c1\u7eb8\u5207\u6362\u7684\u8def\u5f84 \u00b6 \u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u58c1\u7eb8\u5207\u6362\u7684\u8def\u5f84 \u00b6 \u53ef\u4ee5\u5b9a\u4e49\u7535\u8111\u58c1\u7eb8\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694,\u5f53\u7136\u4e0d\u662f\u90a3\u4e48\u7684\u51c6\u786e.\u6ca1\u6709\u529e\u6cd5\u90a3\u4e48\u7cbe\u786e,\u4e00\u4e24\u4e2a\u5c0f\u65f6\u5199\u7684\u4e1c\u897f\u8003\u8651\u8fd9\u4e9b\u5df2\u7ecf\u4e0d\u9519\u4e86 \u00b6 \u6e90\u4ee3\u7801\u5982\u4e0b:\u5197\u4f59\u7684\u90e8\u5206\u8f83\u591a,\u61d2\u5f97\u5b9a\u4e49\u51fd\u6570\u5c31\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u4e86 # -*- coding: utf-8 -*- \"\"\" Created on Wed Jun 19 19:56:45 2019 @author: zangz \"\"\" import random import ctypes import time import os import random import tkinter as tk from tkinter import filedialog import os # path = \"E:\\\\\u79c1\u5bc6\u6587\u4ef6\\\\\u58c1\u7eb8\\\\\u6a2a\u5c4f\u58c1\u7eb8\u6536\u96c6\\\\sex\\\\\" #\u5b58\u50a8\u56fe\u7247\u7684\u6587\u4ef6\u5939 print () print ( \"\u6b22\u8fce\u4f7f\u7528\u58c1\u7eb8\u5207\u6362\u7cfb\u7edf\" ) print () print ( \"\u67e5\u770b\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u5417?\" ) print ( \"\u67e5\u770b\u8bf7\u8f93\u5165:1\" ) print ( \"\u5426\u8bf7\u8f93\u5165:2\" ) look_lujing = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if look_lujing == 1 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8bfb\u53d6\u8def\u5f84 print () print ( \"\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u6709:\" ) print () file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () print ( curLine + ' \\n ' ) print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () else : print () print ( \"\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728\" ) print () print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () else : print () print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () print ( \"\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165:1\" ) print () print ( \"\u5728\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u7684\u57fa\u7840\u4e0a\u8ffd\u52a0\u8def\u5f84:2\" ) print () print ( \"\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165:3\" ) print () num = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if num == 1 : #\u8fdb\u5165\u7684\u662f\u4f7f\u7528\u5b58\u5728\u7684\u8def\u5f84 exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8bfb\u53d6\u8def\u5f84 print () print ( \"\u58c1\u7eb8\u8def\u5f84\u5b58\u5728\" ) print () else : print () print ( \"\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\" ) exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5197\u4f59\u4ee3\u7801\u61d2\u5f97\u5220 os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break #\u6700\u540e\u90fd\u8981\u4ece\u672c\u5730\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8def\u5f84 path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) elif num == 2 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5982\u679c\u5b58\u5728\u5c31\u7ee7\u7eed\u6dfb\u52a0\u8def\u5f84 while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break else : print ( \"\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\" ) exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) elif num == 3 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) else : for q in range ( 100 ): print () print ( \"\u4f60\u662f\u50bb\u903c\u5417?\" + \" \\n \" + \"\u4f60\u662f\u50bb\u903c\u5417?\" + \" \\n \" + \"\u4f60\u662f\u50bb\u903c\u5417?\" ) time . sleep ( 0.2 ) #\u7761\u7720\u65f6\u95f4 print ( \"\u8001\u5b50\u4e0d\u8ddf\u4f60\u73a9\u4e86,\u518d\u89c1!\" ) exit () print () sleepTime = float ( input ( \"\u8bf7\u8f93\u5165\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694: \" )) print () print ( \"\u6b7b\u9b3c\" ) print ( \"\u60f3\u8981\u7ed3\u675f\u7cfb\u7edf\u8bf7\u4f7f\u7528\u5feb\u6377\u952e:Ctrl + C\" ) while True : index = int ( random . random () * len ( path_list )) path = path_list [ index ] file = os . listdir ( path ) #\u6253\u5f00\u5b58\u50a8\u56fe\u7247\u6587\u4ef6\u5939\u4e2d\u7684\u56fe\u7247\u76ee\u5f55 filepath = path + random . choice ( file ) #\u968f\u673a\u9009\u53d6\u67d0\u5f20\u56fe\u7247\uff0c\u5efa\u7acb\u7edd\u5bf9\u5730\u5740 ctypes . windll . user32 . SystemParametersInfoW ( 20 , 0 , filepath , 0 ) # \u8bbe\u7f6e\u684c\u9762\u58c1\u7eb8 time . sleep ( sleepTime ) #\u7761\u7720\u65f6\u95f4 #pyinstaller -F -i tubiao.ico \u58c1\u7eb8\u5207\u6362.py #\u6253\u5305\u7684\u4ee3\u7801 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u8bf7\u8c28\u614e,\u6709\u6076\u610f\u5220\u9664\u7684\u4ee3\u7801.\u7a0b\u5e8f\u5458\u61c2\u5f97\u81ea\u7136\u61c2. \u6700\u540e\u4f7f\u7528\u7684\u662fpuinstaller\u8fdb\u884c\u4e86\u6253\u5305 \u60f3\u8981\u76f4\u63a5\u4f7f\u7528exe\u6587\u4ef6\u7684\u8bf7\u81ea\u89c9\u8d5e\u8d4f\u4e00\u4e0b,\u79c1\u4fe1\u6211,\u6211\u53d1\u7ed9\u4f60.exe\u6587\u4ef6\u4e2d\u6ca1\u6709\u6076\u610f\u4ee3\u7801","title":"043 \u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#windows","text":"","title":"\u7a0b\u5e8f\u5458\u6362\u58c1\u7eb8\u8fd8\u662f\u7528\u7a0b\u5e8f\u6bd4\u8f83\u597d\u554a,\u8c01\u8ba9windows\u5207\u6362\u58c1\u7eb8\u7684\u529f\u80fd\u90a3\u4e48\u7684\u5783\u573e\u5462"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#1","text":"\u6b22\u8fce\u4f7f\u7528\u58c1\u7eb8\u5207\u6362\u7cfb\u7edf \u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165 : 1 \u5728\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u7684\u57fa\u7840\u4e0a\u8ffd\u52a0\u8def\u5f84 : 2 \u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165 : 3 \u8bf7\u8f93\u5165\u9009\u9879 : 1 \u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728 , \u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84 \u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417? \u662f\u8bf7\u8f93\u5165 : 1 \u5426\u8bf7\u8f93\u5165 : 2 \u8bf7\u8f93\u5165\u9009\u9879 : 1 \u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417? \u662f\u8bf7\u8f93\u5165 : 1 \u5426\u8bf7\u8f93\u5165 : 2 \u8bf7\u8f93\u5165\u9009\u9879 : 2 \u8bf7\u8f93\u5165\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694 : 3 \u6b7b\u9b3c \u60f3\u8981\u7ed3\u675f\u7cfb\u7edf\u8bf7\u4f7f\u7528\u5feb\u6377\u952e : Ctrl + C","title":"\u529f\u80fd\u5982\u4e0b,\u8fd9\u662f\u4f7f\u7528\u7684\u529f\u80fd1,\u521d\u59cb\u4f7f\u7528\u7684\u60c5\u51b5"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#_1","text":"","title":"\u53ef\u4ee5\u8bbe\u7f6e\u58c1\u7eb8\u5207\u6362\u7684\u591a\u4e2a\u8def\u5f84"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#_2","text":"","title":"\u53ef\u4ee5\u8ffd\u52a0\u58c1\u7eb8\u5207\u6362\u7684\u8def\u5f84"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#_3","text":"","title":"\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u58c1\u7eb8\u5207\u6362\u7684\u8def\u5f84"},{"location":"python\u5b66\u4e60/043-\u7528python\u5199\u4e86\u4e00\u4e2a\u58c1\u7eb8\u5207\u6362\u7684\u7cfb\u7edf/#_4","text":"\u6e90\u4ee3\u7801\u5982\u4e0b:\u5197\u4f59\u7684\u90e8\u5206\u8f83\u591a,\u61d2\u5f97\u5b9a\u4e49\u51fd\u6570\u5c31\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u4e86 # -*- coding: utf-8 -*- \"\"\" Created on Wed Jun 19 19:56:45 2019 @author: zangz \"\"\" import random import ctypes import time import os import random import tkinter as tk from tkinter import filedialog import os # path = \"E:\\\\\u79c1\u5bc6\u6587\u4ef6\\\\\u58c1\u7eb8\\\\\u6a2a\u5c4f\u58c1\u7eb8\u6536\u96c6\\\\sex\\\\\" #\u5b58\u50a8\u56fe\u7247\u7684\u6587\u4ef6\u5939 print () print ( \"\u6b22\u8fce\u4f7f\u7528\u58c1\u7eb8\u5207\u6362\u7cfb\u7edf\" ) print () print ( \"\u67e5\u770b\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u5417?\" ) print ( \"\u67e5\u770b\u8bf7\u8f93\u5165:1\" ) print ( \"\u5426\u8bf7\u8f93\u5165:2\" ) look_lujing = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if look_lujing == 1 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8bfb\u53d6\u8def\u5f84 print () print ( \"\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u6709:\" ) print () file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () print ( curLine + ' \\n ' ) print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () else : print () print ( \"\u5f53\u524d\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728\" ) print () print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () else : print () print ( \"\u8bf7\u9009\u62e9\u60a8\u8981\u8fdb\u884c\u7684\u64cd\u4f5c:\" ) print () print ( \"\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165:1\" ) print () print ( \"\u5728\u4f7f\u7528\u4e0a\u6b21\u7684\u6587\u4ef6\u5939\u8def\u5f84\u7684\u57fa\u7840\u4e0a\u8ffd\u52a0\u8def\u5f84:2\" ) print () print ( \"\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\u8bf7\u8f93\u5165:3\" ) print () num = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if num == 1 : #\u8fdb\u5165\u7684\u662f\u4f7f\u7528\u5b58\u5728\u7684\u8def\u5f84 exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8bfb\u53d6\u8def\u5f84 print () print ( \"\u58c1\u7eb8\u8def\u5f84\u5b58\u5728\" ) print () else : print () print ( \"\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\" ) exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5197\u4f59\u4ee3\u7801\u61d2\u5f97\u5220 os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break #\u6700\u540e\u90fd\u8981\u4ece\u672c\u5730\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8def\u5f84 path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) elif num == 2 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : #\u5982\u679c\u5b58\u5728\u5c31\u7ee7\u7eed\u6dfb\u52a0\u8def\u5f84 while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break else : print ( \"\u58c1\u7eb8\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u91cd\u65b0\u5b9a\u4e49\u65b0\u7684\u6587\u4ef6\u5939\u8def\u5f84\" ) exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) elif num == 3 : exists = os . path . exists ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) #\u5224\u65ad\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e0e\u5426,\u8fd4\u56de\u503c\u4e3aTrue\u6216\u8005False if exists : os . remove ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) else : pass while True : print () print ( \"\u8fd8\u8981\u6dfb\u52a0\u6587\u4ef6\u8def\u5f84\u5417?\" + ' \\n ' + \"\u662f\u8bf7\u8f93\u5165:1\" + \" \\n \" + \"\u5426\u8bf7\u8f93\u5165:2\" ) print () a = int ( input ( \"\u8bf7\u8f93\u5165\u9009\u9879: \" )) if a == 1 : root = tk . Tk () root . withdraw () path = filedialog . askdirectory () path += \"/\" #\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0\"\"/\"\u4e0d\u7136\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 with open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" , 'a' ) as f : f . write ( path + ' \\n ' ) elif a == 2 : break path_list = [] file = open ( \"\u58c1\u7eb8\u8def\u5f84.txt\" ) for line in file . readlines (): curLine = line . strip () path_list . append ( curLine ) else : for q in range ( 100 ): print () print ( \"\u4f60\u662f\u50bb\u903c\u5417?\" + \" \\n \" + \"\u4f60\u662f\u50bb\u903c\u5417?\" + \" \\n \" + \"\u4f60\u662f\u50bb\u903c\u5417?\" ) time . sleep ( 0.2 ) #\u7761\u7720\u65f6\u95f4 print ( \"\u8001\u5b50\u4e0d\u8ddf\u4f60\u73a9\u4e86,\u518d\u89c1!\" ) exit () print () sleepTime = float ( input ( \"\u8bf7\u8f93\u5165\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694: \" )) print () print ( \"\u6b7b\u9b3c\" ) print ( \"\u60f3\u8981\u7ed3\u675f\u7cfb\u7edf\u8bf7\u4f7f\u7528\u5feb\u6377\u952e:Ctrl + C\" ) while True : index = int ( random . random () * len ( path_list )) path = path_list [ index ] file = os . listdir ( path ) #\u6253\u5f00\u5b58\u50a8\u56fe\u7247\u6587\u4ef6\u5939\u4e2d\u7684\u56fe\u7247\u76ee\u5f55 filepath = path + random . choice ( file ) #\u968f\u673a\u9009\u53d6\u67d0\u5f20\u56fe\u7247\uff0c\u5efa\u7acb\u7edd\u5bf9\u5730\u5740 ctypes . windll . user32 . SystemParametersInfoW ( 20 , 0 , filepath , 0 ) # \u8bbe\u7f6e\u684c\u9762\u58c1\u7eb8 time . sleep ( sleepTime ) #\u7761\u7720\u65f6\u95f4 #pyinstaller -F -i tubiao.ico \u58c1\u7eb8\u5207\u6362.py #\u6253\u5305\u7684\u4ee3\u7801 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u8bf7\u8c28\u614e,\u6709\u6076\u610f\u5220\u9664\u7684\u4ee3\u7801.\u7a0b\u5e8f\u5458\u61c2\u5f97\u81ea\u7136\u61c2. \u6700\u540e\u4f7f\u7528\u7684\u662fpuinstaller\u8fdb\u884c\u4e86\u6253\u5305 \u60f3\u8981\u76f4\u63a5\u4f7f\u7528exe\u6587\u4ef6\u7684\u8bf7\u81ea\u89c9\u8d5e\u8d4f\u4e00\u4e0b,\u79c1\u4fe1\u6211,\u6211\u53d1\u7ed9\u4f60.exe\u6587\u4ef6\u4e2d\u6ca1\u6709\u6076\u610f\u4ee3\u7801","title":"\u53ef\u4ee5\u5b9a\u4e49\u7535\u8111\u58c1\u7eb8\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694,\u5f53\u7136\u4e0d\u662f\u90a3\u4e48\u7684\u51c6\u786e.\u6ca1\u6709\u529e\u6cd5\u90a3\u4e48\u7cbe\u786e,\u4e00\u4e24\u4e2a\u5c0f\u65f6\u5199\u7684\u4e1c\u897f\u8003\u8651\u8fd9\u4e9b\u5df2\u7ecf\u4e0d\u9519\u4e86"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/","text":"\u4e00\u3001 Python\u53ef\u5207\u7247\u5bf9\u8c61\u7684\u7d22\u5f15\u65b9\u5f0f \u00b6 \u4e8c\u3001 Python\u5207\u7247\u64cd\u4f5c\u7684\u4e00\u822c\u65b9\u5f0f \u00b6 \u4e00\u4e2a\u5b8c\u6574\u7684\u5207\u7247\u8868\u8fbe\u5f0f\u5305\u542b\u4e24\u4e2a : \uff0c\u7528\u4e8e\u5206\u9694\u4e09\u4e2a\u53c2\u6570 (start_index\u3001end_index\u3001step) \uff0c\u5f53\u53ea\u6709\u4e00\u4e2a : \u65f6\uff0c\u9ed8\u8ba4\u7b2c\u4e09\u4e2a\u53c2\u6570 step=1 \u3002 \u5207\u7247\u64cd\u4f5c\u57fa\u672c\u8868\u8fbe\u5f0f\uff1a object [ start_index : end_index : step ] step\uff1a\u6b63\u8d1f\u6570\u5747\u53ef\uff0c\u5176\u7edd\u5bf9\u503c\u5927\u5c0f\u51b3\u5b9a\u4e86\u5207\u53d6\u6570\u636e\u65f6\u7684\u2018\u2018\u6b65\u957f\u201d\uff0c\u800c\u6b63\u8d1f\u53f7\u51b3\u5b9a\u4e86\u201c\u5207\u53d6\u65b9\u5411\u201d\uff0c\u6b63\u8868\u793a\u201c\u4ece\u5de6\u5f80\u53f3\u201d\u53d6\u503c\uff0c\u8d1f\u8868\u793a\u201c\u4ece\u53f3\u5f80\u5de6\u201d\u53d6\u503c\u3002\u5f53step\u7701\u7565\u65f6\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u5373\u4ece\u5de6\u5f80\u53f3\u4ee5\u589e\u91cf1\u53d6\u503c\u3002\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01 start_index\uff1a\u8868\u793a\u8d77\u59cb\u7d22\u5f15\uff08\u5305\u542b\u8be5\u7d22\u5f15\u672c\u8eab\uff09\uff1b\u8be5\u53c2\u6570\u7701\u7565\u65f6\uff0c\u8868\u793a\u4ece\u5bf9\u8c61\u201c\u7aef\u70b9\u201d\u5f00\u59cb\u53d6\u503c\uff0c\u81f3\u4e8e\u662f\u4ece\u201c\u8d77\u70b9\u201d\u8fd8\u662f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\uff0c\u5219\u7531step\u53c2\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff0cstep\u4e3a\u6b63\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\uff0c\u4e3a\u8d1f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u3002 end_index\uff1a\u8868\u793a\u7ec8\u6b62\u7d22\u5f15\uff08\u4e0d\u5305\u542b\u8be5\u7d22\u5f15\u672c\u8eab\uff09\uff1b\u8be5\u53c2\u6570\u7701\u7565\u65f6\uff0c\u8868\u793a\u4e00\u76f4\u53d6\u5230\u6570\u636e\u201c\u7aef\u70b9\u201d\uff0c\u81f3\u4e8e\u662f\u5230\u201c\u8d77\u70b9\u201d\u8fd8\u662f\u5230\u201c\u7ec8\u70b9\u201d\uff0c\u540c\u6837\u7531step\u53c2\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff0cstep\u4e3a\u6b63\u65f6\u76f4\u5230\u201c\u7ec8\u70b9\u201d\uff0c\u4e3a\u8d1f\u65f6\u76f4\u5230\u201c\u8d77\u70b9\u201d\u3002 \u4e09\u3001 Python\u5207\u7247\u64cd\u4f5c\u8be6\u7ec6\u4f8b\u5b50 \u00b6 \u4ee5\u4e0b\u793a\u4f8b\u5747\u4ee5\u5217\u8868a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\u4e3a\u4f8b\uff1a a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1. \u5207\u53d6\u5355\u4e2a\u503c \u00b6 a = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] a [ 0 ] Out [ 11 ]: 0 a [ - 4 ] Out [ 12 ]: 6 2. \u5207\u53d6\u5b8c\u6574\u5bf9\u8c61 \u00b6 >>> a [:] #\u4ece\u5de6\u5f80\u53f3 >>> [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [::] #\u4ece\u5de6\u5f80\u53f3 >>> [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [:: - 1 ] #\u4ece\u53f3\u5f80\u5de6 >>> [ 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ] 3. start_index\u548cend_index\u5168\u4e3a\u6b63\uff08+\uff09\u7d22\u5f15\u7684\u60c5\u51b5 \u00b6 >>> a [ 1 : 6 ] >>> [ 1 , 2 , 3 , 4 , 5 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c start_index = 1 \u5230 end_index = 6 \u540c\u6837\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\u3002 >>> a [ 1 : 6 : - 1 ] >>> [] \u8f93\u51fa\u4e3a\u7a7a\u5217\u8868\uff0c\u8bf4\u660e\u6ca1\u53d6\u5230\u6570\u636e\u3002 step =- 1 \uff0c\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u800c start_index = 1 \u5230 end_index = 6 \u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 >>> a [ 6 : 1 ] >>> [] \u540c\u6837\u8f93\u51fa\u4e3a\u7a7a\u5217\u8868\u3002 step = 1 \uff0c\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index = 6 \u5230 end_index = 1 \u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 >>> a [: 6 ] >>> [ 0 , 1 , 2 , 3 , 4 , 5 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index = 6 \u3002 >>> a [: 6 : - 1 ] >>> [ 9 , 8 , 7 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index = 6 \u3002 >>> a [ 6 :] >>> [ 6 , 7 , 8 , 9 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece start_index = 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u7ec8\u70b9\u201d\u3002 >>> a [ 6 :: - 1 ] >>> [ 6 , 5 , 4 , 3 , 2 , 1 , 0 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece start_index = 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\u3002 4. start_index\u548cend_index\u5168\u4e3a\u8d1f\uff08-\uff09\u7d22\u5f15\u7684\u60c5\u51b5 \u00b6 >>> a [ - 1 : - 6 ] >>> [] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index =- 1 \u5230 end_index =- 6 \u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 \u7d22\u5f15 - 1 \u5728 - 6 \u7684\u53f3\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [ - 1 : - 6 : - 1 ] >>> [ 9 , 8 , 7 , 6 , 5 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c start_index =- 1 \u5230 end_index =- 6 \u540c\u6837\u662f\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\u3002 \u7d22\u5f15 - 1 \u5728 6 \u7684\u53f3\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [ - 6 : - 1 ] >>> [ 4 , 5 , 6 , 7 , 8 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index =- 6 \u5230 end_index =- 1 \u540c\u6837\u662f\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\u3002 \u7d22\u5f15 - 6 \u5728 - 1 \u7684\u5de6\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [: - 6 ] >>> [ 0 , 1 , 2 , 3 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index =- 6 \u3002 >>> a [: - 6 : - 1 ] >>> [ 9 , 8 , 7 , 6 , 5 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index =- 6 \u3002 >>> a [ - 6 :] >>> [ 4 , 5 , 6 , 7 , 8 , 9 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece start_index =- 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u7ec8\u70b9\u201d\u3002 >>> a [ - 6 :: - 1 ] >>> [ 4 , 3 , 2 , 1 , 0 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece start_index =- 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\u3002 5. start_index\u548cend_index\u6b63\uff08+\uff09\u8d1f\uff08-\uff09\u6df7\u5408\u7d22\u5f15\u7684\u60c5\u51b5 \u00b6 >>> a [ 1 : - 6 ] >>> [ 1 , 2 , 3 ] start_index = 1 \u5728 end_index =- 6 \u7684\u5de6\u8fb9\uff0c\u56e0\u6b64\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c step = 1 \u540c\u6837\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u56e0\u6b64\u7ed3\u679c\u6b63\u786e >>> a [ 1 : - 6 : - 1 ] >>> [] start_index = 1 \u5728 end_index =- 6 \u7684\u5de6\u8fb9\uff0c\u56e0\u6b64\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4f46 step =- \u5219\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u56e0\u6b64\u4e3a\u7a7a\u3002 >>> a [ - 1 : 6 ] >>> [] start_index =- 1 \u5728 end_index = 6 \u7684\u53f3\u8fb9\uff0c\u56e0\u6b64\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4f46 step = 1 \u5219\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u56e0\u6b64\u4e3a\u7a7a\u3002 >>> a [ - 1 : 6 : - 1 ] >>> [ 9 , 8 , 7 ] start_index =- 1 \u5728 end_index = 6 \u7684\u53f3\u8fb9\uff0c\u56e0\u6b64\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u800c step =- 1 \u540c\u6837\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u56e0\u6b64\u7ed3\u679c\u6b63\u786e\u3002 6. \u8fde\u7eed\u5207\u7247\u64cd\u4f5c \u00b6 >>> a [: 8 ][ 2 : 5 ][ - 1 :] >>> [ 4 ] \u76f8\u5f53\u4e8e\uff1a a [: 8 ] = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 ] a [: 8 ][ 2 : 5 ] = [ 2 , 3 , 4 ] a [: 8 ][ 2 : 5 ][ - 1 :] = 4 \u7406\u8bba\u4e0a\u53ef\u65e0\u9650\u6b21\u8fde\u7eed\u5207\u7247\u64cd\u4f5c\uff0c\u53ea\u8981\u4e0a\u4e00\u6b21\u8fd4\u56de\u7684\u4f9d\u7136\u662f\u975e\u7a7a\u53ef\u5207\u7247\u5bf9\u8c61\u3002 7. \u5207\u7247\u64cd\u4f5c\u7684\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u8868\u8fbe\u5f0f \u00b6 >>>a[2+1:3*2:7%3] >>> [3, 4, 5] \u5373\uff1aa[2+1:3*2:7%3] = a[3:6:1] 8. \u5176\u4ed6\u5bf9\u8c61\u7684\u5207\u7247\u64cd\u4f5c \u00b6 \u524d\u9762\u7684\u5207\u7247\u64cd\u4f5c\u8bf4\u660e\u90fd\u4ee5list\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ef\u8fdb\u884c\u7684\u5207\u7247\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u8fd8\u6709\u5f88\u591a\uff0c\u5305\u62ec\u5143\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u7b49\u3002 >>> ( 0 , 1 , 2 , 3 , 4 , 5 )[: 3 ] >>> ( 0 , 1 , 2 ) \u5143\u7ec4\u7684\u5207\u7247\u64cd\u4f5c >>> 'ABCDEFG' [:: 2 ] >>> 'ACEG' \u5b57\u7b26\u4e32\u7684\u5207\u7247\u64cd\u4f5c >>> for i in range ( 1 , 100 )[ 2 :: 3 ][ - 10 :]: print ( i ) \u5c31\u662f\u5229\u7528 range\u51fd\u6570\u751f\u62101 - 99 \u7684\u6574\u6570\uff0c\u7136\u540e\u53d6 3 \u7684\u500d\u6570\uff0c\u518d\u53d6\u6700\u540e\u5341\u4e2a\u3002 \u56db\u3001 \u5e38\u7528\u5207\u7247\u64cd\u4f5c \u00b6 \u4ee5\u5217\u8868\uff1aa = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \u4e3a\u8bf4\u660e\u5bf9\u8c61 1.\u53d6\u5076\u6570\u4f4d\u7f6e \u00b6 >>> b = a [:: 2 ] [ 0 , 2 , 4 , 6 , 8 ] 2.\u53d6\u5947\u6570\u4f4d\u7f6e \u00b6 >>> b = a [ 1 :: 2 ] [ 1 , 3 , 5 , 7 , 9 ] 3.\u62f7\u8d1d\u6574\u4e2a\u5bf9\u8c61 \u00b6 >>> b = a [:] #\u2605\u2605\u2605\u2605\u2605 >>> print ( b ) #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] >>> print ( id ( a )) #41946376 >>> print ( id ( b )) #41921864 \u6216 >>> b = a . copy () >>> print ( b ) #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] >>> print ( id ( a )) #39783752 >>> print ( id ( b )) #39759176 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a[:]\u548c.copy()\u90fd\u5c5e\u4e8e\u201c\u6d45\u62f7\u8d1d\u201d\uff0c\u53ea\u62f7\u8d1d\u6700\u5916\u5c42\u5143\u7d20\uff0c\u5185\u5c42\u5d4c\u5957\u5143\u7d20\u5219\u901a\u8fc7\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u72ec\u7acb\u5206\u914d\u5185\u5b58\u3002 >>> a = [ 1 , 2 ,[ 'A' , 'B' ]] >>> print ( 'a={}' . format ( a )) >>> b = a [:] >>> b [ 0 ] = 9 #\u4fee\u6539b\u7684\u6700\u5916\u5c42\u5143\u7d20\uff0c\u5c061\u53d8\u62109 >>> b [ 2 ][ 0 ] = 'D' #\u4fee\u6539b\u7684\u5185\u5d4c\u5c42\u5143\u7d20 >>> print ( 'a={}' . format ( a )) >>> print ( 'b={}' . format ( b )) >>> print ( 'id(a)={}' . format ( id ( a ))) >>> print ( 'id(b)={}' . format ( id ( b ))) a = [ 1 , 2 , [ 'A' , 'B' ]] #\u539f\u59cba a = [ 1 , 2 , [ 'D' , 'B' ]] #b\u4fee\u6539\u5185\u90e8\u5143\u7d20A\u4e3aD\u540e\uff0ca\u4e2d\u7684A\u4e5f\u53d8\u6210\u4e86D\uff0c\u8bf4\u660e\u5171\u4eab\u5185\u90e8\u5d4c\u5957\u5143\u7d20\uff0c\u4f46\u5916\u90e8\u5143\u7d201\u6ca1\u53d8\u3002 b = [ 9 , 2 , [ 'D' , 'B' ]] #\u4fee\u6539\u540e\u7684b id ( a ) = 38669128 id ( b ) = 38669192 4.\u4fee\u6539\u5355\u4e2a\u5143\u7d20 \u00b6 >>> a [ 3 ] = [ 'A' , 'B' ] [ 0 , 1 , 2 , [ 'A' , 'B' ], 4 , 5 , 6 , 7 , 8 , 9 ] 5.\u5728\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 \u00b6 >>> a [ 3 : 3 ] = [ 'A' , 'B' , 'C' ] [ 0 , 1 , 2 , 'A' , 'B' , 'C' , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [ 0 : 0 ] = [ 'A' , 'B' ] [ 'A' , 'B' , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] 6.\u66ff\u6362\u4e00\u90e8\u5206\u5143\u7d20 \u00b6 >>> a [ 3 : 6 ] = [ 'A' , 'B' ] [ 0 , 1 , 2 , 'A' , 'B' , 6 , 7 , 8 , 9 ] \u4e94\u3001 \u603b\u7ed3 \u00b6 \uff08\u4e00\uff09start_index\u3001end_index\u3001step\u53ef\u540c\u4e3a\u6b63\u3001\u540c\u4e3a\u8d1f\uff0c\u4e5f\u53ef\u6b63\u8d1f\u6df7\u5408\u4f7f\u7528\u3002\u4f46\u5fc5\u987b\u9075\u5faa\u4e00\u4e2a\u539f\u5219\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u786e\u5207\u53d6\u5230\u6570\u636e\uff1a\u5f53start_index\u7684\u4f4d\u7f6e\u5728end_index\u7684\u5de6\u8fb9\u65f6\uff0c\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u6b64\u65f6step\u5fc5\u987b\u662f\u6b63\u6570\uff08\u540c\u6837\u8868\u793a\u4ece\u5de6\u5f80\u53f3\uff09\uff1b\u5f53start_index\u7684\u4f4d\u7f6e\u5728end_index\u7684\u53f3\u8fb9\u65f6\uff0c\u8868\u793a\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u6b64\u65f6step\u5fc5\u987b\u662f\u8d1f\u6570\uff08\u540c\u6837\u8868\u793a\u4ece\u53f3\u5f80\u5de6\uff09\uff0c\u5373\u4e24\u8005\u7684\u53d6\u503c\u987a\u5e8f\u5fc5\u987b\u662f\u76f8\u540c\u7684\u3002\u5bf9\u4e8e\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53start_index\u6216end_index\u7701\u7565\u65f6\uff0c\u8d77\u59cb\u7d22\u5f15\u548c\u7ec8\u6b62\u7d22\u5f15\u7531step\u7684\u6b63\u8d1f\u6765\u51b3\u5b9a\uff0c\u4e0d\u4f1a\u5b58\u5728\u53d6\u503c\u65b9\u5411\u51fa\u73b0\u77db\u76fe\u7684\u60c5\u51b5\uff08\u5373\u4e0d\u4f1a\u8fd4\u56de\u7a7a\u5217\u8868[]\uff09\uff0c\u4f46\u6b63\u548c\u8d1f\u53d6\u5230\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5411\u5de6\u4e00\u4e2a\u5411\u53f3\u3002 \uff08\u4e8c\uff09\u5728\u5229\u7528\u5207\u7247\u65f6\uff0cstep\u7684\u6b63\u8d1f\u662f\u5fc5\u987b\u8981\u8003\u8651\u7684\uff0c\u5c24\u5176\u662f\u5f53step\u7701\u7565\u65f6\u3002\u6bd4\u5982a[-1:]\uff0c\u5f88\u5bb9\u6613\u5c31\u8bef\u8ba4\u4e3a\u662f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\uff0c\u5373a[-1:]= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\uff0c\u4f46\u5b9e\u9645\u4e0aa[-1:]=a[-1]=9\uff0c\u539f\u56e0\u5728\u4e8estep=1\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c\u8d77\u59cb\u7d22\u5f15start_index=-1\u672c\u8eab\u5c31\u662f\u5bf9\u8c61\u7684\u6700\u53f3\u8fb9\u7684\u5143\u7d20\u4e86\uff0c\u518d\u5f80\u53f3\u5df2\u7ecf\u6ca1\u6570\u636e\u4e86\uff0c\u56e0\u6b64\u53ea\u6709a[-1]\u4e00\u4e2a\u5143\u7d20\u3002","title":"044 python\u7684\u5207\u7247"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#python","text":"","title":"\u4e00\u3001 Python\u53ef\u5207\u7247\u5bf9\u8c61\u7684\u7d22\u5f15\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#python_1","text":"\u4e00\u4e2a\u5b8c\u6574\u7684\u5207\u7247\u8868\u8fbe\u5f0f\u5305\u542b\u4e24\u4e2a : \uff0c\u7528\u4e8e\u5206\u9694\u4e09\u4e2a\u53c2\u6570 (start_index\u3001end_index\u3001step) \uff0c\u5f53\u53ea\u6709\u4e00\u4e2a : \u65f6\uff0c\u9ed8\u8ba4\u7b2c\u4e09\u4e2a\u53c2\u6570 step=1 \u3002 \u5207\u7247\u64cd\u4f5c\u57fa\u672c\u8868\u8fbe\u5f0f\uff1a object [ start_index : end_index : step ] step\uff1a\u6b63\u8d1f\u6570\u5747\u53ef\uff0c\u5176\u7edd\u5bf9\u503c\u5927\u5c0f\u51b3\u5b9a\u4e86\u5207\u53d6\u6570\u636e\u65f6\u7684\u2018\u2018\u6b65\u957f\u201d\uff0c\u800c\u6b63\u8d1f\u53f7\u51b3\u5b9a\u4e86\u201c\u5207\u53d6\u65b9\u5411\u201d\uff0c\u6b63\u8868\u793a\u201c\u4ece\u5de6\u5f80\u53f3\u201d\u53d6\u503c\uff0c\u8d1f\u8868\u793a\u201c\u4ece\u53f3\u5f80\u5de6\u201d\u53d6\u503c\u3002\u5f53step\u7701\u7565\u65f6\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u5373\u4ece\u5de6\u5f80\u53f3\u4ee5\u589e\u91cf1\u53d6\u503c\u3002\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\u201c\u5207\u53d6\u65b9\u5411\u975e\u5e38\u91cd\u8981\uff01\u201d\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01 start_index\uff1a\u8868\u793a\u8d77\u59cb\u7d22\u5f15\uff08\u5305\u542b\u8be5\u7d22\u5f15\u672c\u8eab\uff09\uff1b\u8be5\u53c2\u6570\u7701\u7565\u65f6\uff0c\u8868\u793a\u4ece\u5bf9\u8c61\u201c\u7aef\u70b9\u201d\u5f00\u59cb\u53d6\u503c\uff0c\u81f3\u4e8e\u662f\u4ece\u201c\u8d77\u70b9\u201d\u8fd8\u662f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\uff0c\u5219\u7531step\u53c2\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff0cstep\u4e3a\u6b63\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\uff0c\u4e3a\u8d1f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u3002 end_index\uff1a\u8868\u793a\u7ec8\u6b62\u7d22\u5f15\uff08\u4e0d\u5305\u542b\u8be5\u7d22\u5f15\u672c\u8eab\uff09\uff1b\u8be5\u53c2\u6570\u7701\u7565\u65f6\uff0c\u8868\u793a\u4e00\u76f4\u53d6\u5230\u6570\u636e\u201c\u7aef\u70b9\u201d\uff0c\u81f3\u4e8e\u662f\u5230\u201c\u8d77\u70b9\u201d\u8fd8\u662f\u5230\u201c\u7ec8\u70b9\u201d\uff0c\u540c\u6837\u7531step\u53c2\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff0cstep\u4e3a\u6b63\u65f6\u76f4\u5230\u201c\u7ec8\u70b9\u201d\uff0c\u4e3a\u8d1f\u65f6\u76f4\u5230\u201c\u8d77\u70b9\u201d\u3002","title":"\u4e8c\u3001 Python\u5207\u7247\u64cd\u4f5c\u7684\u4e00\u822c\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#python_2","text":"\u4ee5\u4e0b\u793a\u4f8b\u5747\u4ee5\u5217\u8868a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\u4e3a\u4f8b\uff1a a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","title":"\u4e09\u3001 Python\u5207\u7247\u64cd\u4f5c\u8be6\u7ec6\u4f8b\u5b50"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#1","text":"a = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] a [ 0 ] Out [ 11 ]: 0 a [ - 4 ] Out [ 12 ]: 6","title":"1. \u5207\u53d6\u5355\u4e2a\u503c"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#2","text":">>> a [:] #\u4ece\u5de6\u5f80\u53f3 >>> [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [::] #\u4ece\u5de6\u5f80\u53f3 >>> [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [:: - 1 ] #\u4ece\u53f3\u5f80\u5de6 >>> [ 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ]","title":"2. \u5207\u53d6\u5b8c\u6574\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#3-start_indexend_index","text":">>> a [ 1 : 6 ] >>> [ 1 , 2 , 3 , 4 , 5 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c start_index = 1 \u5230 end_index = 6 \u540c\u6837\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\u3002 >>> a [ 1 : 6 : - 1 ] >>> [] \u8f93\u51fa\u4e3a\u7a7a\u5217\u8868\uff0c\u8bf4\u660e\u6ca1\u53d6\u5230\u6570\u636e\u3002 step =- 1 \uff0c\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u800c start_index = 1 \u5230 end_index = 6 \u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 >>> a [ 6 : 1 ] >>> [] \u540c\u6837\u8f93\u51fa\u4e3a\u7a7a\u5217\u8868\u3002 step = 1 \uff0c\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index = 6 \u5230 end_index = 1 \u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 >>> a [: 6 ] >>> [ 0 , 1 , 2 , 3 , 4 , 5 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index = 6 \u3002 >>> a [: 6 : - 1 ] >>> [ 9 , 8 , 7 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index = 6 \u3002 >>> a [ 6 :] >>> [ 6 , 7 , 8 , 9 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece start_index = 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u7ec8\u70b9\u201d\u3002 >>> a [ 6 :: - 1 ] >>> [ 6 , 5 , 4 , 3 , 2 , 1 , 0 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece start_index = 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\u3002","title":"3. start_index\u548cend_index\u5168\u4e3a\u6b63\uff08+\uff09\u7d22\u5f15\u7684\u60c5\u51b5"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#4-start_indexend_index-","text":">>> a [ - 1 : - 6 ] >>> [] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index =- 1 \u5230 end_index =- 6 \u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u6240\u4ee5\u4e3a\u7a7a\u3002 \u7d22\u5f15 - 1 \u5728 - 6 \u7684\u53f3\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [ - 1 : - 6 : - 1 ] >>> [ 9 , 8 , 7 , 6 , 5 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c start_index =- 1 \u5230 end_index =- 6 \u540c\u6837\u662f\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\u3002 \u7d22\u5f15 - 1 \u5728 6 \u7684\u53f3\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [ - 6 : - 1 ] >>> [ 4 , 5 , 6 , 7 , 8 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c start_index =- 6 \u5230 end_index =- 1 \u540c\u6837\u662f\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\u3002 \u7d22\u5f15 - 6 \u5728 - 1 \u7684\u5de6\u8fb9\uff08\u5982\u4e0a\u56fe\uff09 >>> a [: - 6 ] >>> [ 0 , 1 , 2 , 3 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece\u201c\u8d77\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index =- 6 \u3002 >>> a [: - 6 : - 1 ] >>> [ 9 , 8 , 7 , 6 , 5 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230 end_index =- 6 \u3002 >>> a [ - 6 :] >>> [ 4 , 5 , 6 , 7 , 8 , 9 ] step = 1 \uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4ece start_index =- 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u7ec8\u70b9\u201d\u3002 >>> a [ - 6 :: - 1 ] >>> [ 4 , 3 , 2 , 1 , 0 ] step =- 1 \uff0c\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4ece start_index =- 6 \u5f00\u59cb\uff0c\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\u3002","title":"4. start_index\u548cend_index\u5168\u4e3a\u8d1f\uff08-\uff09\u7d22\u5f15\u7684\u60c5\u51b5"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#5-start_indexend_index-","text":">>> a [ 1 : - 6 ] >>> [ 1 , 2 , 3 ] start_index = 1 \u5728 end_index =- 6 \u7684\u5de6\u8fb9\uff0c\u56e0\u6b64\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c step = 1 \u540c\u6837\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u56e0\u6b64\u7ed3\u679c\u6b63\u786e >>> a [ 1 : - 6 : - 1 ] >>> [] start_index = 1 \u5728 end_index =- 6 \u7684\u5de6\u8fb9\uff0c\u56e0\u6b64\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4f46 step =- \u5219\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u56e0\u6b64\u4e3a\u7a7a\u3002 >>> a [ - 1 : 6 ] >>> [] start_index =- 1 \u5728 end_index = 6 \u7684\u53f3\u8fb9\uff0c\u56e0\u6b64\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u4f46 step = 1 \u5219\u51b3\u5b9a\u4e86\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u4e24\u8005\u77db\u76fe\uff0c\u56e0\u6b64\u4e3a\u7a7a\u3002 >>> a [ - 1 : 6 : - 1 ] >>> [ 9 , 8 , 7 ] start_index =- 1 \u5728 end_index = 6 \u7684\u53f3\u8fb9\uff0c\u56e0\u6b64\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u800c step =- 1 \u540c\u6837\u51b3\u5b9a\u4e86\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u56e0\u6b64\u7ed3\u679c\u6b63\u786e\u3002","title":"5. start_index\u548cend_index\u6b63\uff08+\uff09\u8d1f\uff08-\uff09\u6df7\u5408\u7d22\u5f15\u7684\u60c5\u51b5"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#6","text":">>> a [: 8 ][ 2 : 5 ][ - 1 :] >>> [ 4 ] \u76f8\u5f53\u4e8e\uff1a a [: 8 ] = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 ] a [: 8 ][ 2 : 5 ] = [ 2 , 3 , 4 ] a [: 8 ][ 2 : 5 ][ - 1 :] = 4 \u7406\u8bba\u4e0a\u53ef\u65e0\u9650\u6b21\u8fde\u7eed\u5207\u7247\u64cd\u4f5c\uff0c\u53ea\u8981\u4e0a\u4e00\u6b21\u8fd4\u56de\u7684\u4f9d\u7136\u662f\u975e\u7a7a\u53ef\u5207\u7247\u5bf9\u8c61\u3002","title":"6. \u8fde\u7eed\u5207\u7247\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#7","text":">>>a[2+1:3*2:7%3] >>> [3, 4, 5] \u5373\uff1aa[2+1:3*2:7%3] = a[3:6:1]","title":"7. \u5207\u7247\u64cd\u4f5c\u7684\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u8868\u8fbe\u5f0f"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#8","text":"\u524d\u9762\u7684\u5207\u7247\u64cd\u4f5c\u8bf4\u660e\u90fd\u4ee5list\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ef\u8fdb\u884c\u7684\u5207\u7247\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u8fd8\u6709\u5f88\u591a\uff0c\u5305\u62ec\u5143\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u7b49\u3002 >>> ( 0 , 1 , 2 , 3 , 4 , 5 )[: 3 ] >>> ( 0 , 1 , 2 ) \u5143\u7ec4\u7684\u5207\u7247\u64cd\u4f5c >>> 'ABCDEFG' [:: 2 ] >>> 'ACEG' \u5b57\u7b26\u4e32\u7684\u5207\u7247\u64cd\u4f5c >>> for i in range ( 1 , 100 )[ 2 :: 3 ][ - 10 :]: print ( i ) \u5c31\u662f\u5229\u7528 range\u51fd\u6570\u751f\u62101 - 99 \u7684\u6574\u6570\uff0c\u7136\u540e\u53d6 3 \u7684\u500d\u6570\uff0c\u518d\u53d6\u6700\u540e\u5341\u4e2a\u3002","title":"8. \u5176\u4ed6\u5bf9\u8c61\u7684\u5207\u7247\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#_1","text":"\u4ee5\u5217\u8868\uff1aa = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \u4e3a\u8bf4\u660e\u5bf9\u8c61","title":"\u56db\u3001 \u5e38\u7528\u5207\u7247\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#1_1","text":">>> b = a [:: 2 ] [ 0 , 2 , 4 , 6 , 8 ]","title":"1.\u53d6\u5076\u6570\u4f4d\u7f6e"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#2_1","text":">>> b = a [ 1 :: 2 ] [ 1 , 3 , 5 , 7 , 9 ]","title":"2.\u53d6\u5947\u6570\u4f4d\u7f6e"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#3","text":">>> b = a [:] #\u2605\u2605\u2605\u2605\u2605 >>> print ( b ) #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] >>> print ( id ( a )) #41946376 >>> print ( id ( b )) #41921864 \u6216 >>> b = a . copy () >>> print ( b ) #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] >>> print ( id ( a )) #39783752 >>> print ( id ( b )) #39759176 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a[:]\u548c.copy()\u90fd\u5c5e\u4e8e\u201c\u6d45\u62f7\u8d1d\u201d\uff0c\u53ea\u62f7\u8d1d\u6700\u5916\u5c42\u5143\u7d20\uff0c\u5185\u5c42\u5d4c\u5957\u5143\u7d20\u5219\u901a\u8fc7\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u72ec\u7acb\u5206\u914d\u5185\u5b58\u3002 >>> a = [ 1 , 2 ,[ 'A' , 'B' ]] >>> print ( 'a={}' . format ( a )) >>> b = a [:] >>> b [ 0 ] = 9 #\u4fee\u6539b\u7684\u6700\u5916\u5c42\u5143\u7d20\uff0c\u5c061\u53d8\u62109 >>> b [ 2 ][ 0 ] = 'D' #\u4fee\u6539b\u7684\u5185\u5d4c\u5c42\u5143\u7d20 >>> print ( 'a={}' . format ( a )) >>> print ( 'b={}' . format ( b )) >>> print ( 'id(a)={}' . format ( id ( a ))) >>> print ( 'id(b)={}' . format ( id ( b ))) a = [ 1 , 2 , [ 'A' , 'B' ]] #\u539f\u59cba a = [ 1 , 2 , [ 'D' , 'B' ]] #b\u4fee\u6539\u5185\u90e8\u5143\u7d20A\u4e3aD\u540e\uff0ca\u4e2d\u7684A\u4e5f\u53d8\u6210\u4e86D\uff0c\u8bf4\u660e\u5171\u4eab\u5185\u90e8\u5d4c\u5957\u5143\u7d20\uff0c\u4f46\u5916\u90e8\u5143\u7d201\u6ca1\u53d8\u3002 b = [ 9 , 2 , [ 'D' , 'B' ]] #\u4fee\u6539\u540e\u7684b id ( a ) = 38669128 id ( b ) = 38669192","title":"3.\u62f7\u8d1d\u6574\u4e2a\u5bf9\u8c61"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#4","text":">>> a [ 3 ] = [ 'A' , 'B' ] [ 0 , 1 , 2 , [ 'A' , 'B' ], 4 , 5 , 6 , 7 , 8 , 9 ]","title":"4.\u4fee\u6539\u5355\u4e2a\u5143\u7d20"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#5","text":">>> a [ 3 : 3 ] = [ 'A' , 'B' , 'C' ] [ 0 , 1 , 2 , 'A' , 'B' , 'C' , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> a [ 0 : 0 ] = [ 'A' , 'B' ] [ 'A' , 'B' , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]","title":"5.\u5728\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#6_1","text":">>> a [ 3 : 6 ] = [ 'A' , 'B' ] [ 0 , 1 , 2 , 'A' , 'B' , 6 , 7 , 8 , 9 ]","title":"6.\u66ff\u6362\u4e00\u90e8\u5206\u5143\u7d20"},{"location":"python\u5b66\u4e60/044-python\u7684\u5207\u7247/#_2","text":"\uff08\u4e00\uff09start_index\u3001end_index\u3001step\u53ef\u540c\u4e3a\u6b63\u3001\u540c\u4e3a\u8d1f\uff0c\u4e5f\u53ef\u6b63\u8d1f\u6df7\u5408\u4f7f\u7528\u3002\u4f46\u5fc5\u987b\u9075\u5faa\u4e00\u4e2a\u539f\u5219\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u786e\u5207\u53d6\u5230\u6570\u636e\uff1a\u5f53start_index\u7684\u4f4d\u7f6e\u5728end_index\u7684\u5de6\u8fb9\u65f6\uff0c\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u6b64\u65f6step\u5fc5\u987b\u662f\u6b63\u6570\uff08\u540c\u6837\u8868\u793a\u4ece\u5de6\u5f80\u53f3\uff09\uff1b\u5f53start_index\u7684\u4f4d\u7f6e\u5728end_index\u7684\u53f3\u8fb9\u65f6\uff0c\u8868\u793a\u4ece\u53f3\u5f80\u5de6\u53d6\u503c\uff0c\u6b64\u65f6step\u5fc5\u987b\u662f\u8d1f\u6570\uff08\u540c\u6837\u8868\u793a\u4ece\u53f3\u5f80\u5de6\uff09\uff0c\u5373\u4e24\u8005\u7684\u53d6\u503c\u987a\u5e8f\u5fc5\u987b\u662f\u76f8\u540c\u7684\u3002\u5bf9\u4e8e\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53start_index\u6216end_index\u7701\u7565\u65f6\uff0c\u8d77\u59cb\u7d22\u5f15\u548c\u7ec8\u6b62\u7d22\u5f15\u7531step\u7684\u6b63\u8d1f\u6765\u51b3\u5b9a\uff0c\u4e0d\u4f1a\u5b58\u5728\u53d6\u503c\u65b9\u5411\u51fa\u73b0\u77db\u76fe\u7684\u60c5\u51b5\uff08\u5373\u4e0d\u4f1a\u8fd4\u56de\u7a7a\u5217\u8868[]\uff09\uff0c\u4f46\u6b63\u548c\u8d1f\u53d6\u5230\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5411\u5de6\u4e00\u4e2a\u5411\u53f3\u3002 \uff08\u4e8c\uff09\u5728\u5229\u7528\u5207\u7247\u65f6\uff0cstep\u7684\u6b63\u8d1f\u662f\u5fc5\u987b\u8981\u8003\u8651\u7684\uff0c\u5c24\u5176\u662f\u5f53step\u7701\u7565\u65f6\u3002\u6bd4\u5982a[-1:]\uff0c\u5f88\u5bb9\u6613\u5c31\u8bef\u8ba4\u4e3a\u662f\u4ece\u201c\u7ec8\u70b9\u201d\u5f00\u59cb\u4e00\u76f4\u53d6\u5230\u201c\u8d77\u70b9\u201d\uff0c\u5373a[-1:]= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\uff0c\u4f46\u5b9e\u9645\u4e0aa[-1:]=a[-1]=9\uff0c\u539f\u56e0\u5728\u4e8estep=1\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0c\u800c\u8d77\u59cb\u7d22\u5f15start_index=-1\u672c\u8eab\u5c31\u662f\u5bf9\u8c61\u7684\u6700\u53f3\u8fb9\u7684\u5143\u7d20\u4e86\uff0c\u518d\u5f80\u53f3\u5df2\u7ecf\u6ca1\u6570\u636e\u4e86\uff0c\u56e0\u6b64\u53ea\u6709a[-1]\u4e00\u4e2a\u5143\u7d20\u3002","title":"\u4e94\u3001 \u603b\u7ed3"},{"location":"python\u5b66\u4e60/045-python-\u7684join\u65b9\u6cd5/","text":"\u63cf\u8ff0 Python join() \u65b9\u6cd5\u7528\u4e8e\u5c06\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u8fde\u63a5\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u8bed\u6cd5 \u00b6 join()\u65b9\u6cd5\u8bed\u6cd5\uff1a str . join ( sequence ) sequence -- \u8981\u8fde\u63a5\u7684\u5143\u7d20\u5e8f\u5217\u3002 \u00b6 \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de\u901a\u8fc7\u6307\u5b9a\u5b57\u7b26\u8fde\u63a5\u5e8f\u5217\u4e2d\u5143\u7d20\u540e\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002 \u5b9e\u4f8b \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u5c55\u793a\u4e86join()\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a\u5c31\u662f\u5728\u5143\u7d20\u7684\u4e2d\u95f4\u4f4d\u7f6e\u90fd\u63d2\u5165\u4e00\u4e2astr1 str1 = \"a\" b = ( \"b\" , \"c\" , \"d\" ) str1 . join ( b ) Out [ 6 ]: 'bacad' \u5e38\u7528\u7684\u4f8b\u5b50\u5c06\u5217\u8868\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 a = [ \"a\" , \"b\" , \"c\" ] b = \"\" . join ( a ) b Out [ 9 ]: 'abc'","title":"045 python-\u7684join\u65b9\u6cd5"},{"location":"python\u5b66\u4e60/045-python-\u7684join\u65b9\u6cd5/#_1","text":"join()\u65b9\u6cd5\u8bed\u6cd5\uff1a str . join ( sequence )","title":"\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/045-python-\u7684join\u65b9\u6cd5/#sequence-","text":"","title":"sequence -- \u8981\u8fde\u63a5\u7684\u5143\u7d20\u5e8f\u5217\u3002"},{"location":"python\u5b66\u4e60/045-python-\u7684join\u65b9\u6cd5/#_2","text":"\u8fd4\u56de\u901a\u8fc7\u6307\u5b9a\u5b57\u7b26\u8fde\u63a5\u5e8f\u5217\u4e2d\u5143\u7d20\u540e\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002","title":"\u8fd4\u56de\u503c"},{"location":"python\u5b66\u4e60/045-python-\u7684join\u65b9\u6cd5/#_3","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u5c55\u793a\u4e86join()\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a\u5c31\u662f\u5728\u5143\u7d20\u7684\u4e2d\u95f4\u4f4d\u7f6e\u90fd\u63d2\u5165\u4e00\u4e2astr1 str1 = \"a\" b = ( \"b\" , \"c\" , \"d\" ) str1 . join ( b ) Out [ 6 ]: 'bacad' \u5e38\u7528\u7684\u4f8b\u5b50\u5c06\u5217\u8868\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 a = [ \"a\" , \"b\" , \"c\" ] b = \"\" . join ( a ) b Out [ 9 ]: 'abc'","title":"\u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/046-\u5c06\u6587\u4ef6\u5939\u4e2d\u89c6\u9891\u6309\u7167\u6a2a\u5c4f\u7ad6\u5c4f\u8fdb\u884c\u5206\u7c7b/","text":"\u4ee3\u7801\u5982\u4e0b:\u5173\u952e\u4f4d\u7f6e\u81ea\u884c\u4fee\u6539 import os import os.path from tqdm import tqdm import shutil import cv2 #\u89c6\u9891\u5904\u7406\u7684\u5305opencv #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 path = input ( '\u8bf7\u8f93\u5165\u8def\u5f84\uff1a' ) . strip () #.strip()\u53bb\u9664\u9996\u5c3e\u7684\u7a7a\u683c file_path_list = get_file ( path ) #\u7b5b\u9009\u540e\u7f00\u51fd\u6570,\u4f20\u5165\u5305\u542b\u6240\u6709\u540e\u7f00\u540d\u7684\u5217\u8868,\u4ee5\u53ca\u9700\u8981\u7b5b\u9009\u7684\u540e\u7f00(\u9ed8\u8ba4\u7b5b\u9009txt\u6587\u4ef6) def shai_xuan_hou_zhui ( file_path_list , hou_zhui = '.txt' ): list2 = [] #\u7528\u4e8e\u50a8\u5b58\u7b5b\u9009\u597d\u7684\u6587\u4ef6\u7684\u8def\u5f84 for filepath in file_path_list : # os.path.splitext():\u5206\u79bb\u6587\u4ef6\u540d\u4e0e\u6269\u5c55\u540d if os . path . splitext ( filepath )[ 1 ] == hou_zhui : list2 . append ( filepath ) # print(filepath +'\\n') return list2 # hou_zhui='.jpg' # py_list=shai_xuan_hou_zhui(file_path_list,'.py') #\u7b5b\u9009py\u6587\u4ef6 pig_list = shai_xuan_hou_zhui ( file_path_list , '.flv' ) #\u7b5b\u9009flv\u683c\u5f0f\u6587\u4ef6 folder1 = \"F: \\\\ \u706b\u8424\u89c6\u9891 \\\\ \u6a2a\" #\u5b58\u653e\u6a2a\u89c6\u9891\u7684\u5730\u5740 folder2 = \"F: \\\\ \u706b\u8424\u89c6\u9891 \\\\ \u7ad6\" #\u5b58\u653e\u7684\u5730\u5740,\u8fd9\u91cc\u7684\u6a2a\u7ad6\u4e00\u5b9a\u4e0d\u8981\u5199\u9519\u4e86 for i in tqdm ( range ( len ( pig_list ))): lujing = pig_list [ i ] cap = cv2 . VideoCapture ( lujing ) width = cap . get ( 3 ) #\u83b7\u53d6\u5e27\u5bbd height = cap . get ( 4 ) #\u83b7\u53d6\u5e27\u9ad8 cap . release () #\u7528\u6765\u91ca\u653e\u8d44\u6e90\u4e0d\u7136\u5c31\u6ca1\u6cd5\u8fdb\u884c\u79fb\u52a8\u4e86 # print(width) # print(height) # cap.close() if width > height : shutil . move ( lujing , folder1 ) #\u8fdb\u884c\u79fb\u52a8\u7684\u64cd\u4f5c else : shutil . move ( lujing , folder2 )","title":"046 \u5c06\u6587\u4ef6\u5939\u4e2d\u89c6\u9891\u6309\u7167\u6a2a\u5c4f\u7ad6\u5c4f\u8fdb\u884c\u5206\u7c7b"},{"location":"python\u5b66\u4e60/047-opencv-python-\u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570/","text":"opencv-python \u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570 \u00b6 \u5728\u505a\u57fa\u4e8e\u89c6\u9891\u7684\u6df1\u5ea6\u5b66\u4e60\uff0c\u9700\u8981\u5bf9\u89c6\u9891\u6570\u636e\u8fdb\u884c\u5207\u5272\u5904\u7406\uff0c\u521a\u6572\u4e86\u4e09\u884c\u4ee3\u7801\u5c31\u5361\u5728\u4e86\u5982\u4f55\u83b7\u5f97\u89c6\u9891\u5c5e\u6027\u7684\u574e\u4e0a\uff0c\u8bb0\u5f55\u4e00\u4e0b\u514d\u5f97\u81ea\u5df1\u4e0b\u6b21\u8981\u7528\u53c8\u5fd8\u8bb0\u4e86\u3002 \u5148\u653e\u4e0aopencv2.4\u7684\u5b98\u65b9\u6587\u6863\u94fe\u63a5: https://docs.opencv.org/2.4/index.html \u4e0b\u9762\u662f\u4ee3\u7801\u4f8b\u5b50 import cv2 #\u5bfc\u5165opencv\u7684\u5305 cap = cv2 . VideoCapture ( path ) #\u8c03\u7528VideoCapture\u51fd\u6570\u83b7\u53d6\u89c6\u9891\u7684\u5404\u9879\u4fe1\u606f,path\u662f\u8def\u5f84 frames_num = cap . get ( 7 ) #get\u65b9\u6cd5\u53c2\u6570\u6309\u987a\u5e8f\u5bf9\u5e94\u4e0b\u8868\uff08\u4ece0\u5f00\u59cb\u7f16\u53f7\uff0c\u6bd4\u5982\u8fd9\u91cc\u4e3a\u4e86\u83b7\u53d6\u89c6\u9891\u7684\u603b\u5e27\u6570\uff0c\u5728\u4e0b\u8868\u662f\u6392\u7b2c\u516b\u4e2a\u7684CV_CAP_PROP_FRAME_COUNT \u4e0b\u9762\u662f\u5404\u79cd\u53c2\u6570\u7684\u4fe1 \u00b6 0 CV_CAP_PROP_POS_MSEC \u89c6\u9891\u6587\u4ef6\u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u6beb\u79d2\uff09\u6216\u89c6\u9891\u6355\u83b7\u65f6\u95f4\u6233\u3002 1 CV_CAP_PROP_POS_FRAMES \u4e0b\u4e00\u6b65\u8981\u89e3\u7801/\u6355\u83b7\u7684\u5e27\u7684\u7d22\u5f15 2 CV_CAP_PROP_POS_AVI_RATIO \u89c6\u9891\u6587\u4ef6\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff1a0-\u7535\u5f71\u5f00\u59cb\uff0c1-\u7535\u5f71\u7ed3\u675f\u3002 3 CV_CAP_PROP_FRAME_WIDTH \u89c6\u9891\u6d41\u4e2d\u5e27\u7684\u5bbd\u5ea6\u3002 4 CV_CAP_PROP_FRAME_HEIGHT \u89c6\u9891\u6d41\u4e2d\u5e27\u7684\u9ad8\u5ea6\u3002 5 CV_CAP_PROP_FPS \u5e27\u901f\u7387\u3002 6**CV_CAP_PROP_FOURCC** \u7f16\u89e3\u7801\u5668\u76844\u5b57\u7b26\u4ee3\u7801 7 CV_CAP_PROP_FRAME_COUNT \u89c6\u9891\u6587\u4ef6\u4e2d\u7684\u5e27\u6570\u3002 8 CV_CAP_PROP_FORMAT \u8fd4\u56de\u7684mat\u5bf9\u8c61\u7684\u683c\u5f0f\u3002 9 CV_CAP_PROP_MODE \u540e\u7aef\u7279\u5b9a\u503c\uff0c\u6307\u793a\u5f53\u524d\u6355\u83b7\u6a21\u5f0f\u3002 10 CV_CAP_PROP_BRIGHTNESS \u56fe\u50cf\u4eae\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09 11**CV_CAP_PROP_CONTRAST** \u56fe\u50cf\u5bf9\u6bd4\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 12 CV_CAP_PROP_SATURATION \u56fe\u50cf\u9971\u548c\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 13 CV_CAP_PROP_HUE \u56fe\u50cf\u8272\u8c03\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 14 CV_CAP_PROP_GAIN \u56fe\u50cf\u589e\u76ca\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 15 CV_CAP_PROP_EXPOSURE \u66dd\u5149\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 16 CV_CAP_PROP_CONVERT_RGB \u6307\u793a\u56fe\u50cf\u662f\u5426\u5e94\u8f6c\u6362\u4e3argb\u7684\u5e03\u5c14\u6807\u5fd7\u3002 17 CV_CAP_PROP_WHITE_BALANCE_U \u767d\u5e73\u8861\u8bbe\u7f6e\u7684u\u503c\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301dc1394 v 2.x\u540e\u7aef\uff09 18 CV_CAP_PROP_WHITE_BALANCE_V \u767d\u5e73\u8861\u8bbe\u7f6e\u7684v\u503c\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301dc1394 v 2.x\u540e\u7aef\uff09 19 CV_CAP_PROP_RECTIFICATION \u7acb\u4f53\u6444\u50cf\u673a\u6821\u6b63\u6807\u5fd7\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301DC1394 v 2.x\u540e\u7aef\uff09 20 CV_CAP_PROP_ISO_SPEED \u76f8\u673a\u7684iso\u901f\u5ea6\uff08\u6ce8\uff1a\u76ee\u524d\u53ea\u6709dc1394 v 2.x\u540e\u7aef\u652f\u6301\uff09 21 CV_CAP_PROP_BUFFERSIZE \u5b58\u50a8\u5728\u5185\u90e8\u7f13\u51b2\u533a\u5185\u5b58\u4e2d\u7684\u5e27\u6570\u91cf\uff08\u6ce8\u610f\uff1a\u76ee\u524d\u53ea\u6709dc1394 v 2.x\u540e\u7aef\u652f\u6301\uff09","title":"047 opencv-python-\u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570"},{"location":"python\u5b66\u4e60/047-opencv-python-\u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570/#opencv-python","text":"\u5728\u505a\u57fa\u4e8e\u89c6\u9891\u7684\u6df1\u5ea6\u5b66\u4e60\uff0c\u9700\u8981\u5bf9\u89c6\u9891\u6570\u636e\u8fdb\u884c\u5207\u5272\u5904\u7406\uff0c\u521a\u6572\u4e86\u4e09\u884c\u4ee3\u7801\u5c31\u5361\u5728\u4e86\u5982\u4f55\u83b7\u5f97\u89c6\u9891\u5c5e\u6027\u7684\u574e\u4e0a\uff0c\u8bb0\u5f55\u4e00\u4e0b\u514d\u5f97\u81ea\u5df1\u4e0b\u6b21\u8981\u7528\u53c8\u5fd8\u8bb0\u4e86\u3002 \u5148\u653e\u4e0aopencv2.4\u7684\u5b98\u65b9\u6587\u6863\u94fe\u63a5: https://docs.opencv.org/2.4/index.html \u4e0b\u9762\u662f\u4ee3\u7801\u4f8b\u5b50 import cv2 #\u5bfc\u5165opencv\u7684\u5305 cap = cv2 . VideoCapture ( path ) #\u8c03\u7528VideoCapture\u51fd\u6570\u83b7\u53d6\u89c6\u9891\u7684\u5404\u9879\u4fe1\u606f,path\u662f\u8def\u5f84 frames_num = cap . get ( 7 ) #get\u65b9\u6cd5\u53c2\u6570\u6309\u987a\u5e8f\u5bf9\u5e94\u4e0b\u8868\uff08\u4ece0\u5f00\u59cb\u7f16\u53f7\uff0c\u6bd4\u5982\u8fd9\u91cc\u4e3a\u4e86\u83b7\u53d6\u89c6\u9891\u7684\u603b\u5e27\u6570\uff0c\u5728\u4e0b\u8868\u662f\u6392\u7b2c\u516b\u4e2a\u7684CV_CAP_PROP_FRAME_COUNT","title":"opencv-python \u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570"},{"location":"python\u5b66\u4e60/047-opencv-python-\u600e\u4e48\u8bfb\u53d6\u89c6\u9891\u4ee5\u53ca\u83b7\u5f97\u89c6\u9891\u7684\u76f8\u5e94\u53c2\u6570/#_1","text":"0 CV_CAP_PROP_POS_MSEC \u89c6\u9891\u6587\u4ef6\u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u6beb\u79d2\uff09\u6216\u89c6\u9891\u6355\u83b7\u65f6\u95f4\u6233\u3002 1 CV_CAP_PROP_POS_FRAMES \u4e0b\u4e00\u6b65\u8981\u89e3\u7801/\u6355\u83b7\u7684\u5e27\u7684\u7d22\u5f15 2 CV_CAP_PROP_POS_AVI_RATIO \u89c6\u9891\u6587\u4ef6\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff1a0-\u7535\u5f71\u5f00\u59cb\uff0c1-\u7535\u5f71\u7ed3\u675f\u3002 3 CV_CAP_PROP_FRAME_WIDTH \u89c6\u9891\u6d41\u4e2d\u5e27\u7684\u5bbd\u5ea6\u3002 4 CV_CAP_PROP_FRAME_HEIGHT \u89c6\u9891\u6d41\u4e2d\u5e27\u7684\u9ad8\u5ea6\u3002 5 CV_CAP_PROP_FPS \u5e27\u901f\u7387\u3002 6**CV_CAP_PROP_FOURCC** \u7f16\u89e3\u7801\u5668\u76844\u5b57\u7b26\u4ee3\u7801 7 CV_CAP_PROP_FRAME_COUNT \u89c6\u9891\u6587\u4ef6\u4e2d\u7684\u5e27\u6570\u3002 8 CV_CAP_PROP_FORMAT \u8fd4\u56de\u7684mat\u5bf9\u8c61\u7684\u683c\u5f0f\u3002 9 CV_CAP_PROP_MODE \u540e\u7aef\u7279\u5b9a\u503c\uff0c\u6307\u793a\u5f53\u524d\u6355\u83b7\u6a21\u5f0f\u3002 10 CV_CAP_PROP_BRIGHTNESS \u56fe\u50cf\u4eae\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09 11**CV_CAP_PROP_CONTRAST** \u56fe\u50cf\u5bf9\u6bd4\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 12 CV_CAP_PROP_SATURATION \u56fe\u50cf\u9971\u548c\u5ea6\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 13 CV_CAP_PROP_HUE \u56fe\u50cf\u8272\u8c03\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 14 CV_CAP_PROP_GAIN \u56fe\u50cf\u589e\u76ca\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 15 CV_CAP_PROP_EXPOSURE \u66dd\u5149\uff08\u4ec5\u9002\u7528\u4e8e\u76f8\u673a\uff09\u3002 16 CV_CAP_PROP_CONVERT_RGB \u6307\u793a\u56fe\u50cf\u662f\u5426\u5e94\u8f6c\u6362\u4e3argb\u7684\u5e03\u5c14\u6807\u5fd7\u3002 17 CV_CAP_PROP_WHITE_BALANCE_U \u767d\u5e73\u8861\u8bbe\u7f6e\u7684u\u503c\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301dc1394 v 2.x\u540e\u7aef\uff09 18 CV_CAP_PROP_WHITE_BALANCE_V \u767d\u5e73\u8861\u8bbe\u7f6e\u7684v\u503c\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301dc1394 v 2.x\u540e\u7aef\uff09 19 CV_CAP_PROP_RECTIFICATION \u7acb\u4f53\u6444\u50cf\u673a\u6821\u6b63\u6807\u5fd7\uff08\u6ce8\uff1a\u76ee\u524d\u4ec5\u652f\u6301DC1394 v 2.x\u540e\u7aef\uff09 20 CV_CAP_PROP_ISO_SPEED \u76f8\u673a\u7684iso\u901f\u5ea6\uff08\u6ce8\uff1a\u76ee\u524d\u53ea\u6709dc1394 v 2.x\u540e\u7aef\u652f\u6301\uff09 21 CV_CAP_PROP_BUFFERSIZE \u5b58\u50a8\u5728\u5185\u90e8\u7f13\u51b2\u533a\u5185\u5b58\u4e2d\u7684\u5e27\u6570\u91cf\uff08\u6ce8\u610f\uff1a\u76ee\u524d\u53ea\u6709dc1394 v 2.x\u540e\u7aef\u652f\u6301\uff09","title":"\u4e0b\u9762\u662f\u5404\u79cd\u53c2\u6570\u7684\u4fe1"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/","text":"sys sys\u6a21\u5757\u4e3b\u8981\u662f\u9488\u5bf9\u4e0ePython\u89e3\u91ca\u5668\u76f8\u5173\u7684\u53d8\u91cf\u548c\u65b9\u6cd5\uff0c\u4e0d\u662f\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u3002 \u5bfc\u5165\u65b9\u5f0f\uff1aimport sys \u5c5e\u6027\u53ca\u65b9\u6cd5 \u4f7f\u7528\u8bf4\u660e sys . argv \u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u5217\u8868\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u7a0b\u5e8f\u672c\u8eab sys . exit ( n ) \u9000\u51fa Python\u7a0b\u5e8f \uff0c exit ( 0 ) \u8868\u793a\u6b63\u5e38\u9000\u51fa\u3002\u5f53\u53c2\u6570\u975e 0 \u65f6\uff0c\u4f1a\u5f15\u53d1\u4e00\u4e2a SystemExit\u5f02\u5e38 \uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u6355\u83b7\u8be5\u5f02\u5e38 sys . version \u83b7\u53d6 Python\u89e3\u91ca\u7a0b\u5668\u7684\u7248\u672c\u4fe1\u606f sys . maxsize \u6700\u5927\u7684 Int\u503c \uff0c 64 \u4f4d\u5e73\u53f0\u662f 2 ** 63 - 1 sys . path \u8fd4\u56de\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528 PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u503c sys . platform \u8fd4\u56de\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u540d\u79f0 sys . stdin \u8f93\u5165\u76f8\u5173 sys . stdout \u8f93\u51fa\u76f8\u5173 sys . stderr \u9519\u8bef\u76f8\u5173 sys . exc_info () \u8fd4\u56de\u5f02\u5e38\u4fe1\u606f\u4e09\u5143\u5143\u7ec4 sys . getdefaultencoding () \u83b7\u53d6\u7cfb\u7edf\u5f53\u524d\u7f16\u7801\uff0c\u9ed8\u8ba4\u4e3a utf - 8 sys . setdefaultencoding () \u8bbe\u7f6e\u7cfb\u7edf\u7684\u9ed8\u8ba4\u7f16\u7801 sys . getfilesystemencoding () \u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u7f16\u7801\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u662f utf - 8 sys . modules \u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u8fd4\u56de\u6240\u6709\u5f53\u524d Python\u73af\u5883\u4e2d\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757 sys . builtin_module_names \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u6240\u6709\u5df2\u7ecf\u7f16\u8bd1\u5230 Python\u89e3\u91ca\u5668\u91cc\u7684\u6a21\u5757\u7684\u540d\u5b57 sys . copyright \u5f53\u524d Python\u7684\u7248\u6743\u4fe1\u606f sys . flags \u547d\u4ee4\u884c\u6807\u8bc6\u72b6\u6001\u4fe1\u606f\u5217\u8868\u3002\u53ea\u8bfb\u3002 sys . getrefcount ( object ) \u8fd4\u56de\u5bf9\u8c61\u7684\u5f15\u7528\u6570\u91cf sys . getrecursionlimit () \u8fd4\u56de Python\u6700\u5927\u9012\u5f52\u6df1\u5ea6 \uff0c\u9ed8\u8ba4 1000 sys . getsizeof ( object [, default ]) \u8fd4\u56de\u5bf9\u8c61\u7684\u5927\u5c0f sys . getswitchinterval () \u8fd4\u56de\u7ebf\u7a0b\u5207\u6362\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4 0.005 \u79d2 sys . setswitchinterval ( interval ) \u8bbe\u7f6e\u7ebf\u7a0b\u5207\u6362\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u79d2 sys . getwindowsversion () \u8fd4\u56de\u5f53\u524d windwos\u7cfb\u7edf\u7684\u7248\u672c\u4fe1\u606f sys . hash_info \u8fd4\u56de Python\u9ed8\u8ba4\u7684\u54c8\u5e0c\u65b9\u6cd5\u7684\u53c2\u6570 sys . implementation \u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684 Python\u89e3\u91ca\u5668\u7684\u5177\u4f53\u5b9e\u73b0 \uff0c\u6bd4\u5982 CPython sys . thread_info \u5f53\u524d\u7ebf\u7a0b\u4fe1\u606f sys.argv \u00b6 sys.argv\u662f\u4e00\u4e2a\u811a\u672c\u6267\u884c\u53c2\u6570\u5217\u8868\uff0c\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u811a\u672c\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u624d\u662f\u771f\u6b63\u7684\u53c2\u6570\u3002 # test.py import sys for index , arg in enumerate ( sys . argv ): print ( \"\u7b2c %d \u4e2a\u53c2\u6570\u662f\uff1a %s \" % ( index , arg )) #\u8fd9\u91cc\u662f\u547d\u4ee4\u884c\u7684\u8f93\u5165 \u8fd0\u884c python test . py 1 2 3 4 \uff0c\u7ed3\u679c\uff1a \u7b2c 0 \u4e2a\u53c2\u6570\u662f\uff1a test . py \u7b2c 1 \u4e2a\u53c2\u6570\u662f\uff1a 1 \u7b2c 2 \u4e2a\u53c2\u6570\u662f\uff1a 2 \u7b2c 3 \u4e2a\u53c2\u6570\u662f\uff1a 3 \u7b2c 4 \u4e2a\u53c2\u6570\u662f\uff1a 4 sys.getrefcount(object) \u00b6 \u6211\u4eec\u90fd\u77e5\u9053Python\u6709\u81ea\u52a8\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u8ba9\u6211\u4eec\u4e0d\u7528\u8d39\u529b\u53bb\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\u3002 \u90a3\u4e48Python\u600e\u4e48\u77e5\u9053\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5f53\u505a\u5783\u573e\u56de\u6536\u5462\uff1f Python\u4f7f\u7528 \u2018\u5f15\u7528\u8ba1\u6570\u2019 \u7684\u65b9\u5f0f\uff0c\u8ffd\u8e2a\u6bcf\u4e2a\u5bf9\u8c61 \u7684\u5f15\u7528\u6b21\u6570\uff0c\u6bcf\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u4e00\u6b21\u5f15\u7528\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5c31\u52a0\u4e00\uff0c\u6bcf\u5220\u9664\u4e00\u4e2a\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5c31\u51cf\u4e00\u3002\u5f53\u5f15\u7528\u4e3a0\u7684\u65f6\u5019\uff0c\u5c31\u8868\u793a\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u56de\u6536\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u817e\u51fa\u5b83\u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002 sys.getrefcount(object) \u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f15\u7528\u7684\u6b21\u6570\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u6b21\u6570\u9ed8\u8ba4\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3a\u4f60\u5728\u4f7f\u7528sys.getrefcount(object)\u65b9\u6cd5\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5f15\u7528\u4e86\u5b83\u4e00\u6b21\uff08\u8be5\u5f15\u7528\u662f\u4e34\u65f6\u6027\u7684\uff0c\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u89e3\u9664\u5f15\u7528\u3002\uff09\u3002 \u5982\u679c\u4e0d\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u8ba4\u4e3a\u5b83\u81ea\u5e26\u88ab\u52a8\u5149\u73af\uff1a\u5f15\u7528+1\u3002 a = \"json-python\" sys . getrefcount ( a ) 2 b = a sys . getrefcount ( a ) 3 c = a sys . getrefcount ( a ) 4 del c sys . getrefcount ( a ) 3 del b sys . getrefcount ( a ) 2 sys . getrefcount ( 1 ) 902 sys . getrefcount ( \"a\" ) 36 sys . getrefcount ( True ) 581 sys . getrefcount ( None ) 6918 1 \u3001 \"a\" \u3001 True \u3001 None \uff0c Python\u5185\u90e8\u73af\u5883\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u5f15\u7528\u4e86\u5b83\u4eec\u5f88\u591a\u6b21 \uff0c None\u751a\u81f3\u88ab\u4f7f\u7528\u4e866918\u6b21 sys.modules \u00b6 sys.modules \u4fdd\u5b58\u6709\u5f53\u524dPython\u73af\u5883\u4e2d\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\u8bb0\u5f55\uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u5b57\u5178\uff0c\u5f53Python\u542f\u52a8\u540e\u5c31\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u6bcf\u5f53\u5bfc\u5165\u65b0\u7684\u6a21\u5757\uff0c sys.modules \u5c06\u81ea\u52a8\u8bb0\u5f55\u8be5\u6a21\u5757\uff0c\u5f53\u7b2c\u4e8c\u6b21\u8bd5\u56fe\u518d\u6b21\u5bfc\u5165\u8be5\u6a21\u5757\u65f6\uff0cPython\u4f1a\u5148\u5230\u8fd9\u4e2a\u5b57\u5178\u4e2d\u67e5\u627e\u662f\u5426\u66fe\u7ecf\u5bfc\u5165\u8fc7\u8be5\u6a21\u5757\u3002 import sys sys . modules { 'builtins' : < module 'builtins' ( built - in ) > , 'sys' : < module 'sys' ( built - in ) > , '_frozen_importlib' : < module 'importlib._bootstrap' ( frozen ) > , '_imp' : < module '_imp' ( built - in ) > , '_warnings' : < module '_warnings' ( built - in ) > , '_thread' : ....... \u622a\u53d6\u90e8\u5206 sys . modules . keys () dict_keys ([ 'builtins' , 'sys' , '_frozen_importlib' , '_imp' , '_warnings' , '_thread' , '_weakref' , '_frozen_importlib_external' , '_io' , 'marshal' , 'nt' , 'winreg' , 'zipimport' , 'encodings' , 'codecs' , '_codecs' , 'encodings.aliases' , ... \u622a\u53d6\u90e8\u5206 sys . modules . values () dict_values ([ < module 'builtins' ( built - in ) > , < module 'sys' ( built - in ) > , < module 'importlib._bootstrap' ( frozen ) > , < module '_imp' ( built - in ) > , < module '_warnings' ( built - in ) > , < module '_thread' ( built - in ) > , < module '_weakref' module 'urllib.parse' from 'C: \\\\ Python36 \\\\ lib \\\\ urllib \\\\ parse.py' > ]) ....... \u622a\u53d6\u90e8\u5206 sys . modules [ 'sys' ] < module 'sys' ( built - in ) > sys.platform \u00b6 \u83b7\u53d6\u5f53\u524d\u6267\u884c\u73af\u5883\u7684\u5e73\u53f0\u540d\u79f0\uff0c\u4e0d\u540c\u7684\u5e73\u53f0\u8fd4\u56de\u503c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u64cd\u4f5c\u7cfb\u7edf \u8fd4\u56de\u503c Linux 'linux' Windows 'win32' Windows / Cygwin 'cygwin' Mac OS X 'darwin' \u5e26\u767e\u5206\u6bd4\u7684\u8fdb\u5ea6\u6761 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0bsys.stdout\u6307\u5411\u63a7\u5236\u53f0 import sys import time def bar ( num , total ): rate = num / total rate_num = int ( rate * 100 ) r = ' \\r [ %s%s ] %d%% ' % ( \"=\" * num , \" \" * ( 100 - num ), rate_num , ) sys . stdout . write ( r ) sys . stdout . flush () if __name__ == '__main__' : for i in range ( 0 , 101 ): time . sleep ( 0.1 ) bar ( i , 100 ) sys.exit(n) \u00b6 \u9000\u51fa\u7a0b\u5e8f\uff0c\u6b63\u5e38\u9000\u51fa\u65f6exit(0) sys.hexversion \u00b6 \u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u503c\uff0c16\u8fdb\u5236\u683c\u5f0f\u5982\uff1a0x020403F0 sys.version \u00b6 \u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u4fe1\u606f sys.maxsize \u00b6 \u6700\u5927\u7684Int\u503c 9223372036854775807 sys.maxunicode \u00b6 \u6700\u5927\u7684Unicode\u503c 1114111 sys.path \u00b6 \u8fd4\u56de\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u503c \u6807\u51c6\u6d41 \u00b6 sys.stdout \u6807\u51c6\u8f93\u51fa \u00b6 sys.stdout.write(str) \u5411\u63a7\u5236\u53f0\u5199\u53ea\u80fd\u5199\u5b57\u7b26\u4e32 sys.stdin \u6807\u51c6\u8f93\u5165 \u00b6 sys.stdin.readline().strip()' #\u83b7\u5f97\u4e00\u884c\u6570\u636e \u8bfb\u53d6\u7b2c\u4e00\u884c\u7684n n = int(sys.stdin.readline().strip()) ` line = sys . stdin . readline () . strip () # \u628a\u6bcf\u4e00\u884c\u7684\u6570\u5b57\u5206\u9694\u540e\u8f6c\u5316\u6210int\u5217\u8868 values = list ( map ( int , line . split ())) sys.stderr \u9519\u8bef\u8f93\u51fa \u00b6 sys.exc_clear() \u00b6 \u7528\u6765\u6e05\u9664\u5f53\u524d\u7ebf\u7a0b\u6240\u51fa\u73b0\u7684\u5f53\u524d\u7684\u6216\u6700\u8fd1\u7684\u9519\u8bef\u4fe1\u606f sys.exec_prefix \u00b6 \u8fd4\u56de\u5e73\u53f0\u72ec\u7acb\u7684python\u6587\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e sys.byteorder \u00b6 \u672c\u5730\u5b57\u8282\u89c4\u5219\u7684\u6307\u793a\u5668\uff0cbig-endian\u5e73\u53f0\u7684\u503c\u662f'big',little-endian\u5e73\u53f0\u7684\u503c\u662f'little' sys.copyright \u00b6 \u8bb0\u5f55python\u7248\u6743\u76f8\u5173\u7684\u4e1c\u897f sys.api_version \u00b6 \u89e3\u91ca\u5668\u7684C\u7684API\u7248\u672c sys.version_info \u00b6 Python\u7248\u672c\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a(2, 7, 6, 'final', 0)\uff0c 'final'\u8868\u793a\u6700\u7ec8,\u4e5f\u6709'candidate'\u8868\u793a\u5019\u9009\uff0c\u8868\u793a\u7248\u672c\u7ea7\u522b\uff0c\u662f\u5426\u6709\u540e\u7ee7\u7684\u53d1\u884c sys.displayhook(value) \u00b6 \u5982\u679cvalue\u975e\u7a7a\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u628a\u4ed6\u8f93\u51fa\u5230sys.stdout\uff0c\u5e76\u4e14\u5c06\u4ed6\u4fdd\u5b58\u8fdbbuiltin..\u6307\u5728python\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u91cc\uff0c''\u4ee3\u8868\u4e0a\u6b21\u4f60\u8f93\u5165\u5f97\u5230\u7684\u7ed3\u679c\uff0chook\u662f\u94a9\u5b50\u7684\u610f\u601d\uff0c\u5c06\u4e0a\u6b21\u7684\u7ed3\u679c\u94a9\u8fc7\u6765 sys.getdefaultencoding() \u00b6 \u8fd4\u56de\u5f53\u524d\u4f60\u6240\u7528\u7684\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u683c\u5f0f sys.getfilesystemencoding() \u00b6 \u8fd4\u56de\u5c06Unicode\u6587\u4ef6\u540d\u8f6c\u6362\u6210\u7cfb\u7edf\u6587\u4ef6\u540d\u7684\u7f16\u7801\u7684\u540d\u5b57 sys.setdefaultencoding(name) \u00b6 \u7528\u6765\u8bbe\u7f6e\u5f53\u524d\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u5982\u679cname\u548c\u4efb\u4f55\u4e00\u4e2a\u53ef\u7528\u7684\u7f16\u7801\u90fd\u4e0d\u5339\u914d\uff0c\u629b\u51faLookupError\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u88absite\u6a21\u5757\u7684sitecustomize\u4f7f\u7528\uff0c\u4e00\u65e6\u522bsite\u6a21\u5757\u4f7f\u7528\u4e86\uff0c\u4ed6\u4f1a\u4ecesys\u6a21\u5757\u79fb\u9664 sys.builtin_module_names \u00b6 Python\u89e3\u91ca\u5668\u5bfc\u5165\u7684\u6a21\u5757\u5217\u8868 sys.executable \u00b6 Python\u89e3\u91ca\u7a0b\u5e8f\u8def\u5f84 sys.getwindowsversion() \u00b6 \u83b7\u53d6Windows\u7684\u7248\u672c\uff0cWindows\u7cfb\u7edf\u4e2d\u6709\u6548 sys.stdin.readline() \u00b6 \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u4e00\u884c\uff0c\u4f1a\u8bfb\u53d6\u672b\u5c3e\u7684\u6362\u884c\u7b26,\u56e0\u6b64\u4f7f\u7528strip()\u51fd\u6570\u53bb\u6389 sys.stdout.write() \u00b6 \u5411\u6807\u51c6\u8f93\u51fa\u5199\u5165\u5185\u5bb9\uff0c\u4f8b\u5982\uff1asys.stdout.write(\"hello world\")\uff0c\u5c4f\u5e55\u8f93\u51fa hello world","title":"048 sys\u6a21\u5757"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysargv","text":"sys.argv\u662f\u4e00\u4e2a\u811a\u672c\u6267\u884c\u53c2\u6570\u5217\u8868\uff0c\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u811a\u672c\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u624d\u662f\u771f\u6b63\u7684\u53c2\u6570\u3002 # test.py import sys for index , arg in enumerate ( sys . argv ): print ( \"\u7b2c %d \u4e2a\u53c2\u6570\u662f\uff1a %s \" % ( index , arg )) #\u8fd9\u91cc\u662f\u547d\u4ee4\u884c\u7684\u8f93\u5165 \u8fd0\u884c python test . py 1 2 3 4 \uff0c\u7ed3\u679c\uff1a \u7b2c 0 \u4e2a\u53c2\u6570\u662f\uff1a test . py \u7b2c 1 \u4e2a\u53c2\u6570\u662f\uff1a 1 \u7b2c 2 \u4e2a\u53c2\u6570\u662f\uff1a 2 \u7b2c 3 \u4e2a\u53c2\u6570\u662f\uff1a 3 \u7b2c 4 \u4e2a\u53c2\u6570\u662f\uff1a 4","title":"sys.argv"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysgetrefcountobject","text":"\u6211\u4eec\u90fd\u77e5\u9053Python\u6709\u81ea\u52a8\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u8ba9\u6211\u4eec\u4e0d\u7528\u8d39\u529b\u53bb\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\u3002 \u90a3\u4e48Python\u600e\u4e48\u77e5\u9053\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5f53\u505a\u5783\u573e\u56de\u6536\u5462\uff1f Python\u4f7f\u7528 \u2018\u5f15\u7528\u8ba1\u6570\u2019 \u7684\u65b9\u5f0f\uff0c\u8ffd\u8e2a\u6bcf\u4e2a\u5bf9\u8c61 \u7684\u5f15\u7528\u6b21\u6570\uff0c\u6bcf\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u4e00\u6b21\u5f15\u7528\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5c31\u52a0\u4e00\uff0c\u6bcf\u5220\u9664\u4e00\u4e2a\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5c31\u51cf\u4e00\u3002\u5f53\u5f15\u7528\u4e3a0\u7684\u65f6\u5019\uff0c\u5c31\u8868\u793a\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u56de\u6536\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u817e\u51fa\u5b83\u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002 sys.getrefcount(object) \u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f15\u7528\u7684\u6b21\u6570\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u6b21\u6570\u9ed8\u8ba4\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3a\u4f60\u5728\u4f7f\u7528sys.getrefcount(object)\u65b9\u6cd5\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5f15\u7528\u4e86\u5b83\u4e00\u6b21\uff08\u8be5\u5f15\u7528\u662f\u4e34\u65f6\u6027\u7684\uff0c\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u89e3\u9664\u5f15\u7528\u3002\uff09\u3002 \u5982\u679c\u4e0d\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u8ba4\u4e3a\u5b83\u81ea\u5e26\u88ab\u52a8\u5149\u73af\uff1a\u5f15\u7528+1\u3002 a = \"json-python\" sys . getrefcount ( a ) 2 b = a sys . getrefcount ( a ) 3 c = a sys . getrefcount ( a ) 4 del c sys . getrefcount ( a ) 3 del b sys . getrefcount ( a ) 2 sys . getrefcount ( 1 ) 902 sys . getrefcount ( \"a\" ) 36 sys . getrefcount ( True ) 581 sys . getrefcount ( None ) 6918 1 \u3001 \"a\" \u3001 True \u3001 None \uff0c Python\u5185\u90e8\u73af\u5883\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u5f15\u7528\u4e86\u5b83\u4eec\u5f88\u591a\u6b21 \uff0c None\u751a\u81f3\u88ab\u4f7f\u7528\u4e866918\u6b21","title":"sys.getrefcount(object)"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysmodules","text":"sys.modules \u4fdd\u5b58\u6709\u5f53\u524dPython\u73af\u5883\u4e2d\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\u8bb0\u5f55\uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u5b57\u5178\uff0c\u5f53Python\u542f\u52a8\u540e\u5c31\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u6bcf\u5f53\u5bfc\u5165\u65b0\u7684\u6a21\u5757\uff0c sys.modules \u5c06\u81ea\u52a8\u8bb0\u5f55\u8be5\u6a21\u5757\uff0c\u5f53\u7b2c\u4e8c\u6b21\u8bd5\u56fe\u518d\u6b21\u5bfc\u5165\u8be5\u6a21\u5757\u65f6\uff0cPython\u4f1a\u5148\u5230\u8fd9\u4e2a\u5b57\u5178\u4e2d\u67e5\u627e\u662f\u5426\u66fe\u7ecf\u5bfc\u5165\u8fc7\u8be5\u6a21\u5757\u3002 import sys sys . modules { 'builtins' : < module 'builtins' ( built - in ) > , 'sys' : < module 'sys' ( built - in ) > , '_frozen_importlib' : < module 'importlib._bootstrap' ( frozen ) > , '_imp' : < module '_imp' ( built - in ) > , '_warnings' : < module '_warnings' ( built - in ) > , '_thread' : ....... \u622a\u53d6\u90e8\u5206 sys . modules . keys () dict_keys ([ 'builtins' , 'sys' , '_frozen_importlib' , '_imp' , '_warnings' , '_thread' , '_weakref' , '_frozen_importlib_external' , '_io' , 'marshal' , 'nt' , 'winreg' , 'zipimport' , 'encodings' , 'codecs' , '_codecs' , 'encodings.aliases' , ... \u622a\u53d6\u90e8\u5206 sys . modules . values () dict_values ([ < module 'builtins' ( built - in ) > , < module 'sys' ( built - in ) > , < module 'importlib._bootstrap' ( frozen ) > , < module '_imp' ( built - in ) > , < module '_warnings' ( built - in ) > , < module '_thread' ( built - in ) > , < module '_weakref' module 'urllib.parse' from 'C: \\\\ Python36 \\\\ lib \\\\ urllib \\\\ parse.py' > ]) ....... \u622a\u53d6\u90e8\u5206 sys . modules [ 'sys' ] < module 'sys' ( built - in ) >","title":"sys.modules"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysplatform","text":"\u83b7\u53d6\u5f53\u524d\u6267\u884c\u73af\u5883\u7684\u5e73\u53f0\u540d\u79f0\uff0c\u4e0d\u540c\u7684\u5e73\u53f0\u8fd4\u56de\u503c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u64cd\u4f5c\u7cfb\u7edf \u8fd4\u56de\u503c Linux 'linux' Windows 'win32' Windows / Cygwin 'cygwin' Mac OS X 'darwin'","title":"sys.platform"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0bsys.stdout\u6307\u5411\u63a7\u5236\u53f0 import sys import time def bar ( num , total ): rate = num / total rate_num = int ( rate * 100 ) r = ' \\r [ %s%s ] %d%% ' % ( \"=\" * num , \" \" * ( 100 - num ), rate_num , ) sys . stdout . write ( r ) sys . stdout . flush () if __name__ == '__main__' : for i in range ( 0 , 101 ): time . sleep ( 0.1 ) bar ( i , 100 )","title":"\u5e26\u767e\u5206\u6bd4\u7684\u8fdb\u5ea6\u6761"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysexitn","text":"\u9000\u51fa\u7a0b\u5e8f\uff0c\u6b63\u5e38\u9000\u51fa\u65f6exit(0)","title":"sys.exit(n)"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#syshexversion","text":"\u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u503c\uff0c16\u8fdb\u5236\u683c\u5f0f\u5982\uff1a0x020403F0","title":"sys.hexversion"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysversion","text":"\u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u4fe1\u606f","title":"sys.version"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysmaxsize","text":"\u6700\u5927\u7684Int\u503c 9223372036854775807","title":"sys.maxsize"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysmaxunicode","text":"\u6700\u5927\u7684Unicode\u503c 1114111","title":"sys.maxunicode"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#syspath","text":"\u8fd4\u56de\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u503c","title":"sys.path"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#_2","text":"","title":"\u6807\u51c6\u6d41"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysstdout","text":"sys.stdout.write(str) \u5411\u63a7\u5236\u53f0\u5199\u53ea\u80fd\u5199\u5b57\u7b26\u4e32","title":"sys.stdout \u6807\u51c6\u8f93\u51fa"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysstdin","text":"sys.stdin.readline().strip()' #\u83b7\u5f97\u4e00\u884c\u6570\u636e \u8bfb\u53d6\u7b2c\u4e00\u884c\u7684n n = int(sys.stdin.readline().strip()) ` line = sys . stdin . readline () . strip () # \u628a\u6bcf\u4e00\u884c\u7684\u6570\u5b57\u5206\u9694\u540e\u8f6c\u5316\u6210int\u5217\u8868 values = list ( map ( int , line . split ()))","title":"sys.stdin \u6807\u51c6\u8f93\u5165"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysstderr","text":"","title":"sys.stderr \u9519\u8bef\u8f93\u51fa"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysexc_clear","text":"\u7528\u6765\u6e05\u9664\u5f53\u524d\u7ebf\u7a0b\u6240\u51fa\u73b0\u7684\u5f53\u524d\u7684\u6216\u6700\u8fd1\u7684\u9519\u8bef\u4fe1\u606f","title":"sys.exc_clear()"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysexec_prefix","text":"\u8fd4\u56de\u5e73\u53f0\u72ec\u7acb\u7684python\u6587\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e","title":"sys.exec_prefix"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysbyteorder","text":"\u672c\u5730\u5b57\u8282\u89c4\u5219\u7684\u6307\u793a\u5668\uff0cbig-endian\u5e73\u53f0\u7684\u503c\u662f'big',little-endian\u5e73\u53f0\u7684\u503c\u662f'little'","title":"sys.byteorder"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#syscopyright","text":"\u8bb0\u5f55python\u7248\u6743\u76f8\u5173\u7684\u4e1c\u897f","title":"sys.copyright"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysapi_version","text":"\u89e3\u91ca\u5668\u7684C\u7684API\u7248\u672c","title":"sys.api_version"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysversion_info","text":"Python\u7248\u672c\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a(2, 7, 6, 'final', 0)\uff0c 'final'\u8868\u793a\u6700\u7ec8,\u4e5f\u6709'candidate'\u8868\u793a\u5019\u9009\uff0c\u8868\u793a\u7248\u672c\u7ea7\u522b\uff0c\u662f\u5426\u6709\u540e\u7ee7\u7684\u53d1\u884c","title":"sys.version_info"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysdisplayhookvalue","text":"\u5982\u679cvalue\u975e\u7a7a\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u628a\u4ed6\u8f93\u51fa\u5230sys.stdout\uff0c\u5e76\u4e14\u5c06\u4ed6\u4fdd\u5b58\u8fdbbuiltin..\u6307\u5728python\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u91cc\uff0c''\u4ee3\u8868\u4e0a\u6b21\u4f60\u8f93\u5165\u5f97\u5230\u7684\u7ed3\u679c\uff0chook\u662f\u94a9\u5b50\u7684\u610f\u601d\uff0c\u5c06\u4e0a\u6b21\u7684\u7ed3\u679c\u94a9\u8fc7\u6765","title":"sys.displayhook(value)"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysgetdefaultencoding","text":"\u8fd4\u56de\u5f53\u524d\u4f60\u6240\u7528\u7684\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u683c\u5f0f","title":"sys.getdefaultencoding()"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysgetfilesystemencoding","text":"\u8fd4\u56de\u5c06Unicode\u6587\u4ef6\u540d\u8f6c\u6362\u6210\u7cfb\u7edf\u6587\u4ef6\u540d\u7684\u7f16\u7801\u7684\u540d\u5b57","title":"sys.getfilesystemencoding()"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#syssetdefaultencodingname","text":"\u7528\u6765\u8bbe\u7f6e\u5f53\u524d\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u5982\u679cname\u548c\u4efb\u4f55\u4e00\u4e2a\u53ef\u7528\u7684\u7f16\u7801\u90fd\u4e0d\u5339\u914d\uff0c\u629b\u51faLookupError\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u88absite\u6a21\u5757\u7684sitecustomize\u4f7f\u7528\uff0c\u4e00\u65e6\u522bsite\u6a21\u5757\u4f7f\u7528\u4e86\uff0c\u4ed6\u4f1a\u4ecesys\u6a21\u5757\u79fb\u9664","title":"sys.setdefaultencoding(name)"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysbuiltin_module_names","text":"Python\u89e3\u91ca\u5668\u5bfc\u5165\u7684\u6a21\u5757\u5217\u8868","title":"sys.builtin_module_names"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysexecutable","text":"Python\u89e3\u91ca\u7a0b\u5e8f\u8def\u5f84","title":"sys.executable"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysgetwindowsversion","text":"\u83b7\u53d6Windows\u7684\u7248\u672c\uff0cWindows\u7cfb\u7edf\u4e2d\u6709\u6548","title":"sys.getwindowsversion()"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysstdinreadline","text":"\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u4e00\u884c\uff0c\u4f1a\u8bfb\u53d6\u672b\u5c3e\u7684\u6362\u884c\u7b26,\u56e0\u6b64\u4f7f\u7528strip()\u51fd\u6570\u53bb\u6389","title":"sys.stdin.readline()"},{"location":"python\u5b66\u4e60/048-sys\u6a21\u5757/#sysstdoutwrite","text":"\u5411\u6807\u51c6\u8f93\u51fa\u5199\u5165\u5185\u5bb9\uff0c\u4f8b\u5982\uff1asys.stdout.write(\"hello world\")\uff0c\u5c4f\u5e55\u8f93\u51fa hello world","title":"sys.stdout.write()"},{"location":"python\u5b66\u4e60/049-map\u51fd\u6570/","text":"Python\uff1amap\u51fd\u6570\u7528\u6cd5\u8be6\u89e3 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5c06\u4e00\u4e2alist\u4e2d\u6240\u6709\u5143\u7d20\u5e73\u65b9\uff0c\u5e38\u89c4\u7684\u505a\u6cd5\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u867d\u7136\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f46\u5e76\u6ca1\u6709\u7ed9\u4eba\u4e00\u76ee\u4e86\u7136\u7684\u611f\u89c9\u3002\u82e5\u6362\u6210map\u6765\u5b9e\u73b0\uff0c\u5219\u4f1a\u597d\u5f88\u591a\u3002 def f ( x ): return x * x def test (): l = [] for i in [ 1 , 2 , 3 , 4 , 5 , 6 ]: l . append ( f ( i )) return l if __name__ == \"__main__\" : l = test () print ( l ) \u4f7f\u7528map\u51fd\u6570 def f ( x ): return x * x def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( f , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () 1\u3001map\u51fd\u6570\u4ecb\u7ecd\u53ca\u5176\u7b80\u5355\u4f7f\u7528 \u00b6 \u4e0a\u8ff0\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6f14\u793a\u7684map\u51fd\u6570\u7684\u7528\u6cd5\u53ca\u5176\u4f18\u52bf\uff0c\u4e0b\u9762\u5c06\u8be6\u7ec6\u4ecb\u7ecdmap\u51fd\u6570\u7684\u7528\u6cd5\uff1a map() \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\uff0c\u4e00\u4e2a\u662f Iterable \u8fed\u4ee3\u5668\uff0cmap\u5c06\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5230\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684 Iterable \u8fd4\u56de\u3002 \u5176\u8bed\u6cd5\u683c\u5f0f\u4e3a\uff1a map(function\uff0citerable...) function---\u51fd\u6570\u540d iterable---\u4e00\u4e2a\u6216\u591a\u4e2a\u5e8f\u5217 map\u4f5c\u4e3a\u9ad8\u9636\u51fd\u6570\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u628a\u8fd0\u7b97\u89c4\u5219\u62bd\u8c61\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b97\u4efb\u610f\u590d\u6742\u7684\u51fd\u6570\uff0c\u518d\u6bd4\u5982\uff0c\u628a\u4e00\u4e2alist\u7684\u6240\u6709\u6570\u636e\u8f6c\u4e3astring\u7c7b\u578b\uff1a def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( str , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u6267\u884c\u7ed3\u679c [ '1' , '2' , '3' , '4' , '5' , '6' ] \u518d\u4e3e\u4e00\u4e2a\u5c0f\u4f8b\u5b50\uff0c\u5bf9list\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u5f00\u65b9\uff0c\u4e00\u6b65\u5230\u4f4d\uff1a import math def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( math . sqrt , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \uff01\u6ce8\u610f\uff1a\u5728\u4f7f\u7528math\u81ea\u5e26\u51fd\u6570\u65f6\uff0c\u53ea\u9700\u8981\u51fd\u6570\u540d\u5373\u53ef 2\u3001map\u51fd\u6570\u4e0elambda\u51fd\u6570\u7ed3\u5408\u4f7f\u7528\uff0c\u4e0b\u9762\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u8fbe\u5230\u5bf9list\u4e2d\u7684\u6570\u4e8c\u6b21\u65b9\u7684\u76ee\u7684 def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x : x ** 2 , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () map\u51fd\u6570\u4e0elambda\u51fd\u6570\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\u76f8\u52a0\uff1a \u00b6 def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] b = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x , y : x + y , a , b ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u8fd8\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\u591a\u4e2a\u503c\uff1a import math def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] b = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x , y :( x + y , x * y ), a , b ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u6267\u884c [( 2 , 1 ), ( 4 , 4 ), ( 6 , 9 ), ( 8 , 16 ), ( 10 , 25 ), ( 12 , 36 )]","title":"049 map\u51fd\u6570"},{"location":"python\u5b66\u4e60/049-map\u51fd\u6570/#1map","text":"\u4e0a\u8ff0\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6f14\u793a\u7684map\u51fd\u6570\u7684\u7528\u6cd5\u53ca\u5176\u4f18\u52bf\uff0c\u4e0b\u9762\u5c06\u8be6\u7ec6\u4ecb\u7ecdmap\u51fd\u6570\u7684\u7528\u6cd5\uff1a map() \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\uff0c\u4e00\u4e2a\u662f Iterable \u8fed\u4ee3\u5668\uff0cmap\u5c06\u4f20\u5165\u7684\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5230\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u628a\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684 Iterable \u8fd4\u56de\u3002 \u5176\u8bed\u6cd5\u683c\u5f0f\u4e3a\uff1a map(function\uff0citerable...) function---\u51fd\u6570\u540d iterable---\u4e00\u4e2a\u6216\u591a\u4e2a\u5e8f\u5217 map\u4f5c\u4e3a\u9ad8\u9636\u51fd\u6570\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u628a\u8fd0\u7b97\u89c4\u5219\u62bd\u8c61\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b97\u4efb\u610f\u590d\u6742\u7684\u51fd\u6570\uff0c\u518d\u6bd4\u5982\uff0c\u628a\u4e00\u4e2alist\u7684\u6240\u6709\u6570\u636e\u8f6c\u4e3astring\u7c7b\u578b\uff1a def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( str , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u6267\u884c\u7ed3\u679c [ '1' , '2' , '3' , '4' , '5' , '6' ] \u518d\u4e3e\u4e00\u4e2a\u5c0f\u4f8b\u5b50\uff0c\u5bf9list\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u5f00\u65b9\uff0c\u4e00\u6b65\u5230\u4f4d\uff1a import math def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( math . sqrt , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \uff01\u6ce8\u610f\uff1a\u5728\u4f7f\u7528math\u81ea\u5e26\u51fd\u6570\u65f6\uff0c\u53ea\u9700\u8981\u51fd\u6570\u540d\u5373\u53ef 2\u3001map\u51fd\u6570\u4e0elambda\u51fd\u6570\u7ed3\u5408\u4f7f\u7528\uff0c\u4e0b\u9762\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u8fbe\u5230\u5bf9list\u4e2d\u7684\u6570\u4e8c\u6b21\u65b9\u7684\u76ee\u7684 def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x : x ** 2 , a ) print ( list ( r )) if __name__ == \"__main__\" : maptest ()","title":"1\u3001map\u51fd\u6570\u4ecb\u7ecd\u53ca\u5176\u7b80\u5355\u4f7f\u7528"},{"location":"python\u5b66\u4e60/049-map\u51fd\u6570/#maplambda","text":"def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] b = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x , y : x + y , a , b ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u8fd8\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\u591a\u4e2a\u503c\uff1a import math def maptest (): a = [ 1 , 2 , 3 , 4 , 5 , 6 ] b = [ 1 , 2 , 3 , 4 , 5 , 6 ] r = map ( lambda x , y :( x + y , x * y ), a , b ) print ( list ( r )) if __name__ == \"__main__\" : maptest () \u6267\u884c [( 2 , 1 ), ( 4 , 4 ), ( 6 , 9 ), ( 8 , 16 ), ( 10 , 25 ), ( 12 , 36 )]","title":"map\u51fd\u6570\u4e0elambda\u51fd\u6570\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\u76f8\u52a0\uff1a"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/","text":"zip\u51fd\u6570\u63a5\u53d7\u4efb\u610f\u591a\u4e2a\uff08\u5305\u62ec0\u4e2a\u548c1\u4e2a\uff09\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2atuple\u5217\u8868\u3002\u5177\u4f53\u610f\u601d\u4e0d\u597d\u7528\u6587\u5b57\u6765\u8868\u8ff0\uff0c\u76f4\u63a5\u770b\u793a\u4f8b\uff1a 1.\u793a\u4f8b1\uff1a \u00b6 x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 ] z = [ 7 , 8 , 9 ] xyz = zip ( x , y , z ) print ( list ( xyz )) \u6267\u884c\u7ed3\u679c [( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u7684\u57fa\u672c\u8fd0\u4f5c\u65b9\u5f0f\u3002 2.\u793a\u4f8b2 \u00b6 x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 , 7 ] xy = zip ( x , y ) print ( list ( xy )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 , 4 ), ( 2 , 5 ), ( 3 , 6 )] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u7684\u957f\u5ea6\u5904\u7406\u65b9\u5f0f\u3002 3.\u793a\u4f8b3\uff1a \u00b6 x = [ 1 , 2 , 3 ] x = zip ( x ) print ( list ( x )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 ,), ( 2 ,), ( 3 ,)] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u5728\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\u8fd0\u4f5c\u7684\u65b9\u5f0f\u3002 4.\u793a\u4f8b4\uff1a \u00b6 x = zip () print ( list ( x )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u5728\u6ca1\u6709\u53c2\u6570\u65f6\u8fd0\u4f5c\u7684\u65b9\u5f0f\u3002 5.\u793a\u4f8b5\uff1a \u00b6 x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 ] z = [ 7 , 8 , 9 ] xyz = zip ( x , y , z ) u = zip ( * xyz ) print ( list ( u )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a\u5c31\u662f\u89e3\u538b\u7f29\u7684\u8fc7\u7a0b [( 1 , 2 , 3 ), ( 4 , 5 , 6 ), ( 7 , 8 , 9 )] \u4e00\u822c\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a unzip\u7684\u8fc7\u7a0b \uff0c\u5b83\u7684\u8fd0\u884c\u673a\u5236\u662f\u8fd9\u6837\u7684\uff1a \u5728\u8fd0\u884c zip ( * xyz ) \u4e4b\u524d\uff0c xyz\u7684\u503c\u662f \uff1a [( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )] \u90a3\u4e48\uff0c zip ( * xyz ) \u7b49\u4ef7\u4e8e zip (( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )) \u6240\u4ee5\uff0c\u8fd0\u884c\u7ed3\u679c\u662f\uff1a [( 1 , 2 , 3 ), ( 4 , 5 , 6 ), ( 7 , 8 , 9 )] \u6ce8\uff1a\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u4f7f\u7528*list/tuple\u7684\u65b9\u5f0f\u8868\u793a\u5c06list/tuple\u5206\u5f00\uff0c\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u7ed9\u5bf9\u5e94\u51fd\u6570\uff08\u524d\u63d0\u662f\u5bf9\u5e94\u51fd\u6570\u652f\u6301\u4e0d\u5b9a\u4e2a\u6570\u7684\u4f4d\u7f6e\u53c2\u6570\uff09 6.\u793a\u4f8b6\uff1a \u00b6 x = [ 1 , 2 , 3 ] r = zip ( * [ x ] * 3 ) print ( list ( r )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 , 1 , 1 ), ( 2 , 2 , 2 ), ( 3 , 3 , 3 )] \u5b83\u7684\u8fd0\u884c\u673a\u5236\u662f\u8fd9\u6837\u7684\uff1a [ x ] \u751f\u6210\u4e00\u4e2a\u5217\u8868\u7684\u5217\u8868\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 x [ x ] * 3 \u751f\u6210\u4e00\u4e2a\u5217\u8868\u7684\u5217\u8868\uff0c\u5b83\u6709 3 \u4e2a\u5143\u7d20\uff0c [ x , x , x ] zip ( * [ x ] * 3 ) \u7684\u610f\u601d\u5c31\u660e\u786e\u4e86\uff0c zip ( x , x , x )","title":"050 Python\u7684zip\u51fd\u6570"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#11","text":"x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 ] z = [ 7 , 8 , 9 ] xyz = zip ( x , y , z ) print ( list ( xyz )) \u6267\u884c\u7ed3\u679c [( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u7684\u57fa\u672c\u8fd0\u4f5c\u65b9\u5f0f\u3002","title":"1.\u793a\u4f8b1\uff1a"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#22","text":"x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 , 7 ] xy = zip ( x , y ) print ( list ( xy )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 , 4 ), ( 2 , 5 ), ( 3 , 6 )] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u7684\u957f\u5ea6\u5904\u7406\u65b9\u5f0f\u3002","title":"2.\u793a\u4f8b2"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#33","text":"x = [ 1 , 2 , 3 ] x = zip ( x ) print ( list ( x )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 ,), ( 2 ,), ( 3 ,)] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u5728\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\u8fd0\u4f5c\u7684\u65b9\u5f0f\u3002","title":"3.\u793a\u4f8b3\uff1a"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#44","text":"x = zip () print ( list ( x )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [] \u4ece\u8fd9\u4e2a\u7ed3\u679c\u53ef\u4ee5\u770b\u51fazip\u51fd\u6570\u5728\u6ca1\u6709\u53c2\u6570\u65f6\u8fd0\u4f5c\u7684\u65b9\u5f0f\u3002","title":"4.\u793a\u4f8b4\uff1a"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#55","text":"x = [ 1 , 2 , 3 ] y = [ 4 , 5 , 6 ] z = [ 7 , 8 , 9 ] xyz = zip ( x , y , z ) u = zip ( * xyz ) print ( list ( u )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a\u5c31\u662f\u89e3\u538b\u7f29\u7684\u8fc7\u7a0b [( 1 , 2 , 3 ), ( 4 , 5 , 6 ), ( 7 , 8 , 9 )] \u4e00\u822c\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a unzip\u7684\u8fc7\u7a0b \uff0c\u5b83\u7684\u8fd0\u884c\u673a\u5236\u662f\u8fd9\u6837\u7684\uff1a \u5728\u8fd0\u884c zip ( * xyz ) \u4e4b\u524d\uff0c xyz\u7684\u503c\u662f \uff1a [( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )] \u90a3\u4e48\uff0c zip ( * xyz ) \u7b49\u4ef7\u4e8e zip (( 1 , 4 , 7 ), ( 2 , 5 , 8 ), ( 3 , 6 , 9 )) \u6240\u4ee5\uff0c\u8fd0\u884c\u7ed3\u679c\u662f\uff1a [( 1 , 2 , 3 ), ( 4 , 5 , 6 ), ( 7 , 8 , 9 )] \u6ce8\uff1a\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u4f7f\u7528*list/tuple\u7684\u65b9\u5f0f\u8868\u793a\u5c06list/tuple\u5206\u5f00\uff0c\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u7ed9\u5bf9\u5e94\u51fd\u6570\uff08\u524d\u63d0\u662f\u5bf9\u5e94\u51fd\u6570\u652f\u6301\u4e0d\u5b9a\u4e2a\u6570\u7684\u4f4d\u7f6e\u53c2\u6570\uff09","title":"5.\u793a\u4f8b5\uff1a"},{"location":"python\u5b66\u4e60/050-Python\u7684zip\u51fd\u6570/#66","text":"x = [ 1 , 2 , 3 ] r = zip ( * [ x ] * 3 ) print ( list ( r )) \u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff1a [( 1 , 1 , 1 ), ( 2 , 2 , 2 ), ( 3 , 3 , 3 )] \u5b83\u7684\u8fd0\u884c\u673a\u5236\u662f\u8fd9\u6837\u7684\uff1a [ x ] \u751f\u6210\u4e00\u4e2a\u5217\u8868\u7684\u5217\u8868\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 x [ x ] * 3 \u751f\u6210\u4e00\u4e2a\u5217\u8868\u7684\u5217\u8868\uff0c\u5b83\u6709 3 \u4e2a\u5143\u7d20\uff0c [ x , x , x ] zip ( * [ x ] * 3 ) \u7684\u610f\u601d\u5c31\u660e\u786e\u4e86\uff0c zip ( x , x , x )","title":"6.\u793a\u4f8b6\uff1a"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/","text":"\u5bfc\u8bfb\uff1a\u672c\u6587\u7528\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u4ecb\u7ecd\u4e86 NumPy \u7684\u529f\u80fd\u548c\u4f7f\u7528\u793a\u4f8b\u3002 NumPy \u8f6f\u4ef6\u5305\u662f Python \u751f\u6001\u7cfb\u7edf\u4e2d\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u548c\u79d1\u5b66\u8ba1\u7b97\u7684\u4e3b\u529b\u519b\u3002\u5b83\u6781\u5927\u5730\u7b80\u5316\u4e86\u5411\u91cf\u548c\u77e9\u9635\u7684\u64cd\u4f5c\u5904\u7406\u3002 Python \u7684\u4e00\u4e9b\u4e3b\u8981\u8f6f\u4ef6\u5305\uff08\u5982 scikit-learn\u3001SciPy\u3001pandas \u548c tensorflow\uff09\u90fd\u4ee5 NumPy \u4f5c\u4e3a\u5176\u67b6\u6784\u7684\u57fa\u7840\u90e8\u5206\u3002\u9664\u4e86\u80fd\u5bf9\u6570\u503c\u6570\u636e\u8fdb\u884c\u5207\u7247\uff08slice\uff09\u548c\u5207\u5757\uff08dice\uff09\u4e4b\u5916\uff0c\u4f7f\u7528 NumPy \u8fd8\u80fd\u4e3a\u5904\u7406\u548c\u8c03\u8bd5\u4e0a\u8ff0\u5e93\u4e2d\u7684\u9ad8\u7ea7\u5b9e\u4f8b\u5e26\u6765\u6781\u5927\u4fbf\u5229\u3002 \u672c\u6587\u5c06\u4ecb\u7ecd\u4f7f\u7528 NumPy \u7684\u4e00\u4e9b\u4e3b\u8981\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5728\u5c06\u6570\u636e\u9001\u5165\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e4b\u524d\uff0c\u5b83\u5982\u4f55\u8868\u793a\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u8868\u683c\u3001\u56fe\u50cf\u3001\u6587\u672c\u7b49\uff09\u3002 import numpy as np 01 \u521b\u5efa\u6570\u7ec4 \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a python \u5217\u8868\u5e76\u4f7f\u7528 np.array() \u6765\u521b\u5efa NumPy \u6570\u7ec4\uff08\u6781\u5927\u53ef\u80fd\u662f\u591a\u7ef4\u6570\u7ec4\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0cpython \u521b\u5efa\u7684\u6570\u7ec4\u5982\u4e0b\u56fe\u53f3\u6240\u793a\uff1a \u901a\u5e38\u6211\u4eec\u5e0c\u671b NumPy \u80fd\u521d\u59cb\u5316\u6570\u7ec4\u7684\u503c\uff0c\u4e3a\u6b64 NumPy \u63d0\u4f9b\u4e86 ones()\u3001zeros() \u548c random.random() \u7b49\u65b9\u6cd5\u3002\u6211\u4eec\u53ea\u9700\u4f20\u9012\u5e0c\u671b NumPy \u751f\u6210\u7684\u5143\u7d20\u6570\u91cf\u5373\u53ef\uff1a \u4e00\u65e6\u521b\u5efa\u4e86\u6570\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c3d\u60c5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u3002 02 \u6570\u7ec4\u8fd0\u7b97 \u00b6 \u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a NumPy \u6570\u7ec4\u6765\u5c55\u793a\u6570\u7ec4\u8fd0\u7b97\u529f\u80fd\u3002\u6211\u4eec\u5c06\u4e0b\u56fe\u4e24\u4e2a\u6570\u7ec4\u79f0\u4e3a data \u548c ones\uff1a \u5c06\u5b83\u4eec\u6309\u4f4d\u7f6e\u76f8\u52a0\uff08\u5373\u6bcf\u884c\u5bf9\u5e94\u76f8\u52a0\uff09\uff0c\u76f4\u63a5\u8f93\u5165 data + ones \u5373\u53ef\uff1a \u5f53\u6211\u5f00\u59cb\u5b66\u4e60\u8fd9\u4e9b\u5de5\u5177\u65f6\uff0c\u6211\u53d1\u73b0\u8fd9\u6837\u7684\u62bd\u8c61\u8ba9\u6211\u4e0d\u5fc5\u5728\u5faa\u73af\u4e2d\u7f16\u5199\u7c7b\u4f3c\u8ba1\u7b97\u3002\u6b64\u7c7b\u62bd\u8c61\u53ef\u4ee5\u4f7f\u6211\u5728\u66f4\u9ad8\u5c42\u9762\u4e0a\u601d\u8003\u95ee\u9898\u3002 \u9664\u4e86\u300c\u52a0\u300d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6570\u7ec4\u548c\u5355\u4e2a\u6570\u5b57\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\uff08\u5373\u5411\u91cf\u548c\u6807\u91cf\u4e4b\u95f4\u7684\u8fd0\u7b97\uff09\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u7684\u6570\u7ec4\u8868\u793a\u4ee5\u82f1\u91cc\u4e3a\u5355\u4f4d\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u5355\u4f4d\u8f6c\u6362\u4e3a\u5343\u7c73\u3002\u53ea\u9700\u8f93\u5165 data * 1.6 \u5373\u53ef\uff1a \u770b\u5230 NumPy \u662f\u5982\u4f55\u7406\u89e3\u8fd9\u4e2a\u8fd0\u7b97\u7684\u4e86\u5417\uff1f\u8fd9\u4e2a\u6982\u5ff5\u53eb\u505a\u5e7f\u64ad\u673a\u5236\uff08broadcasting\uff09\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002 03 \u7d22\u5f15 \u00b6 \u6211\u4eec\u53ef\u4ee5\u6211\u4eec\u50cf\u5bf9 python \u5217\u8868\u8fdb\u884c\u5207\u7247\u4e00\u6837\uff0c\u5bf9 NumPy \u6570\u7ec4\u8fdb\u884c\u4efb\u610f\u7684\u7d22\u5f15\u548c\u5207\u7247\uff1a 04 \u805a\u5408 \u00b6 NumPy \u8fd8\u63d0\u4f9b\u805a\u5408\u529f\u80fd\uff1a \u9664\u4e86 min\u3001max \u548c sum \u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 mean \u5f97\u5230\u5e73\u5747\u503c\uff0c\u4f7f\u7528 prod \u5f97\u5230\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u4f7f\u7528 std \u5f97\u5230\u6807\u51c6\u5dee\u7b49\u7b49\u3002 05 \u66f4\u591a\u7ef4\u5ea6 \u00b6 \u4e0a\u8ff0\u7684\u4f8b\u5b50\u90fd\u5728\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u5904\u7406\u5411\u91cf\u3002NumPy \u4e4b\u7f8e\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5b83\u80fd\u591f\u5c06\u4e0a\u8ff0\u6240\u6709\u65b9\u6cd5\u5e94\u7528\u5230\u4efb\u610f\u6570\u91cf\u7684\u7ef4\u5ea6\u3002 1. \u521b\u5efa\u77e9\u9635 \u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4e0b\u5217\u5f62\u72b6\u7684 python \u5217\u8868\uff0c\u4f7f NumPy \u521b\u5efa\u4e00\u4e2a\u77e9\u9635\u6765\u8868\u793a\u5b83\uff1a np.array([[1,2],[3,4]]) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u63d0\u5230\u7684\u65b9\u6cd5\uff08 ones() \u3001 zeros() \u548c random.random() \uff09\uff0c\u53ea\u8981\u5199\u5165\u4e00\u4e2a\u63cf\u8ff0\u6211\u4eec\u521b\u5efa\u7684\u77e9\u9635\u7ef4\u6570\u7684\u5143\u7ec4\u5373\u53ef\uff1a 2. \u77e9\u9635\u8fd0\u7b97 \u5982\u679c\u4e24\u4e2a\u77e9\u9635\u5927\u5c0f\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u7b26\uff08 +-*/ \uff09\u5bf9\u77e9\u9635\u8fdb\u884c\u52a0\u548c\u4e58\u3002NumPy \u5c06\u5b83\u4eec\u89c6\u4e3a position-wise \u8fd0\u7b97\uff1a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5bf9\u5e94\u4f4d\u7f6e\u60f3\u4e58\u9664\u52a0\u51cf \u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u4e0d\u540c\u5927\u5c0f\u7684\u4e24\u4e2a\u77e9\u9635\u6267\u884c\u6b64\u7c7b\u7b97\u672f\u8fd0\u7b97\uff0c\u4f46\u524d\u63d0\u662f\u67d0\u4e00\u4e2a\u7ef4\u5ea6\u4e3a 1\uff08\u5982\u77e9\u9635\u53ea\u6709\u4e00\u5217\u6216\u4e00\u884c\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cNumPy \u4f7f\u7528\u5e7f\u64ad\u89c4\u5219\u6267\u884c\u7b97\u672f\u8fd0\u7b97\uff1a 3. \u70b9\u4e58 \u7b97\u672f\u8fd0\u7b97\u548c\u77e9\u9635\u8fd0\u7b97\u7684\u4e00\u4e2a\u5173\u952e\u533a\u522b\u662f\u77e9\u9635\u4e58\u6cd5\u4f7f\u7528\u70b9\u4e58\u3002NumPy \u4e3a\u6bcf\u4e2a\u77e9\u9635\u8d4b\u4e88 dot() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u4e0e\u5176\u4ed6\u77e9\u9635\u6267\u884c\u70b9\u4e58\u64cd\u4f5c\uff1a \u6211\u5728\u4e0a\u56fe\u7684\u53f3\u4e0b\u89d2\u6dfb\u52a0\u4e86\u77e9\u9635\u7ef4\u6570\uff0c\u6765\u5f3a\u8c03\u8fd9\u4e24\u4e2a\u77e9\u9635\u7684\u4e34\u8fd1\u8fb9\u5fc5\u987b\u6709\u76f8\u540c\u7684\u7ef4\u6570\u3002\u4f60\u53ef\u4ee5\u628a\u4e0a\u8ff0\u8fd0\u7b97\u89c6\u4e3a\uff1a 4. \u77e9\u9635\u7d22\u5f15 \u5f53\u6211\u4eec\u5904\u7406\u77e9\u9635\u65f6\uff0c\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\u53d8\u5f97\u66f4\u52a0\u6709\u7528\uff1a 5. \u77e9\u9635\u805a\u5408 \u6211\u4eec\u53ef\u4ee5\u50cf\u805a\u5408\u5411\u91cf\u4e00\u6837\u805a\u5408\u77e9\u9635\uff1a \u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u805a\u5408\u77e9\u9635\u4e2d\u7684\u6240\u6709\u503c\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 axis \u53c2\u6570\u6267\u884c\u8de8\u884c\u6216\u8de8\u5217\u805a\u5408\uff1a0\u662f\u52171\u662f\u884c 6. \u8f6c\u7f6e\u548c\u91cd\u5851 \u5904\u7406\u77e9\u9635\u65f6\u7684\u4e00\u4e2a\u5e38\u89c1\u9700\u6c42\u662f\u65cb\u8f6c\u77e9\u9635\u3002\u5f53\u9700\u8981\u5bf9\u4e24\u4e2a\u77e9\u9635\u6267\u884c\u70b9\u4e58\u8fd0\u7b97\u5e76\u5bf9\u9f50\u5b83\u4eec\u5171\u4eab\u7684\u7ef4\u5ea6\u65f6\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u8f6c\u7f6e\u3002NumPy \u6570\u7ec4\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5 T \u6765\u6c42\u5f97\u77e9\u9635\u8f6c\u7f6e\uff1a \u5728\u66f4\u9ad8\u7ea7\u7684\u5b9e\u4f8b\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u53d8\u6362\u7279\u5b9a\u77e9\u9635\u7684\u7ef4\u5ea6\u3002\u5728\u673a\u5668\u5b66\u4e60\u5e94\u7528\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u8fd9\u6837\uff1a\u67d0\u4e2a\u6a21\u578b\u5bf9\u8f93\u5165\u5f62\u72b6\u7684\u8981\u6c42\u4e0e\u4f60\u7684\u6570\u636e\u96c6\u4e0d\u540c\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0cNumPy \u7684 reshape() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u4e86\u3002\u53ea\u9700\u5c06\u77e9\u9635\u6240\u9700\u7684\u65b0\u7ef4\u5ea6\u8d4b\u503c\u7ed9\u5b83\u5373\u53ef\u3002\u53ef\u4ee5\u4e3a\u7ef4\u5ea6\u8d4b\u503c-1\uff0cNumPy \u53ef\u4ee5\u6839\u636e\u4f60\u7684\u77e9\u9635\u63a8\u65ad\u51fa\u6b63\u786e\u7684\u7ef4\u5ea6\uff1a 06 \u518d\u591a\u7ef4\u5ea6 NumPy \u53ef\u4ee5\u5728\u4efb\u610f\u7ef4\u5ea6\u5b9e\u73b0\u4e0a\u8ff0\u63d0\u5230\u7684\u6240\u6709\u5185\u5bb9\u3002\u5176\u4e2d\u5fc3\u6570\u636e\u7ed3\u6784\u88ab\u53eb\u4f5c ndarray\uff08N \u7ef4\u6570\u7ec4\uff09\u4e0d\u662f\u6ca1\u9053\u7406\u7684\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5904\u7406\u4e00\u4e2a\u65b0\u7684\u7ef4\u5ea6\u53ea\u9700\u5728 NumPy \u51fd\u6570\u7684\u53c2\u6570\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9017\u53f7\uff1a 07 \u5b9e\u9645\u7528\u6cd5 \u4ee5\u4e0b\u662f NumPy \u53ef\u5b9e\u73b0\u7684\u6709\u7528\u529f\u80fd\u7684\u5b9e\u4f8b\u6f14\u793a\u3002 1. \u516c\u5f0f \u5b9e\u73b0\u53ef\u7528\u4e8e\u77e9\u9635\u548c\u5411\u91cf\u7684\u6570\u5b66\u516c\u5f0f\u662f NumPy \u7684\u5173\u952e\u7528\u4f8b\u3002\u8fd9\u5c31\u662f NumPy \u662f python \u793e\u533a\u5ba0\u513f\u7684\u539f\u56e0\u3002\u4f8b\u5982\u5747\u65b9\u5dee\u516c\u5f0f\uff0c\u5b83\u662f\u76d1\u7763\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5904\u7406\u56de\u5f52\u95ee\u9898\u7684\u6838\u5fc3\uff1a \u5728 NumPy \u4e2d\u5b9e\u73b0\u8be5\u516c\u5f0f\u5f88\u5bb9\u6613\uff1a \u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\uff0cNumPy \u5e76\u4e0d\u5173\u5fc3 predictions \u548c labels \u5305\u542b\u4e00\u4e2a\u503c\u8fd8\u662f\u4e00\u5343\u4e2a\u503c\uff08\u53ea\u8981\u5b83\u4eec\u5927\u5c0f\u76f8\u540c\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u793a\u4f8b\u4f9d\u6b21\u6267\u884c\u4e0a\u9762\u4ee3\u7801\u884c\u4e2d\u7684\u56db\u4e2a\u64cd\u4f5c\uff1a \u9884\u6d4b\u548c\u6807\u7b7e\u5411\u91cf\u90fd\u5305\u542b\u4e09\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4 n \u7684\u503c\u4e3a 3\u3002\u51cf\u6cd5\u540e\uff0c\u5f97\u5230\u7684\u503c\u5982\u4e0b\uff1a \u7136\u540e\u5c06\u5411\u91cf\u5e73\u65b9\u5f97\u5230\uff1a \u73b0\u5728\u5bf9\u8fd9\u4e9b\u503c\u6c42\u548c\uff1a \u5f97\u5230\u7684\u7ed3\u679c\u5373\u4e3a\u8be5\u9884\u6d4b\u7684\u8bef\u5dee\u503c\u548c\u6a21\u578b\u8d28\u91cf\u8bc4\u5206\u3002 2. \u6570\u636e\u8868\u793a \u8003\u8651\u6240\u6709\u9700\u8981\u5904\u7406\u548c\u6784\u5efa\u6a21\u578b\u6240\u9700\u7684\u6570\u636e\u7c7b\u578b\uff08\u7535\u5b50\u8868\u683c\u3001\u56fe\u50cf\u3001\u97f3\u9891\u7b49\uff09\uff0c\u5176\u4e2d\u5f88\u591a\u90fd\u9002\u5408\u5728 n \u7ef4\u6570\u7ec4\u4e2d\u8868\u793a\uff1a \u8868\u683c\u548c\u7535\u5b50\u8868\u683c \u7535\u5b50\u8868\u683c\u6216\u503c\u8868\u662f\u4e8c\u7ef4\u77e9\u9635\u3002\u7535\u5b50\u8868\u683c\u4e2d\u7684\u6bcf\u4e2a\u5de5\u4f5c\u8868\u90fd\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u53d8\u91cf\u3002python \u4e2d\u6700\u6d41\u884c\u7684\u62bd\u8c61\u662f pandas \u6570\u636e\u5e27\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e86 NumPy \u5e76\u5728\u5176\u4e4b\u4e0a\u6784\u5efa\u3002 \u97f3\u9891\u548c\u65f6\u95f4\u5e8f\u5217 \u97f3\u9891\u6587\u4ef6\u662f\u6837\u672c\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u6bcf\u4e2a\u6837\u672c\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u4ee3\u8868\u97f3\u9891\u4fe1\u53f7\u7684\u4e00\u5c0f\u90e8\u5206\u3002CD \u8d28\u91cf\u7684\u97f3\u9891\u6bcf\u79d2\u5305\u542b 44,100 \u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u662f-65535 \u5230 65536 \u4e4b\u95f4\u7684\u6574\u6570\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u6709\u4e00\u4e2a 10 \u79d2\u7684 CD \u8d28\u91cf WAVE \u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u52a0\u8f7d\u5230\u957f\u5ea6\u4e3a 10 * 44,100 = 441,000 \u7684 NumPy \u6570\u7ec4\u4e2d\u3002\u5982\u679c\u60f3\u8981\u63d0\u53d6\u97f3\u9891\u7684\u7b2c\u4e00\u79d2\uff0c\u53ea\u9700\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230 audio \u7684 NumPy \u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u83b7\u53d6 audio[:44100] \u3002 \u4ee5\u4e0b\u662f\u4e00\u6bb5\u97f3\u9891\u6587\u4ef6\uff1a \u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4e5f\u662f\u5982\u6b64\uff08\u5982\u80a1\u7968\u4ef7\u683c\u968f\u65f6\u95f4\u53d8\u5316\uff09\u3002 \u56fe\u50cf \u56fe\u50cf\u662f\u5c3a\u5bf8\uff08\u9ad8\u5ea6 x \u5bbd\u5ea6\uff09\u7684\u50cf\u7d20\u77e9\u9635\u3002 \u5982\u679c\u56fe\u50cf\u662f\u9ed1\u767d\uff08\u5373\u7070\u5ea6\uff09\u7684\uff0c\u5219\u6bcf\u4e2a\u50cf\u7d20\u90fd\u53ef\u4ee5\u7528\u5355\u4e2a\u6570\u5b57\u8868\u793a\uff08\u901a\u5e38\u5728 0\uff08\u9ed1\u8272\uff09\u548c 255\uff08\u767d\u8272\uff09\u4e4b\u95f4\uff09\u3002\u60f3\u8981\u88c1\u526a\u56fe\u50cf\u5de6\u4e0a\u89d2 10 x 10 \u7684\u50cf\u7d20\u5417\uff1f\u5728 NumPy \u5199\u5165 image[:10,:10] \u5373\u53ef\u3002 \u4e0b\u56fe\u662f\u4e00\u4e2a\u56fe\u50cf\u6587\u4ef6\u7684\u7247\u6bb5\uff1a \u5982\u679c\u56fe\u50cf\u662f\u5f69\u8272\u7684\uff0c\u5219\u6bcf\u4e2a\u50cf\u7d20\u7531\u4e09\u4e2a\u6570\u5b57\u8868\u793a\u2014\u2014\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4\uff08\u56e0\u4e3a\u6bcf\u4e2a\u5355\u5143\u683c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u6570\u5b57\uff09\u3002\u56e0\u6b64\u5f69\u8272\u56fe\u50cf\u7531\u5c3a\u5bf8\u4e3a\uff08\u9ad8 x \u5bbd x3\uff09\u7684 ndarray \u8868\u793a\uff1a \u8bed\u8a00 \u5982\u679c\u6211\u4eec\u5904\u7406\u6587\u672c\uff0c\u60c5\u51b5\u5c31\u4e0d\u540c\u4e86\u3002\u6587\u672c\u7684\u6570\u5b57\u8868\u793a\u9700\u8981\u4e00\u4e2a\u6784\u5efa\u8bcd\u6c47\u8868\u7684\u6b65\u9aa4\uff08\u6a21\u578b\u77e5\u9053\u7684\u552f\u4e00\u5b57\u6e05\u5355\uff09\u548c\u5d4c\u5165\u6b65\u9aa4\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7528\u6570\u5b57\u8868\u793a\u4ee5\u4e0b\u6587\u5b57\u7684\u6b65\u9aa4\uff1a \u6a21\u578b\u9700\u8981\u5148\u67e5\u770b\u5927\u91cf\u6587\u672c\uff0c\u518d\u7528\u6570\u5b57\u8868\u793a\u8fd9\u4f4d\u8bd7\u4eba\u7684\u8bdd\u8bed\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u5904\u7406\u4e00\u4e2a\u5c0f\u6570\u636e\u96c6\uff0c\u5e76\u7528\u5b83\u6765\u6784\u5efa\u4e00\u4e2a\u8bcd\u6c47\u8868\uff0871,290 \u4e2a\u5355\u8bcd\uff09\uff1a \u8fd9\u4e2a\u53e5\u5b50\u53ef\u4ee5\u88ab\u5206\u6210\u4e00\u4e2a token \u6570\u7ec4\uff08\u57fa\u4e8e\u901a\u7528\u89c4\u5219\u7684\u5355\u8bcd\u6216\u5355\u8bcd\u7684\u4e00\u90e8\u5206\uff09\uff1a \u7136\u540e\u6211\u4eec\u7528\u8bcd\u6c47\u8868\u4e2d\u7684 ID \u66ff\u6362\u6bcf\u4e2a\u5355\u8bcd\uff1a \u8fd9\u4e9b ID \u4ecd\u7136\u6ca1\u6709\u4e3a\u6a21\u578b\u63d0\u4f9b\u592a\u591a\u4fe1\u606f\u4ef7\u503c\u3002\u56e0\u6b64\uff0c\u5728\u5c06\u8fd9\u4e00\u7ec4\u5355\u8bcd\u8f93\u5165\u5230\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7528\u5d4c\u5165\u66ff\u6362 token/\u5355\u8bcd\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a 50 \u7ef4 word2vec \u5d4c\u5165\uff09\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u8be5 NumPy \u6570\u7ec4\u7684\u7ef4\u5ea6\u4e3a [embedding_dimension x sequence_length]\u3002\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u503e\u5411\u4e8e\u4fdd\u7559\u6279\u5927\u5c0f\u7684\u7b2c\u4e00\u7ef4\uff08\u56e0\u4e3a\u5982\u679c\u5e76\u884c\u8bad\u7ec3\u591a\u4e2a\u793a\u4f8b\uff0c\u6a21\u578b\u8bad\u7ec3\u901f\u5ea6\u4f1a\u52a0\u5feb\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c reshape() \u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002\u5982\u50cf BERT \u8fd9\u6837\u7684\u6a21\u578b\u671f\u671b\u7684\u8f93\u5165\u5f62\u5f0f\u662f\uff1a[batch_size\uff0csequence_length\uff0cembedding_size]\u3002 \u73b0\u5728\u8fd9\u662f numeric volume \u5f62\u5f0f\uff0c\u6a21\u578b\u53ef\u4ee5\u5904\u7406\u5e76\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002\u5176\u4ed6\u884c\u867d\u7136\u7559\u7a7a\uff0c\u4f46\u662f\u5b83\u4eec\u4f1a\u88ab\u586b\u5145\u5176\u4ed6\u793a\u4f8b\u4ee5\u4f9b\u6a21\u578b\u8bad\u7ec3\uff08\u6216\u9884\u6d4b\uff09\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://jalammar.github.io/visual-numpy/","title":"051 \u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/#01","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a python \u5217\u8868\u5e76\u4f7f\u7528 np.array() \u6765\u521b\u5efa NumPy \u6570\u7ec4\uff08\u6781\u5927\u53ef\u80fd\u662f\u591a\u7ef4\u6570\u7ec4\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0cpython \u521b\u5efa\u7684\u6570\u7ec4\u5982\u4e0b\u56fe\u53f3\u6240\u793a\uff1a \u901a\u5e38\u6211\u4eec\u5e0c\u671b NumPy \u80fd\u521d\u59cb\u5316\u6570\u7ec4\u7684\u503c\uff0c\u4e3a\u6b64 NumPy \u63d0\u4f9b\u4e86 ones()\u3001zeros() \u548c random.random() \u7b49\u65b9\u6cd5\u3002\u6211\u4eec\u53ea\u9700\u4f20\u9012\u5e0c\u671b NumPy \u751f\u6210\u7684\u5143\u7d20\u6570\u91cf\u5373\u53ef\uff1a \u4e00\u65e6\u521b\u5efa\u4e86\u6570\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c3d\u60c5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u3002","title":"01 \u521b\u5efa\u6570\u7ec4"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/#02","text":"\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a NumPy \u6570\u7ec4\u6765\u5c55\u793a\u6570\u7ec4\u8fd0\u7b97\u529f\u80fd\u3002\u6211\u4eec\u5c06\u4e0b\u56fe\u4e24\u4e2a\u6570\u7ec4\u79f0\u4e3a data \u548c ones\uff1a \u5c06\u5b83\u4eec\u6309\u4f4d\u7f6e\u76f8\u52a0\uff08\u5373\u6bcf\u884c\u5bf9\u5e94\u76f8\u52a0\uff09\uff0c\u76f4\u63a5\u8f93\u5165 data + ones \u5373\u53ef\uff1a \u5f53\u6211\u5f00\u59cb\u5b66\u4e60\u8fd9\u4e9b\u5de5\u5177\u65f6\uff0c\u6211\u53d1\u73b0\u8fd9\u6837\u7684\u62bd\u8c61\u8ba9\u6211\u4e0d\u5fc5\u5728\u5faa\u73af\u4e2d\u7f16\u5199\u7c7b\u4f3c\u8ba1\u7b97\u3002\u6b64\u7c7b\u62bd\u8c61\u53ef\u4ee5\u4f7f\u6211\u5728\u66f4\u9ad8\u5c42\u9762\u4e0a\u601d\u8003\u95ee\u9898\u3002 \u9664\u4e86\u300c\u52a0\u300d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6570\u7ec4\u548c\u5355\u4e2a\u6570\u5b57\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\uff08\u5373\u5411\u91cf\u548c\u6807\u91cf\u4e4b\u95f4\u7684\u8fd0\u7b97\uff09\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u7684\u6570\u7ec4\u8868\u793a\u4ee5\u82f1\u91cc\u4e3a\u5355\u4f4d\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u5355\u4f4d\u8f6c\u6362\u4e3a\u5343\u7c73\u3002\u53ea\u9700\u8f93\u5165 data * 1.6 \u5373\u53ef\uff1a \u770b\u5230 NumPy \u662f\u5982\u4f55\u7406\u89e3\u8fd9\u4e2a\u8fd0\u7b97\u7684\u4e86\u5417\uff1f\u8fd9\u4e2a\u6982\u5ff5\u53eb\u505a\u5e7f\u64ad\u673a\u5236\uff08broadcasting\uff09\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002","title":"02 \u6570\u7ec4\u8fd0\u7b97"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/#03","text":"\u6211\u4eec\u53ef\u4ee5\u6211\u4eec\u50cf\u5bf9 python \u5217\u8868\u8fdb\u884c\u5207\u7247\u4e00\u6837\uff0c\u5bf9 NumPy \u6570\u7ec4\u8fdb\u884c\u4efb\u610f\u7684\u7d22\u5f15\u548c\u5207\u7247\uff1a","title":"03 \u7d22\u5f15"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/#04","text":"NumPy \u8fd8\u63d0\u4f9b\u805a\u5408\u529f\u80fd\uff1a \u9664\u4e86 min\u3001max \u548c sum \u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 mean \u5f97\u5230\u5e73\u5747\u503c\uff0c\u4f7f\u7528 prod \u5f97\u5230\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u4f7f\u7528 std \u5f97\u5230\u6807\u51c6\u5dee\u7b49\u7b49\u3002","title":"04 \u805a\u5408"},{"location":"python\u5b66\u4e60/051-\u56fe\u89e3NumPy\uff0c\u8fd9\u662f\u7406\u89e3\u6570\u7ec4\u6700\u5f62\u8c61\u7684\u4e00\u4efd\u6559\u7a0b\u4e86/#05","text":"\u4e0a\u8ff0\u7684\u4f8b\u5b50\u90fd\u5728\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u5904\u7406\u5411\u91cf\u3002NumPy \u4e4b\u7f8e\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5b83\u80fd\u591f\u5c06\u4e0a\u8ff0\u6240\u6709\u65b9\u6cd5\u5e94\u7528\u5230\u4efb\u610f\u6570\u91cf\u7684\u7ef4\u5ea6\u3002 1. \u521b\u5efa\u77e9\u9635 \u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4e0b\u5217\u5f62\u72b6\u7684 python \u5217\u8868\uff0c\u4f7f NumPy \u521b\u5efa\u4e00\u4e2a\u77e9\u9635\u6765\u8868\u793a\u5b83\uff1a np.array([[1,2],[3,4]]) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u63d0\u5230\u7684\u65b9\u6cd5\uff08 ones() \u3001 zeros() \u548c random.random() \uff09\uff0c\u53ea\u8981\u5199\u5165\u4e00\u4e2a\u63cf\u8ff0\u6211\u4eec\u521b\u5efa\u7684\u77e9\u9635\u7ef4\u6570\u7684\u5143\u7ec4\u5373\u53ef\uff1a 2. \u77e9\u9635\u8fd0\u7b97 \u5982\u679c\u4e24\u4e2a\u77e9\u9635\u5927\u5c0f\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u7b26\uff08 +-*/ \uff09\u5bf9\u77e9\u9635\u8fdb\u884c\u52a0\u548c\u4e58\u3002NumPy \u5c06\u5b83\u4eec\u89c6\u4e3a position-wise \u8fd0\u7b97\uff1a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5bf9\u5e94\u4f4d\u7f6e\u60f3\u4e58\u9664\u52a0\u51cf \u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u4e0d\u540c\u5927\u5c0f\u7684\u4e24\u4e2a\u77e9\u9635\u6267\u884c\u6b64\u7c7b\u7b97\u672f\u8fd0\u7b97\uff0c\u4f46\u524d\u63d0\u662f\u67d0\u4e00\u4e2a\u7ef4\u5ea6\u4e3a 1\uff08\u5982\u77e9\u9635\u53ea\u6709\u4e00\u5217\u6216\u4e00\u884c\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cNumPy \u4f7f\u7528\u5e7f\u64ad\u89c4\u5219\u6267\u884c\u7b97\u672f\u8fd0\u7b97\uff1a 3. \u70b9\u4e58 \u7b97\u672f\u8fd0\u7b97\u548c\u77e9\u9635\u8fd0\u7b97\u7684\u4e00\u4e2a\u5173\u952e\u533a\u522b\u662f\u77e9\u9635\u4e58\u6cd5\u4f7f\u7528\u70b9\u4e58\u3002NumPy \u4e3a\u6bcf\u4e2a\u77e9\u9635\u8d4b\u4e88 dot() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u4e0e\u5176\u4ed6\u77e9\u9635\u6267\u884c\u70b9\u4e58\u64cd\u4f5c\uff1a \u6211\u5728\u4e0a\u56fe\u7684\u53f3\u4e0b\u89d2\u6dfb\u52a0\u4e86\u77e9\u9635\u7ef4\u6570\uff0c\u6765\u5f3a\u8c03\u8fd9\u4e24\u4e2a\u77e9\u9635\u7684\u4e34\u8fd1\u8fb9\u5fc5\u987b\u6709\u76f8\u540c\u7684\u7ef4\u6570\u3002\u4f60\u53ef\u4ee5\u628a\u4e0a\u8ff0\u8fd0\u7b97\u89c6\u4e3a\uff1a 4. \u77e9\u9635\u7d22\u5f15 \u5f53\u6211\u4eec\u5904\u7406\u77e9\u9635\u65f6\uff0c\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\u53d8\u5f97\u66f4\u52a0\u6709\u7528\uff1a 5. \u77e9\u9635\u805a\u5408 \u6211\u4eec\u53ef\u4ee5\u50cf\u805a\u5408\u5411\u91cf\u4e00\u6837\u805a\u5408\u77e9\u9635\uff1a \u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u805a\u5408\u77e9\u9635\u4e2d\u7684\u6240\u6709\u503c\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 axis \u53c2\u6570\u6267\u884c\u8de8\u884c\u6216\u8de8\u5217\u805a\u5408\uff1a0\u662f\u52171\u662f\u884c 6. \u8f6c\u7f6e\u548c\u91cd\u5851 \u5904\u7406\u77e9\u9635\u65f6\u7684\u4e00\u4e2a\u5e38\u89c1\u9700\u6c42\u662f\u65cb\u8f6c\u77e9\u9635\u3002\u5f53\u9700\u8981\u5bf9\u4e24\u4e2a\u77e9\u9635\u6267\u884c\u70b9\u4e58\u8fd0\u7b97\u5e76\u5bf9\u9f50\u5b83\u4eec\u5171\u4eab\u7684\u7ef4\u5ea6\u65f6\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u8f6c\u7f6e\u3002NumPy \u6570\u7ec4\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5 T \u6765\u6c42\u5f97\u77e9\u9635\u8f6c\u7f6e\uff1a \u5728\u66f4\u9ad8\u7ea7\u7684\u5b9e\u4f8b\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u53d8\u6362\u7279\u5b9a\u77e9\u9635\u7684\u7ef4\u5ea6\u3002\u5728\u673a\u5668\u5b66\u4e60\u5e94\u7528\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u8fd9\u6837\uff1a\u67d0\u4e2a\u6a21\u578b\u5bf9\u8f93\u5165\u5f62\u72b6\u7684\u8981\u6c42\u4e0e\u4f60\u7684\u6570\u636e\u96c6\u4e0d\u540c\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0cNumPy \u7684 reshape() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u4e86\u3002\u53ea\u9700\u5c06\u77e9\u9635\u6240\u9700\u7684\u65b0\u7ef4\u5ea6\u8d4b\u503c\u7ed9\u5b83\u5373\u53ef\u3002\u53ef\u4ee5\u4e3a\u7ef4\u5ea6\u8d4b\u503c-1\uff0cNumPy \u53ef\u4ee5\u6839\u636e\u4f60\u7684\u77e9\u9635\u63a8\u65ad\u51fa\u6b63\u786e\u7684\u7ef4\u5ea6\uff1a 06 \u518d\u591a\u7ef4\u5ea6 NumPy \u53ef\u4ee5\u5728\u4efb\u610f\u7ef4\u5ea6\u5b9e\u73b0\u4e0a\u8ff0\u63d0\u5230\u7684\u6240\u6709\u5185\u5bb9\u3002\u5176\u4e2d\u5fc3\u6570\u636e\u7ed3\u6784\u88ab\u53eb\u4f5c ndarray\uff08N \u7ef4\u6570\u7ec4\uff09\u4e0d\u662f\u6ca1\u9053\u7406\u7684\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5904\u7406\u4e00\u4e2a\u65b0\u7684\u7ef4\u5ea6\u53ea\u9700\u5728 NumPy \u51fd\u6570\u7684\u53c2\u6570\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9017\u53f7\uff1a 07 \u5b9e\u9645\u7528\u6cd5 \u4ee5\u4e0b\u662f NumPy \u53ef\u5b9e\u73b0\u7684\u6709\u7528\u529f\u80fd\u7684\u5b9e\u4f8b\u6f14\u793a\u3002 1. \u516c\u5f0f \u5b9e\u73b0\u53ef\u7528\u4e8e\u77e9\u9635\u548c\u5411\u91cf\u7684\u6570\u5b66\u516c\u5f0f\u662f NumPy \u7684\u5173\u952e\u7528\u4f8b\u3002\u8fd9\u5c31\u662f NumPy \u662f python \u793e\u533a\u5ba0\u513f\u7684\u539f\u56e0\u3002\u4f8b\u5982\u5747\u65b9\u5dee\u516c\u5f0f\uff0c\u5b83\u662f\u76d1\u7763\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5904\u7406\u56de\u5f52\u95ee\u9898\u7684\u6838\u5fc3\uff1a \u5728 NumPy \u4e2d\u5b9e\u73b0\u8be5\u516c\u5f0f\u5f88\u5bb9\u6613\uff1a \u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\uff0cNumPy \u5e76\u4e0d\u5173\u5fc3 predictions \u548c labels \u5305\u542b\u4e00\u4e2a\u503c\u8fd8\u662f\u4e00\u5343\u4e2a\u503c\uff08\u53ea\u8981\u5b83\u4eec\u5927\u5c0f\u76f8\u540c\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u793a\u4f8b\u4f9d\u6b21\u6267\u884c\u4e0a\u9762\u4ee3\u7801\u884c\u4e2d\u7684\u56db\u4e2a\u64cd\u4f5c\uff1a \u9884\u6d4b\u548c\u6807\u7b7e\u5411\u91cf\u90fd\u5305\u542b\u4e09\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4 n \u7684\u503c\u4e3a 3\u3002\u51cf\u6cd5\u540e\uff0c\u5f97\u5230\u7684\u503c\u5982\u4e0b\uff1a \u7136\u540e\u5c06\u5411\u91cf\u5e73\u65b9\u5f97\u5230\uff1a \u73b0\u5728\u5bf9\u8fd9\u4e9b\u503c\u6c42\u548c\uff1a \u5f97\u5230\u7684\u7ed3\u679c\u5373\u4e3a\u8be5\u9884\u6d4b\u7684\u8bef\u5dee\u503c\u548c\u6a21\u578b\u8d28\u91cf\u8bc4\u5206\u3002 2. \u6570\u636e\u8868\u793a \u8003\u8651\u6240\u6709\u9700\u8981\u5904\u7406\u548c\u6784\u5efa\u6a21\u578b\u6240\u9700\u7684\u6570\u636e\u7c7b\u578b\uff08\u7535\u5b50\u8868\u683c\u3001\u56fe\u50cf\u3001\u97f3\u9891\u7b49\uff09\uff0c\u5176\u4e2d\u5f88\u591a\u90fd\u9002\u5408\u5728 n \u7ef4\u6570\u7ec4\u4e2d\u8868\u793a\uff1a \u8868\u683c\u548c\u7535\u5b50\u8868\u683c \u7535\u5b50\u8868\u683c\u6216\u503c\u8868\u662f\u4e8c\u7ef4\u77e9\u9635\u3002\u7535\u5b50\u8868\u683c\u4e2d\u7684\u6bcf\u4e2a\u5de5\u4f5c\u8868\u90fd\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u53d8\u91cf\u3002python \u4e2d\u6700\u6d41\u884c\u7684\u62bd\u8c61\u662f pandas \u6570\u636e\u5e27\uff0c\u5b83\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e86 NumPy \u5e76\u5728\u5176\u4e4b\u4e0a\u6784\u5efa\u3002 \u97f3\u9891\u548c\u65f6\u95f4\u5e8f\u5217 \u97f3\u9891\u6587\u4ef6\u662f\u6837\u672c\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u6bcf\u4e2a\u6837\u672c\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u4ee3\u8868\u97f3\u9891\u4fe1\u53f7\u7684\u4e00\u5c0f\u90e8\u5206\u3002CD \u8d28\u91cf\u7684\u97f3\u9891\u6bcf\u79d2\u5305\u542b 44,100 \u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u662f-65535 \u5230 65536 \u4e4b\u95f4\u7684\u6574\u6570\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u6709\u4e00\u4e2a 10 \u79d2\u7684 CD \u8d28\u91cf WAVE \u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u52a0\u8f7d\u5230\u957f\u5ea6\u4e3a 10 * 44,100 = 441,000 \u7684 NumPy \u6570\u7ec4\u4e2d\u3002\u5982\u679c\u60f3\u8981\u63d0\u53d6\u97f3\u9891\u7684\u7b2c\u4e00\u79d2\uff0c\u53ea\u9700\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230 audio \u7684 NumPy \u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u83b7\u53d6 audio[:44100] \u3002 \u4ee5\u4e0b\u662f\u4e00\u6bb5\u97f3\u9891\u6587\u4ef6\uff1a \u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4e5f\u662f\u5982\u6b64\uff08\u5982\u80a1\u7968\u4ef7\u683c\u968f\u65f6\u95f4\u53d8\u5316\uff09\u3002 \u56fe\u50cf \u56fe\u50cf\u662f\u5c3a\u5bf8\uff08\u9ad8\u5ea6 x \u5bbd\u5ea6\uff09\u7684\u50cf\u7d20\u77e9\u9635\u3002 \u5982\u679c\u56fe\u50cf\u662f\u9ed1\u767d\uff08\u5373\u7070\u5ea6\uff09\u7684\uff0c\u5219\u6bcf\u4e2a\u50cf\u7d20\u90fd\u53ef\u4ee5\u7528\u5355\u4e2a\u6570\u5b57\u8868\u793a\uff08\u901a\u5e38\u5728 0\uff08\u9ed1\u8272\uff09\u548c 255\uff08\u767d\u8272\uff09\u4e4b\u95f4\uff09\u3002\u60f3\u8981\u88c1\u526a\u56fe\u50cf\u5de6\u4e0a\u89d2 10 x 10 \u7684\u50cf\u7d20\u5417\uff1f\u5728 NumPy \u5199\u5165 image[:10,:10] \u5373\u53ef\u3002 \u4e0b\u56fe\u662f\u4e00\u4e2a\u56fe\u50cf\u6587\u4ef6\u7684\u7247\u6bb5\uff1a \u5982\u679c\u56fe\u50cf\u662f\u5f69\u8272\u7684\uff0c\u5219\u6bcf\u4e2a\u50cf\u7d20\u7531\u4e09\u4e2a\u6570\u5b57\u8868\u793a\u2014\u2014\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4\uff08\u56e0\u4e3a\u6bcf\u4e2a\u5355\u5143\u683c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u6570\u5b57\uff09\u3002\u56e0\u6b64\u5f69\u8272\u56fe\u50cf\u7531\u5c3a\u5bf8\u4e3a\uff08\u9ad8 x \u5bbd x3\uff09\u7684 ndarray \u8868\u793a\uff1a \u8bed\u8a00 \u5982\u679c\u6211\u4eec\u5904\u7406\u6587\u672c\uff0c\u60c5\u51b5\u5c31\u4e0d\u540c\u4e86\u3002\u6587\u672c\u7684\u6570\u5b57\u8868\u793a\u9700\u8981\u4e00\u4e2a\u6784\u5efa\u8bcd\u6c47\u8868\u7684\u6b65\u9aa4\uff08\u6a21\u578b\u77e5\u9053\u7684\u552f\u4e00\u5b57\u6e05\u5355\uff09\u548c\u5d4c\u5165\u6b65\u9aa4\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7528\u6570\u5b57\u8868\u793a\u4ee5\u4e0b\u6587\u5b57\u7684\u6b65\u9aa4\uff1a \u6a21\u578b\u9700\u8981\u5148\u67e5\u770b\u5927\u91cf\u6587\u672c\uff0c\u518d\u7528\u6570\u5b57\u8868\u793a\u8fd9\u4f4d\u8bd7\u4eba\u7684\u8bdd\u8bed\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u5904\u7406\u4e00\u4e2a\u5c0f\u6570\u636e\u96c6\uff0c\u5e76\u7528\u5b83\u6765\u6784\u5efa\u4e00\u4e2a\u8bcd\u6c47\u8868\uff0871,290 \u4e2a\u5355\u8bcd\uff09\uff1a \u8fd9\u4e2a\u53e5\u5b50\u53ef\u4ee5\u88ab\u5206\u6210\u4e00\u4e2a token \u6570\u7ec4\uff08\u57fa\u4e8e\u901a\u7528\u89c4\u5219\u7684\u5355\u8bcd\u6216\u5355\u8bcd\u7684\u4e00\u90e8\u5206\uff09\uff1a \u7136\u540e\u6211\u4eec\u7528\u8bcd\u6c47\u8868\u4e2d\u7684 ID \u66ff\u6362\u6bcf\u4e2a\u5355\u8bcd\uff1a \u8fd9\u4e9b ID \u4ecd\u7136\u6ca1\u6709\u4e3a\u6a21\u578b\u63d0\u4f9b\u592a\u591a\u4fe1\u606f\u4ef7\u503c\u3002\u56e0\u6b64\uff0c\u5728\u5c06\u8fd9\u4e00\u7ec4\u5355\u8bcd\u8f93\u5165\u5230\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7528\u5d4c\u5165\u66ff\u6362 token/\u5355\u8bcd\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a 50 \u7ef4 word2vec \u5d4c\u5165\uff09\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u8be5 NumPy \u6570\u7ec4\u7684\u7ef4\u5ea6\u4e3a [embedding_dimension x sequence_length]\u3002\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u503e\u5411\u4e8e\u4fdd\u7559\u6279\u5927\u5c0f\u7684\u7b2c\u4e00\u7ef4\uff08\u56e0\u4e3a\u5982\u679c\u5e76\u884c\u8bad\u7ec3\u591a\u4e2a\u793a\u4f8b\uff0c\u6a21\u578b\u8bad\u7ec3\u901f\u5ea6\u4f1a\u52a0\u5feb\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c reshape() \u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002\u5982\u50cf BERT \u8fd9\u6837\u7684\u6a21\u578b\u671f\u671b\u7684\u8f93\u5165\u5f62\u5f0f\u662f\uff1a[batch_size\uff0csequence_length\uff0cembedding_size]\u3002 \u73b0\u5728\u8fd9\u662f numeric volume \u5f62\u5f0f\uff0c\u6a21\u578b\u53ef\u4ee5\u5904\u7406\u5e76\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002\u5176\u4ed6\u884c\u867d\u7136\u7559\u7a7a\uff0c\u4f46\u662f\u5b83\u4eec\u4f1a\u88ab\u586b\u5145\u5176\u4ed6\u793a\u4f8b\u4ee5\u4f9b\u6a21\u578b\u8bad\u7ec3\uff08\u6216\u9884\u6d4b\uff09\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://jalammar.github.io/visual-numpy/","title":"05 \u66f4\u591a\u7ef4\u5ea6"},{"location":"python\u5b66\u4e60/052-140\u79cdPython\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u548c\u5916\u90e8\u5de5\u5177\u90fd\u6709\u4e86/","text":"\u5410\u8840\u6574\u7406\uff01140\u79cdPython\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u548c\u5916\u90e8\u5de5\u5177\u90fd\u6709\u4e86 \u00b6 \u539f\u521b\uff1a \u5b8b\u5929\u9f99 \u5927\u6570\u636e \u4eca\u5929 **\u5bfc\u8bfb\uff1a**Python\u6570\u636e\u5de5\u5177\u7bb1\u6db5\u76d6\u4ece\u6570\u636e\u6e90\u5230\u6570\u636e\u53ef\u89c6\u5316\u7684\u5b8c\u6574\u6d41\u7a0b\u4e2d\u6d89\u53ca\u5230\u7684\u5e38\u7528\u5e93\u3001\u51fd\u6570\u548c\u5916\u90e8\u5de5\u5177\u3002\u5176\u4e2d\u65e2\u6709Python\u5185\u7f6e\u51fd\u6570\u548c\u6807\u51c6\u5e93\uff0c\u53c8\u6709\u7b2c\u4e09\u65b9\u5e93\u548c\u5de5\u5177\u3002 \u8fd9\u4e9b\u5e93\u53ef\u7528\u4e8e\u6587\u4ef6\u8bfb\u5199\u3001\u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790\u3001\u6570\u636e\u8fde\u63a5\u3001\u6570\u6e05\u6d17\u8f6c\u6362\u3001\u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790\u3001\u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406\u3001\u97f3\u9891\u5904\u7406\u3001\u6570\u636e\u6316\u6398/\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60\u3001\u6570\u636e\u53ef\u89c6\u5316\u3001\u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1\u4ee5\u53ca\u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177\u3002 \u4f5c\u8005\uff1a\u5b8b\u5929\u9f99 \u5982\u9700\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5927\u6570\u636e\uff08ID\uff1ahzdashuju\uff09 \u4e3a\u4e86\u533a\u5206\u4e0d\u540c\u5bf9\u8c61\u7684\u6765\u6e90\u548c\u7c7b\u578b\uff0c\u672c\u6587\u5c06\u5728\u63cf\u8ff0\u4e2d\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u6807\u8bc6\uff1a **Python\u5185\u7f6e\u51fd\u6570\uff1a**Python\u81ea\u5e26\u7684\u5185\u7f6e\u51fd\u6570\u3002\u51fd\u6570\u65e0\u9700\u5bfc\u5165\uff0c\u76f4\u63a5\u4f7f\u7528\u3002\u4f8b\u5982\u8981\u8ba1\u7b97-3.2\u7684\u7edd\u5bf9\u503c\uff0c\u76f4\u63a5\u4f7f\u7528abs\u51fd\u6570\uff0c\u65b9\u6cd5\u662f abs(-3.2) **Python\u6807\u51c6\u5e93\uff1a**Python\u81ea\u5e26\u7684\u6807\u51c6\u5e93\u3002Python\u6807\u51c6\u5e93\u65e0\u9700\u5b89\u88c5\uff0c\u53ea\u9700\u8981\u5148\u901a\u8fc7import\u65b9\u6cd5\u5bfc\u5165\u4fbf\u53ef\u4f7f\u7528\u5176\u4e2d\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\u5bfc\u5165string\u6a21\u5757\uff0c\u7136\u540e\u4f7f\u7528\u5176\u4e2d\u7684find\u65b9\u6cd5\uff1a import string **\u7b2c\u4e09\u65b9\u5e93\uff1a**Python\u7684\u7b2c\u4e09\u65b9\u5e93\u3002\u8fd9\u4e9b\u5e93\u9700\u8981\u5148\u8fdb\u884c\u5b89\u88c5\uff08\u90e8\u5206\u53ef\u80fd\u9700\u8981\u914d\u7f6e\uff09\u3002 **\u5916\u90e8\u5de5\u5177\uff1a**\u975ePython\u5199\u6210\u7684\u5e93\u6216\u5305\uff0c\u7528\u4e8ePython\u6570\u636e\u5de5\u4f5c\u7684\u76f8\u5173\u5de5\u5177\u3002 \u300c \u63a8\u8350\u5ea6 \u300d3\u661f\u6700\u9ad8\uff0c1\u661f\u6700\u4f4e\u3002 01 \u6587\u4ef6\u8bfb\u5199 \u6587\u4ef6\u7684\u8bfb\u5199\u5305\u62ec\u5e38\u89c1\u7684txt\u3001Excel\u3001xml\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u53ca\u5176\u4ed6\u683c\u5f0f\u7684\u6570\u636e\u6587\u672c\uff0c\u4e3b\u8981\u7528\u4e8e\u672c\u5730\u6570\u636e\u7684\u8bfb\u5199\u3002 1. open(name[, mode[, buffering]]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 **\u63cf\u8ff0\uff1a**Python\u9ed8\u8ba4\u7684\u6587\u4ef6\u8bfb\u5199\u65b9\u6cd5 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 2. numpy.loadtxt\u3001numpy.load\u548cnumpy.fromfile **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 **\u63cf\u8ff0\uff1a**Numpy\u81ea\u5e26\u7684\u8bfb\u5199\u51fd\u6570\uff0c\u5305\u62ecloadtxt\u3001load\u548cfromfile\uff0c\u7528\u4e8e\u6587\u672c\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 3. pandas.read_* **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 **\u63cf\u8ff0\uff1a**Pandas\u81ea\u5e26\u7684read\u6587\u4ef6\u65b9\u6cd5\uff0c\u4f8b\u5982ead_csv\u3001read_fwf\u3001read_table\u7b49\uff0c\u7528\u4e8e\u6587\u672c\u3001Excel\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001HDF5\u3001\u8868\u683c\u3001SAS\u6587\u4ef6\u3001SQL\u6570\u636e\u5e93\u3001Stata\u6587\u4ef6\u7b49\u7684\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 4. xlrd **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u53d6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 5. xlwt **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u5199\u5165 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 6. pyexcel-xl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 7. xluntils **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 8. pyExcelerator **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605 9. openpyxl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605 10. lxml **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****xml\u548cHTML\u8bfb\u53d6\u548c\u89e3\u6790 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 11. xml **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 12. libxml2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605 13. xpath **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ******\u63cf\u8ff0\uff1a******xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 14. win32com **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u6709\u5173Windows\u7cfb\u7edf\u64cd\u4f5c\u3001Office\uff08Word\u3001Excel\u7b49\uff09\u6587\u4ef6\u8bfb\u5199\u7b49\u7684\u7efc\u5408\u5e94\u7528\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605 02 \u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790 \u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790\u7528\u4e8e\u4ece\u4e92\u8054\u7f51\u4e2d\u6293\u53d6\u4fe1\u606f\uff0c\u5e76\u5bf9HTML\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\uff0c\u6709\u5173xml\u5bf9\u8c61\u7684\u89e3\u6790\u548c\u5904\u7406\u7684\u5e93\u5728\u201c01 \u6587\u4ef6\u8bfb\u5199\u201d\u4e2d\u627e\u5230\u3002 15. requests **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7f51\u7edc\u8bf7\u6c42\u5e93\uff0c\u63d0\u4f9b\u591a\u79cd\u7f51\u7edc\u8bf7\u6c42\u65b9\u6cd5\u5e76\u53ef\u5b9a\u4e49\u590d\u6742\u7684\u53d1\u9001\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 16. urllib **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u5e93\uff0c\u7b80\u5355\u7684\u8bfb\u53d6\u7279\u5b9aURL\u5e76\u83b7\u5f97\u8fd4\u56de\u7684\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605 17. urllib2 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u5e93\uff0c\u8bfb\u53d6\u7279\u5b9aURL\u5e76\u83b7\u5f97\u8fd4\u56de\u7684\u4fe1\u606f\uff0c\u76f8\u5bf9\u4e8eurllib\u53ef\u5904\u7406\u66f4\u591aHTTP\u4fe1\u606f\uff0c\u4f8b\u5982cookie\u3001\u8eab\u4efd\u9a8c\u8bc1\u3001\u91cd\u5b9a\u5411\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 18. urlparse **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684URL\u89e3\u6790\u5e93\uff0c\u53ef\u81ea\u52a8\u89e3\u6790URL\u4e0d\u540c\u7684\u57df\u3001\u53c2\u6570\u3001\u8def\u5f84\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 19. HTMLParser **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684HTML\u89e3\u6790\u6a21\u5757\uff0c\u80fd\u591f\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0HTML\u6587\u4ef6\u7684\u5206\u6790 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 20. Scapy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u7528\u6237\u53d1\u9001\u3001\u4fa6\u542c\u548c\u89e3\u6790\u5e76\u4f2a\u88c5\u7f51\u7edc\u62a5\u6587\uff0c\u5e38\u7528\u4e8e\u5927\u578b\u7f51\u7edc\u6570\u636e\u722c\u53d6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 21. Beautiful Soup **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Beautiful Soup\u662f\u7f51\u9875\u6570\u636e\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406\u5de5\u5177\uff0c\u901a\u5e38\u914d\u5408Python\u7684urllib\u3001urllib2\u7b49\u5e93\u4e00\u8d77\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 03 \u6570\u636e\u5e93\u8fde\u63a5 \u6570\u636e\u5e93\u8fde\u63a5\u53ef\u7528\u4e8e\u8fde\u63a5\u4f17\u591a\u6570\u636e\u5e93\u4ee5\u53ca\u8bbf\u95ee\u901a\u7528\u6570\u636e\u5e93\u63a5\u53e3\uff0c\u53ef\u7528\u4e8e\u6570\u636e\u5e93\u7ef4\u62a4\u3001\u7ba1\u7406\u548c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u65e5\u5e38\u64cd\u4f5c\u3002 22. mysql-connector-python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u5b98\u65b9\u9a71\u52a8\u8fde\u63a5\u7a0b\u5e8f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 23. pymysql **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u8fde\u63a5\u5e93\uff0c\u652f\u6301Python3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 24. MySQL-python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 25. cx_Oracle **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Oracle\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 26. psycopg2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u7f16\u7a0b\u8bed\u8a00\u4e2d\u975e\u5e38\u53d7\u6b22\u8fce\u7684PostgreSQL\u9002\u914d\u5668 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 27. redis **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Redis\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 ****28. pymongo**** **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MongoDB\u5b98\u65b9\u9a71\u52a8\u8fde\u63a5\u7a0b\u5e8f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 29. HappyBase **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****HBase\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 30. py2neo **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Neo4j\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 31. cassandra-driver **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Cassandra\uff081.2+\uff09\u548cDataStax Enterprise\uff083.1+\uff09\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 32. sqlite3 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0c\u7528\u4e8e\u64cd\u4f5cSQLite\u6570\u636e\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 33. pysqlite2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SQLite 3.x\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 34. bsddb3 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Berkeley DB\u8fde\u63a5\u5e93 35. bsddb **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5230Berkeley DB\u5e93\u7684\u63a5\u53e3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 36. dbhash **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0cdbhash\u6a21\u5757\u63d0\u4f9b\u4e86\u4f7f\u7528BSD\u6570\u636e\u5e93\u5e93\u6253\u5f00\u6570\u636e\u5e93\u7684\u529f\u80fd\u3002\u8be5\u6a21\u5757\u955c\u50cf\u4e86\u63d0\u4f9b\u5bf9DBM\u6837\u5f0f\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u5176\u4ed6Python\u6570\u636e\u5e93\u6a21\u5757\u7684\u63a5\u53e3\u3002bsddb\u6a21\u5757\u9700\u8981\u4f7f\u7528dbhash \u63a8\u8350\u5ea6\uff1a \u2605\u2605 37. adodb **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ADOdb\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u62bd\u8c61\u5e93\uff0c\u652f\u6301\u5e38\u89c1\u7684\u6570\u636e\u548c\u6570\u636e\u5e93\u63a5\u53e3\u5e76\u53ef\u81ea\u884c\u8fdb\u884c\u6570\u636e\u5e93\u6269\u5c55\uff0c\u8be5\u5e93\u53ef\u4ee5\u5bf9\u4e0d\u540c\u6570\u636e\u5e93\u4e2d\u7684\u8bed\u6cd5\u8fdb\u884c\u89e3\u6790\u548c\u5dee\u5f02\u5316\u5904\u7406\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u901a\u7528\u6027 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 38. SQLObject **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ******\u63cf\u8ff0\uff1a******SQLObject\u662f\u4e00\u79cd\u6d41\u884c\u7684\u5bf9\u8c61\u5173\u7cfb\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u5411\u6570\u636e\u5e93\u63d0\u4f9b\u5bf9\u8c61\u63a5\u53e3\uff0c\u5176\u4e2d\u8868\u4e3a\u7c7b\u3001\u884c\u4e3a\u5b9e\u4f8b\u3001\u5217\u4e3a\u5c5e\u6027 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 39. SQLAlchemy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SQLAlchemy\u662fPython SQL\u5de5\u5177\u5305\u548c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u5668\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u63a7\u5236 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 40. ctypes **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ctypes\u662fPython\u7684\u4e00\u4e2a\u5916\u90e8\u5e93\uff0c\u63d0\u4f9b\u548cC\u8bed\u8a00\u517c\u5bb9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8c03\u7528C DLL\u4e2d\u7684\u51fd\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 41. pyodbc **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u901a\u8fc7ODBC\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u63a5\u53e3\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 42. Jython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u901a\u8fc7JDBC\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u63a5\u53e3\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 04 \u6570\u636e\u6e05\u6d17\u8f6c\u6362 \u6570\u636e\u6e05\u6d17\u8f6c\u6362\u4e3b\u7528\u4e8e\u6570\u636e\u6b63\u5f0f\u5e94\u7528\u4e4b\u524d\u7684\u9884\u5904\u7406\u5de5\u4f5c\u3002 43. frozenset([iterable]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684frozenset\u5bf9\u8c61\uff0c\u53ef\u9009\u62e9\u4eceiterable\u53d6\u5f97\u7684\u5143\u7d20 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 44. int(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684\u6574\u6570\u90e8\u5206 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 45. isinstance(object, classinfo) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56deobject\u662f\u5426\u662f\u6307\u5b9a\u7684classinfo\u5b9e\u4f8b\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 46. len(s) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u5bf9\u8c61\u7684\u957f\u5ea6\u6216\u9879\u76ee\u6570\u91cf \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 47. long(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u7531\u5b57\u7b26\u4e32\u6216\u6570\u5b57x\u6784\u9020\u7684\u957f\u6574\u578b\u5bf9\u8c61 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 48. max(iterable[, key]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6216\u6700\u5927\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e2d\u7684\u6700\u5927\u9879 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 49. min(iterable[, key]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6216\u6700\u5927\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e2d\u7684\u6700\u5c0f\u9879 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 50. range(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u7528\u4e8e\u4e0efor\u5faa\u73af\u4e00\u8d77\u521b\u5efa\u5faa\u73af\u5217\u8868\uff0c\u901a\u8fc7\u6307\u5b9astart\uff08\u5f00\u59cb\uff09\u3001stop\uff08\u7ed3\u675f\uff09\u548cstep\uff08\u6b65\u957f\uff09\u63a7\u5236\u8fed\u4ee3\u6b21\u6570\u5e76\u83b7\u53d6\u5faa\u73af\u503c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 51. raw_input(prompt) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6355\u83b7\u7528\u6237\u8f93\u5165\u5e76\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de\uff08\u4e0d\u63a8\u8350\u4f7f\u7528input\u4f5c\u4e3a\u7528\u6237\u8f93\u5165\u7684\u6355\u83b7\u51fd\u6570\uff09 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 52. round(number[, ndigits]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56denumber\u5c0f\u6570\u70b9\u540endigits\u4f4d\u7684\u56db\u820d\u4e94\u5165\u7684\u6d6e\u70b9\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 53. set([iterable]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u5bf9\u8c61\uff0c\u53ef\u9009\u62e9\u4eceiterable\u83b7\u53d6\u7684\u5143\u7d20 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 54. slice(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u8868\u793a\u7531\u8303\u56f4\uff08start\u3001stop\u3001step\uff09\u6307\u5b9a\u7684\u7d22\u5f15\u96c6\u7684\u5207\u7247\u5bf9\u8c61 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 55. sorted(iterable[, cmp[, key[, reverse]]]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u4eceiterable\u7684\u9879\u4e2d\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u5217\u8868 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 56. xrange(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6b64\u51fd\u6570\u4e0erange()\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u8fd4\u56de\u4e00\u4e2axrange\u5bf9\u8c61\u800c\u4e0d\u662f\u5217\u8868 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 57. string **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5b57\u7b26\u4e32\u5904\u7406\u5e93\uff0c\u53ef\u5b9e\u73b0\u5b57\u7b26\u4e32\u67e5\u627e\u3001\u5206\u5272\u3001\u7ec4\u5408\u3001\u66ff\u6362\u3001\u53bb\u91cd\u3001\u5927\u5c0f\u5199\u8f6c\u6362\u53ca\u5176\u4ed6\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 58. re **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5757\uff0c\u5728\u6587\u672c\u548c\u5b57\u7b26\u4e32\u5904\u7406\u4e2d\u7ecf\u5e38\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 59. random **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u8be5\u6a21\u5757\u4e3a\u5404\u79cd\u5206\u5e03\u5b9e\u73b0\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u652f\u6301\u6570\u636e\u5747\u5300\u5206\u5e03\u3001\u6b63\u6001\uff08\u9ad8\u65af\uff09\u5206\u5e03\u3001\u5bf9\u6570\u6b63\u6001\u5206\u5e03\u3001\u8d1f\u6307\u6570\u5206\u5e03\u3001\u4f3d\u9a6c\u548c\u03b2\u5206\u5e03\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 60. os **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8e\u65b0\u5efa\u3001\u5220\u9664\u3001\u6743\u9650\u4fee\u6539\u3001\u5207\u6362\u8def\u5f84\u7b49\u76ee\u5f55\u64cd\u4f5c\uff0c\u4ee5\u53ca\u8c03\u7528\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 61. os.path **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u9488\u5bf9\u76ee\u5f55\u7684\u904d\u5386\u3001\u7ec4\u5408\u3001\u5206\u5272\u3001\u5224\u65ad\u7b49\u64cd\u4f5c\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u6587\u4ef6\u7684\u5224\u65ad\u3001\u67e5\u627e\u3001\u5408\u5e76 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 62. prettytable **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u683c\u5f0f\u5316\u8868\u683c\u8f93\u51fa\u6a21\u5757 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 63. json **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u5bf9\u8c61\u4e0ejson\u5bf9\u8c61\u7684\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 64. base64 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5c06\u4efb\u610f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7f16\u7801\u548c\u89e3\u7801\u4e3a\u6587\u672c\u5b57\u7b26\u4e32\u7684Base16\uff0cBase32\u548cBase64 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 05 \u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790 \u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u63a2\u67e5\u3001\u8ba1\u7b97\u548c\u521d\u6b65\u6570\u636e\u5206\u6790\u7b49\u5de5\u4f5c\u3002 65. numpy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NumPy\u662fPython\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5de5\u5177\u5305\uff0c\u5f88\u591aPython\u6570\u636e\u8ba1\u7b97\u5de5\u4f5c\u5e93\u90fd\u4f9d\u8d56\u5b83 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 66. scipy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Scipy\u662f\u4e00\u7ec4\u4e13\u95e8\u89e3\u51b3\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u4e0d\u540c\u573a\u666f\u7684\u4e3b\u9898\u5de5\u5177\u5305 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 67. pandas **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pandas\u662f\u4e00\u4e2a\u7528\u4e8ePython\u6570\u636e\u5206\u6790\u7684\u5e93\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u8fdb\u884c\u6570\u636e\u5206\u6790\u3002Pandas\u63d0\u4f9b\u7528\u4e8e\u8fdb\u884c\u7ed3\u6784\u5316\u6570\u636e\u5206\u6790\u7684\u4e8c\u7ef4\u7684\u8868\u683c\u578b\u6570\u636e\u7ed3\u6784DataFrame\uff0c\u7c7b\u4f3c\u4e8eR\u4e2d\u7684\u6570\u636e\u6846\uff0c\u80fd\u63d0\u4f9b\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u5207\u7247\u3001\u5207\u5757\u3001\u805a\u5408\u3001\u9009\u62e9\u5b50\u96c6\u7b49\u7cbe\u7ec6\u5316\u64cd\u4f5c\uff0c\u4e3a\u6570\u636e\u5206\u6790\u63d0\u4f9b\u4e86\u4fbf\u6377 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 68. statsmodels **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Statsmodels\u662fPython\u7684\u7edf\u8ba1\u5efa\u6a21\u548c\u8ba1\u91cf\u7ecf\u6d4e\u5b66\u5de5\u5177\u5305\uff0c\u5305\u62ec\u4e00\u4e9b\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u7edf\u8ba1\u6a21\u578b\u4f30\u8ba1\u548c\u7edf\u8ba1\u6d4b\u8bd5\uff0c\u96c6\u6210\u4e86\u591a\u79cd\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3001\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3001\u79bb\u6563\u6570\u636e\u5206\u5e03\u6a21\u578b\u3001\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6a21\u578b\u3001\u975e\u53c2\u6570\u4f30\u8ba1\u3001\u751f\u5b58\u5206\u6790\u3001\u4e3b\u6210\u5206\u5206\u6790\u3001\u6838\u5bc6\u5ea6\u4f30\u8ba1\u4ee5\u53ca\u5e7f\u6cdb\u7684\u7edf\u8ba1\u6d4b\u8bd5\u548c\u7ed8\u56fe\u7b49\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 69. abs(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684\u7edd\u5bf9\u503c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 70. cmp(x, y) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61x\u548cy\uff0c\u5e76\u6839\u636e\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002\u5982\u679cx y\u5219\u8fd4\u56de\u503c\u4e3a\u6b63 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 71. float(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4ece\u6570\u5b57\u6216\u5b57\u7b26\u4e32x\u6784\u9020\u7684\u6d6e\u70b9\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 72. pow(x, y[, z]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684y\u6b21\u5e42\u3002\u5982\u679cz\u5b58\u5728\uff0c\u5219\u8fd4\u56dex\u7684y\u6b21\u5e42\uff0c\u6a21z \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 73. sum(iterable[, start]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8fed\u4ee3\uff0c\u8fd4\u56de\u603b\u548c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 74. math **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u6570\u5b66\u51fd\u6570\u5e93\uff0c\u5305\u62ec\u6b63\u5f26\u3001\u4f59\u5f26\u3001\u6b63\u5207\u3001\u4f59\u5207\u3001\u5f27\u5ea6\u8f6c\u6362\u3001\u5bf9\u6570\u8fd0\u7b97\u3001\u5706\u5468\u7387\u3001\u7edd\u5bf9\u503c\u3001\u53d6\u6574\u7b49\u6570\u5b66\u8ba1\u7b97\u65b9\u6cd5 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 75. cmath **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u4e0emath\u57fa\u672c\u4e00\u81f4\uff0c\u533a\u522b\u662fcmath\u8fd0\u7b97\u7684\u662f\u590d\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 76. decimal **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****10\u8fdb\u5236\u6d6e\u70b9\u8fd0\u7b97 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 77. fractions **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5206\u6570\u6a21\u5757\u63d0\u4f9b\u5bf9\u6709\u7406\u6570\u7b97\u672f\u7684\u652f\u6301 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 06 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u6587\u672c\u6316\u6398 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u6587\u672c\u6316\u6398\u5e93\u4e3b\u8981\u7528\u4e8e\u4ee5\u81ea\u7136\u8bed\u8a00\u6587\u672c\u4e3a\u5bf9\u8c61\u7684\u6570\u636e\u5904\u7406\u548c\u5efa\u6a21\u3002 78. nltk **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NLTK\u662f\u4e00\u4e2aPython\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\uff0c\u5b83\u7528\u4e8e\u5bf9\u81ea\u7136\u8bed\u8a00\u8fdb\u884c\u5206\u7c7b\u3001\u89e3\u6790\u548c\u8bed\u4e49\u7406\u89e3\u3002\u76ee\u524d\u5df2\u7ecf\u6709\u8d85\u8fc750\u79cd\u8bed\u6599\u5e93\u548c\u8bcd\u6c47\u8d44\u6e90 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 79. pattern **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pattern\u662f\u4e00\u4e2a\u7f51\u7edc\u6570\u636e\u6316\u6398Python\u5de5\u5177\u5305\uff0c\u63d0\u4f9b\u4e86\u7528\u4e8e\u7f51\u7edc\u6316\u6398\uff08\u5982\u7f51\u7edc\u670d\u52a1\u3001\u7f51\u7edc\u722c\u866b\u7b49\uff09\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08\u5982\u8bcd\u6027\u6807\u6ce8\u3001\u60c5\u611f\u5206\u6790\u7b49\uff09\u3001\u673a\u5668\u5b66\u4e60\uff08\u5982\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u3001\u5206\u7c7b\u6a21\u578b\u7b49\uff09\u3001\u56fe\u5f62\u5316\u7684\u7f51\u7edc\u5206\u6790\u6a21\u578b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 80. gensim **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Gensim\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u4e3b\u9898\u6a21\u578b\uff08\u53d1\u6398\u6587\u5b57\u4e2d\u9690\u542b\u4e3b\u9898\u7684\u4e00\u79cd\u7edf\u8ba1\u5efa\u6a21\u65b9\u6cd5\uff09Python\u5de5\u5177\u5305\uff0c\u7528\u6765\u63d0\u4f9b\u53ef\u6269\u5c55\u7edf\u8ba1\u8bed\u4e49\u3001\u5206\u6790\u7eaf\u6587\u672c\u8bed\u4e49\u7ed3\u6784\u4ee5\u53ca\u68c0\u7d22\u8bed\u4e49\u4e0a\u76f8\u4f3c\u7684\u6587\u6863 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 81. \u7ed3\u5df4\u5206\u8bcd **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7ed3\u5df4\u5206\u8bcd\u662f\u56fd\u5185\u6d41\u884c\u7684Python\u6587\u672c\u5904\u7406\u5de5\u5177\u5305\uff0c\u5206\u8bcd\u6a21\u5f0f\u5206\u4e3a\u4e09\u79cd\u6a21\u5f0f\uff1a\u7cbe\u786e\u6a21\u5f0f\u3001\u5168\u6a21\u5f0f\u548c\u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\uff0c\u652f\u6301\u7e41\u4f53\u5206\u8bcd\u3001\u81ea\u5b9a\u4e49\u8bcd\u5178\u7b49\uff0c\u662f\u975e\u5e38\u597d\u7684Python\u4e2d\u6587\u5206\u8bcd\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u8bcd\u3001\u8bcd\u5178\u7ba1\u7406\u3001\u5173\u952e\u5b57\u62bd\u53d6\u3001\u8bcd\u6027\u6807\u6ce8\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 82. SnowNLP **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SnowNLP\u662f\u4e00\u4e2aPython\u5199\u7684\u7c7b\u5e93\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5904\u7406\u4e2d\u6587\u6587\u672c\u5185\u5bb9\u3002\u8be5\u5e93\u662f\u53d7\u5230\u4e86TextBlob\u7684\u542f\u53d1\u800c\u9488\u5bf9\u4e2d\u6587\u5904\u7406\u5199\u7684\u7c7b\u5e93\uff0c\u548cTextBlob\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u6ca1\u6709\u7528NLTK\uff0c\u6240\u6709\u7684\u7b97\u6cd5\u90fd\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u81ea\u5e26\u4e86\u4e00\u4e9b\u8bad\u7ec3\u597d\u7684\u5b57\u5178 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 83. smallseg **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Smallseg\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u57fa\u4e8eDFA\u7684\u8f7b\u91cf\u7ea7\u7684\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u5305\u3002\u53ef\u81ea\u5b9a\u4e49\u8bcd\u5178\u3001\u5207\u5272\u540e\u8fd4\u56de\u767b\u5f55\u8bcd\u5217\u8868\u548c\u672a\u767b\u5f55\u8bcd\u5217\u8868\u3001\u6709\u4e00\u5b9a\u7684\u65b0\u8bcd\u8bc6\u522b\u80fd\u529b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 84. spaCy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****spaCy\u662f\u4e00\u4e2aPython\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\uff0c\u5b83\u7ed3\u5408Python\u548cCython\u4f7f\u5f97\u81ea\u7136\u8bed\u8a00\u5904\u7406\u80fd\u529b\u8fbe\u5230\u4e86\u5de5\u4e1a\u5f3a\u5ea6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 85. TextBlob **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TextBlob \u662f\u4e00\u4e2a\u5904\u7406\u6587\u672c\u6570\u636e\u7684Python\u5e93\uff0c\u53ef\u7528\u6765\u505a\u8bcd\u6027\u6807\u6ce8\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u7ffb\u8bd1\u3001\u540d\u8bcd\u77ed\u8bed\u62bd\u53d6\u3001\u6587\u672c\u5206\u7c7b\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 86. PyNLPI **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyNLPI\u662f\u4e00\u4e2a\u9002\u5408\u5404\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u7684\u96c6\u5408\u5e93\uff0c\u53ef\u7528\u4e8e\u4e2d\u6587\u6587\u672c\u5206\u8bcd\u3001\u5173\u952e\u5b57\u5206\u6790\u7b49\uff0c\u5c24\u5176\u91cd\u8981\u7684\u662f\u5176\u652f\u6301\u4e2d\u82f1\u6587\u6620\u5c04\uff0c\u652f\u6301UTF-8\u548cGBK\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 87. synonyms **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\uff0c\u53ef\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u5f88\u591a\u4efb\u52a1\uff1a\u6587\u672c\u5bf9\u9f50\uff0c\u63a8\u8350\u7b97\u6cd5\uff0c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff0c\u8bed\u4e49\u504f\u79fb\uff0c\u5173\u952e\u5b57\u63d0\u53d6\uff0c\u6982\u5ff5\u63d0\u53d6\uff0c\u81ea\u52a8\u6458\u8981\uff0c\u641c\u7d22\u5f15\u64ce\u7b49\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 07 \u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406 \u56fe\u50cf\u5904\u7406\u548c\u89c6\u9891\u5904\u7406\u4e3b\u8981\u9002\u7528\u4e8e\u57fa\u4e8e\u56fe\u50cf\u7684\u64cd\u4f5c\u3001\u5904\u7406\u3001\u5206\u6790\u548c\u6316\u6398\uff0c\u5982\u4eba\u8138\u8bc6\u522b\u3001\u56fe\u50cf\u8bc6\u522b\u3001\u76ee\u6807\u8ddf\u8e2a\u3001\u56fe\u50cf\u7406\u89e3\u7b49\u3002 88. PIL/Pillow **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PIL\u662f\u4e00\u4e2a\u5e38\u7528\u7684\u56fe\u50cf\u8bfb\u53d6\u3001\u5904\u7406\u548c\u5206\u6790\u7684\u5e93\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u6570\u636e\u5904\u7406\u3001\u53d8\u6362\u7684\u64cd\u4f5c\u65b9\u6cd5\u548c\u5c5e\u6027\u3002PIL\u4ec5\u652f\u6301\u52302.7\u7248\u672c\u4e14\u5df2\u7ecf\u5f88\u4e45\u6ca1\u6709\u66f4\u65b0\uff0c\u4e00\u7fa4\u5fd7\u613f\u8005\u57fa\u4e8ePIL\u53d1\u5e03\u4e86\u65b0\u7684\u5206\u652fPillow\u3002Pillow\u540c\u65f6\u652f\u6301Python2\u548cPython3\u5e76\u4e14\u52a0\u5165\u5f88\u591a\u65b0\u7684\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605 89. OpenCV **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****OpenCV\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u56fe\u50cf\u548c\u89c6\u9891\u5de5\u4f5c\u5e93\u3002\u5b83\u63d0\u4f9b\u4e86\u591a\u79cd\u7a0b\u5e8f\u63a5\u53e3\uff0c\u652f\u6301\u8de8\u5e73\u53f0\uff08\u5305\u62ec\u79fb\u52a8\u7aef\uff09\u5e94\u7528\u3002OpenCV\u7684\u8bbe\u8ba1\u6548\u7387\u5f88\u9ad8\uff0c\u5b83\u4ee5\u4f18\u5316\u7684C / C ++\u7f16\u5199\uff0c\u5e93\u53ef\u4ee5\u5229\u7528\u591a\u6838\u5904\u7406\u3002\u9664\u4e86\u5bf9\u56fe\u50cf\u8fdb\u884c\u57fa\u672c\u5904\u7406\u5916\uff0c\u8fd8\u652f\u6301\u56fe\u50cf\u6570\u636e\u5efa\u6a21\uff0c\u5e76\u9884\u5236\u4e86\u591a\u79cd\u56fe\u50cf\u8bc6\u522b\u5f15\u64ce\uff0c\u5982\u4eba\u8138\u8bc6\u522b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 90. scikit-image **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****scikit-image\uff08\u4e5f\u79f0skimage\uff09\u662f\u4e00\u4e2a\u56fe\u50cf\u5904\u7406\u5e93\uff0c\u652f\u6301\u989c\u8272\u6a21\u5f0f\u8f6c\u6362\u3001\u6ee4\u955c\u3001\u7ed8\u56fe\u3001\u56fe\u50cf\u5904\u7406\u3001\u7279\u5f81\u68c0\u6d4b\u7b49\u591a\u79cd\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605 91. imageop **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u5bf9\u56fe\u50cf\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ec\u88c1\u526a\u3001\u7f29\u653e\u3001\u6a21\u5f0f\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605 92. colorsys **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0d\u540c\u56fe\u50cf\u8272\u5f69\u6a21\u5f0f\u7684\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605 93. imghdr **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u56fe\u50cf\u6587\u4ef6\u7684\u7c7b\u578b \u63a8\u8350\u5ea6\uff1a \u2605 08 \u97f3\u9891\u5904\u7406 \u97f3\u9891\u5904\u7406\u4e3b\u8981\u9002\u7528\u4e8e\u57fa\u4e8e\u58f0\u97f3\u7684\u5904\u7406\u3001\u5206\u6790\u548c\u5efa\u6a21\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u8bed\u97f3\u8bc6\u522b\u3001\u8bed\u97f3\u5408\u6210\u3001\u8bed\u4e49\u7406\u89e3\u7b49\u3002 94. TimeSide **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TimeSide\u662f\u4e00\u4e2a\u80fd\u591f\u8fdb\u884c\u97f3\u9891\u5206\u6790\u3001\u6210\u50cf\u3001\u8f6c\u7801\u3001\u6d41\u5a92\u4f53\u548c\u6807\u7b7e\u5904\u7406\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u5bf9\u4efb\u4f55\u97f3\u9891\u6216\u89c6\u9891\u5185\u5bb9\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u8fdb\u884c\u590d\u6742\u7684\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 95. audiolazy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****audiolazy\u662f\u4e00\u4e2a\u7528\u4e8e\u5b9e\u65f6\u58f0\u97f3\u6570\u636e\u6d41\u5904\u7406\u7684\u5e93\uff0c\u652f\u6301\u5b9e\u65f6\u6570\u636e\u5e94\u7528\u5904\u7406\u3001\u65e0\u9650\u6570\u636e\u5e8f\u5217\u8868\u793a\u3001\u6570\u636e\u6d41\u8868\u793a\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 96. pydub **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****pydub\u652f\u6301\u591a\u79cd\u683c\u5f0f\u58f0\u97f3\u6587\u4ef6\uff0c\u53ef\u8fdb\u884c\u591a\u79cd\u4fe1\u53f7\u5904\u7406\uff08\u4f8b\u5982\u538b\u7f29\u3001\u5747\u8861\u3001\u5f52\u4e00\u5316\uff09\u3001\u4fe1\u53f7\u751f\u6210\uff08\u4f8b\u5982\u6b63\u5f26\u3001\u65b9\u6ce2\u3001\u952f\u9f7f\u7b49\uff09\u3001\u97f3\u6548\u6ce8\u518c\u3001\u9759\u97f3\u5904\u7406\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 97. audioop **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u53ef\u5b9e\u73b0\u5bf9\u58f0\u97f3\u7247\u6bb5\u7684\u4e00\u4e9b\u5e38\u7528\u64cd\u4f5c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 98. tinytag **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****tinytag\u7528\u4e8e\u8bfb\u53d6\u591a\u79cd\u58f0\u97f3\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u6db5\u76d6MP3\u3001OGG\u3001OPUS\u3001MP4\u3001M4A\u3001FLAC\u3001WMA\u3001Wave\u7b49\u683c\u5f0f \u63a8\u8350\u5ea6\uff1a \u2605\u2605 99. aifc **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199AIFF\u548cAIFC\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 100. sunau **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199Sun AU\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 101. wave **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199WAV\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 102. chunk **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u53d6EA IFF 85\u5757\u683c\u5f0f\u7684\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 103. sndhdr **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u58f0\u97f3\u6587\u4ef6\u7684\u7c7b\u578b \u63a8\u8350\u5ea6\uff1a \u2605 104. ossaudiodev **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u8be5\u6a21\u5757\u652f\u6301\u8bbf\u95eeOSS\uff08\u5f00\u653e\u58f0\u97f3\u7cfb\u7edf\uff09\u97f3\u9891\u63a5\u53e3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 09 \u6570\u636e\u6316\u6398/\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60 \u6570\u636e\u6316\u6398\u3001\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u7b49\u662fPython\u8fdb\u884c\u6570\u636e\u5efa\u6a21\u548c\u6316\u6398\u5b66\u4e60\u7684\u6838\u5fc3\u6a21\u5757\u3002 105. Scikit-Learn **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****scikit-learn\uff08\u4e5f\u79f0SKlearn\uff09\u662f\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u673a\u5668\u5b66\u4e60\u7efc\u5408\u5e93\uff0c\u5185\u7f6e\u76d1\u7763\u5f0f\u5b66\u4e60\u548c\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\uff0c\u5305\u62ec\u5404\u79cd\u56de\u5f52\u3001\u805a\u7c7b\u3001\u5206\u7c7b\u3001\u6d41\u5f0f\u5b66\u4e60\u3001\u5f02\u5e38\u68c0\u6d4b\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u96c6\u6210\u65b9\u6cd5\u7b49\u4e3b\u6d41\u7b97\u6cd5\u7c7b\u522b\uff0c\u540c\u65f6\u652f\u6301\u9884\u7f6e\u6570\u636e\u96c6\u3001\u6570\u636e\u9884\u5904\u7406\u3001\u6a21\u578b\u9009\u62e9\u548c\u8bc4\u4f30\u7b49\u65b9\u6cd5\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u5b8c\u6574\u3001\u6d41\u884c\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 106. TensorFlow **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TensorFlow \u662f\u8c37\u6b4c\u7684\u7b2c\u4e8c\u4ee3\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff0c\u5185\u5efa\u6df1\u5ea6\u5b66\u4e60\u7684\u6269\u5c55\u652f\u6301\uff0c\u4efb\u4f55\u80fd\u591f\u7528\u8ba1\u7b97\u6d41\u56fe\u5f62\u6765\u8868\u8fbe\u7684\u8ba1\u7b97\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 107. NuPIC **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NuPIC\u662f\u4e00\u4e2a\u4ee5HTM\uff08\u5206\u5c42\u65f6\u95f4\u8bb0\u5fc6\uff09\u5b66\u4e60\u7b97\u6cd5\u4e3a\u5de5\u5177\u7684\u673a\u5668\u667a\u80fd\u5e73\u53f0\u3002NuPIC\u9002\u5408\u4e8e\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u68c0\u6d4b\u5f02\u5e38\u548c\u9884\u6d4b\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 108. PyTorch **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyTorch\u662fFaceBook\u63a8\u51fa\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u5b83\u57fa\u4e8ePython\uff08\u800c\u975elua\uff09\u4ea7\u751f\uff0c\u5b83\u63d0\u4f9b\u7684\u52a8\u6001\u8ba1\u7b97\u56fe\u662f\u663e\u8457\u533a\u522b\u4e8eTensorflow\u7b49\u5176\u4ed6\u5b66\u4e60\u6846\u67b6\u7684\u5730\u65b9\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 109. Orange **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Orange\u901a\u8fc7\u56fe\u5f62\u5316\u64cd\u4f5c\u754c\u9762\uff0c\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u6570\u636e\u5206\u6790\u529f\u80fd\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u5206\u7c7b\u3001\u805a\u7c7b\u3001\u56de\u5f52\u3001\u7279\u5f81\u9009\u62e9\u548c\u4ea4\u53c9\u9a8c\u8bc1\u5de5\u4f5c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 110. theano **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Theano\u662f\u975e\u5e38\u6210\u719f\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\u3002\u5b83\u4e0eNumpy\u7d27\u5bc6\u96c6\u6210\uff0c\u652f\u6301GPU\u8ba1\u7b97\u3001\u5355\u5143\u6d4b\u8bd5\u548c\u81ea\u6211\u9a8c\u8bc1 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 111. keras **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Keras\u662f\u4e00\u4e2a\u7528Python\u7f16\u5199\u7684\u9ad8\u7ea7\u795e\u7ecf\u7f51\u7edcAPI\uff0c\u80fd\u591f\u8fd0\u884c\u5728TensorFlow\u6216\u8005Theano\u4e4b\u4e0a\uff0c\u5b83\u7684\u5f00\u53d1\u91cd\u70b9\u662f\u5b9e\u73b0\u5feb\u901f\u5b9e\u9a8c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 112. neurolab **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Neurolab\u662f\u5177\u6709\u7075\u6d3b\u7f51\u7edc\u914d\u7f6e\u548cPython\u5b66\u4e60\u7b97\u6cd5\u7684\u57fa\u672c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u5e93\u3002\u5b83\u5305\u542b\u901a\u8fc7\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u5b9e\u73b0\u7684\u4e0d\u540c\u53d8\u4f53\uff0c\u8be5\u5e93\u662f\u540c\u7c7bRNN API\u4e2d\u6700\u597d\u7684\u9009\u62e9\u4e4b\u4e00 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 113. PyLearn2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyLearn2\u662f\u57fa\u4e8eTheano\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u5b83\u65e8\u5728\u63d0\u4f9b\u6781\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4f7f\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u8fdb\u884c\u81ea\u7531\u53ef\u63a7\u5236\uff0c\u53c2\u6570\u548c\u5c5e\u6027\u7684\u7075\u6d3b\u3001\u5f00\u653e\u914d\u7f6e\u662f\u4eae\u70b9 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 114. OverFeat **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****OverFeat\u662f\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u56fe\u7247\u5206\u7c7b\u3001\u5b9a\u4f4d\u7269\u4f53\u68c0\u6d4b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 115. Pyevolve **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pyevolve\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9057\u4f20\u7b97\u6cd5\u6846\u67b6\uff0c\u4e5f\u652f\u6301\u9057\u4f20\u7f16\u7a0b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 116. Caffe2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Cafffe2\u4e5f\u662fFaceBook\u63a8\u51fa\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u76f8\u6bd4\u4e8ePyTorch \u66f4\u9002\u5408\u4e8e\u7814\u7a76\uff0cCaffe2 \u9002\u5408\u5927\u89c4\u6a21\u90e8\u7f72\uff0c\u4e3b\u8981\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u5b83\u5bf9\u56fe\u50cf\u8bc6\u522b\u7684\u5206\u7c7b\u5177\u6709\u5f88\u597d\u7684\u5e94\u7528\u6548\u679c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 10 \u6570\u636e\u53ef\u89c6\u5316 \u6570\u636e\u53ef\u89c6\u5316\u4e3b\u8981\u7528\u4e8e\u505a\u6570\u636e\u7ed3\u679c\u5c55\u793a\u3001\u6570\u636e\u6a21\u578b\u9a8c\u8bc1\u3001\u56fe\u5f62\u4ea4\u4e92\u548c\u63a2\u67e5\u7b49\u65b9\u9762\u3002 117. Matplotlib **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Matplotlib\u662fPython\u76842D\u7ed8\u56fe\u5e93\uff0c\u5b83\u4ee5\u5404\u79cd\u786c\u62f7\u8d1d\u683c\u5f0f\u548c\u8de8\u5e73\u53f0\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u751f\u6210\u51fa\u7248\u8d28\u91cf\u7ea7\u522b\u7684\u56fe\u5f62\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4ec5\u9700\u8981\u51e0\u884c\u4ee3\u7801\uff0c\u4fbf\u53ef\u4ee5\u751f\u6210\u591a\u79cd\u9ad8\u8d28\u91cf\u56fe\u5f62 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 118. pyecharts **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u57fa\u4e8e\u767e\u5ea6Echarts\u7684\u5f3a\u5927\u7684\u53ef\u89c6\u5316\u5de5\u5177\u5e93\uff0c\u5176\u63d0\u4f9b\u7684\u56fe\u5f62\u529f\u80fd\u4f17\u591a\uff0c\u5c24\u5176\u5bf9\u4e8e\u590d\u6742\u5173\u7cfb\u7684\u5c55\u793a\u80fd\u529b\u8f83\u5f3a \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 119. seaborn **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Seaborn\u662f\u5728Matplotlib\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u66f4\u9ad8\u7ea7\u7684API\u5c01\u88c5\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3aMatplotlib\u7684\u8865\u5145 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 120. bokeh **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Bokeh\u662f\u4e00\u79cd\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u5e93\uff0c\u53ef\u4ee5\u5728WEB\u6d4f\u89c8\u5668\u4e2d\u5b9e\u73b0\u7f8e\u89c2\u7684\u89c6\u89c9\u6548\u679c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 121. Plotly **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Plotly\u63d0\u4f9b\u7684\u56fe\u5f62\u5e93\u53ef\u4ee5\u8fdb\u884c\u5728\u7ebfWEB\u4ea4\u4e92\uff0c\u5e76\u63d0\u4f9b\u5177\u6709\u51fa\u7248\u54c1\u8d28\u7684\u56fe\u5f62\uff0c\u652f\u6301\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u533a\u57df\u56fe\u3001\u6761\u5f62\u56fe\u3001\u8bef\u5dee\u6761\u3001\u6846\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u70ed\u56fe\u3001\u5b50\u56fe\u3001\u591a\u8f74\u3001\u6781\u5750\u6807\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u73ab\u7470\u56fe\u3001\u70ed\u529b\u56fe\u3001\u6f0f\u6597\u56fe\u7b49\u4f17\u591a\u56fe\u5f62 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 122. VisPy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****VisPy\u662f\u7528\u4e8e\u4ea4\u4e92\u5f0f\u79d1\u5b66\u53ef\u89c6\u5316\u7684Python\u5e93\uff0c\u65e8\u5728\u5b9e\u73b0\u5feb\u901f\uff0c\u53ef\u6269\u5c55\u548c\u6613\u4e8e\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 123. PyQtGraph **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyQtGraph\u662f\u4e00\u4e2a\u5efa\u7acb\u5728PyQt4 / PySide\u548cnumpy\u4e4b\u4e0a\u7684\u7eafPython\u56fe\u5f62\u548cGUI\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u5b66/\u79d1\u5b66/\u5de5\u7a0b\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 124. ggplot **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ggplot\u662f\u7528Python\u5b9e\u73b0\u7684\u56fe\u5f62\u8f93\u51fa\u5e93\uff0c\u7c7b\u4f3c\u4e8e R\u4e2d\u7684\u56fe\u5f62\u5c55\u793a\u7248\u672c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 11 \u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1 \u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1\u4e3b\u8981\u7528\u6765\u505aPython\u5f00\u53d1\u3001\u8c03\u8bd5\u548c\u96c6\u6210\u4e4b\u7528\uff0c\u5305\u62ecPython\u96c6\u6210\u5f00\u53d1\u73af\u5883\u548cIDE\u3002 125. IPython/ Jupyter **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****IPython \u662f\u4e00\u4e2a\u57fa\u4e8ePython \u7684\u4ea4\u4e92\u5f0fshell\uff0c\u6bd4\u9ed8\u8ba4\u7684Python shell \u597d\u7528\u5f97\u591a\uff0c\u652f\u6301\u53d8\u91cf\u81ea\u52a8\u8865\u5168\u3001\u81ea\u52a8\u7f29\u8fdb\u3001\u4ea4\u4e92\u5f0f\u5e2e\u52a9\u3001\u9b54\u6cd5\u547d\u4ee4\u3001\u7cfb\u7edf\u547d\u4ee4\u7b49\uff0c\u5185\u7f6e\u4e86\u8bb8\u591a\u5f88\u6709\u7528\u7684\u529f\u80fd\u548c\u51fd\u6570\u3002\u4eceIPython4.0\u5f00\u59cb\uff0cIPython\u884d\u751f\u51fa\u4e86IPython\u548cJupyter\u4e24\u4e2a\u5206\u652f\u3002\u5728\u8be5\u5206\u652f\u6b63\u5f0f\u51fa\u73b0\u4e4b\u524d\uff0cIPython\u5176\u5b9e\u5df2\u7ecf\u62e5\u6709\u4e86ipython notebook\u529f\u80fd\uff0c\u56e0\u6b64\uff0cJupyter\u66f4\u50cf\u662f\u4e00\u4e2aipython notebook\u7684\u5347\u7ea7\u7248\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 126. Elpy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Elpy\u662fEmacs\u7528\u4e8ePython\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5b83\u7ed3\u5408\u5e76\u914d\u7f6e\u4e86\u8bb8\u591a\u5176\u4ed6\u8f6f\u4ef6\u5305\uff0c\u5b83\u4eec\u90fd\u662f\u7528Emacs Lisp\u548cPython\u7f16\u5199\u7684 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 127. PTVS **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Visual Studio \u7684 Python \u5de5\u5177 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 128. PyCharm **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****PyCharm\u5e26\u6709\u4e00\u6574\u5957\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5728\u4f7f\u7528Python\u8bed\u8a00\u5f00\u53d1\u65f6\u63d0\u9ad8\u5176\u6548\u7387\u7684\u5de5\u5177\uff0c\u6bd4\u5982\u8c03\u8bd5\u3001\u8bed\u6cd5\u9ad8\u4eae\u3001\u9879\u76ee\u7ba1\u7406\u3001\u4ee3\u7801\u8df3\u8f6c\u3001\u667a\u80fd\u63d0\u793a\u3001\u81ea\u52a8\u5b8c\u6210\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u7248\u672c\u63a7\u5236\u5e76\u53ef\u96c6\u6210IPython\u3001\u7cfb\u7edf\u7ec8\u7aef\u547d\u4ee4\u884c\u7b49\uff0c\u5728PyCharm\u91cc\u51e0\u4e4e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6240\u6709\u6709\u5173Python\u5de5\u4f5c\u7684\u5168\u90e8\u8fc7\u7a0b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 129. LiClipse **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****LiClipse\u662f\u57fa\u4e8eEclipse\u7684\u514d\u8d39\u591a\u8bed\u8a00 IDE\uff0c\u901a\u8fc7\u5176\u4e2d\u7684PyDev\u53ef\u652f\u6301 Python\u5f00\u53d1\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 130. Spyder **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****Spyder\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python IDE\uff0c\u7531IPython\u548c\u4f17\u591a\u6d41\u884c\u7684Python\u5e93\u7684\u652f\u6301\uff0c\u662f\u4e00\u4e2a\u5177\u5907\u9ad8\u7ea7\u7f16\u8f91\u3001\u4ea4\u4e92\u5f0f\u6d4b\u8bd5\u3001\u8c03\u8bd5\u4ee5\u53ca\u6570\u5b57\u8ba1\u7b97\u73af\u5883\u7684\u4ea4\u4e92\u5f0f\u5f00\u53d1\u73af\u5883 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 12 \u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177 \u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177\u6307\u9664\u4e86\u4e0a\u8ff0\u4e3b\u9898\u4ee5\u5916\uff0c\u5176\u4ed6\u5728\u6570\u636e\u5de5\u4f5c\u4e2d\u5e38\u7528\u7684\u5de5\u5177\u6216\u5e93\u3002 131. tesseract-ocr **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****\u8fd9\u662f\u4e00\u4e2aGoogle\u652f\u6301\u7684\u5f00\u6e90OCR\u56fe\u6587\u8bc6\u522b\u9879\u76ee\uff0c\u652f\u6301\u8d85\u8fc7200\u79cd\u8bed\u8a00\uff08\u5305\u62ec\u4e2d\u6587\uff09\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u8bad\u7ec3\u5b57\u7b26\u96c6\uff0c\u652f\u6301\u8de8Windows\u3001Linux\u3001Mac OSX \u591a\u5e73\u53f0\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 132. RPython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****R\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 133. Rpy2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u8fde\u63a5R\u7684\u5e93 134. matpython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MATLAB\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 135. Lunatic Python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Lua\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 136. PyCall.jl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Julia\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 137. PySpark **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Spark\u63d0\u4f9b\u7684Python API \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 138. dumbo **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u8fd9\u4e2a\u6a21\u5757\u53ef\u4ee5\u8ba9Pythoner\u8f7b\u677e\u7684\u7f16\u5199\u548c\u8fd0\u884c Hadoop \u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7248\u672c\u6bd4\u8f83\u65e9\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 139. dpark **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u5bf9Spark\u7684\u514b\u9686\u7248\u672c\uff0c\u7c7bMapReduce\u6846\u67b6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 140. streamparse **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Streamparse\u5141\u8bb8\u901a\u8fc7Storm\u5bf9\u5b9e\u65f6\u6570\u636e\u6d41\u8fd0\u884cPython\u4ee3\u7801 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605","title":"052 140\u79cdPython\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u548c\u5916\u90e8\u5de5\u5177\u90fd\u6709\u4e86"},{"location":"python\u5b66\u4e60/052-140\u79cdPython\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u548c\u5916\u90e8\u5de5\u5177\u90fd\u6709\u4e86/#140python","text":"\u539f\u521b\uff1a \u5b8b\u5929\u9f99 \u5927\u6570\u636e \u4eca\u5929 **\u5bfc\u8bfb\uff1a**Python\u6570\u636e\u5de5\u5177\u7bb1\u6db5\u76d6\u4ece\u6570\u636e\u6e90\u5230\u6570\u636e\u53ef\u89c6\u5316\u7684\u5b8c\u6574\u6d41\u7a0b\u4e2d\u6d89\u53ca\u5230\u7684\u5e38\u7528\u5e93\u3001\u51fd\u6570\u548c\u5916\u90e8\u5de5\u5177\u3002\u5176\u4e2d\u65e2\u6709Python\u5185\u7f6e\u51fd\u6570\u548c\u6807\u51c6\u5e93\uff0c\u53c8\u6709\u7b2c\u4e09\u65b9\u5e93\u548c\u5de5\u5177\u3002 \u8fd9\u4e9b\u5e93\u53ef\u7528\u4e8e\u6587\u4ef6\u8bfb\u5199\u3001\u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790\u3001\u6570\u636e\u8fde\u63a5\u3001\u6570\u6e05\u6d17\u8f6c\u6362\u3001\u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790\u3001\u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406\u3001\u97f3\u9891\u5904\u7406\u3001\u6570\u636e\u6316\u6398/\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60\u3001\u6570\u636e\u53ef\u89c6\u5316\u3001\u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1\u4ee5\u53ca\u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177\u3002 \u4f5c\u8005\uff1a\u5b8b\u5929\u9f99 \u5982\u9700\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5927\u6570\u636e\uff08ID\uff1ahzdashuju\uff09 \u4e3a\u4e86\u533a\u5206\u4e0d\u540c\u5bf9\u8c61\u7684\u6765\u6e90\u548c\u7c7b\u578b\uff0c\u672c\u6587\u5c06\u5728\u63cf\u8ff0\u4e2d\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u6807\u8bc6\uff1a **Python\u5185\u7f6e\u51fd\u6570\uff1a**Python\u81ea\u5e26\u7684\u5185\u7f6e\u51fd\u6570\u3002\u51fd\u6570\u65e0\u9700\u5bfc\u5165\uff0c\u76f4\u63a5\u4f7f\u7528\u3002\u4f8b\u5982\u8981\u8ba1\u7b97-3.2\u7684\u7edd\u5bf9\u503c\uff0c\u76f4\u63a5\u4f7f\u7528abs\u51fd\u6570\uff0c\u65b9\u6cd5\u662f abs(-3.2) **Python\u6807\u51c6\u5e93\uff1a**Python\u81ea\u5e26\u7684\u6807\u51c6\u5e93\u3002Python\u6807\u51c6\u5e93\u65e0\u9700\u5b89\u88c5\uff0c\u53ea\u9700\u8981\u5148\u901a\u8fc7import\u65b9\u6cd5\u5bfc\u5165\u4fbf\u53ef\u4f7f\u7528\u5176\u4e2d\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\u5bfc\u5165string\u6a21\u5757\uff0c\u7136\u540e\u4f7f\u7528\u5176\u4e2d\u7684find\u65b9\u6cd5\uff1a import string **\u7b2c\u4e09\u65b9\u5e93\uff1a**Python\u7684\u7b2c\u4e09\u65b9\u5e93\u3002\u8fd9\u4e9b\u5e93\u9700\u8981\u5148\u8fdb\u884c\u5b89\u88c5\uff08\u90e8\u5206\u53ef\u80fd\u9700\u8981\u914d\u7f6e\uff09\u3002 **\u5916\u90e8\u5de5\u5177\uff1a**\u975ePython\u5199\u6210\u7684\u5e93\u6216\u5305\uff0c\u7528\u4e8ePython\u6570\u636e\u5de5\u4f5c\u7684\u76f8\u5173\u5de5\u5177\u3002 \u300c \u63a8\u8350\u5ea6 \u300d3\u661f\u6700\u9ad8\uff0c1\u661f\u6700\u4f4e\u3002 01 \u6587\u4ef6\u8bfb\u5199 \u6587\u4ef6\u7684\u8bfb\u5199\u5305\u62ec\u5e38\u89c1\u7684txt\u3001Excel\u3001xml\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u53ca\u5176\u4ed6\u683c\u5f0f\u7684\u6570\u636e\u6587\u672c\uff0c\u4e3b\u8981\u7528\u4e8e\u672c\u5730\u6570\u636e\u7684\u8bfb\u5199\u3002 1. open(name[, mode[, buffering]]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 **\u63cf\u8ff0\uff1a**Python\u9ed8\u8ba4\u7684\u6587\u4ef6\u8bfb\u5199\u65b9\u6cd5 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 2. numpy.loadtxt\u3001numpy.load\u548cnumpy.fromfile **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 **\u63cf\u8ff0\uff1a**Numpy\u81ea\u5e26\u7684\u8bfb\u5199\u51fd\u6570\uff0c\u5305\u62ecloadtxt\u3001load\u548cfromfile\uff0c\u7528\u4e8e\u6587\u672c\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 3. pandas.read_* **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 **\u63cf\u8ff0\uff1a**Pandas\u81ea\u5e26\u7684read\u6587\u4ef6\u65b9\u6cd5\uff0c\u4f8b\u5982ead_csv\u3001read_fwf\u3001read_table\u7b49\uff0c\u7528\u4e8e\u6587\u672c\u3001Excel\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001HDF5\u3001\u8868\u683c\u3001SAS\u6587\u4ef6\u3001SQL\u6570\u636e\u5e93\u3001Stata\u6587\u4ef6\u7b49\u7684\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 4. xlrd **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u53d6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 5. xlwt **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u5199\u5165 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 6. pyexcel-xl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 7. xluntils **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 8. pyExcelerator **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605 9. openpyxl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8eExcel\u6587\u4ef6\u8bfb\u5199 \u63a8\u8350\u5ea6\uff1a \u2605 10. lxml **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****xml\u548cHTML\u8bfb\u53d6\u548c\u89e3\u6790 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 11. xml **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 12. libxml2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605 13. xpath **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ******\u63cf\u8ff0\uff1a******xml\u5bf9\u8c61\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 14. win32com **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u6709\u5173Windows\u7cfb\u7edf\u64cd\u4f5c\u3001Office\uff08Word\u3001Excel\u7b49\uff09\u6587\u4ef6\u8bfb\u5199\u7b49\u7684\u7efc\u5408\u5e94\u7528\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605 02 \u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790 \u7f51\u7edc\u6293\u53d6\u548c\u89e3\u6790\u7528\u4e8e\u4ece\u4e92\u8054\u7f51\u4e2d\u6293\u53d6\u4fe1\u606f\uff0c\u5e76\u5bf9HTML\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\uff0c\u6709\u5173xml\u5bf9\u8c61\u7684\u89e3\u6790\u548c\u5904\u7406\u7684\u5e93\u5728\u201c01 \u6587\u4ef6\u8bfb\u5199\u201d\u4e2d\u627e\u5230\u3002 15. requests **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7f51\u7edc\u8bf7\u6c42\u5e93\uff0c\u63d0\u4f9b\u591a\u79cd\u7f51\u7edc\u8bf7\u6c42\u65b9\u6cd5\u5e76\u53ef\u5b9a\u4e49\u590d\u6742\u7684\u53d1\u9001\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 16. urllib **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u5e93\uff0c\u7b80\u5355\u7684\u8bfb\u53d6\u7279\u5b9aURL\u5e76\u83b7\u5f97\u8fd4\u56de\u7684\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605 17. urllib2 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u5e93\uff0c\u8bfb\u53d6\u7279\u5b9aURL\u5e76\u83b7\u5f97\u8fd4\u56de\u7684\u4fe1\u606f\uff0c\u76f8\u5bf9\u4e8eurllib\u53ef\u5904\u7406\u66f4\u591aHTTP\u4fe1\u606f\uff0c\u4f8b\u5982cookie\u3001\u8eab\u4efd\u9a8c\u8bc1\u3001\u91cd\u5b9a\u5411\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 18. urlparse **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684URL\u89e3\u6790\u5e93\uff0c\u53ef\u81ea\u52a8\u89e3\u6790URL\u4e0d\u540c\u7684\u57df\u3001\u53c2\u6570\u3001\u8def\u5f84\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 19. HTMLParser **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684HTML\u89e3\u6790\u6a21\u5757\uff0c\u80fd\u591f\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0HTML\u6587\u4ef6\u7684\u5206\u6790 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 20. Scapy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u7528\u6237\u53d1\u9001\u3001\u4fa6\u542c\u548c\u89e3\u6790\u5e76\u4f2a\u88c5\u7f51\u7edc\u62a5\u6587\uff0c\u5e38\u7528\u4e8e\u5927\u578b\u7f51\u7edc\u6570\u636e\u722c\u53d6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 21. Beautiful Soup **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Beautiful Soup\u662f\u7f51\u9875\u6570\u636e\u89e3\u6790\u548c\u683c\u5f0f\u5316\u5904\u7406\u5de5\u5177\uff0c\u901a\u5e38\u914d\u5408Python\u7684urllib\u3001urllib2\u7b49\u5e93\u4e00\u8d77\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 03 \u6570\u636e\u5e93\u8fde\u63a5 \u6570\u636e\u5e93\u8fde\u63a5\u53ef\u7528\u4e8e\u8fde\u63a5\u4f17\u591a\u6570\u636e\u5e93\u4ee5\u53ca\u8bbf\u95ee\u901a\u7528\u6570\u636e\u5e93\u63a5\u53e3\uff0c\u53ef\u7528\u4e8e\u6570\u636e\u5e93\u7ef4\u62a4\u3001\u7ba1\u7406\u548c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u65e5\u5e38\u64cd\u4f5c\u3002 22. mysql-connector-python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u5b98\u65b9\u9a71\u52a8\u8fde\u63a5\u7a0b\u5e8f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 23. pymysql **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u8fde\u63a5\u5e93\uff0c\u652f\u6301Python3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 24. MySQL-python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MySQL\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 25. cx_Oracle **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Oracle\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 26. psycopg2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u7f16\u7a0b\u8bed\u8a00\u4e2d\u975e\u5e38\u53d7\u6b22\u8fce\u7684PostgreSQL\u9002\u914d\u5668 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 27. redis **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Redis\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 ****28. pymongo**** **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MongoDB\u5b98\u65b9\u9a71\u52a8\u8fde\u63a5\u7a0b\u5e8f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 29. HappyBase **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****HBase\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 30. py2neo **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Neo4j\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 31. cassandra-driver **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Cassandra\uff081.2+\uff09\u548cDataStax Enterprise\uff083.1+\uff09\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 32. sqlite3 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0c\u7528\u4e8e\u64cd\u4f5cSQLite\u6570\u636e\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 33. pysqlite2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SQLite 3.x\u8fde\u63a5\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 34. bsddb3 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Berkeley DB\u8fde\u63a5\u5e93 35. bsddb **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5230Berkeley DB\u5e93\u7684\u63a5\u53e3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 36. dbhash **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u6a21\u5757\uff0cdbhash\u6a21\u5757\u63d0\u4f9b\u4e86\u4f7f\u7528BSD\u6570\u636e\u5e93\u5e93\u6253\u5f00\u6570\u636e\u5e93\u7684\u529f\u80fd\u3002\u8be5\u6a21\u5757\u955c\u50cf\u4e86\u63d0\u4f9b\u5bf9DBM\u6837\u5f0f\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u5176\u4ed6Python\u6570\u636e\u5e93\u6a21\u5757\u7684\u63a5\u53e3\u3002bsddb\u6a21\u5757\u9700\u8981\u4f7f\u7528dbhash \u63a8\u8350\u5ea6\uff1a \u2605\u2605 37. adodb **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ADOdb\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u62bd\u8c61\u5e93\uff0c\u652f\u6301\u5e38\u89c1\u7684\u6570\u636e\u548c\u6570\u636e\u5e93\u63a5\u53e3\u5e76\u53ef\u81ea\u884c\u8fdb\u884c\u6570\u636e\u5e93\u6269\u5c55\uff0c\u8be5\u5e93\u53ef\u4ee5\u5bf9\u4e0d\u540c\u6570\u636e\u5e93\u4e2d\u7684\u8bed\u6cd5\u8fdb\u884c\u89e3\u6790\u548c\u5dee\u5f02\u5316\u5904\u7406\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u901a\u7528\u6027 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 38. SQLObject **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ******\u63cf\u8ff0\uff1a******SQLObject\u662f\u4e00\u79cd\u6d41\u884c\u7684\u5bf9\u8c61\u5173\u7cfb\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u5411\u6570\u636e\u5e93\u63d0\u4f9b\u5bf9\u8c61\u63a5\u53e3\uff0c\u5176\u4e2d\u8868\u4e3a\u7c7b\u3001\u884c\u4e3a\u5b9e\u4f8b\u3001\u5217\u4e3a\u5c5e\u6027 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 39. SQLAlchemy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SQLAlchemy\u662fPython SQL\u5de5\u5177\u5305\u548c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u5668\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u63a7\u5236 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 40. ctypes **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ctypes\u662fPython\u7684\u4e00\u4e2a\u5916\u90e8\u5e93\uff0c\u63d0\u4f9b\u548cC\u8bed\u8a00\u517c\u5bb9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8c03\u7528C DLL\u4e2d\u7684\u51fd\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 41. pyodbc **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u901a\u8fc7ODBC\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u63a5\u53e3\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 42. Jython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u901a\u8fc7JDBC\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u63a5\u53e3\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 04 \u6570\u636e\u6e05\u6d17\u8f6c\u6362 \u6570\u636e\u6e05\u6d17\u8f6c\u6362\u4e3b\u7528\u4e8e\u6570\u636e\u6b63\u5f0f\u5e94\u7528\u4e4b\u524d\u7684\u9884\u5904\u7406\u5de5\u4f5c\u3002 43. frozenset([iterable]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684frozenset\u5bf9\u8c61\uff0c\u53ef\u9009\u62e9\u4eceiterable\u53d6\u5f97\u7684\u5143\u7d20 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 44. int(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684\u6574\u6570\u90e8\u5206 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 45. isinstance(object, classinfo) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56deobject\u662f\u5426\u662f\u6307\u5b9a\u7684classinfo\u5b9e\u4f8b\u4fe1\u606f \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 46. len(s) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u5bf9\u8c61\u7684\u957f\u5ea6\u6216\u9879\u76ee\u6570\u91cf \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 47. long(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u7531\u5b57\u7b26\u4e32\u6216\u6570\u5b57x\u6784\u9020\u7684\u957f\u6574\u578b\u5bf9\u8c61 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 48. max(iterable[, key]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6216\u6700\u5927\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e2d\u7684\u6700\u5927\u9879 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 49. min(iterable[, key]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6216\u6700\u5927\u7684\u4e24\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e2d\u7684\u6700\u5c0f\u9879 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 50. range(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u7528\u4e8e\u4e0efor\u5faa\u73af\u4e00\u8d77\u521b\u5efa\u5faa\u73af\u5217\u8868\uff0c\u901a\u8fc7\u6307\u5b9astart\uff08\u5f00\u59cb\uff09\u3001stop\uff08\u7ed3\u675f\uff09\u548cstep\uff08\u6b65\u957f\uff09\u63a7\u5236\u8fed\u4ee3\u6b21\u6570\u5e76\u83b7\u53d6\u5faa\u73af\u503c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 51. raw_input(prompt) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6355\u83b7\u7528\u6237\u8f93\u5165\u5e76\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de\uff08\u4e0d\u63a8\u8350\u4f7f\u7528input\u4f5c\u4e3a\u7528\u6237\u8f93\u5165\u7684\u6355\u83b7\u51fd\u6570\uff09 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 52. round(number[, ndigits]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56denumber\u5c0f\u6570\u70b9\u540endigits\u4f4d\u7684\u56db\u820d\u4e94\u5165\u7684\u6d6e\u70b9\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 53. set([iterable]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u5bf9\u8c61\uff0c\u53ef\u9009\u62e9\u4eceiterable\u83b7\u53d6\u7684\u5143\u7d20 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 54. slice(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u8868\u793a\u7531\u8303\u56f4\uff08start\u3001stop\u3001step\uff09\u6307\u5b9a\u7684\u7d22\u5f15\u96c6\u7684\u5207\u7247\u5bf9\u8c61 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 55. sorted(iterable[, cmp[, key[, reverse]]]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u4eceiterable\u7684\u9879\u4e2d\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u5217\u8868 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 56. xrange(start, stop[, step]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6b64\u51fd\u6570\u4e0erange()\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u8fd4\u56de\u4e00\u4e2axrange\u5bf9\u8c61\u800c\u4e0d\u662f\u5217\u8868 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 57. string **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5b57\u7b26\u4e32\u5904\u7406\u5e93\uff0c\u53ef\u5b9e\u73b0\u5b57\u7b26\u4e32\u67e5\u627e\u3001\u5206\u5272\u3001\u7ec4\u5408\u3001\u66ff\u6362\u3001\u53bb\u91cd\u3001\u5927\u5c0f\u5199\u8f6c\u6362\u53ca\u5176\u4ed6\u683c\u5f0f\u5316\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 58. re **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5757\uff0c\u5728\u6587\u672c\u548c\u5b57\u7b26\u4e32\u5904\u7406\u4e2d\u7ecf\u5e38\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 59. random **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u8be5\u6a21\u5757\u4e3a\u5404\u79cd\u5206\u5e03\u5b9e\u73b0\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u652f\u6301\u6570\u636e\u5747\u5300\u5206\u5e03\u3001\u6b63\u6001\uff08\u9ad8\u65af\uff09\u5206\u5e03\u3001\u5bf9\u6570\u6b63\u6001\u5206\u5e03\u3001\u8d1f\u6307\u6570\u5206\u5e03\u3001\u4f3d\u9a6c\u548c\u03b2\u5206\u5e03\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 60. os **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u7528\u4e8e\u65b0\u5efa\u3001\u5220\u9664\u3001\u6743\u9650\u4fee\u6539\u3001\u5207\u6362\u8def\u5f84\u7b49\u76ee\u5f55\u64cd\u4f5c\uff0c\u4ee5\u53ca\u8c03\u7528\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 61. os.path **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u9488\u5bf9\u76ee\u5f55\u7684\u904d\u5386\u3001\u7ec4\u5408\u3001\u5206\u5272\u3001\u5224\u65ad\u7b49\u64cd\u4f5c\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u6587\u4ef6\u7684\u5224\u65ad\u3001\u67e5\u627e\u3001\u5408\u5e76 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 62. prettytable **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u683c\u5f0f\u5316\u8868\u683c\u8f93\u51fa\u6a21\u5757 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 63. json **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u5bf9\u8c61\u4e0ejson\u5bf9\u8c61\u7684\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 64. base64 **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5c06\u4efb\u610f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7f16\u7801\u548c\u89e3\u7801\u4e3a\u6587\u672c\u5b57\u7b26\u4e32\u7684Base16\uff0cBase32\u548cBase64 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 05 \u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790 \u6570\u636e\u8ba1\u7b97\u548c\u7edf\u8ba1\u5206\u6790\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u63a2\u67e5\u3001\u8ba1\u7b97\u548c\u521d\u6b65\u6570\u636e\u5206\u6790\u7b49\u5de5\u4f5c\u3002 65. numpy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NumPy\u662fPython\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5de5\u5177\u5305\uff0c\u5f88\u591aPython\u6570\u636e\u8ba1\u7b97\u5de5\u4f5c\u5e93\u90fd\u4f9d\u8d56\u5b83 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 66. scipy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Scipy\u662f\u4e00\u7ec4\u4e13\u95e8\u89e3\u51b3\u79d1\u5b66\u548c\u5de5\u7a0b\u8ba1\u7b97\u4e0d\u540c\u573a\u666f\u7684\u4e3b\u9898\u5de5\u5177\u5305 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 67. pandas **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pandas\u662f\u4e00\u4e2a\u7528\u4e8ePython\u6570\u636e\u5206\u6790\u7684\u5e93\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u8fdb\u884c\u6570\u636e\u5206\u6790\u3002Pandas\u63d0\u4f9b\u7528\u4e8e\u8fdb\u884c\u7ed3\u6784\u5316\u6570\u636e\u5206\u6790\u7684\u4e8c\u7ef4\u7684\u8868\u683c\u578b\u6570\u636e\u7ed3\u6784DataFrame\uff0c\u7c7b\u4f3c\u4e8eR\u4e2d\u7684\u6570\u636e\u6846\uff0c\u80fd\u63d0\u4f9b\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u5207\u7247\u3001\u5207\u5757\u3001\u805a\u5408\u3001\u9009\u62e9\u5b50\u96c6\u7b49\u7cbe\u7ec6\u5316\u64cd\u4f5c\uff0c\u4e3a\u6570\u636e\u5206\u6790\u63d0\u4f9b\u4e86\u4fbf\u6377 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 68. statsmodels **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Statsmodels\u662fPython\u7684\u7edf\u8ba1\u5efa\u6a21\u548c\u8ba1\u91cf\u7ecf\u6d4e\u5b66\u5de5\u5177\u5305\uff0c\u5305\u62ec\u4e00\u4e9b\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u7edf\u8ba1\u6a21\u578b\u4f30\u8ba1\u548c\u7edf\u8ba1\u6d4b\u8bd5\uff0c\u96c6\u6210\u4e86\u591a\u79cd\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3001\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3001\u79bb\u6563\u6570\u636e\u5206\u5e03\u6a21\u578b\u3001\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6a21\u578b\u3001\u975e\u53c2\u6570\u4f30\u8ba1\u3001\u751f\u5b58\u5206\u6790\u3001\u4e3b\u6210\u5206\u5206\u6790\u3001\u6838\u5bc6\u5ea6\u4f30\u8ba1\u4ee5\u53ca\u5e7f\u6cdb\u7684\u7edf\u8ba1\u6d4b\u8bd5\u548c\u7ed8\u56fe\u7b49\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 69. abs(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684\u7edd\u5bf9\u503c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 70. cmp(x, y) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61x\u548cy\uff0c\u5e76\u6839\u636e\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002\u5982\u679cx y\u5219\u8fd4\u56de\u503c\u4e3a\u6b63 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 71. float(x) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56de\u4ece\u6570\u5b57\u6216\u5b57\u7b26\u4e32x\u6784\u9020\u7684\u6d6e\u70b9\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 72. pow(x, y[, z]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u8fd4\u56dex\u7684y\u6b21\u5e42\u3002\u5982\u679cz\u5b58\u5728\uff0c\u5219\u8fd4\u56dex\u7684y\u6b21\u5e42\uff0c\u6a21z \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 73. sum(iterable[, start]) **\u7c7b\u578b\uff1a**Python\u5185\u7f6e\u51fd\u6570 ****\u63cf\u8ff0\uff1a****\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8fed\u4ee3\uff0c\u8fd4\u56de\u603b\u548c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 74. math **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u6570\u5b66\u51fd\u6570\u5e93\uff0c\u5305\u62ec\u6b63\u5f26\u3001\u4f59\u5f26\u3001\u6b63\u5207\u3001\u4f59\u5207\u3001\u5f27\u5ea6\u8f6c\u6362\u3001\u5bf9\u6570\u8fd0\u7b97\u3001\u5706\u5468\u7387\u3001\u7edd\u5bf9\u503c\u3001\u53d6\u6574\u7b49\u6570\u5b66\u8ba1\u7b97\u65b9\u6cd5 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 75. cmath **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u4e0emath\u57fa\u672c\u4e00\u81f4\uff0c\u533a\u522b\u662fcmath\u8fd0\u7b97\u7684\u662f\u590d\u6570 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 76. decimal **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****10\u8fdb\u5236\u6d6e\u70b9\u8fd0\u7b97 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 77. fractions **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u5206\u6570\u6a21\u5757\u63d0\u4f9b\u5bf9\u6709\u7406\u6570\u7b97\u672f\u7684\u652f\u6301 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 06 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u6587\u672c\u6316\u6398 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u6587\u672c\u6316\u6398\u5e93\u4e3b\u8981\u7528\u4e8e\u4ee5\u81ea\u7136\u8bed\u8a00\u6587\u672c\u4e3a\u5bf9\u8c61\u7684\u6570\u636e\u5904\u7406\u548c\u5efa\u6a21\u3002 78. nltk **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NLTK\u662f\u4e00\u4e2aPython\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\uff0c\u5b83\u7528\u4e8e\u5bf9\u81ea\u7136\u8bed\u8a00\u8fdb\u884c\u5206\u7c7b\u3001\u89e3\u6790\u548c\u8bed\u4e49\u7406\u89e3\u3002\u76ee\u524d\u5df2\u7ecf\u6709\u8d85\u8fc750\u79cd\u8bed\u6599\u5e93\u548c\u8bcd\u6c47\u8d44\u6e90 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 79. pattern **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pattern\u662f\u4e00\u4e2a\u7f51\u7edc\u6570\u636e\u6316\u6398Python\u5de5\u5177\u5305\uff0c\u63d0\u4f9b\u4e86\u7528\u4e8e\u7f51\u7edc\u6316\u6398\uff08\u5982\u7f51\u7edc\u670d\u52a1\u3001\u7f51\u7edc\u722c\u866b\u7b49\uff09\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08\u5982\u8bcd\u6027\u6807\u6ce8\u3001\u60c5\u611f\u5206\u6790\u7b49\uff09\u3001\u673a\u5668\u5b66\u4e60\uff08\u5982\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u3001\u5206\u7c7b\u6a21\u578b\u7b49\uff09\u3001\u56fe\u5f62\u5316\u7684\u7f51\u7edc\u5206\u6790\u6a21\u578b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 80. gensim **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Gensim\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u4e3b\u9898\u6a21\u578b\uff08\u53d1\u6398\u6587\u5b57\u4e2d\u9690\u542b\u4e3b\u9898\u7684\u4e00\u79cd\u7edf\u8ba1\u5efa\u6a21\u65b9\u6cd5\uff09Python\u5de5\u5177\u5305\uff0c\u7528\u6765\u63d0\u4f9b\u53ef\u6269\u5c55\u7edf\u8ba1\u8bed\u4e49\u3001\u5206\u6790\u7eaf\u6587\u672c\u8bed\u4e49\u7ed3\u6784\u4ee5\u53ca\u68c0\u7d22\u8bed\u4e49\u4e0a\u76f8\u4f3c\u7684\u6587\u6863 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 81. \u7ed3\u5df4\u5206\u8bcd **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u7ed3\u5df4\u5206\u8bcd\u662f\u56fd\u5185\u6d41\u884c\u7684Python\u6587\u672c\u5904\u7406\u5de5\u5177\u5305\uff0c\u5206\u8bcd\u6a21\u5f0f\u5206\u4e3a\u4e09\u79cd\u6a21\u5f0f\uff1a\u7cbe\u786e\u6a21\u5f0f\u3001\u5168\u6a21\u5f0f\u548c\u641c\u7d22\u5f15\u64ce\u6a21\u5f0f\uff0c\u652f\u6301\u7e41\u4f53\u5206\u8bcd\u3001\u81ea\u5b9a\u4e49\u8bcd\u5178\u7b49\uff0c\u662f\u975e\u5e38\u597d\u7684Python\u4e2d\u6587\u5206\u8bcd\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u8bcd\u3001\u8bcd\u5178\u7ba1\u7406\u3001\u5173\u952e\u5b57\u62bd\u53d6\u3001\u8bcd\u6027\u6807\u6ce8\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 82. SnowNLP **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****SnowNLP\u662f\u4e00\u4e2aPython\u5199\u7684\u7c7b\u5e93\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5904\u7406\u4e2d\u6587\u6587\u672c\u5185\u5bb9\u3002\u8be5\u5e93\u662f\u53d7\u5230\u4e86TextBlob\u7684\u542f\u53d1\u800c\u9488\u5bf9\u4e2d\u6587\u5904\u7406\u5199\u7684\u7c7b\u5e93\uff0c\u548cTextBlob\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u6ca1\u6709\u7528NLTK\uff0c\u6240\u6709\u7684\u7b97\u6cd5\u90fd\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u81ea\u5e26\u4e86\u4e00\u4e9b\u8bad\u7ec3\u597d\u7684\u5b57\u5178 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 83. smallseg **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Smallseg\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u57fa\u4e8eDFA\u7684\u8f7b\u91cf\u7ea7\u7684\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u5305\u3002\u53ef\u81ea\u5b9a\u4e49\u8bcd\u5178\u3001\u5207\u5272\u540e\u8fd4\u56de\u767b\u5f55\u8bcd\u5217\u8868\u548c\u672a\u767b\u5f55\u8bcd\u5217\u8868\u3001\u6709\u4e00\u5b9a\u7684\u65b0\u8bcd\u8bc6\u522b\u80fd\u529b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 84. spaCy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****spaCy\u662f\u4e00\u4e2aPython\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\uff0c\u5b83\u7ed3\u5408Python\u548cCython\u4f7f\u5f97\u81ea\u7136\u8bed\u8a00\u5904\u7406\u80fd\u529b\u8fbe\u5230\u4e86\u5de5\u4e1a\u5f3a\u5ea6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 85. TextBlob **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TextBlob \u662f\u4e00\u4e2a\u5904\u7406\u6587\u672c\u6570\u636e\u7684Python\u5e93\uff0c\u53ef\u7528\u6765\u505a\u8bcd\u6027\u6807\u6ce8\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u7ffb\u8bd1\u3001\u540d\u8bcd\u77ed\u8bed\u62bd\u53d6\u3001\u6587\u672c\u5206\u7c7b\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 86. PyNLPI **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyNLPI\u662f\u4e00\u4e2a\u9002\u5408\u5404\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u7684\u96c6\u5408\u5e93\uff0c\u53ef\u7528\u4e8e\u4e2d\u6587\u6587\u672c\u5206\u8bcd\u3001\u5173\u952e\u5b57\u5206\u6790\u7b49\uff0c\u5c24\u5176\u91cd\u8981\u7684\u662f\u5176\u652f\u6301\u4e2d\u82f1\u6587\u6620\u5c04\uff0c\u652f\u6301UTF-8\u548cGBK\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 87. synonyms **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\uff0c\u53ef\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u5f88\u591a\u4efb\u52a1\uff1a\u6587\u672c\u5bf9\u9f50\uff0c\u63a8\u8350\u7b97\u6cd5\uff0c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff0c\u8bed\u4e49\u504f\u79fb\uff0c\u5173\u952e\u5b57\u63d0\u53d6\uff0c\u6982\u5ff5\u63d0\u53d6\uff0c\u81ea\u52a8\u6458\u8981\uff0c\u641c\u7d22\u5f15\u64ce\u7b49\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 07 \u56fe\u50cf\u548c\u89c6\u9891\u5904\u7406 \u56fe\u50cf\u5904\u7406\u548c\u89c6\u9891\u5904\u7406\u4e3b\u8981\u9002\u7528\u4e8e\u57fa\u4e8e\u56fe\u50cf\u7684\u64cd\u4f5c\u3001\u5904\u7406\u3001\u5206\u6790\u548c\u6316\u6398\uff0c\u5982\u4eba\u8138\u8bc6\u522b\u3001\u56fe\u50cf\u8bc6\u522b\u3001\u76ee\u6807\u8ddf\u8e2a\u3001\u56fe\u50cf\u7406\u89e3\u7b49\u3002 88. PIL/Pillow **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PIL\u662f\u4e00\u4e2a\u5e38\u7528\u7684\u56fe\u50cf\u8bfb\u53d6\u3001\u5904\u7406\u548c\u5206\u6790\u7684\u5e93\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u6570\u636e\u5904\u7406\u3001\u53d8\u6362\u7684\u64cd\u4f5c\u65b9\u6cd5\u548c\u5c5e\u6027\u3002PIL\u4ec5\u652f\u6301\u52302.7\u7248\u672c\u4e14\u5df2\u7ecf\u5f88\u4e45\u6ca1\u6709\u66f4\u65b0\uff0c\u4e00\u7fa4\u5fd7\u613f\u8005\u57fa\u4e8ePIL\u53d1\u5e03\u4e86\u65b0\u7684\u5206\u652fPillow\u3002Pillow\u540c\u65f6\u652f\u6301Python2\u548cPython3\u5e76\u4e14\u52a0\u5165\u5f88\u591a\u65b0\u7684\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605 89. OpenCV **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****OpenCV\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u56fe\u50cf\u548c\u89c6\u9891\u5de5\u4f5c\u5e93\u3002\u5b83\u63d0\u4f9b\u4e86\u591a\u79cd\u7a0b\u5e8f\u63a5\u53e3\uff0c\u652f\u6301\u8de8\u5e73\u53f0\uff08\u5305\u62ec\u79fb\u52a8\u7aef\uff09\u5e94\u7528\u3002OpenCV\u7684\u8bbe\u8ba1\u6548\u7387\u5f88\u9ad8\uff0c\u5b83\u4ee5\u4f18\u5316\u7684C / C ++\u7f16\u5199\uff0c\u5e93\u53ef\u4ee5\u5229\u7528\u591a\u6838\u5904\u7406\u3002\u9664\u4e86\u5bf9\u56fe\u50cf\u8fdb\u884c\u57fa\u672c\u5904\u7406\u5916\uff0c\u8fd8\u652f\u6301\u56fe\u50cf\u6570\u636e\u5efa\u6a21\uff0c\u5e76\u9884\u5236\u4e86\u591a\u79cd\u56fe\u50cf\u8bc6\u522b\u5f15\u64ce\uff0c\u5982\u4eba\u8138\u8bc6\u522b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 90. scikit-image **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****scikit-image\uff08\u4e5f\u79f0skimage\uff09\u662f\u4e00\u4e2a\u56fe\u50cf\u5904\u7406\u5e93\uff0c\u652f\u6301\u989c\u8272\u6a21\u5f0f\u8f6c\u6362\u3001\u6ee4\u955c\u3001\u7ed8\u56fe\u3001\u56fe\u50cf\u5904\u7406\u3001\u7279\u5f81\u68c0\u6d4b\u7b49\u591a\u79cd\u529f\u80fd \u63a8\u8350\u5ea6\uff1a \u2605\u2605 91. imageop **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u5bf9\u56fe\u50cf\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ec\u88c1\u526a\u3001\u7f29\u653e\u3001\u6a21\u5f0f\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605 92. colorsys **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0d\u540c\u56fe\u50cf\u8272\u5f69\u6a21\u5f0f\u7684\u8f6c\u6362 \u63a8\u8350\u5ea6\uff1a \u2605 93. imghdr **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u56fe\u50cf\u6587\u4ef6\u7684\u7c7b\u578b \u63a8\u8350\u5ea6\uff1a \u2605 08 \u97f3\u9891\u5904\u7406 \u97f3\u9891\u5904\u7406\u4e3b\u8981\u9002\u7528\u4e8e\u57fa\u4e8e\u58f0\u97f3\u7684\u5904\u7406\u3001\u5206\u6790\u548c\u5efa\u6a21\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u8bed\u97f3\u8bc6\u522b\u3001\u8bed\u97f3\u5408\u6210\u3001\u8bed\u4e49\u7406\u89e3\u7b49\u3002 94. TimeSide **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TimeSide\u662f\u4e00\u4e2a\u80fd\u591f\u8fdb\u884c\u97f3\u9891\u5206\u6790\u3001\u6210\u50cf\u3001\u8f6c\u7801\u3001\u6d41\u5a92\u4f53\u548c\u6807\u7b7e\u5904\u7406\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u5bf9\u4efb\u4f55\u97f3\u9891\u6216\u89c6\u9891\u5185\u5bb9\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u8fdb\u884c\u590d\u6742\u7684\u5904\u7406 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 95. audiolazy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****audiolazy\u662f\u4e00\u4e2a\u7528\u4e8e\u5b9e\u65f6\u58f0\u97f3\u6570\u636e\u6d41\u5904\u7406\u7684\u5e93\uff0c\u652f\u6301\u5b9e\u65f6\u6570\u636e\u5e94\u7528\u5904\u7406\u3001\u65e0\u9650\u6570\u636e\u5e8f\u5217\u8868\u793a\u3001\u6570\u636e\u6d41\u8868\u793a\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 96. pydub **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****pydub\u652f\u6301\u591a\u79cd\u683c\u5f0f\u58f0\u97f3\u6587\u4ef6\uff0c\u53ef\u8fdb\u884c\u591a\u79cd\u4fe1\u53f7\u5904\u7406\uff08\u4f8b\u5982\u538b\u7f29\u3001\u5747\u8861\u3001\u5f52\u4e00\u5316\uff09\u3001\u4fe1\u53f7\u751f\u6210\uff08\u4f8b\u5982\u6b63\u5f26\u3001\u65b9\u6ce2\u3001\u952f\u9f7f\u7b49\uff09\u3001\u97f3\u6548\u6ce8\u518c\u3001\u9759\u97f3\u5904\u7406\u7b49 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 97. audioop **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u53ef\u5b9e\u73b0\u5bf9\u58f0\u97f3\u7247\u6bb5\u7684\u4e00\u4e9b\u5e38\u7528\u64cd\u4f5c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 98. tinytag **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****tinytag\u7528\u4e8e\u8bfb\u53d6\u591a\u79cd\u58f0\u97f3\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u6db5\u76d6MP3\u3001OGG\u3001OPUS\u3001MP4\u3001M4A\u3001FLAC\u3001WMA\u3001Wave\u7b49\u683c\u5f0f \u63a8\u8350\u5ea6\uff1a \u2605\u2605 99. aifc **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199AIFF\u548cAIFC\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 100. sunau **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199Sun AU\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 101. wave **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u5199WAV\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 102. chunk **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8bfb\u53d6EA IFF 85\u5757\u683c\u5f0f\u7684\u6587\u4ef6 \u63a8\u8350\u5ea6\uff1a \u2605 103. sndhdr **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****Python\u81ea\u5e26\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u58f0\u97f3\u6587\u4ef6\u7684\u7c7b\u578b \u63a8\u8350\u5ea6\uff1a \u2605 104. ossaudiodev **\u7c7b\u578b\uff1a**Python\u6807\u51c6\u5e93 ****\u63cf\u8ff0\uff1a****\u8be5\u6a21\u5757\u652f\u6301\u8bbf\u95eeOSS\uff08\u5f00\u653e\u58f0\u97f3\u7cfb\u7edf\uff09\u97f3\u9891\u63a5\u53e3 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 09 \u6570\u636e\u6316\u6398/\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60 \u6570\u636e\u6316\u6398\u3001\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u7b49\u662fPython\u8fdb\u884c\u6570\u636e\u5efa\u6a21\u548c\u6316\u6398\u5b66\u4e60\u7684\u6838\u5fc3\u6a21\u5757\u3002 105. Scikit-Learn **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****scikit-learn\uff08\u4e5f\u79f0SKlearn\uff09\u662f\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u673a\u5668\u5b66\u4e60\u7efc\u5408\u5e93\uff0c\u5185\u7f6e\u76d1\u7763\u5f0f\u5b66\u4e60\u548c\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\uff0c\u5305\u62ec\u5404\u79cd\u56de\u5f52\u3001\u805a\u7c7b\u3001\u5206\u7c7b\u3001\u6d41\u5f0f\u5b66\u4e60\u3001\u5f02\u5e38\u68c0\u6d4b\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u96c6\u6210\u65b9\u6cd5\u7b49\u4e3b\u6d41\u7b97\u6cd5\u7c7b\u522b\uff0c\u540c\u65f6\u652f\u6301\u9884\u7f6e\u6570\u636e\u96c6\u3001\u6570\u636e\u9884\u5904\u7406\u3001\u6a21\u578b\u9009\u62e9\u548c\u8bc4\u4f30\u7b49\u65b9\u6cd5\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u5b8c\u6574\u3001\u6d41\u884c\u7684\u673a\u5668\u5b66\u4e60\u5de5\u5177\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 106. TensorFlow **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****TensorFlow \u662f\u8c37\u6b4c\u7684\u7b2c\u4e8c\u4ee3\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff0c\u5185\u5efa\u6df1\u5ea6\u5b66\u4e60\u7684\u6269\u5c55\u652f\u6301\uff0c\u4efb\u4f55\u80fd\u591f\u7528\u8ba1\u7b97\u6d41\u56fe\u5f62\u6765\u8868\u8fbe\u7684\u8ba1\u7b97\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 107. NuPIC **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****NuPIC\u662f\u4e00\u4e2a\u4ee5HTM\uff08\u5206\u5c42\u65f6\u95f4\u8bb0\u5fc6\uff09\u5b66\u4e60\u7b97\u6cd5\u4e3a\u5de5\u5177\u7684\u673a\u5668\u667a\u80fd\u5e73\u53f0\u3002NuPIC\u9002\u5408\u4e8e\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u68c0\u6d4b\u5f02\u5e38\u548c\u9884\u6d4b\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 108. PyTorch **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyTorch\u662fFaceBook\u63a8\u51fa\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u5b83\u57fa\u4e8ePython\uff08\u800c\u975elua\uff09\u4ea7\u751f\uff0c\u5b83\u63d0\u4f9b\u7684\u52a8\u6001\u8ba1\u7b97\u56fe\u662f\u663e\u8457\u533a\u522b\u4e8eTensorflow\u7b49\u5176\u4ed6\u5b66\u4e60\u6846\u67b6\u7684\u5730\u65b9\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 109. Orange **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Orange\u901a\u8fc7\u56fe\u5f62\u5316\u64cd\u4f5c\u754c\u9762\uff0c\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u6570\u636e\u5206\u6790\u529f\u80fd\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u5206\u7c7b\u3001\u805a\u7c7b\u3001\u56de\u5f52\u3001\u7279\u5f81\u9009\u62e9\u548c\u4ea4\u53c9\u9a8c\u8bc1\u5de5\u4f5c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 110. theano **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Theano\u662f\u975e\u5e38\u6210\u719f\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\u3002\u5b83\u4e0eNumpy\u7d27\u5bc6\u96c6\u6210\uff0c\u652f\u6301GPU\u8ba1\u7b97\u3001\u5355\u5143\u6d4b\u8bd5\u548c\u81ea\u6211\u9a8c\u8bc1 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 111. keras **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Keras\u662f\u4e00\u4e2a\u7528Python\u7f16\u5199\u7684\u9ad8\u7ea7\u795e\u7ecf\u7f51\u7edcAPI\uff0c\u80fd\u591f\u8fd0\u884c\u5728TensorFlow\u6216\u8005Theano\u4e4b\u4e0a\uff0c\u5b83\u7684\u5f00\u53d1\u91cd\u70b9\u662f\u5b9e\u73b0\u5feb\u901f\u5b9e\u9a8c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 112. neurolab **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Neurolab\u662f\u5177\u6709\u7075\u6d3b\u7f51\u7edc\u914d\u7f6e\u548cPython\u5b66\u4e60\u7b97\u6cd5\u7684\u57fa\u672c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u5e93\u3002\u5b83\u5305\u542b\u901a\u8fc7\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u5b9e\u73b0\u7684\u4e0d\u540c\u53d8\u4f53\uff0c\u8be5\u5e93\u662f\u540c\u7c7bRNN API\u4e2d\u6700\u597d\u7684\u9009\u62e9\u4e4b\u4e00 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 113. PyLearn2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyLearn2\u662f\u57fa\u4e8eTheano\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u5b83\u65e8\u5728\u63d0\u4f9b\u6781\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4f7f\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u8fdb\u884c\u81ea\u7531\u53ef\u63a7\u5236\uff0c\u53c2\u6570\u548c\u5c5e\u6027\u7684\u7075\u6d3b\u3001\u5f00\u653e\u914d\u7f6e\u662f\u4eae\u70b9 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 114. OverFeat **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****OverFeat\u662f\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u56fe\u7247\u5206\u7c7b\u3001\u5b9a\u4f4d\u7269\u4f53\u68c0\u6d4b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 115. Pyevolve **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Pyevolve\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9057\u4f20\u7b97\u6cd5\u6846\u67b6\uff0c\u4e5f\u652f\u6301\u9057\u4f20\u7f16\u7a0b \u63a8\u8350\u5ea6\uff1a \u2605\u2605 116. Caffe2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Cafffe2\u4e5f\u662fFaceBook\u63a8\u51fa\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u76f8\u6bd4\u4e8ePyTorch \u66f4\u9002\u5408\u4e8e\u7814\u7a76\uff0cCaffe2 \u9002\u5408\u5927\u89c4\u6a21\u90e8\u7f72\uff0c\u4e3b\u8981\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u5b83\u5bf9\u56fe\u50cf\u8bc6\u522b\u7684\u5206\u7c7b\u5177\u6709\u5f88\u597d\u7684\u5e94\u7528\u6548\u679c \u63a8\u8350\u5ea6\uff1a \u2605\u2605 10 \u6570\u636e\u53ef\u89c6\u5316 \u6570\u636e\u53ef\u89c6\u5316\u4e3b\u8981\u7528\u4e8e\u505a\u6570\u636e\u7ed3\u679c\u5c55\u793a\u3001\u6570\u636e\u6a21\u578b\u9a8c\u8bc1\u3001\u56fe\u5f62\u4ea4\u4e92\u548c\u63a2\u67e5\u7b49\u65b9\u9762\u3002 117. Matplotlib **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Matplotlib\u662fPython\u76842D\u7ed8\u56fe\u5e93\uff0c\u5b83\u4ee5\u5404\u79cd\u786c\u62f7\u8d1d\u683c\u5f0f\u548c\u8de8\u5e73\u53f0\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u751f\u6210\u51fa\u7248\u8d28\u91cf\u7ea7\u522b\u7684\u56fe\u5f62\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4ec5\u9700\u8981\u51e0\u884c\u4ee3\u7801\uff0c\u4fbf\u53ef\u4ee5\u751f\u6210\u591a\u79cd\u9ad8\u8d28\u91cf\u56fe\u5f62 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 118. pyecharts **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u57fa\u4e8e\u767e\u5ea6Echarts\u7684\u5f3a\u5927\u7684\u53ef\u89c6\u5316\u5de5\u5177\u5e93\uff0c\u5176\u63d0\u4f9b\u7684\u56fe\u5f62\u529f\u80fd\u4f17\u591a\uff0c\u5c24\u5176\u5bf9\u4e8e\u590d\u6742\u5173\u7cfb\u7684\u5c55\u793a\u80fd\u529b\u8f83\u5f3a \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 119. seaborn **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Seaborn\u662f\u5728Matplotlib\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u66f4\u9ad8\u7ea7\u7684API\u5c01\u88c5\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3aMatplotlib\u7684\u8865\u5145 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 120. bokeh **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Bokeh\u662f\u4e00\u79cd\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u5e93\uff0c\u53ef\u4ee5\u5728WEB\u6d4f\u89c8\u5668\u4e2d\u5b9e\u73b0\u7f8e\u89c2\u7684\u89c6\u89c9\u6548\u679c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 121. Plotly **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Plotly\u63d0\u4f9b\u7684\u56fe\u5f62\u5e93\u53ef\u4ee5\u8fdb\u884c\u5728\u7ebfWEB\u4ea4\u4e92\uff0c\u5e76\u63d0\u4f9b\u5177\u6709\u51fa\u7248\u54c1\u8d28\u7684\u56fe\u5f62\uff0c\u652f\u6301\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u533a\u57df\u56fe\u3001\u6761\u5f62\u56fe\u3001\u8bef\u5dee\u6761\u3001\u6846\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u70ed\u56fe\u3001\u5b50\u56fe\u3001\u591a\u8f74\u3001\u6781\u5750\u6807\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u73ab\u7470\u56fe\u3001\u70ed\u529b\u56fe\u3001\u6f0f\u6597\u56fe\u7b49\u4f17\u591a\u56fe\u5f62 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 122. VisPy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****VisPy\u662f\u7528\u4e8e\u4ea4\u4e92\u5f0f\u79d1\u5b66\u53ef\u89c6\u5316\u7684Python\u5e93\uff0c\u65e8\u5728\u5b9e\u73b0\u5feb\u901f\uff0c\u53ef\u6269\u5c55\u548c\u6613\u4e8e\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 123. PyQtGraph **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****PyQtGraph\u662f\u4e00\u4e2a\u5efa\u7acb\u5728PyQt4 / PySide\u548cnumpy\u4e4b\u4e0a\u7684\u7eafPython\u56fe\u5f62\u548cGUI\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u5b66/\u79d1\u5b66/\u5de5\u7a0b\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 124. ggplot **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****ggplot\u662f\u7528Python\u5b9e\u73b0\u7684\u56fe\u5f62\u8f93\u51fa\u5e93\uff0c\u7c7b\u4f3c\u4e8e R\u4e2d\u7684\u56fe\u5f62\u5c55\u793a\u7248\u672c \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 11 \u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1 \u4ea4\u4e92\u5b66\u4e60\u548c\u96c6\u6210\u5f00\u53d1\u4e3b\u8981\u7528\u6765\u505aPython\u5f00\u53d1\u3001\u8c03\u8bd5\u548c\u96c6\u6210\u4e4b\u7528\uff0c\u5305\u62ecPython\u96c6\u6210\u5f00\u53d1\u73af\u5883\u548cIDE\u3002 125. IPython/ Jupyter **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****IPython \u662f\u4e00\u4e2a\u57fa\u4e8ePython \u7684\u4ea4\u4e92\u5f0fshell\uff0c\u6bd4\u9ed8\u8ba4\u7684Python shell \u597d\u7528\u5f97\u591a\uff0c\u652f\u6301\u53d8\u91cf\u81ea\u52a8\u8865\u5168\u3001\u81ea\u52a8\u7f29\u8fdb\u3001\u4ea4\u4e92\u5f0f\u5e2e\u52a9\u3001\u9b54\u6cd5\u547d\u4ee4\u3001\u7cfb\u7edf\u547d\u4ee4\u7b49\uff0c\u5185\u7f6e\u4e86\u8bb8\u591a\u5f88\u6709\u7528\u7684\u529f\u80fd\u548c\u51fd\u6570\u3002\u4eceIPython4.0\u5f00\u59cb\uff0cIPython\u884d\u751f\u51fa\u4e86IPython\u548cJupyter\u4e24\u4e2a\u5206\u652f\u3002\u5728\u8be5\u5206\u652f\u6b63\u5f0f\u51fa\u73b0\u4e4b\u524d\uff0cIPython\u5176\u5b9e\u5df2\u7ecf\u62e5\u6709\u4e86ipython notebook\u529f\u80fd\uff0c\u56e0\u6b64\uff0cJupyter\u66f4\u50cf\u662f\u4e00\u4e2aipython notebook\u7684\u5347\u7ea7\u7248\u3002 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 126. Elpy **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Elpy\u662fEmacs\u7528\u4e8ePython\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5b83\u7ed3\u5408\u5e76\u914d\u7f6e\u4e86\u8bb8\u591a\u5176\u4ed6\u8f6f\u4ef6\u5305\uff0c\u5b83\u4eec\u90fd\u662f\u7528Emacs Lisp\u548cPython\u7f16\u5199\u7684 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 127. PTVS **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Visual Studio \u7684 Python \u5de5\u5177 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 128. PyCharm **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****PyCharm\u5e26\u6709\u4e00\u6574\u5957\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5728\u4f7f\u7528Python\u8bed\u8a00\u5f00\u53d1\u65f6\u63d0\u9ad8\u5176\u6548\u7387\u7684\u5de5\u5177\uff0c\u6bd4\u5982\u8c03\u8bd5\u3001\u8bed\u6cd5\u9ad8\u4eae\u3001\u9879\u76ee\u7ba1\u7406\u3001\u4ee3\u7801\u8df3\u8f6c\u3001\u667a\u80fd\u63d0\u793a\u3001\u81ea\u52a8\u5b8c\u6210\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u7248\u672c\u63a7\u5236\u5e76\u53ef\u96c6\u6210IPython\u3001\u7cfb\u7edf\u7ec8\u7aef\u547d\u4ee4\u884c\u7b49\uff0c\u5728PyCharm\u91cc\u51e0\u4e4e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6240\u6709\u6709\u5173Python\u5de5\u4f5c\u7684\u5168\u90e8\u8fc7\u7a0b \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 129. LiClipse **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****LiClipse\u662f\u57fa\u4e8eEclipse\u7684\u514d\u8d39\u591a\u8bed\u8a00 IDE\uff0c\u901a\u8fc7\u5176\u4e2d\u7684PyDev\u53ef\u652f\u6301 Python\u5f00\u53d1\u5e94\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 130. Spyder **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****Spyder\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python IDE\uff0c\u7531IPython\u548c\u4f17\u591a\u6d41\u884c\u7684Python\u5e93\u7684\u652f\u6301\uff0c\u662f\u4e00\u4e2a\u5177\u5907\u9ad8\u7ea7\u7f16\u8f91\u3001\u4ea4\u4e92\u5f0f\u6d4b\u8bd5\u3001\u8c03\u8bd5\u4ee5\u53ca\u6570\u5b57\u8ba1\u7b97\u73af\u5883\u7684\u4ea4\u4e92\u5f0f\u5f00\u53d1\u73af\u5883 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 12 \u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177 \u5176\u4ed6Python\u534f\u540c\u6570\u636e\u5de5\u4f5c\u5de5\u5177\u6307\u9664\u4e86\u4e0a\u8ff0\u4e3b\u9898\u4ee5\u5916\uff0c\u5176\u4ed6\u5728\u6570\u636e\u5de5\u4f5c\u4e2d\u5e38\u7528\u7684\u5de5\u5177\u6216\u5e93\u3002 131. tesseract-ocr **\u7c7b\u578b\uff1a**\u5916\u90e8\u5de5\u5177 ****\u63cf\u8ff0\uff1a****\u8fd9\u662f\u4e00\u4e2aGoogle\u652f\u6301\u7684\u5f00\u6e90OCR\u56fe\u6587\u8bc6\u522b\u9879\u76ee\uff0c\u652f\u6301\u8d85\u8fc7200\u79cd\u8bed\u8a00\uff08\u5305\u62ec\u4e2d\u6587\uff09\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u8bad\u7ec3\u5b57\u7b26\u96c6\uff0c\u652f\u6301\u8de8Windows\u3001Linux\u3001Mac OSX \u591a\u5e73\u53f0\u4f7f\u7528 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 132. RPython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****R\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 133. Rpy2 **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u8fde\u63a5R\u7684\u5e93 134. matpython **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****MATLAB\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 135. Lunatic Python **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Lua\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 136. PyCall.jl **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Julia\u96c6\u6210\u5e93 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 137. PySpark **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Spark\u63d0\u4f9b\u7684Python API \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605 138. dumbo **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****\u8fd9\u4e2a\u6a21\u5757\u53ef\u4ee5\u8ba9Pythoner\u8f7b\u677e\u7684\u7f16\u5199\u548c\u8fd0\u884c Hadoop \u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7248\u672c\u6bd4\u8f83\u65e9\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 139. dpark **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Python\u5bf9Spark\u7684\u514b\u9686\u7248\u672c\uff0c\u7c7bMapReduce\u6846\u67b6 \u63a8\u8350\u5ea6\uff1a \u2605\u2605 140. streamparse **\u7c7b\u578b\uff1a**\u7b2c\u4e09\u65b9\u5e93 ****\u63cf\u8ff0\uff1a****Streamparse\u5141\u8bb8\u901a\u8fc7Storm\u5bf9\u5b9e\u65f6\u6570\u636e\u6d41\u8fd0\u884cPython\u4ee3\u7801 \u63a8\u8350\u5ea6\uff1a \u2605\u2605\u2605","title":"\u5410\u8840\u6574\u7406\uff01140\u79cdPython\u6807\u51c6\u5e93\u3001\u7b2c\u4e09\u65b9\u5e93\u548c\u5916\u90e8\u5de5\u5177\u90fd\u6709\u4e86"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/","text":"5. \u591a\u4efb\u52a1-\u7ebf\u7a0b \u00b6 5.1. \u591a\u4efb\u52a1\u7684\u4ecb\u7ecd \u00b6 \u591a\u4efb\u52a1\u4ecb\u7ecd \u73b0\u5b9e\u751f\u6d3b\u4e2d \u6709\u5f88\u591a\u7684\u573a\u666f\u4e2d\u7684\u4e8b\u60c5\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u5f00\u8f66\u7684\u65f6\u5019 \u624b\u548c\u811a\u5171\u540c\u6765\u9a7e\u9a76\u6c7d\u8f66\uff0c\u518d\u6bd4\u5982\u5531\u6b4c\u8df3\u821e\u4e5f\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff1b \u5982\u4e0b\u7a0b\u5e8f\uff0c\u6765\u6a21\u62df\u201c\u5531\u6b4c\u8df3\u821e\u201d\u8fd9\u4ef6\u4e8b\u60c5 import time def sing (): \"\"\"\u5531\u6b4c 5\u79d2\u949f\"\"\" for i in range ( 5 ): print ( \"----\u6b63\u5728\u5531:\u83ca\u82b1\u8336----\" ) time . sleep ( 1 ) def dance (): \"\"\"\u8df3\u821e 5\u79d2\u949f\"\"\" for i in range ( 5 ): print ( \"----\u6b63\u5728\u8df3\u821e----\" ) time . sleep ( 1 ) def main (): sing () dance () if __name__ == \"__main__\" : main () \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- > !!!\u6ce8\u610f \u5f88\u663e\u7136\u521a\u521a\u7684\u7a0b\u5e8f\u5e76\u6ca1\u6709\u5b8c\u6210\u5531\u6b4c\u548c\u8df3\u821e\u540c\u65f6\u8fdb\u884c\u7684\u8981\u6c42 \u5982\u679c\u60f3\u8981\u5b9e\u73b0\u201c\u5531\u6b4c\u8df3\u821e\u201d\u540c\u65f6\u8fdb\u884c\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u53eb\u505a\uff1a\u591a\u4efb\u52a1 5.2. \u591a\u4efb\u52a1\u7684\u6982\u5ff5 \u00b6 \u591a\u4efb\u52a1\u7684\u6982\u5ff5 \u00b6 \u4ec0\u4e48\u53eb\u201c\u591a\u4efb\u52a1\u201d\u5462\uff1f\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u4f60\u4e00\u8fb9\u5728\u7528\u6d4f\u89c8\u5668\u4e0a\u7f51\uff0c\u4e00\u8fb9\u5728\u542cMP3\uff0c\u4e00\u8fb9\u5728\u7528Word\u8d76\u4f5c\u4e1a\uff0c\u8fd9\u5c31\u662f\u591a\u4efb\u52a1\uff0c\u81f3\u5c11\u540c\u65f6\u67093\u4e2a\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\u3002\u8fd8\u6709\u5f88\u591a\u4efb\u52a1\u6084\u6084\u5730\u5728\u540e\u53f0\u540c\u65f6\u8fd0\u884c\u7740\uff0c\u53ea\u662f\u684c\u9762\u4e0a\u6ca1\u6709\u663e\u793a\u800c\u5df2\u3002 \u73b0\u5728\uff0c\u591a\u6838CPU\u5df2\u7ecf\u975e\u5e38\u666e\u53ca\u4e86\uff0c\u4f46\u662f\uff0c\u5373\u4f7f\u8fc7\u53bb\u7684\u5355\u6838CPU\uff0c\u4e5f\u53ef\u4ee5\u6267\u884c\u591a\u4efb\u52a1\u3002\u7531\u4e8eCPU\u6267\u884c\u4ee3\u7801\u90fd\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u90a3\u4e48\uff0c\u5355\u6838CPU\u662f\u600e\u4e48\u6267\u884c\u591a\u4efb\u52a1\u7684\u5462\uff1f \u7b54\u6848\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u8f6e\u6d41\u8ba9\u5404\u4e2a\u4efb\u52a1\u4ea4\u66ff\u6267\u884c\uff0c\u4efb\u52a11\u6267\u884c0.01\u79d2\uff0c\u5207\u6362\u5230\u4efb\u52a12\uff0c\u4efb\u52a12\u6267\u884c0.01\u79d2\uff0c\u518d\u5207\u6362\u5230\u4efb\u52a13\uff0c\u6267\u884c0.01\u79d2\u2026\u2026\u8fd9\u6837\u53cd\u590d\u6267\u884c\u4e0b\u53bb\u3002\u8868\u9762\u4e0a\u770b\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff0c\u4f46\u662f\uff0c\u7531\u4e8eCPU\u7684\u6267\u884c\u901f\u5ea6\u5b9e\u5728\u662f\u592a\u5feb\u4e86\uff0c\u6211\u4eec\u611f\u89c9\u5c31\u50cf\u6240\u6709\u4efb\u52a1\u90fd\u5728\u540c\u65f6\u6267\u884c\u4e00\u6837\u3002 \u771f\u6b63\u7684\u5e76\u884c\u6267\u884c\u591a\u4efb\u52a1\u53ea\u80fd\u5728\u591a\u6838CPU\u4e0a\u5b9e\u73b0\uff0c\u4f46\u662f\uff0c\u7531\u4e8e\u4efb\u52a1\u6570\u91cf\u8fdc\u8fdc\u591a\u4e8eCPU\u7684\u6838\u5fc3\u6570\u91cf\uff0c\u6240\u4ee5\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u81ea\u52a8\u628a\u5f88\u591a\u4efb\u52a1\u8f6e\u6d41\u8c03\u5ea6\u5230\u6bcf\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\u3002 \u6ce8\u610f\uff1a \u00b6 \u5e76\u53d1\uff1a\u6307\u7684\u662f\u4efb\u52a1\u6570\u591a\u4f59cpu\u6838\u6570\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd\u4efb\u52a1\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5b9e\u73b0\u7528\u591a\u4e2a\u4efb\u52a1\u201c\u4e00\u8d77\u201d\u6267\u884c\uff08\u5b9e\u9645\u4e0a\u603b\u6709\u4e00\u4e9b\u4efb\u52a1\u4e0d\u5728\u6267\u884c\uff0c\u56e0\u4e3a\u5207\u6362\u4efb\u52a1\u7684\u901f\u5ea6\u76f8\u5f53\u5feb\uff0c\u770b\u4e0a\u53bb\u4e00\u8d77\u6267\u884c\u800c\u5df2\uff09 \u5e76\u884c\uff1a\u6307\u7684\u662f\u4efb\u52a1\u6570\u5c0f\u4e8e\u7b49\u4e8ecpu\u6838\u6570\uff0c\u5373\u4efb\u52a1\u771f\u7684\u662f\u4e00\u8d77\u6267\u884c\u7684 5.3. \u7ebf\u7a0b(\u91cd\u70b9) \u00b6 \u7ebf\u7a0b \u00b6 python\u7684thread\u6a21\u5757\u662f\u6bd4\u8f83\u5e95\u5c42\u7684\u6a21\u5757\uff0cpython\u7684threading\u6a21\u5757\u662f\u5bf9thread\u505a\u4e86\u4e00\u4e9b\u5305\u88c5\u7684\uff0c\u53ef\u4ee5\u66f4\u52a0\u65b9\u4fbf\u7684\u88ab\u4f7f\u7528 \u00b6 1. \u4f7f\u7528threading\u6a21\u5757 \u00b6 \u5355\u7ebf\u7a0b\u6267\u884c \u00b6 #coding=utf-8 import time def saySorry (): print ( \"\u4eb2\u7231\u7684\uff0c\u6211\u9519\u4e86\uff0c\u6211\u80fd\u5403\u996d\u4e86\u5417\uff1f\" ) time . sleep ( 1 ) if __name__ == \"__main__\" : for i in range ( 5 ): saySorry () \u8fd0\u884c\u7ed3\u679c\uff1a \u591a\u7ebf\u7a0b\u6267\u884c \u00b6 #coding=utf-8 import threading import time def saySorry (): print ( \"\u4eb2\u7231\u7684\uff0c\u6211\u9519\u4e86\uff0c\u6211\u80fd\u5403\u996d\u4e86\u5417\uff1f\" ) time . sleep ( 1 ) if __name__ == \"__main__\" : for i in range ( 5 ): t = threading . Thread ( target = saySorry ) #target\u4f20\u9012\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u540d\u5b57(\u53d8\u91cf\u540d\u6307\u5411\u4e86\u8fd9\u4e2a\u51fd\u6570) #t\u662fThread\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 t . start () #\u542f\u52a8\u7ebf\u7a0b\uff0c\u5373\u8ba9\u7ebf\u7a0b\u5f00\u59cb\u6267\u884c \u8fd0\u884c\u7ed3\u679c\uff1a \u4e3b\u7ebf\u7a0b\u521b\u5efa\u7684\u7ebf\u7a0b\u53eb\u505a\u5b50\u7ebf\u7a0b \u8bf4\u660e \u00b6 \u53ef\u4ee5\u660e\u663e\u770b\u51fa\u4f7f\u7528\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u64cd\u4f5c\uff0c\u82b1\u8d39\u65f6\u95f4\u8981\u77ed\u5f88\u591a \u5f53\u8c03\u7528 start() \u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u7684\u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u4e14\u5f00\u59cb\u6267\u884c 2. \u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u6240\u6709\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u540e\u624d\u7ed3\u675f \u00b6 #coding=utf-8 import threading from time import sleep , ctime def sing (): for i in range ( 3 ): print ( \"\u6b63\u5728\u5531\u6b4c... %d \" % i ) sleep ( 1 ) def dance (): for i in range ( 3 ): print ( \"\u6b63\u5728\u8df3\u821e... %d \" % i ) sleep ( 1 ) if __name__ == '__main__' : print ( '---\u5f00\u59cb---: %s ' % ctime ()) t1 = threading . Thread ( target = sing ) #\u53ea\u5199\u51fd\u6570\u540d\u662f\u544a\u8bc9\u5b83\u51fd\u6570\u5728\u54ea,\u800c\u52a0\u4e86\u62ec\u53f7\u5c31\u662f\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 t2 = threading . Thread ( target = dance ) t1 . start () t2 . start () #sleep(5) # \u5c4f\u853d\u6b64\u884c\u4ee3\u7801\uff0c\u8bd5\u8bd5\u770b\uff0c\u7a0b\u5e8f\u662f\u5426\u4f1a\u7acb\u9a6c\u7ed3\u675f\uff1f,\u4e0d\u4f1a. print ( '---\u7ed3\u675f---: %s ' % ctime ()) #\u4e3b\u7ebf\u7a0b\u8ddf\u5b50\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u662f\u4e0d\u4e00\u5b9a\u7684\u6ca1\u6709\u5148\u540e\u7684\u987a\u5e8f 3. \u67e5\u770b\u7ebf\u7a0b\u6570\u91cf \u00b6 #coding=utf-8 import threading from time import sleep , ctime def sing (): for i in range ( 3 ): print ( \"\u6b63\u5728\u5531\u6b4c... %d \" % i ) sleep ( 1 ) # \u5982\u679c\u521b\u5efaThread\u65f6\u6267\u884c\u7684\u51fd\u6570\uff0c\u8fd0\u884c\u7ed3\u675f\u90a3\u4e48\u610f\u5473\u7740 \u8fd9\u4e2a\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86.... def dance (): for i in range ( 3 ): print ( \"\u6b63\u5728\u8df3\u821e... %d \" % i ) sleep ( 1 ) if __name__ == '__main__' : print ( '---\u5f00\u59cb---: %s ' % ctime ()) t1 = threading . Thread ( target = sing ) t2 = threading . Thread ( target = dance ) t1 . start () t2 . start () while True : length = len ( threading . enumerate ()) print ( '\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u4e3a\uff1a %d ' % length ) if length <= 1 : break sleep ( 0.5 ) \u9002\u5f53\u5ef6\u65f6\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u4f18\u5148\u5f00\u59cb import threading import time def test1 (): for i in range ( 5 ): print ( \"-----test1--- %d ---\" % i ) def test2 (): for i in range ( 5 ): print ( \"-----test2--- %d ---\" % i ) def main (): t1 = threading . Thread ( target = test1 ) t2 = threading . Thread ( target = test2 ) t1 . start () time . sleep ( 1 ) print ( \"---1---\" ) t2 . start () time . sleep ( 1 ) print ( \"---2---\" ) print ( threading . enumerate ()) if __name__ == \"__main__\" : main () 05-\u9a8c\u8bc1\u521b\u5efa\u7ebf\u7a0b\u4ee5\u53ca\u8fd0\u884c\u65f6\u95f4.py \u00b6 import threading import time def test1 (): for i in range ( 5 ): print ( \"-----test1--- %d ---\" % i ) time . sleep ( 1 ) def main (): # \u5728\u8c03\u7528Thread\u4e4b\u524d\u5148\u6253\u5370\u5f53\u524d\u7ebf\u7a0b\u4fe1\u606f print ( threading . enumerate ()) t1 = threading . Thread ( target = test1 ) # \u5728\u8c03\u7528Thread\u4e4b\u540e\u6253\u5370 print ( threading . enumerate ()) t1 . start () # \u5728\u8c03\u7528start\u4e4b\u540e\u6253\u5370 print ( threading . enumerate ()) if __name__ == \"__main__\" : main () \u521b\u5efa\u591a\u7ebf\u7a0b\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u589e\u52a0\u591a\u7ebf\u7a0b,\u53ea\u7528\u4f7f\u7528\u4e86start\u5f00\u542f\u591a\u7ebf\u7a0b\u624d\u4f1a\u521b\u5efa\u597d\u7ebf\u7a0b 5.4. \u7ebf\u7a0b-\u6ce8\u610f\u70b9 \u00b6 \u7ebf\u7a0b-\u6ce8\u610f\u70b9 \u00b6 1. \u7ebf\u7a0b\u6267\u884c\u4ee3\u7801\u7684\u5c01\u88c5 \u00b6 \u901a\u8fc7\u4e0a\u4e00\u5c0f\u8282\uff0c\u80fd\u591f\u770b\u51fa\uff0c\u901a\u8fc7\u4f7f\u7528threading\u6a21\u5757\u80fd\u5b8c\u6210\u591a\u4efb\u52a1\u7684\u7a0b\u5e8f\u5f00\u53d1\uff0c\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u5c01\u88c5\u6027\u66f4\u5b8c\u7f8e\uff0c\u6240\u4ee5\u4f7f\u7528threading\u6a21\u5757\u65f6\uff0c\u5f80\u5f80\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u5b50\u7c7bclass\uff0c\u53ea\u8981\u7ee7\u627f threading.Thread \u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u91cd\u5199 run \u65b9\u6cd5 \u793a\u4f8b\u5982\u4e0b\uff1a #coding=utf-8 import threading import time class MyThread ( threading . Thread ): def run ( self ): for i in range ( 3 ): time . sleep ( 1 ) msg = \"I'm \" + self . name + ' @ ' + str ( i ) #name\u5c5e\u6027\u4e2d\u4fdd\u5b58\u7684\u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57 print ( msg ) if __name__ == '__main__' : t = MyThread () t . start () \u8bf4\u660e \u00b6 python\u7684threading.Thread\u7c7b\u6709\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u7528\u4e8e\u5b9a\u4e49\u7ebf\u7a0b\u7684\u529f\u80fd\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7ebf\u7a0b\u7c7b\u4e2d\u8986\u76d6\u8be5\u65b9\u6cd5\u3002\u800c\u521b\u5efa\u81ea\u5df1\u7684\u7ebf\u7a0b\u5b9e\u4f8b\u540e\uff0c\u901a\u8fc7Thread\u7c7b\u7684start\u65b9\u6cd5\uff0c\u53ef\u4ee5\u542f\u52a8\u8be5\u7ebf\u7a0b\uff0c\u4ea4\u7ed9python\u865a\u62df\u673a\u8fdb\u884c\u8c03\u5ea6\uff0c\u5f53\u8be5\u7ebf\u7a0b\u83b7\u5f97\u6267\u884c\u7684\u673a\u4f1a\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528run\u65b9\u6cd5\u6267\u884c\u7ebf\u7a0b\u3002 2. \u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f \u00b6 #coding=utf-8 import threading import time class MyThread ( threading . Thread ): #\u81ea\u5df1\u7ee7\u627f\u7c7b\u5199\u4e00\u4e2a\u65b0\u5c01\u88c5\u7684\u7684\u7c7b def run ( self ): #\u91cd\u5199run\u65b9\u6cd5 for i in range ( 3 ): time . sleep ( 1 ) msg = \"I'm \" + self . name + ' @ ' + str ( i ) print ( msg ) def test (): for i in range ( 5 ): t = MyThread () #\u5b9e\u4f8b\u5316\u591a\u4e2a\u81ea\u5df1\u5b9a\u4e49\u7684\u591a\u7ebf\u7a0b\u5bf9\u8c61 t . start () #\u5f00\u542f,\u7ee7\u627f\u81eaThread\u7c7b if __name__ == '__main__' : test () \u6267\u884c\u7ed3\u679c\uff1a(\u8fd0\u884c\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u5927\u4f53\u662f\u4e00\u81f4\u7684) I'm Thread-1 @ 0 I'm Thread-2 @ 0 I'm Thread-5 @ 0 I'm Thread-3 @ 0 I'm Thread-4 @ 0 I'm Thread-3 @ 1 I'm Thread-4 @ 1 I'm Thread-5 @ 1 I'm Thread-1 @ 1 I'm Thread-2 @ 1 I'm Thread-4 @ 2 I'm Thread-5 @ 2 I'm Thread-2 @ 2 I'm Thread-1 @ 2 I'm Thread-3 @ 2 \u8bf4\u660e \u00b6 \u4ece\u4ee3\u7801\u548c\u6267\u884c\u7ed3\u679c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u5f53\u6267\u884c\u5230sleep\u8bed\u53e5\u65f6\uff0c\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff08Blocked\uff09\uff0c\u5230sleep\u7ed3\u675f\u540e\uff0c\u7ebf\u7a0b\u8fdb\u5165\u5c31\u7eea\uff08Runnable\uff09\u72b6\u6001\uff0c\u7b49\u5f85\u8c03\u5ea6\u3002\u800c\u7ebf\u7a0b\u8c03\u5ea6\u5c06\u81ea\u884c\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ea\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8fd0\u884c\u5b8c\u6574\u4e2arun\u51fd\u6570\uff0c\u4f46\u662f\u7ebf\u7a0b\u7684\u542f\u52a8\u987a\u5e8f\u3001run\u51fd\u6570\u4e2d\u6bcf\u6b21\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\u90fd\u4e0d\u80fd\u786e\u5b9a\u3002 3. \u603b\u7ed3 \u00b6 \u6bcf\u4e2a\u7ebf\u7a0b\u9ed8\u8ba4\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u5c3d\u7ba1\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u6ca1\u6709\u6307\u5b9a\u7ebf\u7a0b\u5bf9\u8c61\u7684name\uff0c\u4f46\u662fpython\u4f1a\u81ea\u52a8\u4e3a\u7ebf\u7a0b\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u3002 \u5f53\u7ebf\u7a0b\u7684run()\u65b9\u6cd5\u7ed3\u675f\u65f6\u8be5\u7ebf\u7a0b\u5b8c\u6210\u3002 \u65e0\u6cd5\u63a7\u5236\u7ebf\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u522b\u7684\u65b9\u5f0f\u6765\u5f71\u54cd\u7ebf\u7a0b\u8c03\u5ea6\u7684\u65b9\u5f0f\u3002 5.5. \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf(\u91cd\u70b9) \u00b6 06-\u51fd\u6570\u91cc\u9762\u4fee\u6539\u5168\u5c40\u53d8\u91cf.py \u00b6 num = 100 nums = [ 11 , 22 ] def test (): global num num += 100 def test2 (): nums . append ( 33 ) print ( num ) print ( nums ) test () test2 () print ( num ) print ( nums ) \u6ce8\u610f\u5168\u5c40\u53d8\u91cf\u7684\u52a0\u4e0d\u52a0\u5173\u952e\u5b57global \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf \u00b6 from threading import Thread import time g_num = 100 def work1 (): global g_num for i in range ( 3 ): g_num += 1 #\u53d8\u91cf\u8fdb\u884c\u4e86\u6539\u53d8,\u5fc5\u987b\u8fdb\u884c\u5168\u5c40\u7684\u58f0\u660e print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 (): global g_num #\u5982\u679c\u53ea\u662f\u6253\u5370\u53ef\u4ee5\u4e0d\u7528\u58f0\u660e\u662f\u5168\u5c40\u53d8\u91cf print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = Thread ( target = work1 ) t1 . start () #\u5ef6\u65f6\u4e00\u4f1a\uff0c\u4fdd\u8bc1t1\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u60c5\u505a\u5b8c time . sleep ( 1 ) t2 = Thread ( target = work2 ) t2 . start () \u8fd0\u884c\u7ed3\u679c: --- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 100 --- ---- in work1 , g_num is 103 --- ---- in work2 , g_num is 103 --- \u5217\u8868\u5f53\u505a\u5b9e\u53c2\u4f20\u9012\u5230\u7ebf\u7a0b\u4e2d \u00b6 from threading import Thread import time def work1 ( nums ): nums . append ( 44 ) print ( \"----in work1---\" , nums ) def work2 ( nums ): #\u5ef6\u65f6\u4e00\u4f1a\uff0c\u4fdd\u8bc1t1\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u60c5\u505a\u5b8c time . sleep ( 1 ) print ( \"----in work2---\" , nums ) g_nums = [ 11 , 22 , 33 ] # target\u6307\u5b9a\u5c06\u6765 \u8fd9\u4e2a\u7ebf\u7a0b\u7684\u54ea\u4e2a\u51fd\u6570\u6267\u884c\u4ee3\u7801 # args \u6307\u5b9a\u5c06\u6765 \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019 \u4f20\u9012\u4ec0\u4e48\u6570\u636e\u8fc7\u53bb t1 = Thread ( target = work1 , args = ( g_nums ,)) #target\u7528\u6765\u6307\u5b9a\u51fd\u6570,args\u7528\u6765\u6307\u5b9a\u4f20\u9012\u7684\u53c2\u6570,\u4f20\u9012\u7684\u662f\u4e00\u4e2a\u5143\u7956 t1 . start () t2 = Thread ( target = work2 , args = ( g_nums ,)) t2 . start () \u8fd0\u884c\u7ed3\u679c: ---- in work1 --- [ 11 , 22 , 33 , 44 ] ---- in work2 --- [ 11 , 22 , 33 , 44 ] \u603b\u7ed3\uff1a \u00b6 \u5728\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u5168\u5c40\u53d8\u91cf\uff0c\u5f88\u65b9\u4fbf\u5728\u591a\u4e2a\u7ebf\u7a0b\u95f4\u5171\u4eab\u6570\u636e \u7f3a\u70b9\u5c31\u662f\uff0c\u7ebf\u7a0b\u662f\u5bf9\u5168\u5c40\u53d8\u91cf\u968f\u610f\u9042\u6539\u53ef\u80fd\u9020\u6210\u591a\u7ebf\u7a0b\u4e4b\u95f4\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u6df7\u4e71\uff08\u5373\u7ebf\u7a0b\u975e\u5b89\u5168\uff09 5.6. \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf-\u95ee\u9898 \u00b6 \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u95ee\u9898 \u00b6 \u591a\u7ebf\u7a0b\u5f00\u53d1\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898 \u00b6 \u5047\u8bbe\u4e24\u4e2a\u7ebf\u7a0bt1\u548ct2\u90fd\u8981\u5bf9\u5168\u5c40\u53d8\u91cfg_num(\u9ed8\u8ba4\u662f0)\u8fdb\u884c\u52a01\u8fd0\u7b97\uff0ct1\u548ct2\u90fd\u5404\u5bf9g_num\u52a010\u6b21\uff0cg_num\u7684\u6700\u7ec8\u7684\u7ed3\u679c\u5e94\u8be5\u4e3a20\u3002 \u4f46\u662f\u7531\u4e8e\u662f\u591a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u4e0b\u9762\u60c5\u51b5\uff1a \u5728g_num=0\u65f6\uff0ct1\u53d6\u5f97g_num=0\u3002\u6b64\u65f6\u7cfb\u7edf\u628at1\u8c03\u5ea6\u4e3a\u201dsleeping\u201d\u72b6\u6001\uff0c\u628at2\u8f6c\u6362\u4e3a\u201drunning\u201d\u72b6\u6001\uff0ct2\u4e5f\u83b7\u5f97g_num=0 \u7136\u540et2\u5bf9\u5f97\u5230\u7684\u503c\u8fdb\u884c\u52a01\u5e76\u8d4b\u7ed9g_num\uff0c\u4f7f\u5f97g_num=1 \u7136\u540e\u7cfb\u7edf\u53c8\u628at2\u8c03\u5ea6\u4e3a\u201dsleeping\u201d\uff0c\u628at1\u8f6c\u4e3a\u201drunning\u201d\u3002\u7ebf\u7a0bt1\u53c8\u628a\u5b83\u4e4b\u524d\u5f97\u5230\u76840\u52a01\u540e\u8d4b\u503c\u7ed9g_num\u3002 \u8fd9\u6837\u5bfc\u81f4\u867d\u7136t1\u548ct2\u90fd\u5bf9g_num\u52a01\uff0c\u4f46\u7ed3\u679c\u4ecd\u7136\u662fg_num=1 \u6d4b\u8bd51 \u00b6 import threading import time g_num = 0 def work1 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = threading . Thread ( target = work1 , args = ( 100 ,)) t1 . start () t2 = threading . Thread ( target = work2 , args = ( 100 ,)) t2 . start () while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num ) \u8fd0\u884c\u7ed3\u679c\uff1a \u00b6 --- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 0 --- ---- in work1 , g_num is 100 --- ---- in work2 , g_num is 200 --- 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 200 \u6d4b\u8bd52 \u00b6 import threading import time g_num = 0 def work1 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = threading . Thread ( target = work1 , args = ( 1000000 ,)) t1 . start () t2 = threading . Thread ( target = work2 , args = ( 1000000 ,)) t2 . start () while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num ) \u8fd0\u884c\u7ed3\u679c\uff1a \u00b6 --- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 0 --- ---- in work1 , g_num is 1088005 --- ---- in work2 , g_num is 1286202 --- 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 1286202 \u7ed3\u8bba \u00b6 \u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\uff0c\u4f1a\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u95ee\u9898\uff0c\u4ece\u800c\u6570\u636e\u7ed3\u679c\u4f1a\u4e0d\u6b63\u786e 5.7. \u540c\u6b65 \u00b6 \u540c\u6b65\u7684\u6982\u5ff5 \u00b6 \u540c\u6b65\u5c31\u662f\u534f\u540c\u6b65\u8c03\uff0c\u6309\u9884\u5b9a\u7684\u5148\u540e\u6b21\u5e8f\u8fdb\u884c\u8fd0\u884c\u3002\u5982:\u4f60\u8bf4\u5b8c\uff0c\u6211\u518d\u8bf4\u3002 \"\u540c\"\u5b57\u4ece\u5b57\u9762\u4e0a\u5bb9\u6613\u7406\u89e3\u4e3a\u4e00\u8d77\u52a8\u4f5c \u5176\u5b9e\u4e0d\u662f\uff0c\"\u540c\"\u5b57\u5e94\u662f\u6307\u534f\u540c\u3001\u534f\u52a9\u3001\u4e92\u76f8\u914d\u5408\u3002 \u5982\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u540c\u6b65\uff0c\u53ef\u7406\u89e3\u4e3a\u8fdb\u7a0b\u6216\u7ebf\u7a0bA\u548cB\u4e00\u5757\u914d\u5408\uff0cA\u6267\u884c\u5230\u4e00\u5b9a\u7a0b\u5ea6\u65f6\u8981\u4f9d\u9760B\u7684\u67d0\u4e2a\u7ed3\u679c\uff0c\u4e8e\u662f\u505c\u4e0b\u6765\uff0c\u793a\u610fB\u8fd0\u884c;B\u6267\u884c\uff0c\u518d\u5c06\u7ed3\u679c\u7ed9A;A\u518d\u7ee7\u7eed\u64cd\u4f5c\u3002 \u89e3\u51b3\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f \u00b6 \u5bf9\u4e8e\u4e0a\u4e00\u5c0f\u8282\u63d0\u51fa\u7684\u90a3\u4e2a\u8ba1\u7b97\u9519\u8bef\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u540c\u6b65\u6765\u8fdb\u884c\u89e3\u51b3 \u601d\u8def\uff0c\u5982\u4e0b: \u7cfb\u7edf\u8c03\u7528t1\uff0c\u7136\u540e\u83b7\u53d6\u5230g_num\u7684\u503c\u4e3a0\uff0c\u6b64\u65f6\u4e0a\u4e00\u628a\u9501\uff0c\u5373\u4e0d\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u64cd\u4f5cg_num t1\u5bf9g_num\u7684\u503c\u8fdb\u884c+1 t1\u89e3\u9501\uff0c\u6b64\u65f6g_num\u7684\u503c\u4e3a1\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4f7f\u7528g_num\u4e86\uff0c\u800c\u4e14\u662fg_num\u7684\u503c\u4e0d\u662f0\u800c\u662f1 \u540c\u7406\u5176\u4ed6\u7ebf\u7a0b\u5728\u5bf9g_num\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u90fd\u8981\u5148\u4e0a\u9501\uff0c\u5904\u7406\u5b8c\u540e\u518d\u89e3\u9501\uff0c\u5728\u4e0a\u9501\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4e0d\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u5c31\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u6b63\u786e\u6027 5.8. \u4e92\u65a5\u9501(\u91cd\u70b9) \u00b6 \u4e92\u65a5\u9501 \u00b6 \u5f53\u591a\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u540c\u65f6\u4fee\u6539\u67d0\u4e00\u4e2a\u5171\u4eab\u6570\u636e\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fdb\u884c\u540c\u6b65\u63a7\u5236 \u7ebf\u7a0b\u540c\u6b65\u80fd\u591f\u4fdd\u8bc1\u591a\u4e2a\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee\u7ade\u4e89\u8d44\u6e90\uff0c\u6700\u7b80\u5355\u7684\u540c\u6b65\u673a\u5236\u662f\u5f15\u5165\u4e92\u65a5\u9501\u3002 \u4e92\u65a5\u9501\u4e3a\u8d44\u6e90\u5f15\u5165\u4e00\u4e2a\u72b6\u6001\uff1a\u9501\u5b9a/\u975e\u9501\u5b9a \u67d0\u4e2a\u7ebf\u7a0b\u8981\u66f4\u6539\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5148\u5c06\u5176\u9501\u5b9a\uff0c\u6b64\u65f6\u8d44\u6e90\u7684\u72b6\u6001\u4e3a\u201c\u9501\u5b9a\u201d\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u66f4\u6539\uff1b\u76f4\u5230\u8be5\u7ebf\u7a0b\u91ca\u653e\u8d44\u6e90\uff0c\u5c06\u8d44\u6e90\u7684\u72b6\u6001\u53d8\u6210\u201c\u975e\u9501\u5b9a\u201d\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u624d\u80fd\u518d\u6b21\u9501\u5b9a\u8be5\u8d44\u6e90\u3002\u4e92\u65a5\u9501\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u6570\u636e\u7684\u6b63\u786e\u6027\u3002 threading\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86Lock\u7c7b\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5904\u7406\u9501\u5b9a\uff1a # \u521b\u5efa\u9501 mutex = threading . Lock () # \u9501\u5b9a mutex . acquire () # \u91ca\u653e mutex . release () \u6ce8\u610f\uff1a \u00b6 \u5982\u679c\u8fd9\u4e2a\u9501\u4e4b\u524d\u662f\u6ca1\u6709\u4e0a\u9501\u7684\uff0c\u90a3\u4e48acquire\u4e0d\u4f1a\u5835\u585e \u5982\u679c\u5728\u8c03\u7528acquire\u5bf9\u8fd9\u4e2a\u9501\u4e0a\u9501\u4e4b\u524d \u5b83\u5df2\u7ecf\u88ab \u5176\u4ed6\u7ebf\u7a0b\u4e0a\u4e86\u9501\uff0c\u90a3\u4e48\u6b64\u65f6acquire\u4f1a\u5835\u585e\uff0c\u76f4\u5230\u8fd9\u4e2a\u9501\u88ab\u89e3\u9501\u4e3a\u6b62 \u4f7f\u7528\u4e92\u65a5\u9501\u5b8c\u62102\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u5404\u52a0100\u4e07\u6b21\u7684\u64cd\u4f5c \u00b6 \u8fd9\u4e2a\u662f\u5bf9for\u5faa\u73af\u52a0\u9501,\u8981\u7b49for\u5faa\u73af\u5168\u90e8\u6267\u884c\u5b8c import threading import time # \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf g_num = 0 def test1 ( num ): global g_num # \u4e0a\u9501\uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u88ab\u4e0a\u9501\uff0c\u90a3\u4e48\u6b64\u65f6 \u4e0a\u9501\u6210\u529f # \u5982\u679c\u4e0a\u9501\u4e4b\u524d \u5df2\u7ecf\u88ab\u4e0a\u9501\u4e86\uff0c\u90a3\u4e48\u6b64\u65f6\u4f1a\u5835\u585e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230 \u8fd9\u4e2a\u9501\u88ab\u89e3\u5f00\u4f4d\u7f6e mutex . acquire () for i in range ( num ): g_num += 1 # \u89e3\u9501 mutex . release () print ( \"-----in test1 g_num= %d ----\" % g_num ) def test2 ( num ): global g_num mutex . acquire () for i in range ( num ): g_num += 1 print ( \"-----in test2 g_num= %d =----\" % g_num ) mutex . release () print ( \"-----in test2 g_num= %d =----\" % g_num ) # \u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u4e0a\u9501\u7684 mutex = threading . Lock () def main (): t1 = threading . Thread ( target = test1 , args = ( 10000000 ,)) t2 = threading . Thread ( target = test2 , args = ( 10000000 ,)) t1 . start () t2 . start () # \u7b49\u5f85\u4e0a\u9762\u76842\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5.... time . sleep ( 2 ) print ( \"-----in main Thread g_num = %d ---\" % g_num ) if __name__ == \"__main__\" : main () \u8fd9\u4e2a\u662f\u5bf9for\u5faa\u73af\u5185\u7684\u4ee3\u7801\u4e0a\u9501 import threading import time g_num = 0 def test1 ( num ): global g_num for i in range ( num ): mutex . acquire () # \u4e0a\u9501 g_num += 1 mutex . release () # \u89e3\u9501 print ( \"---test1---g_num= %d \" % g_num ) def test2 ( num ): global g_num for i in range ( num ): mutex . acquire () # \u4e0a\u9501 g_num += 1 mutex . release () # \u89e3\u9501 print ( \"---test2---g_num= %d \" % g_num ) # \u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501 # \u9ed8\u8ba4\u662f\u672a\u4e0a\u9501\u7684\u72b6\u6001 mutex = threading . Lock () # \u521b\u5efa2\u4e2a\u7ebf\u7a0b\uff0c\u8ba9\u4ed6\u4eec\u5404\u81ea\u5bf9g_num\u52a01000000\u6b21 p1 = threading . Thread ( target = test1 , args = ( 1000000 ,)) p1 . start () p2 = threading . Thread ( target = test2 , args = ( 1000000 ,)) p2 . start () # \u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210 while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num ) \u8fd0\u884c\u7ed3\u679c\uff1a --- test1 --- g_num = 1909909 --- test2 --- g_num = 2000000 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 2000000 \u53ef\u4ee5\u770b\u5230\u6700\u540e\u7684\u7ed3\u679c\uff0c\u52a0\u5165\u4e92\u65a5\u9501\u540e\uff0c\u5176\u7ed3\u679c\u4e0e\u9884\u671f\u76f8\u7b26\u3002 \u4e0a\u9501\u89e3\u9501\u8fc7\u7a0b \u00b6 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u9501\u7684acquire()\u65b9\u6cd5\u83b7\u5f97\u9501\u65f6\uff0c\u9501\u5c31\u8fdb\u5165\u201clocked\u201d\u72b6\u6001\u3002 \u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u5f97\u9501\u3002\u5982\u679c\u6b64\u65f6\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u5f97\u8fd9\u4e2a\u9501\uff0c\u8be5\u7ebf\u7a0b\u5c31\u4f1a\u53d8\u4e3a\u201cblocked\u201d\u72b6\u6001\uff0c\u79f0\u4e3a\u201c\u963b\u585e\u201d\uff0c\u76f4\u5230\u62e5\u6709\u9501\u7684\u7ebf\u7a0b\u8c03\u7528\u9501\u7684release()\u65b9\u6cd5\u91ca\u653e\u9501\u4e4b\u540e\uff0c\u9501\u8fdb\u5165\u201cunlocked\u201d\u72b6\u6001\u3002 \u7ebf\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\u4ece\u5904\u4e8e\u540c\u6b65\u963b\u585e\u72b6\u6001\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u6765\u83b7\u5f97\u9501\uff0c\u5e76\u4f7f\u5f97\u8be5\u7ebf\u7a0b\u8fdb\u5165\u8fd0\u884c\uff08running\uff09\u72b6\u6001\u3002 \u603b\u7ed3 \u00b6 \u9501\u7684\u597d\u5904\uff1a \u786e\u4fdd\u4e86\u67d0\u6bb5\u5173\u952e\u4ee3\u7801\u53ea\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6574\u5730\u6267\u884c \u9501\u7684\u574f\u5904\uff1a \u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u67d0\u6bb5\u4ee3\u7801\u5b9e\u9645\u4e0a\u53ea\u80fd\u4ee5\u5355\u7ebf\u7a0b\u6a21\u5f0f\u6267\u884c\uff0c\u6548\u7387\u5c31\u5927\u5927\u5730\u4e0b\u964d\u4e86 \u7531\u4e8e\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u9501\uff0c\u4e0d\u540c\u7684\u7ebf\u7a0b\u6301\u6709\u4e0d\u540c\u7684\u9501\uff0c\u5e76\u8bd5\u56fe\u83b7\u53d6\u5bf9\u65b9\u6301\u6709\u7684\u9501\u65f6\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501 5.9. \u6b7b\u9501 \u00b6 \u6b7b\u9501 \u00b6 \u73b0\u5b9e\u793e\u4f1a\u4e2d\uff0c\u7537\u5973\u53cc\u65b9\u90fd\u5728\u7b49\u5f85\u5bf9\u65b9\u5148\u9053\u6b49 \u5982\u679c\u53cc\u65b9\u90fd\u8fd9\u6837\u56fa\u6267\u7684\u7b49\u5f85\u5bf9\u65b9\u5148\u5f00\u53e3\uff0c\u5f04\u4e0d\u597d\uff0c\u5c31\u5206\u641c\u4e86 1. \u6b7b\u9501 \u00b6 \u5728\u7ebf\u7a0b\u95f4\u5171\u4eab\u591a\u4e2a\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u5360\u6709\u4e00\u90e8\u5206\u8d44\u6e90\u5e76\u4e14\u540c\u65f6\u7b49\u5f85\u5bf9\u65b9\u7684\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u5c3d\u7ba1\u6b7b\u9501\u5f88\u5c11\u53d1\u751f\uff0c\u4f46\u4e00\u65e6\u53d1\u751f\u5c31\u4f1a\u9020\u6210\u5e94\u7528\u7684\u505c\u6b62\u54cd\u5e94\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u6b7b\u9501\u7684\u4f8b\u5b50 #coding=utf-8 import threading import time class MyThread1 ( threading . Thread ): def run ( self ): # \u5bf9mutexA\u4e0a\u9501 mutexA . acquire () # mutexA\u4e0a\u9501\u540e\uff0c\u5ef6\u65f61\u79d2\uff0c\u7b49\u5f85\u53e6\u5916\u90a3\u4e2a\u7ebf\u7a0b \u628amutexB\u4e0a\u9501 print ( self . name + '----do1---up----' ) time . sleep ( 1 ) # \u6b64\u65f6\u4f1a\u5835\u585e\uff0c\u56e0\u4e3a\u8fd9\u4e2amutexB\u5df2\u7ecf\u88ab\u53e6\u5916\u7684\u7ebf\u7a0b\u62a2\u5148\u4e0a\u9501\u4e86 mutexB . acquire () print ( self . name + '----do1---down----' ) mutexB . release () # \u5bf9mutexA\u89e3\u9501 mutexA . release () class MyThread2 ( threading . Thread ): def run ( self ): # \u5bf9mutexB\u4e0a\u9501 mutexB . acquire () # mutexB\u4e0a\u9501\u540e\uff0c\u5ef6\u65f61\u79d2\uff0c\u7b49\u5f85\u53e6\u5916\u90a3\u4e2a\u7ebf\u7a0b \u628amutexA\u4e0a\u9501 print ( self . name + '----do2---up----' ) time . sleep ( 1 ) # \u6b64\u65f6\u4f1a\u5835\u585e\uff0c\u56e0\u4e3a\u8fd9\u4e2amutexA\u5df2\u7ecf\u88ab\u53e6\u5916\u7684\u7ebf\u7a0b\u62a2\u5148\u4e0a\u9501\u4e86 mutexA . acquire () print ( self . name + '----do2---down----' ) mutexA . release () # \u5bf9mutexB\u89e3\u9501 mutexB . release () mutexA = threading . Lock () mutexB = threading . Lock () if __name__ == '__main__' : t1 = MyThread1 () t2 = MyThread2 () t1 . start () t2 . start () \u8fd0\u884c\u7ed3\u679c\uff1a \u6b64\u65f6\u5df2\u7ecf\u8fdb\u5165\u5230\u4e86\u6b7b\u9501\u72b6\u6001\uff0c\u53ef\u4ee5\u4f7f\u7528ctrl-c\u9000\u51fa 2. \u907f\u514d\u6b7b\u9501 \u00b6 \u7a0b\u5e8f\u8bbe\u8ba1\u65f6\u8981\u5c3d\u91cf\u907f\u514d\uff08\u94f6\u884c\u5bb6\u7b97\u6cd5\uff09 \u6dfb\u52a0\u8d85\u65f6\u65f6\u95f4\u7b49 \u9644\u5f55-\u94f6\u884c\u5bb6\u7b97\u6cd5 \u00b6 [\u80cc\u666f\u77e5\u8bc6] \u4e00\u4e2a\u94f6\u884c\u5bb6\u5982\u4f55\u5c06\u4e00\u5b9a\u6570\u76ee\u7684\u8d44\u91d1\u5b89\u5168\u5730\u501f\u7ed9\u82e5\u5e72\u4e2a\u5ba2\u6237\uff0c\u4f7f\u8fd9\u4e9b\u5ba2\u6237\u65e2\u80fd\u501f\u5230\u94b1\u5b8c\u6210\u8981\u5e72\u7684\u4e8b\uff0c\u540c\u65f6\u94f6\u884c\u5bb6\u53c8\u80fd\u6536\u56de\u5168\u90e8\u8d44\u91d1\u800c\u4e0d\u81f3\u4e8e\u7834\u4ea7\uff0c\u8fd9\u5c31\u662f\u94f6\u884c\u5bb6\u95ee\u9898\u3002\u8fd9\u4e2a\u95ee\u9898\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8d44\u6e90\u5206\u914d\u95ee\u9898\u5341\u5206\u76f8\u4f3c\uff1a\u94f6\u884c\u5bb6\u5c31\u50cf\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5ba2\u6237\u5c31\u50cf\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u5c31\u662f\u7cfb\u7edf\u7684\u8d44\u6e90\u3002 [\u95ee\u9898\u7684\u63cf\u8ff0] \u4e00\u4e2a\u94f6\u884c\u5bb6\u62e5\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u8d44\u91d1\uff0c\u6709\u82e5\u5e72\u4e2a\u5ba2\u6237\u8981\u8d37\u6b3e\u3002\u6bcf\u4e2a\u5ba2\u6237\u987b\u5728\u4e00\u5f00\u59cb\u5c31\u58f0\u660e\u4ed6\u6240\u9700\u8d37\u6b3e\u7684\u603b\u989d\u3002\u82e5\u8be5\u5ba2\u6237\u8d37\u6b3e\u603b\u989d\u4e0d\u8d85\u8fc7\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u603b\u6570\uff0c\u94f6\u884c\u5bb6\u53ef\u4ee5\u63a5\u6536\u5ba2\u6237\u7684\u8981\u6c42\u3002\u5ba2\u6237\u8d37\u6b3e\u662f\u4ee5\u6bcf\u6b21\u4e00\u4e2a\u8d44\u91d1\u5355\u4f4d\uff08\u59821\u4e07RMB\u7b49\uff09\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\uff0c\u5ba2\u6237\u5728\u501f\u6ee1\u6240\u9700\u7684\u5168\u90e8\u5355\u4f4d\u6b3e\u989d\u4e4b\u524d\u53ef\u80fd\u4f1a\u7b49\u5f85\uff0c\u4f46\u94f6\u884c\u5bb6\u987b\u4fdd\u8bc1\u8fd9\u79cd\u7b49\u5f85\u662f\u6709\u9650\u7684\uff0c\u53ef\u5b8c\u6210\u7684\u3002 \u4f8b\u5982\uff1a\u6709\u4e09\u4e2a\u5ba2\u6237C1\uff0cC2\uff0cC3\uff0c\u5411\u94f6\u884c\u5bb6\u501f\u6b3e\uff0c\u8be5\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u603b\u989d\u4e3a10\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u5176\u4e2dC1\u5ba2\u6237\u8981\u501f9\u5404\u8d44\u91d1\u5355\u4f4d\uff0cC2\u5ba2\u6237\u8981\u501f3\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0cC3\u5ba2\u6237\u8981\u501f8\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u603b\u8ba120\u4e2a\u8d44\u91d1\u5355\u4f4d\u3002\u67d0\u4e00\u65f6\u523b\u7684\u72b6\u6001\u5982\u56fe\u6240\u793a\u3002 \u5bf9\u4e8ea\u56fe\u7684\u72b6\u6001\uff0c\u6309\u7167\u5b89\u5168\u5e8f\u5217\u7684\u8981\u6c42\uff0c\u6211\u4eec\u9009\u7684\u7b2c\u4e00\u4e2a\u5ba2\u6237\u5e94\u6ee1\u8db3\u8be5\u5ba2\u6237\u6240\u9700\u7684\u8d37\u6b3e\u5c0f\u4e8e\u7b49\u4e8e\u94f6\u884c\u5bb6\u5f53\u524d\u6240\u5269\u4f59\u7684\u94b1\u6b3e\uff0c\u53ef\u4ee5\u770b\u51fa\u53ea\u6709C2\u5ba2\u6237\u80fd\u88ab\u6ee1\u8db3\uff1aC2\u5ba2\u6237\u97001\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u5c0f\u94f6\u884c\u5bb6\u624b\u4e2d\u76842\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u4e8e\u662f\u94f6\u884c\u5bb6\u628a1\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9C2\u5ba2\u6237\uff0c\u4f7f\u4e4b\u5b8c\u6210\u5de5\u4f5c\u5e76\u5f52\u8fd8\u6240\u501f\u76843\u4e2a\u8d44\u91d1\u5355\u4f4d\u7684\u94b1\uff0c\u8fdb\u5165b\u56fe\u3002\u540c\u7406\uff0c\u94f6\u884c\u5bb6\u628a4\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9C3\u5ba2\u6237\uff0c\u4f7f\u5176\u5b8c\u6210\u5de5\u4f5c\uff0c\u5728c\u56fe\u4e2d\uff0c\u53ea\u5269\u4e00\u4e2a\u5ba2\u6237C1\uff0c\u5b83\u97007\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u8fd9\u65f6\u94f6\u884c\u5bb6\u67098\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u6240\u4ee5C1\u4e5f\u80fd\u987a\u5229\u501f\u5230\u94b1\u5e76\u5b8c\u6210\u5de5\u4f5c\u3002\u6700\u540e\uff08\u89c1\u56fed\uff09\u94f6\u884c\u5bb6\u6536\u56de\u5168\u90e810\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u4fdd\u8bc1\u4e0d\u8d54\u672c\u3002\u90a3\u9ebd\u5ba2\u6237\u5e8f\u5217{C1\uff0cC2\uff0cC3}\u5c31\u662f\u4e2a\u5b89\u5168\u5e8f\u5217\uff0c\u6309\u7167\u8fd9\u4e2a\u5e8f\u5217\u8d37\u6b3e\uff0c\u94f6\u884c\u5bb6\u624d\u662f\u5b89\u5168\u7684\u3002\u5426\u5219\u7684\u8bdd\uff0c\u82e5\u5728\u56feb\u72b6\u6001\u65f6\uff0c\u94f6\u884c\u5bb6\u628a\u624b\u4e2d\u76844\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9\u4e86C1\uff0c\u5219\u51fa\u73b0\u4e0d\u5b89\u5168\u72b6\u6001\uff1a\u8fd9\u65f6C1\uff0cC3\u5747\u4e0d\u80fd\u5b8c\u6210\u5de5\u4f5c\uff0c\u800c\u94f6\u884c\u5bb6\u624b\u4e2d\u53c8\u6ca1\u6709\u94b1\u4e86\uff0c\u7cfb\u7edf\u9677\u5165\u50f5\u6301\u5c40\u9762\uff0c\u94f6\u884c\u5bb6\u4e5f\u4e0d\u80fd\u6536\u56de\u6295\u8d44\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u94f6\u884c\u5bb6\u7b97\u6cd5\u662f\u4ece\u5f53\u524d\u72b6\u6001\u51fa\u53d1\uff0c\u9010\u4e2a\u6309\u5b89\u5168\u5e8f\u5217\u68c0\u67e5\u5404\u5ba2\u6237\u8c01\u80fd\u5b8c\u6210\u5176\u5de5\u4f5c\uff0c\u7136\u540e\u5047\u5b9a\u5176\u5b8c\u6210\u5de5\u4f5c\u4e14\u5f52\u8fd8\u5168\u90e8\u8d37\u6b3e\uff0c\u518d\u8fdb\u800c\u68c0\u67e5\u4e0b\u4e00\u4e2a\u80fd\u5b8c\u6210\u5de5\u4f5c\u7684\u5ba2\u6237\uff0c......\u3002\u5982\u679c\u6240\u6709\u5ba2\u6237\u90fd\u80fd\u5b8c\u6210\u5de5\u4f5c\uff0c\u5219\u627e\u5230\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\uff0c\u94f6\u884c\u5bb6\u624d\u662f\u5b89\u5168\u7684\u3002 5.10. \u6848\u4f8b:\u591a\u4efb\u52a1\u7248udp\u804a\u5929\u5668 \u00b6 \u6848\u4f8b\uff1a\u591a\u4efb\u52a1\u7248udp\u804a\u5929\u5668 \u00b6 \u8bf4\u660e \u00b6 \u7f16\u5199\u4e00\u4e2a\u67092\u4e2a\u7ebf\u7a0b\u7684\u7a0b\u5e8f \u7ebf\u7a0b1\u7528\u6765\u63a5\u6536\u6570\u636e\u7136\u540e\u663e\u793a \u7ebf\u7a0b2\u7528\u6765\u68c0\u6d4b\u952e\u76d8\u6570\u636e\u7136\u540e\u901a\u8fc7udp\u53d1\u9001\u6570\u636e \u8981\u6c42 \u00b6 \u5b9e\u73b0\u4e0a\u8ff0\u8981\u6c42 \u603b\u7ed3\u591a\u4efb\u52a1\u7a0b\u5e8f\u7684\u7279\u70b9 \u53c2\u8003\u4ee3\u7801: \u00b6 import socket import threading def recv_msg(udp_socket): \"\"\"\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a\"\"\" # \u63a5\u6536\u6570\u636e while True: recv_data = udp_socket.recvfrom(1024) print(recv_data) def send_msg(udp_socket, dest_ip, dest_port): \"\"\"\u53d1\u9001\u6570\u636e\"\"\" # \u53d1\u9001\u6570\u636e while True: send_data = input(\"\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\") udp_socket.sendto(send_data.encode(\"utf-8\"), (dest_ip, dest_port)) #\u8fd9\u91cc\u662f\u4e00\u4e2a\u5143\u7956 def main(): \"\"\"\u5b8c\u6210udp\u804a\u5929\u5668\u7684\u6574\u4f53\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f udp_socket.bind((\"\", 7890)) # 3. \u83b7\u53d6\u5bf9\u65b9\u7684ip dest_ip = input(\"\u8bf7\u8f93\u5165\u5bf9\u65b9\u7684ip:\") dest_port = int(input(\"\u8bf7\u8f93\u5165\u5bf9\u65b9\u7684port:\")) # 4. \u521b\u5efa2\u4e2a\u7ebf\u7a0b\uff0c\u53bb\u6267\u884c\u76f8\u5e94\u7684\u529f\u80fd t_recv = threading.Thread(target=recv_msg, args=(udp_socket,)) #\u5199\u9017\u53f7\u662f\u56e0\u4e3a\u8981\u4f20\u5143\u7956 t_send = threading.Thread(target=send_msg, args=(udp_socket, dest_ip, dest_port)) t_recv.start() t_send.start() if __name__ == \"__main__\": main()","title":"053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#5-","text":"","title":"5. \u591a\u4efb\u52a1-\u7ebf\u7a0b"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#51","text":"\u591a\u4efb\u52a1\u4ecb\u7ecd \u73b0\u5b9e\u751f\u6d3b\u4e2d \u6709\u5f88\u591a\u7684\u573a\u666f\u4e2d\u7684\u4e8b\u60c5\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u5f00\u8f66\u7684\u65f6\u5019 \u624b\u548c\u811a\u5171\u540c\u6765\u9a7e\u9a76\u6c7d\u8f66\uff0c\u518d\u6bd4\u5982\u5531\u6b4c\u8df3\u821e\u4e5f\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff1b \u5982\u4e0b\u7a0b\u5e8f\uff0c\u6765\u6a21\u62df\u201c\u5531\u6b4c\u8df3\u821e\u201d\u8fd9\u4ef6\u4e8b\u60c5 import time def sing (): \"\"\"\u5531\u6b4c 5\u79d2\u949f\"\"\" for i in range ( 5 ): print ( \"----\u6b63\u5728\u5531:\u83ca\u82b1\u8336----\" ) time . sleep ( 1 ) def dance (): \"\"\"\u8df3\u821e 5\u79d2\u949f\"\"\" for i in range ( 5 ): print ( \"----\u6b63\u5728\u8df3\u821e----\" ) time . sleep ( 1 ) def main (): sing () dance () if __name__ == \"__main__\" : main () \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u5531 : \u83ca\u82b1\u8336 ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- ---- \u6b63\u5728\u8df3\u821e ---- > !!!\u6ce8\u610f \u5f88\u663e\u7136\u521a\u521a\u7684\u7a0b\u5e8f\u5e76\u6ca1\u6709\u5b8c\u6210\u5531\u6b4c\u548c\u8df3\u821e\u540c\u65f6\u8fdb\u884c\u7684\u8981\u6c42 \u5982\u679c\u60f3\u8981\u5b9e\u73b0\u201c\u5531\u6b4c\u8df3\u821e\u201d\u540c\u65f6\u8fdb\u884c\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u53eb\u505a\uff1a\u591a\u4efb\u52a1","title":"5.1. \u591a\u4efb\u52a1\u7684\u4ecb\u7ecd"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#52","text":"","title":"5.2. \u591a\u4efb\u52a1\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_1","text":"\u4ec0\u4e48\u53eb\u201c\u591a\u4efb\u52a1\u201d\u5462\uff1f\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u4f60\u4e00\u8fb9\u5728\u7528\u6d4f\u89c8\u5668\u4e0a\u7f51\uff0c\u4e00\u8fb9\u5728\u542cMP3\uff0c\u4e00\u8fb9\u5728\u7528Word\u8d76\u4f5c\u4e1a\uff0c\u8fd9\u5c31\u662f\u591a\u4efb\u52a1\uff0c\u81f3\u5c11\u540c\u65f6\u67093\u4e2a\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\u3002\u8fd8\u6709\u5f88\u591a\u4efb\u52a1\u6084\u6084\u5730\u5728\u540e\u53f0\u540c\u65f6\u8fd0\u884c\u7740\uff0c\u53ea\u662f\u684c\u9762\u4e0a\u6ca1\u6709\u663e\u793a\u800c\u5df2\u3002 \u73b0\u5728\uff0c\u591a\u6838CPU\u5df2\u7ecf\u975e\u5e38\u666e\u53ca\u4e86\uff0c\u4f46\u662f\uff0c\u5373\u4f7f\u8fc7\u53bb\u7684\u5355\u6838CPU\uff0c\u4e5f\u53ef\u4ee5\u6267\u884c\u591a\u4efb\u52a1\u3002\u7531\u4e8eCPU\u6267\u884c\u4ee3\u7801\u90fd\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u90a3\u4e48\uff0c\u5355\u6838CPU\u662f\u600e\u4e48\u6267\u884c\u591a\u4efb\u52a1\u7684\u5462\uff1f \u7b54\u6848\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u8f6e\u6d41\u8ba9\u5404\u4e2a\u4efb\u52a1\u4ea4\u66ff\u6267\u884c\uff0c\u4efb\u52a11\u6267\u884c0.01\u79d2\uff0c\u5207\u6362\u5230\u4efb\u52a12\uff0c\u4efb\u52a12\u6267\u884c0.01\u79d2\uff0c\u518d\u5207\u6362\u5230\u4efb\u52a13\uff0c\u6267\u884c0.01\u79d2\u2026\u2026\u8fd9\u6837\u53cd\u590d\u6267\u884c\u4e0b\u53bb\u3002\u8868\u9762\u4e0a\u770b\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff0c\u4f46\u662f\uff0c\u7531\u4e8eCPU\u7684\u6267\u884c\u901f\u5ea6\u5b9e\u5728\u662f\u592a\u5feb\u4e86\uff0c\u6211\u4eec\u611f\u89c9\u5c31\u50cf\u6240\u6709\u4efb\u52a1\u90fd\u5728\u540c\u65f6\u6267\u884c\u4e00\u6837\u3002 \u771f\u6b63\u7684\u5e76\u884c\u6267\u884c\u591a\u4efb\u52a1\u53ea\u80fd\u5728\u591a\u6838CPU\u4e0a\u5b9e\u73b0\uff0c\u4f46\u662f\uff0c\u7531\u4e8e\u4efb\u52a1\u6570\u91cf\u8fdc\u8fdc\u591a\u4e8eCPU\u7684\u6838\u5fc3\u6570\u91cf\uff0c\u6240\u4ee5\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u81ea\u52a8\u628a\u5f88\u591a\u4efb\u52a1\u8f6e\u6d41\u8c03\u5ea6\u5230\u6bcf\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\u3002","title":"\u591a\u4efb\u52a1\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_2","text":"\u5e76\u53d1\uff1a\u6307\u7684\u662f\u4efb\u52a1\u6570\u591a\u4f59cpu\u6838\u6570\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd\u4efb\u52a1\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5b9e\u73b0\u7528\u591a\u4e2a\u4efb\u52a1\u201c\u4e00\u8d77\u201d\u6267\u884c\uff08\u5b9e\u9645\u4e0a\u603b\u6709\u4e00\u4e9b\u4efb\u52a1\u4e0d\u5728\u6267\u884c\uff0c\u56e0\u4e3a\u5207\u6362\u4efb\u52a1\u7684\u901f\u5ea6\u76f8\u5f53\u5feb\uff0c\u770b\u4e0a\u53bb\u4e00\u8d77\u6267\u884c\u800c\u5df2\uff09 \u5e76\u884c\uff1a\u6307\u7684\u662f\u4efb\u52a1\u6570\u5c0f\u4e8e\u7b49\u4e8ecpu\u6838\u6570\uff0c\u5373\u4efb\u52a1\u771f\u7684\u662f\u4e00\u8d77\u6267\u884c\u7684","title":"\u6ce8\u610f\uff1a"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#53","text":"","title":"5.3. \u7ebf\u7a0b(\u91cd\u70b9)"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_3","text":"","title":"\u7ebf\u7a0b"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#pythonthreadpythonthreadingthread","text":"","title":"python\u7684thread\u6a21\u5757\u662f\u6bd4\u8f83\u5e95\u5c42\u7684\u6a21\u5757\uff0cpython\u7684threading\u6a21\u5757\u662f\u5bf9thread\u505a\u4e86\u4e00\u4e9b\u5305\u88c5\u7684\uff0c\u53ef\u4ee5\u66f4\u52a0\u65b9\u4fbf\u7684\u88ab\u4f7f\u7528"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#1-threading","text":"","title":"1. \u4f7f\u7528threading\u6a21\u5757"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_4","text":"#coding=utf-8 import time def saySorry (): print ( \"\u4eb2\u7231\u7684\uff0c\u6211\u9519\u4e86\uff0c\u6211\u80fd\u5403\u996d\u4e86\u5417\uff1f\" ) time . sleep ( 1 ) if __name__ == \"__main__\" : for i in range ( 5 ): saySorry () \u8fd0\u884c\u7ed3\u679c\uff1a","title":"\u5355\u7ebf\u7a0b\u6267\u884c"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_5","text":"#coding=utf-8 import threading import time def saySorry (): print ( \"\u4eb2\u7231\u7684\uff0c\u6211\u9519\u4e86\uff0c\u6211\u80fd\u5403\u996d\u4e86\u5417\uff1f\" ) time . sleep ( 1 ) if __name__ == \"__main__\" : for i in range ( 5 ): t = threading . Thread ( target = saySorry ) #target\u4f20\u9012\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u540d\u5b57(\u53d8\u91cf\u540d\u6307\u5411\u4e86\u8fd9\u4e2a\u51fd\u6570) #t\u662fThread\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 t . start () #\u542f\u52a8\u7ebf\u7a0b\uff0c\u5373\u8ba9\u7ebf\u7a0b\u5f00\u59cb\u6267\u884c \u8fd0\u884c\u7ed3\u679c\uff1a \u4e3b\u7ebf\u7a0b\u521b\u5efa\u7684\u7ebf\u7a0b\u53eb\u505a\u5b50\u7ebf\u7a0b","title":"\u591a\u7ebf\u7a0b\u6267\u884c"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_6","text":"\u53ef\u4ee5\u660e\u663e\u770b\u51fa\u4f7f\u7528\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u64cd\u4f5c\uff0c\u82b1\u8d39\u65f6\u95f4\u8981\u77ed\u5f88\u591a \u5f53\u8c03\u7528 start() \u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u7684\u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u4e14\u5f00\u59cb\u6267\u884c","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#2","text":"#coding=utf-8 import threading from time import sleep , ctime def sing (): for i in range ( 3 ): print ( \"\u6b63\u5728\u5531\u6b4c... %d \" % i ) sleep ( 1 ) def dance (): for i in range ( 3 ): print ( \"\u6b63\u5728\u8df3\u821e... %d \" % i ) sleep ( 1 ) if __name__ == '__main__' : print ( '---\u5f00\u59cb---: %s ' % ctime ()) t1 = threading . Thread ( target = sing ) #\u53ea\u5199\u51fd\u6570\u540d\u662f\u544a\u8bc9\u5b83\u51fd\u6570\u5728\u54ea,\u800c\u52a0\u4e86\u62ec\u53f7\u5c31\u662f\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 t2 = threading . Thread ( target = dance ) t1 . start () t2 . start () #sleep(5) # \u5c4f\u853d\u6b64\u884c\u4ee3\u7801\uff0c\u8bd5\u8bd5\u770b\uff0c\u7a0b\u5e8f\u662f\u5426\u4f1a\u7acb\u9a6c\u7ed3\u675f\uff1f,\u4e0d\u4f1a. print ( '---\u7ed3\u675f---: %s ' % ctime ()) #\u4e3b\u7ebf\u7a0b\u8ddf\u5b50\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u662f\u4e0d\u4e00\u5b9a\u7684\u6ca1\u6709\u5148\u540e\u7684\u987a\u5e8f","title":"2. \u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u6240\u6709\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u540e\u624d\u7ed3\u675f"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#3","text":"#coding=utf-8 import threading from time import sleep , ctime def sing (): for i in range ( 3 ): print ( \"\u6b63\u5728\u5531\u6b4c... %d \" % i ) sleep ( 1 ) # \u5982\u679c\u521b\u5efaThread\u65f6\u6267\u884c\u7684\u51fd\u6570\uff0c\u8fd0\u884c\u7ed3\u675f\u90a3\u4e48\u610f\u5473\u7740 \u8fd9\u4e2a\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86.... def dance (): for i in range ( 3 ): print ( \"\u6b63\u5728\u8df3\u821e... %d \" % i ) sleep ( 1 ) if __name__ == '__main__' : print ( '---\u5f00\u59cb---: %s ' % ctime ()) t1 = threading . Thread ( target = sing ) t2 = threading . Thread ( target = dance ) t1 . start () t2 . start () while True : length = len ( threading . enumerate ()) print ( '\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u4e3a\uff1a %d ' % length ) if length <= 1 : break sleep ( 0.5 ) \u9002\u5f53\u5ef6\u65f6\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u4f18\u5148\u5f00\u59cb import threading import time def test1 (): for i in range ( 5 ): print ( \"-----test1--- %d ---\" % i ) def test2 (): for i in range ( 5 ): print ( \"-----test2--- %d ---\" % i ) def main (): t1 = threading . Thread ( target = test1 ) t2 = threading . Thread ( target = test2 ) t1 . start () time . sleep ( 1 ) print ( \"---1---\" ) t2 . start () time . sleep ( 1 ) print ( \"---2---\" ) print ( threading . enumerate ()) if __name__ == \"__main__\" : main ()","title":"3. \u67e5\u770b\u7ebf\u7a0b\u6570\u91cf"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#05-py","text":"import threading import time def test1 (): for i in range ( 5 ): print ( \"-----test1--- %d ---\" % i ) time . sleep ( 1 ) def main (): # \u5728\u8c03\u7528Thread\u4e4b\u524d\u5148\u6253\u5370\u5f53\u524d\u7ebf\u7a0b\u4fe1\u606f print ( threading . enumerate ()) t1 = threading . Thread ( target = test1 ) # \u5728\u8c03\u7528Thread\u4e4b\u540e\u6253\u5370 print ( threading . enumerate ()) t1 . start () # \u5728\u8c03\u7528start\u4e4b\u540e\u6253\u5370 print ( threading . enumerate ()) if __name__ == \"__main__\" : main () \u521b\u5efa\u591a\u7ebf\u7a0b\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u589e\u52a0\u591a\u7ebf\u7a0b,\u53ea\u7528\u4f7f\u7528\u4e86start\u5f00\u542f\u591a\u7ebf\u7a0b\u624d\u4f1a\u521b\u5efa\u597d\u7ebf\u7a0b","title":"05-\u9a8c\u8bc1\u521b\u5efa\u7ebf\u7a0b\u4ee5\u53ca\u8fd0\u884c\u65f6\u95f4.py"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#54-","text":"","title":"5.4. \u7ebf\u7a0b-\u6ce8\u610f\u70b9"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#-","text":"","title":"\u7ebf\u7a0b-\u6ce8\u610f\u70b9"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#1","text":"\u901a\u8fc7\u4e0a\u4e00\u5c0f\u8282\uff0c\u80fd\u591f\u770b\u51fa\uff0c\u901a\u8fc7\u4f7f\u7528threading\u6a21\u5757\u80fd\u5b8c\u6210\u591a\u4efb\u52a1\u7684\u7a0b\u5e8f\u5f00\u53d1\uff0c\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u5c01\u88c5\u6027\u66f4\u5b8c\u7f8e\uff0c\u6240\u4ee5\u4f7f\u7528threading\u6a21\u5757\u65f6\uff0c\u5f80\u5f80\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u5b50\u7c7bclass\uff0c\u53ea\u8981\u7ee7\u627f threading.Thread \u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u91cd\u5199 run \u65b9\u6cd5 \u793a\u4f8b\u5982\u4e0b\uff1a #coding=utf-8 import threading import time class MyThread ( threading . Thread ): def run ( self ): for i in range ( 3 ): time . sleep ( 1 ) msg = \"I'm \" + self . name + ' @ ' + str ( i ) #name\u5c5e\u6027\u4e2d\u4fdd\u5b58\u7684\u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57 print ( msg ) if __name__ == '__main__' : t = MyThread () t . start ()","title":"1. \u7ebf\u7a0b\u6267\u884c\u4ee3\u7801\u7684\u5c01\u88c5"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_7","text":"python\u7684threading.Thread\u7c7b\u6709\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u7528\u4e8e\u5b9a\u4e49\u7ebf\u7a0b\u7684\u529f\u80fd\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7ebf\u7a0b\u7c7b\u4e2d\u8986\u76d6\u8be5\u65b9\u6cd5\u3002\u800c\u521b\u5efa\u81ea\u5df1\u7684\u7ebf\u7a0b\u5b9e\u4f8b\u540e\uff0c\u901a\u8fc7Thread\u7c7b\u7684start\u65b9\u6cd5\uff0c\u53ef\u4ee5\u542f\u52a8\u8be5\u7ebf\u7a0b\uff0c\u4ea4\u7ed9python\u865a\u62df\u673a\u8fdb\u884c\u8c03\u5ea6\uff0c\u5f53\u8be5\u7ebf\u7a0b\u83b7\u5f97\u6267\u884c\u7684\u673a\u4f1a\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528run\u65b9\u6cd5\u6267\u884c\u7ebf\u7a0b\u3002","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#2_1","text":"#coding=utf-8 import threading import time class MyThread ( threading . Thread ): #\u81ea\u5df1\u7ee7\u627f\u7c7b\u5199\u4e00\u4e2a\u65b0\u5c01\u88c5\u7684\u7684\u7c7b def run ( self ): #\u91cd\u5199run\u65b9\u6cd5 for i in range ( 3 ): time . sleep ( 1 ) msg = \"I'm \" + self . name + ' @ ' + str ( i ) print ( msg ) def test (): for i in range ( 5 ): t = MyThread () #\u5b9e\u4f8b\u5316\u591a\u4e2a\u81ea\u5df1\u5b9a\u4e49\u7684\u591a\u7ebf\u7a0b\u5bf9\u8c61 t . start () #\u5f00\u542f,\u7ee7\u627f\u81eaThread\u7c7b if __name__ == '__main__' : test () \u6267\u884c\u7ed3\u679c\uff1a(\u8fd0\u884c\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u5927\u4f53\u662f\u4e00\u81f4\u7684) I'm Thread-1 @ 0 I'm Thread-2 @ 0 I'm Thread-5 @ 0 I'm Thread-3 @ 0 I'm Thread-4 @ 0 I'm Thread-3 @ 1 I'm Thread-4 @ 1 I'm Thread-5 @ 1 I'm Thread-1 @ 1 I'm Thread-2 @ 1 I'm Thread-4 @ 2 I'm Thread-5 @ 2 I'm Thread-2 @ 2 I'm Thread-1 @ 2 I'm Thread-3 @ 2","title":"2. \u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_8","text":"\u4ece\u4ee3\u7801\u548c\u6267\u884c\u7ed3\u679c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u5f53\u6267\u884c\u5230sleep\u8bed\u53e5\u65f6\uff0c\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff08Blocked\uff09\uff0c\u5230sleep\u7ed3\u675f\u540e\uff0c\u7ebf\u7a0b\u8fdb\u5165\u5c31\u7eea\uff08Runnable\uff09\u72b6\u6001\uff0c\u7b49\u5f85\u8c03\u5ea6\u3002\u800c\u7ebf\u7a0b\u8c03\u5ea6\u5c06\u81ea\u884c\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ea\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8fd0\u884c\u5b8c\u6574\u4e2arun\u51fd\u6570\uff0c\u4f46\u662f\u7ebf\u7a0b\u7684\u542f\u52a8\u987a\u5e8f\u3001run\u51fd\u6570\u4e2d\u6bcf\u6b21\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\u90fd\u4e0d\u80fd\u786e\u5b9a\u3002","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#3_1","text":"\u6bcf\u4e2a\u7ebf\u7a0b\u9ed8\u8ba4\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u5c3d\u7ba1\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u6ca1\u6709\u6307\u5b9a\u7ebf\u7a0b\u5bf9\u8c61\u7684name\uff0c\u4f46\u662fpython\u4f1a\u81ea\u52a8\u4e3a\u7ebf\u7a0b\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u3002 \u5f53\u7ebf\u7a0b\u7684run()\u65b9\u6cd5\u7ed3\u675f\u65f6\u8be5\u7ebf\u7a0b\u5b8c\u6210\u3002 \u65e0\u6cd5\u63a7\u5236\u7ebf\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u522b\u7684\u65b9\u5f0f\u6765\u5f71\u54cd\u7ebf\u7a0b\u8c03\u5ea6\u7684\u65b9\u5f0f\u3002","title":"3. \u603b\u7ed3"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#55-","text":"","title":"5.5. \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf(\u91cd\u70b9)"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#06-py","text":"num = 100 nums = [ 11 , 22 ] def test (): global num num += 100 def test2 (): nums . append ( 33 ) print ( num ) print ( nums ) test () test2 () print ( num ) print ( nums ) \u6ce8\u610f\u5168\u5c40\u53d8\u91cf\u7684\u52a0\u4e0d\u52a0\u5173\u952e\u5b57global","title":"06-\u51fd\u6570\u91cc\u9762\u4fee\u6539\u5168\u5c40\u53d8\u91cf.py"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#-_1","text":"from threading import Thread import time g_num = 100 def work1 (): global g_num for i in range ( 3 ): g_num += 1 #\u53d8\u91cf\u8fdb\u884c\u4e86\u6539\u53d8,\u5fc5\u987b\u8fdb\u884c\u5168\u5c40\u7684\u58f0\u660e print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 (): global g_num #\u5982\u679c\u53ea\u662f\u6253\u5370\u53ef\u4ee5\u4e0d\u7528\u58f0\u660e\u662f\u5168\u5c40\u53d8\u91cf print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = Thread ( target = work1 ) t1 . start () #\u5ef6\u65f6\u4e00\u4f1a\uff0c\u4fdd\u8bc1t1\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u60c5\u505a\u5b8c time . sleep ( 1 ) t2 = Thread ( target = work2 ) t2 . start () \u8fd0\u884c\u7ed3\u679c: --- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 100 --- ---- in work1 , g_num is 103 --- ---- in work2 , g_num is 103 ---","title":"\u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_9","text":"from threading import Thread import time def work1 ( nums ): nums . append ( 44 ) print ( \"----in work1---\" , nums ) def work2 ( nums ): #\u5ef6\u65f6\u4e00\u4f1a\uff0c\u4fdd\u8bc1t1\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u60c5\u505a\u5b8c time . sleep ( 1 ) print ( \"----in work2---\" , nums ) g_nums = [ 11 , 22 , 33 ] # target\u6307\u5b9a\u5c06\u6765 \u8fd9\u4e2a\u7ebf\u7a0b\u7684\u54ea\u4e2a\u51fd\u6570\u6267\u884c\u4ee3\u7801 # args \u6307\u5b9a\u5c06\u6765 \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019 \u4f20\u9012\u4ec0\u4e48\u6570\u636e\u8fc7\u53bb t1 = Thread ( target = work1 , args = ( g_nums ,)) #target\u7528\u6765\u6307\u5b9a\u51fd\u6570,args\u7528\u6765\u6307\u5b9a\u4f20\u9012\u7684\u53c2\u6570,\u4f20\u9012\u7684\u662f\u4e00\u4e2a\u5143\u7956 t1 . start () t2 = Thread ( target = work2 , args = ( g_nums ,)) t2 . start () \u8fd0\u884c\u7ed3\u679c: ---- in work1 --- [ 11 , 22 , 33 , 44 ] ---- in work2 --- [ 11 , 22 , 33 , 44 ]","title":"\u5217\u8868\u5f53\u505a\u5b9e\u53c2\u4f20\u9012\u5230\u7ebf\u7a0b\u4e2d"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_10","text":"\u5728\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u5168\u5c40\u53d8\u91cf\uff0c\u5f88\u65b9\u4fbf\u5728\u591a\u4e2a\u7ebf\u7a0b\u95f4\u5171\u4eab\u6570\u636e \u7f3a\u70b9\u5c31\u662f\uff0c\u7ebf\u7a0b\u662f\u5bf9\u5168\u5c40\u53d8\u91cf\u968f\u610f\u9042\u6539\u53ef\u80fd\u9020\u6210\u591a\u7ebf\u7a0b\u4e4b\u95f4\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u6df7\u4e71\uff08\u5373\u7ebf\u7a0b\u975e\u5b89\u5168\uff09","title":"\u603b\u7ed3\uff1a"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#56-","text":"","title":"5.6. \u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf-\u95ee\u9898"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#-_2","text":"","title":"\u591a\u7ebf\u7a0b-\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u95ee\u9898"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_11","text":"\u5047\u8bbe\u4e24\u4e2a\u7ebf\u7a0bt1\u548ct2\u90fd\u8981\u5bf9\u5168\u5c40\u53d8\u91cfg_num(\u9ed8\u8ba4\u662f0)\u8fdb\u884c\u52a01\u8fd0\u7b97\uff0ct1\u548ct2\u90fd\u5404\u5bf9g_num\u52a010\u6b21\uff0cg_num\u7684\u6700\u7ec8\u7684\u7ed3\u679c\u5e94\u8be5\u4e3a20\u3002 \u4f46\u662f\u7531\u4e8e\u662f\u591a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u4e0b\u9762\u60c5\u51b5\uff1a \u5728g_num=0\u65f6\uff0ct1\u53d6\u5f97g_num=0\u3002\u6b64\u65f6\u7cfb\u7edf\u628at1\u8c03\u5ea6\u4e3a\u201dsleeping\u201d\u72b6\u6001\uff0c\u628at2\u8f6c\u6362\u4e3a\u201drunning\u201d\u72b6\u6001\uff0ct2\u4e5f\u83b7\u5f97g_num=0 \u7136\u540et2\u5bf9\u5f97\u5230\u7684\u503c\u8fdb\u884c\u52a01\u5e76\u8d4b\u7ed9g_num\uff0c\u4f7f\u5f97g_num=1 \u7136\u540e\u7cfb\u7edf\u53c8\u628at2\u8c03\u5ea6\u4e3a\u201dsleeping\u201d\uff0c\u628at1\u8f6c\u4e3a\u201drunning\u201d\u3002\u7ebf\u7a0bt1\u53c8\u628a\u5b83\u4e4b\u524d\u5f97\u5230\u76840\u52a01\u540e\u8d4b\u503c\u7ed9g_num\u3002 \u8fd9\u6837\u5bfc\u81f4\u867d\u7136t1\u548ct2\u90fd\u5bf9g_num\u52a01\uff0c\u4f46\u7ed3\u679c\u4ecd\u7136\u662fg_num=1","title":"\u591a\u7ebf\u7a0b\u5f00\u53d1\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#1_1","text":"import threading import time g_num = 0 def work1 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = threading . Thread ( target = work1 , args = ( 100 ,)) t1 . start () t2 = threading . Thread ( target = work2 , args = ( 100 ,)) t2 . start () while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num )","title":"\u6d4b\u8bd51"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_12","text":"--- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 0 --- ---- in work1 , g_num is 100 --- ---- in work2 , g_num is 200 --- 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 200","title":"\u8fd0\u884c\u7ed3\u679c\uff1a"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#2_2","text":"import threading import time g_num = 0 def work1 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work1, g_num is %d ---\" % g_num ) def work2 ( num ): global g_num for i in range ( num ): g_num += 1 print ( \"----in work2, g_num is %d ---\" % g_num ) print ( \"---\u7ebf\u7a0b\u521b\u5efa\u4e4b\u524dg_num is %d ---\" % g_num ) t1 = threading . Thread ( target = work1 , args = ( 1000000 ,)) t1 . start () t2 = threading . Thread ( target = work2 , args = ( 1000000 ,)) t2 . start () while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num )","title":"\u6d4b\u8bd52"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_13","text":"--- \u7ebf\u7a0b\u521b\u5efa\u4e4b\u524d g_num is 0 --- ---- in work1 , g_num is 1088005 --- ---- in work2 , g_num is 1286202 --- 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 1286202","title":"\u8fd0\u884c\u7ed3\u679c\uff1a"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_14","text":"\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\uff0c\u4f1a\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u95ee\u9898\uff0c\u4ece\u800c\u6570\u636e\u7ed3\u679c\u4f1a\u4e0d\u6b63\u786e","title":"\u7ed3\u8bba"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#57","text":"","title":"5.7. \u540c\u6b65"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_15","text":"\u540c\u6b65\u5c31\u662f\u534f\u540c\u6b65\u8c03\uff0c\u6309\u9884\u5b9a\u7684\u5148\u540e\u6b21\u5e8f\u8fdb\u884c\u8fd0\u884c\u3002\u5982:\u4f60\u8bf4\u5b8c\uff0c\u6211\u518d\u8bf4\u3002 \"\u540c\"\u5b57\u4ece\u5b57\u9762\u4e0a\u5bb9\u6613\u7406\u89e3\u4e3a\u4e00\u8d77\u52a8\u4f5c \u5176\u5b9e\u4e0d\u662f\uff0c\"\u540c\"\u5b57\u5e94\u662f\u6307\u534f\u540c\u3001\u534f\u52a9\u3001\u4e92\u76f8\u914d\u5408\u3002 \u5982\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u540c\u6b65\uff0c\u53ef\u7406\u89e3\u4e3a\u8fdb\u7a0b\u6216\u7ebf\u7a0bA\u548cB\u4e00\u5757\u914d\u5408\uff0cA\u6267\u884c\u5230\u4e00\u5b9a\u7a0b\u5ea6\u65f6\u8981\u4f9d\u9760B\u7684\u67d0\u4e2a\u7ed3\u679c\uff0c\u4e8e\u662f\u505c\u4e0b\u6765\uff0c\u793a\u610fB\u8fd0\u884c;B\u6267\u884c\uff0c\u518d\u5c06\u7ed3\u679c\u7ed9A;A\u518d\u7ee7\u7eed\u64cd\u4f5c\u3002","title":"\u540c\u6b65\u7684\u6982\u5ff5"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_16","text":"\u5bf9\u4e8e\u4e0a\u4e00\u5c0f\u8282\u63d0\u51fa\u7684\u90a3\u4e2a\u8ba1\u7b97\u9519\u8bef\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u540c\u6b65\u6765\u8fdb\u884c\u89e3\u51b3 \u601d\u8def\uff0c\u5982\u4e0b: \u7cfb\u7edf\u8c03\u7528t1\uff0c\u7136\u540e\u83b7\u53d6\u5230g_num\u7684\u503c\u4e3a0\uff0c\u6b64\u65f6\u4e0a\u4e00\u628a\u9501\uff0c\u5373\u4e0d\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u64cd\u4f5cg_num t1\u5bf9g_num\u7684\u503c\u8fdb\u884c+1 t1\u89e3\u9501\uff0c\u6b64\u65f6g_num\u7684\u503c\u4e3a1\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4f7f\u7528g_num\u4e86\uff0c\u800c\u4e14\u662fg_num\u7684\u503c\u4e0d\u662f0\u800c\u662f1 \u540c\u7406\u5176\u4ed6\u7ebf\u7a0b\u5728\u5bf9g_num\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u90fd\u8981\u5148\u4e0a\u9501\uff0c\u5904\u7406\u5b8c\u540e\u518d\u89e3\u9501\uff0c\u5728\u4e0a\u9501\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4e0d\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u5c31\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u6b63\u786e\u6027","title":"\u89e3\u51b3\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#58","text":"","title":"5.8. \u4e92\u65a5\u9501(\u91cd\u70b9)"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_17","text":"\u5f53\u591a\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u540c\u65f6\u4fee\u6539\u67d0\u4e00\u4e2a\u5171\u4eab\u6570\u636e\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fdb\u884c\u540c\u6b65\u63a7\u5236 \u7ebf\u7a0b\u540c\u6b65\u80fd\u591f\u4fdd\u8bc1\u591a\u4e2a\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee\u7ade\u4e89\u8d44\u6e90\uff0c\u6700\u7b80\u5355\u7684\u540c\u6b65\u673a\u5236\u662f\u5f15\u5165\u4e92\u65a5\u9501\u3002 \u4e92\u65a5\u9501\u4e3a\u8d44\u6e90\u5f15\u5165\u4e00\u4e2a\u72b6\u6001\uff1a\u9501\u5b9a/\u975e\u9501\u5b9a \u67d0\u4e2a\u7ebf\u7a0b\u8981\u66f4\u6539\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5148\u5c06\u5176\u9501\u5b9a\uff0c\u6b64\u65f6\u8d44\u6e90\u7684\u72b6\u6001\u4e3a\u201c\u9501\u5b9a\u201d\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u66f4\u6539\uff1b\u76f4\u5230\u8be5\u7ebf\u7a0b\u91ca\u653e\u8d44\u6e90\uff0c\u5c06\u8d44\u6e90\u7684\u72b6\u6001\u53d8\u6210\u201c\u975e\u9501\u5b9a\u201d\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u624d\u80fd\u518d\u6b21\u9501\u5b9a\u8be5\u8d44\u6e90\u3002\u4e92\u65a5\u9501\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u6570\u636e\u7684\u6b63\u786e\u6027\u3002 threading\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86Lock\u7c7b\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5904\u7406\u9501\u5b9a\uff1a # \u521b\u5efa\u9501 mutex = threading . Lock () # \u9501\u5b9a mutex . acquire () # \u91ca\u653e mutex . release ()","title":"\u4e92\u65a5\u9501"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_18","text":"\u5982\u679c\u8fd9\u4e2a\u9501\u4e4b\u524d\u662f\u6ca1\u6709\u4e0a\u9501\u7684\uff0c\u90a3\u4e48acquire\u4e0d\u4f1a\u5835\u585e \u5982\u679c\u5728\u8c03\u7528acquire\u5bf9\u8fd9\u4e2a\u9501\u4e0a\u9501\u4e4b\u524d \u5b83\u5df2\u7ecf\u88ab \u5176\u4ed6\u7ebf\u7a0b\u4e0a\u4e86\u9501\uff0c\u90a3\u4e48\u6b64\u65f6acquire\u4f1a\u5835\u585e\uff0c\u76f4\u5230\u8fd9\u4e2a\u9501\u88ab\u89e3\u9501\u4e3a\u6b62","title":"\u6ce8\u610f\uff1a"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#2100","text":"\u8fd9\u4e2a\u662f\u5bf9for\u5faa\u73af\u52a0\u9501,\u8981\u7b49for\u5faa\u73af\u5168\u90e8\u6267\u884c\u5b8c import threading import time # \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf g_num = 0 def test1 ( num ): global g_num # \u4e0a\u9501\uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u88ab\u4e0a\u9501\uff0c\u90a3\u4e48\u6b64\u65f6 \u4e0a\u9501\u6210\u529f # \u5982\u679c\u4e0a\u9501\u4e4b\u524d \u5df2\u7ecf\u88ab\u4e0a\u9501\u4e86\uff0c\u90a3\u4e48\u6b64\u65f6\u4f1a\u5835\u585e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230 \u8fd9\u4e2a\u9501\u88ab\u89e3\u5f00\u4f4d\u7f6e mutex . acquire () for i in range ( num ): g_num += 1 # \u89e3\u9501 mutex . release () print ( \"-----in test1 g_num= %d ----\" % g_num ) def test2 ( num ): global g_num mutex . acquire () for i in range ( num ): g_num += 1 print ( \"-----in test2 g_num= %d =----\" % g_num ) mutex . release () print ( \"-----in test2 g_num= %d =----\" % g_num ) # \u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u4e0a\u9501\u7684 mutex = threading . Lock () def main (): t1 = threading . Thread ( target = test1 , args = ( 10000000 ,)) t2 = threading . Thread ( target = test2 , args = ( 10000000 ,)) t1 . start () t2 . start () # \u7b49\u5f85\u4e0a\u9762\u76842\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5.... time . sleep ( 2 ) print ( \"-----in main Thread g_num = %d ---\" % g_num ) if __name__ == \"__main__\" : main () \u8fd9\u4e2a\u662f\u5bf9for\u5faa\u73af\u5185\u7684\u4ee3\u7801\u4e0a\u9501 import threading import time g_num = 0 def test1 ( num ): global g_num for i in range ( num ): mutex . acquire () # \u4e0a\u9501 g_num += 1 mutex . release () # \u89e3\u9501 print ( \"---test1---g_num= %d \" % g_num ) def test2 ( num ): global g_num for i in range ( num ): mutex . acquire () # \u4e0a\u9501 g_num += 1 mutex . release () # \u89e3\u9501 print ( \"---test2---g_num= %d \" % g_num ) # \u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501 # \u9ed8\u8ba4\u662f\u672a\u4e0a\u9501\u7684\u72b6\u6001 mutex = threading . Lock () # \u521b\u5efa2\u4e2a\u7ebf\u7a0b\uff0c\u8ba9\u4ed6\u4eec\u5404\u81ea\u5bf9g_num\u52a01000000\u6b21 p1 = threading . Thread ( target = test1 , args = ( 1000000 ,)) p1 . start () p2 = threading . Thread ( target = test2 , args = ( 1000000 ,)) p2 . start () # \u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210 while len ( threading . enumerate ()) != 1 : time . sleep ( 1 ) print ( \"2\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f: %s \" % g_num ) \u8fd0\u884c\u7ed3\u679c\uff1a --- test1 --- g_num = 1909909 --- test2 --- g_num = 2000000 2 \u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u7ec8\u7ed3\u679c\u662f : 2000000 \u53ef\u4ee5\u770b\u5230\u6700\u540e\u7684\u7ed3\u679c\uff0c\u52a0\u5165\u4e92\u65a5\u9501\u540e\uff0c\u5176\u7ed3\u679c\u4e0e\u9884\u671f\u76f8\u7b26\u3002","title":"\u4f7f\u7528\u4e92\u65a5\u9501\u5b8c\u62102\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u5404\u52a0100\u4e07\u6b21\u7684\u64cd\u4f5c"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_19","text":"\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u9501\u7684acquire()\u65b9\u6cd5\u83b7\u5f97\u9501\u65f6\uff0c\u9501\u5c31\u8fdb\u5165\u201clocked\u201d\u72b6\u6001\u3002 \u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u5f97\u9501\u3002\u5982\u679c\u6b64\u65f6\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u5f97\u8fd9\u4e2a\u9501\uff0c\u8be5\u7ebf\u7a0b\u5c31\u4f1a\u53d8\u4e3a\u201cblocked\u201d\u72b6\u6001\uff0c\u79f0\u4e3a\u201c\u963b\u585e\u201d\uff0c\u76f4\u5230\u62e5\u6709\u9501\u7684\u7ebf\u7a0b\u8c03\u7528\u9501\u7684release()\u65b9\u6cd5\u91ca\u653e\u9501\u4e4b\u540e\uff0c\u9501\u8fdb\u5165\u201cunlocked\u201d\u72b6\u6001\u3002 \u7ebf\u7a0b\u8c03\u5ea6\u7a0b\u5e8f\u4ece\u5904\u4e8e\u540c\u6b65\u963b\u585e\u72b6\u6001\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u6765\u83b7\u5f97\u9501\uff0c\u5e76\u4f7f\u5f97\u8be5\u7ebf\u7a0b\u8fdb\u5165\u8fd0\u884c\uff08running\uff09\u72b6\u6001\u3002","title":"\u4e0a\u9501\u89e3\u9501\u8fc7\u7a0b"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_20","text":"\u9501\u7684\u597d\u5904\uff1a \u786e\u4fdd\u4e86\u67d0\u6bb5\u5173\u952e\u4ee3\u7801\u53ea\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6574\u5730\u6267\u884c \u9501\u7684\u574f\u5904\uff1a \u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u67d0\u6bb5\u4ee3\u7801\u5b9e\u9645\u4e0a\u53ea\u80fd\u4ee5\u5355\u7ebf\u7a0b\u6a21\u5f0f\u6267\u884c\uff0c\u6548\u7387\u5c31\u5927\u5927\u5730\u4e0b\u964d\u4e86 \u7531\u4e8e\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u9501\uff0c\u4e0d\u540c\u7684\u7ebf\u7a0b\u6301\u6709\u4e0d\u540c\u7684\u9501\uff0c\u5e76\u8bd5\u56fe\u83b7\u53d6\u5bf9\u65b9\u6301\u6709\u7684\u9501\u65f6\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501","title":"\u603b\u7ed3"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#59","text":"","title":"5.9. \u6b7b\u9501"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_21","text":"\u73b0\u5b9e\u793e\u4f1a\u4e2d\uff0c\u7537\u5973\u53cc\u65b9\u90fd\u5728\u7b49\u5f85\u5bf9\u65b9\u5148\u9053\u6b49 \u5982\u679c\u53cc\u65b9\u90fd\u8fd9\u6837\u56fa\u6267\u7684\u7b49\u5f85\u5bf9\u65b9\u5148\u5f00\u53e3\uff0c\u5f04\u4e0d\u597d\uff0c\u5c31\u5206\u641c\u4e86","title":"\u6b7b\u9501"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#1_2","text":"\u5728\u7ebf\u7a0b\u95f4\u5171\u4eab\u591a\u4e2a\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u5360\u6709\u4e00\u90e8\u5206\u8d44\u6e90\u5e76\u4e14\u540c\u65f6\u7b49\u5f85\u5bf9\u65b9\u7684\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u5c3d\u7ba1\u6b7b\u9501\u5f88\u5c11\u53d1\u751f\uff0c\u4f46\u4e00\u65e6\u53d1\u751f\u5c31\u4f1a\u9020\u6210\u5e94\u7528\u7684\u505c\u6b62\u54cd\u5e94\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u6b7b\u9501\u7684\u4f8b\u5b50 #coding=utf-8 import threading import time class MyThread1 ( threading . Thread ): def run ( self ): # \u5bf9mutexA\u4e0a\u9501 mutexA . acquire () # mutexA\u4e0a\u9501\u540e\uff0c\u5ef6\u65f61\u79d2\uff0c\u7b49\u5f85\u53e6\u5916\u90a3\u4e2a\u7ebf\u7a0b \u628amutexB\u4e0a\u9501 print ( self . name + '----do1---up----' ) time . sleep ( 1 ) # \u6b64\u65f6\u4f1a\u5835\u585e\uff0c\u56e0\u4e3a\u8fd9\u4e2amutexB\u5df2\u7ecf\u88ab\u53e6\u5916\u7684\u7ebf\u7a0b\u62a2\u5148\u4e0a\u9501\u4e86 mutexB . acquire () print ( self . name + '----do1---down----' ) mutexB . release () # \u5bf9mutexA\u89e3\u9501 mutexA . release () class MyThread2 ( threading . Thread ): def run ( self ): # \u5bf9mutexB\u4e0a\u9501 mutexB . acquire () # mutexB\u4e0a\u9501\u540e\uff0c\u5ef6\u65f61\u79d2\uff0c\u7b49\u5f85\u53e6\u5916\u90a3\u4e2a\u7ebf\u7a0b \u628amutexA\u4e0a\u9501 print ( self . name + '----do2---up----' ) time . sleep ( 1 ) # \u6b64\u65f6\u4f1a\u5835\u585e\uff0c\u56e0\u4e3a\u8fd9\u4e2amutexA\u5df2\u7ecf\u88ab\u53e6\u5916\u7684\u7ebf\u7a0b\u62a2\u5148\u4e0a\u9501\u4e86 mutexA . acquire () print ( self . name + '----do2---down----' ) mutexA . release () # \u5bf9mutexB\u89e3\u9501 mutexB . release () mutexA = threading . Lock () mutexB = threading . Lock () if __name__ == '__main__' : t1 = MyThread1 () t2 = MyThread2 () t1 . start () t2 . start () \u8fd0\u884c\u7ed3\u679c\uff1a \u6b64\u65f6\u5df2\u7ecf\u8fdb\u5165\u5230\u4e86\u6b7b\u9501\u72b6\u6001\uff0c\u53ef\u4ee5\u4f7f\u7528ctrl-c\u9000\u51fa","title":"1. \u6b7b\u9501"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#2_3","text":"\u7a0b\u5e8f\u8bbe\u8ba1\u65f6\u8981\u5c3d\u91cf\u907f\u514d\uff08\u94f6\u884c\u5bb6\u7b97\u6cd5\uff09 \u6dfb\u52a0\u8d85\u65f6\u65f6\u95f4\u7b49","title":"2. \u907f\u514d\u6b7b\u9501"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#-_3","text":"[\u80cc\u666f\u77e5\u8bc6] \u4e00\u4e2a\u94f6\u884c\u5bb6\u5982\u4f55\u5c06\u4e00\u5b9a\u6570\u76ee\u7684\u8d44\u91d1\u5b89\u5168\u5730\u501f\u7ed9\u82e5\u5e72\u4e2a\u5ba2\u6237\uff0c\u4f7f\u8fd9\u4e9b\u5ba2\u6237\u65e2\u80fd\u501f\u5230\u94b1\u5b8c\u6210\u8981\u5e72\u7684\u4e8b\uff0c\u540c\u65f6\u94f6\u884c\u5bb6\u53c8\u80fd\u6536\u56de\u5168\u90e8\u8d44\u91d1\u800c\u4e0d\u81f3\u4e8e\u7834\u4ea7\uff0c\u8fd9\u5c31\u662f\u94f6\u884c\u5bb6\u95ee\u9898\u3002\u8fd9\u4e2a\u95ee\u9898\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8d44\u6e90\u5206\u914d\u95ee\u9898\u5341\u5206\u76f8\u4f3c\uff1a\u94f6\u884c\u5bb6\u5c31\u50cf\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5ba2\u6237\u5c31\u50cf\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u5c31\u662f\u7cfb\u7edf\u7684\u8d44\u6e90\u3002 [\u95ee\u9898\u7684\u63cf\u8ff0] \u4e00\u4e2a\u94f6\u884c\u5bb6\u62e5\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u8d44\u91d1\uff0c\u6709\u82e5\u5e72\u4e2a\u5ba2\u6237\u8981\u8d37\u6b3e\u3002\u6bcf\u4e2a\u5ba2\u6237\u987b\u5728\u4e00\u5f00\u59cb\u5c31\u58f0\u660e\u4ed6\u6240\u9700\u8d37\u6b3e\u7684\u603b\u989d\u3002\u82e5\u8be5\u5ba2\u6237\u8d37\u6b3e\u603b\u989d\u4e0d\u8d85\u8fc7\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u603b\u6570\uff0c\u94f6\u884c\u5bb6\u53ef\u4ee5\u63a5\u6536\u5ba2\u6237\u7684\u8981\u6c42\u3002\u5ba2\u6237\u8d37\u6b3e\u662f\u4ee5\u6bcf\u6b21\u4e00\u4e2a\u8d44\u91d1\u5355\u4f4d\uff08\u59821\u4e07RMB\u7b49\uff09\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\uff0c\u5ba2\u6237\u5728\u501f\u6ee1\u6240\u9700\u7684\u5168\u90e8\u5355\u4f4d\u6b3e\u989d\u4e4b\u524d\u53ef\u80fd\u4f1a\u7b49\u5f85\uff0c\u4f46\u94f6\u884c\u5bb6\u987b\u4fdd\u8bc1\u8fd9\u79cd\u7b49\u5f85\u662f\u6709\u9650\u7684\uff0c\u53ef\u5b8c\u6210\u7684\u3002 \u4f8b\u5982\uff1a\u6709\u4e09\u4e2a\u5ba2\u6237C1\uff0cC2\uff0cC3\uff0c\u5411\u94f6\u884c\u5bb6\u501f\u6b3e\uff0c\u8be5\u94f6\u884c\u5bb6\u7684\u8d44\u91d1\u603b\u989d\u4e3a10\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u5176\u4e2dC1\u5ba2\u6237\u8981\u501f9\u5404\u8d44\u91d1\u5355\u4f4d\uff0cC2\u5ba2\u6237\u8981\u501f3\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0cC3\u5ba2\u6237\u8981\u501f8\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u603b\u8ba120\u4e2a\u8d44\u91d1\u5355\u4f4d\u3002\u67d0\u4e00\u65f6\u523b\u7684\u72b6\u6001\u5982\u56fe\u6240\u793a\u3002 \u5bf9\u4e8ea\u56fe\u7684\u72b6\u6001\uff0c\u6309\u7167\u5b89\u5168\u5e8f\u5217\u7684\u8981\u6c42\uff0c\u6211\u4eec\u9009\u7684\u7b2c\u4e00\u4e2a\u5ba2\u6237\u5e94\u6ee1\u8db3\u8be5\u5ba2\u6237\u6240\u9700\u7684\u8d37\u6b3e\u5c0f\u4e8e\u7b49\u4e8e\u94f6\u884c\u5bb6\u5f53\u524d\u6240\u5269\u4f59\u7684\u94b1\u6b3e\uff0c\u53ef\u4ee5\u770b\u51fa\u53ea\u6709C2\u5ba2\u6237\u80fd\u88ab\u6ee1\u8db3\uff1aC2\u5ba2\u6237\u97001\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u5c0f\u94f6\u884c\u5bb6\u624b\u4e2d\u76842\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u4e8e\u662f\u94f6\u884c\u5bb6\u628a1\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9C2\u5ba2\u6237\uff0c\u4f7f\u4e4b\u5b8c\u6210\u5de5\u4f5c\u5e76\u5f52\u8fd8\u6240\u501f\u76843\u4e2a\u8d44\u91d1\u5355\u4f4d\u7684\u94b1\uff0c\u8fdb\u5165b\u56fe\u3002\u540c\u7406\uff0c\u94f6\u884c\u5bb6\u628a4\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9C3\u5ba2\u6237\uff0c\u4f7f\u5176\u5b8c\u6210\u5de5\u4f5c\uff0c\u5728c\u56fe\u4e2d\uff0c\u53ea\u5269\u4e00\u4e2a\u5ba2\u6237C1\uff0c\u5b83\u97007\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u8fd9\u65f6\u94f6\u884c\u5bb6\u67098\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u6240\u4ee5C1\u4e5f\u80fd\u987a\u5229\u501f\u5230\u94b1\u5e76\u5b8c\u6210\u5de5\u4f5c\u3002\u6700\u540e\uff08\u89c1\u56fed\uff09\u94f6\u884c\u5bb6\u6536\u56de\u5168\u90e810\u4e2a\u8d44\u91d1\u5355\u4f4d\uff0c\u4fdd\u8bc1\u4e0d\u8d54\u672c\u3002\u90a3\u9ebd\u5ba2\u6237\u5e8f\u5217{C1\uff0cC2\uff0cC3}\u5c31\u662f\u4e2a\u5b89\u5168\u5e8f\u5217\uff0c\u6309\u7167\u8fd9\u4e2a\u5e8f\u5217\u8d37\u6b3e\uff0c\u94f6\u884c\u5bb6\u624d\u662f\u5b89\u5168\u7684\u3002\u5426\u5219\u7684\u8bdd\uff0c\u82e5\u5728\u56feb\u72b6\u6001\u65f6\uff0c\u94f6\u884c\u5bb6\u628a\u624b\u4e2d\u76844\u4e2a\u8d44\u91d1\u5355\u4f4d\u501f\u7ed9\u4e86C1\uff0c\u5219\u51fa\u73b0\u4e0d\u5b89\u5168\u72b6\u6001\uff1a\u8fd9\u65f6C1\uff0cC3\u5747\u4e0d\u80fd\u5b8c\u6210\u5de5\u4f5c\uff0c\u800c\u94f6\u884c\u5bb6\u624b\u4e2d\u53c8\u6ca1\u6709\u94b1\u4e86\uff0c\u7cfb\u7edf\u9677\u5165\u50f5\u6301\u5c40\u9762\uff0c\u94f6\u884c\u5bb6\u4e5f\u4e0d\u80fd\u6536\u56de\u6295\u8d44\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u94f6\u884c\u5bb6\u7b97\u6cd5\u662f\u4ece\u5f53\u524d\u72b6\u6001\u51fa\u53d1\uff0c\u9010\u4e2a\u6309\u5b89\u5168\u5e8f\u5217\u68c0\u67e5\u5404\u5ba2\u6237\u8c01\u80fd\u5b8c\u6210\u5176\u5de5\u4f5c\uff0c\u7136\u540e\u5047\u5b9a\u5176\u5b8c\u6210\u5de5\u4f5c\u4e14\u5f52\u8fd8\u5168\u90e8\u8d37\u6b3e\uff0c\u518d\u8fdb\u800c\u68c0\u67e5\u4e0b\u4e00\u4e2a\u80fd\u5b8c\u6210\u5de5\u4f5c\u7684\u5ba2\u6237\uff0c......\u3002\u5982\u679c\u6240\u6709\u5ba2\u6237\u90fd\u80fd\u5b8c\u6210\u5de5\u4f5c\uff0c\u5219\u627e\u5230\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\uff0c\u94f6\u884c\u5bb6\u624d\u662f\u5b89\u5168\u7684\u3002","title":"\u9644\u5f55-\u94f6\u884c\u5bb6\u7b97\u6cd5"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#510-udp","text":"","title":"5.10. \u6848\u4f8b:\u591a\u4efb\u52a1\u7248udp\u804a\u5929\u5668"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#udp","text":"","title":"\u6848\u4f8b\uff1a\u591a\u4efb\u52a1\u7248udp\u804a\u5929\u5668"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_22","text":"\u7f16\u5199\u4e00\u4e2a\u67092\u4e2a\u7ebf\u7a0b\u7684\u7a0b\u5e8f \u7ebf\u7a0b1\u7528\u6765\u63a5\u6536\u6570\u636e\u7136\u540e\u663e\u793a \u7ebf\u7a0b2\u7528\u6765\u68c0\u6d4b\u952e\u76d8\u6570\u636e\u7136\u540e\u901a\u8fc7udp\u53d1\u9001\u6570\u636e","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_23","text":"\u5b9e\u73b0\u4e0a\u8ff0\u8981\u6c42 \u603b\u7ed3\u591a\u4efb\u52a1\u7a0b\u5e8f\u7684\u7279\u70b9","title":"\u8981\u6c42"},{"location":"python\u5b66\u4e60/053 python\u591a\u4efb\u52a1\u591a\u7ebf\u7a0b/#_24","text":"import socket import threading def recv_msg(udp_socket): \"\"\"\u63a5\u6536\u6570\u636e\u5e76\u663e\u793a\"\"\" # \u63a5\u6536\u6570\u636e while True: recv_data = udp_socket.recvfrom(1024) print(recv_data) def send_msg(udp_socket, dest_ip, dest_port): \"\"\"\u53d1\u9001\u6570\u636e\"\"\" # \u53d1\u9001\u6570\u636e while True: send_data = input(\"\u8f93\u5165\u8981\u53d1\u9001\u7684\u6570\u636e:\") udp_socket.sendto(send_data.encode(\"utf-8\"), (dest_ip, dest_port)) #\u8fd9\u91cc\u662f\u4e00\u4e2a\u5143\u7956 def main(): \"\"\"\u5b8c\u6210udp\u804a\u5929\u5668\u7684\u6574\u4f53\u63a7\u5236\"\"\" # 1. \u521b\u5efa\u5957\u63a5\u5b57 udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # 2. \u7ed1\u5b9a\u672c\u5730\u4fe1\u606f udp_socket.bind((\"\", 7890)) # 3. \u83b7\u53d6\u5bf9\u65b9\u7684ip dest_ip = input(\"\u8bf7\u8f93\u5165\u5bf9\u65b9\u7684ip:\") dest_port = int(input(\"\u8bf7\u8f93\u5165\u5bf9\u65b9\u7684port:\")) # 4. \u521b\u5efa2\u4e2a\u7ebf\u7a0b\uff0c\u53bb\u6267\u884c\u76f8\u5e94\u7684\u529f\u80fd t_recv = threading.Thread(target=recv_msg, args=(udp_socket,)) #\u5199\u9017\u53f7\u662f\u56e0\u4e3a\u8981\u4f20\u5143\u7956 t_send = threading.Thread(target=send_msg, args=(udp_socket, dest_ip, dest_port)) t_recv.start() t_send.start() if __name__ == \"__main__\": main()","title":"\u53c2\u8003\u4ee3\u7801:"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/","text":"6. \u591a\u4efb\u52a1-\u8fdb\u7a0b \u00b6 6.1. \u8fdb\u7a0b\u4ee5\u53ca\u72b6\u6001 \u00b6 \u8fdb\u7a0b\u4ee5\u53ca\u72b6\u6001 \u00b6 1. \u8fdb\u7a0b \u00b6 \u7a0b\u5e8f\uff1a\u4f8b\u5982xxx.py\u8fd9\u662f\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u9759\u6001\u7684 \u8fdb\u7a0b\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u4ee3\u7801+\u7528\u5230\u7684\u8d44\u6e90 \u79f0\u4e4b\u4e3a\u8fdb\u7a0b\uff0c\u5b83\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u5143\u3002 \u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u8fdb\u7a0b\u4e5f\u662f\u53ef\u4ee5\u7684 2. \u8fdb\u7a0b\u7684\u72b6\u6001 \u00b6 \u5de5\u4f5c\u4e2d\uff0c\u4efb\u52a1\u6570\u5f80\u5f80\u5927\u4e8ecpu\u7684\u6838\u6570\uff0c\u5373\u4e00\u5b9a\u6709\u4e00\u4e9b\u4efb\u52a1\u6b63\u5728\u6267\u884c\uff0c\u800c\u53e6\u5916\u4e00\u4e9b\u4efb\u52a1\u5728\u7b49\u5f85cpu\u8fdb\u884c\u6267\u884c\uff0c\u56e0\u6b64\u5bfc\u81f4\u4e86\u6709\u4e86\u4e0d\u540c\u7684\u72b6\u6001 \u5c31\u7eea\u6001\uff1a\u8fd0\u884c\u7684\u6761\u4ef6\u90fd\u5df2\u7ecf\u6ee1\u8db3\uff0c\u6b63\u5728\u7b49\u5728cpu\u6267\u884c \u6267\u884c\u6001\uff1acpu\u6b63\u5728\u6267\u884c\u5176\u529f\u80fd \u7b49\u5f85\u6001\uff1a\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\u6ee1\u8db3\uff0c\u4f8b\u5982\u4e00\u4e2a\u7a0b\u5e8fsleep\u4e86\uff0c\u6b64\u65f6\u5c31\u5904\u4e8e\u7b49\u5f85\u6001 6.2. \u8fdb\u7a0b\u7684\u521b\u5efa-multiprocessing \u00b6 \u8fdb\u7a0b\u7684\u521b\u5efa-multiprocessing \u00b6 multiprocessing\u6a21\u5757\u5c31\u662f\u8de8\u5e73\u53f0\u7248\u672c\u7684\u591a\u8fdb\u7a0b\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2aProcess\u7c7b\u6765\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u6267\u884c\u53e6\u5916\u7684\u4e8b\u60c5 1. 2\u4e2awhile\u5faa\u73af\u4e00\u8d77\u6267\u884c \u00b6 # -*- coding:utf-8 -*- from multiprocessing import Process #\u4f7f\u7528\u7684\u662f\u591a\u8fdb\u7a0b\u7684Process\u7c7b import time def run_proc (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" while True : print ( \"----2----\" ) time . sleep ( 1 ) if __name__ == '__main__' : p = Process ( target = run_proc ) #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b p . start () #\u5f00\u542f\u8fdb\u7a0b while True : print ( \"----1----\" ) time . sleep ( 1 ) \u8bf4\u660e \u00b6 \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6267\u884c\u51fd\u6570\u548c\u51fd\u6570\u7684\u53c2\u6570\uff0c\u521b\u5efa\u4e00\u4e2aProcess\u5b9e\u4f8b\uff0c\u7528start()\u65b9\u6cd5\u542f\u52a8 \u591a\u8fdb\u7a0b \u00b6 import threading import time import multiprocessing def test1 (): while True : print ( \"1--------\" ) time . sleep ( 1 ) def test2 (): while True : print ( \"2--------\" ) time . sleep ( 1 ) def main (): # t1 = threading.Thread(target=test1) # t2 = threading.Thread(target=test2) # t1.start() # t2.start() p1 = multiprocessing . Process ( target = test1 ) #threading.Thread() #\u8ddf\u8fdb\u7a0b\u7684\u533a\u5206\u4e00\u4e0b p2 = multiprocessing . Process ( target = test2 ) p1 . start () p2 . start () if __name__ == \"__main__\" : main () \u8fdb\u7a0b\u5f00\u7684\u8d8a\u591a,\u8d44\u6e90\u5360\u7528\u7684\u8d8a\u591a,\u8fdb\u7a0b\u8d8a\u6765\u8d8a\u591a,\u6548\u7387\u4f1a\u964d\u4f4e.\u4e00\u5f00\u59cb\u662f\u5feb\u7684\u4e0d\u8fc7\u662f\u5360\u7528\u5185\u5b58.\u4f46\u662f\u8fdb\u7a0b\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\u5c31\u6324\u4e0d\u5f00\u4e86. \u5b50\u8fdb\u7a0b\u662f\u8981\u590d\u5236\u4e00\u4efd\u4e3b\u8fdb\u7a0b\u7684\u8d44\u6e90,\u4f46\u662f\u4ee3\u7801\u662f\u5171\u4eab\u7684,\u56e0\u6b64\u4f1a\u53c8\u5360\u7528\u4e00\u90e8\u5206\u5185\u5b58\u8fd9\u4e5f\u662f\u8017\u8d39\u8d44\u6e90\u591a\u7684\u4e00\u4e2a\u539f\u56e0. 2. \u8fdb\u7a0bpid \u00b6 # -*- coding:utf-8 -*- from multiprocessing import Process import os #\u7cfb\u7edf\u7684\u64cd\u4f5c import time def run_proc (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( '\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0cpid= %d ...' % os . getpid ()) # os.getpid\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 print ( '\u5b50\u8fdb\u7a0b\u5c06\u8981\u7ed3\u675f...' ) if __name__ == '__main__' : print ( '\u7236\u8fdb\u7a0bpid: %d ' % os . getpid ()) # os.getpid\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 p = Process ( target = run_proc ) p . start () 3. Process\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a \u00b6 Process([group [, target [, name [, args [, kwargs]]]]]) target\uff1a\u5982\u679c\u4f20\u9012\u4e86\u51fd\u6570\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u4efb\u52a1\u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u5c31\u6267\u884c\u8fd9\u91cc\u7684\u4ee3\u7801 args\uff1a\u7ed9target\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\uff0c\u4ee5\u5143\u7ec4\u7684\u65b9\u5f0f\u4f20\u9012 kwargs\uff1a\u7ed9target\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u547d\u540d\u53c2\u6570 name\uff1a\u7ed9\u8fdb\u7a0b\u8bbe\u5b9a\u4e00\u4e2a\u540d\u5b57\uff0c\u53ef\u4ee5\u4e0d\u8bbe\u5b9a group\uff1a\u6307\u5b9a\u8fdb\u7a0b\u7ec4\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7528\u4e0d\u5230 Process\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5e38\u7528\u65b9\u6cd5\uff1a start()\uff1a\u542f\u52a8\u5b50\u8fdb\u7a0b\u5b9e\u4f8b\uff08\u521b\u5efa\u5b50\u8fdb\u7a0b\uff09 is_alive()\uff1a\u5224\u65ad\u8fdb\u7a0b\u5b50\u8fdb\u7a0b\u662f\u5426\u8fd8\u5728\u6d3b\u7740 join([timeout])\uff1a\u662f\u5426\u7b49\u5f85\u5b50\u8fdb\u7a0b\u6267\u884c\u7ed3\u675f\uff0c\u6216\u7b49\u5f85\u591a\u5c11\u79d2 terminate()\uff1a\u4e0d\u7ba1\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u7acb\u5373\u7ec8\u6b62\u5b50\u8fdb\u7a0b Process\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5e38\u7528\u5c5e\u6027\uff1a name\uff1a\u5f53\u524d\u8fdb\u7a0b\u7684\u522b\u540d\uff0c\u9ed8\u8ba4\u4e3aProcess-N\uff0cN\u4e3a\u4ece1\u5f00\u59cb\u9012\u589e\u7684\u6574\u6570 pid\uff1a\u5f53\u524d\u8fdb\u7a0b\u7684pid\uff08\u8fdb\u7a0b\u53f7\uff09 4. \u7ed9\u5b50\u8fdb\u7a0b\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u53c2\u6570 \u00b6 # -*- coding:utf-8 -*- from multiprocessing import Process import os from time import sleep def run_proc ( name , age , ** kwargs ): for i in range ( 10 ): print ( '\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0cname= %s ,age= %d ,pid= %d ...' % ( name , age , os . getpid ())) print ( kwargs ) sleep ( 0.2 ) if __name__ == '__main__' : p = Process ( target = run_proc , args = ( 'test' , 18 ), kwargs = { \"m\" : 20 }) p . start () sleep ( 1 ) # 1\u79d2\u4e2d\u4e4b\u540e\uff0c\u7acb\u5373\u7ed3\u675f\u5b50\u8fdb\u7a0b p . terminate () p . join () \u8fd0\u884c\u7ed3\u679c: \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } 5. \u8fdb\u7a0b\u95f4\u4e0d\u540c\u4eab\u5168\u5c40\u53d8\u91cf(\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u62f7\u8d1d\u4e3b\u8fdb\u7a0b\u7684\u4e00\u4efd\u8d44\u6e90,\u56e0\u6b64\u8f93\u51fa\u7684\u4f7f\u7528nums\u90fd\u662f\u5355\u72ec\u7684\u8d44\u6e90) \u00b6 # -*- coding:utf-8 -*- from multiprocessing import Process import os import time nums = [ 11 , 22 ] def work1 (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( \"in process1 pid= %d ,nums= %s \" % ( os . getpid (), nums )) for i in range ( 3 ): nums . append ( i ) time . sleep ( 1 ) print ( \"in process1 pid= %d ,nums= %s \" % ( os . getpid (), nums )) def work2 (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( \"in process2 pid= %d ,nums= %s \" % ( os . getpid (), nums )) if __name__ == '__main__' : p1 = Process ( target = work1 ) p1 . start () p1 . join () p2 = Process ( target = work2 ) p2 . start () \u8fd0\u884c\u7ed3\u679c: \u00b6 in process1 pid = 11349 , nums = [ 11 , 22 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 , 1 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 , 1 , 2 ] in process2 pid = 11350 , nums = [ 11 , 22 ] 6.3. \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u5bf9\u6bd4 \u00b6 \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u5bf9\u6bd4 \u00b6 \u529f\u80fd \u00b6 \u8fdb\u7a0b(\u4e00\u5768\u8d44\u6e90\u53ca\u4ee3\u7801\u7684\u603b\u79f0)\uff0c\u80fd\u591f\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u6bd4\u5982 \u5728\u4e00\u53f0\u7535\u8111\u4e0a\u80fd\u591f\u540c\u65f6\u8fd0\u884c\u591a\u4e2aQQ \u7ebf\u7a0b\uff0c\u80fd\u591f\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u6bd4\u5982 \u4e00\u4e2aQQ\u4e2d\u7684\u591a\u4e2a\u804a\u5929\u7a97\u53e3 \u5b9a\u4e49\u7684\u4e0d\u540c \u00b6 \u8fdb\u7a0b\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d. \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u5b9e\u4f53,\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d,\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d.\u7ebf\u7a0b\u81ea\u5df1\u57fa\u672c\u4e0a\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90,\u53ea\u62e5\u6709\u4e00\u70b9\u5728\u8fd0\u884c\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u8d44\u6e90(\u5982\u7a0b\u5e8f\u8ba1\u6570\u5668,\u4e00\u7ec4\u5bc4\u5b58\u5668\u548c\u6808), \u4f46\u662f\u5b83\u53ef\u4e0e\u540c\u5c5e\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5176\u4ed6\u7684\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u6240\u62e5\u6709\u7684\u5168\u90e8\u8d44\u6e90. \u533a\u522b \u00b6 \u4e00\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u6709\u4e00\u4e2a\u8fdb\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b. \u7ebf\u7a0b\u7684\u5212\u5206\u5c3a\u5ea6\u5c0f\u4e8e\u8fdb\u7a0b(\u8d44\u6e90\u6bd4\u8fdb\u7a0b\u5c11)\uff0c\u4f7f\u5f97\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5e76\u53d1\u6027\u9ad8\u3002 \u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u62e5\u6709\u72ec\u7acb\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\uff0c\u4ece\u800c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387 \u7ebf\u7ebf\u7a0b\u4e0d\u80fd\u591f\u72ec\u7acb\u6267\u884c\uff0c\u5fc5\u987b\u4f9d\u5b58\u5728\u8fdb\u7a0b\u4e2d \u53ef\u4ee5\u5c06\u8fdb\u7a0b\u7406\u89e3\u4e3a\u5de5\u5382\u4e2d\u7684\u4e00\u6761\u6d41\u6c34\u7ebf\uff0c\u800c\u5176\u4e2d\u7684\u7ebf\u7a0b\u5c31\u662f\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u4e0a\u7684\u5de5\u4eba \u4f18\u7f3a\u70b9 \u00b6 \u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7684\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63\u76f8\u53cd\u3002 6.4. \u8fdb\u7a0b\u95f4\u901a\u4fe1-Queue \u00b6 \u8fdb\u7a0b\u95f4\u901a\u4fe1-Queue \u00b6 Process\u4e4b\u95f4\u6709\u65f6\u9700\u8981\u901a\u4fe1\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5f88\u591a\u673a\u5236\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002 1. Queue\u7684\u4f7f\u7528 \u00b6 \u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u7684Queue\u5b9e\u73b0\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\uff0cQueue\u672c\u8eab\u662f\u4e00\u4e2a\u6d88\u606f\u5217\u961f\u7a0b\u5e8f\uff0c\u9996\u5148\u7528\u4e00\u4e2a\u5c0f\u5b9e\u4f8b\u6765\u6f14\u793a\u4e00\u4e0bQueue\u7684\u5de5\u4f5c\u539f\u7406\uff1a #coding=utf-8 from multiprocessing import Queue q = Queue ( 3 ) #\u521d\u59cb\u5316\u4e00\u4e2aQueue\u5bf9\u8c61\uff0c\u6700\u591a\u53ef\u63a5\u6536\u4e09\u6761put\u6d88\u606f q . put ( \"\u6d88\u606f1\" ) q . put ( \"\u6d88\u606f2\" ) print ( q . full ()) #False q . put ( \"\u6d88\u606f3\" ) print ( q . full ()) #True #\u56e0\u4e3a\u6d88\u606f\u5217\u961f\u5df2\u6ee1\u4e0b\u9762\u7684try\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u7b2c\u4e00\u4e2atry\u4f1a\u7b49\u5f852\u79d2\u540e\u518d\u629b\u51fa\u5f02\u5e38\uff0c\u7b2c\u4e8c\u4e2aTry\u4f1a\u7acb\u523b\u629b\u51fa\u5f02\u5e38 try : q . put ( \"\u6d88\u606f4\" , True , 2 ) #\u7b49\u4e24\u79d2\u518d\u5b58\u6d88\u606f except : print ( \"\u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf: %s \" % q . qsize ()) try : q . put_nowait ( \"\u6d88\u606f4\" ) #\u4e0d\u60f3\u7b49\u76f4\u63a5\u5c31\u8981\u5f80\u91cc\u5b58\u6d88\u606f except : print ( \"\u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf: %s \" % q . qsize ()) #\u63a8\u8350\u7684\u65b9\u5f0f\uff0c\u5148\u5224\u65ad\u6d88\u606f\u5217\u961f\u662f\u5426\u5df2\u6ee1\uff0c\u518d\u5199\u5165 if not q . full (): q . put_nowait ( \"\u6d88\u606f4\" ) #\u8bfb\u53d6\u6d88\u606f\u65f6\uff0c\u5148\u5224\u65ad\u6d88\u606f\u5217\u961f\u662f\u5426\u4e3a\u7a7a\uff0c\u518d\u8bfb\u53d6 if not q . empty (): for i in range ( q . qsize ()): print ( q . get_nowait ()) \u8fd0\u884c\u7ed3\u679c: False True \u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf : 3 \u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf : 3 \u6d88\u606f 1 \u6d88\u606f 2 \u6d88\u606f 3 \u8bf4\u660e \u00b6 \u521d\u59cb\u5316Queue()\u5bf9\u8c61\u65f6\uff08\u4f8b\u5982\uff1aq=Queue()\uff09\uff0c\u82e5\u62ec\u53f7\u4e2d\u6ca1\u6709\u6307\u5b9a\u6700\u5927\u53ef\u63a5\u6536\u7684\u6d88\u606f\u6570\u91cf\uff0c\u6216\u6570\u91cf\u4e3a\u8d1f\u503c\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\u6ca1\u6709\u4e0a\u9650\uff08\u76f4\u5230\u5185\u5b58\u7684\u5c3d\u5934\uff09\uff1b Queue.qsize()\uff1a\u8fd4\u56de\u5f53\u524d\u961f\u5217\u5305\u542b\u7684\u6d88\u606f\u6570\u91cf\uff1b Queue.empty()\uff1a\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56deTrue\uff0c\u53cd\u4e4bFalse \uff1b Queue.full()\uff1a\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u8fd4\u56deTrue,\u53cd\u4e4bFalse\uff1b Queue.get([block[, timeout]])\uff1a\u83b7\u53d6\u961f\u5217\u4e2d\u7684\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u5c06\u5176\u4ece\u5217\u961f\u4e2d\u79fb\u9664\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue\uff1b 1\uff09\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u4e3a\u7a7a\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u8bfb\u53d6\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u5217\u961f\u8bfb\u5230\u6d88\u606f\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u8bfb\u53d6\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u5219\u629b\u51fa\"Queue.Empty\"\u5f02\u5e38\uff1b 2\uff09\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Empty\"\u5f02\u5e38\uff1b Queue.get_nowait()\uff1a\u76f8\u5f53Queue.get(False)\uff1b Queue.put(item,[block[, timeout]])\uff1a\u5c06item\u6d88\u606f\u5199\u5165\u961f\u5217\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue\uff1b 1\uff09\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u5199\u5165\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u5217\u961f\u817e\u51fa\u7a7a\u95f4\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u7a7a\u95f4\uff0c\u5219\u629b\u51fa\"Queue.Full\"\u5f02\u5e38\uff1b 2\uff09\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Full\"\u5f02\u5e38\uff1b Queue.put_nowait(item)\uff1a\u76f8\u5f53Queue.put(item, False)\uff1b 2. Queue\u5b9e\u4f8b \u00b6 \u6211\u4eec\u4ee5Queue\u4e3a\u4f8b\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e24\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u5f80Queue\u91cc\u5199\u6570\u636e\uff0c\u4e00\u4e2a\u4eceQueue\u91cc\u8bfb\u6570\u636e\uff1a \u7b80\u5355\u7684\u505a\u6cd5 import multiprocessing \"\"\" \u4e00\u4e2a\u8fdb\u7a0b\u5411Queue\u4e2d\u5199\u5165\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u4eceQueue\u4e2d\u83b7\u53d6\u6570\u636e\uff0c \u901a\u8fc7Queue\u5b8c\u6210\u4e86 \u591a\u4e2a\u9700\u8981\u914d\u5408\u7684\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u4ece\u800c\u80fd\u591f \u8d77\u5230 \u89e3\u8026\u7684\u4f5c\u7528 \"\"\" def download_from_web ( q ): \"\"\"\u4e0b\u8f7d\u6570\u636e\"\"\" # \u6a21\u62df\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u7684\u6570\u636e data = [ 11 , 22 , 33 , 44 ] # \u5411\u961f\u5217\u4e2d\u5199\u5165\u6570\u636e\uff08\u53ea\u7ba1\u5f80\u91cc\u653e\uff09 for temp in data : q . put ( temp ) print ( \"---\u4e0b\u8f7d\u5668\u5df2\u7ecf\u4e0b\u8f7d\u5b8c\u4e86\u6570\u636e\u5e76\u4e14\u5b58\u5165\u5230\u961f\u5217\u4e2d----\" ) def analysis_data ( q ): \"\"\"\u6570\u636e\u5904\u7406\"\"\" waitting_analysis_data = list () # \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u6570\u636e while True : data = q . get () #\u53d6\u6570\u636e waitting_analysis_data . append ( data ) #\u5b58\u50a8\u6570\u636e if q . empty (): #\u961f\u5217\u7a7a\u4e86\u5c31\u7ed3\u675f\u5faa\u73af break # \u6a21\u62df\u6570\u636e\u5904\u7406 print ( waitting_analysis_data ) def main (): # 1. \u521b\u5efa\u4e00\u4e2a\u961f\u5217 q = multiprocessing . Queue () #\u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u4e4b\u524d\u5c31\u628a\u961f\u5217\u5148\u521b\u5efa\u597d # 2. \u521b\u5efa\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5c06\u961f\u5217\u7684\u5f15\u7528\u5f53\u505a\u5b9e\u53c2\u8fdb\u884c\u4f20\u9012\u5230\u91cc\u9762 p1 = multiprocessing . Process ( target = download_from_web , args = ( q ,)) #args=\uff08q\uff0c\uff09#\u8868\u793a\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u8d85\u8fc7\u4e24\u4e2a\u53c2\u6570\u540e\u9762\u5c31\u4e0d\u7528\u518d\u52a0\u591a\u4f59\u7684\u4e00\u4e2a\u9017\u53f7 p2 = multiprocessing . Process ( target = analysis_data , args = ( q ,)) #\u4f20\u9012\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u961f\u5217\u7684\u5f15\u7528\uff0c\u5148\u8fdb\u5148\u51fa p1 . start () p2 . start () if __name__ == \"__main__\" : main () \u66f4\u7cfb\u7edf\u7684\u505a\u6cd5 from multiprocessing import Process , Queue import os , time , random # \u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801: def write ( q ): for value in [ 'A' , 'B' , 'C' ]: print ( 'Put %s to queue...' % value ) q . put ( value ) time . sleep ( random . random ()) # \u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801: def read ( q ): while True : if not q . empty (): value = q . get ( True ) print ( 'Get %s from queue.' % value ) time . sleep ( random . random ()) else : break if __name__ == '__main__' : # \u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1a q = Queue () pw = Process ( target = write , args = ( q ,)) pr = Process ( target = read , args = ( q ,)) # \u542f\u52a8\u5b50\u8fdb\u7a0bpw\uff0c\u5199\u5165: pw . start () # \u7b49\u5f85pw\u7ed3\u675f: pw . join () # \u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6: pr . start () pr . join () # pr\u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62: print ( '' ) print ( '\u6240\u6709\u6570\u636e\u90fd\u5199\u5165\u5e76\u4e14\u8bfb\u5b8c' ) \u8fd0\u884c\u7ed3\u679c\uff1a 6.5. \u8fdb\u7a0b\u7684\u521b\u5efa-\u8fdb\u7a0b\u6c60Pool \u00b6 \u8fdb\u7a0b\u6c60Pool \u00b6 \u5f53\u9700\u8981\u521b\u5efa\u7684\u5b50\u8fdb\u7a0b\u6570\u91cf\u4e0d\u591a\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528multiprocessing\u4e2d\u7684Process\u52a8\u6001\u6210\u751f\u591a\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u5982\u679c\u662f\u4e0a\u767e\u751a\u81f3\u4e0a\u5343\u4e2a\u76ee\u6807\uff0c\u624b\u52a8\u7684\u53bb\u521b\u5efa\u8fdb\u7a0b\u7684\u5de5\u4f5c\u91cf\u5de8\u5927\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u7528\u5230multiprocessing\u6a21\u5757\u63d0\u4f9b\u7684Pool\u65b9\u6cd5\u3002 \u521d\u59cb\u5316Pool\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6700\u5927\u8fdb\u7a0b\u6570\uff0c\u5f53\u6709\u65b0\u7684\u8bf7\u6c42\u63d0\u4ea4\u5230Pool\u4e2d\u65f6\uff0c\u5982\u679c\u6c60\u8fd8\u6ca1\u6709\u6ee1\uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u7528\u6765\u6267\u884c\u8be5\u8bf7\u6c42\uff1b\u4f46\u5982\u679c\u6c60\u4e2d\u7684\u8fdb\u7a0b\u6570\u5df2\u7ecf\u8fbe\u5230\u6307\u5b9a\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8be5\u8bf7\u6c42\u5c31\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u6c60\u4e2d\u6709\u8fdb\u7a0b\u7ed3\u675f\uff0c\u624d\u4f1a\u7528\u4e4b\u524d\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u65b0\u7684\u4efb\u52a1\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u5b9e\u4f8b\uff1a # -*- coding:utf-8 -*- from multiprocessing import Pool #\u5bfc\u5165\u8fdb\u7a0b\u6c60 import os , time , random def worker ( msg ): t_start = time . time () print ( \" %s \u5f00\u59cb\u6267\u884c,\u8fdb\u7a0b\u53f7\u4e3a %d \" % ( msg , os . getpid ())) # random.random()\u968f\u673a\u751f\u62100~1\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570 time . sleep ( random . random () * 2 ) t_stop = time . time () print ( msg , \"\u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 %0.2f \" % ( t_stop - t_start )) po = Pool ( 3 ) # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u6c60\uff0c\u6700\u5927\u8fdb\u7a0b\u65703 for i in range ( 0 , 10 ): #\u4f1a\u628a\u6240\u6709\u7684\u8fdb\u7a0b\u4efb\u52a1\u5168\u90e8\u6dfb\u52a0,\u4f46\u662f\u6267\u884c\u7684\u53ea\u6709Pool\u6700\u5927\u7684\u6570\u91cf,\u4f1a\u6162\u6162\u7684\u628a\u6dfb\u52a0\u7684\u4efb\u52a1\u5206\u914d\u5230\u8fdb\u7a0b\u6c60\u91cc\u8fdb\u884c\u6267\u884c # Pool().apply_async(\u8981\u8c03\u7528\u7684\u76ee\u6807,(\u4f20\u9012\u7ed9\u76ee\u6807\u7684\u53c2\u6570\u5143\u7956,)) # \u6bcf\u6b21\u5faa\u73af\u5c06\u4f1a\u7528\u7a7a\u95f2\u51fa\u6765\u7684\u5b50\u8fdb\u7a0b\u53bb\u8c03\u7528\u76ee\u6807 po . apply_async ( worker ,( i ,)) #worker \u51fd\u6570\u540d,(i,) \u53c2\u6570 #\u4f7f\u7528pool\u521b\u5efa\u7684\u4efb\u52a1,\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u4efb\u52a1\u6267\u884c\u5b8c,\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c,\u56e0\u6b64\u9700\u8981\u4e00\u4e2ajoin\u51fd\u6570\u8fdb\u884c\u5835\u585e,\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u6267\u884c\u5b8c\u6bd5 print ( \"----start----\" ) po . close () # \u5173\u95ed\u8fdb\u7a0b\u6c60\uff0c\u5173\u95ed\u540epo\u4e0d\u518d\u63a5\u6536\u65b0\u7684\u8bf7\u6c42,\u4f1a\u7ee7\u7eed\u5411\u4e0b\u6267\u884c,\u9700\u8981\u5bf9\u4e3b\u8fdb\u7a0b\u8fdb\u884c\u5835\u585e po . join () # \u7b49\u5f85po\u4e2d\u6240\u6709\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\uff0c\u5fc5\u987b\u653e\u5728close\u8bed\u53e5\u4e4b\u540e print ( \"-----end-----\" ) \u8fd0\u884c\u7ed3\u679c: ---- start ---- 0 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 1 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 2 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 0 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.01 3 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 2 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.24 4 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 3 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.56 5 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 1 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.68 6 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 4 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.67 7 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 5 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.83 8 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 6 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.75 9 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 7 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.03 8 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.05 9 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.69 ----- end ----- multiprocessing.Pool\u5e38\u7528\u51fd\u6570\u89e3\u6790\uff1a apply_async(func[, args[, kwds]]) \uff1a\u4f7f\u7528\u975e\u963b\u585e\u65b9\u5f0f\u8c03\u7528func\uff08\u5e76\u884c\u6267\u884c\uff0c\u5835\u585e\u65b9\u5f0f\u5fc5\u987b\u7b49\u5f85\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u9000\u51fa\u624d\u80fd\u6267\u884c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\uff09\uff0cargs\u4e3a\u4f20\u9012\u7ed9func\u7684\u53c2\u6570\u5217\u8868\uff0ckwds\u4e3a\u4f20\u9012\u7ed9func\u7684\u5173\u952e\u5b57\u53c2\u6570\u5217\u8868\uff1b close()\uff1a\u5173\u95edPool\uff0c\u4f7f\u5176\u4e0d\u518d\u63a5\u53d7\u65b0\u7684\u4efb\u52a1\uff1b terminate()\uff1a\u4e0d\u7ba1\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u7acb\u5373\u7ec8\u6b62\uff1b join()\uff1a\u4e3b\u8fdb\u7a0b\u963b\u585e\uff0c\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\uff0c \u5fc5\u987b\u5728close\u6216terminate\u4e4b\u540e\u4f7f\u7528\uff1b \u8fdb\u7a0b\u6c60\u4e2d\u7684Queue \u00b6 \u5982\u679c\u8981\u4f7f\u7528Pool\u521b\u5efa\u8fdb\u7a0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528multiprocessing.Manager()\u4e2d\u7684Queue()\uff0c\u800c\u4e0d\u662fmultiprocessing.Queue()\uff0c\u5426\u5219\u4f1a\u5f97\u5230\u4e00\u6761\u5982\u4e0b\u7684\u9519\u8bef\u4fe1\u606f\uff1a RuntimeError: Queue objects should only be shared between processes through inheritance. \u4e0b\u9762\u7684\u5b9e\u4f8b\u6f14\u793a\u4e86\u8fdb\u7a0b\u6c60\u4e2d\u7684\u8fdb\u7a0b\u5982\u4f55\u901a\u4fe1\uff1a # -*- coding:utf-8 -*- # \u4fee\u6539import\u4e2d\u7684Queue\u4e3aManager from multiprocessing import Manager , Pool import os , time , random def reader ( q ): print ( \"reader\u542f\u52a8( %s ),\u7236\u8fdb\u7a0b\u4e3a( %s )\" % ( os . getpid (), os . getppid ())) for i in range ( q . qsize ()): print ( \"reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f\uff1a %s \" % q . get ( True )) def writer ( q ): print ( \"writer\u542f\u52a8( %s ),\u7236\u8fdb\u7a0b\u4e3a( %s )\" % ( os . getpid (), os . getppid ())) for i in \"itcast\" : q . put ( i ) if __name__ == \"__main__\" : print ( \"( %s ) start\" % os . getpid ()) q = Manager () . Queue () # \u4f7f\u7528Manager\u4e2d\u7684Queue po = Pool () po . apply_async ( writer , ( q ,)) time . sleep ( 1 ) # \u5148\u8ba9\u4e0a\u9762\u7684\u4efb\u52a1\u5411Queue\u5b58\u5165\u6570\u636e\uff0c\u7136\u540e\u518d\u8ba9\u4e0b\u9762\u7684\u4efb\u52a1\u5f00\u59cb\u4ece\u4e2d\u53d6\u6570\u636e po . apply_async ( reader , ( q ,)) po . close () po . join () print ( \"( %s ) End\" % os . getpid ()) \u8fd0\u884c\u7ed3\u679c: ( 11095 ) start writer\u542f\u52a8 ( 11097 ), \u7236\u8fdb\u7a0b\u4e3a ( 11095 ) reader\u542f\u52a8 ( 11098 ), \u7236\u8fdb\u7a0b\u4e3a ( 11095 ) reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a i reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a t reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a c reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a a reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a s reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a t ( 11095 ) End 6.6. \u6848\u4f8b\uff1a\u6587\u4ef6\u5939copy\u5668\uff08\u591a\u8fdb\u7a0b\u7248\uff09 \u00b6 \u5e94\u7528\uff1a\u6587\u4ef6\u5939copy\u5668\uff08\u591a\u8fdb\u7a0b\u7248\uff09 \u00b6 \u521d\u59cb\u7248\u672c import os import multiprocessing def copy_file ( file_name , old_folder_name , new_folder_name ): \"\"\"\u5b8c\u6210\u6587\u4ef6\u7684\u590d\u5236\"\"\" print ( \"======>\u6a21\u62dfcopy\u6587\u4ef6\uff1a\u4ece %s --->\u5230 %s \u6587\u4ef6\u540d\u662f: %s \" % ( old_folder_name , new_folder_name , file_name )) old_f = open ( old_folder_name + \"/\" + file_name , \"rb\" ) content = old_f . read () old_f . close () new_f = open ( new_folder_name + \"/\" + file_name , \"wb\" ) new_f . write ( content ) new_f . close () def main (): # 1. \u83b7\u53d6\u7528\u6237\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57 old_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57\uff1a\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939\u4f7f\u7528try\u7684\u597d\u5904\u5c31\u662f\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u7528\u4e8c\u6b21\u521b\u5efa\u5bfc\u81f4\u62a5\u9519\u4e86 try : new_folder_name = old_folder_name + \"[\u590d\u4ef6]\" os . mkdir ( new_folder_name ) except : pass # 3. \u83b7\u53d6\u6587\u4ef6\u5939\u7684\u6240\u6709\u7684\u5f85copy\u7684\u6587\u4ef6\u540d\u5b57 listdir() file_names = os . listdir ( old_folder_name ) print ( file_names ) # 4. \u521b\u5efa\u8fdb\u7a0b\u6c60 po = multiprocessing . Pool ( 5 ) # 5. \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0 copy\u6587\u4ef6\u7684\u4efb\u52a1 for file_name in file_names : po . apply_async ( copy_file , args = ( file_name , old_folder_name , new_folder_name )) po . close () #\u5173\u95ed\u8fdb\u7a0b\u6c60\u4e0d\u518d\u50cf\u8fdb\u7a0b\u6c60\u4e2d\u5b58\u50a8\u4efb\u52a1 po . join () if __name__ == \"__main__\" : main () \u6253\u5370\u8fdb\u5ea6\u7248\u672c import os import multiprocessing def copy_file ( q , file_name , old_folder_name , new_folder_name ): \"\"\"\u5b8c\u6210\u6587\u4ef6\u7684\u590d\u5236\"\"\" # print(\"======>\u6a21\u62dfcopy\u6587\u4ef6\uff1a\u4ece%s--->\u5230%s \u6587\u4ef6\u540d\u662f:%s\" % (old_folder_name, new_folder_name, file_name)) old_f = open ( old_folder_name + \"/\" + file_name , \"rb\" ) content = old_f . read () old_f . close () new_f = open ( new_folder_name + \"/\" + file_name , \"wb\" ) new_f . write ( content ) new_f . close () # \u5982\u679c\u62f7\u8d1d\u5b8c\u4e86\u6587\u4ef6\uff0c\u90a3\u4e48\u5c31\u5411\u961f\u5217\u4e2d\u5199\u5165\u4e00\u4e2a\u6d88\u606f\uff0c\u8868\u793a\u5df2\u7ecf\u5b8c\u6210 q . put ( file_name ) def main (): # 1. \u83b7\u53d6\u7528\u6237\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57 old_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57\uff1a\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939 try : new_folder_name = old_folder_name + \"[\u590d\u4ef6]\" os . mkdir ( new_folder_name ) except : pass # 3. \u83b7\u53d6\u6587\u4ef6\u5939\u7684\u6240\u6709\u7684\u5f85copy\u7684\u6587\u4ef6\u540d\u5b57 listdir() file_names = os . listdir ( old_folder_name ) # print(file_names) # 4. \u521b\u5efa\u8fdb\u7a0b\u6c60 po = multiprocessing . Pool ( 5 ) # 5. \u521b\u5efa\u4e00\u4e2a\u961f\u5217 q = multiprocessing . Manager () . Queue () #\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528\u7684\u662fManager\u7684\u961f\u5217 # 6. \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0 copy\u6587\u4ef6\u7684\u4efb\u52a1 for file_name in file_names : po . apply_async ( copy_file , args = ( q , file_name , old_folder_name , new_folder_name )) po . close () # po.join() all_file_num = len ( file_names ) # \u6d4b\u4e00\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u4e2a\u6570 copy_ok_num = 0 #\u62f7\u8d1d\u5b8c\u7684\u6587\u4ef6\u7684\u4e2a\u6570\u8fdb\u884c\u521d\u59cb\u5316 while True : file_name = q . get () #\u5f80\u5916\u53d6\u62f7\u8d1d\u5b8c\u4e86\u7684\u6587\u4ef6\u540d,\u83b7\u53d6\u5230\u4e86\u5c31\u52a0\u4e00 # print(\"\u5df2\u7ecf\u5b8c\u6210copy\uff1a%s\" % file_name) copy_ok_num += 1 print ( \" \\r \u62f7\u8d1d\u7684\u8fdb\u5ea6\u4e3a\uff1a %.2f %% \" % ( copy_ok_num * 100 / all_file_num ), end = \"\" ) if copy_ok_num >= all_file_num : #\u4e2a\u6570\u76f8\u7b49\u5c31\u8bf4\u660e\u62f7\u8d1d\u5b8c\u4e86\u5c31\u7ed3\u675f\u5faa\u73af break print () if __name__ == \"__main__\" : main () \u591a\u8fdb\u7a0b\u62f7\u8d1d\u6587\u4ef6,\u8f93\u5165\u539f\u59cb\u8def\u5f84\u53ca\u9700\u8981\u62f7\u8d1d\u5230\u7684\u8def\u5f84 import multiprocessing import os import time import random def copy_file ( queue , file_name , source_folder_name , dest_folder_name ): \"\"\"copy\u6587\u4ef6\u5230\u6307\u5b9a\u7684\u8def\u5f84\"\"\" f_read = open ( source_folder_name + \"/\" + file_name , \"rb\" ) f_write = open ( dest_folder_name + \"/\" + file_name , \"wb\" ) while True : time . sleep ( random . random ()) content = f_read . read ( 1024 ) if content : f_write . write ( content ) else : break f_read . close () f_write . close () # \u53d1\u9001\u5df2\u7ecf\u62f7\u8d1d\u5b8c\u6bd5\u7684\u6587\u4ef6\u540d\u5b57 queue . put ( file_name ) def main (): # \u83b7\u53d6\u8981\u590d\u5236\u7684\u6587\u4ef6\u5939 source_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981\u590d\u5236\u6587\u4ef6\u5939\u540d\u5b57:\" ) # \u6574\u7406\u76ee\u6807\u6587\u4ef6\u5939 dest_folder_name = source_folder_name + \"[\u526f\u672c]\" # \u521b\u5efa\u76ee\u6807\u6587\u4ef6\u5939 try : os . mkdir ( dest_folder_name ) except : pass # \u5982\u679c\u6587\u4ef6\u5939\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4f1a\u5931\u8d25 # \u83b7\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6240\u6709\u7684\u666e\u901a\u6587\u4ef6\u540d file_names = os . listdir ( source_folder_name ) # \u521b\u5efaQueue queue = multiprocessing . Manager () . Queue () # \u521b\u5efa\u8fdb\u7a0b\u6c60 pool = multiprocessing . Pool ( 3 ) for file_name in file_names : # \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0\u4efb\u52a1 pool . apply_async ( copy_file , args = ( queue , file_name , source_folder_name , dest_folder_name )) # \u4e3b\u8fdb\u7a0b\u663e\u793a\u8fdb\u5ea6 pool . close () all_file_num = len ( file_names ) while True : file_name = queue . get () if file_name in file_names : file_names . remove ( file_name ) copy_rate = ( all_file_num - len ( file_names )) * 100 / all_file_num print ( \" \\r %.2f ...( %s )\" % ( copy_rate , file_name ) + \" \" * 50 , end = \"\" ) if copy_rate >= 100 : break print () if __name__ == \"__main__\" : main ()","title":"054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#6-","text":"","title":"6. \u591a\u4efb\u52a1-\u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#61","text":"","title":"6.1. \u8fdb\u7a0b\u4ee5\u53ca\u72b6\u6001"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_1","text":"","title":"\u8fdb\u7a0b\u4ee5\u53ca\u72b6\u6001"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#1","text":"\u7a0b\u5e8f\uff1a\u4f8b\u5982xxx.py\u8fd9\u662f\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u9759\u6001\u7684 \u8fdb\u7a0b\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u4ee3\u7801+\u7528\u5230\u7684\u8d44\u6e90 \u79f0\u4e4b\u4e3a\u8fdb\u7a0b\uff0c\u5b83\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u5143\u3002 \u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u8fdb\u7a0b\u4e5f\u662f\u53ef\u4ee5\u7684","title":"1. \u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#2","text":"\u5de5\u4f5c\u4e2d\uff0c\u4efb\u52a1\u6570\u5f80\u5f80\u5927\u4e8ecpu\u7684\u6838\u6570\uff0c\u5373\u4e00\u5b9a\u6709\u4e00\u4e9b\u4efb\u52a1\u6b63\u5728\u6267\u884c\uff0c\u800c\u53e6\u5916\u4e00\u4e9b\u4efb\u52a1\u5728\u7b49\u5f85cpu\u8fdb\u884c\u6267\u884c\uff0c\u56e0\u6b64\u5bfc\u81f4\u4e86\u6709\u4e86\u4e0d\u540c\u7684\u72b6\u6001 \u5c31\u7eea\u6001\uff1a\u8fd0\u884c\u7684\u6761\u4ef6\u90fd\u5df2\u7ecf\u6ee1\u8db3\uff0c\u6b63\u5728\u7b49\u5728cpu\u6267\u884c \u6267\u884c\u6001\uff1acpu\u6b63\u5728\u6267\u884c\u5176\u529f\u80fd \u7b49\u5f85\u6001\uff1a\u7b49\u5f85\u67d0\u4e9b\u6761\u4ef6\u6ee1\u8db3\uff0c\u4f8b\u5982\u4e00\u4e2a\u7a0b\u5e8fsleep\u4e86\uff0c\u6b64\u65f6\u5c31\u5904\u4e8e\u7b49\u5f85\u6001","title":"2. \u8fdb\u7a0b\u7684\u72b6\u6001"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#62-multiprocessing","text":"","title":"6.2. \u8fdb\u7a0b\u7684\u521b\u5efa-multiprocessing"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#-multiprocessing","text":"multiprocessing\u6a21\u5757\u5c31\u662f\u8de8\u5e73\u53f0\u7248\u672c\u7684\u591a\u8fdb\u7a0b\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2aProcess\u7c7b\u6765\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u6267\u884c\u53e6\u5916\u7684\u4e8b\u60c5","title":"\u8fdb\u7a0b\u7684\u521b\u5efa-multiprocessing"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#1-2while","text":"# -*- coding:utf-8 -*- from multiprocessing import Process #\u4f7f\u7528\u7684\u662f\u591a\u8fdb\u7a0b\u7684Process\u7c7b import time def run_proc (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" while True : print ( \"----2----\" ) time . sleep ( 1 ) if __name__ == '__main__' : p = Process ( target = run_proc ) #\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b p . start () #\u5f00\u542f\u8fdb\u7a0b while True : print ( \"----1----\" ) time . sleep ( 1 )","title":"1. 2\u4e2awhile\u5faa\u73af\u4e00\u8d77\u6267\u884c"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_2","text":"\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6267\u884c\u51fd\u6570\u548c\u51fd\u6570\u7684\u53c2\u6570\uff0c\u521b\u5efa\u4e00\u4e2aProcess\u5b9e\u4f8b\uff0c\u7528start()\u65b9\u6cd5\u542f\u52a8","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_3","text":"import threading import time import multiprocessing def test1 (): while True : print ( \"1--------\" ) time . sleep ( 1 ) def test2 (): while True : print ( \"2--------\" ) time . sleep ( 1 ) def main (): # t1 = threading.Thread(target=test1) # t2 = threading.Thread(target=test2) # t1.start() # t2.start() p1 = multiprocessing . Process ( target = test1 ) #threading.Thread() #\u8ddf\u8fdb\u7a0b\u7684\u533a\u5206\u4e00\u4e0b p2 = multiprocessing . Process ( target = test2 ) p1 . start () p2 . start () if __name__ == \"__main__\" : main () \u8fdb\u7a0b\u5f00\u7684\u8d8a\u591a,\u8d44\u6e90\u5360\u7528\u7684\u8d8a\u591a,\u8fdb\u7a0b\u8d8a\u6765\u8d8a\u591a,\u6548\u7387\u4f1a\u964d\u4f4e.\u4e00\u5f00\u59cb\u662f\u5feb\u7684\u4e0d\u8fc7\u662f\u5360\u7528\u5185\u5b58.\u4f46\u662f\u8fdb\u7a0b\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\u5c31\u6324\u4e0d\u5f00\u4e86. \u5b50\u8fdb\u7a0b\u662f\u8981\u590d\u5236\u4e00\u4efd\u4e3b\u8fdb\u7a0b\u7684\u8d44\u6e90,\u4f46\u662f\u4ee3\u7801\u662f\u5171\u4eab\u7684,\u56e0\u6b64\u4f1a\u53c8\u5360\u7528\u4e00\u90e8\u5206\u5185\u5b58\u8fd9\u4e5f\u662f\u8017\u8d39\u8d44\u6e90\u591a\u7684\u4e00\u4e2a\u539f\u56e0.","title":"\u591a\u8fdb\u7a0b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#2-pid","text":"# -*- coding:utf-8 -*- from multiprocessing import Process import os #\u7cfb\u7edf\u7684\u64cd\u4f5c import time def run_proc (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( '\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0cpid= %d ...' % os . getpid ()) # os.getpid\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 print ( '\u5b50\u8fdb\u7a0b\u5c06\u8981\u7ed3\u675f...' ) if __name__ == '__main__' : print ( '\u7236\u8fdb\u7a0bpid: %d ' % os . getpid ()) # os.getpid\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 p = Process ( target = run_proc ) p . start ()","title":"2. \u8fdb\u7a0bpid"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#3-process","text":"Process([group [, target [, name [, args [, kwargs]]]]]) target\uff1a\u5982\u679c\u4f20\u9012\u4e86\u51fd\u6570\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u4efb\u52a1\u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u5c31\u6267\u884c\u8fd9\u91cc\u7684\u4ee3\u7801 args\uff1a\u7ed9target\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\uff0c\u4ee5\u5143\u7ec4\u7684\u65b9\u5f0f\u4f20\u9012 kwargs\uff1a\u7ed9target\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u547d\u540d\u53c2\u6570 name\uff1a\u7ed9\u8fdb\u7a0b\u8bbe\u5b9a\u4e00\u4e2a\u540d\u5b57\uff0c\u53ef\u4ee5\u4e0d\u8bbe\u5b9a group\uff1a\u6307\u5b9a\u8fdb\u7a0b\u7ec4\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7528\u4e0d\u5230 Process\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5e38\u7528\u65b9\u6cd5\uff1a start()\uff1a\u542f\u52a8\u5b50\u8fdb\u7a0b\u5b9e\u4f8b\uff08\u521b\u5efa\u5b50\u8fdb\u7a0b\uff09 is_alive()\uff1a\u5224\u65ad\u8fdb\u7a0b\u5b50\u8fdb\u7a0b\u662f\u5426\u8fd8\u5728\u6d3b\u7740 join([timeout])\uff1a\u662f\u5426\u7b49\u5f85\u5b50\u8fdb\u7a0b\u6267\u884c\u7ed3\u675f\uff0c\u6216\u7b49\u5f85\u591a\u5c11\u79d2 terminate()\uff1a\u4e0d\u7ba1\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u7acb\u5373\u7ec8\u6b62\u5b50\u8fdb\u7a0b Process\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5e38\u7528\u5c5e\u6027\uff1a name\uff1a\u5f53\u524d\u8fdb\u7a0b\u7684\u522b\u540d\uff0c\u9ed8\u8ba4\u4e3aProcess-N\uff0cN\u4e3a\u4ece1\u5f00\u59cb\u9012\u589e\u7684\u6574\u6570 pid\uff1a\u5f53\u524d\u8fdb\u7a0b\u7684pid\uff08\u8fdb\u7a0b\u53f7\uff09","title":"3. Process\u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#4","text":"# -*- coding:utf-8 -*- from multiprocessing import Process import os from time import sleep def run_proc ( name , age , ** kwargs ): for i in range ( 10 ): print ( '\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0cname= %s ,age= %d ,pid= %d ...' % ( name , age , os . getpid ())) print ( kwargs ) sleep ( 0.2 ) if __name__ == '__main__' : p = Process ( target = run_proc , args = ( 'test' , 18 ), kwargs = { \"m\" : 20 }) p . start () sleep ( 1 ) # 1\u79d2\u4e2d\u4e4b\u540e\uff0c\u7acb\u5373\u7ed3\u675f\u5b50\u8fdb\u7a0b p . terminate () p . join () \u8fd0\u884c\u7ed3\u679c: \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 } \u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e2d\uff0c name = test , age = 18 , pid = 45097. .. { 'm' : 20 }","title":"4. \u7ed9\u5b50\u8fdb\u7a0b\u6307\u5b9a\u7684\u51fd\u6570\u4f20\u9012\u53c2\u6570"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#5-nums","text":"# -*- coding:utf-8 -*- from multiprocessing import Process import os import time nums = [ 11 , 22 ] def work1 (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( \"in process1 pid= %d ,nums= %s \" % ( os . getpid (), nums )) for i in range ( 3 ): nums . append ( i ) time . sleep ( 1 ) print ( \"in process1 pid= %d ,nums= %s \" % ( os . getpid (), nums )) def work2 (): \"\"\"\u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\"\"\" print ( \"in process2 pid= %d ,nums= %s \" % ( os . getpid (), nums )) if __name__ == '__main__' : p1 = Process ( target = work1 ) p1 . start () p1 . join () p2 = Process ( target = work2 ) p2 . start ()","title":"5. \u8fdb\u7a0b\u95f4\u4e0d\u540c\u4eab\u5168\u5c40\u53d8\u91cf(\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u62f7\u8d1d\u4e3b\u8fdb\u7a0b\u7684\u4e00\u4efd\u8d44\u6e90,\u56e0\u6b64\u8f93\u51fa\u7684\u4f7f\u7528nums\u90fd\u662f\u5355\u72ec\u7684\u8d44\u6e90)"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_4","text":"in process1 pid = 11349 , nums = [ 11 , 22 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 , 1 ] in process1 pid = 11349 , nums = [ 11 , 22 , 0 , 1 , 2 ] in process2 pid = 11350 , nums = [ 11 , 22 ]","title":"\u8fd0\u884c\u7ed3\u679c:"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#63","text":"","title":"6.3. \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u5bf9\u6bd4"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_5","text":"","title":"\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u5bf9\u6bd4"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_6","text":"\u8fdb\u7a0b(\u4e00\u5768\u8d44\u6e90\u53ca\u4ee3\u7801\u7684\u603b\u79f0)\uff0c\u80fd\u591f\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u6bd4\u5982 \u5728\u4e00\u53f0\u7535\u8111\u4e0a\u80fd\u591f\u540c\u65f6\u8fd0\u884c\u591a\u4e2aQQ \u7ebf\u7a0b\uff0c\u80fd\u591f\u5b8c\u6210\u591a\u4efb\u52a1\uff0c\u6bd4\u5982 \u4e00\u4e2aQQ\u4e2d\u7684\u591a\u4e2a\u804a\u5929\u7a97\u53e3","title":"\u529f\u80fd"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_7","text":"\u8fdb\u7a0b\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d. \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u5b9e\u4f53,\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d,\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d.\u7ebf\u7a0b\u81ea\u5df1\u57fa\u672c\u4e0a\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90,\u53ea\u62e5\u6709\u4e00\u70b9\u5728\u8fd0\u884c\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u8d44\u6e90(\u5982\u7a0b\u5e8f\u8ba1\u6570\u5668,\u4e00\u7ec4\u5bc4\u5b58\u5668\u548c\u6808), \u4f46\u662f\u5b83\u53ef\u4e0e\u540c\u5c5e\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5176\u4ed6\u7684\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u6240\u62e5\u6709\u7684\u5168\u90e8\u8d44\u6e90.","title":"\u5b9a\u4e49\u7684\u4e0d\u540c"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_8","text":"\u4e00\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u6709\u4e00\u4e2a\u8fdb\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b. \u7ebf\u7a0b\u7684\u5212\u5206\u5c3a\u5ea6\u5c0f\u4e8e\u8fdb\u7a0b(\u8d44\u6e90\u6bd4\u8fdb\u7a0b\u5c11)\uff0c\u4f7f\u5f97\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5e76\u53d1\u6027\u9ad8\u3002 \u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u62e5\u6709\u72ec\u7acb\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\uff0c\u4ece\u800c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387 \u7ebf\u7ebf\u7a0b\u4e0d\u80fd\u591f\u72ec\u7acb\u6267\u884c\uff0c\u5fc5\u987b\u4f9d\u5b58\u5728\u8fdb\u7a0b\u4e2d \u53ef\u4ee5\u5c06\u8fdb\u7a0b\u7406\u89e3\u4e3a\u5de5\u5382\u4e2d\u7684\u4e00\u6761\u6d41\u6c34\u7ebf\uff0c\u800c\u5176\u4e2d\u7684\u7ebf\u7a0b\u5c31\u662f\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u4e0a\u7684\u5de5\u4eba","title":"\u533a\u522b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_9","text":"\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7684\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63\u76f8\u53cd\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#64-queue","text":"","title":"6.4. \u8fdb\u7a0b\u95f4\u901a\u4fe1-Queue"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#-queue","text":"Process\u4e4b\u95f4\u6709\u65f6\u9700\u8981\u901a\u4fe1\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5f88\u591a\u673a\u5236\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1-Queue"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#146-queue","text":"\u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u7684Queue\u5b9e\u73b0\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\uff0cQueue\u672c\u8eab\u662f\u4e00\u4e2a\u6d88\u606f\u5217\u961f\u7a0b\u5e8f\uff0c\u9996\u5148\u7528\u4e00\u4e2a\u5c0f\u5b9e\u4f8b\u6765\u6f14\u793a\u4e00\u4e0bQueue\u7684\u5de5\u4f5c\u539f\u7406\uff1a #coding=utf-8 from multiprocessing import Queue q = Queue ( 3 ) #\u521d\u59cb\u5316\u4e00\u4e2aQueue\u5bf9\u8c61\uff0c\u6700\u591a\u53ef\u63a5\u6536\u4e09\u6761put\u6d88\u606f q . put ( \"\u6d88\u606f1\" ) q . put ( \"\u6d88\u606f2\" ) print ( q . full ()) #False q . put ( \"\u6d88\u606f3\" ) print ( q . full ()) #True #\u56e0\u4e3a\u6d88\u606f\u5217\u961f\u5df2\u6ee1\u4e0b\u9762\u7684try\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u7b2c\u4e00\u4e2atry\u4f1a\u7b49\u5f852\u79d2\u540e\u518d\u629b\u51fa\u5f02\u5e38\uff0c\u7b2c\u4e8c\u4e2aTry\u4f1a\u7acb\u523b\u629b\u51fa\u5f02\u5e38 try : q . put ( \"\u6d88\u606f4\" , True , 2 ) #\u7b49\u4e24\u79d2\u518d\u5b58\u6d88\u606f except : print ( \"\u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf: %s \" % q . qsize ()) try : q . put_nowait ( \"\u6d88\u606f4\" ) #\u4e0d\u60f3\u7b49\u76f4\u63a5\u5c31\u8981\u5f80\u91cc\u5b58\u6d88\u606f except : print ( \"\u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf: %s \" % q . qsize ()) #\u63a8\u8350\u7684\u65b9\u5f0f\uff0c\u5148\u5224\u65ad\u6d88\u606f\u5217\u961f\u662f\u5426\u5df2\u6ee1\uff0c\u518d\u5199\u5165 if not q . full (): q . put_nowait ( \"\u6d88\u606f4\" ) #\u8bfb\u53d6\u6d88\u606f\u65f6\uff0c\u5148\u5224\u65ad\u6d88\u606f\u5217\u961f\u662f\u5426\u4e3a\u7a7a\uff0c\u518d\u8bfb\u53d6 if not q . empty (): for i in range ( q . qsize ()): print ( q . get_nowait ()) \u8fd0\u884c\u7ed3\u679c: False True \u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf : 3 \u6d88\u606f\u5217\u961f\u5df2\u6ee1\uff0c\u73b0\u6709\u6d88\u606f\u6570\u91cf : 3 \u6d88\u606f 1 \u6d88\u606f 2 \u6d88\u606f 3","title":"1. Queue\u7684\u4f7f\u7528"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#_10","text":"\u521d\u59cb\u5316Queue()\u5bf9\u8c61\u65f6\uff08\u4f8b\u5982\uff1aq=Queue()\uff09\uff0c\u82e5\u62ec\u53f7\u4e2d\u6ca1\u6709\u6307\u5b9a\u6700\u5927\u53ef\u63a5\u6536\u7684\u6d88\u606f\u6570\u91cf\uff0c\u6216\u6570\u91cf\u4e3a\u8d1f\u503c\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\u6ca1\u6709\u4e0a\u9650\uff08\u76f4\u5230\u5185\u5b58\u7684\u5c3d\u5934\uff09\uff1b Queue.qsize()\uff1a\u8fd4\u56de\u5f53\u524d\u961f\u5217\u5305\u542b\u7684\u6d88\u606f\u6570\u91cf\uff1b Queue.empty()\uff1a\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56deTrue\uff0c\u53cd\u4e4bFalse \uff1b Queue.full()\uff1a\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u8fd4\u56deTrue,\u53cd\u4e4bFalse\uff1b Queue.get([block[, timeout]])\uff1a\u83b7\u53d6\u961f\u5217\u4e2d\u7684\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u5c06\u5176\u4ece\u5217\u961f\u4e2d\u79fb\u9664\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue\uff1b 1\uff09\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u4e3a\u7a7a\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u8bfb\u53d6\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u5217\u961f\u8bfb\u5230\u6d88\u606f\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u8bfb\u53d6\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u5219\u629b\u51fa\"Queue.Empty\"\u5f02\u5e38\uff1b 2\uff09\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Empty\"\u5f02\u5e38\uff1b Queue.get_nowait()\uff1a\u76f8\u5f53Queue.get(False)\uff1b Queue.put(item,[block[, timeout]])\uff1a\u5c06item\u6d88\u606f\u5199\u5165\u961f\u5217\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue\uff1b 1\uff09\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u5199\u5165\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u5217\u961f\u817e\u51fa\u7a7a\u95f4\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u7a7a\u95f4\uff0c\u5219\u629b\u51fa\"Queue.Full\"\u5f02\u5e38\uff1b 2\uff09\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u5217\u961f\u5982\u679c\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Full\"\u5f02\u5e38\uff1b Queue.put_nowait(item)\uff1a\u76f8\u5f53Queue.put(item, False)\uff1b","title":"\u8bf4\u660e"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#246-queue","text":"\u6211\u4eec\u4ee5Queue\u4e3a\u4f8b\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e24\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u5f80Queue\u91cc\u5199\u6570\u636e\uff0c\u4e00\u4e2a\u4eceQueue\u91cc\u8bfb\u6570\u636e\uff1a \u7b80\u5355\u7684\u505a\u6cd5 import multiprocessing \"\"\" \u4e00\u4e2a\u8fdb\u7a0b\u5411Queue\u4e2d\u5199\u5165\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u4eceQueue\u4e2d\u83b7\u53d6\u6570\u636e\uff0c \u901a\u8fc7Queue\u5b8c\u6210\u4e86 \u591a\u4e2a\u9700\u8981\u914d\u5408\u7684\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u4ece\u800c\u80fd\u591f \u8d77\u5230 \u89e3\u8026\u7684\u4f5c\u7528 \"\"\" def download_from_web ( q ): \"\"\"\u4e0b\u8f7d\u6570\u636e\"\"\" # \u6a21\u62df\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u7684\u6570\u636e data = [ 11 , 22 , 33 , 44 ] # \u5411\u961f\u5217\u4e2d\u5199\u5165\u6570\u636e\uff08\u53ea\u7ba1\u5f80\u91cc\u653e\uff09 for temp in data : q . put ( temp ) print ( \"---\u4e0b\u8f7d\u5668\u5df2\u7ecf\u4e0b\u8f7d\u5b8c\u4e86\u6570\u636e\u5e76\u4e14\u5b58\u5165\u5230\u961f\u5217\u4e2d----\" ) def analysis_data ( q ): \"\"\"\u6570\u636e\u5904\u7406\"\"\" waitting_analysis_data = list () # \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u6570\u636e while True : data = q . get () #\u53d6\u6570\u636e waitting_analysis_data . append ( data ) #\u5b58\u50a8\u6570\u636e if q . empty (): #\u961f\u5217\u7a7a\u4e86\u5c31\u7ed3\u675f\u5faa\u73af break # \u6a21\u62df\u6570\u636e\u5904\u7406 print ( waitting_analysis_data ) def main (): # 1. \u521b\u5efa\u4e00\u4e2a\u961f\u5217 q = multiprocessing . Queue () #\u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u4e4b\u524d\u5c31\u628a\u961f\u5217\u5148\u521b\u5efa\u597d # 2. \u521b\u5efa\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5c06\u961f\u5217\u7684\u5f15\u7528\u5f53\u505a\u5b9e\u53c2\u8fdb\u884c\u4f20\u9012\u5230\u91cc\u9762 p1 = multiprocessing . Process ( target = download_from_web , args = ( q ,)) #args=\uff08q\uff0c\uff09#\u8868\u793a\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u8d85\u8fc7\u4e24\u4e2a\u53c2\u6570\u540e\u9762\u5c31\u4e0d\u7528\u518d\u52a0\u591a\u4f59\u7684\u4e00\u4e2a\u9017\u53f7 p2 = multiprocessing . Process ( target = analysis_data , args = ( q ,)) #\u4f20\u9012\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u961f\u5217\u7684\u5f15\u7528\uff0c\u5148\u8fdb\u5148\u51fa p1 . start () p2 . start () if __name__ == \"__main__\" : main () \u66f4\u7cfb\u7edf\u7684\u505a\u6cd5 from multiprocessing import Process , Queue import os , time , random # \u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801: def write ( q ): for value in [ 'A' , 'B' , 'C' ]: print ( 'Put %s to queue...' % value ) q . put ( value ) time . sleep ( random . random ()) # \u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801: def read ( q ): while True : if not q . empty (): value = q . get ( True ) print ( 'Get %s from queue.' % value ) time . sleep ( random . random ()) else : break if __name__ == '__main__' : # \u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1a q = Queue () pw = Process ( target = write , args = ( q ,)) pr = Process ( target = read , args = ( q ,)) # \u542f\u52a8\u5b50\u8fdb\u7a0bpw\uff0c\u5199\u5165: pw . start () # \u7b49\u5f85pw\u7ed3\u675f: pw . join () # \u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6: pr . start () pr . join () # pr\u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62: print ( '' ) print ( '\u6240\u6709\u6570\u636e\u90fd\u5199\u5165\u5e76\u4e14\u8bfb\u5b8c' ) \u8fd0\u884c\u7ed3\u679c\uff1a","title":"2. Queue\u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#65-pool","text":"","title":"6.5. \u8fdb\u7a0b\u7684\u521b\u5efa-\u8fdb\u7a0b\u6c60Pool"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#pool","text":"\u5f53\u9700\u8981\u521b\u5efa\u7684\u5b50\u8fdb\u7a0b\u6570\u91cf\u4e0d\u591a\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528multiprocessing\u4e2d\u7684Process\u52a8\u6001\u6210\u751f\u591a\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u5982\u679c\u662f\u4e0a\u767e\u751a\u81f3\u4e0a\u5343\u4e2a\u76ee\u6807\uff0c\u624b\u52a8\u7684\u53bb\u521b\u5efa\u8fdb\u7a0b\u7684\u5de5\u4f5c\u91cf\u5de8\u5927\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u7528\u5230multiprocessing\u6a21\u5757\u63d0\u4f9b\u7684Pool\u65b9\u6cd5\u3002 \u521d\u59cb\u5316Pool\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6700\u5927\u8fdb\u7a0b\u6570\uff0c\u5f53\u6709\u65b0\u7684\u8bf7\u6c42\u63d0\u4ea4\u5230Pool\u4e2d\u65f6\uff0c\u5982\u679c\u6c60\u8fd8\u6ca1\u6709\u6ee1\uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u7528\u6765\u6267\u884c\u8be5\u8bf7\u6c42\uff1b\u4f46\u5982\u679c\u6c60\u4e2d\u7684\u8fdb\u7a0b\u6570\u5df2\u7ecf\u8fbe\u5230\u6307\u5b9a\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8be5\u8bf7\u6c42\u5c31\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u6c60\u4e2d\u6709\u8fdb\u7a0b\u7ed3\u675f\uff0c\u624d\u4f1a\u7528\u4e4b\u524d\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u65b0\u7684\u4efb\u52a1\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u5b9e\u4f8b\uff1a # -*- coding:utf-8 -*- from multiprocessing import Pool #\u5bfc\u5165\u8fdb\u7a0b\u6c60 import os , time , random def worker ( msg ): t_start = time . time () print ( \" %s \u5f00\u59cb\u6267\u884c,\u8fdb\u7a0b\u53f7\u4e3a %d \" % ( msg , os . getpid ())) # random.random()\u968f\u673a\u751f\u62100~1\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570 time . sleep ( random . random () * 2 ) t_stop = time . time () print ( msg , \"\u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 %0.2f \" % ( t_stop - t_start )) po = Pool ( 3 ) # \u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u6c60\uff0c\u6700\u5927\u8fdb\u7a0b\u65703 for i in range ( 0 , 10 ): #\u4f1a\u628a\u6240\u6709\u7684\u8fdb\u7a0b\u4efb\u52a1\u5168\u90e8\u6dfb\u52a0,\u4f46\u662f\u6267\u884c\u7684\u53ea\u6709Pool\u6700\u5927\u7684\u6570\u91cf,\u4f1a\u6162\u6162\u7684\u628a\u6dfb\u52a0\u7684\u4efb\u52a1\u5206\u914d\u5230\u8fdb\u7a0b\u6c60\u91cc\u8fdb\u884c\u6267\u884c # Pool().apply_async(\u8981\u8c03\u7528\u7684\u76ee\u6807,(\u4f20\u9012\u7ed9\u76ee\u6807\u7684\u53c2\u6570\u5143\u7956,)) # \u6bcf\u6b21\u5faa\u73af\u5c06\u4f1a\u7528\u7a7a\u95f2\u51fa\u6765\u7684\u5b50\u8fdb\u7a0b\u53bb\u8c03\u7528\u76ee\u6807 po . apply_async ( worker ,( i ,)) #worker \u51fd\u6570\u540d,(i,) \u53c2\u6570 #\u4f7f\u7528pool\u521b\u5efa\u7684\u4efb\u52a1,\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u4efb\u52a1\u6267\u884c\u5b8c,\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c,\u56e0\u6b64\u9700\u8981\u4e00\u4e2ajoin\u51fd\u6570\u8fdb\u884c\u5835\u585e,\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u6267\u884c\u5b8c\u6bd5 print ( \"----start----\" ) po . close () # \u5173\u95ed\u8fdb\u7a0b\u6c60\uff0c\u5173\u95ed\u540epo\u4e0d\u518d\u63a5\u6536\u65b0\u7684\u8bf7\u6c42,\u4f1a\u7ee7\u7eed\u5411\u4e0b\u6267\u884c,\u9700\u8981\u5bf9\u4e3b\u8fdb\u7a0b\u8fdb\u884c\u5835\u585e po . join () # \u7b49\u5f85po\u4e2d\u6240\u6709\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\uff0c\u5fc5\u987b\u653e\u5728close\u8bed\u53e5\u4e4b\u540e print ( \"-----end-----\" ) \u8fd0\u884c\u7ed3\u679c: ---- start ---- 0 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 1 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 2 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 0 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.01 3 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 2 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.24 4 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 3 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.56 5 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 1 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.68 6 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 4 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.67 7 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21467 5 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.83 8 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21466 6 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 0.75 9 \u5f00\u59cb\u6267\u884c , \u8fdb\u7a0b\u53f7\u4e3a 21468 7 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.03 8 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.05 9 \u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6 1.69 ----- end ----- multiprocessing.Pool\u5e38\u7528\u51fd\u6570\u89e3\u6790\uff1a apply_async(func[, args[, kwds]]) \uff1a\u4f7f\u7528\u975e\u963b\u585e\u65b9\u5f0f\u8c03\u7528func\uff08\u5e76\u884c\u6267\u884c\uff0c\u5835\u585e\u65b9\u5f0f\u5fc5\u987b\u7b49\u5f85\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u9000\u51fa\u624d\u80fd\u6267\u884c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\uff09\uff0cargs\u4e3a\u4f20\u9012\u7ed9func\u7684\u53c2\u6570\u5217\u8868\uff0ckwds\u4e3a\u4f20\u9012\u7ed9func\u7684\u5173\u952e\u5b57\u53c2\u6570\u5217\u8868\uff1b close()\uff1a\u5173\u95edPool\uff0c\u4f7f\u5176\u4e0d\u518d\u63a5\u53d7\u65b0\u7684\u4efb\u52a1\uff1b terminate()\uff1a\u4e0d\u7ba1\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u7acb\u5373\u7ec8\u6b62\uff1b join()\uff1a\u4e3b\u8fdb\u7a0b\u963b\u585e\uff0c\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\uff0c \u5fc5\u987b\u5728close\u6216terminate\u4e4b\u540e\u4f7f\u7528\uff1b","title":"\u8fdb\u7a0b\u6c60Pool"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#queue","text":"\u5982\u679c\u8981\u4f7f\u7528Pool\u521b\u5efa\u8fdb\u7a0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528multiprocessing.Manager()\u4e2d\u7684Queue()\uff0c\u800c\u4e0d\u662fmultiprocessing.Queue()\uff0c\u5426\u5219\u4f1a\u5f97\u5230\u4e00\u6761\u5982\u4e0b\u7684\u9519\u8bef\u4fe1\u606f\uff1a RuntimeError: Queue objects should only be shared between processes through inheritance. \u4e0b\u9762\u7684\u5b9e\u4f8b\u6f14\u793a\u4e86\u8fdb\u7a0b\u6c60\u4e2d\u7684\u8fdb\u7a0b\u5982\u4f55\u901a\u4fe1\uff1a # -*- coding:utf-8 -*- # \u4fee\u6539import\u4e2d\u7684Queue\u4e3aManager from multiprocessing import Manager , Pool import os , time , random def reader ( q ): print ( \"reader\u542f\u52a8( %s ),\u7236\u8fdb\u7a0b\u4e3a( %s )\" % ( os . getpid (), os . getppid ())) for i in range ( q . qsize ()): print ( \"reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f\uff1a %s \" % q . get ( True )) def writer ( q ): print ( \"writer\u542f\u52a8( %s ),\u7236\u8fdb\u7a0b\u4e3a( %s )\" % ( os . getpid (), os . getppid ())) for i in \"itcast\" : q . put ( i ) if __name__ == \"__main__\" : print ( \"( %s ) start\" % os . getpid ()) q = Manager () . Queue () # \u4f7f\u7528Manager\u4e2d\u7684Queue po = Pool () po . apply_async ( writer , ( q ,)) time . sleep ( 1 ) # \u5148\u8ba9\u4e0a\u9762\u7684\u4efb\u52a1\u5411Queue\u5b58\u5165\u6570\u636e\uff0c\u7136\u540e\u518d\u8ba9\u4e0b\u9762\u7684\u4efb\u52a1\u5f00\u59cb\u4ece\u4e2d\u53d6\u6570\u636e po . apply_async ( reader , ( q ,)) po . close () po . join () print ( \"( %s ) End\" % os . getpid ()) \u8fd0\u884c\u7ed3\u679c: ( 11095 ) start writer\u542f\u52a8 ( 11097 ), \u7236\u8fdb\u7a0b\u4e3a ( 11095 ) reader\u542f\u52a8 ( 11098 ), \u7236\u8fdb\u7a0b\u4e3a ( 11095 ) reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a i reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a t reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a c reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a a reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a s reader\u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f \uff1a t ( 11095 ) End","title":"\u8fdb\u7a0b\u6c60\u4e2d\u7684Queue"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#66-copy","text":"","title":"6.6. \u6848\u4f8b\uff1a\u6587\u4ef6\u5939copy\u5668\uff08\u591a\u8fdb\u7a0b\u7248\uff09"},{"location":"python\u5b66\u4e60/054 python\u591a\u4efb\u52a1\u591a\u8fdb\u7a0b/#copy","text":"\u521d\u59cb\u7248\u672c import os import multiprocessing def copy_file ( file_name , old_folder_name , new_folder_name ): \"\"\"\u5b8c\u6210\u6587\u4ef6\u7684\u590d\u5236\"\"\" print ( \"======>\u6a21\u62dfcopy\u6587\u4ef6\uff1a\u4ece %s --->\u5230 %s \u6587\u4ef6\u540d\u662f: %s \" % ( old_folder_name , new_folder_name , file_name )) old_f = open ( old_folder_name + \"/\" + file_name , \"rb\" ) content = old_f . read () old_f . close () new_f = open ( new_folder_name + \"/\" + file_name , \"wb\" ) new_f . write ( content ) new_f . close () def main (): # 1. \u83b7\u53d6\u7528\u6237\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57 old_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57\uff1a\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939\u4f7f\u7528try\u7684\u597d\u5904\u5c31\u662f\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u7528\u4e8c\u6b21\u521b\u5efa\u5bfc\u81f4\u62a5\u9519\u4e86 try : new_folder_name = old_folder_name + \"[\u590d\u4ef6]\" os . mkdir ( new_folder_name ) except : pass # 3. \u83b7\u53d6\u6587\u4ef6\u5939\u7684\u6240\u6709\u7684\u5f85copy\u7684\u6587\u4ef6\u540d\u5b57 listdir() file_names = os . listdir ( old_folder_name ) print ( file_names ) # 4. \u521b\u5efa\u8fdb\u7a0b\u6c60 po = multiprocessing . Pool ( 5 ) # 5. \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0 copy\u6587\u4ef6\u7684\u4efb\u52a1 for file_name in file_names : po . apply_async ( copy_file , args = ( file_name , old_folder_name , new_folder_name )) po . close () #\u5173\u95ed\u8fdb\u7a0b\u6c60\u4e0d\u518d\u50cf\u8fdb\u7a0b\u6c60\u4e2d\u5b58\u50a8\u4efb\u52a1 po . join () if __name__ == \"__main__\" : main () \u6253\u5370\u8fdb\u5ea6\u7248\u672c import os import multiprocessing def copy_file ( q , file_name , old_folder_name , new_folder_name ): \"\"\"\u5b8c\u6210\u6587\u4ef6\u7684\u590d\u5236\"\"\" # print(\"======>\u6a21\u62dfcopy\u6587\u4ef6\uff1a\u4ece%s--->\u5230%s \u6587\u4ef6\u540d\u662f:%s\" % (old_folder_name, new_folder_name, file_name)) old_f = open ( old_folder_name + \"/\" + file_name , \"rb\" ) content = old_f . read () old_f . close () new_f = open ( new_folder_name + \"/\" + file_name , \"wb\" ) new_f . write ( content ) new_f . close () # \u5982\u679c\u62f7\u8d1d\u5b8c\u4e86\u6587\u4ef6\uff0c\u90a3\u4e48\u5c31\u5411\u961f\u5217\u4e2d\u5199\u5165\u4e00\u4e2a\u6d88\u606f\uff0c\u8868\u793a\u5df2\u7ecf\u5b8c\u6210 q . put ( file_name ) def main (): # 1. \u83b7\u53d6\u7528\u6237\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57 old_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981copy\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57\uff1a\" ) # 2. \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939 try : new_folder_name = old_folder_name + \"[\u590d\u4ef6]\" os . mkdir ( new_folder_name ) except : pass # 3. \u83b7\u53d6\u6587\u4ef6\u5939\u7684\u6240\u6709\u7684\u5f85copy\u7684\u6587\u4ef6\u540d\u5b57 listdir() file_names = os . listdir ( old_folder_name ) # print(file_names) # 4. \u521b\u5efa\u8fdb\u7a0b\u6c60 po = multiprocessing . Pool ( 5 ) # 5. \u521b\u5efa\u4e00\u4e2a\u961f\u5217 q = multiprocessing . Manager () . Queue () #\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528\u7684\u662fManager\u7684\u961f\u5217 # 6. \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0 copy\u6587\u4ef6\u7684\u4efb\u52a1 for file_name in file_names : po . apply_async ( copy_file , args = ( q , file_name , old_folder_name , new_folder_name )) po . close () # po.join() all_file_num = len ( file_names ) # \u6d4b\u4e00\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u4e2a\u6570 copy_ok_num = 0 #\u62f7\u8d1d\u5b8c\u7684\u6587\u4ef6\u7684\u4e2a\u6570\u8fdb\u884c\u521d\u59cb\u5316 while True : file_name = q . get () #\u5f80\u5916\u53d6\u62f7\u8d1d\u5b8c\u4e86\u7684\u6587\u4ef6\u540d,\u83b7\u53d6\u5230\u4e86\u5c31\u52a0\u4e00 # print(\"\u5df2\u7ecf\u5b8c\u6210copy\uff1a%s\" % file_name) copy_ok_num += 1 print ( \" \\r \u62f7\u8d1d\u7684\u8fdb\u5ea6\u4e3a\uff1a %.2f %% \" % ( copy_ok_num * 100 / all_file_num ), end = \"\" ) if copy_ok_num >= all_file_num : #\u4e2a\u6570\u76f8\u7b49\u5c31\u8bf4\u660e\u62f7\u8d1d\u5b8c\u4e86\u5c31\u7ed3\u675f\u5faa\u73af break print () if __name__ == \"__main__\" : main () \u591a\u8fdb\u7a0b\u62f7\u8d1d\u6587\u4ef6,\u8f93\u5165\u539f\u59cb\u8def\u5f84\u53ca\u9700\u8981\u62f7\u8d1d\u5230\u7684\u8def\u5f84 import multiprocessing import os import time import random def copy_file ( queue , file_name , source_folder_name , dest_folder_name ): \"\"\"copy\u6587\u4ef6\u5230\u6307\u5b9a\u7684\u8def\u5f84\"\"\" f_read = open ( source_folder_name + \"/\" + file_name , \"rb\" ) f_write = open ( dest_folder_name + \"/\" + file_name , \"wb\" ) while True : time . sleep ( random . random ()) content = f_read . read ( 1024 ) if content : f_write . write ( content ) else : break f_read . close () f_write . close () # \u53d1\u9001\u5df2\u7ecf\u62f7\u8d1d\u5b8c\u6bd5\u7684\u6587\u4ef6\u540d\u5b57 queue . put ( file_name ) def main (): # \u83b7\u53d6\u8981\u590d\u5236\u7684\u6587\u4ef6\u5939 source_folder_name = input ( \"\u8bf7\u8f93\u5165\u8981\u590d\u5236\u6587\u4ef6\u5939\u540d\u5b57:\" ) # \u6574\u7406\u76ee\u6807\u6587\u4ef6\u5939 dest_folder_name = source_folder_name + \"[\u526f\u672c]\" # \u521b\u5efa\u76ee\u6807\u6587\u4ef6\u5939 try : os . mkdir ( dest_folder_name ) except : pass # \u5982\u679c\u6587\u4ef6\u5939\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4f1a\u5931\u8d25 # \u83b7\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6240\u6709\u7684\u666e\u901a\u6587\u4ef6\u540d file_names = os . listdir ( source_folder_name ) # \u521b\u5efaQueue queue = multiprocessing . Manager () . Queue () # \u521b\u5efa\u8fdb\u7a0b\u6c60 pool = multiprocessing . Pool ( 3 ) for file_name in file_names : # \u5411\u8fdb\u7a0b\u6c60\u4e2d\u6dfb\u52a0\u4efb\u52a1 pool . apply_async ( copy_file , args = ( queue , file_name , source_folder_name , dest_folder_name )) # \u4e3b\u8fdb\u7a0b\u663e\u793a\u8fdb\u5ea6 pool . close () all_file_num = len ( file_names ) while True : file_name = queue . get () if file_name in file_names : file_names . remove ( file_name ) copy_rate = ( all_file_num - len ( file_names )) * 100 / all_file_num print ( \" \\r %.2f ...( %s )\" % ( copy_rate , file_name ) + \" \" * 50 , end = \"\" ) if copy_rate >= 100 : break print () if __name__ == \"__main__\" : main ()","title":"\u5e94\u7528\uff1a\u6587\u4ef6\u5939copy\u5668\uff08\u591a\u8fdb\u7a0b\u7248\uff09"},{"location":"python\u5b66\u4e60/055  Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b/","text":"\uff08&\uff0c|\uff09\u548c\uff08and\uff0cor\uff09\u662f\u4e24\u7ec4\u6bd4\u8f83\u76f8\u4f3c\u7684\u8fd0\u7b97\u7b26\uff0c\u7528\u5728\u201c\u4e0e\u548c\u6216\u201d\u4e0a\uff0c\u5728\u7528\u6cd5\u4e0a\u6709\u4e9b\u8bb8\u533a\u522b\u3002 \u00b6 \uff08&\uff0c|\uff09\u548c\uff08and\uff0cor\uff09\u662f\u7528\u6765\u6bd4\u8f83\u4e24\u7ec4\u53d8\u91cf\u7684\uff0c\u683c\u5f0f\u57fa\u672c\u4e0a\u662f\uff1a \u00b6 a & b a | b a and b a or b \u5982\u679ca\uff0cb\u662f\u6570\u503c\u53d8\u91cf\uff0c \u5219&\uff0c |\u8868\u793a\u4f4d\u8fd0\u7b97\uff0c and\uff0cor\u5219\u4f9d\u636e\u662f\u5426\u975e0\u6765\u51b3\u5b9a\u8f93\u51fa \u00b6 &\uff0c |\uff1a \u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97 # 1&2\uff0c2\u5728\u4e8c\u8fdb\u5236\u91cc\u9762\u662f10,1\u5728\u4e8c\u8fdb\u5236\u4e2d\u662f01\uff0c\u90a3\u4e4801\u4e0e\u8fd0\u7b9710\u5f97\u5230\u662f0 1 & 2 # \u8f93\u51fa\u4e3a 0\uff0c 1 | 2 # \u8f93\u51fa\u4e3a3 and, or: \u6570\u503c\u77ed\u8def\u8fd0\u7b97 # \u5224\u65ad\u53d8\u91cf\u662f\u5426\u4e3a0\uff0c \u662f0\u5219\u4e3aFalse\uff0c\u975e0\u5224\u65ad\u4e3aTrue\uff0c # and\u4e2d\u542b0\uff0c\u8fd4\u56de0\uff1b \u5747\u4e3a\u975e0\u65f6\uff0c\u8fd4\u56de\u540e\u4e00\u4e2a\u503c\uff0c 2 and 0 # \u8fd4\u56de0 2 and 1 # \u8fd4\u56de1 1 and 2 # \u8fd4\u56de2 # or\u4e2d\uff0c \u81f3\u5c11\u6709\u4e00\u4e2a\u975e0\u65f6\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u975e0, 2 or 0 # \u8fd4\u56de2 2 or 1 # \u8fd4\u56de2 0 or 1 # \u8fd4\u56de1 \u5982\u4f55a, b\u662f\u903b\u8f91\u53d8\u91cf\uff0c \u5219\u4e24\u7c7b\u7684\u7528\u6cd5\u57fa\u672c\u4e00\u81f4 \u00b6 In [ 103 ]:( 3 > 0 ) | ( 3 < 1 ) Out [ 103 ]: True In [ 104 ]:( 3 > 0 ) and ( 3 < 1 ) Out [ 104 ]: False In [ 105 ]:( 3 > 0 ) or ( 3 < 1 ) Out [ 105 ]: True In [ 106 ]:( 3 > 0 ) & ( 3 < 1 ) Out [ 106 ]: False","title":"055 Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b"},{"location":"python\u5b66\u4e60/055  Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b/#andor","text":"","title":"\uff08&amp;\uff0c|\uff09\u548c\uff08and\uff0cor\uff09\u662f\u4e24\u7ec4\u6bd4\u8f83\u76f8\u4f3c\u7684\u8fd0\u7b97\u7b26\uff0c\u7528\u5728\u201c\u4e0e\u548c\u6216\u201d\u4e0a\uff0c\u5728\u7528\u6cd5\u4e0a\u6709\u4e9b\u8bb8\u533a\u522b\u3002"},{"location":"python\u5b66\u4e60/055  Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b/#andor_1","text":"a & b a | b a and b a or b","title":"\uff08&amp;\uff0c|\uff09\u548c\uff08and\uff0cor\uff09\u662f\u7528\u6765\u6bd4\u8f83\u4e24\u7ec4\u53d8\u91cf\u7684\uff0c\u683c\u5f0f\u57fa\u672c\u4e0a\u662f\uff1a"},{"location":"python\u5b66\u4e60/055  Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b/#ab-andor0","text":"&\uff0c |\uff1a \u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97 # 1&2\uff0c2\u5728\u4e8c\u8fdb\u5236\u91cc\u9762\u662f10,1\u5728\u4e8c\u8fdb\u5236\u4e2d\u662f01\uff0c\u90a3\u4e4801\u4e0e\u8fd0\u7b9710\u5f97\u5230\u662f0 1 & 2 # \u8f93\u51fa\u4e3a 0\uff0c 1 | 2 # \u8f93\u51fa\u4e3a3 and, or: \u6570\u503c\u77ed\u8def\u8fd0\u7b97 # \u5224\u65ad\u53d8\u91cf\u662f\u5426\u4e3a0\uff0c \u662f0\u5219\u4e3aFalse\uff0c\u975e0\u5224\u65ad\u4e3aTrue\uff0c # and\u4e2d\u542b0\uff0c\u8fd4\u56de0\uff1b \u5747\u4e3a\u975e0\u65f6\uff0c\u8fd4\u56de\u540e\u4e00\u4e2a\u503c\uff0c 2 and 0 # \u8fd4\u56de0 2 and 1 # \u8fd4\u56de1 1 and 2 # \u8fd4\u56de2 # or\u4e2d\uff0c \u81f3\u5c11\u6709\u4e00\u4e2a\u975e0\u65f6\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u975e0, 2 or 0 # \u8fd4\u56de2 2 or 1 # \u8fd4\u56de2 0 or 1 # \u8fd4\u56de1","title":"\u5982\u679ca\uff0cb\u662f\u6570\u503c\u53d8\u91cf\uff0c \u5219&amp;\uff0c |\u8868\u793a\u4f4d\u8fd0\u7b97\uff0c and\uff0cor\u5219\u4f9d\u636e\u662f\u5426\u975e0\u6765\u51b3\u5b9a\u8f93\u51fa"},{"location":"python\u5b66\u4e60/055  Python \u4e2d \uff08&\uff0c\uff09\u548c\uff08and\uff0cor\uff09\u4e4b\u95f4\u7684\u533a\u522b/#a-b","text":"In [ 103 ]:( 3 > 0 ) | ( 3 < 1 ) Out [ 103 ]: True In [ 104 ]:( 3 > 0 ) and ( 3 < 1 ) Out [ 104 ]: False In [ 105 ]:( 3 > 0 ) or ( 3 < 1 ) Out [ 105 ]: True In [ 106 ]:( 3 > 0 ) & ( 3 < 1 ) Out [ 106 ]: False","title":"\u5982\u4f55a, b\u662f\u903b\u8f91\u53d8\u91cf\uff0c \u5219\u4e24\u7c7b\u7684\u7528\u6cd5\u57fa\u672c\u4e00\u81f4"},{"location":"python\u5b66\u4e60/056 python\u4e2d\u7684\u5168\u5c40\u53d8\u91cf/","text":"python\u4e2dlist\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u65e0\u9700global\u58f0\u660e\u7684\u539f\u56e0 \u00b6 \u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\u3002 python\u4e2dlist\u53d8\u91cf\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u3002 \u800c\u666e\u901a\u53d8\u91cf\u5219\u9700\u8981\u5148\u5728\u51fd\u6570\u4e2dglobal\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u4f8b\u5982\uff1a a = 1 def fun (): \u3000\u3000 global a \u3000\u3000 a = 2 \u800c list \uff1a b = [ 1 , 2 ] def fun (): \u3000\u3000 b [ 0 ] = 2 \u5728\u51fd\u6570\u4e2d\u76f4\u63a5\u4fee\u6539 list\u5219\u662f\u53ef\u4ee5\u7684 \u3002 ** \u539f\u56e0\u662f\uff1a ** \u666e\u901a\u53d8\u91cf\u5982\u679c\u5728\u51fd\u6570\u4e2d\u8d4b\u503c a = 2 \u4f1a\u6709\u6b67\u4e49\u3002\u56e0\u4e3a\u5b83\u65e2\u53ef\u4ee5\u662f\u8868\u793a\u5f15\u7528\u5168\u5c40\u53d8\u91cf a \uff0c\u4e5f\u53ef\u4ee5\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6240\u4ee5\u5728 python\u4e2d \uff0c\u9ed8\u8ba4\u5b83\u7684\u884c\u4e3a\u662f\u521b\u5efa\u5c40\u90e8\u53d8\u91cf\uff0c\u9664\u975e\u663e\u5f0f\u58f0\u660e global \u3002 \u800c\u5bf9\u5217\u8868 list\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c b [ 0 ] = 2 \u5219\u4e0d\u4f1a\u6709\u6b67\u4e49\u3002\u5b83\u662f\u201c\u660e\u786e\u7684\u201d\uff0c\u56e0\u4e3a\u5982\u679c\u628a b\u5f53\u4f5c\u662f\u5c40\u90e8\u53d8\u91cf\u7684\u8bdd \uff0c\u5b83\u4f1a\u62a5 KeyError \uff0c\u6240\u4ee5\u5b83\u53ea\u80fd\u662f\u5f15\u7528\u5168\u5c40\u7684 b , \u6545\u4e0d\u9700\u8981\u591a\u6b64\u4e00\u4e3e\u663e\u5f0f\u58f0\u660e global \u3002","title":"056 python\u4e2d\u7684\u5168\u5c40\u53d8\u91cf"},{"location":"python\u5b66\u4e60/056 python\u4e2d\u7684\u5168\u5c40\u53d8\u91cf/#pythonlistglobal","text":"\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\u3002 python\u4e2dlist\u53d8\u91cf\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u3002 \u800c\u666e\u901a\u53d8\u91cf\u5219\u9700\u8981\u5148\u5728\u51fd\u6570\u4e2dglobal\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u4f8b\u5982\uff1a a = 1 def fun (): \u3000\u3000 global a \u3000\u3000 a = 2 \u800c list \uff1a b = [ 1 , 2 ] def fun (): \u3000\u3000 b [ 0 ] = 2 \u5728\u51fd\u6570\u4e2d\u76f4\u63a5\u4fee\u6539 list\u5219\u662f\u53ef\u4ee5\u7684 \u3002 ** \u539f\u56e0\u662f\uff1a ** \u666e\u901a\u53d8\u91cf\u5982\u679c\u5728\u51fd\u6570\u4e2d\u8d4b\u503c a = 2 \u4f1a\u6709\u6b67\u4e49\u3002\u56e0\u4e3a\u5b83\u65e2\u53ef\u4ee5\u662f\u8868\u793a\u5f15\u7528\u5168\u5c40\u53d8\u91cf a \uff0c\u4e5f\u53ef\u4ee5\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6240\u4ee5\u5728 python\u4e2d \uff0c\u9ed8\u8ba4\u5b83\u7684\u884c\u4e3a\u662f\u521b\u5efa\u5c40\u90e8\u53d8\u91cf\uff0c\u9664\u975e\u663e\u5f0f\u58f0\u660e global \u3002 \u800c\u5bf9\u5217\u8868 list\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c b [ 0 ] = 2 \u5219\u4e0d\u4f1a\u6709\u6b67\u4e49\u3002\u5b83\u662f\u201c\u660e\u786e\u7684\u201d\uff0c\u56e0\u4e3a\u5982\u679c\u628a b\u5f53\u4f5c\u662f\u5c40\u90e8\u53d8\u91cf\u7684\u8bdd \uff0c\u5b83\u4f1a\u62a5 KeyError \uff0c\u6240\u4ee5\u5b83\u53ea\u80fd\u662f\u5f15\u7528\u5168\u5c40\u7684 b , \u6545\u4e0d\u9700\u8981\u591a\u6b64\u4e00\u4e3e\u663e\u5f0f\u58f0\u660e global \u3002","title":"python\u4e2dlist\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u65e0\u9700global\u58f0\u660e\u7684\u539f\u56e0"},{"location":"python\u5b66\u4e60/057 B\u7ad9\u7f13\u5b58\u89c6\u9891\u91cd\u547d\u540d/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Wed Dec 25 09:00:09 2019 @author: admin \"\"\" import json import os import os.path import re #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 #\u51fd\u6570\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u8def\u5f84 def get_file ( path ): list1 = [] #\u7528\u4e8e\u5b58\u50a8\u9012\u5f52\u67e5\u627e\u5230\u7684\u6240\u6709\u6587\u4ef6,\u4f20\u9012\u7ed9\u51fd\u6570 fileList = os . listdir ( path ) # \u83b7\u53d6path\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6 for filename in fileList : pathTmp = os . path . join ( path , filename ) # \u83b7\u53d6path\u4e0efilename\u7ec4\u5408\u540e\u7684\u8def\u5f84 if os . path . isdir ( pathTmp ): # \u5982\u679c\u662f\u76ee\u5f55 a = get_file ( pathTmp ) # \u5219\u9012\u5f52\u67e5\u627e(\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u63a5\u53d7\u53d8\u91cf,\u4e0d\u7136\u5c31\u51fa\u9519\u4e86) for i in a : list1 . append ( i ) else : list1 . append ( pathTmp ) return list1 # #path = input('\u8bf7\u8f93\u5165\u8def\u5f84\uff1a').strip() #.strip()\u53bb\u9664\u9996\u5c3e\u7684\u7a7a\u683c path = '26776802' #\u9700\u8981\u6bcf\u6b21\u4fee\u6539\u7684 file_path_list = get_file ( path ) #\u7b5b\u9009\u540e\u7f00\u51fd\u6570,\u4f20\u5165\u5305\u542b\u6240\u6709\u540e\u7f00\u540d\u7684\u5217\u8868,\u4ee5\u53ca\u9700\u8981\u7b5b\u9009\u7684\u540e\u7f00(\u9ed8\u8ba4\u7b5b\u9009txt\u6587\u4ef6) def shai_xuan_hou_zhui ( file_path_list , hou_zhui = '.txt' ): list2 = [] #\u7528\u4e8e\u50a8\u5b58\u7b5b\u9009\u597d\u7684\u6587\u4ef6\u7684\u8def\u5f84 for filepath in file_path_list : # os.path.splitext():\u5206\u79bb\u6587\u4ef6\u540d\u4e0e\u6269\u5c55\u540d if os . path . splitext ( filepath )[ 1 ] == hou_zhui : list2 . append ( filepath ) # print(filepath +'\\n') return list2 # #hou_zhui='.txt' #py_list=shai_xuan_hou_zhui(file_path_list,'.py') #\u7b5b\u9009py\u6587\u4ef6 #txt_list=shai_xuan_hou_zhui(file_path_list,'.txt') #\u7b5b\u9009txt\u6587\u4ef6 json_list = shai_xuan_hou_zhui ( file_path_list , '.json' ) #\u7b5b\u9009\u51fajson\u6587\u4ef6\u7684\u8def\u5f84 result = [] num = [] for path_json in json_list : if path_json . endswith ( \"entry.json\" ): #\u53ea\u8981\u5305\u542b\u8fd9\u4e2a\u6587\u4ef6\u4fe1\u606f\u7684json\u6587\u4ef6 with open ( path_json , 'r' , encoding = 'utf-8' ) as f : load_dict = json . load ( f ) #\u5c06json\u6587\u4ef6\u8f6c\u6362\u6210\u5b57\u5178 list_split = path_json . split ( ' \\\\ ' ) #\u5c06\u8def\u5f84\u8fdb\u884c\u5207\u5206 number = int ( list_split [ 1 ]) #\u8fd9\u4e2a\u662f\u6587\u4ef6\u5939\u7f16\u53f7\u7684\u540d\u5b57,\u4e3a\u4e86\u628a\u5168\u90e8\u89c6\u9891\u6309\u7f16\u53f7\u8fdb\u884c\u6392\u5e8f str1 = '' if number < 10 : str1 = '00' + str ( number ) elif number < 100 : str1 = '0' + str ( number ) else : str1 = str ( number ) # file_num = load_dict['page_data']['page'] title = load_dict [ 'page_data' ][ 'part' ] #\u83b7\u53d6\u672c\u6765\u5e94\u8be5\u7684\u6587\u4ef6\u540d ret = re . sub ( r \"entry.json\" , '' , path_json ) #\u83b7\u53d6\u53d6\u51fajson\u6587\u4ef6\u540d\u7684\u8def\u5f84 old_name_origin = ret + 'lua.flv720.bili2api.64' #\u5f97\u5230\u539f\u59cb\u7684\u8def\u5f84 file_path_list1 = get_file ( old_name_origin ) for qq in range ( 0 ,( len ( file_path_list1 ) // 2 )): old_name = old_name_origin + ' \\\\ ' + str ( qq ) + '.blv' #\u5f97\u5230\u539f\u59cb\u7684\u8def\u5f84 new_name = ret + 'lua.flv720.bili2api.64 \\\\ ' + str1 + '_' + title + '_' + str ( qq ) + '.mp4' #\u65b0\u7684\u6587\u4ef6\u540d os . rename ( old_name , new_name ) #\u8fdb\u884c\u91cd\u547d\u540d\u64cd\u4f5c num . append ( ret ) result . append ( title ) \u6700\u540e\u4f7f\u7528\u641c\u7d22\u5c06\u540e\u7f00\u4e3amp4\u7684\u6587\u4ef6\u7ed9\u4fdd\u5b58\u5230\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939\u4e2d\u5c31\u597d\u4e86","title":"057 B\u7ad9\u7f13\u5b58\u89c6\u9891\u91cd\u547d\u540d"},{"location":"python\u5b66\u4e60/058-VS-code\u5feb\u6377\u952e/","text":"vs code \u7684\u5e38\u7528\u5feb\u6377\u952e 1\u3001\u6ce8\u91ca\uff1a \u5355\u884c\u6ce8\u91ca\uff1a[ctrl+k,ctrl+c] \u6216 ctrl+/ \u53d6\u6d88\u5355\u884c\u6ce8\u91ca\uff1a[ctrl+k,ctrl+u] (\u6309\u4e0bctrl\u4e0d\u653e\uff0c\u518d\u6309k + u) \u591a\u884c\u6ce8\u91ca\uff1a[alt+shift+A] \u591a\u884c\u6ce8\u91ca\uff1a/** 2\u3001\u79fb\u52a8\u884c\uff1aalt+up/down 3\u3001\u663e\u793a/\u9690\u85cf\u5de6\u4fa7\u76ee\u5f55\u680f ctrl + b 4\u3001\u590d\u5236\u5f53\u524d\u884c\uff1ashift + alt +up/down 5\u3001\u5220\u9664\u5f53\u524d\u884c\uff1ashift + ctrl + k 6\u3001\u63a7\u5236\u53f0\u7ec8\u7aef\u663e\u793a\u4e0e\u9690\u85cf\uff1actrl + ~ 7\u3001\u67e5\u627e\u6587\u4ef6/\u5b89\u88c5vs code \u63d2\u4ef6\u5730\u5740\uff1actrl + p 8\u3001\u4ee3\u7801\u683c\u5f0f\u5316\uff1ashift + alt +f 9\u3001\u65b0\u5efa\u4e00\u4e2a\u7a97\u53e3 : ctrl + shift + n 10\u3001\u884c\u589e\u52a0\u7f29\u8fdb: ctrl + [ 11\u3001\u884c\u51cf\u5c11\u7f29\u8fdb: ctrl + ] 12\u3001\u88c1\u526a\u5c3e\u968f\u7a7a\u683c(\u53bb\u6389\u4e00\u884c\u7684\u672b\u5c3e\u90a3\u4e9b\u6ca1\u7528\u7684\u7a7a\u683c) : ctrl + shift + x 13\u3001\u5b57\u4f53\u653e\u5927/\u7f29\u5c0f: ctrl + ( + \u6216 - ) 14\u3001\u62c6\u5206\u7f16\u8f91\u5668 : ctrl + \u00bd/3 15\u3001\u5207\u6362\u7a97\u53e3 : ctrl + shift + left/right 16\u3001\u5173\u95ed\u7f16\u8f91\u5668\u7a97\u53e3 : ctrl + w 17\u3001\u5173\u95ed\u6240\u6709\u7a97\u53e3 : ctrl + k + w 18\u3001\u5207\u6362\u5168\u5c4f : F11 19\u3001\u81ea\u52a8\u6362\u884c : alt + z 20\u3001\u663e\u793agit : ctrl + shift + g 21\u3001\u5168\u5c40\u67e5\u627e\u6587\u4ef6\uff1actrl + shift + f 22\u3001\u663e\u793a\u76f8\u5173\u63d2\u4ef6\u7684\u547d\u4ee4(\u5982\uff1agit log)\uff1actrl + shift + p 23\u3001\u9009\u4e2d\u6587\u5b57\uff1ashift + left / right / up / down 24\u3001\u6298\u53e0\u4ee3\u7801\uff1a ctrl + k + 0-9 (0\u662f\u5b8c\u5168\u6298\u53e0) ctrl + shift + [ \u6298\u53e0\u9f20\u6807\u6240\u5728\u4ee3\u7801\u6bb5 ctrl + shift + ] \u5c55\u5f00\u9f20\u6807\u6240\u5728\u4ee3\u7801\u6bb5 25\u3001\u5c55\u5f00\u4ee3\u7801\uff1a ctrl + k + j (\u5b8c\u5168\u5c55\u5f00\u4ee3\u7801) 26\u3001\u5220\u9664\u884c \uff1a ctrl + shift + k 27\u3001\u5feb\u901f\u5207\u6362\u4e3b\u9898\uff1actrl + k / ctrl + t 28\u3001\u5feb\u901f\u56de\u5230\u9876\u90e8 \uff1a ctrl + home 29\u3001\u5feb\u901f\u56de\u5230\u5e95\u90e8 : ctrl + end 30\u3001\u683c\u5f0f\u5316\u9009\u5b9a\u4ee3\u7801 \uff1actrl + k / ctrl +f 31\u3001\u9009\u4e2d\u4ee3\u7801 \uff1a shift + \u9f20\u6807\u5de6\u952e 32\u3001\u591a\u884c\u540c\u65f6\u6dfb\u52a0\u5185\u5bb9\uff08\u5149\u6807\uff09 \uff1actrl + alt + up/down 33\u3001\u5168\u5c40\u66ff\u6362\uff1actrl + shift + h 34\u3001\u5f53\u524d\u6587\u4ef6\u66ff\u6362\uff1actrl + h 35\u3001\u6253\u5f00\u6700\u8fd1\u6253\u5f00\u7684\u6587\u4ef6\uff1actrl + r 36\u3001\u6253\u5f00\u65b0\u7684\u547d\u4ee4\u7a97\uff1actrl + shift + c vs code \u7684\u5e38\u7528\u63d2\u4ef6 1\u3001Auto Rename Tag \u4fee\u6539html\u6807\u7b7e\uff0c\u81ea\u52a8\u5e2e\u4f60\u5b8c\u6210\u5c3e\u90e8\u95ed\u5408\u6807\u7b7e\u7684\u540c\u6b65\u4fee\u6539\uff0c\u548cwebstorm\u4e00\u6837\u3002 2\u3001Auto Close Tag \u81ea\u52a8\u95ed\u5408HTML\u6807\u7b7e 4\u3001Beautiful \u683c\u5f0f\u5316\u4ee3\u7801\u7684\u5de5\u5177 5\u3001Dash Dash\u662fMacOS\u7684API\u6587\u6863\u6d4f\u89c8\u5668\u548c\u4ee3\u7801\u6bb5\u7ba1\u7406\u5668 6\u3001Ejs Snippets ejs \u4ee3\u7801\u63d0\u793a 7\u3001ESLint \u68c0\u67e5javascript\u8bed\u6cd5\u9519\u8bef\u4e0e\u63d0\u793a 8\u3001File Navigator \u5feb\u901f\u67e5\u627e\u6587\u4ef6 9\u3001Git History(git log) \u67e5\u770bgit log 10\u3001Gulp Snippets \u5199gulp\u65f6\u7528\u5230\uff0cgulp\u8bed\u6cd5\u63d0\u793a\u3002 11\u3001HTML CSS Support \u5728HTML\u6807\u7b7e\u4e0a\u5199class\u667a\u80fd\u63d0\u793a\u5f53\u524d\u9879\u76ee\u6240\u652f\u6301\u7684\u6837\u5f0f 12\u3001HTML Snippets \u8d85\u7ea7\u597d\u7528\u4e14\u521d\u7ea7\u7684H5\u4ee3\u7801\u7247\u6bb5\u4ee5\u53ca\u63d0\u793a 13\u3001Debug for Chrome \u8ba9vs code\u6620\u5c04chrome\u7684debug\u529f\u80fd\uff0c\u9759\u6001\u9875\u9762\u90fd\u53ef\u4ee5\u7528vscode\u6765\u6253\u65ad\u70b9\u8c03\u8bd5\u3001\u914d\u9970\u7a0d\u5fae\u590d\u6742\u4e00\u70b9 14\u3001Document this Js\u7684\u6ce8\u91ca\u6a21\u677f 15\u3001jQuery Code Snippets jquery\u63d0\u793a\u5de5\u5177 16\u3001Html2jade html\u6a21\u677f\u8f6cpug\u6a21\u677f 17\u3001JS-CSS-HTML Formatter \u683c\u5f0f\u5316 18\u3001Npm intellisense require \u65f6\u7684\u5305\u63d0\u793a\u5de5\u5177 19\u3001Open in browser \u6253\u5f00\u9ed8\u8ba4\u6d4f\u89c8\u5668 20\u3001One Dark Theme \u4e00\u4e2avs code\u7684\u4e3b\u9898 21\u3001Path Intellisense \u81ea\u52a8\u8def\u5f84\u8865\u5168\u3001\u9ed8\u8ba4\u4e0d\u5e26\u8fd9\u4e2a\u529f\u80fd 22\u3001Project Manager \u591a\u4e2a\u9879\u76ee\u4e4b\u95f4\u5feb\u901f\u5207\u6362\u7684\u5de5\u5177 23\u3001Pug(Jade) snippets pug\u8bed\u6cd5\u63d0\u793a 24\u3001React Components \u6839\u636e\u6587\u4ef6\u540d\u521b\u5efa\u53cd\u5e94\u7ec4\u4ef6\u4ee3\u7801\u3002 25\u3001React Native Tools reactNative\u5de5\u5177\u7c7b\u4e3aReact Native\u9879\u76ee\u63d0\u4f9b\u4e86\u5f00\u53d1\u73af\u5883\u3002 26\u3001Stylelint css/sass\u4ee3\u7801\u5ba1\u67e5 27\u3001Typings auto installer \u5b89\u88c5vscode \u7684\u4ee3\u7801\u63d0\u793a\u4f9d\u8d56\u5e93\uff0c\u57fa\u4e8etyptings\u7684 28\u3001View In Browser \u3000\u9ed8\u8ba4\u6d4f\u89c8\u5668\u67e5\u770bHTML\u6587\u4ef6\uff08\u5feb\u6377\u952eCtrl+F1\u53ef\u4ee5\u4fee\u6539\uff09 29\u3001Vscode-icons \u8ba9vscode\u8d44\u6e90\u76ee\u5f55\u52a0\u4e0a\u56fe\u6807\u3001\u5fc5\u5907 30\u3001VueHelper Vue2\u4ee3\u7801\u6bb5\uff08\u5305\u62ecVue2 api\u3001vue-router2\u3001vuex2\uff09 31\u3001Vue 2 Snippets vue\u5fc5\u5907vue\u4ee3\u7801\u63d0\u793a 32\u3001Vue-color vue\u8bed\u6cd5\u9ad8\u4eae\u4e3b\u9898 33\u3001Auto-Open Markdown Preview markdown\u6587\u4ef6\u81ea\u52a8\u5f00\u542f\u9884\u89c8 34\u3001EverMonkey \u5370\u8c61\u7b14\u8bb0 35\u3001atom one dark atom\u7684\u4e00\u4e2a\u9ad8\u4eae\u4e3b\u9898(\u4e2a\u4eba\u63a8\u8350)","title":"058 VS-code\u5feb\u6377\u952e"},{"location":"python\u5b66\u4e60/059-\u5728vscode\u4e2d\u663e\u793a\u7a7a\u683c\u548ctab\u7b26\u53f7/","text":"\u4f7f\u7528python\u65f6\u6700\u70e6\u4eba\u7684\u5c31\u662f\u4ee3\u7801\u5bf9\u9f50,\u800c\u4e14tab\u548c\u7a7a\u683c\u8fd8\u4e0d\u4e00\u6837,\u4e3a\u4e86\u4fbf\u4e8e\u5bf9\u5176,\u5e0c\u671b\u628atab\u548c\u7a7a\u683c\u663e\u793a \u51fa\u6765.\u7f51\u4e0a\u767e\u5ea6\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5,\u548c\u6211\u7684\u4e0d\u5b8c\u5168\u4e00\u6837,\u4e0d\u8fc7\u8fd8\u662f\u89e3\u51b3\u4e86. \u6253\u5f00setting,\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165renderControlCharacters,\u9009\u4e2d\u52fe\u9009\u6846,\u5373\u53ef\u663e\u793atab. 2.\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165renderWhitespace,\u9009\u62e9all,\u5373\u53ef\u663e\u793a\u7a7a\u683c.","title":"059 \u5728vscode\u4e2d\u663e\u793a\u7a7a\u683c\u548ctab\u7b26\u53f7"},{"location":"python\u5b66\u4e60/060-cuda\u53cacudann\u7684\u914d\u7f6e\u5b89\u88c5/","text":"1 \u9996\u5148\u4f7f\u7528\u9a71\u52a8\u7cbe\u7075\u5c06\u663e\u5361\u9a71\u52a8\u66f4\u65b0\u5230\u4e86\u6700\u65b0\u7248 2. anaconda\u521b\u5efa\u4e86\u865a\u62df\u73af\u5883 3.\u5b89\u88c5TensorFlow-gpu pip install tensorflow-gpu=1.9.0 4.\u5b89\u88c5cuda9.0 5.\u5c06cundann\u7684\u6587\u4ef6\u590d\u5236\u5230cuda\u5b89\u88c5\u7684\u6839\u76ee\u5f55","title":"060 cuda\u53cacudann\u7684\u914d\u7f6e\u5b89\u88c5"},{"location":"python\u5b66\u4e60/060-vscode-ubuntu18-04-\u7a7a\u683c\u5c0f/","text":"1.\u6253\u5f00\u5de6\u4e0b\u89d2\u9f7f\u8f6e\u7684\u4f4d\u7f6e \u70b9\u5f00\u8bbe\u7f6e\u9009\u9879 2.\u5728\u8bbe\u7f6e\u641c\u7d22\u6846\u91cc\u8f93\u5165font 3.\u627e\u5230 Editor:Font Family \u5728\u63a7\u5236\u5b57\u4f53\u7cfb\u5217\u66f4\u6539\u4e3a\uff1a\u2018monospace\u2019 4.\u9000\u51fa\u4eab\u53d7vscode\u8f93\u5165\u5427","title":"060 vscode-ubuntu18-04-\u7a7a\u683c\u5c0f"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/","text":"\u672c\u6587\u6982\u8ff0 \u00b6 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 mkdocs-material\u4ecb\u7ecd \u00b6 \u7b26\u5408google material ui\u89c4\u8303\u7684\u9759\u6001\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4f7f\u7528markdown\u8fdb\u884c\u6587\u6863\u4e66\u5199 mkdocs python\u7f16\u5199\u7684markdown\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\uff0c\u5e26\u6709\u672c\u5730cli\u5de5\u5177 \u81ea\u5e26\u57fa\u4e8eTornado\u7684\u5c0f\u578bhttp\u670d\u52a1\uff0c\u7528\u4e8e\u672c\u5730\u8c03\u8bd5 \u5185\u7f6e\u4e00\u952e\u5f0f\u53d1\u5e03\u81f3GitHub Pages \u5185\u7f6emkdocs\u98ce\u683c\u3001readthedocs\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u8c03\u7528python\u6a21\u5757\u5b9e\u73b0\u8bed\u6cd5\u53ca\u6e32\u67d3\u7684\u6269\u5c55 mkdocs-material python\u6a21\u5757\uff0c\u7b26\u5408google material ui\u89c4\u8303\u7684mkdocs\u81ea\u5b9a\u4e49\u4e3b\u9898 \u9488\u5bf9\u7279\u5b9a\u8bed\u6cd5\u3001\u529f\u80fd\u505a\u4e86\u6e32\u67d3\u4f18\u5316 \u6839\u636e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u9875\u9762\u5c3a\u5bf8\u81ea\u52a8\u7f29\u653e\uff0c\u5bf9PC\u3001\u79fb\u52a8\u8bbe\u5907\u90fd\u53cb\u597d \u4e30\u5bcc\u7684\u9875\u9762\u914d\u8272\uff0c\u591a\u8fbe19\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u60ac\u505c\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u652f\u6301\u7edf\u8ba1\u529f\u80fd\uff0c\u5982\u767e\u5ea6\u7edf\u8ba1\uff0c\u8c37\u6b4c\u7edf\u8ba1 \u5b89\u88c5 \u00b6 pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material \u521d\u59cb\u5316\u9879\u76ee \u00b6 mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6 docs\u6587\u4ef6\u5939\u4e2d\u662f\u6211\u4eec\u5199\u7684makedown\u6587\u4ef6 \u4fee\u6539\u4e3b\u9898 \u00b6 mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material \u8fd0\u884c \u00b6 # \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u6216\u8005 \u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5730\u5740 \u53ef\u4ee5\u8f93\u5165\u4e0b\u9762\u7684\u5730\u5740 mkdocs serve --dev-addr=192.168.31.199:1666 \u6216\u8005 mkdocs serve -a 127.0.0.1:9999 \u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\u672c\u5730ip\u76848000\u7aef\u53e3\uff08\u6bd4\u5982http://127.0.0.1:8000/\uff09 \u67e5\u770b\u6548\u679c\uff0c\u5982\u56fe\u6240\u793a \u53d1\u5e03\u5230GitHub pages \u00b6 \u901a\u8fc7 mkdocs gh-deploy \u81ea\u52a8\u7f16\u8bd1\u51fahtml\u5e76\u53d1\u5e03\u81f3GitHub pages\uff0c\u6b65\u9aa4\u5982\u4e0b \u521d\u59cb\u5316repo 1.\u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project\uff08\u53ef\u4ee5\u662f\u5176\u4ed6\u540d\uff0c\u8fd9\u91cc\u5148\u5047\u8bbe\u53ebmy-project\uff09\uff0c\u521b\u5efarepo\u65f6\u5019\u9009\u62e9\u521d\u59cb\u5316\u5e26\u6709README.md 2.\u5c06repo\u540c\u6b65\u5230\u672c\u5730\uff0c\u4f7f\u7528git clone \u5bfc\u5165\u9879\u76ee 1.\u5c06mkdocs\u6839\u76ee\u5f55\uff08\u5373my-project\u76ee\u5f55\uff09\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u521a\u521agit clone\u4e0b\u6765\u7684git\u76ee\u5f55\u4e0b 2.\u7136\u540e\u53ef\u4ee5\u5c06\u6700\u65e9\u521b\u5efa\u7684mkdocs\u6839\u76ee\u5f55\uff08\u5373my-project\u76ee\u5f55\uff09\u5220\u9664\u4e86 \u53d1\u5e03 \u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy \u5982\u679c\u9700\u8981\u4fee\u6539\u7684\u8bdd \u91cd\u65b0\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u5c31\u597d\u4e86 \u53d1\u5e03\u5230\u4e2a\u4ebaHTTP Server \u00b6 \u901a\u8fc7 mkdocs build \u7f16\u8bd1\u51fahtml\u5e76\u624b\u52a8\u540c\u6b65\u81f3http server\u7684\u6839\u76ee\u5f55 \u751f\u6210\u7ad9\u70b9\u6587\u4ef6 \u5728git\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55 \u53d1\u5e03\u81f3http server \u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u62f7\u8d1d\u5230http server\u7684\u6839\u76ee\u5f55\u4e0b mkdocs.yml\u6ce8\u610f\u4e8b\u9879 \u00b6 \u7531\u4e8e\u662fyaml\u683c\u5f0f\uff0c\u56e0\u6b64\u9996\u5148\u8981\u7b26\u5408yaml\u7684\u8bed\u6cd5\u8981\u6c42 docs\u4e0b\u9700\u8981\u4e00\u4e2aindex.md\uff0c\u4f5c\u4e3a\u7ad9\u70b9\u9996\u9875 \u6587\u6863\u5c42\u6b21\u7ed3\u6784\u867d\u7136\u53ef\u4ee5\u5f88\u591a\u5c42\uff0c\u4f46\u6700\u4f73\u5b9e\u8df5\u662f\u63a7\u5236\u57282\u5c42\u5185\uff0c\u6700\u591a\u4e0d\u8981\u8d85\u8fc73\u5c42\uff0c\u5426\u5219\u5c55\u793a\u4f1a\u4e0d\u591f\u53cb\u597d \u6dfb\u52a0\u9875\u9762 \u00b6 \u5728my-project/docs/\u91cc\u653e\u7f6e.md\u6587\u4ef6\uff0c\u53ef\u4ee5\u81ea\u884c\u7ec4\u7ec7\u76ee\u5f55\u7ed3\u6784 \u7136\u540e\u5728mkdocs.yml\u91cc\u6dfb\u52a0\uff0c\u6bd4\u5982\u8fd9\u6837: nav: - \u4ecb\u7ecd: index.md - \u5b89\u88c5: - \u672c\u5730\u73af\u5883\u642d\u5efa: install/local.md - \u53d1\u5e03\u81f3GitHub Pages: install/github-pages.md - \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server: install/http-server.md - \u8bed\u6cd5: - \u8bed\u6cd5\u603b\u89c8: syntax/main.md - \u6807\u9898: syntax/headline.md - \u6bb5\u843d: syntax/paragraph.md \u4e0a\u9762\u7684index.md\u5c31\u662f\u653e\u7f6e\u5728my-project/docs/index.md \u4e0a\u9762\u7684local.md\u5c31\u662f\u653e\u7f6e\u5728my-project/docs/install/local.md \u6dfb\u52a0\u6269\u5c55 \u00b6 \u53ea\u6709\u6dfb\u52a0\u4e86\u6269\u5c55\uff0c\u624d\u80fd\u5b8c\u7f8e\u4f7f\u7528mkdocs-material\u5b98\u65b9\u652f\u6301\u7684\u6240\u6709markdown\u8bed\u6cd5 mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde markdown\u8bed\u6cd5 \u00b6 mkdocs-material\u652f\u6301\u51e0\u5341\u79cdmarkdown\u8bed\u6cd5\uff0c\u6709\u8bb8\u591a\u5f88\u9177\u70ab\u7684\u529f\u80fd\u4e0e\u6548\u679c\uff0c\u7531\u4e8e\u7bc7\u5e45\u6709\u9650\uff0c\u65e0\u6cd5\u5728\u8fd9\u4e00\u4e00\u5c55\u793a\uff0c\u56e0\u6b64\u8fd9\u91cc\u4ec5\u5217\u4e3e\u4e0b\u6240\u652f\u6301\u7684\u4e3b\u8981\u8bed\u6cd5 1.\u6807\u9898 2.\u6bb5\u843d 3.\u5f15\u7528 4.\u8868\u683c 5.\u4ee3\u7801 \u884c\u5185 \u533a\u5757 \u9ad8\u4eae 6.\u5b57\u4f53\u6837\u5f0f \u659c\u4f53,\u7c97\u4f53,\u7c97\u659c\u4f53 \u4e0a\u6807,\u4e0b\u6807 \u4e0b\u5212\u7ebf \u6a2a\u7ebf \u4e0b\u5212\u7ebf+\u6a2a\u7ebf 7.\u5217\u8868 \u65e0\u5e8f\u5217\u8868 \u6709\u5e8f\u5217\u8868 \u4efb\u52a1\u5217\u8868 8.\u5206\u5272\u7ebf 9.\u94fe\u63a5 \u666e\u901a\u94fe\u63a5 \u81ea\u52a8\u94fe\u63a5 \u951a\u70b9\u63d0\u793a 10.\u56fe\u7247 \u884c\u5185\u5f0f \u53c2\u8003\u5f0f 11.\u8f6c\u4e49 12.\u9ad8\u4eae \u4ee3\u7801\u9ad8\u4eae \u80cc\u666f\u9ad8\u4eae 13.\u6ce8\u89e3 \u4ecb\u7ecd \u5b8c\u6574\u683c\u5f0f \u7a7a\u6807\u9898 \u65e0\u6807\u9898 \u65e0\u7c7b\u578b \u6298\u53e0 11\u79cd\u989c\u8272\u6837\u5f0f \u5d4c\u5957 14.\u811a\u6ce8 15.\u5143\u4fe1\u606f 16.\u6570\u5b66\u516c\u5f0f \u4ecb\u7ecd \u5bfc\u5165js \u7528\u6cd5 17.emoji \u4ecb\u7ecd \u5de5\u4f5c\u539f\u7406 \u6700\u4f73\u5b9e\u8df5 18.\u7279\u6b8a\u7b26\u53f7 19.\u5d4c\u5957 \u4ecb\u7ecd \u6ce8\u89e3-\u6ce8\u89e3 \u5217\u8868-\u5217\u8868 \u5f15\u7528-\u5f15\u7528 \u6ce8\u89e3-\u4ee3\u7801\u5757 \u5217\u8868-\u4ee3\u7801\u5757 \u5f15\u7528-\u4ee3\u7801\u5757 \u00d7\u00d7\u00d7\u533a\u5757-\u4ee3\u7801 \u7eff\u8272\u533a\u5757-\u4ee3\u7801 \u7ea2\u8272\u533a\u5757-\u4ee3\u7801 \u7eff\u63a5\u7ea2\u533a\u5757-\u4ee3\u7801 \u6ce8\u89e3-\u5217\u8868-\u5f15\u7528 \u5217\u8868-\u5217\u8868-\u5f15\u7528 \u5f15\u7528-\u5f15\u7528-\u4ee3\u7801 \u5176\u4ed6\u529f\u80fd \u00b6 mkdocs-material\u672c\u8eab\u8fd8\u652f\u6301\u5982\u4e0b\u529f\u80fd\uff1a \u6dfb\u52a0js\uff0c\u53ef\u7528\u4e8e\u7ad9\u70b9\u7edf\u8ba1\uff08\u5982\u767e\u5ea6\u7edf\u8ba1\uff0c\u8c37\u6b4c\u7edf\u8ba1\uff09 \u9875\u9762\u4ee5\u53ca\u8df3\u8f6c\u6587\u5b57\u7684\u914d\u8272 \u4e2d\u6587\u641c\u7d22 \u6700\u4f73\u5b9e\u8df5 \u00b6 \u5982\u679c\u5e0c\u671b\u81ea\u5df1\u6240\u5199\u7684markdown\u53ef\u4ee5\u517c\u5bb9\u5404\u4e2amarkdown\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u53ea\u9700\u4e86\u89e3markdown\u7684\u4f20\u7edf\u8bed\u6cd5\u5373\u53ef \u5982\u679c\u60f3\u8ba9\u81ea\u5df1\u6240\u5199\u7684markdown\u53d1\u5e03\u5230web\u670d\u52a1\u5668\uff0c\u4f8b\u5982GitHub Pages\u3001\u81ea\u5df1\u642d\u5efa\u7684HTTP Server\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u8bed\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u591a\u6837\u7684\u6e32\u67d3\u6548\u679c\u3002 \u7b14\u8005\u5efa\u8bae\uff1a\u5c3d\u91cf\u4f7f\u7528\u4f20\u7edf\u8bed\u6cd5\uff0c\u53ea\u5728\u5fc5\u8981\u65f6\u5019\u624d\u4f7f\u7528\u672c\u6587\u4ecb\u7ecd\u7684\u8bed\u6cd5\u3002\u56e0\u4e3a\u6392\u7248\u7b80\u6d01\u3001\u6761\u7406\u6e05\u6670\u624d\u80fd\u5e26\u6765\u6700\u8212\u670d\u7684\u9605\u8bfb\u611f\u53d7\u3002 \u53bb\u9664\u5e95\u90e8\u7684powerd by \u00b6 \u53c2\u8003\u7684\u8def\u5f84: D:\\Anaconda3\\envs\\CPU\\Lib\\site-packages\\material","title":"061 \u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_1","text":"mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9","title":"\u672c\u6587\u6982\u8ff0"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#mkdocs-material","text":"\u7b26\u5408google material ui\u89c4\u8303\u7684\u9759\u6001\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4f7f\u7528markdown\u8fdb\u884c\u6587\u6863\u4e66\u5199 mkdocs python\u7f16\u5199\u7684markdown\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\uff0c\u5e26\u6709\u672c\u5730cli\u5de5\u5177 \u81ea\u5e26\u57fa\u4e8eTornado\u7684\u5c0f\u578bhttp\u670d\u52a1\uff0c\u7528\u4e8e\u672c\u5730\u8c03\u8bd5 \u5185\u7f6e\u4e00\u952e\u5f0f\u53d1\u5e03\u81f3GitHub Pages \u5185\u7f6emkdocs\u98ce\u683c\u3001readthedocs\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u8c03\u7528python\u6a21\u5757\u5b9e\u73b0\u8bed\u6cd5\u53ca\u6e32\u67d3\u7684\u6269\u5c55 mkdocs-material python\u6a21\u5757\uff0c\u7b26\u5408google material ui\u89c4\u8303\u7684mkdocs\u81ea\u5b9a\u4e49\u4e3b\u9898 \u9488\u5bf9\u7279\u5b9a\u8bed\u6cd5\u3001\u529f\u80fd\u505a\u4e86\u6e32\u67d3\u4f18\u5316 \u6839\u636e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u9875\u9762\u5c3a\u5bf8\u81ea\u52a8\u7f29\u653e\uff0c\u5bf9PC\u3001\u79fb\u52a8\u8bbe\u5907\u90fd\u53cb\u597d \u4e30\u5bcc\u7684\u9875\u9762\u914d\u8272\uff0c\u591a\u8fbe19\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u60ac\u505c\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u652f\u6301\u7edf\u8ba1\u529f\u80fd\uff0c\u5982\u767e\u5ea6\u7edf\u8ba1\uff0c\u8c37\u6b4c\u7edf\u8ba1","title":"mkdocs-material\u4ecb\u7ecd"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_2","text":"pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material","title":"\u5b89\u88c5"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_3","text":"mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6 docs\u6587\u4ef6\u5939\u4e2d\u662f\u6211\u4eec\u5199\u7684makedown\u6587\u4ef6","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_4","text":"mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material","title":"\u4fee\u6539\u4e3b\u9898"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_5","text":"# \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u6216\u8005 \u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5730\u5740 \u53ef\u4ee5\u8f93\u5165\u4e0b\u9762\u7684\u5730\u5740 mkdocs serve --dev-addr=192.168.31.199:1666 \u6216\u8005 mkdocs serve -a 127.0.0.1:9999 \u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\u672c\u5730ip\u76848000\u7aef\u53e3\uff08\u6bd4\u5982http://127.0.0.1:8000/\uff09 \u67e5\u770b\u6548\u679c\uff0c\u5982\u56fe\u6240\u793a","title":"\u8fd0\u884c"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#github-pages","text":"\u901a\u8fc7 mkdocs gh-deploy \u81ea\u52a8\u7f16\u8bd1\u51fahtml\u5e76\u53d1\u5e03\u81f3GitHub pages\uff0c\u6b65\u9aa4\u5982\u4e0b \u521d\u59cb\u5316repo 1.\u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project\uff08\u53ef\u4ee5\u662f\u5176\u4ed6\u540d\uff0c\u8fd9\u91cc\u5148\u5047\u8bbe\u53ebmy-project\uff09\uff0c\u521b\u5efarepo\u65f6\u5019\u9009\u62e9\u521d\u59cb\u5316\u5e26\u6709README.md 2.\u5c06repo\u540c\u6b65\u5230\u672c\u5730\uff0c\u4f7f\u7528git clone \u5bfc\u5165\u9879\u76ee 1.\u5c06mkdocs\u6839\u76ee\u5f55\uff08\u5373my-project\u76ee\u5f55\uff09\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u521a\u521agit clone\u4e0b\u6765\u7684git\u76ee\u5f55\u4e0b 2.\u7136\u540e\u53ef\u4ee5\u5c06\u6700\u65e9\u521b\u5efa\u7684mkdocs\u6839\u76ee\u5f55\uff08\u5373my-project\u76ee\u5f55\uff09\u5220\u9664\u4e86 \u53d1\u5e03 \u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy \u5982\u679c\u9700\u8981\u4fee\u6539\u7684\u8bdd \u91cd\u65b0\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u5c31\u597d\u4e86","title":"\u53d1\u5e03\u5230GitHub pages"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#http-server","text":"\u901a\u8fc7 mkdocs build \u7f16\u8bd1\u51fahtml\u5e76\u624b\u52a8\u540c\u6b65\u81f3http server\u7684\u6839\u76ee\u5f55 \u751f\u6210\u7ad9\u70b9\u6587\u4ef6 \u5728git\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55 \u53d1\u5e03\u81f3http server \u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u62f7\u8d1d\u5230http server\u7684\u6839\u76ee\u5f55\u4e0b","title":"\u53d1\u5e03\u5230\u4e2a\u4ebaHTTP Server"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#mkdocsyml","text":"\u7531\u4e8e\u662fyaml\u683c\u5f0f\uff0c\u56e0\u6b64\u9996\u5148\u8981\u7b26\u5408yaml\u7684\u8bed\u6cd5\u8981\u6c42 docs\u4e0b\u9700\u8981\u4e00\u4e2aindex.md\uff0c\u4f5c\u4e3a\u7ad9\u70b9\u9996\u9875 \u6587\u6863\u5c42\u6b21\u7ed3\u6784\u867d\u7136\u53ef\u4ee5\u5f88\u591a\u5c42\uff0c\u4f46\u6700\u4f73\u5b9e\u8df5\u662f\u63a7\u5236\u57282\u5c42\u5185\uff0c\u6700\u591a\u4e0d\u8981\u8d85\u8fc73\u5c42\uff0c\u5426\u5219\u5c55\u793a\u4f1a\u4e0d\u591f\u53cb\u597d","title":"mkdocs.yml\u6ce8\u610f\u4e8b\u9879"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_6","text":"\u5728my-project/docs/\u91cc\u653e\u7f6e.md\u6587\u4ef6\uff0c\u53ef\u4ee5\u81ea\u884c\u7ec4\u7ec7\u76ee\u5f55\u7ed3\u6784 \u7136\u540e\u5728mkdocs.yml\u91cc\u6dfb\u52a0\uff0c\u6bd4\u5982\u8fd9\u6837: nav: - \u4ecb\u7ecd: index.md - \u5b89\u88c5: - \u672c\u5730\u73af\u5883\u642d\u5efa: install/local.md - \u53d1\u5e03\u81f3GitHub Pages: install/github-pages.md - \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server: install/http-server.md - \u8bed\u6cd5: - \u8bed\u6cd5\u603b\u89c8: syntax/main.md - \u6807\u9898: syntax/headline.md - \u6bb5\u843d: syntax/paragraph.md \u4e0a\u9762\u7684index.md\u5c31\u662f\u653e\u7f6e\u5728my-project/docs/index.md \u4e0a\u9762\u7684local.md\u5c31\u662f\u653e\u7f6e\u5728my-project/docs/install/local.md","title":"\u6dfb\u52a0\u9875\u9762"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_7","text":"\u53ea\u6709\u6dfb\u52a0\u4e86\u6269\u5c55\uff0c\u624d\u80fd\u5b8c\u7f8e\u4f7f\u7528mkdocs-material\u5b98\u65b9\u652f\u6301\u7684\u6240\u6709markdown\u8bed\u6cd5 mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde","title":"\u6dfb\u52a0\u6269\u5c55"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#markdown","text":"mkdocs-material\u652f\u6301\u51e0\u5341\u79cdmarkdown\u8bed\u6cd5\uff0c\u6709\u8bb8\u591a\u5f88\u9177\u70ab\u7684\u529f\u80fd\u4e0e\u6548\u679c\uff0c\u7531\u4e8e\u7bc7\u5e45\u6709\u9650\uff0c\u65e0\u6cd5\u5728\u8fd9\u4e00\u4e00\u5c55\u793a\uff0c\u56e0\u6b64\u8fd9\u91cc\u4ec5\u5217\u4e3e\u4e0b\u6240\u652f\u6301\u7684\u4e3b\u8981\u8bed\u6cd5 1.\u6807\u9898 2.\u6bb5\u843d 3.\u5f15\u7528 4.\u8868\u683c 5.\u4ee3\u7801 \u884c\u5185 \u533a\u5757 \u9ad8\u4eae 6.\u5b57\u4f53\u6837\u5f0f \u659c\u4f53,\u7c97\u4f53,\u7c97\u659c\u4f53 \u4e0a\u6807,\u4e0b\u6807 \u4e0b\u5212\u7ebf \u6a2a\u7ebf \u4e0b\u5212\u7ebf+\u6a2a\u7ebf 7.\u5217\u8868 \u65e0\u5e8f\u5217\u8868 \u6709\u5e8f\u5217\u8868 \u4efb\u52a1\u5217\u8868 8.\u5206\u5272\u7ebf 9.\u94fe\u63a5 \u666e\u901a\u94fe\u63a5 \u81ea\u52a8\u94fe\u63a5 \u951a\u70b9\u63d0\u793a 10.\u56fe\u7247 \u884c\u5185\u5f0f \u53c2\u8003\u5f0f 11.\u8f6c\u4e49 12.\u9ad8\u4eae \u4ee3\u7801\u9ad8\u4eae \u80cc\u666f\u9ad8\u4eae 13.\u6ce8\u89e3 \u4ecb\u7ecd \u5b8c\u6574\u683c\u5f0f \u7a7a\u6807\u9898 \u65e0\u6807\u9898 \u65e0\u7c7b\u578b \u6298\u53e0 11\u79cd\u989c\u8272\u6837\u5f0f \u5d4c\u5957 14.\u811a\u6ce8 15.\u5143\u4fe1\u606f 16.\u6570\u5b66\u516c\u5f0f \u4ecb\u7ecd \u5bfc\u5165js \u7528\u6cd5 17.emoji \u4ecb\u7ecd \u5de5\u4f5c\u539f\u7406 \u6700\u4f73\u5b9e\u8df5 18.\u7279\u6b8a\u7b26\u53f7 19.\u5d4c\u5957 \u4ecb\u7ecd \u6ce8\u89e3-\u6ce8\u89e3 \u5217\u8868-\u5217\u8868 \u5f15\u7528-\u5f15\u7528 \u6ce8\u89e3-\u4ee3\u7801\u5757 \u5217\u8868-\u4ee3\u7801\u5757 \u5f15\u7528-\u4ee3\u7801\u5757 \u00d7\u00d7\u00d7\u533a\u5757-\u4ee3\u7801 \u7eff\u8272\u533a\u5757-\u4ee3\u7801 \u7ea2\u8272\u533a\u5757-\u4ee3\u7801 \u7eff\u63a5\u7ea2\u533a\u5757-\u4ee3\u7801 \u6ce8\u89e3-\u5217\u8868-\u5f15\u7528 \u5217\u8868-\u5217\u8868-\u5f15\u7528 \u5f15\u7528-\u5f15\u7528-\u4ee3\u7801","title":"markdown\u8bed\u6cd5"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_8","text":"mkdocs-material\u672c\u8eab\u8fd8\u652f\u6301\u5982\u4e0b\u529f\u80fd\uff1a \u6dfb\u52a0js\uff0c\u53ef\u7528\u4e8e\u7ad9\u70b9\u7edf\u8ba1\uff08\u5982\u767e\u5ea6\u7edf\u8ba1\uff0c\u8c37\u6b4c\u7edf\u8ba1\uff09 \u9875\u9762\u4ee5\u53ca\u8df3\u8f6c\u6587\u5b57\u7684\u914d\u8272 \u4e2d\u6587\u641c\u7d22","title":"\u5176\u4ed6\u529f\u80fd"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#_9","text":"\u5982\u679c\u5e0c\u671b\u81ea\u5df1\u6240\u5199\u7684markdown\u53ef\u4ee5\u517c\u5bb9\u5404\u4e2amarkdown\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u53ea\u9700\u4e86\u89e3markdown\u7684\u4f20\u7edf\u8bed\u6cd5\u5373\u53ef \u5982\u679c\u60f3\u8ba9\u81ea\u5df1\u6240\u5199\u7684markdown\u53d1\u5e03\u5230web\u670d\u52a1\u5668\uff0c\u4f8b\u5982GitHub Pages\u3001\u81ea\u5df1\u642d\u5efa\u7684HTTP Server\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u8bed\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u591a\u6837\u7684\u6e32\u67d3\u6548\u679c\u3002 \u7b14\u8005\u5efa\u8bae\uff1a\u5c3d\u91cf\u4f7f\u7528\u4f20\u7edf\u8bed\u6cd5\uff0c\u53ea\u5728\u5fc5\u8981\u65f6\u5019\u624d\u4f7f\u7528\u672c\u6587\u4ecb\u7ecd\u7684\u8bed\u6cd5\u3002\u56e0\u4e3a\u6392\u7248\u7b80\u6d01\u3001\u6761\u7406\u6e05\u6670\u624d\u80fd\u5e26\u6765\u6700\u8212\u670d\u7684\u9605\u8bfb\u611f\u53d7\u3002","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"python\u5b66\u4e60/061-\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2/#powerd-by","text":"\u53c2\u8003\u7684\u8def\u5f84: D:\\Anaconda3\\envs\\CPU\\Lib\\site-packages\\material","title":"\u53bb\u9664\u5e95\u90e8\u7684powerd by"},{"location":"python\u5b66\u4e60/062-Python-os-path()-\u6a21\u5757/","text":"Python3 os.path() \u6a21\u5757 \u00b6 os.path \u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u7684\u5c5e\u6027\u3002 \u4ee5\u4e0b\u662f os.path \u6a21\u5757\u7684\u51e0\u79cd\u5e38\u7528\u65b9\u6cd5\uff1a \u65b9\u6cd5 \u8bf4\u660e os.path.abspath(path) \u8fd4\u56de\u7edd\u5bf9\u8def\u5f84 os.path.basename(path) \u8fd4\u56de\u6587\u4ef6\u540d os.path.commonprefix(list) \u8fd4\u56delist(\u591a\u4e2a\u8def\u5f84)\u4e2d\uff0c\u6240\u6709path\u5171\u6709\u7684\u6700\u957f\u7684\u8def\u5f84 os.path.dirname(path) \u8fd4\u56de\u6587\u4ef6\u8def\u5f84 os.path.exists(path) \u8def\u5f84\u5b58\u5728\u5219\u8fd4\u56deTrue,\u8def\u5f84\u635f\u574f\u8fd4\u56deFalse os.path.lexists \u8def\u5f84\u5b58\u5728\u5219\u8fd4\u56deTrue,\u8def\u5f84\u635f\u574f\u4e5f\u8fd4\u56deTrue os.path.expanduser(path) \u628apath\u4e2d\u5305\u542b\u7684\" \"\u548c\" user\"\u8f6c\u6362\u6210\u7528\u6237\u76ee\u5f55 os.path.expandvars(path) \u6839\u636e\u73af\u5883\u53d8\u91cf\u7684\u503c\u66ff\u6362path\u4e2d\u5305\u542b\u7684\" name\"\u548c\" name\"\u548c\" {name}\" os.path.getatime(path) \u8fd4\u56de\u6700\u8fd1\u8bbf\u95ee\u65f6\u95f4\uff08\u6d6e\u70b9\u578b\u79d2\u6570\uff09 os.path.getmtime(path) \u8fd4\u56de\u6700\u8fd1\u6587\u4ef6\u4fee\u6539\u65f6\u95f4 os.path.getctime(path) \u8fd4\u56de\u6587\u4ef6 path \u521b\u5efa\u65f6\u95f4 os.path.getsize(path) \u8fd4\u56de\u6587\u4ef6\u5927\u5c0f\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de\u9519\u8bef os.path.isabs(path) \u5224\u65ad\u662f\u5426\u4e3a\u7edd\u5bf9\u8def\u5f84 os.path.isfile(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u6587\u4ef6 os.path.isdir(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55 os.path.islink(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u94fe\u63a5 os.path.ismount(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u6302\u8f7d\u70b9 os.path.join(path1[, path2[, ...]]) \u628a\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u5408\u6210\u4e00\u4e2a\u8def\u5f84 os.path.normcase(path) \u8f6c\u6362path\u7684\u5927\u5c0f\u5199\u548c\u659c\u6760 os.path.normpath(path) \u89c4\u8303path\u5b57\u7b26\u4e32\u5f62\u5f0f os.path.realpath(path) \u8fd4\u56depath\u7684\u771f\u5b9e\u8def\u5f84 os.path.relpath(path[, start]) \u4ecestart\u5f00\u59cb\u8ba1\u7b97\u76f8\u5bf9\u8def\u5f84 os.path.samefile(path1, path2) \u5224\u65ad\u76ee\u5f55\u6216\u6587\u4ef6\u662f\u5426\u76f8\u540c os.path.sameopenfile(fp1, fp2) \u5224\u65adfp1\u548cfp2\u662f\u5426\u6307\u5411\u540c\u4e00\u6587\u4ef6 os.path.samestat(stat1, stat2) \u5224\u65adstat tuple stat1\u548cstat2\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u6587\u4ef6 os.path.split(path) \u628a\u8def\u5f84\u5206\u5272\u6210 dirname \u548c basename\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 os.path.splitdrive(path) \u4e00\u822c\u7528\u5728 windows \u4e0b\uff0c\u8fd4\u56de\u9a71\u52a8\u5668\u540d\u548c\u8def\u5f84\u7ec4\u6210\u7684\u5143\u7ec4 os.path.splitext(path) \u5206\u5272\u8def\u5f84\uff0c\u8fd4\u56de\u8def\u5f84\u540d\u548c\u6587\u4ef6\u6269\u5c55\u540d\u7684\u5143\u7ec4 os.path.splitunc(path) \u628a\u8def\u5f84\u5206\u5272\u4e3a\u52a0\u8f7d\u70b9\u4e0e\u6587\u4ef6 os.path.walk(path, visit, arg) \u904d\u5386path\uff0c\u8fdb\u5165\u6bcf\u4e2a\u76ee\u5f55\u90fd\u8c03\u7528visit\u51fd\u6570\uff0cvisit\u51fd\u6570\u5fc5\u987b\u67093\u4e2a\u53c2\u6570(arg, dirname, names)\uff0cdirname\u8868\u793a\u5f53\u524d\u76ee\u5f55\u7684\u76ee\u5f55\u540d\uff0cnames\u4ee3\u8868\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\uff0cargs\u5219\u4e3awalk\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570 os.path.supports_unicode_filenames \u8bbe\u7f6e\u662f\u5426\u652f\u6301unicode\u8def\u5f84\u540d \u5b9e\u4f8b \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86 os.path \u76f8\u5173\u65b9\u6cd5\u7684\u4f7f\u7528\uff1a \u5b9e\u4f8b \u00b6 #!/usr/bin/python3 import os print ( os . path . basename ( '/root/runoob.txt' ) ) # \u8fd4\u56de\u6587\u4ef6\u540d print ( os . path . dirname ( '/root/runoob.txt' ) ) # \u8fd4\u56de\u76ee\u5f55\u8def\u5f84 print ( os . path . split ( '/root/runoob.txt' ) ) # \u5206\u5272\u6587\u4ef6\u540d\u4e0e\u8def\u5f84 print ( os . path . join ( 'root' , 'test' , 'runoob.txt' ) ) # \u5c06\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u5408\u6210\u4e00\u4e2a\u8def\u5f84 \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a runoob . txt / root ( '/root' , 'runoob.txt' ) root / test / runoob . txt \u4ee5\u4e0b\u5b9e\u4f8b\u8f93\u51fa\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u5b9e\u4f8b \u00b6 #!/usr/bin/python # -*- coding: UTF-8 -*- import os import time file = '/root/runoob.txt' # \u6587\u4ef6\u8def\u5f84 print ( os . path . getatime ( file ) ) # \u8f93\u51fa\u6700\u8fd1\u8bbf\u95ee\u65f6\u95f4 print ( os . path . getctime ( file ) ) # \u8f93\u51fa\u6587\u4ef6\u521b\u5efa\u65f6\u95f4 print ( os . path . getmtime ( file ) ) # \u8f93\u51fa\u6700\u8fd1\u4fee\u6539\u65f6\u95f4 print ( time . gmtime ( os . path . getmtime ( file )) ) # \u4ee5struct_time\u5f62\u5f0f\u8f93\u51fa\u6700\u8fd1\u4fee\u6539\u65f6\u95f4 print ( os . path . getsize ( file ) ) # \u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\u4e3a\u5355\u4f4d\uff09 print ( os . path . abspath ( file ) ) # \u8f93\u51fa\u7edd\u5bf9\u8def\u5f84 print ( os . path . normpath ( file ) ) # \u89c4\u8303path\u5b57\u7b26\u4e32\u5f62\u5f0f \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1539052805.5735736 1539052805.5775735 1539052805.5735736 time.struct_time(tm_year=2018, tm_mon=10, tm_mday=9, tm_hour=2, tm_min=40, tm_sec=5, tm_wday=1, tm_yday=282, tm_isdst=0) 7 /root/runoob.txt /root/runoob.txt","title":"062 Python-os-path()-\u6a21\u5757"},{"location":"python\u5b66\u4e60/062-Python-os-path()-\u6a21\u5757/#python3-ospath","text":"os.path \u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u7684\u5c5e\u6027\u3002 \u4ee5\u4e0b\u662f os.path \u6a21\u5757\u7684\u51e0\u79cd\u5e38\u7528\u65b9\u6cd5\uff1a \u65b9\u6cd5 \u8bf4\u660e os.path.abspath(path) \u8fd4\u56de\u7edd\u5bf9\u8def\u5f84 os.path.basename(path) \u8fd4\u56de\u6587\u4ef6\u540d os.path.commonprefix(list) \u8fd4\u56delist(\u591a\u4e2a\u8def\u5f84)\u4e2d\uff0c\u6240\u6709path\u5171\u6709\u7684\u6700\u957f\u7684\u8def\u5f84 os.path.dirname(path) \u8fd4\u56de\u6587\u4ef6\u8def\u5f84 os.path.exists(path) \u8def\u5f84\u5b58\u5728\u5219\u8fd4\u56deTrue,\u8def\u5f84\u635f\u574f\u8fd4\u56deFalse os.path.lexists \u8def\u5f84\u5b58\u5728\u5219\u8fd4\u56deTrue,\u8def\u5f84\u635f\u574f\u4e5f\u8fd4\u56deTrue os.path.expanduser(path) \u628apath\u4e2d\u5305\u542b\u7684\" \"\u548c\" user\"\u8f6c\u6362\u6210\u7528\u6237\u76ee\u5f55 os.path.expandvars(path) \u6839\u636e\u73af\u5883\u53d8\u91cf\u7684\u503c\u66ff\u6362path\u4e2d\u5305\u542b\u7684\" name\"\u548c\" name\"\u548c\" {name}\" os.path.getatime(path) \u8fd4\u56de\u6700\u8fd1\u8bbf\u95ee\u65f6\u95f4\uff08\u6d6e\u70b9\u578b\u79d2\u6570\uff09 os.path.getmtime(path) \u8fd4\u56de\u6700\u8fd1\u6587\u4ef6\u4fee\u6539\u65f6\u95f4 os.path.getctime(path) \u8fd4\u56de\u6587\u4ef6 path \u521b\u5efa\u65f6\u95f4 os.path.getsize(path) \u8fd4\u56de\u6587\u4ef6\u5927\u5c0f\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de\u9519\u8bef os.path.isabs(path) \u5224\u65ad\u662f\u5426\u4e3a\u7edd\u5bf9\u8def\u5f84 os.path.isfile(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u6587\u4ef6 os.path.isdir(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55 os.path.islink(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u94fe\u63a5 os.path.ismount(path) \u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u6302\u8f7d\u70b9 os.path.join(path1[, path2[, ...]]) \u628a\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u5408\u6210\u4e00\u4e2a\u8def\u5f84 os.path.normcase(path) \u8f6c\u6362path\u7684\u5927\u5c0f\u5199\u548c\u659c\u6760 os.path.normpath(path) \u89c4\u8303path\u5b57\u7b26\u4e32\u5f62\u5f0f os.path.realpath(path) \u8fd4\u56depath\u7684\u771f\u5b9e\u8def\u5f84 os.path.relpath(path[, start]) \u4ecestart\u5f00\u59cb\u8ba1\u7b97\u76f8\u5bf9\u8def\u5f84 os.path.samefile(path1, path2) \u5224\u65ad\u76ee\u5f55\u6216\u6587\u4ef6\u662f\u5426\u76f8\u540c os.path.sameopenfile(fp1, fp2) \u5224\u65adfp1\u548cfp2\u662f\u5426\u6307\u5411\u540c\u4e00\u6587\u4ef6 os.path.samestat(stat1, stat2) \u5224\u65adstat tuple stat1\u548cstat2\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u6587\u4ef6 os.path.split(path) \u628a\u8def\u5f84\u5206\u5272\u6210 dirname \u548c basename\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 os.path.splitdrive(path) \u4e00\u822c\u7528\u5728 windows \u4e0b\uff0c\u8fd4\u56de\u9a71\u52a8\u5668\u540d\u548c\u8def\u5f84\u7ec4\u6210\u7684\u5143\u7ec4 os.path.splitext(path) \u5206\u5272\u8def\u5f84\uff0c\u8fd4\u56de\u8def\u5f84\u540d\u548c\u6587\u4ef6\u6269\u5c55\u540d\u7684\u5143\u7ec4 os.path.splitunc(path) \u628a\u8def\u5f84\u5206\u5272\u4e3a\u52a0\u8f7d\u70b9\u4e0e\u6587\u4ef6 os.path.walk(path, visit, arg) \u904d\u5386path\uff0c\u8fdb\u5165\u6bcf\u4e2a\u76ee\u5f55\u90fd\u8c03\u7528visit\u51fd\u6570\uff0cvisit\u51fd\u6570\u5fc5\u987b\u67093\u4e2a\u53c2\u6570(arg, dirname, names)\uff0cdirname\u8868\u793a\u5f53\u524d\u76ee\u5f55\u7684\u76ee\u5f55\u540d\uff0cnames\u4ee3\u8868\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\uff0cargs\u5219\u4e3awalk\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570 os.path.supports_unicode_filenames \u8bbe\u7f6e\u662f\u5426\u652f\u6301unicode\u8def\u5f84\u540d","title":"Python3 os.path() \u6a21\u5757"},{"location":"python\u5b66\u4e60/062-Python-os-path()-\u6a21\u5757/#_1","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86 os.path \u76f8\u5173\u65b9\u6cd5\u7684\u4f7f\u7528\uff1a","title":"\u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/062-Python-os-path()-\u6a21\u5757/#_2","text":"#!/usr/bin/python3 import os print ( os . path . basename ( '/root/runoob.txt' ) ) # \u8fd4\u56de\u6587\u4ef6\u540d print ( os . path . dirname ( '/root/runoob.txt' ) ) # \u8fd4\u56de\u76ee\u5f55\u8def\u5f84 print ( os . path . split ( '/root/runoob.txt' ) ) # \u5206\u5272\u6587\u4ef6\u540d\u4e0e\u8def\u5f84 print ( os . path . join ( 'root' , 'test' , 'runoob.txt' ) ) # \u5c06\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u5408\u6210\u4e00\u4e2a\u8def\u5f84 \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a runoob . txt / root ( '/root' , 'runoob.txt' ) root / test / runoob . txt \u4ee5\u4e0b\u5b9e\u4f8b\u8f93\u51fa\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\u3002","title":"\u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/062-Python-os-path()-\u6a21\u5757/#_3","text":"#!/usr/bin/python # -*- coding: UTF-8 -*- import os import time file = '/root/runoob.txt' # \u6587\u4ef6\u8def\u5f84 print ( os . path . getatime ( file ) ) # \u8f93\u51fa\u6700\u8fd1\u8bbf\u95ee\u65f6\u95f4 print ( os . path . getctime ( file ) ) # \u8f93\u51fa\u6587\u4ef6\u521b\u5efa\u65f6\u95f4 print ( os . path . getmtime ( file ) ) # \u8f93\u51fa\u6700\u8fd1\u4fee\u6539\u65f6\u95f4 print ( time . gmtime ( os . path . getmtime ( file )) ) # \u4ee5struct_time\u5f62\u5f0f\u8f93\u51fa\u6700\u8fd1\u4fee\u6539\u65f6\u95f4 print ( os . path . getsize ( file ) ) # \u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\u4e3a\u5355\u4f4d\uff09 print ( os . path . abspath ( file ) ) # \u8f93\u51fa\u7edd\u5bf9\u8def\u5f84 print ( os . path . normpath ( file ) ) # \u89c4\u8303path\u5b57\u7b26\u4e32\u5f62\u5f0f \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1539052805.5735736 1539052805.5775735 1539052805.5735736 time.struct_time(tm_year=2018, tm_mon=10, tm_mday=9, tm_hour=2, tm_min=40, tm_sec=5, tm_wday=1, tm_yday=282, tm_isdst=0) 7 /root/runoob.txt /root/runoob.txt","title":"\u5b9e\u4f8b"},{"location":"python\u5b66\u4e60/063-vscode-\u9ad8\u4eae\u63d0\u793a/","text":"","title":"063 vscode-\u9ad8\u4eae\u63d0\u793a"},{"location":"python\u5b66\u4e60/064 python\u79d1\u5b66\u8ba1\u7b97\u5e93Sympy\u6307\u5357/","text":"SymPy\u662fPython\u7684\u6570\u5b66\u7b26\u53f7\u8ba1\u7b97\u5e93\uff0c\u7528\u5b83\u53ef\u4ee5\u8fdb\u884c\u6570\u5b66\u516c\u5f0f\u7684\u7b26\u53f7\u63a8\u5bfc \u5b89\u88c5\u4e0d\u4ecb\u7ecd\u4e86 \u5b98\u65b9\u6587\u6863 \u8fd9\u91cc\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528anaconda from sympy import * init_printing(use_unicode=True) x,y = symbols('x y') #\u7528\u7b26\u53f7\u4ee3\u8868\u53d8\u91cf\uff0c\u591a\u4e2a\u53d8\u91cf\u53ef\u4ee5\u7a7a\u683c\uff0c\u53ef\u4ee5\u9017\u53f7\u9694\u5f00\u3002 expr = x + 2*y expanded_expr = expand(x*expr) #expand \u5c55\u5f00 factor(expanded_expr) # factor\u5408\u5e76 diff(sin(x)*exp(x), x) #\u5bf9x\u6c42\u5bfc integrate(exp(x)*sin(x) + exp(x)*cos(x), x) #\u5bf9x\u6c42\u4e0d\u5b9a\u79ef\u5206 integrate(sin(x**2), (x, -oo, oo)) #\u5bf9x\u6c42\u5b9a\u79ef\u5206 limit(sin(x)/x, x, 0) #x\u8d8b\u4e8e0\u7684\u6781\u9650 solve(x**2 - 2,x) #\u6c42\u65b9\u7a0b\u7684\u89e3 Matrix([[1, 2], [2, 2]]).eigenvals() #\u6c42\u77e9\u9635\u7279\u5f81\u503c latex(Integral(cos(x)**2, (x, 0, pi))) #\u67e5\u770blatex\u683c\u5f0f expr = x + 1 expr.subs(x,y) # y+1 \u66ff\u4ee3\u65b9\u6cd5subs Eq(x + 1, 4) # \u5efa\u7acb\u65b9\u7a0b x+1 = 4 a = (x + 1)**2 b = x**2 + 2*x + 1 simplify(a-b) # 0 \u7528\u8fd9\u4e2a\u65b9\u6cd5\u9a8c\u8bc1\u4e24\u4e2a\u65b9\u7a0b\u662f\u5426\u76f8\u7b49 a.equals(b) #\u6216\u8005equals\u65b9\u6cd5\u9a8c\u8bc1 Rational(1, 2) \u5206\u6570\u8868\u793a expr = expr = sqrt(8) expr.evalf(chop =True) #\u5c0f\u6570\u8868\u793a\uff0c\u53bb\u6389 Round-off error expr = x*y + x - 3 + 2*x**2 - z*x**2 + x**3 collect(expr, x) #collect\uff0c\u5bf9x\u5408\u5e76\u540c\u7c7b\u9879 cancel((x**2 + 2*x + 1)/(x**2 + x)) #cancel\u51fd\u6570\u7ea6\u5206 expr = (4*x**3 + 21*x**2 + 10*x + 12)/(x**4 + 5*x**3 + 5*x**2 + 4*x) apart(expr) #\u62c6\u5206 asin(1) #\u53cd\u4e09\u89d2\u51fd\u6570 trigsimp(sin(x)**4 - 2*cos(x)**2*sin(x)**2 + cos(x)**4) #trigsimp\u7b80\u5316\u4e09\u89d2\u51fd\u6570 expand_trig(sin(x + y)) #\u5206\u89e3\u4e09\u89d2\u51fd\u6570 powsimp(x**a*x**b) #\u7b80\u5316\u6307\u6570\u8fd0\u7b97 \u89e3\u65b9\u7a0b\uff1a 7\uff09solveset()\u53ef\u4ee5\u5bf9\u65b9\u7a0b\u8fdb\u884c\u7b26\u53f7\u6c42\u89e3\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u793a\u65b9\u7a0b\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u540e\u7684\u53c2\u6570\u662f\u8868\u793a\u65b9\u7a0b\u4e2d\u672a\u77e5\u91cf\u7684\u7b26\u53f7\u3002 \u6c42\u5bfc\uff1a 8\uff09Derivative\u662f\u8868\u793a\u5bfc\u51fd\u6570\u7684\u7c7b\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9700\u8981\u8fdb\u884c\u6c42\u5bfc\u7684\u6570\u5b66\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6c42\u5bfc\u7684\u81ea\u53d8\u91cf\uff0c\u6ce8\u610f\uff1aDerivative\u6240\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u5bfc\u51fd\u6570\uff0c\u5b83\u4e0d\u4f1a\u8fdb\u884c\u6c42\u5bfc\u8fd0\u7b97\u3002t=Derivative(sin(x),x) 9\uff09\u8c03\u7528doit()\u65b9\u6cd5\u6c42\u51fa\u5bfc\u51fd\u6570\u3002t.doit() 10\uff09\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528diff()\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u7684diff()\u65b9\u6cd5\u6765\u8ba1\u7b97\u5bfc\u51fd\u6570\u3002diff(sin(2*x),x)\u6216sin(2*x).diff(x)\u3002 11\uff09\u6dfb\u52a0\u66f4\u591a\u7684\u7b26\u53f7\u53c2\u6570\u53ef\u4ee5\u8868\u793a\u9ad8\u9636\u5bfc\u51fd\u6570\uff0c\u5982\uff1aDerivative(f(x),x,x,x)\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u591a\u4e2a\u53d8\u91cf\u7684\u5bfc\u51fd\u6570\uff0c\u5982\uff1aDerivative(f(x,y),x,2,y,3) \u6c42\u5fae\u5206\uff1a 12\uff09dsolve()\u53ef\u4ee5\u5bf9\u5fae\u5206\u65b9\u7a0b\u8fdb\u884c\u7b26\u53f7\u6c42\u89e3\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5e26\u672a\u77e5\u51fd\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u9700\u8981\u8fdb\u884c\u6c42\u89e3\u7684\u672a\u77e5\u51fd\u6570\u3002\u5b83\u5728\u89e3\u5fae\u5206\u65b9\u7a0b\u4e2d\u53ef\u4ee5\u4f20\u9012hint\u53c2\u6570\uff0c\u6307\u5b9a\u5fae\u5206\u65b9\u7a0b\u7684\u89e3\u6cd5\uff0c\u82e5\u8bbe\u7f6e\u4e3a\u201cbest\u201d\u5219\u653edsolve()\u5c1d\u8bd5\u6240\u6709\u7684\u65b9\u6cd5\u5e76\u8fd4\u56de\u6700\u7b80\u5355\u7684\u89e3\u3002 \u6c42\u79ef\u5206\uff1a 13\uff09integrate(f,x):\u8ba1\u7b97\u4e0d\u5b9a\u79ef\u5206\uff1bintegrate(f,(x,a,b)):\u8ba1\u7b97\u5b9a\u79ef\u5206\uff1bintegrate(f,x,y):\u8ba1\u7b97\u53cc\u91cd\u4e0d\u5b9a\u79ef\u5206\uff1bintegrate(f,(x,a,b),(y,a,b)):\u8ba1\u7b97\u53cc\u91cd\u5b9a\u79ef\u5206\u3002","title":"064 python\u79d1\u5b66\u8ba1\u7b97\u5e93Sympy\u6307\u5357"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/","text":"\u53c2\u8003: https://www.jianshu.com/p/3cc167bd63dd \u95ee\u9898 \u00b6 Jupyter Notebook\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u597d\u7528\u7684\u5c0f\u5de5\u5177\uff0c\u4f46\u662f\u4e0d\u7ecf\u8fc7\u914d\u7f6e\u53ea\u80fd\u591f\u5728\u672c\u673a\u8bbf\u95ee \u7b14\u8005\u53c2\u9605\u4e86\u6587\u6863\u5bf9jupyter notebook\u8fdb\u884c\u914d\u7f6e\uff0c\u5b9e\u73b0\u4e86\u8de8\u4e3b\u673a\u6d4f\u89c8\u5668\u8bbf\u95ee \u5b89\u88c5jupyter notebook \u00b6 \u7b14\u8005\u4f7f\u7528conda\u5305\u7ba1\u7406 conda install jupyter notebook \u751f\u6210\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 \u00b6 jupyter notebook -- generate - config \u5c06\u4f1a\u5728\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u751f\u6210.jupyter\u6587\u4ef6\u5939\uff0c\u5176\u4e2djupyter_notebook_config.py\u5c31\u662f\u521a\u521a\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 Overwrite C : \\ Users \\ admin \\ . jupyter \\ jupyter_notebook_config . py with default config ? [ y / N ] y Writing default config to : C : \\ Users \\ admin \\ . jupyter \\ jupyter_notebook_config . py \u751f\u6210\u79d8\u94a5 \u00b6 \u8f93\u5165 ipython\uff0c\u8fdb\u5165ipyhon\u547d\u4ee4\u884c \u8f93\u5165 In [1]: from notebook.auth import passwd In [2]: passwd() \u8fd9\u91cc\u8981\u6c42\u4f60\u8f93\u5165\u4ee5\u540e\u767b\u5f55\u4f7f\u7528\u7684\u5bc6\u7801\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u79d8\u94a5\uff0c\u8bb0\u5f97\u4fdd\u5b58\u597d\u79d8\u94a5\uff0c\u4ee5\u514d\u4e22\u5931\u3002 Enter password: Verify password: Out[2]: 'sha1:a1c94af2c269:37341b47e0fbbec5890d6aa29e80c226183d3ff0' \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 \u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b ~/.jupyter/jupyter_notebook_config.py \u6587\u4ef6 \u53d6\u6d88c.NotebookApp.password = ''\"\u6ce8\u91ca\uff0c\u5e76\u5c06\u751f\u6210\u7684\u79d8\u94a5\u590d\u5236\u8fdb\u53bb c.NotebookApp.password = 'sha1:a1c94af2c269:37341b47e0fbbec5890d6aa29e80c226183d3ff0' \u53d6\u6d88\u4e0b\u9762\u51e0\u9879\u6ce8\u91ca\uff0c\u5e76\u6ce8\u91ca\u4fee\u6539ip\u3001\u7aef\u53e3\u3001\u4e0d\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668 c.NotebookApp.ip='*'#\u00d7\u5141\u8bb8\u4efb\u4f55ip\u8bbf\u95ee c.NotebookApp.open_browser = False c.NotebookApp.port =8888 #\u53ef\u81ea\u884c\u6307\u5b9a\u4e00\u4e2a\u7aef\u53e3, \u8bbf\u95ee\u65f6\u4f7f\u7528\u8be5\u7aef\u53e3 \u5982\u679c\u662f\u6bd4\u8f83\u8001\u7684jupyter notebook\u7248\u672c\u8fd8\u4f1a\u6709 allow_remote_access\u4e4b\u7c7b\u7684\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u8bb0\u5f97\u6539\u6210True\u5e76\u53d6\u6d88\u6ce8\u91ca\u3002 \u5927\u529f\u544a\u6210 \u6d4b\u8bd5 \u00b6 \u5728\u670d\u52a1\u5668\u5f00\u542fjupyter notebook \u6d4f\u89c8\u5668\u4e0d\u4f1a\u81ea\u52a8\u5f00\u542f \u5176\u4ed6\u7535\u8111\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u670d\u52a1\u5668ip\uff1a8888\uff0c\u80fd\u591f\u8bbf\u95eejupyter notebook \u4f8b\uff0c\u6211\u670d\u52a1\u5668ip 192.168.199.219\uff0c\u7b14\u8bb0\u672cip 192.168.199.166 \u670d\u52a1\u5668\u8f93\u5165 jupyter notebook \u6709\u5982\u4e0b\u63d0\u793a (tf1.12) yep@yepdlpc:~$ jupyter notebook [I 00:10:58.671 NotebookApp] Writing notebook server cookie secret to /run/user/1000/jupyter/notebook_cookie_secret [W 00:10:58.992 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended. [I 00:10:58.998 NotebookApp] Serving notebooks from local directory: /home/yep [I 00:10:58.998 NotebookApp] 0 active kernels [I 00:10:58.998 NotebookApp] The Jupyter Notebook is running at: http://[all ip addresses on your system]:8888/ [I 00:10:58.998 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). \u5728\u7b14\u8bb0\u672c\u6d4f\u89c8\u5668\u8f93\u5165 192.168.199.219:8888 . \u6210\u529f\u8fdc\u7a0b\u8bbf\u95ee\u670d\u52a1\u5668\u7684jupyter notebook \u540e\u8bb0 \u00b6 \u8f93\u5165\u5bc6\u7801\uff0c\u63a5\u53ef\u4ee5\u6109\u5feb\u7684\u5728\u7b14\u8bb0\u672c\u5199\u4ee3\u7801\uff0c\u5728\u670d\u52a1\u5668\u8dd1\u4ee3\u7801\u5566 \u53ef\u4ee5\u5728jupyter\u5f00terminal\uff0c\u8fdessh\u767b\u9646\u90fd\u7701\u4e86\uff5e\uff5e \u4e0d\u8fc7\u5982\u679c\u670d\u52a1\u5668shell\u5173\u95ed\u540e\u5c31\u65e0\u6cd5\u8bbf\u95ee\u4e86\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u540e\u53f0\u8fd0\u884cjupyter notebook\u6765\u907f\u514d\u8fd9\u4e00\u95ee\u9898 nohup jupyter notebook& \u8fd9\u6837shell\u5173\u95ed\u4e5f\u4e0d\u4f1a\u6709\u95ee\u9898\u5566 \u5982\u679c\u4fee\u6539\u4e00\u5f00\u59cb\u542f\u52a8\u7684\u6587\u4ef6\u8def\u5f84 \u00b6 \u6253\u5f00 jupyter_notebook_config.py\u6587\u4ef6 \u627e\u5230#c.NotebookApp.notebook_dir = ' '\uff0c\u5c06\u524d\u9762\u7684#\u53f7\u5220\u9664\uff0c\u5e76\u5c06\u9700\u8981\u8bbe\u5b9a\u542f\u52a8\u76ee\u5f55\u586b\u5165=\u53f7\u540e\u9762\u7684\u5355\u5f15\u53f7\u5185\uff1ac.NotebookApp.notebook_dir = 'D:/OneDrive/jupyter'\uff0c\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u6587\u4ef6\u540e\u9000\u51fa \u3002 \u7b2c\u4e8c\u79cd \u00b6 \u5148\u8bbe\u7f6e\u5bc6\u7801 jupyter notebook password \u7136\u540e\u5728\u8fdc\u7a0b\u7684\u7535\u8111\u4e2d\u5f00\u542fcmd\u7ec8\u7aef activate GPU #\u6fc0\u6d3b\u73af\u5883 jupyter notebook --no-browser --port=8898 \u6700\u540e\u8fdb\u884c\u7aef\u53e3\u7684\u6620\u5c04 \u5728\u81ea\u5df1\u7684\u672c\u673a\u7535\u8111\u5f00\u542fcmd\u547d\u4ee4\u7a97\u53e3 ssh -N -f -L 127.0.0.1:8897:127.0.0.1:8897 -p 11103 g3650c@10.8.128.129 -X \u5c40\u57df\u7f51\u5185\u4e0d\u7528\u52a0\u7aef\u53e3\u6620\u5c04\u7684\u7aef\u53e3\u53f7 \u5728\u6d4f\u89c8\u5668\u8f93\u5165 127.0.0.1:8897 \u5c31\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u4e86","title":"065 Jupyter_Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_1","text":"Jupyter Notebook\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u597d\u7528\u7684\u5c0f\u5de5\u5177\uff0c\u4f46\u662f\u4e0d\u7ecf\u8fc7\u914d\u7f6e\u53ea\u80fd\u591f\u5728\u672c\u673a\u8bbf\u95ee \u7b14\u8005\u53c2\u9605\u4e86\u6587\u6863\u5bf9jupyter notebook\u8fdb\u884c\u914d\u7f6e\uff0c\u5b9e\u73b0\u4e86\u8de8\u4e3b\u673a\u6d4f\u89c8\u5668\u8bbf\u95ee","title":"\u95ee\u9898"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#jupyter-notebook","text":"\u7b14\u8005\u4f7f\u7528conda\u5305\u7ba1\u7406 conda install jupyter notebook","title":"\u5b89\u88c5jupyter notebook"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_2","text":"jupyter notebook -- generate - config \u5c06\u4f1a\u5728\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u751f\u6210.jupyter\u6587\u4ef6\u5939\uff0c\u5176\u4e2djupyter_notebook_config.py\u5c31\u662f\u521a\u521a\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 Overwrite C : \\ Users \\ admin \\ . jupyter \\ jupyter_notebook_config . py with default config ? [ y / N ] y Writing default config to : C : \\ Users \\ admin \\ . jupyter \\ jupyter_notebook_config . py","title":"\u751f\u6210\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_3","text":"\u8f93\u5165 ipython\uff0c\u8fdb\u5165ipyhon\u547d\u4ee4\u884c \u8f93\u5165 In [1]: from notebook.auth import passwd In [2]: passwd() \u8fd9\u91cc\u8981\u6c42\u4f60\u8f93\u5165\u4ee5\u540e\u767b\u5f55\u4f7f\u7528\u7684\u5bc6\u7801\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u79d8\u94a5\uff0c\u8bb0\u5f97\u4fdd\u5b58\u597d\u79d8\u94a5\uff0c\u4ee5\u514d\u4e22\u5931\u3002 Enter password: Verify password: Out[2]: 'sha1:a1c94af2c269:37341b47e0fbbec5890d6aa29e80c226183d3ff0'","title":"\u751f\u6210\u79d8\u94a5"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_4","text":"\u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b ~/.jupyter/jupyter_notebook_config.py \u6587\u4ef6 \u53d6\u6d88c.NotebookApp.password = ''\"\u6ce8\u91ca\uff0c\u5e76\u5c06\u751f\u6210\u7684\u79d8\u94a5\u590d\u5236\u8fdb\u53bb c.NotebookApp.password = 'sha1:a1c94af2c269:37341b47e0fbbec5890d6aa29e80c226183d3ff0' \u53d6\u6d88\u4e0b\u9762\u51e0\u9879\u6ce8\u91ca\uff0c\u5e76\u6ce8\u91ca\u4fee\u6539ip\u3001\u7aef\u53e3\u3001\u4e0d\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668 c.NotebookApp.ip='*'#\u00d7\u5141\u8bb8\u4efb\u4f55ip\u8bbf\u95ee c.NotebookApp.open_browser = False c.NotebookApp.port =8888 #\u53ef\u81ea\u884c\u6307\u5b9a\u4e00\u4e2a\u7aef\u53e3, \u8bbf\u95ee\u65f6\u4f7f\u7528\u8be5\u7aef\u53e3 \u5982\u679c\u662f\u6bd4\u8f83\u8001\u7684jupyter notebook\u7248\u672c\u8fd8\u4f1a\u6709 allow_remote_access\u4e4b\u7c7b\u7684\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u8bb0\u5f97\u6539\u6210True\u5e76\u53d6\u6d88\u6ce8\u91ca\u3002 \u5927\u529f\u544a\u6210","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_5","text":"\u5728\u670d\u52a1\u5668\u5f00\u542fjupyter notebook \u6d4f\u89c8\u5668\u4e0d\u4f1a\u81ea\u52a8\u5f00\u542f \u5176\u4ed6\u7535\u8111\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u670d\u52a1\u5668ip\uff1a8888\uff0c\u80fd\u591f\u8bbf\u95eejupyter notebook \u4f8b\uff0c\u6211\u670d\u52a1\u5668ip 192.168.199.219\uff0c\u7b14\u8bb0\u672cip 192.168.199.166 \u670d\u52a1\u5668\u8f93\u5165 jupyter notebook \u6709\u5982\u4e0b\u63d0\u793a (tf1.12) yep@yepdlpc:~$ jupyter notebook [I 00:10:58.671 NotebookApp] Writing notebook server cookie secret to /run/user/1000/jupyter/notebook_cookie_secret [W 00:10:58.992 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended. [I 00:10:58.998 NotebookApp] Serving notebooks from local directory: /home/yep [I 00:10:58.998 NotebookApp] 0 active kernels [I 00:10:58.998 NotebookApp] The Jupyter Notebook is running at: http://[all ip addresses on your system]:8888/ [I 00:10:58.998 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). \u5728\u7b14\u8bb0\u672c\u6d4f\u89c8\u5668\u8f93\u5165 192.168.199.219:8888 . \u6210\u529f\u8fdc\u7a0b\u8bbf\u95ee\u670d\u52a1\u5668\u7684jupyter notebook","title":"\u6d4b\u8bd5"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_6","text":"\u8f93\u5165\u5bc6\u7801\uff0c\u63a5\u53ef\u4ee5\u6109\u5feb\u7684\u5728\u7b14\u8bb0\u672c\u5199\u4ee3\u7801\uff0c\u5728\u670d\u52a1\u5668\u8dd1\u4ee3\u7801\u5566 \u53ef\u4ee5\u5728jupyter\u5f00terminal\uff0c\u8fdessh\u767b\u9646\u90fd\u7701\u4e86\uff5e\uff5e \u4e0d\u8fc7\u5982\u679c\u670d\u52a1\u5668shell\u5173\u95ed\u540e\u5c31\u65e0\u6cd5\u8bbf\u95ee\u4e86\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u540e\u53f0\u8fd0\u884cjupyter notebook\u6765\u907f\u514d\u8fd9\u4e00\u95ee\u9898 nohup jupyter notebook& \u8fd9\u6837shell\u5173\u95ed\u4e5f\u4e0d\u4f1a\u6709\u95ee\u9898\u5566","title":"\u540e\u8bb0"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_7","text":"\u6253\u5f00 jupyter_notebook_config.py\u6587\u4ef6 \u627e\u5230#c.NotebookApp.notebook_dir = ' '\uff0c\u5c06\u524d\u9762\u7684#\u53f7\u5220\u9664\uff0c\u5e76\u5c06\u9700\u8981\u8bbe\u5b9a\u542f\u52a8\u76ee\u5f55\u586b\u5165=\u53f7\u540e\u9762\u7684\u5355\u5f15\u53f7\u5185\uff1ac.NotebookApp.notebook_dir = 'D:/OneDrive/jupyter'\uff0c\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u4fdd\u5b58\u6587\u4ef6\u540e\u9000\u51fa \u3002","title":"\u5982\u679c\u4fee\u6539\u4e00\u5f00\u59cb\u542f\u52a8\u7684\u6587\u4ef6\u8def\u5f84"},{"location":"python\u5b66\u4e60/065-Jupyter Notebook \u8fdc\u7a0b\u8bbf\u95ee\u914d\u7f6e/#_8","text":"\u5148\u8bbe\u7f6e\u5bc6\u7801 jupyter notebook password \u7136\u540e\u5728\u8fdc\u7a0b\u7684\u7535\u8111\u4e2d\u5f00\u542fcmd\u7ec8\u7aef activate GPU #\u6fc0\u6d3b\u73af\u5883 jupyter notebook --no-browser --port=8898 \u6700\u540e\u8fdb\u884c\u7aef\u53e3\u7684\u6620\u5c04 \u5728\u81ea\u5df1\u7684\u672c\u673a\u7535\u8111\u5f00\u542fcmd\u547d\u4ee4\u7a97\u53e3 ssh -N -f -L 127.0.0.1:8897:127.0.0.1:8897 -p 11103 g3650c@10.8.128.129 -X \u5c40\u57df\u7f51\u5185\u4e0d\u7528\u52a0\u7aef\u53e3\u6620\u5c04\u7684\u7aef\u53e3\u53f7 \u5728\u6d4f\u89c8\u5668\u8f93\u5165 127.0.0.1:8897 \u5c31\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u4e86","title":"\u7b2c\u4e8c\u79cd"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/","text":"spyder4.0 \u00b6 \u5347\u7ea7\u547d\u4ee4 \u00b6 \u5347\u7ea7spyder\u547d\u4ee4\u4e3a\uff1a conda update spyder \u652f\u6301\u4e2d\u6587\u83dc\u5355 \u00b6 \u6253\u5f00\u8bbe\u7f6e \u8fdb\u5165General\u9009\u9879\u7684Advanced settings \u53ef\u4ee5\u770b\u5230 language .\u70b9\u51fb\u4e0b\u62c9\u9009\u62e9\u7b80\u4f53\u4e2d\u6587,\u7136\u540e\u91cd\u542f\u5373\u53ef. \u63d0\u524d\u9884\u89c8\u4e2d\u6587\u83dc\u5355 \u6df1\u8272\u4e3b\u9898(\u9ed8\u8ba4) \u00b6 \u6df1\u8272\u4e3b\u9898\u4e0d\u518d\u662f\u6709\u9ed1\u6709\u767d,\u4e11\u5230\u54ed \u5bf9\u6bd4\u4e00\u4e0b\u539f\u59cb\u7684\u6df1\u8272\u4e3b\u9898 \u65b0\u589e\u529f\u80fd \u00b6 \u65b0\u589e\u52a0\u7ed8\u56fe\u7a97\u53e3(\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u5728\u884c\u5185\u7ed8\u56fe) \u56fe\u8868\u73b0\u5728\u9ed8\u8ba4\u663e\u793a\u4e8e\u7ed8\u56fe\u7a97\u683c\u4e0a\u3002\u8981\u60f3\u8ba9\u5176\u4e5f\u5728\u4e2d\u65ad\u884c\u4e2d\u663e\u793a\uff0c\u8bf7\u5728\u7ed8\u56fe\u7a97\u683c\u9009\u9879\u83dc\u5355\u4e2d\u53d6\u6d88\u52fe\u9009\u201c\u7981\u7528\u884c\u5185\u7ed8\u56fe\u201d\u3002 \u81ea\u52a8\u4ee3\u7801\u63d0\u793a,\u9f20\u6807\u70b9\u51fb\u53d8\u91cf\u6216\u8005\u51fd\u6570\u540d\u81ea\u52a8\u63d0\u793a\u6574\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u5f0f. 3.\u81ea\u52a8\u9ad8\u4eae\u6240\u6709\u4e0e\u9009\u4e2d\u7684name\u76f8\u540c\u7684\u53d8\u91cf \u6e29\u99a8\u63d0\u793a \u00b6 \u5347\u7ea7\u6709\u98ce\u9669, \u5347\u7ea7\u9700\u8c28\u614e.\u770b\u597d\u66f4\u65b0\u9009\u9879\u518d\u505a\u51fa\u9009\u62e9","title":"066 spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#spyder40","text":"","title":"spyder4.0"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#_1","text":"\u5347\u7ea7spyder\u547d\u4ee4\u4e3a\uff1a conda update spyder","title":"\u5347\u7ea7\u547d\u4ee4"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#_2","text":"\u6253\u5f00\u8bbe\u7f6e \u8fdb\u5165General\u9009\u9879\u7684Advanced settings \u53ef\u4ee5\u770b\u5230 language .\u70b9\u51fb\u4e0b\u62c9\u9009\u62e9\u7b80\u4f53\u4e2d\u6587,\u7136\u540e\u91cd\u542f\u5373\u53ef. \u63d0\u524d\u9884\u89c8\u4e2d\u6587\u83dc\u5355","title":"\u652f\u6301\u4e2d\u6587\u83dc\u5355"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#_3","text":"\u6df1\u8272\u4e3b\u9898\u4e0d\u518d\u662f\u6709\u9ed1\u6709\u767d,\u4e11\u5230\u54ed \u5bf9\u6bd4\u4e00\u4e0b\u539f\u59cb\u7684\u6df1\u8272\u4e3b\u9898","title":"\u6df1\u8272\u4e3b\u9898(\u9ed8\u8ba4)"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#_4","text":"\u65b0\u589e\u52a0\u7ed8\u56fe\u7a97\u53e3(\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u5728\u884c\u5185\u7ed8\u56fe) \u56fe\u8868\u73b0\u5728\u9ed8\u8ba4\u663e\u793a\u4e8e\u7ed8\u56fe\u7a97\u683c\u4e0a\u3002\u8981\u60f3\u8ba9\u5176\u4e5f\u5728\u4e2d\u65ad\u884c\u4e2d\u663e\u793a\uff0c\u8bf7\u5728\u7ed8\u56fe\u7a97\u683c\u9009\u9879\u83dc\u5355\u4e2d\u53d6\u6d88\u52fe\u9009\u201c\u7981\u7528\u884c\u5185\u7ed8\u56fe\u201d\u3002 \u81ea\u52a8\u4ee3\u7801\u63d0\u793a,\u9f20\u6807\u70b9\u51fb\u53d8\u91cf\u6216\u8005\u51fd\u6570\u540d\u81ea\u52a8\u63d0\u793a\u6574\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u5f0f. 3.\u81ea\u52a8\u9ad8\u4eae\u6240\u6709\u4e0e\u9009\u4e2d\u7684name\u76f8\u540c\u7684\u53d8\u91cf","title":"\u65b0\u589e\u529f\u80fd"},{"location":"python\u5b66\u4e60/066-spyder\u5347\u7ea74.0\u5168\u65b0\u7248\u672c/#_5","text":"\u5347\u7ea7\u6709\u98ce\u9669, \u5347\u7ea7\u9700\u8c28\u614e.\u770b\u597d\u66f4\u65b0\u9009\u9879\u518d\u505a\u51fa\u9009\u62e9","title":"\u6e29\u99a8\u63d0\u793a"},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/","text":"python\u7684\u7f16\u8f91\u5668\u7528\u4e86\u5f88\u591a\u5404\u6709\u5404\u7684\u4f18\u70b9\u5427. \u00b6 \u559c\u6b22spyder\u7684\u53d8\u91cf\u67e5\u770b,\u771f\u7684\u662f\u6700\u65b9\u4fbf\u7684. \u00b6 vscode\u7684\u4ee3\u7801\u4e66\u5199\u662f\u6700\u8212\u670d\u7684 \u00b6 pycharm\u8fd9\u4e2a\u4e0d\u662f\u5f88\u5fc5\u8981\u6211\u90fd\u4e0d\u5f00,\u592a\u5403\u6027\u80fd\u4e86 \u00b6 \u4e0b\u9762\u8bf4\u4e00\u4e0b\u6700\u65b0\u7248\u7684pycharm\u600e\u4e48\u67e5\u770b\u8fd0\u884c\u540e\u7684\u53d8\u91cf\u5427 \u00b6 \u6253\u5f00 Edit Configuration \u9009\u4e2d Run with Python Console \u70b9\u51fbApply\u7136\u540e\u70b9\u51fbOk \u6253\u5f00\u53d8\u91cf\u663e\u793a\u6309\u94ae","title":"067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c"},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/#python","text":"","title":"python\u7684\u7f16\u8f91\u5668\u7528\u4e86\u5f88\u591a\u5404\u6709\u5404\u7684\u4f18\u70b9\u5427."},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/#spyder","text":"","title":"\u559c\u6b22spyder\u7684\u53d8\u91cf\u67e5\u770b,\u771f\u7684\u662f\u6700\u65b9\u4fbf\u7684."},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/#vscode","text":"","title":"vscode\u7684\u4ee3\u7801\u4e66\u5199\u662f\u6700\u8212\u670d\u7684"},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/#pycharm","text":"","title":"pycharm\u8fd9\u4e2a\u4e0d\u662f\u5f88\u5fc5\u8981\u6211\u90fd\u4e0d\u5f00,\u592a\u5403\u6027\u80fd\u4e86"},{"location":"python\u5b66\u4e60/067 Pycharm \u8fd0\u884c\u7a0b\u5e8f\u540e\u5982\u4f55 \u5982\u4f55\u67e5\u770b\u53d8\u91cf\u7684\u503c/#pycharm_1","text":"\u6253\u5f00 Edit Configuration \u9009\u4e2d Run with Python Console \u70b9\u51fbApply\u7136\u540e\u70b9\u51fbOk \u6253\u5f00\u53d8\u91cf\u663e\u793a\u6309\u94ae","title":"\u4e0b\u9762\u8bf4\u4e00\u4e0b\u6700\u65b0\u7248\u7684pycharm\u600e\u4e48\u67e5\u770b\u8fd0\u884c\u540e\u7684\u53d8\u91cf\u5427"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/","text":"\u4f7f\u7528linux\u7cfb\u7edf\u771f\u7684\u662f\u4ec0\u4e48\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\uff0c\u6700\u8fd1\u9700\u8981\u5b89\u88c5cuda\uff0c\u81ea\u5df1\u7684\u663e\u5361cuda\u53ea\u652f\u6301\u523016.04\uff0c\u53ea\u80fd\u6362\u4e00\u4e2a\u7cfb\u7edf\u4e86\u53c8\u964d\u7ea7\u56de\u4e8616.04 \u00b6 \u786e\u5b9a\u65e0\u7ebf\u7f51\u5361\u82af\u7247\u662f\u5426\u662f 0bda:8179 \uff0c\u901a\u8fc7\u4e0b\u9762 lsusb lsusb \u4fe1\u606f Bus 001 Device 010: ID 0bda:8179 Realtek Semiconductor Corp. \u4e3b\u8981\u662f\u540e\u9762\u7684\u4fe1\u606f \u4e0b\u8f7d\u9a71\u52a8 \uff0c\u5e76\u6309\u7167\u5176\u4e2dREADME.md\u6b65\u9aa4\u5b89\u88c5\u9a71\u52a8 https://github.com/lwfinger/rtl8188eu/tree/v4.1.8_9499 \u9996\u5148\u5c06\u538b\u7f29\u5305\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7136\u540e\u89e3\u538b \u00b6 \u6267\u884c make all \u00b6 \u6267\u884c sudo make install \u00b6 \u5c31\u5b89\u88c5\u5b8c\u6bd5\u4e86\u3002 \u7136\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c \u6253\u5f008188eu.conf sudo gedit /etc/modprobe.d/8188eu.conf \u6dfb\u52a0\u4e0b\u9762\u7684\u4ee3\u7801 : # \u52a0\u70b9\u53c2\u6570, \u7981\u7528\u81ea\u52a8\u4f11\u7720 options 8188eu rtw_power_mgnt=0 \u6700\u540e\u5b8c\u6210\uff0c\u91cd\u542f\uff01\u7ec8\u4e8e\u4e0d\u7528\u518d\u5fcd\u53d7\u65f6\u523b\u65ad\u7f51\u7684\u56f0\u6270\u4e86\u3002 \u00b6","title":"001 tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/#linuxcudacuda16041604","text":"\u786e\u5b9a\u65e0\u7ebf\u7f51\u5361\u82af\u7247\u662f\u5426\u662f 0bda:8179 \uff0c\u901a\u8fc7\u4e0b\u9762 lsusb lsusb \u4fe1\u606f Bus 001 Device 010: ID 0bda:8179 Realtek Semiconductor Corp. \u4e3b\u8981\u662f\u540e\u9762\u7684\u4fe1\u606f \u4e0b\u8f7d\u9a71\u52a8 \uff0c\u5e76\u6309\u7167\u5176\u4e2dREADME.md\u6b65\u9aa4\u5b89\u88c5\u9a71\u52a8 https://github.com/lwfinger/rtl8188eu/tree/v4.1.8_9499","title":"\u4f7f\u7528linux\u7cfb\u7edf\u771f\u7684\u662f\u4ec0\u4e48\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\uff0c\u6700\u8fd1\u9700\u8981\u5b89\u88c5cuda\uff0c\u81ea\u5df1\u7684\u663e\u5361cuda\u53ea\u652f\u6301\u523016.04\uff0c\u53ea\u80fd\u6362\u4e00\u4e2a\u7cfb\u7edf\u4e86\u53c8\u964d\u7ea7\u56de\u4e8616.04"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/#_1","text":"","title":"\u9996\u5148\u5c06\u538b\u7f29\u5305\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7136\u540e\u89e3\u538b"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/#make-all","text":"","title":"\u6267\u884c make all"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/#sudo-make-install","text":"\u5c31\u5b89\u88c5\u5b8c\u6bd5\u4e86\u3002 \u7136\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c \u6253\u5f008188eu.conf sudo gedit /etc/modprobe.d/8188eu.conf \u6dfb\u52a0\u4e0b\u9762\u7684\u4ee3\u7801 : # \u52a0\u70b9\u53c2\u6570, \u7981\u7528\u81ea\u52a8\u4f11\u7720 options 8188eu rtw_power_mgnt=0","title":"\u6267\u884csudo make install"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/001tplink\u65e0\u7ebf\u7f51\u5361\u5728ubuntu-16-04-\u4e0b\u9891\u7e41\u6389\u7ebf-\u4fe1\u53f7\u5f31-\u89e3\u51b3\u529e\u6cd5/#_2","text":"","title":"\u6700\u540e\u5b8c\u6210\uff0c\u91cd\u542f\uff01\u7ec8\u4e8e\u4e0d\u7528\u518d\u5fcd\u53d7\u65f6\u523b\u65ad\u7f51\u7684\u56f0\u6270\u4e86\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/002\u5982\u4f55\u79fb\u690dubuntu\u7cfb\u7edf\u5230\u53e6\u4e00\u53f0\u7535\u8111-/","text":"\u79fb\u690dubuntu\u7cfb\u7edf\u7684\u524d\u63d0\u662f\u4ec0\u4e48?\u8fd9\u4e2a\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5\u95ed\u6e90\u7684\u663e\u5361\u9a71\u52a8.\u4f7f\u7528\u7684\u662fubuntu\u7cfb\u7edf\u81ea\u5e26\u7684\u5f00\u6e90\u7684\u663e\u5361\u9a71\u52a8. \u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\u4ee5\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u7cfb\u7edf\u7684\u79fb\u690d\u4e86. \u9996\u5148ubuntu\u5b89\u88c5\u7684\u7cfb\u7edf\u53ea\u6709\u4e24\u4e2a\u5206\u533a,\u7b2c\u4e00\u4e2a\u5206\u533a\u662f\u7cfb\u7edf\u5206\u533a,\u7b2c\u4e8c\u4e2a\u5206\u533a\u662f\u5f15\u5bfc\u5206\u533a. \u6211\u4eec\u628a\u8fd9\u4e2a\u7cfb\u7edf\u5206\u533a\u7528 \u8fd9\u4e2a\u8f6f\u4ef6\u8fdb\u884c\u514b\u9686\u5230\u9700\u8981\u79fb\u690d\u7684\u76d8\u7684\u5206\u533a\u4e2d \u79fb\u690d\u514b\u9686\u5b8c\u4e4b\u540e,\u62ff\u5230\u65b0\u7684\u7535\u8111\u4e0a \u8fd9\u4e2a\u65f6\u5019\u4f60\u9700\u8981\u51c6\u5907\u4e00\u4e2a\u5b89\u88c5ubuntu\u7cfb\u7edf\u7684\u4f18\u76d8 \u4f7f\u7528\u8fd9\u4e2a\u4f18\u76d8\u8fdb\u5165ubuntu\u8bd5\u7528 \u7136\u540e\u5b89\u88c5\u524d\u9762\u8bf4\u8fc7\u7684\u4e13\u95e8\u4fee\u590d\u5f15\u5bfc\u7684\u8f6f\u4ef6 \u7ecf\u8fc7\u91cd\u65b0\u7684\u5f15\u5bfc\u540e,\u5c31\u4f1a\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2a\u5f15\u5bfc\u5206\u533a \u8fd9\u65f6\u5019\u91cd\u542f,\u62d4\u6389\u4f18\u76d8 \u5c31\u662f\u8ddf\u524d\u9762\u7cfb\u7edf\u7684\u754c\u9762\u8f6f\u4ef6\u90fd\u662f\u4e00\u6a21\u4e00\u6837\u7684. \u54c8\u54c8\u54c8,\u8fd9\u4e2a\u6837\u5b50\u5c31\u53ef\u4ee5\u5b89\u88c5\u597d\u4e00\u53f0\u7535\u8111,\u7136\u540e\u628a\u8be5\u914d\u7f6e\u7684\u8f6f\u4ef6\u5168\u90e8\u914d\u7f6e\u597d,\u76f4\u63a5\u514b\u9686\u7cfb\u7edf\u5c31\u597d\u4e86","title":"002 \u5982\u4f55\u79fb\u690dubuntu\u7cfb\u7edf\u5230\u53e6\u4e00\u53f0\u7535\u8111-"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/003ubuntu\u5b89\u88c5mathpix/","text":"sudo snap install mathpix-snipping-tool","title":"003 ubuntu\u5b89\u88c5mathpix"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/004ubuntu\u4f7f\u7528pandoc\u914d\u5408typora\u5c06makedown\u8f6c\u6362\u4e3adocx/","text":"\u5b89\u88c5panndoc sudo apt-get install pandoc","title":"004 ubuntu\u4f7f\u7528pandoc\u914d\u5408typora\u5c06makedown\u8f6c\u6362\u4e3adocx"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/","text":"1: XMind_8 linux\u5ba2\u6237\u7aef\u5b98\u7f51\u4e0b\u8f7d \u00b6 XMind_8\u767e\u5ea6\u4e91\u4e0b\u8f7d\u2014\u2014\u63d0\u53d6\u7801: m55v \u00b6 2: \u66ff\u6362\u811a\u672c: XMind_amd64.tar.gz (\u63d0\u53d6\u7801: tnkb) -- \u5305\u542b XMindCrack.jar , XMind.ini \u00b6 3: \u89e3\u538b\u5ba2\u6237\u7aef\u5230\u6307\u5b9a\u76ee\u5f55/opt \u00b6 sudo mkdir /opt/XMind_8 sudo chown lwwen:lwwen /opt/XMind_8 unzip ~/Downloads/xmind-8-update8-linux.zip -d /opt/XMind_8 4: \u5c06 XMind_amd64.tar.gz \u8fd9\u4e2a\u6587\u4ef6\u89e3\u538b\u5e76\u5c06\u5305\u542b\u7684\u4e24\u4e2a\u6587\u4ef6\u653e\u5230\u8fd9\u4e2a\u6587\u4ef6\u4e2d. \u00b6 5 \u5728hosts\u6587\u4ef6\u4e2d\u6dfb\u52a0127.0.0.1 www.xmind.net \u00b6 # XMind_8 127 .0.0.1 www.xmind.net 6 \u6253\u5f00xmind 8 \u8f93\u5165\u90ae\u7bb1\u548c\u5e8f\u5217\u53f7 \u00b6 \u5e2e\u52a9->\u5e8f\u5217\u53f7 \u00b6 \u90ae\u7bb1\uff1a x@iroader.me \u00b6 \u5e8f\u5217\u53f7\uff1a \u00b6 XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY123456789012345 7 \u91cd\u542f\uff0c\u5b8c\u6210\u3002 \u00b6 8 \u521b\u5efa\u4e00\u4e2a\u542f\u52a8\u5668 \u00b6 \u5efa\u7acb\u8fd0\u884c\u811a\u672c\uff1a \u00b6 cd /opt/xmind_8/XMind_amd64 \u8f6c\u5230\u6307\u5b9a\u7684\u89e3\u538b\u76ee\u5f55\u4e0b\u3002 sudo gedit run.sh \u5efa\u7acb\u811a\u672c\u6587\u4ef6 \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\u4e0b\u9762\u7684\u5185\u5bb9\uff1a cd /opt/xmind_8/XMind_amd64 /opt/xmind_8/XMind_amd64/XMind \u6ce8\u610f\uff0c\u4e0a\u8ff0\u7684\u811a\u672c\u5185\u5bb9\u9700\u8981\u6839\u636e\u81ea\u5df1\u5b9e\u9645\u89e3\u538b\u76ee\u5f55\u7684\u60c5\u51b5\u800c\u5b9a\uff0c\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u76ee\u5f55\u3002\u8fd9\u662f\u6211\u5728\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u4e0b\u786e\u5b9a\u7684\u3002\u7b2c\u4e00\u884c\u5fc5\u987b\u8981\u6709\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5fc5\u987b\u8f6c\u5230XMind\u8fd0\u884c\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\uff0c\u624d\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff01\uff01 \u5728\u5b8c\u6210\u6587\u4ef6\u7684\u7f16\u8f91\u540e\uff0c\u8f93\u5165 chmod +x ./run.sh \u5efa\u7acbdesktop\u6587\u4ef6 \u00b6 \u5efa\u7acb\u6587\u4ef6\u4e4b\u524d\uff0c\u81ea\u5df1\u53bb\u767e\u5ea6\u4e00\u4e2a\u559c\u6b22\u7684\u56fe\u6807\uff0c\u4f5c\u4e3aXMind\u5feb\u6377\u65b9\u5f0f\u7684\u56fe\u6807\u3002 \u00b6 \u8f93\u5165\u547d\u540d\uff1a \u00b6 cd /usr/share/applications \u8f6c\u5230\u5efa\u7acb\u8fd0\u884c\u7a0b\u5e8f\u7684\u76ee\u5f55 sudo gedit xmind.desktop \u5efa\u7acb\u56fe\u6807\uff0cxmind\u662f\u53ef\u4ee5\u81ea\u5df1\u547d\u540d\u7684 \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\uff1a [ Desktop Entry ] Name = XMind Exec = /opt/xmind_8/XMind_amd64/run.sh Icon = /opt/xmind_8/XMind_amd64/xmind.png Type = Application Categories = GTK ; GNOME ; Office ; Exec=\u540e\u9762\u662f\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u811a\u672c\u7684\u76ee\u5f55 Icon=\u540e\u9762\u662f\u81ea\u5df1\u5b9a\u4e49\u7684\u56fe\u6807\u7684\u76ee\u5f55 Type=Application \u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f Categories=GTK;GNOME;Office; Office\u8868\u793a\u6240\u5c5e\u7684\u5927\u76ee\u5f55\u662fOffice\u7684\u5206\u7c7b\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5177\u4f53\u66f4\u6539\u3002 \u6ce8\u610f \uff0c\u6b64\u65f6\u9700\u8981\u4ece/usr/share/applications/\u6587\u4ef6\u5939\u4e2d\u53cc\u51fbxmind.desktop\uff0c\u624d\u80fd\u5728\u6309\u4e0bsuper\u952e\uff08\u5373Windows\u7684Win\u952e\uff09\u540e\uff0c\u952e\u5165xmind\u53ef\u4ee5\u627e\u5230\u5feb\u901f\u542f\u52a8\u65b9\u5f0f\u3002","title":"005 ubuntu18-04\u5b89\u88c5xmind-8"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#1-xmind_8-linux","text":"","title":"1: XMind_8 linux\u5ba2\u6237\u7aef\u5b98\u7f51\u4e0b\u8f7d"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#xmind_8-m55v","text":"","title":"XMind_8\u767e\u5ea6\u4e91\u4e0b\u8f7d\u2014\u2014\u63d0\u53d6\u7801: m55v"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#2-xmind_amd64targz-tnkb-xmindcrackjar-xmindini","text":"","title":"2:  \u66ff\u6362\u811a\u672c:\u00a0XMind_amd64.tar.gz(\u63d0\u53d6\u7801: tnkb) -- \u5305\u542bXMindCrack.jar,\u00a0XMind.ini"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#3-opt","text":"sudo mkdir /opt/XMind_8 sudo chown lwwen:lwwen /opt/XMind_8 unzip ~/Downloads/xmind-8-update8-linux.zip -d /opt/XMind_8","title":"3: \u89e3\u538b\u5ba2\u6237\u7aef\u5230\u6307\u5b9a\u76ee\u5f55/opt"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#4-xmind_amd64targz","text":"","title":"4: \u5c06 XMind_amd64.tar.gz\u8fd9\u4e2a\u6587\u4ef6\u89e3\u538b\u5e76\u5c06\u5305\u542b\u7684\u4e24\u4e2a\u6587\u4ef6\u653e\u5230\u8fd9\u4e2a\u6587\u4ef6\u4e2d."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#5-hosts127001-wwwxmindnet","text":"# XMind_8 127 .0.0.1 www.xmind.net","title":"5 \u5728hosts\u6587\u4ef6\u4e2d\u6dfb\u52a0127.0.0.1\u00a0www.xmind.net"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#6-xmind-8","text":"","title":"6 \u6253\u5f00xmind 8 \u8f93\u5165\u90ae\u7bb1\u548c\u5e8f\u5217\u53f7"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#-","text":"","title":"\u5e2e\u52a9-&gt;\u5e8f\u5217\u53f7"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#amp120amp64amp105amp114amp111amp97amp100amp101amp114amp46amp109amp101","text":"","title":"\u90ae\u7bb1\uff1a&#120;&#64;&#105;&#114;&#111;&#97;&#100;&#101;&#114;&#46;&#109;&#101;"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#_1","text":"XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY123456789012345","title":"\u5e8f\u5217\u53f7\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#7","text":"","title":"7 \u91cd\u542f\uff0c\u5b8c\u6210\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#8","text":"","title":"8 \u521b\u5efa\u4e00\u4e2a\u542f\u52a8\u5668"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#_2","text":"cd /opt/xmind_8/XMind_amd64 \u8f6c\u5230\u6307\u5b9a\u7684\u89e3\u538b\u76ee\u5f55\u4e0b\u3002 sudo gedit run.sh \u5efa\u7acb\u811a\u672c\u6587\u4ef6 \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\u4e0b\u9762\u7684\u5185\u5bb9\uff1a cd /opt/xmind_8/XMind_amd64 /opt/xmind_8/XMind_amd64/XMind \u6ce8\u610f\uff0c\u4e0a\u8ff0\u7684\u811a\u672c\u5185\u5bb9\u9700\u8981\u6839\u636e\u81ea\u5df1\u5b9e\u9645\u89e3\u538b\u76ee\u5f55\u7684\u60c5\u51b5\u800c\u5b9a\uff0c\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u76ee\u5f55\u3002\u8fd9\u662f\u6211\u5728\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u4e0b\u786e\u5b9a\u7684\u3002\u7b2c\u4e00\u884c\u5fc5\u987b\u8981\u6709\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5fc5\u987b\u8f6c\u5230XMind\u8fd0\u884c\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\uff0c\u624d\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff01\uff01 \u5728\u5b8c\u6210\u6587\u4ef6\u7684\u7f16\u8f91\u540e\uff0c\u8f93\u5165 chmod +x ./run.sh","title":"\u5efa\u7acb\u8fd0\u884c\u811a\u672c\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#desktop","text":"","title":"\u5efa\u7acbdesktop\u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#xmind","text":"","title":"\u5efa\u7acb\u6587\u4ef6\u4e4b\u524d\uff0c\u81ea\u5df1\u53bb\u767e\u5ea6\u4e00\u4e2a\u559c\u6b22\u7684\u56fe\u6807\uff0c\u4f5c\u4e3aXMind\u5feb\u6377\u65b9\u5f0f\u7684\u56fe\u6807\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/005ubuntu18-04\u5b89\u88c5xmind-8/#_3","text":"cd /usr/share/applications \u8f6c\u5230\u5efa\u7acb\u8fd0\u884c\u7a0b\u5e8f\u7684\u76ee\u5f55 sudo gedit xmind.desktop \u5efa\u7acb\u56fe\u6807\uff0cxmind\u662f\u53ef\u4ee5\u81ea\u5df1\u547d\u540d\u7684 \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\uff1a [ Desktop Entry ] Name = XMind Exec = /opt/xmind_8/XMind_amd64/run.sh Icon = /opt/xmind_8/XMind_amd64/xmind.png Type = Application Categories = GTK ; GNOME ; Office ; Exec=\u540e\u9762\u662f\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u811a\u672c\u7684\u76ee\u5f55 Icon=\u540e\u9762\u662f\u81ea\u5df1\u5b9a\u4e49\u7684\u56fe\u6807\u7684\u76ee\u5f55 Type=Application \u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f Categories=GTK;GNOME;Office; Office\u8868\u793a\u6240\u5c5e\u7684\u5927\u76ee\u5f55\u662fOffice\u7684\u5206\u7c7b\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5177\u4f53\u66f4\u6539\u3002 \u6ce8\u610f \uff0c\u6b64\u65f6\u9700\u8981\u4ece/usr/share/applications/\u6587\u4ef6\u5939\u4e2d\u53cc\u51fbxmind.desktop\uff0c\u624d\u80fd\u5728\u6309\u4e0bsuper\u952e\uff08\u5373Windows\u7684Win\u952e\uff09\u540e\uff0c\u952e\u5165xmind\u53ef\u4ee5\u627e\u5230\u5feb\u901f\u542f\u52a8\u65b9\u5f0f\u3002","title":"\u8f93\u5165\u547d\u540d\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/","text":"ubuntu\u66f4\u65b0\uff08sudo apt-get update\uff09\u65f6\uff0c \u00b6 \u51fa\u73b0\u9519\u8bef\uff1a \u201cFailed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release Unable to find expected entry \u2018main/binary-i386/Packages\u2019 in Release file (Wrong sources.list entry or malformed file)\u201d \u89e3\u51b3\u65b9\u5f0f\uff1a \u00b6 1.\u6253\u5f00 /etc/apt/sources.list.d/google-chrome.list \u6587\u4ef6\uff08\u7528vim\u6216\u8005gedit\u7b49\u5747\u53ef\uff09\uff1a \u00b6 sudo gedit /etc/apt/sources.list.d/google-chrome.list 2\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a \u00b6 \u539f\u6765\u662f\uff1a \u00b6 deb http://dl.google.com/linux/chrome/deb/ stable main \u6539\u4e3a\uff1a \u00b6 deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main 3, \u518d\u6b21\u6267\u884c \u66f4\u65b0\u547d\u4ee4\u5373\u53ef\u901a\u8fc7\u4e86 \u00b6 sudo apt-get update \u6ce8\u610f: \u00b6 \u5982\u679c\u672c\u6765\u5c31\u662f deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main \u62a5\u9519\u4e86 \u90a3\u4e48\u5148\u6539\u56de deb http://dl.google.com/linux/chrome/deb/ stable main \u7136\u540e\u8fdb\u884c\u66f4\u65b0. \u7136\u540e\u518d\u91cd\u65b0\u6539\u56de\u6765 deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main \u518d\u6b21\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86.","title":"006 ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#ubuntusudo-apt-get-update","text":"\u51fa\u73b0\u9519\u8bef\uff1a \u201cFailed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release Unable to find expected entry \u2018main/binary-i386/Packages\u2019 in Release file (Wrong sources.list entry or malformed file)\u201d","title":"ubuntu\u66f4\u65b0\uff08sudo apt-get update\uff09\u65f6\uff0c"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#_1","text":"","title":"\u89e3\u51b3\u65b9\u5f0f\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#1-etcaptsourceslistdgoogle-chromelist-vimgedit","text":"sudo gedit /etc/apt/sources.list.d/google-chrome.list","title":"1.\u6253\u5f00 /etc/apt/sources.list.d/google-chrome.list \u6587\u4ef6\uff08\u7528vim\u6216\u8005gedit\u7b49\u5747\u53ef\uff09\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#2","text":"","title":"2\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#_2","text":"deb http://dl.google.com/linux/chrome/deb/ stable main","title":"\u539f\u6765\u662f\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#_3","text":"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main","title":"\u6539\u4e3a\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#3","text":"sudo apt-get update","title":"3, \u518d\u6b21\u6267\u884c \u66f4\u65b0\u547d\u4ee4\u5373\u53ef\u901a\u8fc7\u4e86"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/006ubuntu18-04\u65e0\u6cd5\u4e0b\u8f7d-http---dl-google-com-linux-chrome-deb-dists-stable-/#_4","text":"\u5982\u679c\u672c\u6765\u5c31\u662f deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main \u62a5\u9519\u4e86 \u90a3\u4e48\u5148\u6539\u56de deb http://dl.google.com/linux/chrome/deb/ stable main \u7136\u540e\u8fdb\u884c\u66f4\u65b0. \u7136\u540e\u518d\u91cd\u65b0\u6539\u56de\u6765 deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main \u518d\u6b21\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86.","title":"\u6ce8\u610f:"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/007Ubuntu-18-04-\u5f15\u5bfc\u4fee\u590d\uff08boot-repair\uff09/","text":"\u95ee\u9898\u63cf\u8ff0\uff1a \u5206\u533a\u683c\u5f0f\u5316\u7684\u65f6\u5019\u4e0d\u5c0f\u5fc3\u5220\u9664\u4e86\u5f15\u5bfc\u5206\u533a,\u5f00\u673a\u5c31\u662fgrub\u754c\u9762,\u53ea\u80fd\u4fee\u590d\u5f15\u5bfc\u4e86 \u89e3\u51b3\u65b9\u6848\uff1a 1.\u5236\u4f5c\u4e00\u4e2aU\u76d8\u542f\u52a8\u76d8\u3002\u4e0b\u8f7d\u5bf9\u5e94\u7684ubuntu\u7cfb\u7edf\uff0c\u7528rufus\u5de5\u5177\u5236\u4f5cUbuntu U\u76d8\u542f\u52a8\u3002 2.\u6253\u5f00\u7535\u8111\u540e\u9009\u62e9u\u76d8\u542f\u52a8\u76d8\uff0c\u7136\u540e\u9009\u62e9try ubuntu without install\u3002\u8bd5\u7528\u4e0d\u5b89\u88c5\u3002 3.\u8fdb\u5165ubuntu\u7cfb\u7edf\u540e\uff0c\u8fde\u63a5\u597d\u7f51\u7edc\uff0c\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u4e0b\u9762\u547d\u4ee4\uff0c\u6309\u7167\u63d0\u793a\u64cd\u4f5c\u3002 sudo add-apt-repository ppa:yannubuntu/boot-repair && sudo apt-get update 4.\u5b8c\u6210\u540e\uff0c\u7ec8\u7aef\u4e2d\u8f93\u5165\u4e0b\u9762\u547d\u4ee4\uff1a sudo apt-get install -y boot-repair && boot-repair \u4f1a\u51fa\u73b0\u5982\u4e0b\u754c\u9762\uff0c\u9009\u62e9recommended repair 5.\u6309\u7167boot repair\u63d0\u793a\u7684\u64cd\u4f5c\u8fdb\u884c\uff0c\u5b8c\u6210\u540e\u91cd\u542f\u7535\u8111\u5373\u53ef\u5b8c\u6210\u3002","title":"007 Ubuntu-18-04-\u5f15\u5bfc\u4fee\u590d\uff08boot-repair\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/","text":"\u4f7f\u7528\u4e00\u4e2aVariety\u5e94\u7528\u7a0b\u5e8f\u5b9e\u73b0 \u00b6 \u9996\u5148\uff0c\u6253\u5f00ubuntu\u7684\u5e94\u7528\u5546\u5e97\uff0c\u641c\u7d22wallpaper\uff0c\u53ef\u4ee5\u627e\u5230\u548c\u58c1\u7eb8\u6709\u5173\u7684\u5e94\u7528\u3002 \u00b6 Variety\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7528\u7684\u58c1\u7eb8\u8f6f\u4ef6\u3002\u70b9\u51fbVariety\uff0c\u8fdb\u5165\u5e94\u7528\u9875\u9762\u5e76\u4e0b\u8f7d\u5b89\u88c5\u3002 \u00b6 \u5b89\u88c5\u597d\u4e4b\u540e\uff0c\u542f\u52a8Variety\u3002\u5982\u56fe\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u4e00\u4e2a\u548c\u4e0a\u4e00\u4e2a\u5207\u6362\u58c1\u7eb8\u3002 \u00b6 \u70b9\u51fb\u9996\u9009\u9879\uff0c\u6253\u5f00\u504f\u597d\u8bbe\u7f6e,\u81f3\u4e8e\u600e\u4e48\u8bbe\u7f6e\u5c31\u662f\u4e2a\u4eba\u7684\u559c\u597d\u4e86,\u6211\u53ea\u8bbe\u7f6e\u4e86\u4ece\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u5939\u4e2d\u5207\u6362\u58c1\u7eb8. \u00b6","title":"008 ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/#variety","text":"","title":"\u4f7f\u7528\u4e00\u4e2aVariety\u5e94\u7528\u7a0b\u5e8f\u5b9e\u73b0"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/#ubuntuwallpaper","text":"","title":"\u9996\u5148\uff0c\u6253\u5f00ubuntu\u7684\u5e94\u7528\u5546\u5e97\uff0c\u641c\u7d22wallpaper\uff0c\u53ef\u4ee5\u627e\u5230\u548c\u58c1\u7eb8\u6709\u5173\u7684\u5e94\u7528\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/#varietyvariety","text":"","title":"Variety\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7528\u7684\u58c1\u7eb8\u8f6f\u4ef6\u3002\u70b9\u51fbVariety\uff0c\u8fdb\u5165\u5e94\u7528\u9875\u9762\u5e76\u4e0b\u8f7d\u5b89\u88c5\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/#variety_1","text":"","title":"\u5b89\u88c5\u597d\u4e4b\u540e\uff0c\u542f\u52a8Variety\u3002\u5982\u56fe\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u4e00\u4e2a\u548c\u4e0a\u4e00\u4e2a\u5207\u6362\u58c1\u7eb8\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/008ubuntu-18-04\u5982\u4f55\u81ea\u52a8\u66f4\u6362\u58c1\u7eb8\uff1f/#_1","text":"","title":"\u70b9\u51fb\u9996\u9009\u9879\uff0c\u6253\u5f00\u504f\u597d\u8bbe\u7f6e,\u81f3\u4e8e\u600e\u4e48\u8bbe\u7f6e\u5c31\u662f\u4e2a\u4eba\u7684\u559c\u597d\u4e86,\u6211\u53ea\u8bbe\u7f6e\u4e86\u4ece\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u5939\u4e2d\u5207\u6362\u58c1\u7eb8."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/","text":"emarkable \u53ef\u80fd\u662f Linux \u4e0a\u6700\u597d\u7684 Markdown \u7f16\u8f91\u5668\u4e86\uff0c\u5b83\u4e5f\u9002\u7528\u4e8e Windows \u64cd\u4f5c\u7cfb\u7edf\uff08\u8fd8\u5728\u5f00\u53d1\u4e2d\uff09\u3002 \u5b83\u7684\u786e\u662f\u662f\u4e00\u4e2a\u5353\u8d8a\u4e14\u529f\u80fd\u9f50\u5168\u7684 Markdown \u7f16\u8f91\u5668\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4ee4\u4eba\u6fc0\u52a8\u7684\u7279\u6027\u3002\u4e00\u4e9b\u5353\u8d8a\u7684\u7279\u6027\uff1a\u652f\u6301\u5b9e\u65f6\u9884\u89c8\u652f\u6301\u5bfc\u51fa PDF \u548c HTML\u652f\u6301 Github Markdown \u8bed\u6cd5\u652f\u6301\u5b9a\u5236 CSS\u652f\u6301\u8bed\u6cd5\u9ad8\u4eae\u63d0\u4f9b\u952e\u76d8\u5feb\u6377\u952e\u9ad8\u53ef\u5b9a\u5236\u6027\u548c\u5176\u4ed6\u8bbf\u95ee\u4e3b\u9875: https://remarkableapp.github.io \u9996\u5148\u8fdb\u5165\u5230\u4e0a\u9762\u7f51\u5740,\u6253\u5f00\u9875\u9762\u662f\u8fd9\u6837\u7684 \u00b6 \u6211\u4eec\u70b9\u51fblinux\u8fdb\u5165\u7136\u540e\u62d6\u5230\u6700\u4e0b\u9762\u6709\u4e00\u4e2adownload: \u00b6 \u70b9\u51fbdownload: \u00b6 \u9009\u62e9\u8fdb\u884c\u4e0b\u8f7d\u5e76\u5b89\u88c5 \u00b6 \u5b89\u88c5\u597ddeb\u662f\u8fd9\u6837\u7684 \u00b6 \u7136\u540e\u8fdb\u884c\u8f6f\u4ef6\u6e90\u66f4\u65b0 \u00b6 sudo apt-get update sudo apt-get upgrade ;\u66f4\u65b0\u6e90 \u8865\u8db3\u7f3a\u5931\u7684\u8f6f\u4ef6\u5305 \u00b6 sudo apt-get install -f \u627e\u5230remarkable\u7684\u56fe\u6807\u53cc\u51fb\u6253\u5f00\u4f7f\u7528\u5c31\u53ef\u4ee5\u4e86 \u00b6","title":"009 ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#_1","text":"","title":"\u9996\u5148\u8fdb\u5165\u5230\u4e0a\u9762\u7f51\u5740,\u6253\u5f00\u9875\u9762\u662f\u8fd9\u6837\u7684"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#linuxdownload","text":"","title":"\u6211\u4eec\u70b9\u51fblinux\u8fdb\u5165\u7136\u540e\u62d6\u5230\u6700\u4e0b\u9762\u6709\u4e00\u4e2adownload:"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#download","text":"","title":"\u70b9\u51fbdownload:"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#_2","text":"","title":"\u9009\u62e9\u8fdb\u884c\u4e0b\u8f7d\u5e76\u5b89\u88c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#deb","text":"","title":"\u5b89\u88c5\u597ddeb\u662f\u8fd9\u6837\u7684"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#_3","text":"sudo apt-get update sudo apt-get upgrade ;\u66f4\u65b0\u6e90","title":"\u7136\u540e\u8fdb\u884c\u8f6f\u4ef6\u6e90\u66f4\u65b0"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#_4","text":"sudo apt-get install -f","title":"\u8865\u8db3\u7f3a\u5931\u7684\u8f6f\u4ef6\u5305"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/009ubuntu\u5b89\u88c5remarkable-makedown\u7f16\u8f91\u5668/#remarkable","text":"","title":"\u627e\u5230remarkable\u7684\u56fe\u6807\u53cc\u51fb\u6253\u5f00\u4f7f\u7528\u5c31\u53ef\u4ee5\u4e86"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/","text":"JDK\u5b89\u88c5\u53ca\u914d\u7f6e \u00b6 jdk1.8.0_201 \u4e0b\u8f7d \u00b6 \u4e0b\u8f7d\u540e\u7f00\u540d\u4e3a.tar.gz\u7684\u8f6f\u4ef6\u5305\uff1a jdk-8u201-linux-x64.tar.gz \u00b6 \u4e0b\u8f7d\u7684\u5730\u5740\u4e3a: https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html \u00b6 \u89e3\u538b\u5e76\u5b89\u88c5 \u00b6 \u89e3\u538b\u4e0b\u8f7d\u7684\u6587\u4ef6\uff0c\u5e76\u79fb\u52a8\u89e3\u538b\u540e\u7684\u8f6f\u4ef6\u5305\u81f3/usr/lib\u5b8c\u6210\u5b89\u88c5\u3002\u5e93\u76ee\u5f55\u4e2d\uff0c/lib\u662f\u5185\u6838\u7ea7\u522b\u7684\uff0c/usr/lib\u662f\u7cfb\u7edf\u7ea7\u522b\u7684\uff0c/usr/local/lib\u662f\u7528\u6237\u7ea7\u522b\u7684\uff0c\u540e\u4e24\u8005\u5747\u53ef\u653e\u7f6ejdk\uff0c\u5efa\u8bae\u653e\u5728/usr/lib\u3002 tar -zxvf jdk-10.0.1_linux-x64_bin.tar.gz sudo mv jdk-10.0.1 /usr/lib/ \u73af\u5883\u53d8\u91cf\u914d\u7f6e: \u00b6 \u4fee\u6539\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\uff0c\u4f5c\u7528\u4e8e\u6240\u6709\u7528\u6237\uff1a(\u4e0d\u662f\u5f88\u5efa\u8bae,\u5efa\u8bae\u7b2c\u4e8c\u79cd\u914d\u7f6e\u65b9\u6cd5) \u8fd9\u91cc\u4f7f\u7528gedit\uff0cvim\u540c\u7406 \u00b6 sudo gedit /etc/profile \u6216\u8005\u4fee\u6539\u5f53\u524d\u7528\u6237\u914d\u7f6e\u6587\u4ef6\uff0c\u4f5c\u7528\u4e8e\u5f53\u524d\u7528\u6237(\u5efa\u8bae\u4f7f\u7528)\uff1a \u00b6 sudo gedit ~/.bashrc \u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\uff1a \u00b6 export JAVA_HOME=/usr/lib/jdk1.8.0_201 export CLASSPATH=.:${JAVA_HOME}/lib export PATH=.:${JAVA_HOME}bin:$PATH \u6ce8\u610f: \u73af\u5883\u53d8\u91cf\u4e2d\u7684\u8def\u5f84\u548c\u5b9e\u9645\u8def\u5f84\u4e00\u81f4\u3002 \u00b6 \u4f7f\u4fee\u6539\u7684\u914d\u7f6e\u751f\u6548\uff1a \u00b6 \u4e8c\u9009\u4e00\uff0c\u89c6\u4e0a\u6587\u51b3\u5b9a \u00b6 source /etc/profile \u6216\u8005 source \uff5e/.bashrc \u6700\u540e\u68c0\u67e5\u5b89\u88c5\u7ed3\u679c \u00b6 java -version \u53ef\u4ee5\u4f7f\u7528\u4e86,\u8fd8\u662f\u5728linux\u4e0b\u914d\u7f6e\u73af\u5883\u65b9\u4fbf\u963f \u00b6","title":"010 ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#jdk","text":"","title":"JDK\u5b89\u88c5\u53ca\u914d\u7f6e"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#jdk180_201","text":"","title":"jdk1.8.0_201  \u4e0b\u8f7d"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#targz-jdk-8u201-linux-x64targz","text":"","title":"\u4e0b\u8f7d\u540e\u7f00\u540d\u4e3a.tar.gz\u7684\u8f6f\u4ef6\u5305\uff1a jdk-8u201-linux-x64.tar.gz"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#httpswwworaclecomtechnetworkjavajavasedownloadsjdk8-downloads-2133151html","text":"","title":"\u4e0b\u8f7d\u7684\u5730\u5740\u4e3a: https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_1","text":"\u89e3\u538b\u4e0b\u8f7d\u7684\u6587\u4ef6\uff0c\u5e76\u79fb\u52a8\u89e3\u538b\u540e\u7684\u8f6f\u4ef6\u5305\u81f3/usr/lib\u5b8c\u6210\u5b89\u88c5\u3002\u5e93\u76ee\u5f55\u4e2d\uff0c/lib\u662f\u5185\u6838\u7ea7\u522b\u7684\uff0c/usr/lib\u662f\u7cfb\u7edf\u7ea7\u522b\u7684\uff0c/usr/local/lib\u662f\u7528\u6237\u7ea7\u522b\u7684\uff0c\u540e\u4e24\u8005\u5747\u53ef\u653e\u7f6ejdk\uff0c\u5efa\u8bae\u653e\u5728/usr/lib\u3002 tar -zxvf jdk-10.0.1_linux-x64_bin.tar.gz sudo mv jdk-10.0.1 /usr/lib/","title":"\u89e3\u538b\u5e76\u5b89\u88c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_2","text":"\u4fee\u6539\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\uff0c\u4f5c\u7528\u4e8e\u6240\u6709\u7528\u6237\uff1a(\u4e0d\u662f\u5f88\u5efa\u8bae,\u5efa\u8bae\u7b2c\u4e8c\u79cd\u914d\u7f6e\u65b9\u6cd5)","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e:"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#geditvim","text":"sudo gedit /etc/profile","title":"\u8fd9\u91cc\u4f7f\u7528gedit\uff0cvim\u540c\u7406"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_3","text":"sudo gedit ~/.bashrc","title":"\u6216\u8005\u4fee\u6539\u5f53\u524d\u7528\u6237\u914d\u7f6e\u6587\u4ef6\uff0c\u4f5c\u7528\u4e8e\u5f53\u524d\u7528\u6237(\u5efa\u8bae\u4f7f\u7528)\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_4","text":"export JAVA_HOME=/usr/lib/jdk1.8.0_201 export CLASSPATH=.:${JAVA_HOME}/lib export PATH=.:${JAVA_HOME}bin:$PATH","title":"\u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_5","text":"","title":"\u6ce8\u610f:\u00a0\u73af\u5883\u53d8\u91cf\u4e2d\u7684\u8def\u5f84\u548c\u5b9e\u9645\u8def\u5f84\u4e00\u81f4\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_6","text":"","title":"\u4f7f\u4fee\u6539\u7684\u914d\u7f6e\u751f\u6548\uff1a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_7","text":"source /etc/profile \u6216\u8005 source \uff5e/.bashrc","title":"\u4e8c\u9009\u4e00\uff0c\u89c6\u4e0a\u6587\u51b3\u5b9a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#_8","text":"java -version","title":"\u6700\u540e\u68c0\u67e5\u5b89\u88c5\u7ed3\u679c"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/010ubuntu\u914d\u7f6ejava\u5f00\u53d1\u73af\u5883/#linux","text":"","title":"\u53ef\u4ee5\u4f7f\u7528\u4e86,\u8fd8\u662f\u5728linux\u4e0b\u914d\u7f6e\u73af\u5883\u65b9\u4fbf\u963f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/011-ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora/","text":"\u53c2\u8003\u5b98\u65b9\u94fe\u63a5: https://support.typora.io/Typora-on-Linux/ Debian/Ubuntu or use sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE \u5b89\u88c5\u516c\u94a5:\u63a8\u8350\u8fd9\u79cd \u00b6 wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add - \u6dfb\u52a0Typora\u4ed3\u5e93 \u00b6 sudo add-apt-repository 'deb https://typora.io/linux ./ \u8f6f\u4ef6\u6e90\u66f4\u65b0 \u00b6 sudo apt-get update \u5b89\u88c5typora \u00b6 sudo apt-get install typora","title":"011 ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/011-ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora/#_1","text":"wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -","title":"\u5b89\u88c5\u516c\u94a5:\u63a8\u8350\u8fd9\u79cd"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/011-ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora/#typora","text":"sudo add-apt-repository 'deb https://typora.io/linux ./","title":"\u6dfb\u52a0Typora\u4ed3\u5e93"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/011-ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora/#_2","text":"sudo apt-get update","title":"\u8f6f\u4ef6\u6e90\u66f4\u65b0"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/011-ubuntu\u5b89\u88c5makedown\u7f16\u8f91\u5668typora/#typora_1","text":"sudo apt-get install typora","title":"\u5b89\u88c5typora"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/012-ubuntu\u600e\u4e48\u5207\u6362\u5230root\u7528\u6237,\u5207\u6362\u5230root\u8d26\u53f7\u65b9\u6cd5/","text":"ubuntu\u600e\u4e48\u5207\u6362\u5230root\u7528\u6237\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u4f7f\u7528su root\u547d\u4ee4\uff0c\u53bb\u5207\u6362\u5230root\u6743\u9650\uff0c\u6b64\u65f6\u4f1a\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u53ef\u662f\u600e\u4e48\u4e5f\u8f93\u4e0d\u5bf9\uff0c\u63d0\u793a\u201cAuthentication failure\u201d\uff0c \u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\u4e00\u4e2a\u662f\u771f\u7684\u662f\u5bc6\u7801\u9519\u4e86\uff0c\u53e6\u4e00\u79cd\u5c31\u662f\u521a\u5b89\u88c5\u597d\u7684Linux\u7cfb\u7edf\uff0c\u6ca1\u6709\u7ed9root\u8bbe\u7f6e\u5bc6\u7801\u3002 \u901a\u8fc7\u4e0b\u6587\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002 \u6253\u5f00Ubuntu\uff0c\u8f93\u5165\u547d\u4ee4\uff1a su root \uff0c\u56de\u8f66\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u600e\u4e48\u8f93\u5165\u90fd\u4e0d\u5bf9 \u7ed9root\u7528\u6237\u8bbe\u7f6e\u5bc6\u7801\uff1a \u547d\u4ee4\uff1a sudo passwd root \u8f93\u5165\u5bc6\u7801\uff0c\u5e76\u786e\u8ba4\u5bc6\u7801\u3002 \u91cd\u65b0\u8f93\u5165\u547d\u4ee4\uff1a su root \u7136\u540e\u8f93\u5165\u5bc6\u7801\uff1a \u53d1\u73b0\u53ef\u4ee5\u5207\u6362\u5230root\u6743\u9650\u4e86\u3002 \u4f7f\u7528 su xyx \u547d\u4ee4\uff0c\u5207\u6362\u5230\u666e\u901a\u7528\u6237\u3002","title":"012 ubuntu\u600e\u4e48\u5207\u6362\u5230root\u7528\u6237,\u5207\u6362\u5230root\u8d26\u53f7\u65b9\u6cd5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/013-Ubuntu\u4e0b\u89e3\u51b3apt-update\u65f6\u7b7e\u540d\u65e0\u6548\u95ee\u9898/","text":"Ubuntu 18.04\u5728\u6267\u884c apt-get update \u65f6\u51fa\u73b0\u4e00\u4e0b\u62a5\u9519\uff1a \u89e3\u51b3\u529e\u6cd5\uff1a sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8C718D3B5072E1F5 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 58712A2291FA4AD5","title":"013 Ubuntu\u4e0b\u89e3\u51b3apt-update\u65f6\u7b7e\u540d\u65e0\u6548\u95ee\u9898"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/014-\u5728Ubuntu\u4e0a\u5b89\u88c5Chrome\u6d4f\u89c8\u5668\u548cChromeDriver/","text":"\u5728Ubuntu\u4e0a\u5b89\u88c5Chrome\u6d4f\u89c8\u5668\u548cChromeDriver \u4e00\u3001\u5b89\u88c5Chrome\u6d4f\u89c8\u5668 1\u3001\u5b89\u88c5\u4f9d\u8d56 sudo apt-get install libxss1 libappindicator1 libindicator7 2\u3001\u4e0b\u8f7dChrome\u5b89\u88c5\u5305 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 3\u3001\u5b89\u88c5 sudo dpkg -i google-chrome*.deb sudo apt-get install -f \u4e8c\u3001\u5b89\u88c5ChromeDriver 1\u3001\u5b89\u88c5xvfb\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u65e0\u5934\u5954\u8dd1\u5730\u8fd0\u884cChrome sudo apt-get install xvfb 2\u3001\u5b89\u88c5\u4f9d\u8d56 sudo apt-get install unzip 3\u3001\u4e0b\u8f7d\u5b89\u88c5\u5305 wget -N http://chromedriver.storage.googleapis.com/2.26/chromedriver_linux64.zip 4\u3001\u89e3\u538b\u7f29+\u6dfb\u52a0\u6267\u884c\u6743\u9650 unzip chromedriver_linux64.zip 5\u3001\u79fb\u52a8 sudo mv -f chromedriver /usr/local/share/chromedriver 6\u3001\u5efa\u7acb\u8f6f\u8fde\u63a5 sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriver \u4e09\u3001\u65e0\u5934\u8fd0\u884cChrome 1\u3001\u5b89\u88c5Python\u4f9d\u8d56 pip3 install selenium pip3 install pyvirtualdisplay 2\u3001\u5f00\u5e72 from pyvirtualdisplay import Display from selenium import webdriver display = Display(visible=0, size=(800, 600))# \u521d\u59cb\u5316\u5c4f\u5e55 display.start() driver = webdriver.Chrome()# \u521d\u59cb\u5316Chrome driver.get('http://www.cnblogs.com/x54256/') print driver.title","title":"014 \u5728Ubuntu\u4e0a\u5b89\u88c5Chrome\u6d4f\u89c8\u5668\u548cChromeDriver"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/015-\u4fdd\u5b58ubuntu\u7ec8\u7aef\u5c4f\u5e55\u8f93\u51fa\u7684\u4fe1\u606f/","text":"sudo script screen.log screen.log\u5728\u4f60\u7684\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210 \u5230\u6307\u5b9a\u76ee\u5f55\uff08\u6bd4\u5982/home/yangyuan/log\uff09\u53ef\u4ee5\u7528 sudo script /home/yangyuan/log/screen.log \u4e4b\u540e\u7ec8\u7aef\u7684\u6240\u6709\u4fe1\u606f\u5c31\u90fd\u4f1a\u88ab\u4fdd\u5b58\u5230screen.log\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u505c\u6b62\u4fdd\u5b58\uff1a exit","title":"015 \u4fdd\u5b58ubuntu\u7ec8\u7aef\u5c4f\u5e55\u8f93\u51fa\u7684\u4fe1\u606f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/016-ubuntu\u4e0bNTFS\u5206\u533a\u65e0\u6cd5\u8bbf\u95ee\u89e3\u51b3/","text":"ubuntu\u5728\u8bbf\u95ee\u4e00\u5757\u79fb\u52a8\u786c\u76d8\u65f6\u51fa\u73b0x\u4e86\u65e0\u6cd5\u8bbf\u95ee\u7684\u6545\u969c. \u65b9\u6cd5/\u6b65\u9aa4 \u6253\u5f00\u7ec8\u7aef sudo ntfsfix /dev/sdc5 \uff08/dev/sdc5\u662f\u4e0a\u56fe\u4e2d\u5212\u7ea2\u6846\u7684\u90e8\u5206\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u66ff\u6362\uff09","title":"016 ubuntu\u4e0bNTFS\u5206\u533a\u65e0\u6cd5\u8bbf\u95ee\u89e3\u51b3"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/017-ubuntu\u66f4\u65b0\u5f15\u5bfc\u9879/","text":"\u5728win10\u7cfb\u7edf\u5d29\u6e83\u91cd\u88c5\u540e,\u867d\u7136\u80fd\u8fdb\u5165win10\u7cfb\u7edf,\u4f46\u662f\u4f1a\u6709\u4e00\u4e9b\u9519\u8bef\u7684\u63d0\u793a,\u8fd9\u65f6\u53ea\u8981\u8fdb\u5165ubuntu\u7cfb\u7edf\u66f4\u65b0\u4e00\u4e0b\u5f15\u5bfc\u9879\u5c31\u53ef\u4ee5\u4e86 sudo update-grub \u663e\u793a\u6548\u679c\u5982\u4e0b:","title":"017 ubuntu\u66f4\u65b0\u5f15\u5bfc\u9879"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/018-Windows\u4e0b\u5b89\u88c5Notepad++-\u4ee5\u53ca-Ubuntu-16-04\u4e0b-\u5b89\u88c5-Notepadqq/","text":"Windows\u4e0b\u5b89\u88c5Notepad++ \u4ee5\u53ca Ubuntu 16.04\u4e0b \u5b89\u88c5 Notepadqq \u4e00\u3001Windows\u4e0b\u5b89\u88c5Notepad++ \u5efa\u8bae\u5927\u5bb6\u4e0b\u8f7dNotepad++\uff0c\u5f88\u65b9\u4fbf\u7684\u6587\u672c\u7f16\u8f91\u795e\u5668\u3002 \uff08 \u767e\u5ea6\u767e\u79d1 \uff1aNotepad++\u662f Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u4e00\u5957 \u6587\u672c\u7f16\u8f91\u5668 \u6709\u5b8c\u6574\u7684\u4e2d\u6587\u5316\u63a5\u53e3\u53ca\u652f\u6301\u591a\u56fd\u8bed\u8a00\u7f16\u5199\u7684\u529f\u80fd( UTF8 \u6280\u672f)\u3002 Notepad++\u529f\u80fd\u6bd4 Windows \u4e2d\u7684 Notepad (\u8bb0\u4e8b\u672c)\u5f3a\u5927\uff0c\u9664\u4e86\u53ef\u4ee5\u7528\u6765\u5236\u4f5c\u4e00\u822c\u7684\u7eaf\u6587\u5b57\u8bf4\u660e\u6587\u4ef6\uff0c\u4e5f\u5341\u5206\u9002\u5408\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4ee3\u7801\u3002Notepad++ \u4e0d\u4ec5\u6709\u8bed\u6cd5\u9ad8\u4eae\u5ea6\u663e\u793a\uff0c\u4e5f\u6709\u8bed\u6cd5\u6298\u53e0\u529f\u80fd\uff0c\u5e76\u4e14\u652f\u6301\u5b8f\u4ee5\u53ca\u6269\u5145\u57fa\u672c\u529f\u80fd\u7684\u5916\u6302\u6a21\u7ec4\u3002 Notepad++\u662f\u514d\u8d39\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\uff0c\u81ea\u5e26\u4e2d\u6587\uff0c\u652f\u6301\u4f17\u591a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bed\u8a00\uff09 \u4e0b\u9762\u9644\u4e0a\u4e0b\u8f7d\u94fe\u63a5\uff0c\u5f88\u5bb9\u6613\u5b89\u88c5\uff0c\u4e0d\u9700\u8981\u7834\u89e3\uff0c\u76f4\u63a5\u50bb\u74dc\u5f0f\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\uff0c \u94fe\u63a5\uff1a https://pan.baidu.com/s/1wSAEDV4OQWHETnjlgS3I7Q \u5bc6\u7801\uff1aoufq \u4e8c\u3001Ubuntu 16.04\u4e0b \u5b89\u88c5 Notepadqq \u800c\u5728\u5982Ubuntu\u7b49Linux\u7cfb\u7edf\u4e0b\u662f\u6ca1\u6709Notepad++\u8fd9\u4e2a\u8f6f\u4ef6\u7684\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fNotepad qq\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u4e0b\u8f7d\uff0c\u5f88\u65b9\u4fbf\uff1a sudo add-apt-repository ppa:notepadqq-team/notepadqq sudo apt-get update sudo apt-getinstall notepadqq \u5378\u8f7d\u547d\u4ee4\u5982\u4e0b\uff1a sudo apt-getremovenotepadqq sudo add-apt-repository --removeppa:notepadqq-team/notepadqq Notepad qq\u6253\u5f00.py\u6587\u4ef6\uff1a Notepad qq\u6253\u5f00.json\u6587\u4ef6\uff1a Notepad qq\u6253\u5f00.csv\u6587\u4ef6\uff1a \u771f\u662f\u4ec0\u4e48\u90fd\u80fd\u6253\u5f00\u548c\u7f16\u8f91\uff0c\u771f\u662f\u641e\u7814\u7a76\u548c\u5de5\u7a0b\u7684\u795e\u5668\u5440\uff01","title":"018 Windows\u4e0b\u5b89\u88c5Notepad++-\u4ee5\u53ca-Ubuntu-16-04\u4e0b-\u5b89\u88c5-Notepadqq"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/019-Ubuntu\u89e3\u538bzip\u538b\u7f29\u5305\u4e2d\u6587\u4e71\u7801/","text":"Ubuntu\u81ea\u5e26\u7684\u89e3\u538b\u5de5\u5177zip\u89e3\u538b\u7684\u65f6\u5019\u603b\u662f\u4e2d\u6587\u4e71\u7801\uff0c\u4f7f\u7528unar\u5de5\u5177\u53ef\u4ee5\u5b8c\u7f8e\u5730\u89e3\u51b3zip\u89e3\u538b\u4e71\u7801\u95ee\u9898\uff0c\u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c\u4e00\u6b65\u5230\u4f4d\u3002 \u5b89\u88c5unar\u89e3\u538b\u5de5\u5177 sudo apt-get install unar \u89e3\u538b\u76f8\u5e94\u7684zip\u6587\u4ef6 unar document.zip \u77ac\u95f4\u5c31\u80fd\u89e3\u51b3zip\u89e3\u538b\u4e2d\u6587\u4e71\u7801\u7684\u95ee\u9898\u3002","title":"019 Ubuntu\u89e3\u538bzip\u538b\u7f29\u5305\u4e2d\u6587\u4e71\u7801"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/020-ubuntu18-04\u667a\u80fd\u62fc\u97f3\u5019\u9009\u5b57\u4f53\u8c03\u8282\u65b9\u6cd5/","text":"2018.4.26\u521a\u521a\u53d1\u5e03\u7684Ubuntu18.04LTS desktop\u7248\u672c\uff0c\u7cfb\u7edf\u4f7f\u7528\u7684ibus-libpinyin\u8f93\u5165\u6cd5\uff0c\u5176\u5019\u9009\u5b57\u4f53\u8fc7\u5c0f\uff0c\u5728\u663e\u793a\u5668\u5206\u8fa8\u7387\u65e5\u76ca\u63d0\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u611f\u5230\u4e0d\u65b9\u4fbf\uff0c\u7279\u522b\u5bf9\u5f31\u89c6\u8005\u548c\u8001\u5e74\u4eba\uff0c\u66f4\u611f\u5230\u5403\u529b\u3002\u672c\u6587\u4ecb\u7ecd\u4e86\u89e3\u51b3\u65b9\u6cd5\u3002 1.\u539f\u6765ibus\u6846\u67b6\u7684\u62fc\u97f3\u8f93\u5165\u6cd5\uff0c\u5019\u9009\u5b57\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u547d\u4ee4''ibus-setup''\u540e\u8c03\u8282\u3002\u4f46\u662f18.04\u7248\u672c\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u65e0\u6548\u4e86\u3002 2.\u6211\u4eec\u53ef\u4ee5\u5728\u201c\u8f6f\u4ef6\u4e2d\u5fc3\u201d\u91cc\uff0c\u641c\u7d22\u201cibus\u201d,\u968f\u540e\u5b89\u88c5\u201cibus font setting\u201d.","title":"020 ubuntu18-04\u667a\u80fd\u62fc\u97f3\u5019\u9009\u5b57\u4f53\u8c03\u8282\u65b9\u6cd5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/021-ubuntu18-04\u5b9e\u65f6\u663e\u793a\u7f51\u901fCPU\u6e29\u5ea6\u7b49/","text":"1\u3001\u6309**Ctrl+Alt+T**\uff0c\u6253\u5f00\u7ec8\u7aef\uff0c\u6dfb\u52a0\u8f6f\u4ef6\u6e90 sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor 2\u3001\u66f4\u65b0\u8f6f\u4ef6\u6e90 sudo apt-get update 3\u3001\u5b89\u88c5\u8f6f\u4ef6 sudo apt-get install indicator-sysmonitor 4\u3001\u901a\u8fc7**\u542f\u52a8\u5668**\u6253\u5f00\u7cfb\u7edf\u4fe1\u606f\uff0c\u5728\u542f\u52a8\u5668\u641c\u7d22**sys**\uff0c\u7136\u540e\u9009\u62e9**indicator-sysmonitor** 5\u3001\u53f3\u4e0a\u89d2\u663e\u793a: 6\u8fdb\u884c\u914d\u7f6e:\u53f3\u70b9\u51fb->preferences->advanced\uff1a 7\u3001\u8bbe\u7f6e\u60f3\u8981\u663e\u793a\u7684\u680f\u76ee\uff1a","title":"021 ubuntu18-04\u5b9e\u65f6\u663e\u793a\u7f51\u901fCPU\u6e29\u5ea6\u7b49"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/022-\u4e4c\u73ed\u56fe\u5e38\u7528\u6307\u4ee4/","text":"\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u4f1a\u5728\u7ec8\u7aef\u8fdb\u884c\u6587\u4ef6/\u6587\u4ef6\u5939\u7684\u521b\u5efa\u4e0e\u5220\u9664 \u4f7f\u7528\u5feb\u6377\u952ectrl + alt + t \u6253\u5f00\u7ec8\u7aef\uff1a \u521b\u5efa\u6587\u4ef6\uff1a touch a.txt \u521b\u5efa\u6587\u4ef6\u5939\uff1a mkdir NewFolder \u5220\u9664\u6587\u4ef6\uff1a rm a.txt \u5220\u9664\u6587\u4ef6\u5939\uff1a rmdir NewFolder \u5220\u9664\u5e26\u6709\u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff1a rm -r NewFolder \u67e5\u770bip\u5730\u5740: \u5728\u8f93\u5165\u6846\u4e2d\u6211\u4eec\u8f93\u5165\u547d\u4ee4\uff1a ifconfig -a \uff0c\u8fd9\u91cc\u8be5\u547d\u4ee4\u7c7b\u4f3c\u4e8e\u6211 windows \u4e0b\u7684 ipconfig \u547d\u4ee4\uff0c\u6548\u679c\u7c7b\u4f3c\u3002 \u5e38\u7528\u4fee\u6539\u6587\u4ef6\u6743\u9650\u7684\u547d\u4ee4\uff1a\uff08\u9996\u5148\u8981\u8fdb\u5165\u6240\u5728\u6587\u4ef6\u5939\uff09 sudo chmod 600 \u00d7\u00d7\u00d7 \uff08\u53ea\u6709\u6240\u6709\u8005\u6709\u8bfb\u548c\u5199\u7684\u6743\u9650\uff09 sudo chmod 644 \u00d7\u00d7\u00d7 \uff08\u6240\u6709\u8005\u6709\u8bfb\u548c\u5199\u7684\u6743\u9650\uff0c\u7ec4\u7528\u6237\u53ea\u6709\u8bfb\u7684\u6743\u9650\uff09 sudo chmod 700 \u00d7\u00d7\u00d7 \uff08\u53ea\u6709\u6240\u6709\u8005\u6709\u8bfb\u548c\u5199\u4ee5\u53ca\u6267\u884c\u7684\u6743\u9650\uff09 sudo chmod 666 \u00d7\u00d7\u00d7 \uff08\u6bcf\u4e2a\u4eba\u90fd\u6709\u8bfb\u548c\u5199\u7684\u6743\u9650\uff09 sudo chmod 777 \u00d7\u00d7\u00d7 \uff08\u6bcf\u4e2a\u4eba\u90fd\u6709\u8bfb\u548c\u5199\u4ee5\u53ca\u6267\u884c\u7684\u6743\u9650\uff09","title":"022 \u4e4c\u73ed\u56fe\u5e38\u7528\u6307\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/023-ubuntu\u5b89\u88c5anaconda/","text":"1\u3001 \u5230\u5b98\u7f51 http://continuum.io/downloads \u4e0b\u8f7danaconda 2\u3001 \u5b89\u88c5anaconda\uff0c\u5728\u7ec8\u7aef\u8f93\u5165: 3 \u5229\u7528bash\u8fdb\u884c\u5b89\u88c5\uff1a \u6839\u636e\u63d0\u793a\u8f93\u5165\u56de\u8f66\uff1a \u9605\u8bfb\u5b8c\u6ce8\u518c\u4fe1\u606f\u540e\uff0c\u8fd9\u91cc\u8f93\u5165\u201cyes\u201d \u8f93\u5165 yes\u56de\u8f66\u540e\u51fa\u73b0\u8be5\u754c\u9762\uff1a\u76f4\u63a5\u6309\u56de\u8f66\u8fdb\u884c\u5b89\u88c5\u5373\u53ef\uff1a \u5b8c\u6210\u5b89\u88c5\u540e\u4f1a\u51fa\u73b0\u95ee\u4f60\u662f\u5426\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a\u8fd9\u91cc\u8f93\u5165yes\u5e76\u56de\u8f66 \u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u4ee5\u540e\u8f93\u5165conda\u662f\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u7684\u3002\u9700\u8981\u9000\u51fa\u7ec8\u7aef\u91cd\u65b0\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef \u6253\u5f00\u65b0\u7684\u7ec8\u7aef\u4ee5\u540e\u8f93\u5165conda\u5373\u53ef\u663e\u793a\uff1a \u8f93\u5165spyder\uff1a\u542f\u52a8spyder\u7f16\u8bd1\u5668\u8fdb\u884cpython\u4ee3\u7801\u7684\u7f16\u5199\uff1a \u6ce8\u610f\u6709\u65f6\u4f1a\u51fa\u73b0\u8be5\u79cd\u60c5\u51b5\uff1a \u8fd9\u65f6\u5728\u7ec8\u7aef\u91cc\u8f93\u5165\u56fe\u7247\u4e2d\u7684\u8bed\u53e5\uff1a \u6700\u540e\u51fa\u73b0\u8fd9\u4e2a\u754c\u9762\u4ee5\u540e\u8f93\u5165y \u8fdb\u884c\u5b89\u88c5\uff1a \u5b89\u88c5\u5b8c\u6210\u540e\u518d\u6b21\u8f93\u5165spyder\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff1a \u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u7528\u5c31\u65b0\u5efa\u4e00\u4e2apython\u73af\u5883\uff1a","title":"023 ubuntu\u5b89\u88c5anaconda"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/024-ubuntu\u7cfb\u7edf\u4e0bmatplotlib\u4e2d\u6587\u4e71\u7801\u95ee\u9898/","text":"**ubuntu**\u7cfb\u7edf\u4e0bmatplotlib\u4e2d\u6587\u4e71\u7801\u95ee\u9898 \u5728 ubuntu \u4e0b\u5229\u7528matplotlib \u7ed8\u56fe\u7684\u65f6\u5019\uff0c\u56fe\u50cf\u4e0a\u4e2d\u6587\u65e0\u6cd5\u663e\u793a\u3002\u4ee5\u4e0b\u662f\u6211\u7684\u89e3\u51b3\u529e\u6cd5\uff1a **1. \u4e0b\u8f7d\u4e2d\u6587\u5b57\u4f53simhei.ttf, \u7f51\u5740**\u4e3a http://fontzone.net/download/simhei 2. \u641c\u7d22 matplotlib \u5b57\u4f53\u7684\u5b89\u88c5\u4f4d\u7f6e $locate -b '\\mpl-data' \u4f1a\u5f97\u5230 \u8fd9\u4e2a\u8def\u5f84 /usr/share/matplotlib/mpl-data \u4e0b\u9762\u6709 fonts/ttf \u8fd9\u4e2a\u76ee\u5f55\uff0c\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\uff0c\u628a\u521a\u624d\u4e0b\u8f7d\u7684simhei.ttf \u5b57\u4f53\u590d\u5236\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0b\uff0c\u6ce8\u610f\u6743\u9650\u548c\u5f52\u5c5e\u662f\u5426\u4e0e\u5176\u5b83\u5b57\u4f53\u4e00\u81f4\uff0c\u6211\u7684\u662f\u5f52\u4e8e root \u7528\u6237\u7684\uff0c\u6240\u4ee5\u7528root \u7528\u6237\u590d\u5236\u8fc7\u6765\u3002 3. \u5220\u9664\u5f53\u524d\u7528\u6237matplotlib \u7684\u7f13\u51b2\u6587\u4ef6\uff08\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u8fdb\u5165\u7b2c\u56db\u6b65\uff09 $cd ~/.cache/matplotlib $rm -rf *.* 4.\u4ee3\u7801\u4e2d\u8c03\u6574\u5b57\u4f53 #!/usr/bin/env python #coding:utf-8 \"\"\"a demo of matplotlib\"\"\" import matplotlib as mpl from matplotlib import pyplot as plt mpl . rcParams [ u 'font.sans-serif' ] = [ 'simhei' ] mpl . rcParams [ 'axes.unicode_minus' ] = False years = [ 1950 , 1960 , 1970 , 1980 , 1990 , 2000 , 2010 ] gdp = [ 300.2 , 543.3 , 1075.9 , 2862.5 , 5979.6 , 10289.7 , 14958.3 ] #\u521b\u5efa\u4e00\u526f\u7ebf\u56fe,x\u8f74\u662f\u5e74\u4efd,y\u8f74\u662fgdp plt . plot ( years , gdp , color = 'green' , marker = 'o' , linestyle = 'solid' ) #\u6dfb\u52a0\u4e00\u4e2a\u6807\u9898 plt . title ( u '\u540d\u4e49GDP' ) #\u7ed9y\u8f74\u52a0\u6807\u8bb0 plt . ylabel ( u '\u5341\u4ebf\u7f8e\u5143' ) plt . show () \u5176\u4e2d #coding:utf-8 \u8bf4\u660e\u6587\u4ef6\u7f16\u7801\u683c\u5f0f mpl.rcParams[u'font.sans-serif'] = ['simhei'] \u7528 simhei \u5b57\u4f53\u663e\u793a\u4e2d\u6587 mpl.rcParams['axes.unicode_minus'] = False \u8fd9\u4e2a\u7528\u6765\u6b63\u5e38\u663e\u793a\u8d1f\u53f7 plt.title(u'\u540d\u4e49GDP') \u8fd9\u91cc\u7684 u \u6700\u597d\u4e0d\u8981\u5c11\u4e3b\u8981\u662f\u8ba9\u5176\u7f16\u7801\u662f utf-8","title":"024 ubuntu\u7cfb\u7edf\u4e0bmatplotlib\u4e2d\u6587\u4e71\u7801\u95ee\u9898"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/025-\u5728\u5c40\u57df\u7f51\u5185Ubuntu\u548cWindows\u4e4b\u95f4\u5b9e\u73b0\u5171\u4eab\u6587\u4ef6\u6559\u7a0b/","text":"\u5728\u5c40\u57df\u7f51\u5185 Ubuntu \u548c Windows \u4e4b\u95f4\u5b9e\u73b0\u5171\u4eab\u6587\u4ef6\u6559\u7a0b \u5728\u5c40\u57df\u7f51\u5185Ubuntu\u548cWindows\u4e4b\u95f4\u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u5171\u4eab\u6587\u4ef6\u7684\uff0c\u90a3\u4e48Ubuntu\u548cWindows\u4e4b\u95f4\u600e\u4e48\u5171\u4eab\u6587\u4ef6\uff0c\u4e0b\u9762\u4ee5\u56fe\u6587\u7684\u5f62\u5f0f\u4e3a\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e0b \u5f88\u591a\u4eba\u5bf9Ubuntu\u5171\u4eab\u6587\u4ef6\u76d2Windows\u5171\u4eab\u6587\u4ef6\u90fd\u6bd4\u8f83\u719f\u6089\uff0c\u4e5f\u77e5\u9053\u600e\u4e48\u5728\u5c40\u57df\u7f51\u5185Ubuntu\u548cWindows\u5404\u81ea\u7684\u7cfb\u7edf\u4e4b\u95f4\u600e\u4e48\u5171\u4eab\u6587\u4ef6\u3002\u5176\u5b9e\u5728\u5c40\u57df\u7f51\u5185Ubuntu\u548cWindows\u4e4b\u95f4\u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u5171\u4eab\u6587\u4ef6\u7684\uff0c\u90a3\u4e48Ubuntu\u548cWindows\u4e4b\u95f4\u600e\u4e48\u5171\u4eab\u6587\u4ef6\u5462\uff1f \u5728Ubuntu\u4e0a\u5b9e\u73b0\u5c40\u57df\u7f51\u5171\u4eab\u6587\u4ef6\u5939 \u5982\u679c\u4f60\u7684\u7cfb\u7edf\u662fUbuntu 14.04\u300114.10\u621612.04\uff0c\u6709\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u4f60\u901a\u8fc7\u5c40\u57df\u7f51\u5728\u642d\u8f7dWindows\u6216\u5176\u4ed6Linux\u7684\u7535\u8111\u4e0a\u5171\u4eab\u672c\u5730\u6587\u4ef6\u3002 \u5bf9\u5c40\u57df\u7f51\u4e2d\u7684\u6bcf\u4e2a\u7528\u6237\u63d0\u4f9b\u65e0\u5bc6\u7801\u5171\u4eab \u4ec5\u9650\u7279\u5b9a\u8bbf\u95ee\uff0c\u63d0\u4f9b\u6587\u4ef6\u5939\u5bc6\u7801\u4fdd\u62a4 \u8fd9\u7bc7\u6587\u7ae0\u5305\u62ec\u4e24\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4f60\u60f3\u7528\u7684\u90a3\u79cd \u5c40\u57df\u7f51\u65e0\u5bc6\u7801\u5171\u4eab\u6587\u4ef6\u5939 \u6b65\u9aa4\u4e00\uff1a \u4e3a\u4e86\u5728Ubuntu\u4e0a\u5b9e\u73b0\u5c40\u57df\u7f51\u5171\u4eab\u6587\u4ef6\u5939\uff0c\u53f3\u952e\u70b9\u51fb\u6253\u7b97\u5171\u4eab\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u9009\u62e9\u201cLocal Network Share\uff08\u672c\u5730\u7f51\u7edc\u5171\u4eab\uff09\u201d\uff1a \u53ef\u80fd\u6709\u7528\u7684\u6545\u969c\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u5728\u53f3\u952e\u83dc\u5355\u4e2d\u770b\u4e0d\u5230\u201cLocal Network Share\u201d\u7684\u9009\u9879\uff0c\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u7ec8\u7aef\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u53bb\u5b89\u88c5nautlius-share\u63d2\u4ef6\uff1a sudo apt-get install nautilus-share \u7136\u540e\u91cd\u542fNautilus\u3002\u53ef\u4ee5\u9009\u62e9\u6ce8\u9500\u518d\u767b\u5f55\uff0c\u6216\u8005\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff1a nautilus -q \u6b65\u9aa4\u4e8c\uff1a \u4e00\u65e6\u70b9\u51fb\u201cLocal Network Share\u201d\uff0c\u5c31\u4f1a\u51fa\u73b0\u5171\u4eab\u6587\u4ef6\u5939\u7684\u9009\u9879\u3002\u53ea\u9700\u9009\u4e2d\u201cShare this folder\uff08\u5171\u4eab\u8be5\u6587\u4ef6\u5939\uff09\u201d\u8fd9\u4e00\u9879\uff1a \u53ef\u80fd\u7684\u6545\u969c\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u63d0\u793a\u5171\u4eab\u670d\u52a1\u8fd8\u672a\u5b89\u88c5\uff0c\u5c31\u50cf\u4e0b\u56fe\u6240\u793a\uff0c\u90a3\u5c31\u70b9\u51fb\u5b89\u88c5\u670d\u52a1\uff0c\u6309\u7167\u63d0\u793a\u64cd\u4f5c\u3002 \u6b65\u9aa4\u4e09\uff1a \u5f53\u9009\u4e2d\u201cShare this folder\u201d\u7684\u9009\u9879\uff0c\u5c31\u4f1a\u770b\u5230\u6309\u94ae\u201cCreate Share\uff08\u521b\u5efa\u5171\u4eab\uff09\u201d\u53d8\u5f97\u53ef\u4ee5\u70b9\u51fb\u4e86\u3002\u4f60\u4e5f\u53ef\u4ee5\u201cAllow others to create and delete fies in this folder\uff08\u5141\u8bb8\u5176\u4ed6\u7528\u6237\u5728\u5171\u4eab\u6587\u4ef6\u5939\u4e2d\u7f16\u8f91\u6587\u4ef6\uff09\u201d\u3002\u9009\u9879\u201cGuest access\uff08\u5141\u8bb8\u8bbf\u5ba2\u8bbf\u95ee\uff09\u201d\u4e5f\u662f\u5982\u6b64\u3002 \u4f60\u4f1a\u770b\u5230\u6587\u4ef6\u5939\u56fe\u6807\u5df2\u7ecf\u663e\u793a\u4e3a\u5171\u4eab\u7684\u3002\u5982\u679c\u8981\u505c\u6b62\u5171\u4eab\u6587\u4ef6\u5939\uff0c\u53ea\u9700\u53d6\u6d88\u201cShare this floder\u201d\u8fd9\u4e2a\u9009\u9879\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u4f7f\u5f97\u5c40\u57df\u7f51\u4e2d\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u9009\u62e9\u8fd9\u79cd\u65b9\u5f0f\u3002\u56e0\u4e3a\uff0c\u5bb6\u7528\u5c40\u57df\u7f51\u4e2d\u7684\u7535\u8111\u901a\u5e38\u90fd\u662f\u53ef\u4fe1\u7535\u8111\u3002\u4f46\u60c5\u51b5\u4e5f\u4e0d\u603b\u662f\u8fd9\u6837\u3002\u5982\u679c\u4f60\u53ea\u662f\u60f3\u7279\u5b9a\u7684\u7528\u6237\u624d\u80fd\u8bbf\u95ee\u600e\u4e48\u529e\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981Samba\u670d\u52a1\u5668\u4e86\u3002\u6211\u4eec\u5728\u672c\u6587\u7684\u7b2c\u4e8c\u90e8\u5206\u8ba8\u8bba\u8fd9\u79cd\u65b9\u6cd5\u3002\u4e0a\u4e00\u987512\u4e0b\u4e00\u9875\u51712\u9875 2. \u5728Ubuntu\u4e0a\u4f7f\u7528\u5bc6\u7801\u4fdd\u62a4\u5b9e\u73b0\u5c40\u57df\u7f51\u5171\u4eab\u6587\u4ef6\u5939 \u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u9996\u5148\u9700\u8981\u914d\u7f6eSamba\u670d\u52a1\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u8fd9\u7bc7\u6559\u7a0b\u7684\u524d\u4e00\u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u7528\u5230\u4e86Samba\uff0c\u53ea\u662f\u6211\u4eec\u6ca1\u6709\u523b\u610f\u5f3a\u8c03\u3002\u5728\u4ecb\u7ecd\u5982\u4f55\u5728Ubuntu\u4e0a\u642d\u5efaSamba\u670d\u52a1\u5668\u5b9e\u73b0\u5c40\u57df\u7f51\u5171\u4eab\u7684\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u5feb\u901f\u9884\u89c8\u4e00\u4e0bSamba\u5230\u5e95\u662f\u4ec0\u4e48\u3002 Samba\u662f\u4ec0\u4e48\uff1f Samba\u662f\u4e00\u4e2a\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u7f51\u7edc\u5171\u4eab\u6587\u4ef6\u3001\u6587\u6863\u548c\u6253\u5370\u673a\u7684\u8f6f\u4ef6\u5305\uff0c\u65e0\u8bba\u662f\u5728Linux\u3001Windows\uff0c\u8fd8\u662fMac\u4e0a\u3002\u5b83\u9002\u7528\u4e8e\u6240\u6709\u7684\u4e3b\u6d41\u5e73\u53f0\uff0c\u53ef\u4ee5\u5728\u6240\u6709\u652f\u6301\u7cfb\u7edf\u4e0a\u6d41\u7545\u8fd0\u884c\u3002\u4e0b\u9762\u662f\u7ef4\u57fa\u767e\u79d1\u7684\u4ecb\u7ecd\uff1a Samba\u662f\u4e00\u6b3e\u91cd\u65b0\u5b9e\u73b0SMB/CIFS\u7f51\u7edc\u534f\u8bae\u7684\u81ea\u7531\u8f6f\u4ef6\uff0c\u6700\u521d\u7531\u5b89\u5fb7\u9c81\u00b7\u5782\u9e20\u5f00\u53d1\u3002\u5728\u7b2c\u4e09\u7248\u4e2d\uff0cSmaba\u4e0d\u4ec5\u652f\u6301\u901a\u8fc7\u4e0d\u540c\u7684Windows\u5ba2\u6237\u7aef\u8bbf\u95ee\u53ca\u5206\u4eabSMB\u7684\u6587\u4ef6\u5939\u53ca\u6253\u5370\u673a\uff0c\u8fd8\u53ef\u4ee5\u96c6\u6210\u5230Windows Server\u57df\uff0c\u4f5c\u4e3a\u4e3b\u57df\u63a7\u5236\u5668\uff08PDC\uff09\u6216\u8005\u57df\u6210\u5458\u3002\u5b83\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6d3b\u52a8\u76ee\u5f55\u57df\u7684\u4e00\u90e8\u5206\u3002 \u5728Ubuntu\u4e0a\u5b89\u88c5Samba\u670d\u52a1\u5668 \u4f60\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728Ubuntu\u7535\u8111\u4e0a\u5b89\u88c5Samba\u3002\u5b89\u88c5\u524d\uff0c\u8bf7\u5148\u66f4\u65b0\u7cfb\u7edf\u4ee5\u4fbf\u5b89\u88c5\u4efb\u4f55\u53ef\u7528\u7684\u66f4\u65b0\u3002 sudo apt-get update && apt-get upgrade \u7136\u540e\u6309\u7167\u8fd9\u6761\u547d\u4ee4\u5b89\u88c5samba\u548c\u5c11\u91cf\u6240\u9700\u7684\u8f6f\u4ef6\u5305\uff1a sudo apt-get install samba samba-common system-config-samba python-glade2 gksu \u4e00\u65e6\u5b89\u88c5\u5b8c\u6210Samba\u670d\u52a1\u5668\uff0c\u5c31\u53ef\u4ee5\u4ece\u56fe\u5f62\u754c\u9762\u914d\u7f6eSamba\u6765\u5206\u4eab\u6587\u4ef6\u3002 Ubuntu\u548cWindows\u4e4b\u95f4\u600e\u4e48\u5171\u4eab\u6587\u4ef6\u5c31\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5230\u8fd9\u91cc\u4e86\u3002\u5176\u5b9e\u4e0d\u4ec5\u662fUbuntu\u7cfb\u7edf\uff0c\u5728Linux\u5176\u4ed6\u7cfb\u7edf\u4e0a\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u662f\u540c\u6837\u6709\u7528\u7684\u3002","title":"025 \u5728\u5c40\u57df\u7f51\u5185Ubuntu\u548cWindows\u4e4b\u95f4\u5b9e\u73b0\u5171\u4eab\u6587\u4ef6\u6559\u7a0b"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/026-Ubuntu18-04-\u95ee\u9898\u2014\u2014\u65e0\u6cd5\u5b89\u5168\u5730\u7528\u8be5\u6e90\u8fdb\u884c\u66f4\u65b0\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7981\u7528\u8be5\u6e90\u3002/","text":"\u95ee\u9898 \u5728\u6dfb\u52a0\u4ed3\u5e93 add-apt-repository \u6216\u8005\u66f4\u65b0 apt-get update \u547d\u4ee4\u663e\u793a\u9519\u8bef \u5982\uff1a \u5373\u4fbf\u4fee\u6539\u4e86\u4e0b\u8f7d\u6e90\u4e5f\u662f\u9519\u8bef\uff0c\u53ea\u662fIP \u4e0d\u540c\uff0c\u90a3\u5c31\u662f\u4ed3\u5e93\u95ee\u9898\u4e86 \u8fd9\u4e2a\u4e0b\u8f7d\u81ea\u7684\u6e90\u3002 \u5bf9\u5e94\u6587\u4ef6\u662f/etc/apt/sources.list #\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u90fd\u5e26\u6709.save\u7684\u5907\u4efd \u9519\u8bef:28 http://ppa.launchpad.net/n-muench/burg/ubuntu bionic Release 404 Not Found [IP: 91.189.95.83 80] \u9519\u8bef:29 http://ppa.launchpad.net/shawn-p-huang/ppa/ubuntu bionic Release 404 Not Found [IP: 91.189.95.83 80] \u8fd9\u4e9b\u9519\u8bef\u662f\u8bf4add-apt-repository\u7684\u8fdc\u7a0b\u4ed3\u5e93\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2aIP\u4e5f\u662fping\u4e0d\u901a\u7684\u3002 \u6dfb\u52a0\u7684\u4ed3\u5e93\u4fdd\u5b58\u5728 /etc/apt/sources.list.d \u76ee\u5f55\u4e0b\u3002\u5220\u9664\u5bf9\u5e94\u7684\u9519\u8bef\u4ed3\u5e93\u6587\u4ef6\u5373\u53ef \u6ce8\u610f,\u6700\u597d\u662f\u4f7f\u7528\u963f\u91cc\u4e91\u7684\u6e90,\u7136\u540e\u628a\u6240\u6709\u7684ppa\u4ece\u8f6f\u4ef6\u66f4\u65b0\u4e2d\u5220\u9664,\u6700\u540e\u5230 /etc/apt/sources.list \u6587\u4ef6\u5939\u4e2d\u5220\u9664\u6240\u6709\u7684\u5e26\u6709ppa\u7684\u6587\u4ef6","title":"026 Ubuntu18-04-\u95ee\u9898\u2014\u2014\u65e0\u6cd5\u5b89\u5168\u5730\u7528\u8be5\u6e90\u8fdb\u884c\u66f4\u65b0\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7981\u7528\u8be5\u6e90\u3002"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/027-\u5982\u4f55\u5728Ubuntu\u4e2d\u4f7f\u7528GNOME-Sushi\u5feb\u901f\u9884\u89c8\u6587\u4ef6/","text":"\u4e0d\u77e5\u9053\u5927\u5bb6\u6709\u6ca1\u9047\u5230\u8fc7\uff0c\u8981\u5728\u6570\u5343\u751a\u81f3\u4e0a\u4e07\u4e2a\u6587\u6863\u4e2d\u67e5\u627e\u7279\u5b9a\u6240\u9700\u6587\u4ef6\u7684\u7ecf\u5386\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u53ea\u80fd\u901a\u8fc7\u641c\u7d22\u6216\u4e00\u4e2a\u4e00\u4e2a\u6253\u5f00\u67e5\u770b\uff0c\u5f53\u7136\u8fd9\u6837\u4f1a\u82b1\u8d39\u4e0d\u5c11\u65f6\u95f4\u8fdb\u884c\u91cd\u590d\u52b3\u52a8\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c31\u6709\u5fc5\u8981\u60f3\u4e00\u4e2a\u529e\u6cd5\u5bf9 Ubuntu \u6587\u4ef6\u8fdb\u884c\u5feb\u901f\u9884\u89c8\uff0c\u4ee5\u5c3d\u53ef\u80fd\u51cf\u5c11\u67e5\u627e\u6587\u4ef6\u7684\u65f6\u95f4\u3002 \u901a\u8fc7\u8d39\u5fc3\u627e\u5bfb\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86 GNOME Sushi \u5de5\u5177\u8fd9\u79cd\u53ef\u5728\u4e0d\u6253\u5f00\u6587\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9 Ubuntu \u4e2d\u6587\u4ef6\u8fdb\u884c\u5feb\u901f\u9884\u89c8\u7684\u529e\u6cd5\uff0c\u8be5\u65b9\u6cd5\u975e\u5e38\u7c7b\u4f3c\u4e8e Mac OS X \u4e2d\u7684\u5feb\u901f\u67e5\u770b\u529f\u80fd\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u5bf9\u6b64\u529e\u6cd5\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u5728\u6b64\u4e4b\u524d\u4e5f\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u4e00\u4e0b\uff0c\u76ee\u524d\u8be5\u65b9\u6cd5\u53ea\u5728 Ubuntu 18.04 LTS \u4e2d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5176\u5b83\u7248\u672c\u548c Ubuntu \u7528\u6237\u9700\u8981\u81ea\u884c\u8bd5\u9a8c\u3002 Ubuntu\u4e2d\u5feb\u901f\u9884\u89c8\u6587\u4ef6 \u7531\u4e8e Ubuntu \u9ed8\u8ba4\u4e0d\u652f\u6301\u5feb\u901f\u9884\u89c8\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u9700\u624b\u52a8\u5b89\u88c5\u4e00\u6b3e\u540d\u4e3a GNOME Sushi \u7684\u5feb\u901f\u9884\u89c8\u5de5\u5177\uff0c\u81ea GNOME Sushi \u5b98\u65b9 GitHub \u9875\u9762\u6240\u8ff0\uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 Nautilus GNOME \u684c\u9762\u6587\u4ef6\u7ba1\u7406\u5668\u7684\u5feb\u901f\u9884\u89c8\u3002 GNOME Sushi \u5df2\u5728 Ubuntu \u5b98\u65b9\u6e90\u4e2d\u8fdb\u884c\u63d0\u4f9b\uff0c\u4f60\u53ef\u4ee5\u5728\u300cUbuntu \u8f6f\u4ef6\u300d\u4e2d\u641c\u7d22\u5b89\u88c5\u6216\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a sudo apt install gnome-sushi gnome-sushi \u5b89\u88c5\u597d\u4e4b\u540e\uff0cUbuntu \u4f1a\u81ea\u52a8\u542f\u7528\u5feb\u901f\u9884\u89c8\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 \u7a7a\u683c\u952e \u5bf9\u4efb\u610f\u9009\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u5feb\u901f\u9884\u89c8\uff0c\u5176\u4e2d\u5305\u62ec\u6587\u672c\u3001\u56fe\u7247\u3001\u89c6\u9891\u751a\u81f3 Bash \u811a\u672c\u7b49\u3002 GNOME Sushi \u7684\u9884\u89c8\u6a21\u5f0f\u4e5f\u4e0d\u4ec5\u9650\u4e8e\u4e00\u79cd\uff0c\u5728\u6253\u5f00\u9884\u89c8\u7a97\u53e3\u540e\uff0c\u5927\u5bb6\u53ef\u901a\u8fc7\u952e\u76d8 F \u952e \u6765\u8fdb\u884c\u9884\u89c8\u6a21\u5f0f\u7684\u5207\u6362\uff0c\u4e5f\u53ef\u4f7f\u7528 ESC \u6216\u518d\u6309\u7a7a\u683c\u952e\u6765\u7ed3\u675f\u9884\u89c8\u3002 \u9664\u4e86\u5e38\u89c1\u6587\u6863\u7c7b\u578b\u5916\uff0c\u8be5\u5de5\u5177\u8fd8\u652f\u6301\u5305\u62ec HTML \u548c PDF \u5728\u5185\u7684\u5bcc\u6587\u6863\u7c7b\u578b\uff0c\u4f46\u5bf9\u4e8e\u6587\u4ef6\u5939\u6765\u8bf4\uff0c\u5b83\u53ea\u80fd\u663e\u793a\u76ee\u5f55\u5927\u5c0f\u3001\u9879\u76ee\u6570\u548c\u4e0a\u6b21\u4fee\u6539\u7684\u65e5\u671f\u548c\u65f6\u95f4\u7b49\u5143\u6570\u636e\u4fe1\u606f\u3002 \u4e0d\u7528\u591a\u8bf4\uff0c\u5728 Ubuntu \u4ee5\u53ca\u5176\u4ed6\u652f\u6301 Nautilus \u7684 Linux \u53d1\u884c\u7248\u4e0a\uff0c\u300c\u5feb\u901f\u9884\u89c8\u300d\u529f\u80fd\u53ef\u4e3a\u4f60\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002\u5982\u679c\u4f60\u7684\u65e5\u5e38\u5de5\u4f5c\u6d89\u53ca\u5728\u5927\u91cf\u4e0d\u540c\u6587\u4ef6\u7c7b\u578b\uff0cGNOME Sushi \u89e3\u51b3\u65b9\u6848\u975e\u5e38\u503c\u5f97\u4e00\u8bd5\u3002\u6700\u540e\u9700\u8981\u4e00\u63d0\uff0c\u8be5\u5de5\u5177\u5bf9\u89c6\u9891\u6587\u4ef6\u7684\u5feb\u901f\u9884\u89c8\u505a\u5f97\u4e5f\u975e\u5e38\u4e0d\u9519\uff0c\u5927\u5bb6\u4eb2\u81ea\u4e00\u8bd5\u5427\u3002","title":"027 \u5982\u4f55\u5728Ubuntu\u4e2d\u4f7f\u7528GNOME-Sushi\u5feb\u901f\u9884\u89c8\u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/028-\u4e4c\u73ed\u56fe\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u8def\u5f84/","text":"vi /etc/profile \u6216\u8005 ~/.bashrc \u6dfb\u52a0\u683c\u5f0f\u5982\u4e0b export PATH = /home/gao64/kernel_with_xenomai/u-boot-imx/tools: $PATH \u65b9\u6cd51\uff1a \u5728\u5f53\u671f\u7ec8\u7aef\u8f93\u5165 export PATH =$PATH:/usr/local/bin \u5bf9\u5f53\u524d\u7ec8\u7aef\u6709\u6548\u3002 \u65b9\u6cd5\u4e8c \u5bf9\u5f53\u524d\u7528\u6237\u6709\u6548 vi ~/.bashrc export PATH =<> : <>:$PATH \u591a\u4e2a\u8def\u5f84\u4e4b\u95f4\u4ee5 \uff1a\u5192\u53f7\u5206\u9694\u3002 source ~/.bashrc \u751f\u6548 \u65b9\u6cd5\u4e09\uff1a\u5bf9\u6240\u6709\u7528\u6237\u6709\u6548 vi /etc/profile \u67e5\u770becho $PATH","title":"028 \u4e4c\u73ed\u56fe\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u8def\u5f84"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/029-\u4e4c\u73ed\u56fe\u9f20\u6807\u952e\u76d8\u5ef6\u8fdf\u95ee\u9898--\u5df2/","text":"1.\u5b89\u88c5ccsm \uff1a sudo apt-get install compizconfig-settings-manager 2.\u7981\u7528:\u4e0eVBLANK\u540c\u6b65 \u70b9\u5f00\u7eff\u5708\u4f4d\u7f6e\u753b\u5f97opengl \u753b\u5708 \u4f4d\u7f6e\u7981\u7528,\u53bb\u6389\u5bf9\u53f7","title":"029 \u4e4c\u73ed\u56fe\u9f20\u6807\u952e\u76d8\u5ef6\u8fdf\u95ee\u9898--\u5df2"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/030-\u4e4c\u73ed\u56fe\u81ea\u5e26\u8f93\u5165\u6cd5ibus-\u65e0\u6cd5\u6309\u6570\u5b57\u952e\u53d6\u8bcd/","text":"1.\u6e05\u7406libpinyin\u7684cache\u76ee\u5f55\u76f8\u5173\u6587\u4ef6 rm ~/.cache/ibus/libpinyin/* 2.\u91cd\u542f\u8f93\u5165\u6cd5: ibus restart \u5982\u679c\u9700\u8981\u66f4\u6539\u5019\u9009\u5b57\u4f53\u7684\u5927\u5c0f \u53bb\u8f6f\u4ef6\u5546\u5e97\u4e0b\u8f7d\u4e00\u4e2a\u63d2\u4ef6\u5c31\u53ef\u4ee5\u8fdb\u884c\u8bbe\u7f6e\u4e86,\u5f53\u7136\u8bbe\u7f6e\u5b8c\u6700\u597d\u8fdb\u884c\u4e0a\u9762\u7684\u90a3\u4e9b\u6b65\u9aa4.","title":"030 \u4e4c\u73ed\u56fe\u81ea\u5e26\u8f93\u5165\u6cd5ibus-\u65e0\u6cd5\u6309\u6570\u5b57\u952e\u53d6\u8bcd"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/031-\u4e4c\u73ed\u56fe\u5b89\u88c5\u865a\u62df\u673aVMware/","text":"\u6211\u4eec\u5927\u90e8\u5206\u65e5\u5e38\u7684\u7535\u8111\u7cfb\u7edf\u90fd\u662fwindows\uff0c\u5728windows\u4e0b\u5b89\u88c5\u865a\u62df\u673a\u5de5\u5177\u5927\u5bb6\u57fa\u672c\u4e0a\u90fd\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4e5f\u6709\u90e8\u5206\u7cfb\u7edf\u5b89\u88c5\u7684\u662flinux\uff0c\u5982ubuntu\u7b49\uff0c\u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0b\u5b89\u88c5\u865a\u62df\u673a\u7684\u8bdd\uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5\u865a\u62df\u673a\u8f6f\u4ef6\uff0c\u5982linux\u7248\u7684vmware\u3001\u5f00\u6e90\u7684virtualbox\u7b49\u3002\u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u5728ubuntu\u7cfb\u7edf\u4e0b\u5b89\u88c5vmware\u5de5\u5177\u3002 1.\u9996\u5148\uff0c\u5728vmware\u5b98\u7f51\u4e0a\u4e0b\u8f7dlinux\u7248\u7684vmware workstation\u3002 https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0 2\u3001\u5b89\u88c5 \u51c6\u5907\u5de5\u4f5c\u4e2d\u4e0b\u8f7d\u4e0b\u6765\u7684Linux \u7248\u672cVMware\u540e\u7f00\u662f.bundle\u7684\uff0c\u597d\u5947\u602a\uff0c\u5728Windows\u4e0b\u90fd\u6ca1\u89c1\u8fc7\u8fd9\u4e2a\u3002 1\u3001\u628a\u4e0b\u8f7d\u4e0b\u6765\u7684VMware\u653e\u5728\u7528\u6237\u76ee\u5f55\u4e0b\uff0c\u5373\u8ddf\u684c\u9762\u5904\u4e8e\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u4e0d\u7136\u5f85\u4f1a\u5b89\u88c5\u4f1a\u51fa\u73b0\u201croot access is required for the operations you have chosen\u201d\u7684\u9519\u8bef\u3002\u6216\u8005\u503c\u76f4\u63a5\u5728\u4f60\u7684\u6587\u4ef6\u5939\u4e2d\u6253\u5f00\u7ec8\u7aef.\u5927\u5bb6\u65e2\u7136\u4f7f\u7528\u4e4c\u73ed\u56fe\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86. 2\u3001\u7ed9VMware.bundle\u52a0\u53ef\u6267\u884c\u6743\u9650sudo chmod+x VMware.bundle(\u4e0b\u8f7d\u4e0b\u6765\u7684\u6587\u4ef6\u540d\u5f88\u957f\uff0c\u5efa\u8bae\u6539\u77ed\uff0c\u65b9\u4fbf\u64cd\u4f5c) sudo chmod +x VMware-Workstation-Full-15.0.2-10952284.x86_64.bundle 3\u3001\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 sudo./VMware.bundle \uff0c\u7136\u540e\u5c31\u4f1a\u5f39\u51fa\u56fe\u5f62\u5316\u754c\u9762\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5c31\u8ddfWindows\u4e0b\u5b89\u88c5\u4e00\u6837\uff0c\u4e2d\u9014\u4f1a\u8ba9\u4f60\u8f93\u5165Key\uff0c \u8f93\u5165\u6fc0\u6d3b\u7801\u968f\u4fbf\u767e\u5ea6\u4e00\u5927\u5806. YG5H2-ANZ0H-M8ERY-TXZZZ-YKRV8 UG5J2-0ME12-M89WY-NPWXX-WQH88 UA5DR-2ZD4H-089FY-6YQ5T-YPRX6 GA590-86Y05-4806Y-X4PEE-ZV8E0 ZF582-0NW5N-H8D2P-0XZEE-Z22VA YA18K-0WY8P-H85DY-L4NZG-X7RAD \u76f4\u63a5\u5b89\u88c5\u597d\u4e86\u53ef\u80fd\u6ca1\u6cd5\u76f4\u63a5\u4f7f\u7528,\u56e0\u4e3a\u6ca1\u6709GCC\u7f16\u8bd1\u73af\u5883 \u90a3\u5c31\u5b89\u88c5\u4e00\u4e2a\u5c31\u597d\u4e86 \u5728Ubuntu\u4e0b\u5b89\u88c5GCC\u548c\u5176\u4ed6\u4e00\u4e9bLinux\u7cfb\u7edf\u6709\u70b9\u4e0d\u4e00\u6837\u3002 \u65b9\u6cd5\u4e00: sudo apt-get build-dep gcc \u6211\u6ca1\u6709\u6210\u529f \u65b9\u6cd5\u4e8c: sudo apt-get install build-essential \u8fd9\u4e2a\u6210\u529f\u4e86 \u5b89\u88c5\u5b8c\u4e86\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u67e5\u770b\u7248\u672c\uff0c gcc --version \u7136\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u4f7f\u7528\u4e86: \u5f00\u5fc3\u7684\u71e5\u8d77\u6765\u5427","title":"031 \u4e4c\u73ed\u56fe\u5b89\u88c5\u865a\u62df\u673aVMware"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/032-\u4e4c\u73ed\u56fe\u7cfb\u7edf\u7684\u539f\u7248\u4f18\u5316\u914d\u7f6e/","text":"","title":"032 \u4e4c\u73ed\u56fe\u7cfb\u7edf\u7684\u539f\u7248\u4f18\u5316\u914d\u7f6e"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/033-\u4e4c\u73ed\u56fe\u4e0bAnaconda\u73af\u5883\u7684\u4f7f\u7528/","text":"Anaconda\u521b\u5efa\u73af\u5883\uff1a \u4e0b\u9762\u662f\u521b\u5efapython=3.6\u7248\u672c\u7684\u73af\u5883\uff0c\u53d6\u540d\u53ebpy36 conda create -n py36 python=3.6 \u5220\u9664\u73af\u5883\uff08\u4e0d\u8981\u4e71\u5220\u554a\u554a\u554a\uff09 conda remove -n py36 --all \u6fc0\u6d3b\u73af\u5883 \u4e0b\u9762\u8fd9\u4e2apy36\u662f\u4e2a\u73af\u5883\u540d source activate py36 \u9000\u51fa\u73af\u5883 source deactivate","title":"033 \u4e4c\u73ed\u56fe\u4e0bAnaconda\u73af\u5883\u7684\u4f7f\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/034-\u4e4c\u73ed\u56fe\u6700\u597d\u7528\u7684\u622a\u56fe\u8f6f\u4ef6\u7684\u5b89\u88c5/","text":"flameshot\u7684\u5b89\u88c5,\u5728Terminal\u7ec8\u7aef\u8f93\u5165\u4e0b\u5217\u4ee3\u7801\uff1a sudo apt-get install flameshot \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u7ec8\u7aef\u8f93\u5165\u4e0b\u5217\u4ee3\u7801\u5373\u53ef\u542f\u52a8flmaeshot: \u5bf9\u4e8e LinuxMint 18.x \u548c Ubuntu 16.04 \u7cfb\u5217\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u7528\u6253\u5305\u597d\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u53cc\u51fb\u5b89\u88c5\u5373\u53ef\uff0c\u4e0b\u8f7d\u5730\u5740\uff1a Flameshot 64bit DEB\uff1a https://github.com/lupoDharkael/flameshot/releases/download/v0.5.1/flameshot_0.5.1-xenial-x86_64.deb Flameshot 64bit Appimage\uff1a https://github.com/lupoDharkael/flameshot/releases/download/v0.5.1/flameshot_x86_64_0.5.1.AppImage \u8bbe\u7f6e\u622a\u56fe\u5feb\u6377\u952e\uff1a Ctrl+Alt+A \u6253\u5f00\u8bbe\u7f6e\uff1a \u4e0b\u4e00\u6b65\uff1a \u540c\u65f6\u6309\u4f4f\u952e\u76d8\u4e0a\u7684 Ctrl+Alt+A, \u4e09\u4e2a\u6309\u952e\uff0c\u5373\u53ef\u8bbe\u7f6e\u4e3a\u5feb\u6377\u952e \u6700\u540e\u70b9\u51fb Add \u5373\u53ef\uff1a \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u6309\u4e0bCtrl+Alt+A \u5373\u4f1a\u51fa\u73b0\u622a\u56fe\u622a\u9762","title":"034 \u4e4c\u73ed\u56fe\u6700\u597d\u7528\u7684\u622a\u56fe\u8f6f\u4ef6\u7684\u5b89\u88c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/035-\u4e4c\u73ed\u56fe\u5b89\u88c5\u5f3a\u5927\u7684\u7ec8\u7aef-Terminator/","text":"1.\u5b89\u88c5:\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4: sudo apt-get install terminator 2.\u8bbe\u7f6e\u9ed8\u8ba4\u7ec8\u7aef \u4e3a Terminator gsettings set org.gnome.desktop.default-applications.terminal exec /usr/bin/terminator gsettings set org.gnome.desktop.default-applications.terminal exec-arg \"-x\" \u6ce8\u610f:\u8bbe\u7f6e\u9ed8\u8ba4\u7ec8\u7aef \u4e3a gnome-terminal gsetting set org.gnome.desktop.default-applications.terminal exec /usr/bin/gnome-terminal gsettings set org.gnome.desktop.default-applications.terminal exec-arg \"-x\" \u6ce8:\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u7ec8\u7aef,\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981. \u5728\u53f3\u952e\u83dc\u5355\u6253\u5f00\u7ec8\u7aef\u65f6\u6253\u5f00\u7684\u4f9d\u65e7\u662f\u9ed8\u8ba4\u7684\u4e4c\u73ed\u56fe\u7ec8\u7aef. \u4f46\u662f\u4f7f\u7528\u5feb\u6377\u952e ctrl+alt+T\u6253\u5f00\u7684\u662f\u6211\u4eec\u5b89\u88c5\u597d\u7684\u7ec8\u7aefTerminator.\u6211\u4eec\u628a\u5b83\u6dfb\u52a0\u5230\u6536\u85cf\u5939\u5373\u53ef. 3.\u4fee\u6539\u914d\u8272\u65b9\u6848 \u5728\u7ec8\u7aef\u7a7a\u767d\u5904\u4e2d\u6253\u5f00\u53f3\u952e\u83dc\u5355->\u914d\u7f6e\u6587\u4ef6\u9996\u9009\u9879 \u5269\u4e0b\u7684\u600e\u4e48\u914d\u7f6e\u770b\u81ea\u5df1\u5fc3\u60c5\u4e86 4\u5e38\u7528\u5feb\u6377\u952e Ctrl+Alt+T \u6253\u5f00\u7ec8\u7aef Ctrl+l \u76f8\u5f53\u4e8eclear\uff0c\u5373\u6e05\u5c4f Shift+Ctrl+T \u6253\u5f00\u65b0\u7684\u6807\u7b7e\u9875 Shift+Ctrl+W \u5173\u95ed\u6807\u7b7e\u9875 Shift+Ctrl+C \u590d\u5236 Shift+Ctrl+V \u7c98\u8d34 Shift+Ctrl+N \u6253\u5f00\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3 Shift+Ctrl+o \u4e0a\u4e0b\u62c6\u5206\u5c4f\u5e55 Shift+Ctrl+e \u5de6\u53f3\u62c6\u5206\u5c4f\u5e55 Shift+Ctrl+w \u5173\u95ed\u5f53\u524d\u7a97\u53e3 Shift+Ctrl+q \u5173\u95ed\u6574\u4e2a\u7ec8\u7aef F11 \u5168\u5c4f\u5207\u6362 Ctrl + Page Down/ Page Up \u5207\u6362\u6807\u7b7e\u9875 5.\u770b\u770b\u6548\u679c\u5427(\u900f\u660e\u7684\u80cc\u666f)","title":"035 \u4e4c\u73ed\u56fe\u5b89\u88c5\u5f3a\u5927\u7684\u7ec8\u7aef-Terminator"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/036-\u4e3a\u706b\u72d0\u6d4f\u89c8\u5668\u5b89\u88c5flash\u63d2\u4ef6/","text":"1.\u5230aodbe\u5b98\u65b9\u4e0b\u8f7d\u8f6f\u4ef6\u5305\uff0cget.aodbe.com/flash\uff0c\u5982\u56fe1\uff1b\u9009\u62e9\u6211\u4eec\u9700\u8981\u7684\u8f6f\u4ef6\u5305\uff0c\u4e00\u822c\u9009\u62e9\u9009\u8005.tar.gz\u5305\uff0c\u5982\u56fe2\uff1b\u70b9\u4e0b\u8f7d\u3002 2.\u6253\u5f00\u7ec8\u7aef\uff0c\u5feb\u6377\u952eCtrl+Alt+T\uff0c\u8f93\u5165\u547d\u4ee4\u201cls\u201d\u4f1a\u7ed9\u4f60\u5217\u51fa\u4e3b\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u53ca\u6587\u4ef6\u5939\uff1b \u9ed8\u8ba4\u4e0b\u8f7d\u4e3aDownloads, \u8f93\u5165\u547d\u4ee4\u201c cd Downloads \u201d,\u5207\u6362\u5230Downloads\u6587\u4ef6\u5939\uff0c \u518d\u6b21\u201cls\u201d,\u770b\u5230\u6211\u4eec\u521a\u624d\u4e0b\u8f7d\u7684Flash\u63d2\u4ef6\u5305\u3002\u5982\u56fe3\uff0c4\u6240\u793a\u3002\u8f93\u5165\u547d\u4ee4 tar-zxvf \u8f6f\u4ef6\u5305\u540d\u5b57 \u201d\uff08Ubuntu\u7ec8\u7aef\u6709\u4e2a\u5c0ftip,\u5f53\u6587\u4ef6\u5939\u91cc\u53ea\u6709\u5f88\u5c11\u7c7b\u4f3c\u540d\u5b57\u7684\u6587\u4ef6\u65f6\uff0c\u8f93\u5165\u67d0\u6587\u4ef6\u5939\u7684\u524d\u51e0\u4e2a\u5b57\u6bcd\u7136\u540e Tab\uff0c\u5c31\u4f1a\u5e2e\u4f60\u8f93\u5165\u5168\u7a0b\uff0c\u975e\u5e38\u65b9\u4fbf\uff09\u3002 3.\u89e3\u538b\u540e\u5982\u56fe5\uff1b\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u628a\u56fe5\u4e2d\u7ea2\u8272\u6846\u91cc\u7684\u6587\u4ef6\u590d\u5236\u5230\u706b\u72d0\u6d4f\u89c8\u5668\u7684\u63d2\u4ef6\u76ee\u5f55\uff0c \u5207\u6362\u5230\u7ec8\u7aef\uff0c\u8f93\u5165\u547d\u4ee4\u201cls\u201d\uff0c\u5982\u56fe6\uff1b\u8f93\u5165\u547d\u4ee4\u201csudo cp libflashplayer.so /usr/lib/mozilla/plugins/ \u201d \uff08\u8fd9\u91cc\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff0c\u6240\u4ee5\u4f1a\u8ba9\u4f60\u8f93\u5165\u4e00\u6b21\u5bc6\u7801\uff0c\u5bc6\u7801\u4e0d\u663e\u793a\u7684\uff0c\u4f60\u53ea\u8981\u786e\u4fdd\u4f60\u8f93\u5165\u5bf9\u4e86\uff0c\u56de\u8f66\u952e\u5c31OK\u4e86\uff09 . 4.\u7136\u540e\u547d\u4ee4\u884c\u7ee7\u7eed\u8f93\u5165\u547d\u4ee4 \u201csudo cp -r ./usr/*/usr/\u201d \u5c06usr\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u6863\u62f7\u8d1d\u5230\u7cfb\u7edf\u7684/usr\u76ee\u5f55\u4e0b\uff0c \u5982\u679c\u4e0d\u5e26sudo \u90a3\u4f1a\u63d0\u793a\u4f60\u6743\u9650\u4e0d\u591f.\u5230\u6b64\u5b89\u88c5\u5b8c\u6210\uff0c\u91cd\u542f\u6d4f\u89c8\u5668\uff0c\u518d\u6253\u5f00\u89c6\u9891\u7f51\u7ad9\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u64ad\u653e\u4e86\uff1b\u5982\u56fe7\u6240\u793a\u3002 5.\u5b66\u5b8c\u6709\u70b9\u96be\u7684\uff0c\u6700\u540e\u7ed9\u5927\u5bb6\u8bf4\u4e2a\u7b80\u5355\u7684\u5427\uff0cUbuntu\u7cfb\u7edf\u81ea\u5e26\u7684\u8f6f\u4ef6\u4e2d\u5fc3\uff0c \u6253\u5f00\u641c\u7d22\uff0c\u5173\u952e\u5b57\u201cFlash\u201d,\u70b9\u51fb\u5b89\u88c5\uff0c\u7b49\u5f85\u7ed3\u675f\uff0c\u91cd\u542f\u6d4f\u89c8\u5668\uff0c\u4e00\u6837\u80fd\u8fbe\u5230\u4e0a\u9762\u7684\u6548\u679c\u3002 \u4e0d\u8fc7\u8fd9\u91cc\u53ea\u6240\u4ee5\u6700\u540e\u8bf4\u56e0\u4e3a\u6211\u4eec\u662f\u5929\u671d\u7279\u8272\uff0c\u4f7f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u4e2d\u5fc3\u88c5\u4e1c\u897f\u975e\u5e38\u6162\uff0c\u81f3\u4e8e\u6709\u591a\u6162\uff0c\u54c8\uff0c\u4f60\u8bd5\u8fc7\u5c31\u77e5\u9053\u4e86\uff5e\uff01","title":"036 \u4e3a\u706b\u72d0\u6d4f\u89c8\u5668\u5b89\u88c5flash\u63d2\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/037-\u4e4c\u73ed\u56fe\u5b89\u88c5\u7684\u7f51\u6613\u4e91\u97f3\u4e50\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8\u600e\u4e48\u529e-/","text":"\u6211\u4eec\u5229\u7528\u7ec8\u7aef\u8fdb\u884c\u542f\u52a8: 1.\u627e\u5230\u6587\u4ef6\u5939: /usr/share/applications 2.\u627e\u5230\u5b89\u88c5\u7684\u7f51\u6613\u4e91\u97f3\u4e50\u7684\u5feb\u6377\u542f\u52a8\u65b9\u5f0f,\u53f3\u952e\u4f7f\u7528\u5176\u4ed6\u7a0b\u5e8f\u6253\u5f00. \u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u8fdb\u884c\u7f16\u8f91. 3.\u4fee\u6539\u56fe1\u7684 Exec \u4e0eTerminal \u4f4d\u7f6e\u7684\u53c2\u6570.\u4fee\u6539\u4e3a\u56fe2\u5f62\u5f0f\u5373\u53ef.\u5e76\u4fdd\u5b58 3.\u5728\u6240\u6709\u7a0b\u5e8f\u4e2d\u627e\u5230\u7f51\u6613\u4e91\u97f3\u4e50\u6dfb\u52a0\u5230\u6536\u85cf\u5939 4.\u5355\u51fb\u5728\u6536\u85cf\u5939\u4e2d\u7684\u7f51\u6613\u4e91\u97f3\u4e50 5\u5728\u5f39\u51fa\u7684\u7ec8\u7aef\u7a97\u53e3\u8f93\u5165\u7ba1\u7406\u5458\u5bc6\u7801\u5373\u53ef: \u53ef\u4ee5\u770b\u5230\u7f51\u6613\u4e91\u97f3\u4e50\u80fd\u591f\u6b63\u5e38\u542f\u52a8\u4e86,\u53ef\u4ee5\u6b63\u5e38\u7684\u4f7f\u7528.","title":"037 \u4e4c\u73ed\u56fe\u5b89\u88c5\u7684\u7f51\u6613\u4e91\u97f3\u4e50\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8\u600e\u4e48\u529e-"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/038-\u4e4c\u73ed\u56fe\u4e0d\u80fd\u7528QQ,\u5fae\u4fe1\u600e\u4e48\u529e-/","text":"\u817e\u8baf\u5b98\u65b9\u65e9\u5c31\u572810\u5e74\u4ee3\u521d\u5c31\u505c\u6b62\u8fd0\u8425Linux\u7248QQ\uff0c\u7136\u800c\u6c11\u95f4\u6298\u817eLinux\u7248QQ\u7684\u811a\u6b65\u4ece\u6765\u6ca1\u505c\u8fc7\u3002\u65f6\u81f3\u4eca\u65e5\uff0c\u5b83\u603b\u7b97\u6709\u4e86\u5b8c\u7f8e\u65e0\u6687\u7684\u65b9\u6848\u2014\u2014deepin wine\u7cfb\u5217\u3002\u8981\u611f\u8c22deepin\u516c\u53f8\u7684\u6700\u5927\u52aa\u529b\u3002\u4e5f\u8981\u611f\u8c22 wszqkzqk \u540c\u5b66\u7684\u52aa\u529b\uff0c\u662f\u4ed6\u8ba9deepin\u4e4b\u5916\u7684\u4f17\u591aUbuntu/ArchLinux\u7cfb\u7528\u6237\u90fd\u80fd\u7528\u4e0a\u6700\u7a33\u5b9a\u7684wine QQ\u3002 \u521d\u59cb\u8f6f\u4ef6\u6765\u6e90\uff1a deepin \u79fb\u690d\u6210\u529f\u73af\u5883\uff1aUbuntu 18.04\u3001Ubuntu 16.04\u3001LinuxMint 18.*-19\u3001ArchLinux\u3001Manjaro Ubuntu\u7cfb\u53d1\u884c\u7248*\u5b89\u88c5deepin wine QQ\u7684\u6b65\u9aa4: **1\uff0c\u5b89\u88c5deepin-wine\u73af\u5883\uff1a**\u4e0a https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu \u9875\u9762\u4e0b\u8f7dzip\u5305\uff08\u6216\u7528git\u65b9\u5f0f\u514b\u9686\uff09\uff0c\u89e3\u538b\u5230\u672c\u5730\u6587\u4ef6\u5939\uff0c\u5728\u6587\u4ef6\u5939\u4e2d\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165sudo sh ./install.sh \u4e00\u952e\u5b89\u88c5\u3002 \u81f3\u4e8e\u767b\u9646\u4ec0\u4e48\u7684\u5927\u5bb6\u90fd\u53ef\u4ee5\u89e3\u51b3: \u5c06\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\u5939\u89e3\u538b,\u7136\u540e\u4f7f\u7528\u547d\u4ee4\u5207\u6362\u5230\u8be5\u6587\u4ef6\u5939\u5185 \u4f7f\u7528\u547d\u4ee4\u8fdb\u884c\u4e00\u952e\u5b89\u88c5: 2.\u5b89\u88c5\u597d\u4ee5\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u5176\u5b83\u8f6f\u4ef6\u7684\u5b89\u88c5\u4e86: **\u5b89\u88c5deepin.com\u5e94\u7528\u5bb9\u5668\uff1a**\u5728 http://mirrors.aliyun.com/deepin/pool/non-free/d/ \u4e2d\u4e0b\u8f7d\u60f3\u8981\u7684\u5bb9\u5668\uff0c\u70b9\u51fbdeb\u5b89\u88c5\u5373\u53ef\u3002\u4ee5\u4e0b\u4e3a\u63a8\u8350\u5bb9\u5668: QQ\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/ TIM\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.office/ QQ\u8f7b\u804a\u7248\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im.light/ \u5fae\u4fe1\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.wechat/ Foxmail\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.foxmail/ \u767e\u5ea6\u7f51\u76d8\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.baidu.pan/ 360\u538b\u7f29\uff1a http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.cn.360.yasuo/ \u76f4\u63a5\u8fdb\u884c\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef.\u8981\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u5b89\u88c5\u540e\u65e0\u6cd5\u6253\u5f00.\u8fd9\u4e2a\u65f6\u5019\u53ea\u8981\u91cd\u542f\u4ee5\u4e0b\u7535\u8111\u7cfb\u7edf\u5c31\u53ef\u4ee5\u4e86. \u6700\u540e\u8ba9:Gnome \u684c\u9762\u663e\u793a\u4f20\u7edf\u6258\u76d8\u56fe\u6807 \u8ba9 qq \u653e\u5230\u7cfb\u7edf\u7684\u6258\u76d8\u91cc\uff0c\u9700\u8981\u4f7f\u7528 gonme-extension \u5b89\u88c5 TopIconPlus \u7684 gnome-shell \u6269\u5c55 sudo apt-get install gnome-shell-extension-top-icons-plus gnome-tweaks \u5b89\u88c5\u5b8c\u4e4b\u540e \u7136\u540e\u7528 gnome-tweaks \u5f00\u542f\u8fd9\u4e2a\u6269\u5c55\uff0c\u8bb0\u5f97\u6ce8\u9500\u4e0b\u3002 \u8fd9\u6837\u770b\u8d77\u6765\u5c31\u8212\u670d\u591a\u4e86,\u54c8\u54c8\u54c8 \u5b89\u6392:","title":"038 \u4e4c\u73ed\u56fe\u4e0d\u80fd\u7528QQ,\u5fae\u4fe1\u600e\u4e48\u529e-"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/039-ubuntu\u5b89\u88c5latex+texstudio/","text":"1.\u5b89\u88c5\u5305\u51c6\u5907 \u00b6 TeXLive \u7684\u7248\u672c\u662f 2017\uff0c\u53ef\u4ee5\u4ece\u5b98\u65b9\u7ad9\u70b9\u4e0b\u8f7d \u5b89\u88c5\u5305 , \u3002 2.TeXLive2017\u5b89\u88c5 sudo apt-get install perl sudo apt-get install perl-tk \u8fdb\u5165texlive2017\u5b89\u88c5\u5305\u6240\u5728\u76ee\u5f55,\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5texlive: sudo mount -o loop ./texlive.iso /mnt/ cd /mnt sudo ./install-tl \u5927\u6982\u9700\u8981\u5b89\u88c5\u5341\u591a\u5206\u949f,\u9ed8\u8ba4\u6309\u7167/usr/local/texlive\u76ee\u5f55,\u5b89\u88c5\u5b8c\u6bd5\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u914d\u7f6e\u73af\u5883\u53d8\u91cf: sudo gedit ~/.bashrc \u5728.bashrc\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 export PATH = /usr/local/texlive/2017/bin/x86_64-linux: $PATH export MANPATH = /usr/local/texlive/2017/texmf-dist/doc/man: $MANPATH export INFOPATH = /usr/local/texlive/2017/texmf-dist/doc/info: $INFOPATH 3.TexStudio\u5b89\u88c5 \u53ef\u4ee5\u4e0b\u8f7dtexStudio\u7684deb\u5b89\u88c5\u5305,\u70b9\u51fb\u5b89\u88c5,\u4e5f\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5: sudo apt-get install texstudio","title":"039 ubuntu\u5b89\u88c5latex+texstudio"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/039-ubuntu\u5b89\u88c5latex+texstudio/#1","text":"TeXLive \u7684\u7248\u672c\u662f 2017\uff0c\u53ef\u4ee5\u4ece\u5b98\u65b9\u7ad9\u70b9\u4e0b\u8f7d \u5b89\u88c5\u5305 , \u3002 2.TeXLive2017\u5b89\u88c5 sudo apt-get install perl sudo apt-get install perl-tk \u8fdb\u5165texlive2017\u5b89\u88c5\u5305\u6240\u5728\u76ee\u5f55,\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5texlive: sudo mount -o loop ./texlive.iso /mnt/ cd /mnt sudo ./install-tl \u5927\u6982\u9700\u8981\u5b89\u88c5\u5341\u591a\u5206\u949f,\u9ed8\u8ba4\u6309\u7167/usr/local/texlive\u76ee\u5f55,\u5b89\u88c5\u5b8c\u6bd5\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u914d\u7f6e\u73af\u5883\u53d8\u91cf: sudo gedit ~/.bashrc \u5728.bashrc\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 export PATH = /usr/local/texlive/2017/bin/x86_64-linux: $PATH export MANPATH = /usr/local/texlive/2017/texmf-dist/doc/man: $MANPATH export INFOPATH = /usr/local/texlive/2017/texmf-dist/doc/info: $INFOPATH 3.TexStudio\u5b89\u88c5 \u53ef\u4ee5\u4e0b\u8f7dtexStudio\u7684deb\u5b89\u88c5\u5305,\u70b9\u51fb\u5b89\u88c5,\u4e5f\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5: sudo apt-get install texstudio","title":"1.\u5b89\u88c5\u5305\u51c6\u5907"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/040-\u89e3\u51b3Ubuntu\u5c4f\u5e55\u5206\u8fa8\u7387\u4e0d\u6b63\u5e38\u95ee\u9898/","text":"1\u3001 \u8f93\u5165\u547d\u4ee4\uff1a xrandr \u5c06\u4f1a\u51fa\u73b0\u5f53\u524d\u8bbe\u5907\u6709\u6548\u7684\u8f93\u5165\u8bbe\u5907\u540d\u79f0:\u6bd4\u5982\u6211\u7684\u5c31\u662fDP-2 Screen 0 : minimum 320 x 200 , current 1024 x 768 , maximum 16384 x 16384 DP-1 disconnected ( normal left inverted right x axis y axis ) DP-2 connected primary 1024x768+0+0 ( normal left inverted right x axis y axis ) 0mm x 0mm 1024x768 60 .00* 800x600 60 .32 56 .25 848x480 60 .00 640x480 59 .94 2\u3001 \u4e0a\u56fe\u4e2d\u5c31\u6ca1\u6709\u6211\u8981\u4f7f\u7528\u76841440X900\uff0c\u5206\u8fa8\u7387\uff0c\u6240\u4ee5\u6211\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2a1080P\u7684\u5206\u8fa8\u7387\uff0c\u5148\u8f93\u5165\u201ccvt 1440 900\u201d\u547d\u4ee4\uff0c\u67e5\u8be2\u4e00\u4e0b1080P\u5206\u8fa8\u7387\u7684\u6709\u6548\u626b\u63cf\u9891\u7387\uff0c\u5982\u4e0b\u56fe\u6240\u793a # 1440x900 59.89 Hz (CVT 1.30MA) hsync: 55.93 kHz; pclk: 106.50 MHz Modeline \"1440x900_60.00\" 106 .50 1440 1528 1672 1904 900 903 909 934 -hsync +vsync 3\u3001 \u7136\u540e\u901a\u8fc7 sudo xrandr --newmode \"1440x900_60.00\" 106 .50 1440 1528 1672 1904 900 903 909 934 -hsync +vsync \u547d\u4ee4\u65b0\u5efa\u4e00\u79cd\u8f93\u51fa\u5206\u8fa8\u7387\uff0c\u5982\u4e0b\u56fe 4\u3001 \u628a\u65b0\u5efa\u7684\u8f93\u51fa\u5206\u8fa8\u7387\u8f93\u51fa\u5230\u5f53\u524d\u8bbe\u5907\u4e0a \u6267\u884c\u547d\u4ee4\uff1a sudo xrandr --addmode DP-2 \"1440x900_60.00\" \u6ce8\uff1a\u8fd9\u91cc\u6211\u7684\u8bbe\u5907\u4e3aDVI-0 \uff0c\u53ef\u6839\u636e\u4f60\u8bbe\u5907\u540d\u6765\u8fdb\u884c\u66f4\u6362 5\u3001 \u628a\u5f53\u524d\u5206\u8fa8\u7387\u8bbe\u7f6e\u4e3a\u521a\u6dfb\u52a0\u76841080p\u5206\u8fa8\u7387 \u6267\u884c\u547d\u4ee4\uff1asudo xrandr --output DP-2 --mode \"1440x900_60.00\" \u6ce8\uff1a\u6b64\u5904\u7684DVI-0 \u6839\u636e\u4f60\u7684\u60c5\u51b5\u8fdb\u884c\u66f4\u6539 6\u3001 \u4f7f\u6bcf\u6b21\u542f\u52a8\u751f\u6548\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u6267\u884c\u547d\u4ee4\uff1asudo gedit ~/.profile \u5728\u6587\u4ef6\u7684\u540e\u9762\u6dfb\u52a0\u8fd9\u4e9b\u8bed\u53e5\uff1a cvt 1440 900 xrandr --newmode \"1440x900_60.00\" 106 .50 1440 1528 1672 1904 900 903 909 934 -hsync +vsync xrandr --addmode DP-2 \"1440x900_60.00\" xrandr --output DP-2 --mode \"1440x900_60.00\" 7\u3001 \u91cd\u542f\u7535\u8111\u8bd5\u8bd5\u5206\u8fa8\u7387\u662f\u5426\u6b63\u5e38","title":"040 \u89e3\u51b3Ubuntu\u5c4f\u5e55\u5206\u8fa8\u7387\u4e0d\u6b63\u5e38\u95ee\u9898"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/041-\u89e3\u51b3ubuntu\u9f20\u6807\u7075\u654f\u5ea6\u65e0\u6cd5\u8c03\u6574\u7684\u60c5\u51b5/","text":"\u4f7f\u7528\u5982\u4e0b\u7684\u547d\u4ee4 sudo xset m N N\u5c31\u662f\u9700\u8981\u8c03\u8282\u7684\u7075\u654f\u7684\u503c,N\u8d8a\u5927\u7075\u654f\u5ea6\u8d8a\u9ad8","title":"041 \u89e3\u51b3ubuntu\u9f20\u6807\u7075\u654f\u5ea6\u65e0\u6cd5\u8c03\u6574\u7684\u60c5\u51b5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/042 ubuntu\u5728\u4f7f\u7528\u641c\u72d7\u8f93\u5165\u6cd5\u65f6,spyder\u4e0d\u80fd\u8f93\u5165\u4e2d\u6587/","text":"\u5728\u7cfb\u7edf\u4e2d\u627e\u5230\uff1a /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so \u7136\u540e\u5c06\u8fd9\u4e2a\u6587\u4ef6\u5206\u522b\u62f7\u8d1d\u5230\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5939\u4e2d,\u5e76\u91cd\u542fspyder\u5c31\u53ef\u4ee5\u4e86 /home/dlut/anaconda3/pkgs/qt-5.9.5-h7e424d6_0/plugins/platforminputcontexts/ /home/dlut/anaconda3/plugins/platforminputcontexts/","title":"042 ubuntu\u5728\u4f7f\u7528\u641c\u72d7\u8f93\u5165\u6cd5\u65f6,spyder\u4e0d\u80fd\u8f93\u5165\u4e2d\u6587"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/043 ubuntu\u5b89\u88c5eclipse/","text":"** \u5728ubuntu16.04\u4e0a\u5b89\u88c5eclipse** \u4e00\u3001\u4e0b\u8f7d \u9996\u5148\u6211\u4eec\u9700\u8981 \u5b89\u88c5jdk1.8 \u53ca\u5176\u4ee5\u4e0a\uff0c\u7136\u540e\u4ece \u5b98\u7f51 \uff1a https://www.eclipse.org/downloads/\u4e0a\u4e0b\u8f7d \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b98\u7f51\u7684\u670d\u52a1\u5668\u592a\u5dee\uff0c\u54cd\u5e94\u7684\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u9700\u8981\u8bfb\u8005\u6709\u70b9\u8010\u5fc3\uff0c\u54c8\u54c8 ~ \u7136\u540e\u9009\u62e9\u7b2c\u4e00\u4e2a\uff0c\u5c31\u662f\u6211\u4eec\u8981\u5b89\u88c5\u7684eclipse\u7684JDE\u4e86\u3002** \u70b9\u51fb\u4e0b\u8f7d\u6309\u94ae\uff0c\u5c06\u4f1a\u4e0b\u8f7d\u76f8\u5e94\u7684\u4f4d\u6570\u548c\u7248\u672c\u7684eclipse\uff1a \u4e8c\u3001\u5b89\u88c5 \u7136\u540e\u627e\u5230\u4e0b\u8f7d\u7684\u6587\u4ef6\uff1a \u5bf9\u4e0b\u8f7d\u7684\u6587\u4ef6\u8fdb\u884c\u89e3\u538b\u5230\u76f8\u5173\u76ee\u5f55\uff0c\u7136\u540e\u91cd\u547d\u540d\uff0c\u8d4b\u4e88\u6743\u9650\uff0c\u4e4b\u540e\u6211\u4eec\u8fdb\u5165\u8be5\u6587\u4ef6\u5939\u4e4b\u4e2d\uff0c\u4f7f\u7528\u5176\u4e2d\u7684./eclipse-inst\u6765\u542f\u52a8\u5b89\u88c5\u7a0b\u5e8f\uff0c\u5982\u679c\u53ea\u662f\u666e\u901a\u7684\u5f00\u53d1\u6211\u4eec\u9009\u62e9\u7b2c\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\uff1a sudo mv eclipse /opt \u56db \u521b\u5efaeclipse installer\u684c\u9762\u5feb\u6377\u56fe\u6807 \u00b6 \u9996\u5148\u8f93\u5165\u6307\u4ee4\uff1a cd /usr/share/applications \u7136\u540e\u8f93\u5165\u6307\u4ee4\uff1a sudo gedit eclipseinstall.desktop \u6700\u540e\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5230\u6587\u4ef6\u4e2d\uff1a [ Desktop Entry ] Encoding = UTF-8 Name = Eclipseinstall Comment = Eclipse Exec = /opt/eclipse/eclipse-inst Icon = /opt/eclipse/icon.xpm Terminal = false StartupNotify = true Type = Application Categories = Application ; Development ; \u5176\u4e2d\u201cExec=\u201d\u540e\u9762\u4e3aeclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684eclipse\u7a0b\u5e8f\u7684\u4f4d\u7f6e\u8def\u5f84\uff0c\u201cIcon=\u201d\u540e\u9762\u4e3aeclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684\u56fe\u6807\u56fe\u7247\u7684\u8def\u5f84 3.3 \u5c06eclipse\u53d8\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 \u6307\u4ee4\u4e3a\uff1asudo chmod u+x eclipse.desktop \u4e94\uff1a\u542f\u52a8eclipse \u7684\u5b89\u88c5\u5668 \u9009\u62e9\u7b2c\u4e00\u9879\u8fdb\u884c\u5b89\u88c5 \u5b89\u88c5\u5b8c\u6210\u540e\u5c06\u539f\u6765\u7684eclipse\u5feb\u6377\u65b9\u5f0f\u91cd\u65b0\u4fee\u6539 [ Desktop Entry ] Encoding = UTF-8 Name = Eclipse Comment = Eclipse Exec = /home/dlut/eclipse/java-2019-03/eclipse/eclipse Icon = /home/dlut/eclipse/java-2019-03/eclipse/icon.xpm Terminal = false StartupNotify = true Type = Application Categories = Application ; Development ;","title":"043 ubuntu\u5b89\u88c5eclipse"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/043 ubuntu\u5b89\u88c5eclipse/#eclipse-installer","text":"\u9996\u5148\u8f93\u5165\u6307\u4ee4\uff1a cd /usr/share/applications \u7136\u540e\u8f93\u5165\u6307\u4ee4\uff1a sudo gedit eclipseinstall.desktop \u6700\u540e\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5230\u6587\u4ef6\u4e2d\uff1a [ Desktop Entry ] Encoding = UTF-8 Name = Eclipseinstall Comment = Eclipse Exec = /opt/eclipse/eclipse-inst Icon = /opt/eclipse/icon.xpm Terminal = false StartupNotify = true Type = Application Categories = Application ; Development ; \u5176\u4e2d\u201cExec=\u201d\u540e\u9762\u4e3aeclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684eclipse\u7a0b\u5e8f\u7684\u4f4d\u7f6e\u8def\u5f84\uff0c\u201cIcon=\u201d\u540e\u9762\u4e3aeclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684\u56fe\u6807\u56fe\u7247\u7684\u8def\u5f84 3.3 \u5c06eclipse\u53d8\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 \u6307\u4ee4\u4e3a\uff1asudo chmod u+x eclipse.desktop \u4e94\uff1a\u542f\u52a8eclipse \u7684\u5b89\u88c5\u5668 \u9009\u62e9\u7b2c\u4e00\u9879\u8fdb\u884c\u5b89\u88c5 \u5b89\u88c5\u5b8c\u6210\u540e\u5c06\u539f\u6765\u7684eclipse\u5feb\u6377\u65b9\u5f0f\u91cd\u65b0\u4fee\u6539 [ Desktop Entry ] Encoding = UTF-8 Name = Eclipse Comment = Eclipse Exec = /home/dlut/eclipse/java-2019-03/eclipse/eclipse Icon = /home/dlut/eclipse/java-2019-03/eclipse/icon.xpm Terminal = false StartupNotify = true Type = Application Categories = Application ; Development ;","title":"\u56db \u521b\u5efaeclipse installer\u684c\u9762\u5feb\u6377\u56fe\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/","text":"Python \u57fa\u7840\u8bfe\u7a0b\u5b89\u6392 \u00b6 \u76ee\u6807 \u00b6 \u660e\u786e\u57fa\u7840\u73ed\u8bfe\u7a0b\u5185\u5bb9 \u8bfe\u7a0b\u6e05\u5355 \u00b6 \u5e8f\u53f7 \u5185\u5bb9 \u76ee\u6807 01 Linux \u57fa\u7840 \u8ba9\u5927\u5bb6\u5bf9 Ubuntu \u7684\u4f7f\u7528\u4ece\u5f88 \u964c\u751f \u8fbe\u5230 \u7075\u6d3b\u64cd\u4f5c 02 Python \u57fa\u7840 \u6db5\u76d6 Python \u57fa\u7840\u77e5\u8bc6\uff0c\u8ba9\u5927\u5bb6\u638c\u63e1\u57fa\u7840\u7684\u7f16\u7a0b\u80fd\u529b 03 Python \u9762\u5411\u5bf9\u8c61 \u4ecb\u7ecd Python \u7684\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\uff0c\u4e3a\u5f00\u53d1\u5927\u578b\u9879\u76ee\u505a\u597d\u94fa\u57ab\u548c\u51c6\u5907 04 \u9879\u76ee\u5b9e\u6218 \u5e94\u7528\u57fa\u7840\u73ed\u5b66\u4e60\u8fc7\u7684\u77e5\u8bc6\uff0c\u7f16\u7a0b\u5b9e\u6218\uff0c\u5b8c\u6210\u7b2c\u4e00\u4e2a Python \u9879\u76ee \u5206\u4eab \u00b6 \u64cd\u4f5c\u7cfb\u7edf\uff08\u79d1\u666e\u7ae0\u8282\uff09 \u00b6 \u76ee\u6807 \u00b6 \u4e86\u89e3**\u64cd\u4f5c\u7cfb\u7edf**\u53ca\u4f5c\u7528 1. \u64cd\u4f5c\u7cfb\u7edf\uff08Operation System\uff0cOS\uff09 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3a\u63a5\u53e3\u7684\u793a\u610f\u56fe \ufffc \u6ca1\u6709\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a \u88f8\u673a \u5982\u679c\u60f3\u5728 \u88f8\u673a \u4e0a\u8fd0\u884c\u81ea\u5df1\u6240\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u5c31\u5fc5\u987b\u7528\u673a\u5668\u8bed\u8a00\u4e66\u5199\u7a0b\u5e8f \u5982\u679c\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u4e86\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c31\u53ef\u4ee5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5\u652f\u6301\u7684\u9ad8\u7ea7\u8bed\u8a00\u73af\u5883\uff0c\u7528\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\u7a0b\u5e8f 1.1 \u64cd\u4f5c\u7cfb\u7edf\u7684\u4f5c\u7528 \u00b6 \u662f\u73b0\u4ee3\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d \u6700\u57fa\u672c\u548c\u6700\u91cd\u8981 \u7684\u7cfb\u7edf\u8f6f\u4ef6 \u662f \u914d\u7f6e\u5728\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0a\u7684\u7b2c\u4e00\u5c42\u8f6f\u4ef6 \uff0c\u662f\u5bf9\u786c\u4ef6\u7cfb\u7edf\u7684\u9996\u6b21\u6269\u5c55 \u4e3b\u8981\u4f5c\u7528\u662f**\u7ba1\u7406\u597d\u786c\u4ef6\u8bbe\u5907**\uff0c\u5e76\u4e3a\u7528\u6237\u548c\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u4e8e\u4f7f\u7528 \u800c\u5176\u4ed6\u7684\u8bf8\u5982\u7f16\u8bd1\u7a0b\u5e8f\u3001\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u4ee5\u53ca\u5927\u91cf\u7684\u5e94\u7528\u8f6f\u4ef6\uff0c\u90fd\u76f4\u63a5\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u652f\u6301 1.2 \u4e0d\u540c\u5e94\u7528\u9886\u57df\u7684\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf \u00b6 \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf \u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf \u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf \u79fb\u52a8\u8bbe\u5907\u64cd\u4f5c\u7cfb\u7edf 1> \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf \u00b6 Windows \u7cfb\u5217 \u7528\u6237\u7fa4\u4f53\u5927 macOS \u9002\u5408\u4e8e\u5f00\u53d1\u4eba\u5458 Linux \u5e94\u7528\u8f6f\u4ef6\u5c11 2> \u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf \u00b6 Linux \u5b89\u5168\u3001\u7a33\u5b9a\u3001\u514d\u8d39 \u5360\u6709\u7387\u9ad8 Windows Server \u4ed8\u8d39 \u5360\u6709\u7387\u4f4e \ufffc 3> \u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf \u00b6 Linux 4> \u79fb\u52a8\u8bbe\u5907\u64cd\u4f5c\u7cfb\u7edf \u00b6 iOS Android\uff08\u57fa\u4e8e Linux \uff09 1.3 \u865a\u62df\u673a \u00b6 \u865a\u62df\u673a\uff08Virtual Machine\uff09\u6307\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7684\u5177\u6709\u5b8c\u6574\u786c\u4ef6\u7cfb\u7edf\u529f\u80fd\u7684\u3001\u8fd0\u884c\u5728\u4e00\u4e2a\u5b8c\u5168\u9694\u79bb\u73af\u5883\u4e2d\u7684\u5b8c\u6574\u8ba1\u7b97\u673a\u7cfb\u7edf \u865a\u62df\u7cfb\u7edf\u901a\u8fc7\u751f\u6210\u73b0\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u5168\u65b0\u865a\u62df\u955c\u50cf\uff0c\u5177\u6709\u771f\u5b9e\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u5168\u4e00\u6837\u7684\u529f\u80fd \u8fdb\u5165\u865a\u62df\u7cfb\u7edf\u540e\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5728\u8fd9\u4e2a\u5168\u65b0\u7684\u72ec\u7acb\u7684\u865a\u62df\u7cfb\u7edf\u91cc\u9762\u8fdb\u884c\uff0c\u53ef\u4ee5\u72ec\u7acb\u5b89\u88c5\u8fd0\u884c\u8f6f\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u684c\u9762\uff0c\u4e0d\u4f1a\u5bf9\u771f\u6b63\u7684\u7cfb\u7edf\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd \u800c\u4e14\u80fd\u591f\u5728\u73b0\u6709\u7cfb\u7edf\u4e0e\u865a\u62df\u955c\u50cf\u4e4b\u95f4\u7075\u6d3b\u5207\u6362\u7684\u4e00\u7c7b\u64cd\u4f5c\u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u53f2\uff08\u79d1\u666e\u7ae0\u8282\uff09 \u00b6 \u76ee\u6807 \u00b6 \u4e86\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u5386\u53f2 \u77e5\u9053 Linux \u5185\u6838\u53ca\u53d1\u884c\u7248\u7684\u533a\u522b \u77e5\u9053 Linux \u7684\u5e94\u7528\u9886\u57df 01. \u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u5386\u53f2 \u00b6 1.1 Unix \u00b6 1965 \u5e74\u4e4b\u524d\u7684\u65f6\u5019\uff0c\u7535\u8111\u5e76\u4e0d\u50cf\u73b0\u5728\u4e00\u6837\u666e\u904d\uff0c\u5b83\u53ef\u4e0d\u662f\u4e00\u822c\u4eba\u80fd\u78b0\u7684\u8d77\u7684\uff0c\u9664\u975e\u662f\u519b\u4e8b\u6216\u8005\u5b66\u9662\u7684\u7814\u7a76\u673a\u6784\uff0c\u800c\u4e14\u5f53\u65f6\u5927\u578b\u4e3b\u673a\u81f3\u591a\u80fd\u63d0\u4f9b30\u53f0\u7ec8\u7aef\uff0830\u4e2a\u952e\u76d8\u3001\u663e\u793a\u5668)\uff0c\u8fde\u63a5\u4e00\u53f0\u7535\u8111 \ufffc \u4e3a\u4e86\u89e3\u51b3\u6570\u91cf\u4e0d\u591f\u7528\u7684\u95ee\u9898 1965 \u5e74\u5de6\u540e\u7531 \u8d1d\u5c14\u5b9e\u9a8c\u5ba4 \u52a0\u5165\u4e86 \u9ebb\u7701\u7406\u5de5\u5b66\u9662 \u4ee5\u53ca \u901a\u7528\u7535\u6c14 \u5408\u4f5c\u7684\u8ba1\u5212 \u2014\u2014 \u8be5\u8ba1\u5212\u8981\u5efa\u7acb\u4e00\u5957 \u591a\u4f7f\u7528\u8005(multi\uff0duser) \u3001 \u591a\u4efb\u52a1(multi\uff0dprocessor) \u3001 \u591a\u5c42\u6b21(multi\uff0dlevel) \u7684 MULTICS \u64cd\u4f5c\u7cfb\u7edf\uff0c\u60f3\u8ba9\u5927\u578b\u4e3b\u673a\u652f\u6301 300 \u53f0\u7ec8\u7aef 1969 \u5e74\u524d\u540e\u8fd9\u4e2a\u9879\u76ee\u8fdb\u5ea6\u7f13\u6162\uff0c\u8d44\u91d1\u77ed\u7f3a\uff0c\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u9000\u51fa\u4e86\u7814\u7a76 1969 \u5e74\u4ece\u8fd9\u4e2a\u9879\u76ee\u4e2d\u9000\u51fa\u7684 Ken Thompson \u5f53\u65f6\u5728\u5b9e\u9a8c\u5ba4\u65e0\u804a\u65f6\uff0c\u4e3a\u4e86\u8ba9\u4e00\u53f0\u7a7a\u95f2\u7684\u7535\u8111\u4e0a\u80fd\u591f\u8fd0\u884c \"\u661f\u9645\u65c5\u884c\uff08Space Travel\uff09\" \u6e38\u884c\uff0c\u5728 8 \u6708\u4efd\u5de6\u53f3\u8d81\u7740\u5176\u59bb\u5b50\u63a2\u4eb2\u7684\u65f6\u95f4\uff0c \u7528\u4e86 1 \u4e2a\u6708\u7684\u65f6\u95f4 \uff0c\u4f7f\u7528\u6c47\u7f16\u5199\u51fa\u4e86 Unix \u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u578b 1970 \u5e74\uff0c\u7f8e\u56fd\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684 Ken Thompson \uff0c\u4ee5 BCPL \u8bed\u8a00\u4e3a\u57fa\u7840\uff0c\u8bbe\u8ba1\u51fa\u5f88\u7b80\u5355\u4e14\u5f88\u63a5\u8fd1\u786c\u4ef6\u7684 B \u8bed\u8a00 \uff08\u53d6BCPL\u7684\u9996\u5b57\u6bcd\uff09\uff0c\u5e76\u4e14\u4ed6\u7528 B \u8bed\u8a00 \u5199\u4e86\u7b2c\u4e00\u4e2a UNIX \u64cd\u4f5c\u7cfb\u7edf 1971 \u5e74\uff0c\u540c\u6837\u9177\u7231 \"\u661f\u9645\u65c5\u884c\uff08Space Travel\uff09\" \u7684 Dennis M.Ritchie \u4e3a\u4e86\u80fd\u65e9\u70b9\u513f\u73a9\u4e0a\u6e38\u620f\uff0c\u52a0\u5165\u4e86 Thompson \u7684\u5f00\u53d1\u9879\u76ee\uff0c\u5408\u4f5c\u5f00\u53d1 UNIX\uff0c\u4ed6\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u6539\u9020 B \u8bed\u8a00 \uff0c\u56e0\u4e3a**B \u8bed\u8a00** \u7684\u8de8\u5e73\u53f0\u6027\u8f83\u5dee 1972 \u5e74\uff0c Dennis M.Ritchie \u5728 B \u8bed\u8a00 \u7684\u57fa\u7840\u4e0a\u6700\u7ec8\u8bbe\u8ba1\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u8a00\uff0c\u4ed6\u53d6\u4e86 BCPL \u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4f5c\u4e3a\u8fd9\u79cd\u8bed\u8a00\u7684\u540d\u5b57\uff0c\u8fd9\u5c31\u662f C \u8bed\u8a00 1973 \u5e74\u521d\uff0c C \u8bed\u8a00**\u7684\u4e3b\u4f53\u5b8c\u6210\uff0c**Thompson \u548c Ritchie \u8feb\u4e0d\u53ca\u5f85\u5730\u5f00\u59cb\u7528\u5b83\u5b8c\u5168\u91cd\u5199\u4e86\u73b0\u5728\u5927\u540d\u9f0e\u9f0e\u7684 Unix \u64cd\u4f5c\u7cfb\u7edf \ufffc \u80af\u00b7\u6c64\u666e\u900a\uff08\u5de6\uff09\u548c\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff08\u53f3\uff09 C \u8bed\u8a00 \u00b6 \u5728\u628a UNIX \u79fb\u690d\u5230\u5176\u4ed6\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u65f6\uff0c**C \u8bed\u8a00**\u5f3a\u5927\u7684\u79fb\u690d\u6027\uff08Portability\uff09\u5728\u6b64\u663e\u73b0 \u673a\u5668\u8bed\u8a00\u548c\u6c47\u7f16\u8bed\u8a00\u90fd\u4e0d\u5177\u6709\u79fb\u690d\u6027\uff0c\u4e3a x86 \u5f00\u53d1\u7684\u7a0b\u5e8f\uff0c\u4e0d\u53ef\u80fd\u5728 Alpha\uff0cSPARC \u548c ARM \u7b49\u673a\u5668\u4e0a\u8fd0\u884c \u800c C \u8bed\u8a00**\u7a0b\u5e8f\u5219\u53ef\u4ee5\u4f7f\u7528\u5728\u4efb\u610f\u67b6\u6784\u7684\u5904\u7406\u5668\u4e0a\uff0c\u53ea\u8981\u90a3\u79cd\u67b6\u6784\u7684\u5904\u7406\u5668**\u5177\u6709\u5bf9\u5e94\u7684 C \u8bed\u8a00\u7f16\u8bd1\u5668\u548c\u5e93 \uff0c\u7136\u540e\u5c06 C \u6e90\u4ee3\u7801\u7f16\u8bd1\u3001\u8fde\u63a5\u6210\u76ee\u6807\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e4b\u540e\u5373\u53ef\u8fd0\u884c Unix \u5bb6\u8c31 \u00b6 \ufffc 1.2 Minix \u00b6 \u56e0\u4e3a AT&T\uff08\u901a\u7528\u7535\u6c14\uff09 \u7684\u653f\u7b56\u6539\u53d8\uff0c\u5728 Version 7 Unix \u63a8\u51fa\u4e4b\u540e\uff0c\u53d1\u5e03\u65b0\u7684\u4f7f\u7528\u6761\u6b3e\uff0c\u5c06 UNIX \u6e90\u4ee3\u7801\u79c1\u6709\u5316\uff0c\u5728\u5927\u5b66\u4e2d\u4e0d\u518d\u80fd\u4f7f\u7528 UNIX \u6e90\u4ee3\u7801 Andrew S. Tanenbaum\uff08\u5854\u80fd\u9c8d\u59c6\uff09 \u6559\u6388\u4e3a\u4e86\u80fd \u5728\u8bfe\u5802\u4e0a\u6559\u6388\u5b66\u751f\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u4f5c\u7684\u7ec6\u8282 \uff0c\u51b3\u5b9a\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55 AT&T \u7684\u6e90\u4ee3\u7801\u524d\u63d0\u4e0b\uff0c\u81ea\u884c\u5f00\u53d1\u4e0e UNIX \u517c\u5bb9\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u907f\u514d\u7248\u6743\u4e0a\u7684\u4e89\u8bae \u4ee5 \u5c0f\u578b UNIX\uff08mini-UNIX\uff09**\u4e4b\u610f\uff0c\u5c06\u5b83\u79f0\u4e3a **MINIX 1.3 Linux \u00b6 1991 \u5e74 \u6797\u7eb3\u65af\uff08Linus\uff09 \u5c31\u8bfb\u4e8e\u8d6b\u5c14\u8f9b\u57fa\u5927\u5b66\u671f\u95f4\uff0c\u5bf9 Unix \u4ea7\u751f\u6d53\u539a\u5174\u8da3\uff0c\u5c1d\u8bd5\u7740\u5728Minix \u4e0a\u505a\u4e00\u4e9b\u5f00\u53d1\u5de5\u4f5c \u56e0\u4e3a Minix \u53ea\u662f\u6559\u5b66\u4f7f\u7528\uff0c\u56e0\u6b64\u529f\u80fd\u5e76\u4e0d\u5f3a\uff0c \u6797\u7eb3\u65af \u7ecf\u5e38\u8981\u7528\u4ed6\u7684\u7ec8\u7aef **\u4eff\u771f\u5668\uff08Terminal Emulator\uff09**\u53bb\u8bbf\u95ee\u5927\u5b66\u4e3b\u673a\u4e0a\u7684\u65b0\u95fb\u7ec4\u548c\u90ae\u4ef6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bfb\u5199\u548c\u4e0b\u8f7d\u6587\u4ef6\uff0c\u4ed6\u81ea\u5df1\u7f16\u5199\u4e86\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u5728\u540e\u6765\u6210\u4e3a\u4e86 Linux \u7b2c\u4e00\u4e2a\u5185\u6838\u7684\u96cf\u5f62\uff0c\u5f53\u65f6\uff0c\u4ed6\u5e74\u4ec5 21 \u5c81\uff01 \u6797\u7eb3\u65af \u5229\u7528 GNU \u7684 bash \u5f53\u505a\u5f00\u53d1\u73af\u5883\uff0cgcc \u5f53\u505a\u7f16\u8bd1\u5de5\u5177\uff0c\u7f16\u5199\u4e86 Linux \u5185\u6838\uff0c\u4e00\u5f00\u59cb Linux \u5e76\u4e0d\u80fd\u517c\u5bb9 Unix \u5373 Unix \u4e0a\u8dd1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5728 Linux \u4e0a\u8dd1\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5185\u6838\u4e4b\u95f4\u7684\u63a5\u53e3\u4e0d\u4e00\u81f4 \u4e00\u5f00\u59cb Linux \u53ea\u9002\u7528\u4e8e 386\uff0c\u540e\u6765\u7ecf\u8fc7\u5168\u4e16\u754c\u7684\u7f51\u53cb\u7684\u5e2e\u52a9\uff0c\u6700\u7ec8\u80fd\u591f\u517c\u5bb9\u591a\u79cd\u786c\u4ef6 \ufffc 02. Linux \u5185\u6838\u53ca\u53d1\u884c\u7248 \u00b6 2.1 Linux \u5185\u6838\u7248\u672c \u00b6 **\u5185\u6838\uff08kernel\uff09**\u662f\u7cfb\u7edf\u7684\u5fc3\u810f\uff0c\u662f\u8fd0\u884c\u7a0b\u5e8f\u548c\u7ba1\u7406\u50cf\u78c1\u76d8\u548c\u6253\u5370\u673a\u7b49\u786c\u4ef6\u8bbe\u5907\u7684\u6838\u5fc3\u7a0b\u5e8f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5728\u88f8\u8bbe\u5907\u4e0e\u5e94\u7528\u7a0b\u5e8f\u95f4\u7684\u62bd\u8c61\u5c42 Linux \u5185\u6838\u7248\u672c\u53c8\u5206\u4e3a \u7a33\u5b9a\u7248 \u548c \u5f00\u53d1\u7248 \uff0c\u4e24\u79cd\u7248\u672c\u662f\u76f8\u4e92\u5173\u8054\uff0c\u76f8\u4e92\u5faa\u73af \u7a33\u5b9a\u7248 \uff1a\u5177\u6709\u5de5\u4e1a\u7ea7\u5f3a\u5ea6\uff0c\u53ef\u4ee5\u5e7f\u6cdb\u5730\u5e94\u7528\u548c\u90e8\u7f72\u3002\u65b0\u7684\u7a33\u5b9a\u7248\u76f8\u5bf9\u4e8e\u8f83\u65e7\u7684\u53ea\u662f\u4fee\u6b63\u4e00\u4e9b bug \u6216\u52a0\u5165\u4e00\u4e9b\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f \u5f00\u53d1\u7248 \uff1a\u7531\u4e8e\u8981\u8bd5\u9a8c\u5404\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u53d8\u5316\u5f88\u5feb \u5185\u6838\u6e90\u7801\u7f51\u5740\uff1a http://www.kernel.org \u6240\u6709\u6765\u81ea\u5168\u4e16\u754c\u7684\u5bf9 Linux \u6e90\u7801\u7684\u4fee\u6539\u6700\u7ec8\u90fd\u4f1a\u6c47\u603b\u5230\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u7531 Linus \u9886\u5bfc\u7684\u5f00\u6e90\u793e\u533a\u5bf9\u5176\u8fdb\u884c\u7504\u522b\u548c\u4fee\u6539\u6700\u7ec8\u51b3\u5b9a\u662f\u5426\u8fdb\u5165\u5230 Linux \u4e3b\u7ebf\u5185\u6838\u6e90\u7801\u4e2d 2.2 Linux \u53d1\u884c\u7248\u672c \u00b6 **Linux \u53d1\u884c\u7248\uff08\u4e5f\u88ab\u53eb\u505a GNU/Linux \u53d1\u884c\u7248\uff09**\u901a\u5e38\u5305\u542b\u4e86\u5305\u62ec\u684c\u9762\u73af\u5883\u3001\u529e\u516c\u5957\u4ef6\u3001\u5a92\u4f53\u64ad\u653e\u5668\u3001\u6570\u636e\u5e93\u7b49\u5e94\u7528\u8f6f\u4ef6 \u5e38\u89c1\u7684\u53d1\u884c\u7248\u672c\u5982\u4e0b\uff1a Ubuntu Redhat Fedora openSUSE Linux Mint Debian Manjaro Mageia CentOS Arch \u5341\u5927 Linux \u670d\u52a1\u5668\u53d1\u884c\u7248\u6392\u884c\u699c\uff1a http://os.51cto.com/art/201612/526126.htm \u5728\u51e0\u4e4e\u6bcf\u4e00\u4efd\u4e0e Linux \u6709\u5173\u7684\u699c\u5355\u4e0a\uff0c\u57fa\u4e8e Debian \u7684 Ubuntu \u90fd\u5360\u6709\u4e00\u5e2d\u4e4b\u4f4d\u3002Canonical \u7684Ubuntu \u80dc\u8fc7\u5176\u4ed6\u6240\u6709\u7684 Linux \u670d\u52a1\u5668\u53d1\u884c\u7248 \u2015\u2015 \u4ece\u7b80\u5355\u5b89\u88c5\u3001\u51fa\u8272\u7684\u786c\u4ef6\u53d1\u73b0\uff0c\u5230\u4e16\u754c\u7ea7\u7684\u5546\u4e1a\u652f\u6301\uff0cUbuntu\u786e\u7acb\u4e86\u96be\u4ee5\u4f01\u53ca\u7684\u4e25\u683c\u6807\u51c6 03. Linux \u7684\u5e94\u7528\u9886\u57df \u00b6 3.1 \u670d\u52a1\u5668\u9886\u57df \u00b6 Linux \u5728\u670d\u52a1\u5668\u9886\u57df\u7684\u5e94\u7528\u662f\u5176\u91cd\u8981\u5206\u652f Linux \u514d\u8d39\u3001\u7a33\u5b9a\u3001\u9ad8\u6548\u7b49\u7279\u70b9\u5728\u8fd9\u91cc\u5f97\u5230\u4e86\u5f88\u597d\u7684\u4f53\u73b0 \u65e9\u671f\u56e0\u4e3a\u7ef4\u62a4\u3001\u8fd0\u884c\u7b49\u539f\u56e0\u540c\u6837\u53d7\u5230\u4e86\u5f88\u5927\u7684\u9650\u5236 \u8fd1\u4e9b\u5e74\u6765 Linux \u670d\u52a1\u5668\u5e02\u573a\u5f97\u5230\u4e86\u98de\u901f\u7684\u63d0\u5347\uff0c\u5c24\u5176\u5728\u4e00\u4e9b\u9ad8\u7aef\u9886\u57df\u5c24\u4e3a\u5e7f\u6cdb 3.2 \u5d4c\u5165\u5f0f\u9886\u57df \u00b6 \u8fd1\u4e9b\u5e74\u6765 Linux \u5728\u5d4c\u5165\u5f0f\u9886\u57df\u7684\u5e94\u7528\u5f97\u5230\u4e86\u98de\u901f\u7684\u63d0\u9ad8 Linux \u8fd0\u884c\u7a33\u5b9a\u3001\u5bf9\u7f51\u7edc\u7684\u826f\u597d\u652f\u6301\u6027\u3001\u4f4e\u6210\u672c\uff0c\u4e14\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u8f6f\u4ef6\u88c1\u526a\uff0c\u5185\u6838\u6700\u5c0f\u53ef\u4ee5\u8fbe\u5230\u51e0\u767e KB \u7b49\u7279\u70b9\uff0c\u4f7f\u5176\u8fd1\u4e9b\u5e74\u6765\u5728\u5d4c\u5165\u5f0f\u9886\u57df\u7684\u5e94\u7528\u5f97\u5230\u975e\u5e38\u5927\u7684\u63d0\u9ad8 \u4e3b\u8981\u5e94\u7528\uff1a \u673a\u9876\u76d2 \u3001 \u6570\u5b57\u7535\u89c6 \u3001 \u7f51\u7edc\u7535\u8bdd \u3001 \u7a0b\u63a7\u4ea4\u6362\u673a \u3001 \u624b\u673a \u3001 PDA \u3001\u7b49\u90fd\u662f\u5176\u5e94\u7528\u9886\u57df\uff0c\u5f97\u5230\u4e86 Google\u3001\u4e09\u661f\u3001\u6469\u6258\u7f57\u62c9\u3001NEC \u7b49\u516c\u53f8\u7684\u5927\u529b\u63a8\u5e7f 3.3 \u4e2a\u4eba\u684c\u9762\u9886\u57df \u00b6 \u6b64\u9886\u57df\u662f\u4f20\u7edf Linux \u5e94\u7528\u6700\u8584\u5f31\u7684\u73af\u8282 \u4f20\u7edf Linux \u7531\u4e8e\u754c\u9762\u7b80\u5355\u3001\u64cd\u4f5c\u590d\u6742\u3001\u5e94\u7528\u8f6f\u4ef6\u5c11\u7684\u7f3a\u70b9\uff0c\u4e00\u76f4\u88ab Windows \u6240\u538b\u5236 \u8fd1\u4e9b\u5e74\u6765\u968f\u7740 Ubuntu \u3001 Fedora \u7b49\u4f18\u79c0\u684c\u9762\u73af\u5883\u7684\u5174\u8d77\uff0c\u540c\u65f6\u5404\u5927\u786c\u4ef6\u5382\u5546\u5bf9\u5176\u652f\u6301\u7684\u52a0\u5927\uff0cLinux \u5728\u4e2a\u4eba\u684c\u9762\u9886\u57df\u7684\u5360\u6709\u7387\u5728\u9010\u6e10\u7684\u63d0\u9ad8 \u5728 Ubuntu \u4e2d\u73a9 QQ \ufffc \u6587\u4ef6\u548c\u76ee\u5f55\uff08\u7406\u89e3\uff09 \u00b6 \u76ee\u6807 \u00b6 \u7406\u89e3 Linux \u6587\u4ef6\u76ee\u5f55\u7684\u7ed3\u6784 01. \u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf\u548c\u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf\uff08\u79d1\u666e\uff09 \u00b6 \u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \uff1a\u6307\u4e00\u53f0\u8ba1\u7b97\u673a\u5728\u540c\u4e00\u65f6\u95f4 \u53ea\u80fd\u7531\u4e00\u4e2a\u7528\u6237 \u4f7f\u7528\uff0c\u4e00\u4e2a\u7528\u6237\u72ec\u81ea\u4eab\u7528\u7cfb\u7edf\u7684\u5168\u90e8\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90 Windows XP \u4e4b\u524d\u7684\u7248\u672c\u90fd\u662f\u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \uff1a\u6307\u4e00\u53f0\u8ba1\u7b97\u673a\u5728\u540c\u4e00\u65f6\u95f4\u53ef\u4ee5\u7531 \u591a\u4e2a\u7528\u6237 \u4f7f\u7528\uff0c\u591a\u4e2a\u7528\u6237\u5171\u540c\u4eab\u7528\u7cfb\u7edf\u7684\u5168\u90e8\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90 Unix \u548c Linux \u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf 02. Windows \u548c Linux \u6587\u4ef6\u7cfb\u7edf\u533a\u522b \u00b6 2.1 Windows \u4e0b\u7684\u6587\u4ef6\u7cfb\u7edf \u00b6 \u5728 Windows \u4e0b\uff0c\u6253\u5f00 \u201c\u8ba1\u7b97\u673a\u201d\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u4e00\u4e2a\u4e2a\u7684\u9a71\u52a8\u5668\u76d8\u7b26\uff1a \ufffc \u6bcf\u4e2a\u9a71\u52a8\u5668\u90fd\u6709\u81ea\u5df1\u7684\u6839\u76ee\u5f55\u7ed3\u6784\uff0c\u8fd9\u6837\u5f62\u6210\u4e86\u591a\u4e2a\u6811\u5e76\u5217\u7684\u60c5\u5f62\uff0c\u5982\u56fe\u6240\u793a\uff1a \ufffc 2.2 Linux \u4e0b\u7684\u6587\u4ef6\u7cfb\u7edf \u00b6 \u5728 Linux \u4e0b\uff0c\u6211\u4eec\u662f\u770b\u4e0d\u5230\u8fd9\u4e9b\u9a71\u52a8\u5668\u76d8\u7b26\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\uff1a \ufffc Ubuntu \u6ca1\u6709\u76d8\u7b26\u8fd9\u4e2a\u6982\u5ff5\uff0c\u53ea\u6709\u4e00\u4e2a\u6839\u76ee\u5f55 / \uff0c\u6240\u6709\u6587\u4ef6\u90fd\u5728\u5b83\u4e0b\u9762 \ufffc 2.3 \u7528\u6237\u76ee\u5f55 \u00b6 \u4f4d\u4e8e /home/user \uff0c\u79f0\u4e4b\u4e3a\u7528\u6237\u5de5\u4f5c\u76ee\u5f55\u6216\u5bb6\u76ee\u5f55\uff0c\u8868\u793a\u65b9\u5f0f\uff1a /home/user ~ 2.4 Linux \u4e3b\u8981\u76ee\u5f55\u901f\u67e5\u8868 \u00b6 /\uff1a\u6839\u76ee\u5f55\uff0c \u4e00\u822c\u6839\u76ee\u5f55\u4e0b\u53ea\u5b58\u653e\u76ee\u5f55 \uff0c\u5728 linux \u4e0b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u76ee\u5f55\uff0c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u4ece\u8fd9\u91cc\u5f00\u59cb \u5f53\u5728\u7ec8\u7aef\u91cc\u8f93\u5165 /home \uff0c\u5176\u5b9e\u662f\u5728\u544a\u8bc9\u7535\u8111\uff0c\u5148\u4ece / \uff08\u6839\u76ee\u5f55\uff09\u5f00\u59cb\uff0c\u518d\u8fdb\u5165\u5230 home \u76ee\u5f55 /bin\u3001/usr/bin\uff1a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u5982\u5e38\u7528\u7684\u547d\u4ee4 ls\u3001tar\u3001mv\u3001cat \u7b49 /boot\uff1a\u653e\u7f6e linux \u7cfb\u7edf\u542f\u52a8\u65f6\u7528\u5230\u7684\u4e00\u4e9b\u6587\u4ef6\uff0c\u5982 linux \u7684\u5185\u6838\u6587\u4ef6\uff1a /boot/vmlinuz \uff0c\u7cfb\u7edf\u5f15\u5bfc\u7ba1\u7406\u5668\uff1a /boot/grub /dev\uff1a\u5b58\u653elinux\u7cfb\u7edf\u4e0b\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u8bbf\u95ee\u8be5\u76ee\u5f55\u4e0b\u67d0\u4e2a\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e\u8bbf\u95ee\u67d0\u4e2a\u8bbe\u5907\uff0c\u5e38\u7528\u7684\u662f\u6302\u8f7d\u5149\u9a71 mount /dev/cdrom /mnt /etc\uff1a\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u4e0d\u5efa\u8bae\u5728\u6b64\u76ee\u5f55\u4e0b\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u91cd\u8981\u7684\u914d\u7f6e\u6587\u4ef6\u6709 /etc/inittab /etc/fstab /etc/init.d /etc/X11 /etc/sysconfig /etc/xinetd.d /home\uff1a\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7528\u6237\u5bb6\u76ee\u5f55\uff0c\u65b0\u589e\u7528\u6237\u8d26\u53f7\u65f6\uff0c\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u90fd\u5b58\u653e\u5728\u6b64\u76ee\u5f55\u4e0b ~ \u8868\u793a\u5f53\u524d\u7528\u6237\u7684\u5bb6\u76ee\u5f55 ~edu \u8868\u793a\u7528\u6237 edu \u7684\u5bb6\u76ee\u5f55 /lib\u3001/usr/lib\u3001/usr/local/lib\uff1a\u7cfb\u7edf\u4f7f\u7528\u7684\u51fd\u6570\u5e93\u7684\u76ee\u5f55\uff0c\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u8c03\u7528\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u65f6\u9700\u8981\u51fd\u6570\u5e93\u7684\u534f\u52a9 /lost+fount\uff1a\u7cfb\u7edf\u5f02\u5e38\u4ea7\u751f\u9519\u8bef\u65f6\uff0c\u4f1a\u5c06\u4e00\u4e9b\u9057\u5931\u7684\u7247\u6bb5\u653e\u7f6e\u4e8e\u6b64\u76ee\u5f55\u4e0b /mnt: /media\uff1a\u5149\u76d8\u9ed8\u8ba4\u6302\u8f7d\u70b9\uff0c\u901a\u5e38\u5149\u76d8\u6302\u8f7d\u4e8e /mnt/cdrom \u4e0b\uff0c\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4f4d\u7f6e\u8fdb\u884c\u6302\u8f7d /opt\uff1a\u7ed9\u4e3b\u673a\u989d\u5916\u5b89\u88c5\u8f6f\u4ef6\u6240\u6446\u653e\u7684\u76ee\u5f55 /proc\uff1a\u6b64\u76ee\u5f55\u7684\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\uff0c\u5982\u7cfb\u7edf\u6838\u5fc3\uff0c\u5916\u90e8\u8bbe\u5907\uff0c\u7f51\u7edc\u72b6\u6001\uff0c\u7531\u4e8e\u6570\u636e\u90fd\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u4e0d\u5360\u7528\u78c1\u76d8\u7a7a\u95f4\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u6587\u4ef6\u6709\uff1a/proc/cpuinfo\u3001/proc/interrupts\u3001/proc/dma\u3001/proc/ioports\u3001/proc/net/* \u7b49 /root\uff1a\u7cfb\u7edf\u7ba1\u7406\u5458root\u7684\u5bb6\u76ee\u5f55 /sbin\u3001/usr/sbin\u3001/usr/local/sbin\uff1a\u653e\u7f6e\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u53ef\u6267\u884c\u547d\u4ee4\uff0c\u5982 fdisk\u3001shutdown\u3001mount \u7b49\u3002\u4e0e /bin \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u51e0\u4e2a\u76ee\u5f55\u662f\u7ed9\u7cfb\u7edf\u7ba1\u7406\u5458 root \u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u4e00\u822c\u7528\u6237\u53ea\u80fd\"\u67e5\u770b\"\u800c\u4e0d\u80fd\u8bbe\u7f6e\u548c\u4f7f\u7528 /tmp\uff1a\u4e00\u822c\u7528\u6237\u6216\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u4e34\u65f6\u5b58\u653e\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u91cd\u8981\u6570\u636e\u4e0d\u53ef\u653e\u7f6e\u5728\u6b64\u76ee\u5f55\u4e0b /srv\uff1a\u670d\u52a1\u542f\u52a8\u4e4b\u540e\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5982 www \u670d\u52a1\u9700\u8981\u8bbf\u95ee\u7684\u7f51\u9875\u6570\u636e\u5b58\u653e\u5728 /srv/www \u5185 /usr\uff1a\u5e94\u7528\u7a0b\u5e8f\u5b58\u653e\u76ee\u5f55 /usr/bin\uff1a\u5b58\u653e\u5e94\u7528\u7a0b\u5e8f /usr/share\uff1a\u5b58\u653e\u5171\u4eab\u6570\u636e /usr/lib\uff1a\u5b58\u653e\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u5374\u662f\u8bb8\u591a\u7a0b\u5e8f\u8fd0\u884c\u6240\u5fc5\u9700\u7684\u4e00\u4e9b\u51fd\u6570\u5e93\u6587\u4ef6 /usr/local\uff1a\u5b58\u653e\u8f6f\u4ef6\u5347\u7ea7\u5305 /usr/share/doc\uff1a\u7cfb\u7edf\u8bf4\u660e\u6587\u4ef6\u5b58\u653e\u76ee\u5f55 /usr/share/man\uff1a\u7a0b\u5e8f\u8bf4\u660e\u6587\u4ef6\u5b58\u653e\u76ee\u5f55 /var\uff1a\u653e\u7f6e\u7cfb\u7edf\u6267\u884c\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u53d8\u5316\u7684\u6587\u4ef6 /var/log\uff1a\u968f\u65f6\u66f4\u6539\u7684\u65e5\u5fd7\u6587\u4ef6 /var/spool/mail\uff1a\u90ae\u4ef6\u5b58\u653e\u7684\u76ee\u5f55 /var/run\uff1a\u7a0b\u5e8f\u6216\u670d\u52a1\u542f\u52a8\u540e\uff0c\u5176 PID \u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e0b Ubuntu \u56fe\u5f62\u754c\u9762\u5165\u95e8 \u00b6 \u76ee\u6807 \u00b6 \u719f\u6089 Ubuntu \u56fe\u5f62\u754c\u9762\u7684\u57fa\u672c\u4f7f\u7528 01. Ubuntu \u7684\u4efb\u52a1\u680f \u00b6 \ufffc 02. \u7a97\u53e3\u64cd\u4f5c\u6309\u94ae \u00b6 \ufffc 03. \u7a97\u53e3\u83dc\u5355\u6761 \u00b6 \ufffc \u5e38\u7528 Linux \u547d\u4ee4\u7684\u57fa\u672c\u4f7f\u7528 \u00b6 \u76ee\u6807 \u00b6 \u7406\u89e3\u5b66\u4e60 Linux \u7ec8\u7aef\u547d\u4ee4\u7684\u539f\u56e0 \u5e38\u7528 Linux \u547d\u4ee4\u4f53\u9a8c 01. \u5b66\u4e60 Linux \u7ec8\u7aef\u547d\u4ee4\u7684\u539f\u56e0 \u00b6 Linux \u521a\u9762\u4e16\u65f6\u5e76\u6ca1\u6709\u56fe\u5f62\u754c\u9762\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u5168\u9760\u547d\u4ee4\u5b8c\u6210\uff0c\u5982 \u78c1\u76d8\u64cd\u4f5c\u3001\u6587\u4ef6\u5b58\u53d6\u3001\u76ee\u5f55\u64cd\u4f5c\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u6587\u4ef6\u6743\u9650 \u8bbe\u5b9a\u7b49 \u5728\u804c\u573a\u4e2d\uff0c\u5927\u91cf\u7684 \u670d\u52a1\u5668\u7ef4\u62a4\u5de5\u4f5c \u90fd\u662f\u5728 \u8fdc\u7a0b \u901a\u8fc7 SSH \u5ba2\u6237\u7aef \u6765\u5b8c\u6210\u7684\uff0c\u5e76\u6ca1\u6709\u56fe\u5f62\u754c\u9762\uff0c\u6240\u6709\u7684\u7ef4\u62a4\u5de5\u4f5c\u90fd\u9700\u8981\u901a\u8fc7\u547d\u4ee4\u6765\u5b8c\u6210 \u5728\u804c\u573a\u4e2d\uff0c\u4f5c\u4e3a\u540e\u7aef\u7a0b\u5e8f\u5458\uff0c\u5fc5\u987b\u8981\u6216\u591a\u6216\u5c11\u7684\u638c\u63e1\u4e00\u4e9b Linux \u5e38\u7528\u7684\u7ec8\u7aef\u547d\u4ee4 Linux \u53d1\u884c\u7248\u672c\u7684\u547d\u4ee4\u5927\u6982\u6709 200 \u591a\u4e2a\uff0c\u4f46\u662f\u5e38\u7528\u7684\u547d\u4ee4\u53ea\u6709 10 \u591a\u4e2a\u800c\u5df2 \u5b66\u4e60\u7ec8\u7aef\u547d\u4ee4\u7684\u6280\u5de7\uff1a \u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\uff0c\u5bf9\u4e8e\u5e38\u7528\u547d\u4ee4\uff0c\u7528\u7684\u591a\u4e86\uff0c\u81ea\u7136\u5c31\u8bb0\u4f4f\u4e86 \u4e0d\u8981\u5c1d\u8bd5\u4e00\u6b21\u5b66\u4f1a\u6240\u6709\u7684\u547d\u4ee4\uff0c\u6709\u4e9b\u547d\u4ee4\u662f\u975e\u5e38\u4e0d\u5e38\u7528\u7684\uff0c\u4e34\u65f6\u9047\u5230\uff0c\u4e34\u65f6\u767e\u5ea6\u5c31\u53ef\u4ee5 02. \u5e38\u7528 Linux \u547d\u4ee4\u7684\u57fa\u672c\u4f7f\u7528 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ls list \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9 02 pwd print wrok directory \u67e5\u770b\u5f53\u524d\u6240\u5728\u6587\u4ef6\u5939 03 cd [\u76ee\u5f55\u540d] change directory \u5207\u6362\u6587\u4ef6\u5939 04 touch [\u6587\u4ef6\u540d] touch \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u65b0\u5efa\u6587\u4ef6 05 mkdir [\u76ee\u5f55\u540d] make directory \u521b\u5efa\u76ee\u5f55 06 rm [\u6587\u4ef6\u540d] remove \u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\u540d 07 clear clear \u6e05\u5c4f > \u5c0f\u6280\u5de7 > * ctrl + shift + = \u653e\u5927\u7ec8\u7aef\u7a97\u53e3\u7684\u5b57\u4f53\u663e\u793a > * ctrl + - \u7f29\u5c0f\u7ec8\u7aef\u7a97\u53e3\u7684\u5b57\u4f53\u663e\u793a ## 03. \u81ea\u52a8\u8865\u5168 \u5728\u6572\u51fa \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \u7684\u524d\u51e0\u4e2a\u5b57\u6bcd\u4e4b\u540e\uff0c\u6309\u4e0b tab \u952e \u5982\u679c\u8f93\u5165\u7684\u6ca1\u6709\u6b67\u4e49\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8865\u5168 \u5982\u679c\u8fd8\u5b58\u5728\u5176\u4ed6 \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \uff0c\u518d\u6309\u4e00\u4e0b tab \u952e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u53ef\u80fd\u5b58\u5728\u7684\u547d\u4ee4 > \u5c0f\u6280\u5de7 \u6309 \u4e0a\uff0f\u4e0b \u5149\u6807\u952e\u53ef\u4ee5\u5728\u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4\u4e4b\u95f4\u6765\u56de\u5207\u6362 \u5982\u679c\u60f3\u8981\u9000\u51fa\u9009\u62e9\uff0c\u5e76\u4e14\u4e0d\u60f3\u6267\u884c\u5f53\u524d\u9009\u4e2d\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u6309 ctrl + c Linux \u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f \u00b6 \u76ee\u6807 \u00b6 \u4e86\u89e3\u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f \u77e5\u9053\u5982\u4f55\u67e5\u9605\u7ec8\u7aef\u547d\u4ee4\u5e2e\u52a9\u4fe1\u606f 01. \u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f \u00b6 command [-options] [parameter] \u8bf4\u660e\uff1a * command\uff1a\u547d\u4ee4\u540d\uff0c\u76f8\u5e94\u529f\u80fd\u7684\u82f1\u6587\u5355\u8bcd\u6216\u5355\u8bcd\u7684\u7f29\u5199 * [-options]\uff1a\u9009\u9879\uff0c\u53ef\u7528\u6765\u5bf9\u547d\u4ee4\u8fdb\u884c\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565 * parameter\uff1a\u4f20\u7ed9\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u662f \u96f6\u4e2a\u3001\u4e00\u4e2a \u6216\u8005 \u591a\u4e2a * [] \u4ee3\u8868\u53ef\u9009 02. \u67e5\u9605\u547d\u4ee4\u5e2e\u52a9\u4fe1\u606f\uff08\u77e5\u9053\uff09 \u00b6 \u63d0\u793a \u73b0\u9636\u6bb5\u53ea\u9700\u8981 \u77e5\u9053 \u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u67e5\u8be2\u547d\u4ee4\u7684\u5e2e\u52a9\u4fe1\u606f \u5148\u5b66\u4e60\u5e38\u7528\u547d\u4ee4\u53ca\u5e38\u7528\u9009\u9879\u7684\u4f7f\u7528\u5373\u53ef\uff0c\u5de5\u4f5c\u4e2d\u5982\u679c\u9047\u5230\u95ee\u9898\u53ef\u4ee5\u501f\u52a9 \u7f51\u7edc\u641c\u7d22 2.1 --help \u00b6 command --help \u8bf4\u660e\uff1a \u663e\u793a command \u547d\u4ee4\u7684\u5e2e\u52a9\u4fe1\u606f 2.2 man \u00b6 man command \u8bf4\u660e\uff1a \u67e5\u9605 command \u547d\u4ee4\u7684\u4f7f\u7528\u624b\u518c man \u662f manual \u7684\u7f29\u5199\uff0c\u662f Linux \u63d0\u4f9b\u7684\u4e00\u4e2a \u624b\u518c\uff0c\u5305\u542b\u4e86\u7edd\u5927\u90e8\u5206\u7684\u547d\u4ee4\u3001\u51fd\u6570\u7684\u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e \u4f7f\u7528 man \u65f6\u7684\u64cd\u4f5c\u952e\uff1a \u64cd\u4f5c\u952e \u529f\u80fd \u7a7a\u683c\u952e \u663e\u793a\u624b\u518c\u9875\u7684\u4e0b\u4e00\u5c4f Enter \u952e \u4e00\u6b21\u6eda\u52a8\u624b\u518c\u9875\u7684\u4e00\u884c b \u56de\u6eda\u4e00\u5c4f f \u524d\u6eda\u4e00\u5c4f q \u9000\u51fa /word \u641c\u7d22 word \u5b57\u7b26\u4e32 \u6587\u4ef6\u548c\u76ee\u5f55\u5e38\u7528\u547d\u4ee4 \u00b6 \u76ee\u6807 \u00b6 \u67e5\u770b\u76ee\u5f55\u5185\u5bb9 ls \u5207\u6362\u76ee\u5f55 cd \u521b\u5efa\u548c\u5220\u9664\u64cd\u4f5c touch rm mkdir \u62f7\u8d1d\u548c\u79fb\u52a8\u6587\u4ef6 cp mv \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 cat more grep \u5176\u4ed6 echo \u91cd\u5b9a\u5411 > \u548c >> \u7ba1\u9053 | 01. \u67e5\u770b\u76ee\u5f55\u5185\u5bb9 \u00b6 1.1 \u7ec8\u7aef\u5b9e\u7528\u6280\u5de7 \u00b6 1> \u81ea\u52a8\u8865\u5168 \u00b6 \u5728\u6572\u51fa \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \u7684\u524d\u51e0\u4e2a\u5b57\u6bcd\u4e4b\u540e\uff0c\u6309\u4e0b tab \u952e \u5982\u679c\u8f93\u5165\u7684\u6ca1\u6709\u6b67\u4e49\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8865\u5168 \u5982\u679c\u8fd8\u5b58\u5728\u5176\u4ed6 \u6587\u4ef6 \uff0f \u76ee\u5f55 \uff0f \u547d\u4ee4 \uff0c\u518d\u6309\u4e00\u4e0b tab \u952e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u53ef\u80fd\u5b58\u5728\u7684\u547d\u4ee4 2> \u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4 \u00b6 \u6309 \u4e0a \uff0f \u4e0b \u5149\u6807\u952e\u53ef\u4ee5\u5728\u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4\u4e4b\u95f4\u6765\u56de\u5207\u6362 \u5982\u679c\u60f3\u8981\u9000\u51fa\u9009\u62e9\uff0c\u5e76\u4e14\u4e0d\u60f3\u6267\u884c\u5f53\u524d\u9009\u4e2d\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u6309 ctrl + c 1.2 ls \u547d\u4ee4\u8bf4\u660e \u00b6 ls \u662f\u82f1\u6587\u5355\u8bcd list \u7684\u7b80\u5199\uff0c\u5176\u529f\u80fd\u4e3a\u5217\u51fa\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u662f\u7528\u6237\u6700\u5e38\u7528\u7684\u547d\u4ee4\u4e4b\u4e00\uff0c\u7c7b\u4f3c\u4e8e DOS \u4e0b\u7684 dir \u547d\u4ee4 Linux \u4e0b\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7279\u70b9 \u00b6 Linux \u6587\u4ef6 \u6216\u8005 \u76ee\u5f55 \u540d\u79f0\u6700\u957f\u53ef\u4ee5\u6709 256 \u4e2a\u5b57\u7b26 \u4ee5 . \u5f00\u5934\u7684\u6587\u4ef6\u4e3a\u9690\u85cf\u6587\u4ef6\uff0c\u9700\u8981\u7528 -a \u53c2\u6570\u624d\u80fd\u663e\u793a . \u4ee3\u8868\u5f53\u524d\u76ee\u5f55 .. \u4ee3\u8868\u4e0a\u4e00\u7ea7\u76ee\u5f55 1.3 ls \u5e38\u7528\u9009\u9879 \u00b6 \u53c2\u6570 \u542b\u4e49 -a \u663e\u793a\u6307\u5b9a\u76ee\u5f55\u4e0b\u6240\u6709\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6 -l \u4ee5\u5217\u8868\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f -h \u914d\u5408 -l \u4ee5\u4eba\u6027\u5316\u7684\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u5927\u5c0f \u8ba1\u7b97\u673a\u4e2d\u6587\u4ef6\u5927\u5c0f\u7684\u8868\u793a\u65b9\u5f0f\uff08\u79d1\u666e\uff09 \u00b6 \u5355\u4f4d \u82f1\u6587 \u542b\u4e49 \u5b57\u8282 B\uff08Byte\uff09 \u5728\u8ba1\u7b97\u673a\u4e2d\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\u5355\u5143\uff0c\u4e00\u822c\u4e3a 8 \u4f4d\u4e8c\u8fdb\u5236\u6570 \u5343 K\uff08Kibibyte\uff09 1 KB = 1024 B\uff0c\u5343\u5b57\u8282 \uff081024 = 2 ** 10\uff09 \u5146 M\uff08Mebibyte\uff09 1 MB = 1024 KB\uff0c\u767e\u4e07\u5b57\u8282 \u5343\u5146 G\uff08Gigabyte\uff09 1 GB = 1024 MB\uff0c\u5341\u4ebf\u5b57\u8282\uff0c\u5343\u5146\u5b57\u8282 \u592a T\uff08Terabyte\uff09 1 TB = 1024 GB\uff0c\u4e07\u4ebf\u5b57\u8282\uff0c\u592a\u5b57\u8282 \u62cd P\uff08Petabyte\uff09 1 PB = 1024 TB\uff0c\u5343\u4e07\u4ebf\u5b57\u8282\uff0c\u62cd\u5b57\u8282 \u827e E\uff08Exabyte\uff09 1 EB = 1024 PB\uff0c\u767e\u4ebf\u4ebf\u5b57\u8282\uff0c\u827e\u5b57\u8282 \u6cfd Z\uff08Zettabyte\uff09 1 ZB = 1024 EB\uff0c\u5341\u4e07\u4ebf\u4ebf\u5b57\u8282\uff0c\u6cfd\u5b57\u8282 \u5c27 Y\uff08Yottabyte\uff09 1 YB = 1024 ZB\uff0c\u4e00\u4ebf\u4ebf\u4ebf\u5b57\u8282\uff0c\u5c27\u5b57\u8282 1.4 ls \u901a\u914d\u7b26\u7684\u4f7f\u7528 \u00b6 \u901a\u914d\u7b26 \u542b\u4e49 * \u4ee3\u8868\u4efb\u610f\u4e2a\u6570\u4e2a\u5b57\u7b26 ? \u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff0c\u81f3\u5c11 1 \u4e2a [] \u8868\u793a\u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u7ec4\u4e2d\u7684\u4efb\u4e00\u4e00\u4e2a [abc] \u5339\u914d a\u3001b\u3001c \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a [a-f] \u5339\u914d\u4ece a \u5230 f \u8303\u56f4\u5185\u7684\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 02. \u5207\u6362\u76ee\u5f55 \u00b6 2.1 cd \u00b6 cd \u662f\u82f1\u6587\u5355\u8bcd change directory \u7684\u7b80\u5199\uff0c\u5176\u529f\u80fd\u4e3a\u66f4\u6539\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e5f\u662f\u7528\u6237\u6700\u5e38\u7528\u7684\u547d\u4ee4\u4e4b\u4e00 \u6ce8\u610f\uff1aLinux \u6240\u6709\u7684 \u76ee\u5f55 \u548c \u6587\u4ef6\u540d \u90fd\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684 \u547d\u4ee4 \u542b\u4e49 cd \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55(/home/\u7528\u6237\u76ee\u5f55) cd ~ \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55(/home/\u7528\u6237\u76ee\u5f55) cd . \u4fdd\u6301\u5728\u5f53\u524d\u76ee\u5f55\u4e0d\u53d8 cd .. \u5207\u6362\u5230\u4e0a\u7ea7\u76ee\u5f55 cd - \u53ef\u4ee5\u5728\u6700\u8fd1\u4e24\u6b21\u5de5\u4f5c\u76ee\u5f55\u4e4b\u95f4\u6765\u56de\u5207\u6362 2.2 \u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84 \u00b6 \u76f8\u5bf9\u8def\u5f84 \u5728\u8f93\u5165\u8def\u5f84\u65f6\uff0c\u6700\u524d\u9762\u4e0d\u662f / \u6216\u8005 ~ \uff0c\u8868\u793a\u76f8\u5bf9 \u5f53\u524d\u76ee\u5f55 \u6240\u5728\u7684\u76ee\u5f55\u4f4d\u7f6e \u7edd\u5bf9\u8def\u5f84 \u5728\u8f93\u5165\u8def\u5f84\u65f6\uff0c\u6700\u524d\u9762\u662f / \u6216\u8005 ~ \uff0c\u8868\u793a\u4ece \u6839\u76ee\u5f55/\u5bb6\u76ee\u5f55 \u5f00\u59cb\u7684\u5177\u4f53\u76ee\u5f55\u4f4d\u7f6e 03. \u521b\u5efa\u548c\u5220\u9664\u64cd\u4f5c \u00b6 3.1 touch \u00b6 \u521b\u5efa\u6587\u4ef6\u6216\u4fee\u6539\u6587\u4ef6\u65f6\u95f4 \u5982\u679c\u6587\u4ef6 \u4e0d\u5b58\u5728 \uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u6587\u4ef6 \u5982\u679c\u6587\u4ef6 \u5df2\u7ecf\u5b58\u5728 \uff0c\u53ef\u4ee5\u4fee\u6539\u6587\u4ef6\u7684\u672b\u6b21\u4fee\u6539\u65e5\u671f 3.2 mkdir \u00b6 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55 \u9009\u9879 \u542b\u4e49 -p \u53ef\u4ee5\u9012\u5f52\u521b\u5efa\u76ee\u5f55 \u65b0\u5efa\u76ee\u5f55\u7684\u540d\u79f0 \u4e0d\u80fd\u4e0e\u5f53\u524d\u76ee\u5f55\u4e2d \u5df2\u6709\u7684\u76ee\u5f55\u6216\u6587\u4ef6 \u540c\u540d 3.3 rm \u00b6 \u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55 \u4f7f\u7528 rm \u547d\u4ee4\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u6587\u4ef6\u5220\u9664\u540e\u4e0d\u80fd\u6062\u590d \u9009\u9879 \u542b\u4e49 -f \u5f3a\u5236\u5220\u9664\uff0c\u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u65e0\u9700\u63d0\u793a -r \u9012\u5f52\u5730\u5220\u9664\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c \u5220\u9664\u6587\u4ef6\u5939 \u65f6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570 04. \u62f7\u8d1d\u548c\u79fb\u52a8\u6587\u4ef6 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 tree [\u76ee\u5f55\u540d] tree \u4ee5\u6811\u72b6\u56fe\u5217\u51fa\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784 02 cp \u6e90\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 copy \u590d\u5236\u6587\u4ef6\u6216\u8005\u76ee\u5f55 03 mv \u6e90\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 move \u79fb\u52a8\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff0f\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u91cd\u547d\u540d 4.1 tree \u00b6 tree \u547d\u4ee4\u53ef\u4ee5\u4ee5\u6811\u72b6\u56fe\u5217\u51fa\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784 \u9009\u9879 \u542b\u4e49 -d \u53ea\u663e\u793a\u76ee\u5f55 4.2 cp \u00b6 cp \u547d\u4ee4\u7684\u529f\u80fd\u662f\u5c06\u7ed9\u51fa\u7684 \u6587\u4ef6 \u6216 \u76ee\u5f55 \u590d\u5236\u5230\u53e6\u4e00\u4e2a \u6587\u4ef6 \u6216 \u76ee\u5f55 \u4e2d\uff0c\u76f8\u5f53\u4e8e DOS \u4e0b\u7684 copy \u547d\u4ee4 \u9009\u9879 \u542b\u4e49 -i \u8986\u76d6\u6587\u4ef6\u524d\u63d0\u793a -r \u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6\uff0c\u5219 cp \u5c06\u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u4e3a\u4e00\u4e2a\u76ee\u5f55\u540d 4.3 mv \u00b6 mv \u547d\u4ee4\u53ef\u4ee5\u7528\u6765 \u79fb\u52a8 \u6587\u4ef6 \u6216 \u76ee\u5f55 \uff0c\u4e5f\u53ef\u4ee5\u7ed9 \u6587\u4ef6\u6216\u76ee\u5f55\u91cd\u547d\u540d \u9009\u9879 \u542b\u4e49 -i \u8986\u76d6\u6587\u4ef6\u524d\u63d0\u793a 05. \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 cat \u6587\u4ef6\u540d concatenate \u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u3001\u521b\u5efa\u6587\u4ef6\u3001\u6587\u4ef6\u5408\u5e76\u3001\u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u7b49\u529f\u80fd 02 more \u6587\u4ef6\u540d more \u5206\u5c4f\u663e\u793a\u6587\u4ef6\u5185\u5bb9 03 grep \u641c\u7d22\u6587\u672c \u6587\u4ef6\u540d grep \u641c\u7d22\u6587\u672c\u6587\u4ef6\u5185\u5bb9 5.1 cat \u00b6 cat \u547d\u4ee4\u53ef\u4ee5\u7528\u6765 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \u3001 \u521b\u5efa\u6587\u4ef6 \u3001 \u6587\u4ef6\u5408\u5e76 \u3001 \u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9 \u7b49\u529f\u80fd cat \u4f1a\u4e00\u6b21\u663e\u793a\u6240\u6709\u7684\u5185\u5bb9\uff0c\u9002\u5408 \u67e5\u770b\u5185\u5bb9\u8f83\u5c11 \u7684\u6587\u672c\u6587\u4ef6 \u9009\u9879 \u542b\u4e49 -b \u5bf9\u975e\u7a7a\u8f93\u51fa\u884c\u7f16\u53f7 -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7 Linux \u4e2d\u8fd8\u6709\u4e00\u4e2a nl \u7684\u547d\u4ee4\u548c cat -b \u7684\u6548\u679c\u7b49\u4ef7 5.2 more \u00b6 more \u547d\u4ee4\u53ef\u4ee5\u7528\u4e8e\u5206\u5c4f\u663e\u793a\u6587\u4ef6\u5185\u5bb9\uff0c\u6bcf\u6b21\u53ea\u663e\u793a\u4e00\u9875\u5185\u5bb9 \u9002\u5408\u4e8e **\u67e5\u770b\u5185\u5bb9\u8f83\u591a**\u7684\u6587\u672c\u6587\u4ef6 \u4f7f\u7528 more \u7684\u64cd\u4f5c\u952e\uff1a \u64cd\u4f5c\u952e \u529f\u80fd \u7a7a\u683c\u952e \u663e\u793a\u624b\u518c\u9875\u7684\u4e0b\u4e00\u5c4f Enter \u952e \u4e00\u6b21\u6eda\u52a8\u624b\u518c\u9875\u7684\u4e00\u884c b \u56de\u6eda\u4e00\u5c4f f \u524d\u6eda\u4e00\u5c4f q \u9000\u51fa /word \u641c\u7d22 word \u5b57\u7b26\u4e32 5.3 grep \u00b6 Linux \u7cfb\u7edf\u4e2d grep \u547d\u4ee4\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177 grep \u5141\u8bb8\u5bf9\u6587\u672c\u6587\u4ef6\u8fdb\u884c **\u6a21\u5f0f**\u67e5\u627e\uff0c\u6240\u8c13\u6a21\u5f0f\u67e5\u627e\uff0c\u53c8\u88ab\u79f0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3 \u9009\u9879 \u542b\u4e49 -n \u663e\u793a\u5339\u914d\u884c\u53ca\u884c\u53f7 -v \u663e\u793a\u4e0d\u5305\u542b\u5339\u914d\u6587\u672c\u7684\u6240\u6709\u884c\uff08\u76f8\u5f53\u4e8e\u6c42\u53cd\uff09 -i \u5ffd\u7565\u5927\u5c0f\u5199 \u5e38\u7528\u7684\u4e24\u79cd\u6a21\u5f0f\u67e5\u627e \u53c2\u6570 \u542b\u4e49 ^a \u884c\u9996\uff0c\u641c\u5bfb\u4ee5 a \u5f00\u5934\u7684\u884c ke$ \u884c\u5c3e\uff0c\u641c\u5bfb\u4ee5 ke \u7ed3\u675f\u7684\u884c 06. \u5176\u4ed6 \u00b6 6.1 echo \u6587\u5b57\u5185\u5bb9 \u00b6 echo \u4f1a\u5728\u7ec8\u7aef\u4e2d\u663e\u793a\u53c2\u6570\u6307\u5b9a\u7684\u6587\u5b57\uff0c\u901a\u5e38\u4f1a\u548c \u91cd\u5b9a\u5411 \u8054\u5408\u4f7f\u7528 6.2 \u91cd\u5b9a\u5411 > \u548c >> \u00b6 Linux \u5141\u8bb8\u5c06\u547d\u4ee4\u6267\u884c\u7ed3\u679c \u91cd\u5b9a\u5411**\u5230\u4e00\u4e2a **\u6587\u4ef6 \u5c06\u672c\u5e94\u663e\u793a\u5728**\u7ec8\u7aef\u4e0a\u7684\u5185\u5bb9** \u8f93\u51fa\uff0f\u8ffd\u52a0 \u5230**\u6307\u5b9a\u6587\u4ef6\u4e2d** \u5176\u4e2d > \u8868\u793a\u8f93\u51fa\uff0c\u4f1a\u8986\u76d6\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9 >> \u8868\u793a\u8ffd\u52a0\uff0c\u4f1a\u5c06\u5185\u5bb9\u8ffd\u52a0\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e 6.3 \u7ba1\u9053 | \u00b6 Linux \u5141\u8bb8\u5c06 \u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa \u53ef\u4ee5**\u901a\u8fc7\u7ba1\u9053** \u505a\u4e3a \u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165 \u53ef\u4ee5\u7406\u89e3\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u7ba1\u5b50\uff0c\u7ba1\u5b50\u7684\u4e00\u5934\u585e\u4e1c\u897f\u8fdb\u53bb\uff0c\u53e6\u4e00\u5934\u53d6\u51fa\u6765\uff0c\u8fd9\u91cc | \u7684\u5de6\u53f3\u5206\u4e3a\u4e24\u7aef\uff0c\u5de6\u7aef\u585e\u4e1c\u897f\uff08\u5199\uff09\uff0c\u53f3\u7aef\u53d6\u4e1c\u897f\uff08\u8bfb\uff09 \u5e38\u7528\u7684\u7ba1\u9053\u547d\u4ee4\u6709\uff1a more \uff1a\u5206\u5c4f\u663e\u793a\u5185\u5bb9 grep \uff1a\u5728\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\u67e5\u8be2\u6307\u5b9a\u7684\u6587\u672c \u8fdc\u7a0b\u7ba1\u7406\u5e38\u7528\u547d\u4ee4 \u00b6 \u76ee\u6807 \u00b6 \u5173\u673a/\u91cd\u542f shutdown \u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f ifconfig ping \u8fdc\u7a0b\u767b\u5f55\u548c\u590d\u5236\u6587\u4ef6 ssh scp 01. \u5173\u673a/\u91cd\u542f \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 shutdown \u9009\u9879 \u65f6\u95f4 shutdown \u5173\u673a\uff0f\u91cd\u65b0\u542f\u52a8 1.1 shutdown \u00b6 shutdown \u547d\u4ee4\u53ef\u4ee5 \u5b89\u5168 \u5173\u95ed \u6216\u8005 \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf \u9009\u9879 \u542b\u4e49 -r \u91cd\u65b0\u542f\u52a8 \u63d0\u793a\uff1a \u4e0d\u6307\u5b9a\u9009\u9879\u548c\u53c2\u6570 \uff0c\u9ed8\u8ba4\u8868\u793a 1 \u5206\u949f**\u4e4b\u540e **\u5173\u95ed\u7535\u8111 \u8fdc\u7a0b\u7ef4\u62a4\u670d\u52a1\u5668\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u5173\u95ed\u7cfb\u7edf\uff0c\u800c\u5e94\u8be5\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf \u5e38\u7528\u547d\u4ee4\u793a\u4f8b # \u91cd\u65b0\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5176\u4e2d now \u8868\u793a\u73b0\u5728 $ shutdown -r now # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u8868\u793a\u73b0\u5728 $ shutdown now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u4f1a\u5173\u673a $ shutdown 20 :25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a8\u5173\u673a $ shutdown +10 # \u53d6\u6d88\u4e4b\u524d\u6307\u5b9a\u7684\u5173\u673a\u8ba1\u5212 $ shutdown -c 02. \u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ifconfig configure a network interface \u67e5\u770b/\u914d\u7f6e\u8ba1\u7b97\u673a\u5f53\u524d\u7684\u7f51\u5361\u914d\u7f6e\u4fe1\u606f 02 ping ip\u5730\u5740 ping \u68c0\u6d4b\u5230\u76ee\u6807 ip\u5730\u5740 \u7684\u8fde\u63a5\u662f\u5426\u6b63\u5e38 2.1 \u7f51\u5361 \u548c IP \u5730\u5740 \u00b6 \u7f51\u5361 \u00b6 \u7f51\u5361\u662f\u4e00\u4e2a\u4e13\u95e8\u8d1f\u8d23\u7f51\u7edc\u901a\u8baf\u7684\u786c\u4ef6\u8bbe\u5907 **IP \u5730\u5740**\u662f\u8bbe\u7f6e\u5728\u7f51\u5361\u4e0a\u7684\u5730\u5740\u4fe1\u606f \u6211\u4eec\u53ef\u4ee5\u628a \u7535\u8111 \u6bd4\u4f5c \u7535\u8bdd \uff0c \u7f51\u5361 \u76f8\u5f53\u4e8e SIM \u5361 \uff0c IP \u5730\u5740 \u76f8\u5f53\u4e8e \u7535\u8bdd\u53f7\u7801 IP \u5730\u5740 \u00b6 \u6bcf\u53f0\u8054\u7f51\u7684\u7535\u8111\u4e0a**\u90fd\u6709 **IP \u5730\u5740 \uff0c \u662f\u4fdd\u8bc1\u7535\u8111\u4e4b\u95f4\u6b63\u5e38\u901a\u8baf\u7684\u91cd\u8981\u8bbe\u7f6e \u6ce8\u610f\uff1a\u6bcf\u53f0\u7535\u8111\u7684 IP \u5730\u5740\u4e0d\u80fd\u76f8\u540c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 IP \u5730\u5740\u51b2\u7a81\uff0c\u5e76\u4e14\u6ca1\u6709\u529e\u6cd5\u6b63\u5e38\u901a\u8baf \u63d0\u793a\uff1a\u6709\u5173 **IP \u5730\u5740**\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff01 2.2 ifconfig \u00b6 ifconfig \u53ef\u4ee5\u67e5\u770b\uff0f\u914d\u7f6e\u8ba1\u7b97\u673a\u5f53\u524d\u7684\u7f51\u5361\u914d\u7f6e\u4fe1\u606f # \u67e5\u770b\u7f51\u5361\u914d\u7f6e\u4fe1\u606f $ ifconfig # \u67e5\u770b\u7f51\u5361\u5bf9\u5e94\u7684 IP \u5730\u5740 $ ifconfig | grep inet \u63d0\u793a\uff1a\u4e00\u53f0\u8ba1\u7b97\u673a\u4e2d\u6709\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a \u7269\u7406\u7f51\u5361 \u548c \u591a\u4e2a\u865a\u62df\u7f51\u5361 \uff0c\u5728 Linux \u4e2d\u7269\u7406\u7f51\u5361\u7684\u540d\u5b57\u901a\u5e38\u4ee5 ensXX \u8868\u793a 127.0.0.1 \u88ab\u79f0\u4e3a \u672c\u5730\u56de\u73af/\u73af\u56de\u5730\u5740 \uff0c\u4e00\u822c\u7528\u6765\u6d4b\u8bd5\u672c\u673a\u7f51\u5361\u662f\u5426\u6b63\u5e38 2.3 ping \u00b6 # \u68c0\u6d4b\u5230\u76ee\u6807\u4e3b\u673a\u662f\u5426\u8fde\u63a5\u6b63\u5e38 $ ping IP\u5730\u5740 # \u68c0\u6d4b\u672c\u5730\u7f51\u5361\u5de5\u4f5c\u6b63\u5e38 $ ping 127 .0.0.1 ping \u4e00\u822c\u7528\u4e8e\u68c0\u6d4b\u5f53\u524d\u8ba1\u7b97\u673a\u5230\u76ee\u6807\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u7f51\u7edc \u662f\u5426\u901a\u7545 \uff0c \u6570\u503c\u8d8a\u5927\uff0c\u901f\u5ea6\u8d8a\u6162 ping \u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u6f5c\u6c34\u8247\u7684\u58f0\u7eb3\u76f8\u4f3c\uff0c ping \u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\u53d6\u81ea \u58f0\u7eb3\u7684\u58f0\u97f3 \u7f51\u7edc\u7ba1\u7406\u5458\u4e4b\u95f4\u4e5f\u5e38\u5c06 ping \u7528\u4f5c\u52a8\u8bcd \u2014\u2014 ping \u4e00\u4e0b\u8ba1\u7b97\u673aX\uff0c\u770b\u4ed6\u662f\u5426\u5f00\u7740 \u539f\u7406\uff1a\u7f51\u7edc\u4e0a\u7684\u673a\u5668\u90fd\u6709 \u552f\u4e00\u786e\u5b9a\u7684 IP \u5730\u5740 \uff0c\u6211\u4eec\u7ed9**\u76ee\u6807 IP \u5730\u5740**\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5bf9\u65b9\u5c31\u8981\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u6839\u636e\u8fd4\u56de\u7684\u6570\u636e\u5305\u4ee5\u53ca\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u76ee\u6807\u4e3b\u673a\u7684\u5b58\u5728 \u63d0\u793a\uff1a\u5728 Linux \u4e2d\uff0c\u60f3\u8981\u7ec8\u6b62\u4e00\u4e2a\u7ec8\u7aef\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u7edd\u5927\u591a\u6570\u90fd\u53ef\u4ee5\u4f7f\u7528 CTRL + C 03. \u8fdc\u7a0b\u767b\u5f55\u548c\u590d\u5236\u6587\u4ef6 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ssh \u7528\u6237\u540d@ip secure shell \u5173\u673a\uff0f\u91cd\u65b0\u542f\u52a8 02 scp \u7528\u6237\u540d@ip:\u6587\u4ef6\u540d\u6216\u8def\u5f84 \u7528\u6237\u540d@ip:\u6587\u4ef6\u540d\u6216\u8def\u5f84 secure copy \u8fdc\u7a0b\u590d\u5236\u6587\u4ef6 3.1 ssh \u57fa\u7840\uff08\u91cd\u70b9\uff09 \u00b6 \u5728 Linux \u4e2d SSH \u662f \u975e\u5e38\u5e38\u7528 \u7684\u5de5\u5177\uff0c\u901a\u8fc7 SSH \u5ba2\u6237\u7aef \u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5230\u8fd0\u884c\u4e86 SSH \u670d\u52a1\u5668 \u7684\u8fdc\u7a0b\u673a\u5668\u4e0a **SSH \u5ba2\u6237\u7aef**\u662f\u4e00\u79cd\u4f7f\u7528 Secure Shell\uff08SSH\uff09 \u534f\u8bae\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u7a0b\u5e8f SSH \u662f\u76ee\u524d\u8f83\u53ef\u9760\uff0c\u4e13\u4e3a\u8fdc\u7a0b\u767b\u5f55\u4f1a\u8bdd\u548c\u5176\u4ed6\u7f51\u7edc\u670d\u52a1 \u63d0\u4f9b\u5b89\u5168\u6027\u7684\u534f\u8bae \u5229\u7528 SSH \u534f\u8bae \u53ef\u4ee5\u6709\u6548**\u9632\u6b62\u8fdc\u7a0b\u7ba1\u7406\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u6cc4\u9732** \u901a\u8fc7 SSH \u534f\u8bae \u53ef\u4ee5\u5bf9\u6240\u6709\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4e5f\u80fd\u591f\u9632\u6b62 DNS \u6b3a\u9a97\u548c IP \u6b3a\u9a97 SSH \u7684\u53e6\u4e00\u9879\u4f18\u70b9\u662f\u4f20\u8f93\u7684\u6570\u636e\u53ef\u4ee5\u662f\u7ecf\u8fc7\u538b\u7f29\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u52a0\u5feb\u4f20\u8f93\u7684\u901f\u5ea6 1) \u57df\u540d \u548c \u7aef\u53e3\u53f7 \u00b6 \u57df\u540d \u00b6 \u7531\u4e00\u4e32 \u7528\u70b9\u5206\u9694 \u7684\u540d\u5b57\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a www.itcast.cn \u662f IP \u5730\u5740 \u7684\u522b\u540d\uff0c\u65b9\u4fbf\u7528\u6237\u8bb0\u5fc6 \u7aef\u53e3\u53f7 \u00b6 IP \u5730\u5740 \uff1a\u901a\u8fc7 IP \u5730\u5740 \u627e\u5230\u7f51\u7edc\u4e0a\u7684 \u8ba1\u7b97\u673a \u7aef\u53e3\u53f7 \uff1a\u901a\u8fc7 \u7aef\u53e3\u53f7 \u53ef\u4ee5\u627e\u5230 \u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f SSH \u670d\u52a1\u5668 \u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f 22 \uff0c\u5982\u679c\u662f\u9ed8\u8ba4\u7aef\u53e3\u53f7\uff0c\u5728\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7701\u7565 \u5e38\u89c1\u670d\u52a1\u7aef\u53e3\u53f7\u5217\u8868\uff1a \u5e8f\u53f7 \u670d\u52a1 \u7aef\u53e3\u53f7 01 SSH \u670d\u52a1\u5668 22 02 Web \u670d\u52a1\u5668 80 03 HTTPS 443 04 FTP \u670d\u52a1\u5668 21 \u63d0\u793a\uff1a\u6709\u5173 **\u7aef\u53e3\u53f7**\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff01 2) SSH \u5ba2\u6237\u7aef\u7684\u7b80\u5355\u4f7f\u7528 \u00b6 ssh [ -p port ] user@remote user \u662f\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a\u7684\u7528\u6237\u540d\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7528\u6237 remote \u662f\u8fdc\u7a0b\u673a\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u662f IP \uff0f \u57df\u540d \uff0c\u6216\u8005\u662f \u540e\u9762\u4f1a\u63d0\u5230\u7684\u522b\u540d port \u662f SSH Server \u76d1\u542c\u7684\u7aef\u53e3 \uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5c31\u4e3a\u9ed8\u8ba4\u503c 22 \u63d0\u793a\uff1a \u4f7f\u7528 exit \u9000\u51fa\u5f53\u524d\u7528\u6237\u7684\u767b\u5f55 \u6ce8\u610f\uff1a ssh \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u53ea\u80fd\u5728 Linux \u6216\u8005 UNIX \u7cfb\u7edf\u4e0b\u4f7f\u7528 \u5982\u679c\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5 PuTTY \u6216\u8005 XShell \u5ba2\u6237\u7aef\u8f6f\u4ef6\u5373\u53ef \u63d0\u793a\uff1a \u5728\u5de5\u4f5c\u4e2d\uff0cSSH \u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u5f88\u6709\u53ef\u80fd**\u4e0d\u662f 22**\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u9700\u8981\u4f7f\u7528 -p \u9009\u9879\uff0c\u6307\u5b9a\u6b63\u786e\u7684\u7aef\u53e3\u53f7\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u5230\u670d\u52a1\u5668 3) Windows \u4e0b SSH \u5ba2\u6237\u7aef\u7684\u5b89\u88c5 \u00b6 Putty http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html XShell http://xshellcn.com \u5efa\u8bae\u4ece\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u6b63\u5f0f\u7684\u5b89\u88c5\u7a0b\u5e8f 3.2 scp \uff08\u638c\u63e1\uff09 \u00b6 scp \u5c31\u662f secure copy \uff0c\u662f\u4e00\u4e2a\u5728 Linux \u4e0b\u7528\u6765\u8fdb\u884c \u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6 \u7684\u547d\u4ee4 \u5b83\u7684**\u5730\u5740\u683c\u5f0f\u4e0e ssh \u57fa\u672c\u76f8\u540c**\uff0c \u9700\u8981\u6ce8\u610f\u7684\u662f \uff0c\u5728\u6307\u5b9a\u7aef\u53e3\u65f6\u7528\u7684\u662f\u5927\u5199\u7684 -P \u800c\u4e0d\u662f\u5c0f\u5199\u7684 # \u628a\u672c\u5730\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 01.py \u6587\u4ef6 \u590d\u5236\u5230 \u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop/01.py # \u6ce8\u610f\uff1a`:` \u540e\u9762\u7684\u8def\u5f84\u5982\u679c\u4e0d\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u4ee5\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u4f5c\u4e3a\u53c2\u7167\u8def\u5f84 scp -P port 01 .py user@remote:Desktop/01.py # \u628a\u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop/01.py \u6587\u4ef6 \u590d\u5236\u5230 \u672c\u5730\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 01.py scp -P port user@remote:Desktop/01.py 01 .py # \u52a0\u4e0a -r \u9009\u9879\u53ef\u4ee5\u4f20\u9001\u6587\u4ef6\u5939 # \u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo \u6587\u4ef6\u5939 \u590d\u5236\u5230 \u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop scp -r demo user@remote:Desktop # \u628a\u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop \u590d\u5236\u5230 \u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo \u6587\u4ef6\u5939 scp -r user@remote:Desktop demo \u9009\u9879 \u542b\u4e49 -r \u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6\uff0c\u5219 scp \u5c06\u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u4e3a\u4e00\u4e2a\u76ee\u5f55\u540d -P \u82e5\u8fdc\u7a0b SSH \u670d\u52a1\u5668\u7684\u7aef\u53e3\u4e0d\u662f 22\uff0c\u9700\u8981\u4f7f\u7528\u5927\u5199\u5b57\u6bcd -P \u9009\u9879\u6307\u5b9a\u7aef\u53e3 \u6ce8\u610f\uff1a scp \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u53ea\u80fd\u5728 Linux \u6216\u8005 UNIX \u7cfb\u7edf\u4e0b\u4f7f\u7528 \u5982\u679c\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5 PuTTY \uff0c\u4f7f\u7528 pscp \u547d\u4ee4\u884c\u5de5\u5177\u6216\u8005\u5b89\u88c5 FileZilla \u4f7f\u7528 FTP \u8fdb\u884c\u6587\u4ef6\u4f20\u8f93 FileZilla \u00b6 \u5b98\u65b9\u7f51\u7ad9\uff1a https://www.filezilla.cn/download/client FileZilla \u5728\u4f20\u8f93\u6587\u4ef6\u65f6\uff0c\u4f7f\u7528\u7684\u662f FTP \u670d\u52a1 \u800c\u4e0d\u662f SSH \u670d\u52a1 \uff0c\u56e0\u6b64\u7aef\u53e3\u53f7\u5e94\u8be5\u8bbe\u7f6e\u4e3a 21 3.3 SSH \u9ad8\u7ea7\uff08\u77e5\u9053\uff09 \u00b6 \u514d\u5bc6\u7801\u767b\u5f55 \u914d\u7f6e\u522b\u540d \u63d0\u793a\uff1a\u6709\u5173 SSH \u914d\u7f6e\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u7528\u6237\u5bb6\u76ee\u5f55\u4e0b\u7684 .ssh \u76ee\u5f55\u4e0b 1\uff09\u514d\u5bc6\u7801\u767b\u5f55 \u00b6 \u6b65\u9aa4 \u00b6 \u914d\u7f6e\u516c\u94a5 \u6267\u884c ssh-keygen \u5373\u53ef\u751f\u6210 SSH \u94a5\u5319\uff0c\u4e00\u8def\u56de\u8f66\u5373\u53ef \u4e0a\u4f20\u516c\u94a5\u5230\u670d\u52a1\u5668 \u6267\u884c ssh-copy-id -p port user@remote \uff0c\u53ef\u4ee5\u8ba9\u8fdc\u7a0b\u670d\u52a1\u5668\u8bb0\u4f4f\u6211\u4eec\u7684\u516c\u94a5 \u793a\u610f\u56fe \u00b6 ![003_SSH \u514d\u5bc6\u7801\u793a\u610f\u56fe] \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 \u4f7f\u7528 \u516c\u94a5 \u52a0\u5bc6\u7684\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 \u79c1\u94a5 \u89e3\u5bc6 \u4f7f\u7528 \u79c1\u94a5 \u52a0\u5bc6\u7684\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 \u516c\u94a5 \u89e3\u5bc6 2) \u914d\u7f6e\u522b\u540d \u00b6 \u6bcf\u6b21\u90fd\u8f93\u5165 ssh -p port user@remote \uff0c\u65f6\u95f4\u4e45\u4e86\u4f1a\u89c9\u5f97\u5f88\u9ebb\u70e6\uff0c\u7279\u522b\u662f\u5f53 user , remote \u548c port \u90fd\u5f97\u8f93\u5165\uff0c\u800c\u4e14\u8fd8\u4e0d\u597d\u8bb0\u5fc6 \u800c \u914d\u7f6e\u522b\u540d \u53ef\u4ee5\u8ba9\u6211\u4eec\u8fdb\u4e00\u6b65\u5077\u61d2\uff0c\u8b6c\u5982\u7528\uff1a ssh mac \u6765\u66ff\u4ee3\u4e0a\u9762\u8fd9\u4e48\u4e00\u957f\u4e32\uff0c\u90a3\u4e48\u5c31\u5728 ~/.ssh/config \u91cc\u9762\u8ffd\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a Host mac HostName ip\u5730\u5740 User itheima Port 22 \u4fdd\u5b58\u4e4b\u540e\uff0c\u5373\u53ef\u7528 ssh mac \u5b9e\u73b0\u8fdc\u7a0b\u767b\u5f55\u4e86\uff0cscp \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 \u7528\u6237\u6743\u9650\u76f8\u5173\u547d\u4ee4 \u00b6 \u76ee\u6807 \u00b6 \u7528\u6237 \u548c \u6743\u9650 \u7684\u57fa\u672c\u6982\u5ff5 \u7528\u6237\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u7ec4\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u4fee\u6539\u6743\u9650 \u7ec8\u7aef\u547d\u4ee4 01. \u7528\u6237 \u548c \u6743\u9650 \u7684\u57fa\u672c\u6982\u5ff5 \u00b6 1.1 \u57fa\u672c\u6982\u5ff5 \u00b6 \u7528\u6237 \u662f Linux \u7cfb\u7edf\u5de5\u4f5c\u4e2d\u91cd\u8981\u7684\u4e00\u73af\uff0c\u7528\u6237\u7ba1\u7406\u5305\u62ec \u7528\u6237 \u4e0e \u7ec4 \u7ba1\u7406 \u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u4e0d\u8bba\u662f\u7531\u672c\u673a\u6216\u662f\u8fdc\u7a0b\u767b\u5f55\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u90fd**\u5fc5\u987b\u62e5\u6709\u4e00\u4e2a\u8d26\u53f7**\uff0c\u5e76\u4e14**\u5bf9\u4e8e\u4e0d\u540c\u7684\u7cfb\u7edf\u8d44\u6e90\u62e5\u6709\u4e0d\u540c\u7684\u4f7f\u7528\u6743\u9650** \u5728 Linux \u4e2d\uff0c\u53ef\u4ee5\u6307\u5b9a \u6bcf\u4e00\u4e2a\u7528\u6237 \u9488\u5bf9 \u4e0d\u540c\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55 \u7684 \u4e0d\u540c\u6743\u9650 \u5bf9 \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u6743\u9650\u5305\u62ec\uff1a \u5e8f\u53f7 \u6743\u9650 \u82f1\u6587 \u7f29\u5199 \u6570\u5b57\u4ee3\u53f7 01 \u8bfb read r 4 02 \u5199 write w 2 03 \u6267\u884c excute x 1 1.2 \u7ec4 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u7ba1\u7406\uff0c\u63d0\u51fa\u4e86 \u7ec4 \u7684\u6982\u5ff5\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u9884\u5148\u9488\u5bf9 \u7ec4 \u8bbe\u7f6e\u597d\u6743\u9650\uff0c\u7136\u540e \u5c06\u4e0d\u540c\u7684\u7528\u6237\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u7ec4\u4e2d \uff0c\u4ece\u800c**\u4e0d\u7528\u4f9d\u6b21\u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u8bbe\u7f6e\u6743\u9650** 1.3 ls -l \u6269\u5c55 \u00b6 ls -l \u53ef\u4ee5\u67e5\u770b\u6587\u4ef6\u5939\u4e0b\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f\uff1a \u6743\u9650 \uff0c\u7b2c 1 \u4e2a\u5b57\u7b26\u5982\u679c\u662f d \u8868\u793a\u76ee\u5f55 \u786c\u94fe\u63a5\u6570 \uff0c\u901a\u4fd7\u5730\u8bb2\uff0c\u5c31\u662f\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230\u5f53\u524d\u76ee\u5f55\uff0f\u6587\u4ef6 \u62e5\u6709\u8005 \uff0c\u5bb6\u76ee\u5f55\u4e0b \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u62e5\u6709\u8005\u901a\u5e38\u90fd\u662f\u5f53\u524d\u7528\u6237 \u7ec4 \uff0c\u5728 Linux \u4e2d\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u7ec4\u540d\u548c\u7528\u6237\u540d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u540e\u7eed\u4f1a\u8bb2 \u5927\u5c0f \u65f6\u95f4 \u540d\u79f0 1.4 chmod \u7b80\u5355\u4f7f\u7528\uff08\u91cd\u8981\uff09 \u00b6 chmod \u53ef\u4ee5\u4fee\u6539 \u7528\u6237\uff0f\u7ec4 \u5bf9 \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u6743\u9650 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a chmod +/-rwx \u6587\u4ef6\u540d | \u76ee\u5f55\u540d \u63d0\u793a\uff1a\u4ee5\u4e0a\u65b9\u5f0f\u4f1a\u4e00\u6b21\u6027\u4fee\u6539 \u62e5\u6709\u8005 / \u7ec4 \u6743\u9650\uff0c\u6709\u5173 chmod \u7684\u9ad8\u7ea7\u7528\u6cd5\uff0c\u540e\u7eed\u4f1a\u8bb2 1.5 \u8d85\u7ea7\u7528\u6237 \u00b6 Linux \u7cfb\u7edf\u4e2d\u7684 root \u8d26\u53f7\u901a\u5e38 \u7528\u4e8e\u7cfb\u7edf\u7684\u7ef4\u62a4\u548c\u7ba1\u7406 \uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u8d44\u6e90 \u5177\u6709\u6240\u6709\u8bbf\u95ee\u6743\u9650 \u5728\u5927\u591a\u6570\u7248\u672c\u7684 Linux \u4e2d\uff0c\u90fd\u4e0d\u63a8\u8350 \u76f4\u63a5\u4f7f\u7528 root \u8d26\u53f7\u767b\u5f55\u7cfb\u7edf \u5728 Linux \u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u8d26\u53f7\uff0c\u800c\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u7528\u6237\u5c31\u79f0\u4e3a\u201c\u6807\u51c6\u7528\u6237\u201d sudo \u00b6 su \u662f substitute user \u7684\u7f29\u5199\uff0c\u8868\u793a \u4f7f\u7528\u53e6\u4e00\u4e2a\u7528\u6237\u7684\u8eab\u4efd sudo \u547d\u4ee4\u7528\u6765\u4ee5\u5176\u4ed6\u8eab\u4efd\u6765\u6267\u884c\u547d\u4ee4\uff0c\u9884\u8bbe\u7684\u8eab\u4efd\u4e3a root \u7528\u6237\u4f7f\u7528 sudo \u65f6\uff0c\u5fc5\u987b\u5148\u8f93\u5165\u5bc6\u7801\uff0c\u4e4b\u540e\u6709 5 \u5206\u949f\u7684\u6709\u6548\u671f\u9650 \uff0c\u8d85\u8fc7\u671f\u9650\u5219\u5fc5\u987b\u91cd\u65b0\u8f93\u5165\u5bc6\u7801 \u82e5\u5176\u672a\u7ecf\u6388\u6743\u7684\u7528\u6237\u4f01\u56fe\u4f7f\u7528 sudo \uff0c\u5219\u4f1a\u53d1\u51fa\u8b66\u544a\u90ae\u4ef6\u7ed9\u7ba1\u7406\u5458 02. \u7ec4\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u00b6 \u63d0\u793a\uff1a \u521b\u5efa\u7ec4 / \u5220\u9664\u7ec4 \u7684\u7ec8\u7aef\u547d\u4ee4\u90fd\u9700\u8981\u901a\u8fc7 sudo \u6267\u884c \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 groupadd \u7ec4\u540d \u6dfb\u52a0\u7ec4 02 groupdel \u7ec4\u540d \u5220\u9664\u7ec4 03 cat /etc/group \u786e\u8ba4\u7ec4\u4fe1\u606f 04 chgrp -R \u7ec4\u540d \u6587\u4ef6/\u76ee\u5f55\u540d \u9012\u5f52\u4fee\u6539\u6587\u4ef6/\u76ee\u5f55\u7684\u6240\u5c5e\u7ec4 \u63d0\u793a\uff1a \u7ec4\u4fe1\u606f\u4fdd\u5b58\u5728 /etc/group \u6587\u4ef6\u4e2d /etc \u76ee\u5f55\u662f\u4e13\u95e8\u7528\u6765\u4fdd\u5b58 \u7cfb\u7edf\u914d\u7f6e\u4fe1\u606f \u7684\u76ee\u5f55 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u9884\u5148\u9488\u5bf9 \u7ec4 \u8bbe\u7f6e\u597d\u6743\u9650\uff0c\u7136\u540e \u5c06\u4e0d\u540c\u7684\u7528\u6237\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u7ec4\u4e2d \uff0c\u4ece\u800c**\u4e0d\u7528\u4f9d\u6b21\u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u8bbe\u7f6e\u6743\u9650** \u6f14\u7ec3\u76ee\u6807 \u00b6 \u5728 python \u7528\u6237\u7684\u684c\u9762\u6587\u4ef6\u5939\u4e0b\u521b\u5efa Python\u5b66\u4e60 \u76ee\u5f55 \u65b0\u5efa dev \u7ec4 \u5c06 Python\u5b66\u4e60 \u76ee\u5f55\u7684\u7ec4\u4fee\u6539\u4e3a dev 03. \u7528\u6237\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u00b6 \u63d0\u793a\uff1a \u521b\u5efa\u7528\u6237 / \u5220\u9664\u7528\u6237 / \u4fee\u6539\u5176\u4ed6\u7528\u6237\u5bc6\u7801 \u7684\u7ec8\u7aef\u547d\u4ee4\u90fd\u9700\u8981\u901a\u8fc7 sudo \u6267\u884c 3.1 \u521b\u5efa\u7528\u6237\uff0f\u8bbe\u7f6e\u5bc6\u7801\uff0f\u5220\u9664\u7528\u6237 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 \u8bf4\u660e 01 useradd -m -g \u7ec4 \u65b0\u5efa\u7528\u6237\u540d \u6dfb\u52a0\u65b0\u7528\u6237 -m \u81ea\u52a8\u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55-g \u6307\u5b9a\u7528\u6237\u6240\u5728\u7684\u7ec4\uff0c\u5426\u5219\u4f1a\u5efa\u7acb\u4e00\u4e2a\u548c\u540c\u540d\u7684\u7ec4 02 passwd \u7528\u6237\u540d \u8bbe\u7f6e\u7528\u6237\u5bc6\u7801 \u5982\u679c\u662f\u666e\u901a\u7528\u6237\uff0c\u76f4\u63a5\u7528 passwd \u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u8d26\u6237\u5bc6\u7801 03 userdel -r \u7528\u6237\u540d \u5220\u9664\u7528\u6237 -r \u9009\u9879\u4f1a\u81ea\u52a8\u5220\u9664\u7528\u6237\u5bb6\u76ee\u5f55 04 cat /etc/passwd | grep \u7528\u6237\u540d \u786e\u8ba4\u7528\u6237\u4fe1\u606f \u65b0\u5efa\u7528\u6237\u540e\uff0c\u7528\u6237\u4fe1\u606f\u4f1a\u4fdd\u5b58\u5728 /etc/passwd \u6587\u4ef6\u4e2d \u63d0\u793a\uff1a \u521b\u5efa\u7528\u6237\u65f6\uff0c\u5982\u679c\u5fd8\u8bb0\u6dfb\u52a0 -m \u9009\u9879\u6307\u5b9a\u65b0\u7528\u6237\u7684\u5bb6\u76ee\u5f55 \u2014\u2014 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f**\u5220\u9664\u7528\u6237\uff0c\u91cd\u65b0\u521b\u5efa** \u521b\u5efa\u7528\u6237\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u548c**\u7528\u6237\u540d**\u540c\u540d\u7684**\u7ec4\u540d** \u7528\u6237\u4fe1\u606f\u4fdd\u5b58\u5728 /etc/passwd \u6587\u4ef6\u4e2d 3.2 \u67e5\u770b\u7528\u6237\u4fe1\u606f \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 id [\u7528\u6237\u540d] \u67e5\u770b\u7528\u6237 UID \u548c GID \u4fe1\u606f 02 who \u67e5\u770b\u5f53\u524d\u6240\u6709\u767b\u5f55\u7684\u7528\u6237\u5217\u8868 03 whoami \u67e5\u770b\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684\u8d26\u6237\u540d passwd \u6587\u4ef6 \u00b6 /etc/passwd \u6587\u4ef6\u5b58\u653e\u7684\u662f\u7528\u6237\u7684\u4fe1\u606f\uff0c\u7531 6 \u4e2a\u5206\u53f7\u7ec4\u6210\u7684 7 \u4e2a\u4fe1\u606f\uff0c\u5206\u522b\u662f \u7528\u6237\u540d \u5bc6\u7801\uff08x\uff0c\u8868\u793a\u52a0\u5bc6\u7684\u5bc6\u7801\uff09 UID\uff08\u7528\u6237\u6807\u8bc6\uff09 GID\uff08\u7ec4\u6807\u8bc6\uff09 \u7528\u6237\u5168\u540d\u6216\u672c\u5730\u5e10\u53f7 \u5bb6\u76ee\u5f55 \u767b\u5f55\u4f7f\u7528\u7684 Shell\uff0c\u5c31\u662f\u767b\u5f55\u4e4b\u540e\uff0c\u4f7f\u7528\u7684\u7ec8\u7aef\u547d\u4ee4\uff0c ubuntu \u9ed8\u8ba4\u662f dash usermod \u00b6 usermod \u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e \u7528\u6237 \u7684 \u4e3b\u7ec4 \uff0f \u9644\u52a0\u7ec4 \u548c \u767b\u5f55 Shell \uff0c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a \u4e3b\u7ec4 \uff1a\u901a\u5e38\u5728\u65b0\u5efa\u7528\u6237\u65f6\u6307\u5b9a\uff0c\u5728 etc/passwd \u7684\u7b2c 4 \u5217 GID \u5bf9\u5e94\u7684\u7ec4 \u9644\u52a0\u7ec4 \uff1a\u5728 etc/group \u4e2d\u6700\u540e\u4e00\u5217\u8868\u793a\u8be5\u7ec4\u7684\u7528\u6237\u5217\u8868\uff0c\u7528\u4e8e\u6307\u5b9a \u7528\u6237\u7684\u9644\u52a0\u6743\u9650 \u63d0\u793a\uff1a\u8bbe\u7f6e\u4e86\u7528\u6237\u7684\u9644\u52a0\u7ec4\u4e4b\u540e\uff0c\u9700\u8981\u91cd\u65b0\u767b\u5f55\u624d\u80fd\u751f\u6548\uff01 # \u4fee\u6539\u7528\u6237\u7684\u4e3b\u7ec4\uff08passwd \u4e2d\u7684 GID\uff09 usermod -g \u7ec4 \u7528\u6237\u540d # \u4fee\u6539\u7528\u6237\u7684\u9644\u52a0\u7ec4 usermod -G \u7ec4 \u7528\u6237\u540d # \u4fee\u6539\u7528\u6237\u767b\u5f55 Shell usermod -s /bin/bash \u7528\u6237\u540d \u6ce8\u610f\uff1a\u9ed8\u8ba4\u4f7f\u7528 useradd \u6dfb\u52a0\u7684\u7528\u6237\u662f\u6ca1\u6709\u6743\u9650\u4f7f\u7528 sudo \u4ee5 root \u8eab\u4efd\u6267\u884c\u547d\u4ee4\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u7528\u6237\u6dfb\u52a0\u5230 sudo \u9644\u52a0\u7ec4\u4e2d usermod -G sudo \u7528\u6237\u540d which\uff08\u91cd\u8981\uff09 \u00b6 \u63d0\u793a /etc/passwd \u662f\u7528\u4e8e\u4fdd\u5b58\u7528\u6237\u4fe1\u606f\u7684\u6587\u4ef6 /usr/bin/passwd \u662f\u7528\u4e8e\u4fee\u6539\u7528\u6237\u5bc6\u7801\u7684\u7a0b\u5e8f which \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6267\u884c\u547d\u4ee4\u6240\u5728\u4f4d\u7f6e\uff0c\u4f8b\u5982\uff1a which ls # \u8f93\u51fa # /bin/ls which useradd # \u8f93\u51fa # /usr/sbin/useradd bin \u548c sbin \u00b6 \u5728 Linux \u4e2d\uff0c\u7edd\u5927\u591a\u6570\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u662f\u4fdd\u5b58\u5728 /bin \u3001 /sbin \u3001 /usr/bin \u3001 /usr/sbin /bin \uff08 binary \uff09\u662f\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6\u76ee\u5f55\uff0c\u4e3b\u8981\u7528\u4e8e\u5177\u4f53\u5e94\u7528 /sbin \uff08 system binary \uff09\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4e13\u7528\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u5b58\u653e\u76ee\u5f55\uff0c\u4e3b\u8981\u7528\u4e8e\u7cfb\u7edf\u7ba1\u7406 /usr/bin \uff08 user commands for applications \uff09\u540e\u671f\u5b89\u88c5\u7684\u4e00\u4e9b\u8f6f\u4ef6 /usr/sbin \uff08 super user commands for applications \uff09\u8d85\u7ea7\u7528\u6237\u7684\u4e00\u4e9b\u7ba1\u7406\u7a0b\u5e8f \u63d0\u793a\uff1a cd \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u662f\u5185\u7f6e\u5728\u7cfb\u7edf\u5185\u6838\u4e2d\u7684\uff0c\u6ca1\u6709\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u7528 which \u65e0\u6cd5\u627e\u5230 cd \u547d\u4ee4\u7684\u4f4d\u7f6e 3.3 \u5207\u6362\u7528\u6237 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 \u8bf4\u660e 01 su - \u7528\u6237\u540d \u5207\u6362\u7528\u6237\uff0c\u5e76\u4e14\u5207\u6362\u76ee\u5f55 - \u53ef\u4ee5\u5207\u6362\u5230\u7528\u6237\u5bb6\u76ee\u5f55\uff0c\u5426\u5219\u4fdd\u6301\u4f4d\u7f6e\u4e0d\u53d8 02 exit \u9000\u51fa\u5f53\u524d\u767b\u5f55\u8d26\u6237 su \u4e0d\u63a5\u7528\u6237\u540d\uff0c\u53ef\u4ee5\u5207\u6362\u5230 root \uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u4e0d\u5b89\u5168 exit \u793a\u610f\u56fe\u5982\u4e0b\uff1a 04. \u4fee\u6539\u6587\u4ef6\u6743\u9650 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 chown \u4fee\u6539\u62e5\u6709\u8005 02 chgrp \u4fee\u6539\u7ec4 03 chmod \u4fee\u6539\u6743\u9650 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684\u62e5\u6709\u8005 chown \u7528\u6237\u540d \u6587\u4ef6\u540d | \u76ee\u5f55\u540d # \u9012\u5f52\u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684\u7ec4 chgrp -R \u7ec4\u540d \u6587\u4ef6\u540d | \u76ee\u5f55\u540d # \u9012\u5f52\u4fee\u6539\u6587\u4ef6\u6743\u9650 chmod -R 755 \u6587\u4ef6\u540d | \u76ee\u5f55\u540d chmod \u5728\u8bbe\u7f6e\u6743\u9650\u65f6\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e09\u4e2a\u6570\u5b57\u5206\u522b\u5bf9\u5e94 \u62e5\u6709\u8005 \uff0f \u7ec4 \u548c \u5176\u4ed6 \u7528\u6237\u7684\u6743\u9650 # \u76f4\u63a5\u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684 \u8bfb|\u5199|\u6267\u884c \u6743\u9650\uff0c\u4f46\u662f\u4e0d\u80fd\u7cbe\u786e\u5230 \u62e5\u6709\u8005|\u7ec4|\u5176\u4ed6 chmod +/-rwx \u6587\u4ef6\u540d | \u76ee\u5f55\u540d \u5e38\u89c1\u6570\u5b57\u7ec4\u5408\u6709\uff08 u \u8868\u793a\u7528\u6237\uff0f g \u8868\u793a\u7ec4\uff0f o \u8868\u793a\u5176\u4ed6\uff09\uff1a 777 ===> u=rwx,g=rwx,o=rwx 755 ===> u=rwx,g=rx,o=rx 644 ===> u=rw,g=r,o=r chmod \u6f14\u7ec3\u76ee\u6807 \u00b6 \u5c06 01.py \u7684\u6743\u9650\u4fee\u6539\u4e3a u=rwx,g=rx,o=r \u5c06 123.txt \u7684\u6743\u9650\u4fee\u6539\u4e3a u=rw,g=r,o=- \u5c06 test \u76ee\u5f55\u4ee5\u53ca\u76ee\u5f55\u4e0b\u7684 \u6240\u6709 \u6587\u4ef6\u6743\u9650\u4fee\u6539\u4e3a u=rwx,g=rwx,o=rx \u7cfb\u7edf\u4fe1\u606f\u76f8\u5173\u547d\u4ee4 \u00b6 \u672c\u8282\u5185\u5bb9\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u901a\u8fc7\u8fdc\u7a0b\u7ec8\u7aef\u7ef4\u62a4\u670d\u52a1\u5668\u65f6\uff0c\u67e5\u770b\u670d\u52a1\u5668\u4e0a\u5f53\u524d \u7cfb\u7edf\u65e5\u671f\u548c\u65f6\u95f4 \uff0f \u78c1\u76d8\u7a7a\u95f4\u5360\u7528\u60c5\u51b5 \uff0f \u7a0b\u5e8f\u6267\u884c\u60c5\u51b5 \u672c\u5c0f\u7ed3\u5b66\u4e60\u7684\u7ec8\u7aef\u547d\u4ee4\u57fa\u672c\u90fd\u662f\u67e5\u8be2\u547d\u4ee4\uff0c\u901a\u8fc7\u8fd9\u4e9b\u547d\u4ee4\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u6709\u4e2a\u4e86\u89e3 \u76ee\u6807 \u00b6 \u65f6\u95f4\u548c\u65e5\u671f date cal \u78c1\u76d8\u548c\u76ee\u5f55\u7a7a\u95f4 df du \u8fdb\u7a0b\u4fe1\u606f ps top kill 01. \u65f6\u95f4\u548c\u65e5\u671f \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 date \u67e5\u770b\u7cfb\u7edf\u65f6\u95f4 02 cal calendar \u67e5\u770b\u65e5\u5386\uff0c -y \u9009\u9879\u53ef\u4ee5\u67e5\u770b\u4e00\u5e74\u7684\u65e5\u5386 02. \u78c1\u76d8\u4fe1\u606f \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 df -h disk free \u663e\u793a\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 02 du -h [\u76ee\u5f55\u540d] disk usage \u663e\u793a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5927\u5c0f \u9009\u9879\u8bf4\u660e \u53c2\u6570 \u542b\u4e49 -h \u4ee5\u4eba\u6027\u5316\u7684\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u5927\u5c0f 03. \u8fdb\u7a0b\u4fe1\u606f \u00b6 \u6240\u8c13 \u8fdb\u7a0b \uff0c\u901a\u4fd7\u5730\u8bf4\u5c31\u662f \u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 ps aux process status \u67e5\u770b\u8fdb\u7a0b\u7684\u8be6\u7ec6\u72b6\u51b5 02 top \u52a8\u6001\u663e\u793a\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u5e76\u4e14\u6392\u5e8f 03 kill [-9] \u8fdb\u7a0b\u4ee3\u53f7 \u7ec8\u6b62\u6307\u5b9a\u4ee3\u53f7\u7684\u8fdb\u7a0b\uff0c -9 \u8868\u793a\u5f3a\u884c\u7ec8\u6b62 ps \u9ed8\u8ba4\u53ea\u4f1a\u663e\u793a\u5f53\u524d\u7528\u6237\u901a\u8fc7\u7ec8\u7aef\u542f\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f ps \u9009\u9879\u8bf4\u660e\u529f\u80fd \u9009\u9879 \u542b\u4e49 a \u663e\u793a\u7ec8\u7aef\u4e0a\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u5305\u62ec\u5176\u4ed6\u7528\u6237\u7684\u8fdb\u7a0b u \u663e\u793a\u8fdb\u7a0b\u7684\u8be6\u7ec6\u72b6\u6001 x \u663e\u793a\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b \u63d0\u793a\uff1a\u4f7f\u7528 kill \u547d\u4ee4\u65f6\uff0c\u6700\u597d\u53ea\u7ec8\u6b62\u7531\u5f53\u524d\u7528\u6237\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u800c\u4e0d\u8981\u7ec8\u6b62 root \u8eab\u4efd\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5d29\u6e83 \u8981\u9000\u51fa top \u53ef\u4ee5\u76f4\u63a5\u8f93\u5165 q \u5176\u4ed6\u547d\u4ee4 \u00b6 \u76ee\u6807 \u00b6 \u67e5\u627e\u6587\u4ef6 find \u8f6f\u94fe\u63a5 ln \u6253\u5305\u548c\u538b\u7f29 tar \u8f6f\u4ef6\u5b89\u88c5 apt-get 01. \u67e5\u627e\u6587\u4ef6 \u00b6 find \u547d\u4ee4\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u901a\u5e38\u7528\u6765\u5728 \u7279\u5b9a\u7684\u76ee\u5f55\u4e0b \u641c\u7d22 \u7b26\u5408\u6761\u4ef6\u7684\u6587\u4ef6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 find [\u8def\u5f84] -name \"*.py\" \u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e0b\u6269\u5c55\u540d\u662f .py \u7684\u6587\u4ef6\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 \u5982\u679c\u7701\u7565\u8def\u5f84\uff0c\u8868\u793a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u67e5\u627e \u4e4b\u524d\u5b66\u4e60\u7684\u901a\u914d\u7b26\uff0c\u5728\u4f7f\u7528 find \u547d\u4ee4\u65f6\u540c\u65f6\u53ef\u7528 \u6709\u5173 find \u7684\u9ad8\u7ea7\u4f7f\u7528\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8bb2 \u6f14\u7ec3\u76ee\u6807 \u00b6 1. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u6587\u4ef6\u540d\u5305\u542b 1 \u7684\u6587\u4ef6 find -name \"*1*\" 2. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u6240\u6709\u4ee5 .txt \u4e3a\u6269\u5c55\u540d\u7684\u6587\u4ef6 find -name \"*.txt\" 3. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u4ee5\u6570\u5b57 1 \u5f00\u5934\u7684\u6587\u4ef6 find -name \"1*\" 02. \u8f6f\u94fe\u63a5 \u00b6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 ln -s \u88ab\u94fe\u63a5\u7684\u6e90\u6587\u4ef6 \u94fe\u63a5\u6587\u4ef6 \u5efa\u7acb\u6587\u4ef6\u7684\u8f6f\u94fe\u63a5\uff0c\u7528\u901a\u4fd7\u7684\u65b9\u5f0f\u8bb2**\u7c7b\u4f3c\u4e8e** Windows \u4e0b\u7684**\u5feb\u6377\u65b9\u5f0f** \u6ce8\u610f\uff1a 1. \u6ca1\u6709 -s \u9009\u9879\u5efa\u7acb\u7684\u662f\u4e00\u4e2a \u786c\u94fe\u63a5\u6587\u4ef6 \u4e24\u4e2a\u6587\u4ef6\u5360\u7528\u76f8\u540c\u5927\u5c0f\u7684\u786c\u76d8\u7a7a\u95f4\uff0c \u5de5\u4f5c\u4e2d\u51e0\u4e4e\u4e0d\u4f1a\u5efa\u7acb\u6587\u4ef6\u7684\u786c\u94fe\u63a5 2. \u6e90\u6587\u4ef6\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 \uff0c\u4e0d\u80fd\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u79fb\u52a8\u94fe\u63a5\u6587\u4ef6\u540e\uff0c\u4ecd\u7136\u80fd\u591f\u6b63\u5e38\u4f7f\u7528 \u6f14\u7ec3\u76ee\u6807 \u00b6 1. \u5c06\u684c\u9762\u76ee\u5f55\u4e0b\u7684 01.py **\u79fb\u52a8**\u5230 demo/b/c \u76ee\u5f55\u4e0b 2. \u5728\u684c\u9762\u76ee\u5f55\u4e0b\u65b0\u5efa 01.py \u7684 \u8f6f\u94fe\u63a5 FirstPython \u5206\u522b\u4f7f\u7528 \u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u5efa\u7acb FirstPython \u7684\u8f6f\u94fe\u63a5 3. \u5c06 FirstPython \u79fb\u52a8**\u5230 demo \u76ee\u5f55\u4e0b\uff0c\u5bf9\u6bd4\u4f7f\u7528 **\u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u7684\u533a\u522b \u786c\u94fe\u63a5\u7b80\u4ecb\uff08\u77e5\u9053\uff09 \u00b6 \u5728\u4f7f\u7528 ln \u521b\u5efa\u94fe\u63a5\u65f6\uff0c\u5982\u679c\u6ca1\u6709 -s \u9009\u9879\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a \u786c\u94fe\u63a5 \uff0c\u800c\u4e0d\u662f\u8f6f\u94fe\u63a5 \u786c\u94fe\u63a5\u6f14\u7ec3 \u00b6 1. \u5728 ~/Desktop/demo \u76ee\u5f55\u4e0b\u5efa\u7acb ~/Desktop/demo/b/c/01.py \u7684\u786c\u94fe\u63a5 01_hard 2. \u4f7f\u7528 ls -l \u67e5\u770b\u6587\u4ef6\u7684**\u786c\u94fe\u63a5\u6570**\uff08\u786c\u94fe\u63a5\u2014\u2014\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff09 3. \u5220\u9664 ~/Desktop/demo/b/c/01.py \uff0c\u5e76\u4e14\u4f7f\u7528 tree \u6765\u786e\u8ba4 demo \u76ee\u5f55\u4e0b\u7684\u4e09\u4e2a\u94fe\u63a5\u6587\u4ef6 \u6587\u4ef6\u8f6f\u786c\u94fe\u63a5\u7684\u793a\u610f\u56fe \u00b6 \ufffc \u5728 Linux \u4e2d\uff0c \u6587\u4ef6\u540d \u548c \u6587\u4ef6\u7684\u6570\u636e \u662f\u5206\u5f00\u5b58\u50a8\u7684 \u63d0\u793a\uff1a \u5728 Linux \u4e2d\uff0c\u53ea\u6709\u6587\u4ef6\u7684 \u786c\u94fe\u63a5\u6570 == 0 \u624d\u4f1a\u88ab\u5220\u9664 \u4f7f\u7528 ls -l \u53ef\u4ee5\u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u786c\u94fe\u63a5\u7684\u6570\u91cf \u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u5efa\u7acb\u6587\u4ef6\u7684\u786c\u94fe\u63a5\uff0c\u77e5\u9053\u5373\u53ef 03. \u6253\u5305\u538b\u7f29 \u00b6 \u6253\u5305\u538b\u7f29 \u662f\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5907\u4efd\u6587\u4ef6\u7684\u4e00\u79cd\u65b9\u5f0f \u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u5e38\u7528\u7684\u6253\u5305\u538b\u7f29\u65b9\u5f0f\u662f\u4e0d\u540c\u7684 Windows \u5e38\u7528 rar Mac \u5e38\u7528 zip Linux \u5e38\u7528 tar.gz 3.1 \u6253\u5305 \uff0f \u89e3\u5305 \u00b6 tar \u662f Linux \u4e2d\u6700\u5e38\u7528\u7684 \u5907\u4efd**\u5de5\u5177\uff0c\u6b64\u547d\u4ee4\u53ef\u4ee5 **\u628a\u4e00\u7cfb\u5217\u6587\u4ef6 \u6253\u5305\u5230 \u4e00\u4e2a\u5927\u6587\u4ef6\u4e2d \uff0c\u4e5f\u53ef\u4ee5\u628a\u4e00\u4e2a \u6253\u5305\u7684\u5927\u6587\u4ef6\u6062\u590d\u6210\u4e00\u7cfb\u5217\u6587\u4ef6 tar \u7684\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u6253\u5305\u6587\u4ef6 tar -cvf \u6253\u5305\u6587\u4ef6.tar \u88ab\u6253\u5305\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u5305\u6587\u4ef6 tar -xvf \u6253\u5305\u6587\u4ef6.tar tar \u9009\u9879\u8bf4\u660e \u9009\u9879 \u542b\u4e49 c \u751f\u6210\u6863\u6848\u6587\u4ef6\uff0c\u521b\u5efa\u6253\u5305\u6587\u4ef6 x \u89e3\u5f00\u6863\u6848\u6587\u4ef6 v \u5217\u51fa\u5f52\u6863\u89e3\u6863\u7684\u8be6\u7ec6\u8fc7\u7a0b\uff0c\u663e\u793a\u8fdb\u5ea6 f \u6307\u5b9a\u6863\u6848\u6587\u4ef6\u540d\u79f0\uff0cf \u540e\u9762\u4e00\u5b9a\u662f .tar \u6587\u4ef6\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u9009\u9879\u6700\u540e \u6ce8\u610f\uff1a f \u9009\u9879\u5fc5\u987b\u653e\u5728\u6700\u540e\uff0c\u5176\u4ed6\u9009\u9879\u987a\u5e8f\u53ef\u4ee5\u968f\u610f \u6253\u5305\u89e3\u5305\u6f14\u7ec3 \u00b6 \u5220\u9664\u684c\u9762\u4e0b\u7684\u6240\u6709\u5185\u5bb9 \u5728\u684c\u9762\u4e0b\u65b0\u5efa\u4e09\u4e2a\u7a7a\u767d\u6587\u4ef6 01.py \u3001 02.py \u3001 03.py \u5c06\u8fd9\u4e09\u4e2a\u6587\u4ef6\u6253\u4e00\u4e2a py.tar \u7684\u5305 \u65b0\u5efa tar \u76ee\u5f55\uff0c\u5e76\u4e14\u5c06 py.tar \u79fb\u52a8\u5230 tar \u76ee\u5f55\u4e0b \u89e3\u5305 py.tar 3.2 \u538b\u7f29\uff0f\u89e3\u538b\u7f29 \u00b6 1) gzip \u00b6 tar \u4e0e gzip \u547d\u4ee4\u7ed3\u5408\u53ef\u4ee5\u4f7f\u7528\u5b9e\u73b0\u6587\u4ef6 \u6253\u5305\u548c\u538b\u7f29 tar \u53ea\u8d1f\u8d23\u6253\u5305\u6587\u4ef6\uff0c\u4f46\u4e0d\u538b\u7f29 \u7528 gzip \u538b\u7f29 tar \u6253\u5305\u540e\u7684\u6587\u4ef6\uff0c\u5176\u6269\u5c55\u540d\u4e00\u822c\u7528 xxx.tar.gz \u5728 Linux \u4e2d\uff0c\u6700\u5e38\u89c1\u7684\u538b\u7f29\u6587\u4ef6\u683c\u5f0f\u5c31\u662f xxx.tar.gz \u5728 tar \u547d\u4ee4\u4e2d\u6709\u4e00\u4e2a\u9009\u9879 -z \u53ef\u4ee5\u8c03\u7528 gzip \uff0c\u4ece\u800c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u538b\u7f29\u548c\u89e3\u538b\u7f29\u7684\u529f\u80fd \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u538b\u7f29\u6587\u4ef6 tar -zcvf \u6253\u5305\u6587\u4ef6.tar.gz \u88ab\u538b\u7f29\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u538b\u7f29\u6587\u4ef6 tar -zxvf \u6253\u5305\u6587\u4ef6.tar.gz # \u89e3\u538b\u7f29\u5230\u6307\u5b9a\u8def\u5f84 tar -zxvf \u6253\u5305\u6587\u4ef6.tar.gz -C \u76ee\u6807\u8def\u5f84 \u9009\u9879 \u542b\u4e49 -C \u89e3\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u6ce8\u610f\uff1a\u8981\u89e3\u538b\u7f29\u7684\u76ee\u5f55\u5fc5\u987b\u5b58\u5728 2) bzip2(two) \u00b6 tar \u4e0e bzip2 \u547d\u4ee4\u7ed3\u5408\u53ef\u4ee5\u4f7f\u7528\u5b9e\u73b0\u6587\u4ef6 \u6253\u5305\u548c\u538b\u7f29 \uff08\u7528\u6cd5\u548c gzip \u4e00\u6837\uff09 tar \u53ea\u8d1f\u8d23\u6253\u5305\u6587\u4ef6\uff0c\u4f46\u4e0d\u538b\u7f29\uff0c \u7528 bzip2 \u538b\u7f29 tar \u6253\u5305\u540e\u7684\u6587\u4ef6\uff0c\u5176\u6269\u5c55\u540d\u4e00\u822c\u7528 xxx.tar.bz2 \u5728 tar \u547d\u4ee4\u4e2d\u6709\u4e00\u4e2a\u9009\u9879 -j \u53ef\u4ee5\u8c03\u7528 bzip2 \uff0c\u4ece\u800c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u538b\u7f29\u548c\u89e3\u538b\u7f29\u7684\u529f\u80fd \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u538b\u7f29\u6587\u4ef6 tar -jcvf \u6253\u5305\u6587\u4ef6.tar.bz2 \u88ab\u538b\u7f29\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u538b\u7f29\u6587\u4ef6 tar -jxvf \u6253\u5305\u6587\u4ef6.tar.bz2 04. \u8f6f\u4ef6\u5b89\u88c5 \u00b6 4.1 \u901a\u8fc7 apt \u5b89\u88c5\uff0f\u5378\u8f7d\u8f6f\u4ef6 \u00b6 apt \u662f Advanced Packaging Tool \uff0c\u662f Linux \u4e0b\u7684\u4e00\u6b3e\u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177 \u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u65b9\u4fbf\u7684 \u5b89\u88c5 \uff0f \u5378\u8f7d \uff0f \u66f4\u65b0\u8f6f\u4ef6\u5305 # 1\\. \u5b89\u88c5\u8f6f\u4ef6 $ sudo apt install \u8f6f\u4ef6\u5305 # 2\\. \u5378\u8f7d\u8f6f\u4ef6 $ sudo apt remove \u8f6f\u4ef6\u540d # 3\\. \u66f4\u65b0\u5df2\u5b89\u88c5\u7684\u5305 $ sudo apt upgrade \u5b89\u88c5\u6f14\u7ec3 \u00b6 # \u4e00\u4e2a\u5c0f\u706b\u8f66\u63d0\u793a $ sudo apt install sl # \u4e00\u4e2a\u6bd4\u8f83\u6f02\u4eae\u7684\u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u6392\u540d\u7684\u8f6f\u4ef6 $ sudo apt install htop 4.2 \u914d\u7f6e\u8f6f\u4ef6\u6e90 \u00b6 \u5982\u679c\u5e0c\u671b\u5728 ubuntu \u4e2d\u5b89\u88c5\u8f6f\u4ef6\uff0c \u66f4\u52a0\u5feb\u901f \uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e**\u955c\u50cf\u6e90**\uff0c\u9009\u62e9\u4e00\u4e2a\u8bbf\u95ee\u7f51\u901f\u66f4\u5feb\u7684\u670d\u52a1\u5668\uff0c\u6765\u63d0\u4f9b\u8f6f\u4ef6\u4e0b\u8f7d\uff0f\u5b89\u88c5\u670d\u52a1 \u63d0\u793a\uff1a\u66f4\u6362\u670d\u52a1\u5668\u4e4b\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u76f8\u5bf9\u6bd4\u8f83\u957f\u65f6\u95f4\u7684\u66f4\u65b0\u8fc7\u7a0b\uff0c\u9700\u8981\u8010\u5fc3\u7b49\u5f85\u3002\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u518d\u5b89\u88c5\u8f6f\u4ef6\u90fd\u4f1a\u4ece\u65b0\u8bbe\u7f6e\u7684\u670d\u52a1\u5668\u4e0b\u8f7d\u8f6f\u4ef6\u4e86 \u6240\u8c13\u955c\u50cf\u6e90\uff0c\u5c31\u662f**\u6240\u6709\u670d\u52a1\u5668\u7684\u5185\u5bb9\u662f\u76f8\u540c\u7684\uff08\u955c\u50cf\uff09**\uff0c\u4f46\u662f\u6839\u636e\u6240\u5728\u4f4d\u7f6e\u4e0d\u540c\uff0c\u56fd\u5185\u670d\u52a1\u5668\u901a\u5e38\u901f\u5ea6\u4f1a\u66f4\u5feb\u4e00\u4e9b\uff01 \ufffc","title":"044 linux\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#python","text":"","title":"Python \u57fa\u7840\u8bfe\u7a0b\u5b89\u6392"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_1","text":"\u660e\u786e\u57fa\u7840\u73ed\u8bfe\u7a0b\u5185\u5bb9","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_2","text":"\u5e8f\u53f7 \u5185\u5bb9 \u76ee\u6807 01 Linux \u57fa\u7840 \u8ba9\u5927\u5bb6\u5bf9 Ubuntu \u7684\u4f7f\u7528\u4ece\u5f88 \u964c\u751f \u8fbe\u5230 \u7075\u6d3b\u64cd\u4f5c 02 Python \u57fa\u7840 \u6db5\u76d6 Python \u57fa\u7840\u77e5\u8bc6\uff0c\u8ba9\u5927\u5bb6\u638c\u63e1\u57fa\u7840\u7684\u7f16\u7a0b\u80fd\u529b 03 Python \u9762\u5411\u5bf9\u8c61 \u4ecb\u7ecd Python \u7684\u9762\u76f8\u5bf9\u8c61\u5f00\u53d1\uff0c\u4e3a\u5f00\u53d1\u5927\u578b\u9879\u76ee\u505a\u597d\u94fa\u57ab\u548c\u51c6\u5907 04 \u9879\u76ee\u5b9e\u6218 \u5e94\u7528\u57fa\u7840\u73ed\u5b66\u4e60\u8fc7\u7684\u77e5\u8bc6\uff0c\u7f16\u7a0b\u5b9e\u6218\uff0c\u5b8c\u6210\u7b2c\u4e00\u4e2a Python \u9879\u76ee","title":"\u8bfe\u7a0b\u6e05\u5355"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_3","text":"","title":"\u5206\u4eab"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_4","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf\uff08\u79d1\u666e\u7ae0\u8282\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_5","text":"\u4e86\u89e3**\u64cd\u4f5c\u7cfb\u7edf**\u53ca\u4f5c\u7528","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#146-operation-systemos","text":"\u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3a\u63a5\u53e3\u7684\u793a\u610f\u56fe \ufffc \u6ca1\u6709\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a \u88f8\u673a \u5982\u679c\u60f3\u5728 \u88f8\u673a \u4e0a\u8fd0\u884c\u81ea\u5df1\u6240\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u5c31\u5fc5\u987b\u7528\u673a\u5668\u8bed\u8a00\u4e66\u5199\u7a0b\u5e8f \u5982\u679c\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u4e86\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c31\u53ef\u4ee5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5\u652f\u6301\u7684\u9ad8\u7ea7\u8bed\u8a00\u73af\u5883\uff0c\u7528\u9ad8\u7ea7\u8bed\u8a00\u5f00\u53d1\u7a0b\u5e8f","title":"1. \u64cd\u4f5c\u7cfb\u7edf\uff08Operation System\uff0cOS\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#11","text":"\u662f\u73b0\u4ee3\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d \u6700\u57fa\u672c\u548c\u6700\u91cd\u8981 \u7684\u7cfb\u7edf\u8f6f\u4ef6 \u662f \u914d\u7f6e\u5728\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0a\u7684\u7b2c\u4e00\u5c42\u8f6f\u4ef6 \uff0c\u662f\u5bf9\u786c\u4ef6\u7cfb\u7edf\u7684\u9996\u6b21\u6269\u5c55 \u4e3b\u8981\u4f5c\u7528\u662f**\u7ba1\u7406\u597d\u786c\u4ef6\u8bbe\u5907**\uff0c\u5e76\u4e3a\u7528\u6237\u548c\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u4e8e\u4f7f\u7528 \u800c\u5176\u4ed6\u7684\u8bf8\u5982\u7f16\u8bd1\u7a0b\u5e8f\u3001\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u4ee5\u53ca\u5927\u91cf\u7684\u5e94\u7528\u8f6f\u4ef6\uff0c\u90fd\u76f4\u63a5\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u652f\u6301","title":"1.1 \u64cd\u4f5c\u7cfb\u7edf\u7684\u4f5c\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#12","text":"\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf \u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf \u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf \u79fb\u52a8\u8bbe\u5907\u64cd\u4f5c\u7cfb\u7edf","title":"1.2 \u4e0d\u540c\u5e94\u7528\u9886\u57df\u7684\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#1","text":"Windows \u7cfb\u5217 \u7528\u6237\u7fa4\u4f53\u5927 macOS \u9002\u5408\u4e8e\u5f00\u53d1\u4eba\u5458 Linux \u5e94\u7528\u8f6f\u4ef6\u5c11","title":"1&gt; \u684c\u9762\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#2","text":"Linux \u5b89\u5168\u3001\u7a33\u5b9a\u3001\u514d\u8d39 \u5360\u6709\u7387\u9ad8 Windows Server \u4ed8\u8d39 \u5360\u6709\u7387\u4f4e \ufffc","title":"2&gt; \u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#3","text":"Linux","title":"3&gt; \u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#4","text":"iOS Android\uff08\u57fa\u4e8e Linux \uff09","title":"4&gt; \u79fb\u52a8\u8bbe\u5907\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#13","text":"\u865a\u62df\u673a\uff08Virtual Machine\uff09\u6307\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7684\u5177\u6709\u5b8c\u6574\u786c\u4ef6\u7cfb\u7edf\u529f\u80fd\u7684\u3001\u8fd0\u884c\u5728\u4e00\u4e2a\u5b8c\u5168\u9694\u79bb\u73af\u5883\u4e2d\u7684\u5b8c\u6574\u8ba1\u7b97\u673a\u7cfb\u7edf \u865a\u62df\u7cfb\u7edf\u901a\u8fc7\u751f\u6210\u73b0\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u5168\u65b0\u865a\u62df\u955c\u50cf\uff0c\u5177\u6709\u771f\u5b9e\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u5168\u4e00\u6837\u7684\u529f\u80fd \u8fdb\u5165\u865a\u62df\u7cfb\u7edf\u540e\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5728\u8fd9\u4e2a\u5168\u65b0\u7684\u72ec\u7acb\u7684\u865a\u62df\u7cfb\u7edf\u91cc\u9762\u8fdb\u884c\uff0c\u53ef\u4ee5\u72ec\u7acb\u5b89\u88c5\u8fd0\u884c\u8f6f\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u684c\u9762\uff0c\u4e0d\u4f1a\u5bf9\u771f\u6b63\u7684\u7cfb\u7edf\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd \u800c\u4e14\u80fd\u591f\u5728\u73b0\u6709\u7cfb\u7edf\u4e0e\u865a\u62df\u955c\u50cf\u4e4b\u95f4\u7075\u6d3b\u5207\u6362\u7684\u4e00\u7c7b\u64cd\u4f5c\u7cfb\u7edf","title":"1.3 \u865a\u62df\u673a"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_6","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u53f2\uff08\u79d1\u666e\u7ae0\u8282\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_7","text":"\u4e86\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u5386\u53f2 \u77e5\u9053 Linux \u5185\u6838\u53ca\u53d1\u884c\u7248\u7684\u533a\u522b \u77e5\u9053 Linux \u7684\u5e94\u7528\u9886\u57df","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0146","text":"","title":"01. \u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u5c55\u5386\u53f2"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#11-unix","text":"1965 \u5e74\u4e4b\u524d\u7684\u65f6\u5019\uff0c\u7535\u8111\u5e76\u4e0d\u50cf\u73b0\u5728\u4e00\u6837\u666e\u904d\uff0c\u5b83\u53ef\u4e0d\u662f\u4e00\u822c\u4eba\u80fd\u78b0\u7684\u8d77\u7684\uff0c\u9664\u975e\u662f\u519b\u4e8b\u6216\u8005\u5b66\u9662\u7684\u7814\u7a76\u673a\u6784\uff0c\u800c\u4e14\u5f53\u65f6\u5927\u578b\u4e3b\u673a\u81f3\u591a\u80fd\u63d0\u4f9b30\u53f0\u7ec8\u7aef\uff0830\u4e2a\u952e\u76d8\u3001\u663e\u793a\u5668)\uff0c\u8fde\u63a5\u4e00\u53f0\u7535\u8111 \ufffc \u4e3a\u4e86\u89e3\u51b3\u6570\u91cf\u4e0d\u591f\u7528\u7684\u95ee\u9898 1965 \u5e74\u5de6\u540e\u7531 \u8d1d\u5c14\u5b9e\u9a8c\u5ba4 \u52a0\u5165\u4e86 \u9ebb\u7701\u7406\u5de5\u5b66\u9662 \u4ee5\u53ca \u901a\u7528\u7535\u6c14 \u5408\u4f5c\u7684\u8ba1\u5212 \u2014\u2014 \u8be5\u8ba1\u5212\u8981\u5efa\u7acb\u4e00\u5957 \u591a\u4f7f\u7528\u8005(multi\uff0duser) \u3001 \u591a\u4efb\u52a1(multi\uff0dprocessor) \u3001 \u591a\u5c42\u6b21(multi\uff0dlevel) \u7684 MULTICS \u64cd\u4f5c\u7cfb\u7edf\uff0c\u60f3\u8ba9\u5927\u578b\u4e3b\u673a\u652f\u6301 300 \u53f0\u7ec8\u7aef 1969 \u5e74\u524d\u540e\u8fd9\u4e2a\u9879\u76ee\u8fdb\u5ea6\u7f13\u6162\uff0c\u8d44\u91d1\u77ed\u7f3a\uff0c\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u9000\u51fa\u4e86\u7814\u7a76 1969 \u5e74\u4ece\u8fd9\u4e2a\u9879\u76ee\u4e2d\u9000\u51fa\u7684 Ken Thompson \u5f53\u65f6\u5728\u5b9e\u9a8c\u5ba4\u65e0\u804a\u65f6\uff0c\u4e3a\u4e86\u8ba9\u4e00\u53f0\u7a7a\u95f2\u7684\u7535\u8111\u4e0a\u80fd\u591f\u8fd0\u884c \"\u661f\u9645\u65c5\u884c\uff08Space Travel\uff09\" \u6e38\u884c\uff0c\u5728 8 \u6708\u4efd\u5de6\u53f3\u8d81\u7740\u5176\u59bb\u5b50\u63a2\u4eb2\u7684\u65f6\u95f4\uff0c \u7528\u4e86 1 \u4e2a\u6708\u7684\u65f6\u95f4 \uff0c\u4f7f\u7528\u6c47\u7f16\u5199\u51fa\u4e86 Unix \u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u578b 1970 \u5e74\uff0c\u7f8e\u56fd\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684 Ken Thompson \uff0c\u4ee5 BCPL \u8bed\u8a00\u4e3a\u57fa\u7840\uff0c\u8bbe\u8ba1\u51fa\u5f88\u7b80\u5355\u4e14\u5f88\u63a5\u8fd1\u786c\u4ef6\u7684 B \u8bed\u8a00 \uff08\u53d6BCPL\u7684\u9996\u5b57\u6bcd\uff09\uff0c\u5e76\u4e14\u4ed6\u7528 B \u8bed\u8a00 \u5199\u4e86\u7b2c\u4e00\u4e2a UNIX \u64cd\u4f5c\u7cfb\u7edf 1971 \u5e74\uff0c\u540c\u6837\u9177\u7231 \"\u661f\u9645\u65c5\u884c\uff08Space Travel\uff09\" \u7684 Dennis M.Ritchie \u4e3a\u4e86\u80fd\u65e9\u70b9\u513f\u73a9\u4e0a\u6e38\u620f\uff0c\u52a0\u5165\u4e86 Thompson \u7684\u5f00\u53d1\u9879\u76ee\uff0c\u5408\u4f5c\u5f00\u53d1 UNIX\uff0c\u4ed6\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u6539\u9020 B \u8bed\u8a00 \uff0c\u56e0\u4e3a**B \u8bed\u8a00** \u7684\u8de8\u5e73\u53f0\u6027\u8f83\u5dee 1972 \u5e74\uff0c Dennis M.Ritchie \u5728 B \u8bed\u8a00 \u7684\u57fa\u7840\u4e0a\u6700\u7ec8\u8bbe\u8ba1\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u8a00\uff0c\u4ed6\u53d6\u4e86 BCPL \u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4f5c\u4e3a\u8fd9\u79cd\u8bed\u8a00\u7684\u540d\u5b57\uff0c\u8fd9\u5c31\u662f C \u8bed\u8a00 1973 \u5e74\u521d\uff0c C \u8bed\u8a00**\u7684\u4e3b\u4f53\u5b8c\u6210\uff0c**Thompson \u548c Ritchie \u8feb\u4e0d\u53ca\u5f85\u5730\u5f00\u59cb\u7528\u5b83\u5b8c\u5168\u91cd\u5199\u4e86\u73b0\u5728\u5927\u540d\u9f0e\u9f0e\u7684 Unix \u64cd\u4f5c\u7cfb\u7edf \ufffc \u80af\u00b7\u6c64\u666e\u900a\uff08\u5de6\uff09\u548c\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff08\u53f3\uff09","title":"1.1 Unix"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#c","text":"\u5728\u628a UNIX \u79fb\u690d\u5230\u5176\u4ed6\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u65f6\uff0c**C \u8bed\u8a00**\u5f3a\u5927\u7684\u79fb\u690d\u6027\uff08Portability\uff09\u5728\u6b64\u663e\u73b0 \u673a\u5668\u8bed\u8a00\u548c\u6c47\u7f16\u8bed\u8a00\u90fd\u4e0d\u5177\u6709\u79fb\u690d\u6027\uff0c\u4e3a x86 \u5f00\u53d1\u7684\u7a0b\u5e8f\uff0c\u4e0d\u53ef\u80fd\u5728 Alpha\uff0cSPARC \u548c ARM \u7b49\u673a\u5668\u4e0a\u8fd0\u884c \u800c C \u8bed\u8a00**\u7a0b\u5e8f\u5219\u53ef\u4ee5\u4f7f\u7528\u5728\u4efb\u610f\u67b6\u6784\u7684\u5904\u7406\u5668\u4e0a\uff0c\u53ea\u8981\u90a3\u79cd\u67b6\u6784\u7684\u5904\u7406\u5668**\u5177\u6709\u5bf9\u5e94\u7684 C \u8bed\u8a00\u7f16\u8bd1\u5668\u548c\u5e93 \uff0c\u7136\u540e\u5c06 C \u6e90\u4ee3\u7801\u7f16\u8bd1\u3001\u8fde\u63a5\u6210\u76ee\u6807\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e4b\u540e\u5373\u53ef\u8fd0\u884c","title":"C \u8bed\u8a00"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#unix","text":"\ufffc","title":"Unix \u5bb6\u8c31"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#12-minix","text":"\u56e0\u4e3a AT&T\uff08\u901a\u7528\u7535\u6c14\uff09 \u7684\u653f\u7b56\u6539\u53d8\uff0c\u5728 Version 7 Unix \u63a8\u51fa\u4e4b\u540e\uff0c\u53d1\u5e03\u65b0\u7684\u4f7f\u7528\u6761\u6b3e\uff0c\u5c06 UNIX \u6e90\u4ee3\u7801\u79c1\u6709\u5316\uff0c\u5728\u5927\u5b66\u4e2d\u4e0d\u518d\u80fd\u4f7f\u7528 UNIX \u6e90\u4ee3\u7801 Andrew S. Tanenbaum\uff08\u5854\u80fd\u9c8d\u59c6\uff09 \u6559\u6388\u4e3a\u4e86\u80fd \u5728\u8bfe\u5802\u4e0a\u6559\u6388\u5b66\u751f\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u4f5c\u7684\u7ec6\u8282 \uff0c\u51b3\u5b9a\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55 AT&T \u7684\u6e90\u4ee3\u7801\u524d\u63d0\u4e0b\uff0c\u81ea\u884c\u5f00\u53d1\u4e0e UNIX \u517c\u5bb9\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u907f\u514d\u7248\u6743\u4e0a\u7684\u4e89\u8bae \u4ee5 \u5c0f\u578b UNIX\uff08mini-UNIX\uff09**\u4e4b\u610f\uff0c\u5c06\u5b83\u79f0\u4e3a **MINIX","title":"1.2 Minix"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#13-linux","text":"1991 \u5e74 \u6797\u7eb3\u65af\uff08Linus\uff09 \u5c31\u8bfb\u4e8e\u8d6b\u5c14\u8f9b\u57fa\u5927\u5b66\u671f\u95f4\uff0c\u5bf9 Unix \u4ea7\u751f\u6d53\u539a\u5174\u8da3\uff0c\u5c1d\u8bd5\u7740\u5728Minix \u4e0a\u505a\u4e00\u4e9b\u5f00\u53d1\u5de5\u4f5c \u56e0\u4e3a Minix \u53ea\u662f\u6559\u5b66\u4f7f\u7528\uff0c\u56e0\u6b64\u529f\u80fd\u5e76\u4e0d\u5f3a\uff0c \u6797\u7eb3\u65af \u7ecf\u5e38\u8981\u7528\u4ed6\u7684\u7ec8\u7aef **\u4eff\u771f\u5668\uff08Terminal Emulator\uff09**\u53bb\u8bbf\u95ee\u5927\u5b66\u4e3b\u673a\u4e0a\u7684\u65b0\u95fb\u7ec4\u548c\u90ae\u4ef6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bfb\u5199\u548c\u4e0b\u8f7d\u6587\u4ef6\uff0c\u4ed6\u81ea\u5df1\u7f16\u5199\u4e86\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u5728\u540e\u6765\u6210\u4e3a\u4e86 Linux \u7b2c\u4e00\u4e2a\u5185\u6838\u7684\u96cf\u5f62\uff0c\u5f53\u65f6\uff0c\u4ed6\u5e74\u4ec5 21 \u5c81\uff01 \u6797\u7eb3\u65af \u5229\u7528 GNU \u7684 bash \u5f53\u505a\u5f00\u53d1\u73af\u5883\uff0cgcc \u5f53\u505a\u7f16\u8bd1\u5de5\u5177\uff0c\u7f16\u5199\u4e86 Linux \u5185\u6838\uff0c\u4e00\u5f00\u59cb Linux \u5e76\u4e0d\u80fd\u517c\u5bb9 Unix \u5373 Unix \u4e0a\u8dd1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5728 Linux \u4e0a\u8dd1\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5185\u6838\u4e4b\u95f4\u7684\u63a5\u53e3\u4e0d\u4e00\u81f4 \u4e00\u5f00\u59cb Linux \u53ea\u9002\u7528\u4e8e 386\uff0c\u540e\u6765\u7ecf\u8fc7\u5168\u4e16\u754c\u7684\u7f51\u53cb\u7684\u5e2e\u52a9\uff0c\u6700\u7ec8\u80fd\u591f\u517c\u5bb9\u591a\u79cd\u786c\u4ef6 \ufffc","title":"1.3 Linux"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0246-linux","text":"","title":"02. Linux \u5185\u6838\u53ca\u53d1\u884c\u7248"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#21-linux","text":"**\u5185\u6838\uff08kernel\uff09**\u662f\u7cfb\u7edf\u7684\u5fc3\u810f\uff0c\u662f\u8fd0\u884c\u7a0b\u5e8f\u548c\u7ba1\u7406\u50cf\u78c1\u76d8\u548c\u6253\u5370\u673a\u7b49\u786c\u4ef6\u8bbe\u5907\u7684\u6838\u5fc3\u7a0b\u5e8f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5728\u88f8\u8bbe\u5907\u4e0e\u5e94\u7528\u7a0b\u5e8f\u95f4\u7684\u62bd\u8c61\u5c42 Linux \u5185\u6838\u7248\u672c\u53c8\u5206\u4e3a \u7a33\u5b9a\u7248 \u548c \u5f00\u53d1\u7248 \uff0c\u4e24\u79cd\u7248\u672c\u662f\u76f8\u4e92\u5173\u8054\uff0c\u76f8\u4e92\u5faa\u73af \u7a33\u5b9a\u7248 \uff1a\u5177\u6709\u5de5\u4e1a\u7ea7\u5f3a\u5ea6\uff0c\u53ef\u4ee5\u5e7f\u6cdb\u5730\u5e94\u7528\u548c\u90e8\u7f72\u3002\u65b0\u7684\u7a33\u5b9a\u7248\u76f8\u5bf9\u4e8e\u8f83\u65e7\u7684\u53ea\u662f\u4fee\u6b63\u4e00\u4e9b bug \u6216\u52a0\u5165\u4e00\u4e9b\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f \u5f00\u53d1\u7248 \uff1a\u7531\u4e8e\u8981\u8bd5\u9a8c\u5404\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u53d8\u5316\u5f88\u5feb \u5185\u6838\u6e90\u7801\u7f51\u5740\uff1a http://www.kernel.org \u6240\u6709\u6765\u81ea\u5168\u4e16\u754c\u7684\u5bf9 Linux \u6e90\u7801\u7684\u4fee\u6539\u6700\u7ec8\u90fd\u4f1a\u6c47\u603b\u5230\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u7531 Linus \u9886\u5bfc\u7684\u5f00\u6e90\u793e\u533a\u5bf9\u5176\u8fdb\u884c\u7504\u522b\u548c\u4fee\u6539\u6700\u7ec8\u51b3\u5b9a\u662f\u5426\u8fdb\u5165\u5230 Linux \u4e3b\u7ebf\u5185\u6838\u6e90\u7801\u4e2d","title":"2.1 Linux \u5185\u6838\u7248\u672c"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#22-linux","text":"**Linux \u53d1\u884c\u7248\uff08\u4e5f\u88ab\u53eb\u505a GNU/Linux \u53d1\u884c\u7248\uff09**\u901a\u5e38\u5305\u542b\u4e86\u5305\u62ec\u684c\u9762\u73af\u5883\u3001\u529e\u516c\u5957\u4ef6\u3001\u5a92\u4f53\u64ad\u653e\u5668\u3001\u6570\u636e\u5e93\u7b49\u5e94\u7528\u8f6f\u4ef6 \u5e38\u89c1\u7684\u53d1\u884c\u7248\u672c\u5982\u4e0b\uff1a Ubuntu Redhat Fedora openSUSE Linux Mint Debian Manjaro Mageia CentOS Arch \u5341\u5927 Linux \u670d\u52a1\u5668\u53d1\u884c\u7248\u6392\u884c\u699c\uff1a http://os.51cto.com/art/201612/526126.htm \u5728\u51e0\u4e4e\u6bcf\u4e00\u4efd\u4e0e Linux \u6709\u5173\u7684\u699c\u5355\u4e0a\uff0c\u57fa\u4e8e Debian \u7684 Ubuntu \u90fd\u5360\u6709\u4e00\u5e2d\u4e4b\u4f4d\u3002Canonical \u7684Ubuntu \u80dc\u8fc7\u5176\u4ed6\u6240\u6709\u7684 Linux \u670d\u52a1\u5668\u53d1\u884c\u7248 \u2015\u2015 \u4ece\u7b80\u5355\u5b89\u88c5\u3001\u51fa\u8272\u7684\u786c\u4ef6\u53d1\u73b0\uff0c\u5230\u4e16\u754c\u7ea7\u7684\u5546\u4e1a\u652f\u6301\uff0cUbuntu\u786e\u7acb\u4e86\u96be\u4ee5\u4f01\u53ca\u7684\u4e25\u683c\u6807\u51c6","title":"2.2 Linux \u53d1\u884c\u7248\u672c"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0346-linux","text":"","title":"03. Linux \u7684\u5e94\u7528\u9886\u57df"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#31","text":"Linux \u5728\u670d\u52a1\u5668\u9886\u57df\u7684\u5e94\u7528\u662f\u5176\u91cd\u8981\u5206\u652f Linux \u514d\u8d39\u3001\u7a33\u5b9a\u3001\u9ad8\u6548\u7b49\u7279\u70b9\u5728\u8fd9\u91cc\u5f97\u5230\u4e86\u5f88\u597d\u7684\u4f53\u73b0 \u65e9\u671f\u56e0\u4e3a\u7ef4\u62a4\u3001\u8fd0\u884c\u7b49\u539f\u56e0\u540c\u6837\u53d7\u5230\u4e86\u5f88\u5927\u7684\u9650\u5236 \u8fd1\u4e9b\u5e74\u6765 Linux \u670d\u52a1\u5668\u5e02\u573a\u5f97\u5230\u4e86\u98de\u901f\u7684\u63d0\u5347\uff0c\u5c24\u5176\u5728\u4e00\u4e9b\u9ad8\u7aef\u9886\u57df\u5c24\u4e3a\u5e7f\u6cdb","title":"3.1 \u670d\u52a1\u5668\u9886\u57df"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#32","text":"\u8fd1\u4e9b\u5e74\u6765 Linux \u5728\u5d4c\u5165\u5f0f\u9886\u57df\u7684\u5e94\u7528\u5f97\u5230\u4e86\u98de\u901f\u7684\u63d0\u9ad8 Linux \u8fd0\u884c\u7a33\u5b9a\u3001\u5bf9\u7f51\u7edc\u7684\u826f\u597d\u652f\u6301\u6027\u3001\u4f4e\u6210\u672c\uff0c\u4e14\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u8f6f\u4ef6\u88c1\u526a\uff0c\u5185\u6838\u6700\u5c0f\u53ef\u4ee5\u8fbe\u5230\u51e0\u767e KB \u7b49\u7279\u70b9\uff0c\u4f7f\u5176\u8fd1\u4e9b\u5e74\u6765\u5728\u5d4c\u5165\u5f0f\u9886\u57df\u7684\u5e94\u7528\u5f97\u5230\u975e\u5e38\u5927\u7684\u63d0\u9ad8 \u4e3b\u8981\u5e94\u7528\uff1a \u673a\u9876\u76d2 \u3001 \u6570\u5b57\u7535\u89c6 \u3001 \u7f51\u7edc\u7535\u8bdd \u3001 \u7a0b\u63a7\u4ea4\u6362\u673a \u3001 \u624b\u673a \u3001 PDA \u3001\u7b49\u90fd\u662f\u5176\u5e94\u7528\u9886\u57df\uff0c\u5f97\u5230\u4e86 Google\u3001\u4e09\u661f\u3001\u6469\u6258\u7f57\u62c9\u3001NEC \u7b49\u516c\u53f8\u7684\u5927\u529b\u63a8\u5e7f","title":"3.2 \u5d4c\u5165\u5f0f\u9886\u57df"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#33","text":"\u6b64\u9886\u57df\u662f\u4f20\u7edf Linux \u5e94\u7528\u6700\u8584\u5f31\u7684\u73af\u8282 \u4f20\u7edf Linux \u7531\u4e8e\u754c\u9762\u7b80\u5355\u3001\u64cd\u4f5c\u590d\u6742\u3001\u5e94\u7528\u8f6f\u4ef6\u5c11\u7684\u7f3a\u70b9\uff0c\u4e00\u76f4\u88ab Windows \u6240\u538b\u5236 \u8fd1\u4e9b\u5e74\u6765\u968f\u7740 Ubuntu \u3001 Fedora \u7b49\u4f18\u79c0\u684c\u9762\u73af\u5883\u7684\u5174\u8d77\uff0c\u540c\u65f6\u5404\u5927\u786c\u4ef6\u5382\u5546\u5bf9\u5176\u652f\u6301\u7684\u52a0\u5927\uff0cLinux \u5728\u4e2a\u4eba\u684c\u9762\u9886\u57df\u7684\u5360\u6709\u7387\u5728\u9010\u6e10\u7684\u63d0\u9ad8 \u5728 Ubuntu \u4e2d\u73a9 QQ \ufffc","title":"3.3 \u4e2a\u4eba\u684c\u9762\u9886\u57df"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_8","text":"","title":"\u6587\u4ef6\u548c\u76ee\u5f55\uff08\u7406\u89e3\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_9","text":"\u7406\u89e3 Linux \u6587\u4ef6\u76ee\u5f55\u7684\u7ed3\u6784","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0146_1","text":"\u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \uff1a\u6307\u4e00\u53f0\u8ba1\u7b97\u673a\u5728\u540c\u4e00\u65f6\u95f4 \u53ea\u80fd\u7531\u4e00\u4e2a\u7528\u6237 \u4f7f\u7528\uff0c\u4e00\u4e2a\u7528\u6237\u72ec\u81ea\u4eab\u7528\u7cfb\u7edf\u7684\u5168\u90e8\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90 Windows XP \u4e4b\u524d\u7684\u7248\u672c\u90fd\u662f\u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf \uff1a\u6307\u4e00\u53f0\u8ba1\u7b97\u673a\u5728\u540c\u4e00\u65f6\u95f4\u53ef\u4ee5\u7531 \u591a\u4e2a\u7528\u6237 \u4f7f\u7528\uff0c\u591a\u4e2a\u7528\u6237\u5171\u540c\u4eab\u7528\u7cfb\u7edf\u7684\u5168\u90e8\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90 Unix \u548c Linux \u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf","title":"01. \u5355\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf\u548c\u591a\u7528\u6237\u64cd\u4f5c\u7cfb\u7edf\uff08\u79d1\u666e\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02-windows-linux","text":"","title":"02.\u00a0Windows\u00a0\u548c\u00a0Linux\u00a0\u6587\u4ef6\u7cfb\u7edf\u533a\u522b"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#21-windows","text":"\u5728 Windows \u4e0b\uff0c\u6253\u5f00 \u201c\u8ba1\u7b97\u673a\u201d\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u4e00\u4e2a\u4e2a\u7684\u9a71\u52a8\u5668\u76d8\u7b26\uff1a \ufffc \u6bcf\u4e2a\u9a71\u52a8\u5668\u90fd\u6709\u81ea\u5df1\u7684\u6839\u76ee\u5f55\u7ed3\u6784\uff0c\u8fd9\u6837\u5f62\u6210\u4e86\u591a\u4e2a\u6811\u5e76\u5217\u7684\u60c5\u5f62\uff0c\u5982\u56fe\u6240\u793a\uff1a \ufffc","title":"2.1\u00a0Windows\u00a0\u4e0b\u7684\u6587\u4ef6\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#22-linux_1","text":"\u5728 Linux \u4e0b\uff0c\u6211\u4eec\u662f\u770b\u4e0d\u5230\u8fd9\u4e9b\u9a71\u52a8\u5668\u76d8\u7b26\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\uff1a \ufffc Ubuntu \u6ca1\u6709\u76d8\u7b26\u8fd9\u4e2a\u6982\u5ff5\uff0c\u53ea\u6709\u4e00\u4e2a\u6839\u76ee\u5f55 / \uff0c\u6240\u6709\u6587\u4ef6\u90fd\u5728\u5b83\u4e0b\u9762 \ufffc","title":"2.2\u00a0Linux\u00a0\u4e0b\u7684\u6587\u4ef6\u7cfb\u7edf"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#23","text":"\u4f4d\u4e8e /home/user \uff0c\u79f0\u4e4b\u4e3a\u7528\u6237\u5de5\u4f5c\u76ee\u5f55\u6216\u5bb6\u76ee\u5f55\uff0c\u8868\u793a\u65b9\u5f0f\uff1a /home/user ~","title":"2.3 \u7528\u6237\u76ee\u5f55"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#24-linux","text":"/\uff1a\u6839\u76ee\u5f55\uff0c \u4e00\u822c\u6839\u76ee\u5f55\u4e0b\u53ea\u5b58\u653e\u76ee\u5f55 \uff0c\u5728 linux \u4e0b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u76ee\u5f55\uff0c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u4ece\u8fd9\u91cc\u5f00\u59cb \u5f53\u5728\u7ec8\u7aef\u91cc\u8f93\u5165 /home \uff0c\u5176\u5b9e\u662f\u5728\u544a\u8bc9\u7535\u8111\uff0c\u5148\u4ece / \uff08\u6839\u76ee\u5f55\uff09\u5f00\u59cb\uff0c\u518d\u8fdb\u5165\u5230 home \u76ee\u5f55 /bin\u3001/usr/bin\uff1a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u5982\u5e38\u7528\u7684\u547d\u4ee4 ls\u3001tar\u3001mv\u3001cat \u7b49 /boot\uff1a\u653e\u7f6e linux \u7cfb\u7edf\u542f\u52a8\u65f6\u7528\u5230\u7684\u4e00\u4e9b\u6587\u4ef6\uff0c\u5982 linux \u7684\u5185\u6838\u6587\u4ef6\uff1a /boot/vmlinuz \uff0c\u7cfb\u7edf\u5f15\u5bfc\u7ba1\u7406\u5668\uff1a /boot/grub /dev\uff1a\u5b58\u653elinux\u7cfb\u7edf\u4e0b\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u8bbf\u95ee\u8be5\u76ee\u5f55\u4e0b\u67d0\u4e2a\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e\u8bbf\u95ee\u67d0\u4e2a\u8bbe\u5907\uff0c\u5e38\u7528\u7684\u662f\u6302\u8f7d\u5149\u9a71 mount /dev/cdrom /mnt /etc\uff1a\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u4e0d\u5efa\u8bae\u5728\u6b64\u76ee\u5f55\u4e0b\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u91cd\u8981\u7684\u914d\u7f6e\u6587\u4ef6\u6709 /etc/inittab /etc/fstab /etc/init.d /etc/X11 /etc/sysconfig /etc/xinetd.d /home\uff1a\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7528\u6237\u5bb6\u76ee\u5f55\uff0c\u65b0\u589e\u7528\u6237\u8d26\u53f7\u65f6\uff0c\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u90fd\u5b58\u653e\u5728\u6b64\u76ee\u5f55\u4e0b ~ \u8868\u793a\u5f53\u524d\u7528\u6237\u7684\u5bb6\u76ee\u5f55 ~edu \u8868\u793a\u7528\u6237 edu \u7684\u5bb6\u76ee\u5f55 /lib\u3001/usr/lib\u3001/usr/local/lib\uff1a\u7cfb\u7edf\u4f7f\u7528\u7684\u51fd\u6570\u5e93\u7684\u76ee\u5f55\uff0c\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u8c03\u7528\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u65f6\u9700\u8981\u51fd\u6570\u5e93\u7684\u534f\u52a9 /lost+fount\uff1a\u7cfb\u7edf\u5f02\u5e38\u4ea7\u751f\u9519\u8bef\u65f6\uff0c\u4f1a\u5c06\u4e00\u4e9b\u9057\u5931\u7684\u7247\u6bb5\u653e\u7f6e\u4e8e\u6b64\u76ee\u5f55\u4e0b /mnt: /media\uff1a\u5149\u76d8\u9ed8\u8ba4\u6302\u8f7d\u70b9\uff0c\u901a\u5e38\u5149\u76d8\u6302\u8f7d\u4e8e /mnt/cdrom \u4e0b\uff0c\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4f4d\u7f6e\u8fdb\u884c\u6302\u8f7d /opt\uff1a\u7ed9\u4e3b\u673a\u989d\u5916\u5b89\u88c5\u8f6f\u4ef6\u6240\u6446\u653e\u7684\u76ee\u5f55 /proc\uff1a\u6b64\u76ee\u5f55\u7684\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\uff0c\u5982\u7cfb\u7edf\u6838\u5fc3\uff0c\u5916\u90e8\u8bbe\u5907\uff0c\u7f51\u7edc\u72b6\u6001\uff0c\u7531\u4e8e\u6570\u636e\u90fd\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u4e0d\u5360\u7528\u78c1\u76d8\u7a7a\u95f4\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u6587\u4ef6\u6709\uff1a/proc/cpuinfo\u3001/proc/interrupts\u3001/proc/dma\u3001/proc/ioports\u3001/proc/net/* \u7b49 /root\uff1a\u7cfb\u7edf\u7ba1\u7406\u5458root\u7684\u5bb6\u76ee\u5f55 /sbin\u3001/usr/sbin\u3001/usr/local/sbin\uff1a\u653e\u7f6e\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u53ef\u6267\u884c\u547d\u4ee4\uff0c\u5982 fdisk\u3001shutdown\u3001mount \u7b49\u3002\u4e0e /bin \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u51e0\u4e2a\u76ee\u5f55\u662f\u7ed9\u7cfb\u7edf\u7ba1\u7406\u5458 root \u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u4e00\u822c\u7528\u6237\u53ea\u80fd\"\u67e5\u770b\"\u800c\u4e0d\u80fd\u8bbe\u7f6e\u548c\u4f7f\u7528 /tmp\uff1a\u4e00\u822c\u7528\u6237\u6216\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u4e34\u65f6\u5b58\u653e\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u91cd\u8981\u6570\u636e\u4e0d\u53ef\u653e\u7f6e\u5728\u6b64\u76ee\u5f55\u4e0b /srv\uff1a\u670d\u52a1\u542f\u52a8\u4e4b\u540e\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u76ee\u5f55\uff0c\u5982 www \u670d\u52a1\u9700\u8981\u8bbf\u95ee\u7684\u7f51\u9875\u6570\u636e\u5b58\u653e\u5728 /srv/www \u5185 /usr\uff1a\u5e94\u7528\u7a0b\u5e8f\u5b58\u653e\u76ee\u5f55 /usr/bin\uff1a\u5b58\u653e\u5e94\u7528\u7a0b\u5e8f /usr/share\uff1a\u5b58\u653e\u5171\u4eab\u6570\u636e /usr/lib\uff1a\u5b58\u653e\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u5374\u662f\u8bb8\u591a\u7a0b\u5e8f\u8fd0\u884c\u6240\u5fc5\u9700\u7684\u4e00\u4e9b\u51fd\u6570\u5e93\u6587\u4ef6 /usr/local\uff1a\u5b58\u653e\u8f6f\u4ef6\u5347\u7ea7\u5305 /usr/share/doc\uff1a\u7cfb\u7edf\u8bf4\u660e\u6587\u4ef6\u5b58\u653e\u76ee\u5f55 /usr/share/man\uff1a\u7a0b\u5e8f\u8bf4\u660e\u6587\u4ef6\u5b58\u653e\u76ee\u5f55 /var\uff1a\u653e\u7f6e\u7cfb\u7edf\u6267\u884c\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u53d8\u5316\u7684\u6587\u4ef6 /var/log\uff1a\u968f\u65f6\u66f4\u6539\u7684\u65e5\u5fd7\u6587\u4ef6 /var/spool/mail\uff1a\u90ae\u4ef6\u5b58\u653e\u7684\u76ee\u5f55 /var/run\uff1a\u7a0b\u5e8f\u6216\u670d\u52a1\u542f\u52a8\u540e\uff0c\u5176 PID \u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e0b","title":"2.4\u00a0Linux\u00a0\u4e3b\u8981\u76ee\u5f55\u901f\u67e5\u8868"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#ubuntu","text":"","title":"Ubuntu \u56fe\u5f62\u754c\u9762\u5165\u95e8"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_10","text":"\u719f\u6089 Ubuntu \u56fe\u5f62\u754c\u9762\u7684\u57fa\u672c\u4f7f\u7528","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0146-ubuntu","text":"\ufffc","title":"01. Ubuntu \u7684\u4efb\u52a1\u680f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0246","text":"\ufffc","title":"02. \u7a97\u53e3\u64cd\u4f5c\u6309\u94ae"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0346","text":"\ufffc","title":"03. \u7a97\u53e3\u83dc\u5355\u6761"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#linux","text":"","title":"\u5e38\u7528 Linux \u547d\u4ee4\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_11","text":"\u7406\u89e3\u5b66\u4e60 Linux \u7ec8\u7aef\u547d\u4ee4\u7684\u539f\u56e0 \u5e38\u7528 Linux \u547d\u4ee4\u4f53\u9a8c","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01-linux","text":"Linux \u521a\u9762\u4e16\u65f6\u5e76\u6ca1\u6709\u56fe\u5f62\u754c\u9762\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u5168\u9760\u547d\u4ee4\u5b8c\u6210\uff0c\u5982 \u78c1\u76d8\u64cd\u4f5c\u3001\u6587\u4ef6\u5b58\u53d6\u3001\u76ee\u5f55\u64cd\u4f5c\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u6587\u4ef6\u6743\u9650 \u8bbe\u5b9a\u7b49 \u5728\u804c\u573a\u4e2d\uff0c\u5927\u91cf\u7684 \u670d\u52a1\u5668\u7ef4\u62a4\u5de5\u4f5c \u90fd\u662f\u5728 \u8fdc\u7a0b \u901a\u8fc7 SSH \u5ba2\u6237\u7aef \u6765\u5b8c\u6210\u7684\uff0c\u5e76\u6ca1\u6709\u56fe\u5f62\u754c\u9762\uff0c\u6240\u6709\u7684\u7ef4\u62a4\u5de5\u4f5c\u90fd\u9700\u8981\u901a\u8fc7\u547d\u4ee4\u6765\u5b8c\u6210 \u5728\u804c\u573a\u4e2d\uff0c\u4f5c\u4e3a\u540e\u7aef\u7a0b\u5e8f\u5458\uff0c\u5fc5\u987b\u8981\u6216\u591a\u6216\u5c11\u7684\u638c\u63e1\u4e00\u4e9b Linux \u5e38\u7528\u7684\u7ec8\u7aef\u547d\u4ee4 Linux \u53d1\u884c\u7248\u672c\u7684\u547d\u4ee4\u5927\u6982\u6709 200 \u591a\u4e2a\uff0c\u4f46\u662f\u5e38\u7528\u7684\u547d\u4ee4\u53ea\u6709 10 \u591a\u4e2a\u800c\u5df2 \u5b66\u4e60\u7ec8\u7aef\u547d\u4ee4\u7684\u6280\u5de7\uff1a \u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\uff0c\u5bf9\u4e8e\u5e38\u7528\u547d\u4ee4\uff0c\u7528\u7684\u591a\u4e86\uff0c\u81ea\u7136\u5c31\u8bb0\u4f4f\u4e86 \u4e0d\u8981\u5c1d\u8bd5\u4e00\u6b21\u5b66\u4f1a\u6240\u6709\u7684\u547d\u4ee4\uff0c\u6709\u4e9b\u547d\u4ee4\u662f\u975e\u5e38\u4e0d\u5e38\u7528\u7684\uff0c\u4e34\u65f6\u9047\u5230\uff0c\u4e34\u65f6\u767e\u5ea6\u5c31\u53ef\u4ee5","title":"01. \u5b66\u4e60 Linux \u7ec8\u7aef\u547d\u4ee4\u7684\u539f\u56e0"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02-linux","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ls list \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9 02 pwd print wrok directory \u67e5\u770b\u5f53\u524d\u6240\u5728\u6587\u4ef6\u5939 03 cd [\u76ee\u5f55\u540d] change directory \u5207\u6362\u6587\u4ef6\u5939 04 touch [\u6587\u4ef6\u540d] touch \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u65b0\u5efa\u6587\u4ef6 05 mkdir [\u76ee\u5f55\u540d] make directory \u521b\u5efa\u76ee\u5f55 06 rm [\u6587\u4ef6\u540d] remove \u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\u540d 07 clear clear \u6e05\u5c4f > \u5c0f\u6280\u5de7 > * ctrl + shift + = \u653e\u5927\u7ec8\u7aef\u7a97\u53e3\u7684\u5b57\u4f53\u663e\u793a > * ctrl + - \u7f29\u5c0f\u7ec8\u7aef\u7a97\u53e3\u7684\u5b57\u4f53\u663e\u793a ## 03. \u81ea\u52a8\u8865\u5168 \u5728\u6572\u51fa \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \u7684\u524d\u51e0\u4e2a\u5b57\u6bcd\u4e4b\u540e\uff0c\u6309\u4e0b tab \u952e \u5982\u679c\u8f93\u5165\u7684\u6ca1\u6709\u6b67\u4e49\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8865\u5168 \u5982\u679c\u8fd8\u5b58\u5728\u5176\u4ed6 \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \uff0c\u518d\u6309\u4e00\u4e0b tab \u952e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u53ef\u80fd\u5b58\u5728\u7684\u547d\u4ee4 > \u5c0f\u6280\u5de7 \u6309 \u4e0a\uff0f\u4e0b \u5149\u6807\u952e\u53ef\u4ee5\u5728\u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4\u4e4b\u95f4\u6765\u56de\u5207\u6362 \u5982\u679c\u60f3\u8981\u9000\u51fa\u9009\u62e9\uff0c\u5e76\u4e14\u4e0d\u60f3\u6267\u884c\u5f53\u524d\u9009\u4e2d\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u6309 ctrl + c","title":"02. \u5e38\u7528 Linux \u547d\u4ee4\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#linux_1","text":"","title":"Linux \u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_12","text":"\u4e86\u89e3\u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f \u77e5\u9053\u5982\u4f55\u67e5\u9605\u7ec8\u7aef\u547d\u4ee4\u5e2e\u52a9\u4fe1\u606f","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01","text":"command [-options] [parameter] \u8bf4\u660e\uff1a * command\uff1a\u547d\u4ee4\u540d\uff0c\u76f8\u5e94\u529f\u80fd\u7684\u82f1\u6587\u5355\u8bcd\u6216\u5355\u8bcd\u7684\u7f29\u5199 * [-options]\uff1a\u9009\u9879\uff0c\u53ef\u7528\u6765\u5bf9\u547d\u4ee4\u8fdb\u884c\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565 * parameter\uff1a\u4f20\u7ed9\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u662f \u96f6\u4e2a\u3001\u4e00\u4e2a \u6216\u8005 \u591a\u4e2a * [] \u4ee3\u8868\u53ef\u9009","title":"01. \u7ec8\u7aef\u547d\u4ee4\u683c\u5f0f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02","text":"\u63d0\u793a \u73b0\u9636\u6bb5\u53ea\u9700\u8981 \u77e5\u9053 \u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u67e5\u8be2\u547d\u4ee4\u7684\u5e2e\u52a9\u4fe1\u606f \u5148\u5b66\u4e60\u5e38\u7528\u547d\u4ee4\u53ca\u5e38\u7528\u9009\u9879\u7684\u4f7f\u7528\u5373\u53ef\uff0c\u5de5\u4f5c\u4e2d\u5982\u679c\u9047\u5230\u95ee\u9898\u53ef\u4ee5\u501f\u52a9 \u7f51\u7edc\u641c\u7d22","title":"02. \u67e5\u9605\u547d\u4ee4\u5e2e\u52a9\u4fe1\u606f\uff08\u77e5\u9053\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#21-help","text":"command --help \u8bf4\u660e\uff1a \u663e\u793a command \u547d\u4ee4\u7684\u5e2e\u52a9\u4fe1\u606f","title":"2.1 --help"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#22-man","text":"man command \u8bf4\u660e\uff1a \u67e5\u9605 command \u547d\u4ee4\u7684\u4f7f\u7528\u624b\u518c man \u662f manual \u7684\u7f29\u5199\uff0c\u662f Linux \u63d0\u4f9b\u7684\u4e00\u4e2a \u624b\u518c\uff0c\u5305\u542b\u4e86\u7edd\u5927\u90e8\u5206\u7684\u547d\u4ee4\u3001\u51fd\u6570\u7684\u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e \u4f7f\u7528 man \u65f6\u7684\u64cd\u4f5c\u952e\uff1a \u64cd\u4f5c\u952e \u529f\u80fd \u7a7a\u683c\u952e \u663e\u793a\u624b\u518c\u9875\u7684\u4e0b\u4e00\u5c4f Enter \u952e \u4e00\u6b21\u6eda\u52a8\u624b\u518c\u9875\u7684\u4e00\u884c b \u56de\u6eda\u4e00\u5c4f f \u524d\u6eda\u4e00\u5c4f q \u9000\u51fa /word \u641c\u7d22 word \u5b57\u7b26\u4e32","title":"2.2 man"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_13","text":"","title":"\u6587\u4ef6\u548c\u76ee\u5f55\u5e38\u7528\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_14","text":"\u67e5\u770b\u76ee\u5f55\u5185\u5bb9 ls \u5207\u6362\u76ee\u5f55 cd \u521b\u5efa\u548c\u5220\u9664\u64cd\u4f5c touch rm mkdir \u62f7\u8d1d\u548c\u79fb\u52a8\u6587\u4ef6 cp mv \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 cat more grep \u5176\u4ed6 echo \u91cd\u5b9a\u5411 > \u548c >> \u7ba1\u9053 |","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01_1","text":"","title":"01. \u67e5\u770b\u76ee\u5f55\u5185\u5bb9"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#11_1","text":"","title":"1.1 \u7ec8\u7aef\u5b9e\u7528\u6280\u5de7"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#1_1","text":"\u5728\u6572\u51fa \u6587\u4ef6\uff0f\u76ee\u5f55\uff0f\u547d\u4ee4 \u7684\u524d\u51e0\u4e2a\u5b57\u6bcd\u4e4b\u540e\uff0c\u6309\u4e0b tab \u952e \u5982\u679c\u8f93\u5165\u7684\u6ca1\u6709\u6b67\u4e49\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8865\u5168 \u5982\u679c\u8fd8\u5b58\u5728\u5176\u4ed6 \u6587\u4ef6 \uff0f \u76ee\u5f55 \uff0f \u547d\u4ee4 \uff0c\u518d\u6309\u4e00\u4e0b tab \u952e\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u53ef\u80fd\u5b58\u5728\u7684\u547d\u4ee4","title":"1&gt; \u81ea\u52a8\u8865\u5168"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#2_1","text":"\u6309 \u4e0a \uff0f \u4e0b \u5149\u6807\u952e\u53ef\u4ee5\u5728\u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4\u4e4b\u95f4\u6765\u56de\u5207\u6362 \u5982\u679c\u60f3\u8981\u9000\u51fa\u9009\u62e9\uff0c\u5e76\u4e14\u4e0d\u60f3\u6267\u884c\u5f53\u524d\u9009\u4e2d\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u6309 ctrl + c","title":"2&gt; \u66fe\u7ecf\u4f7f\u7528\u8fc7\u7684\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#12-ls","text":"ls \u662f\u82f1\u6587\u5355\u8bcd list \u7684\u7b80\u5199\uff0c\u5176\u529f\u80fd\u4e3a\u5217\u51fa\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u662f\u7528\u6237\u6700\u5e38\u7528\u7684\u547d\u4ee4\u4e4b\u4e00\uff0c\u7c7b\u4f3c\u4e8e DOS \u4e0b\u7684 dir \u547d\u4ee4","title":"1.2 ls \u547d\u4ee4\u8bf4\u660e"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#linux_2","text":"Linux \u6587\u4ef6 \u6216\u8005 \u76ee\u5f55 \u540d\u79f0\u6700\u957f\u53ef\u4ee5\u6709 256 \u4e2a\u5b57\u7b26 \u4ee5 . \u5f00\u5934\u7684\u6587\u4ef6\u4e3a\u9690\u85cf\u6587\u4ef6\uff0c\u9700\u8981\u7528 -a \u53c2\u6570\u624d\u80fd\u663e\u793a . \u4ee3\u8868\u5f53\u524d\u76ee\u5f55 .. \u4ee3\u8868\u4e0a\u4e00\u7ea7\u76ee\u5f55","title":"Linux \u4e0b\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7279\u70b9"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#13-ls","text":"\u53c2\u6570 \u542b\u4e49 -a \u663e\u793a\u6307\u5b9a\u76ee\u5f55\u4e0b\u6240\u6709\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6 -l \u4ee5\u5217\u8868\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f -h \u914d\u5408 -l \u4ee5\u4eba\u6027\u5316\u7684\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u5927\u5c0f","title":"1.3 ls \u5e38\u7528\u9009\u9879"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_15","text":"\u5355\u4f4d \u82f1\u6587 \u542b\u4e49 \u5b57\u8282 B\uff08Byte\uff09 \u5728\u8ba1\u7b97\u673a\u4e2d\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\u5355\u5143\uff0c\u4e00\u822c\u4e3a 8 \u4f4d\u4e8c\u8fdb\u5236\u6570 \u5343 K\uff08Kibibyte\uff09 1 KB = 1024 B\uff0c\u5343\u5b57\u8282 \uff081024 = 2 ** 10\uff09 \u5146 M\uff08Mebibyte\uff09 1 MB = 1024 KB\uff0c\u767e\u4e07\u5b57\u8282 \u5343\u5146 G\uff08Gigabyte\uff09 1 GB = 1024 MB\uff0c\u5341\u4ebf\u5b57\u8282\uff0c\u5343\u5146\u5b57\u8282 \u592a T\uff08Terabyte\uff09 1 TB = 1024 GB\uff0c\u4e07\u4ebf\u5b57\u8282\uff0c\u592a\u5b57\u8282 \u62cd P\uff08Petabyte\uff09 1 PB = 1024 TB\uff0c\u5343\u4e07\u4ebf\u5b57\u8282\uff0c\u62cd\u5b57\u8282 \u827e E\uff08Exabyte\uff09 1 EB = 1024 PB\uff0c\u767e\u4ebf\u4ebf\u5b57\u8282\uff0c\u827e\u5b57\u8282 \u6cfd Z\uff08Zettabyte\uff09 1 ZB = 1024 EB\uff0c\u5341\u4e07\u4ebf\u4ebf\u5b57\u8282\uff0c\u6cfd\u5b57\u8282 \u5c27 Y\uff08Yottabyte\uff09 1 YB = 1024 ZB\uff0c\u4e00\u4ebf\u4ebf\u4ebf\u5b57\u8282\uff0c\u5c27\u5b57\u8282","title":"\u8ba1\u7b97\u673a\u4e2d\u6587\u4ef6\u5927\u5c0f\u7684\u8868\u793a\u65b9\u5f0f\uff08\u79d1\u666e\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#14-ls","text":"\u901a\u914d\u7b26 \u542b\u4e49 * \u4ee3\u8868\u4efb\u610f\u4e2a\u6570\u4e2a\u5b57\u7b26 ? \u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff0c\u81f3\u5c11 1 \u4e2a [] \u8868\u793a\u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u7ec4\u4e2d\u7684\u4efb\u4e00\u4e00\u4e2a [abc] \u5339\u914d a\u3001b\u3001c \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a [a-f] \u5339\u914d\u4ece a \u5230 f \u8303\u56f4\u5185\u7684\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26","title":"1.4 ls \u901a\u914d\u7b26\u7684\u4f7f\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02_1","text":"","title":"02. \u5207\u6362\u76ee\u5f55"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#21-cd","text":"cd \u662f\u82f1\u6587\u5355\u8bcd change directory \u7684\u7b80\u5199\uff0c\u5176\u529f\u80fd\u4e3a\u66f4\u6539\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e5f\u662f\u7528\u6237\u6700\u5e38\u7528\u7684\u547d\u4ee4\u4e4b\u4e00 \u6ce8\u610f\uff1aLinux \u6240\u6709\u7684 \u76ee\u5f55 \u548c \u6587\u4ef6\u540d \u90fd\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684 \u547d\u4ee4 \u542b\u4e49 cd \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55(/home/\u7528\u6237\u76ee\u5f55) cd ~ \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55(/home/\u7528\u6237\u76ee\u5f55) cd . \u4fdd\u6301\u5728\u5f53\u524d\u76ee\u5f55\u4e0d\u53d8 cd .. \u5207\u6362\u5230\u4e0a\u7ea7\u76ee\u5f55 cd - \u53ef\u4ee5\u5728\u6700\u8fd1\u4e24\u6b21\u5de5\u4f5c\u76ee\u5f55\u4e4b\u95f4\u6765\u56de\u5207\u6362","title":"2.1 cd"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#22","text":"\u76f8\u5bf9\u8def\u5f84 \u5728\u8f93\u5165\u8def\u5f84\u65f6\uff0c\u6700\u524d\u9762\u4e0d\u662f / \u6216\u8005 ~ \uff0c\u8868\u793a\u76f8\u5bf9 \u5f53\u524d\u76ee\u5f55 \u6240\u5728\u7684\u76ee\u5f55\u4f4d\u7f6e \u7edd\u5bf9\u8def\u5f84 \u5728\u8f93\u5165\u8def\u5f84\u65f6\uff0c\u6700\u524d\u9762\u662f / \u6216\u8005 ~ \uff0c\u8868\u793a\u4ece \u6839\u76ee\u5f55/\u5bb6\u76ee\u5f55 \u5f00\u59cb\u7684\u5177\u4f53\u76ee\u5f55\u4f4d\u7f6e","title":"2.2 \u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#03","text":"","title":"03. \u521b\u5efa\u548c\u5220\u9664\u64cd\u4f5c"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#31-touch","text":"\u521b\u5efa\u6587\u4ef6\u6216\u4fee\u6539\u6587\u4ef6\u65f6\u95f4 \u5982\u679c\u6587\u4ef6 \u4e0d\u5b58\u5728 \uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u6587\u4ef6 \u5982\u679c\u6587\u4ef6 \u5df2\u7ecf\u5b58\u5728 \uff0c\u53ef\u4ee5\u4fee\u6539\u6587\u4ef6\u7684\u672b\u6b21\u4fee\u6539\u65e5\u671f","title":"3.1 touch"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#32-mkdir","text":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55 \u9009\u9879 \u542b\u4e49 -p \u53ef\u4ee5\u9012\u5f52\u521b\u5efa\u76ee\u5f55 \u65b0\u5efa\u76ee\u5f55\u7684\u540d\u79f0 \u4e0d\u80fd\u4e0e\u5f53\u524d\u76ee\u5f55\u4e2d \u5df2\u6709\u7684\u76ee\u5f55\u6216\u6587\u4ef6 \u540c\u540d","title":"3.2 mkdir"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#33-rm","text":"\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55 \u4f7f\u7528 rm \u547d\u4ee4\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u6587\u4ef6\u5220\u9664\u540e\u4e0d\u80fd\u6062\u590d \u9009\u9879 \u542b\u4e49 -f \u5f3a\u5236\u5220\u9664\uff0c\u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u65e0\u9700\u63d0\u793a -r \u9012\u5f52\u5730\u5220\u9664\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c \u5220\u9664\u6587\u4ef6\u5939 \u65f6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570","title":"3.3 rm"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#04","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 tree [\u76ee\u5f55\u540d] tree \u4ee5\u6811\u72b6\u56fe\u5217\u51fa\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784 02 cp \u6e90\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 copy \u590d\u5236\u6587\u4ef6\u6216\u8005\u76ee\u5f55 03 mv \u6e90\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 move \u79fb\u52a8\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff0f\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u91cd\u547d\u540d","title":"04. \u62f7\u8d1d\u548c\u79fb\u52a8\u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#41-tree","text":"tree \u547d\u4ee4\u53ef\u4ee5\u4ee5\u6811\u72b6\u56fe\u5217\u51fa\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784 \u9009\u9879 \u542b\u4e49 -d \u53ea\u663e\u793a\u76ee\u5f55","title":"4.1 tree"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#42-cp","text":"cp \u547d\u4ee4\u7684\u529f\u80fd\u662f\u5c06\u7ed9\u51fa\u7684 \u6587\u4ef6 \u6216 \u76ee\u5f55 \u590d\u5236\u5230\u53e6\u4e00\u4e2a \u6587\u4ef6 \u6216 \u76ee\u5f55 \u4e2d\uff0c\u76f8\u5f53\u4e8e DOS \u4e0b\u7684 copy \u547d\u4ee4 \u9009\u9879 \u542b\u4e49 -i \u8986\u76d6\u6587\u4ef6\u524d\u63d0\u793a -r \u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6\uff0c\u5219 cp \u5c06\u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u4e3a\u4e00\u4e2a\u76ee\u5f55\u540d","title":"4.2 cp"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#43-mv","text":"mv \u547d\u4ee4\u53ef\u4ee5\u7528\u6765 \u79fb\u52a8 \u6587\u4ef6 \u6216 \u76ee\u5f55 \uff0c\u4e5f\u53ef\u4ee5\u7ed9 \u6587\u4ef6\u6216\u76ee\u5f55\u91cd\u547d\u540d \u9009\u9879 \u542b\u4e49 -i \u8986\u76d6\u6587\u4ef6\u524d\u63d0\u793a","title":"4.3 mv"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#05","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 cat \u6587\u4ef6\u540d concatenate \u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u3001\u521b\u5efa\u6587\u4ef6\u3001\u6587\u4ef6\u5408\u5e76\u3001\u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u7b49\u529f\u80fd 02 more \u6587\u4ef6\u540d more \u5206\u5c4f\u663e\u793a\u6587\u4ef6\u5185\u5bb9 03 grep \u641c\u7d22\u6587\u672c \u6587\u4ef6\u540d grep \u641c\u7d22\u6587\u672c\u6587\u4ef6\u5185\u5bb9","title":"05. \u67e5\u770b\u6587\u4ef6\u5185\u5bb9"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#51-cat","text":"cat \u547d\u4ee4\u53ef\u4ee5\u7528\u6765 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \u3001 \u521b\u5efa\u6587\u4ef6 \u3001 \u6587\u4ef6\u5408\u5e76 \u3001 \u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9 \u7b49\u529f\u80fd cat \u4f1a\u4e00\u6b21\u663e\u793a\u6240\u6709\u7684\u5185\u5bb9\uff0c\u9002\u5408 \u67e5\u770b\u5185\u5bb9\u8f83\u5c11 \u7684\u6587\u672c\u6587\u4ef6 \u9009\u9879 \u542b\u4e49 -b \u5bf9\u975e\u7a7a\u8f93\u51fa\u884c\u7f16\u53f7 -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7 Linux \u4e2d\u8fd8\u6709\u4e00\u4e2a nl \u7684\u547d\u4ee4\u548c cat -b \u7684\u6548\u679c\u7b49\u4ef7","title":"5.1 cat"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#52-more","text":"more \u547d\u4ee4\u53ef\u4ee5\u7528\u4e8e\u5206\u5c4f\u663e\u793a\u6587\u4ef6\u5185\u5bb9\uff0c\u6bcf\u6b21\u53ea\u663e\u793a\u4e00\u9875\u5185\u5bb9 \u9002\u5408\u4e8e **\u67e5\u770b\u5185\u5bb9\u8f83\u591a**\u7684\u6587\u672c\u6587\u4ef6 \u4f7f\u7528 more \u7684\u64cd\u4f5c\u952e\uff1a \u64cd\u4f5c\u952e \u529f\u80fd \u7a7a\u683c\u952e \u663e\u793a\u624b\u518c\u9875\u7684\u4e0b\u4e00\u5c4f Enter \u952e \u4e00\u6b21\u6eda\u52a8\u624b\u518c\u9875\u7684\u4e00\u884c b \u56de\u6eda\u4e00\u5c4f f \u524d\u6eda\u4e00\u5c4f q \u9000\u51fa /word \u641c\u7d22 word \u5b57\u7b26\u4e32","title":"5.2 more"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#53-grep","text":"Linux \u7cfb\u7edf\u4e2d grep \u547d\u4ee4\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177 grep \u5141\u8bb8\u5bf9\u6587\u672c\u6587\u4ef6\u8fdb\u884c **\u6a21\u5f0f**\u67e5\u627e\uff0c\u6240\u8c13\u6a21\u5f0f\u67e5\u627e\uff0c\u53c8\u88ab\u79f0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3 \u9009\u9879 \u542b\u4e49 -n \u663e\u793a\u5339\u914d\u884c\u53ca\u884c\u53f7 -v \u663e\u793a\u4e0d\u5305\u542b\u5339\u914d\u6587\u672c\u7684\u6240\u6709\u884c\uff08\u76f8\u5f53\u4e8e\u6c42\u53cd\uff09 -i \u5ffd\u7565\u5927\u5c0f\u5199 \u5e38\u7528\u7684\u4e24\u79cd\u6a21\u5f0f\u67e5\u627e \u53c2\u6570 \u542b\u4e49 ^a \u884c\u9996\uff0c\u641c\u5bfb\u4ee5 a \u5f00\u5934\u7684\u884c ke$ \u884c\u5c3e\uff0c\u641c\u5bfb\u4ee5 ke \u7ed3\u675f\u7684\u884c","title":"5.3 grep"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#06","text":"","title":"06. \u5176\u4ed6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#61-echo","text":"echo \u4f1a\u5728\u7ec8\u7aef\u4e2d\u663e\u793a\u53c2\u6570\u6307\u5b9a\u7684\u6587\u5b57\uff0c\u901a\u5e38\u4f1a\u548c \u91cd\u5b9a\u5411 \u8054\u5408\u4f7f\u7528","title":"6.1 echo \u6587\u5b57\u5185\u5bb9"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#62","text":"Linux \u5141\u8bb8\u5c06\u547d\u4ee4\u6267\u884c\u7ed3\u679c \u91cd\u5b9a\u5411**\u5230\u4e00\u4e2a **\u6587\u4ef6 \u5c06\u672c\u5e94\u663e\u793a\u5728**\u7ec8\u7aef\u4e0a\u7684\u5185\u5bb9** \u8f93\u51fa\uff0f\u8ffd\u52a0 \u5230**\u6307\u5b9a\u6587\u4ef6\u4e2d** \u5176\u4e2d > \u8868\u793a\u8f93\u51fa\uff0c\u4f1a\u8986\u76d6\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9 >> \u8868\u793a\u8ffd\u52a0\uff0c\u4f1a\u5c06\u5185\u5bb9\u8ffd\u52a0\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e","title":"6.2 \u91cd\u5b9a\u5411 &gt; \u548c &gt;&gt;"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#63","text":"Linux \u5141\u8bb8\u5c06 \u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa \u53ef\u4ee5**\u901a\u8fc7\u7ba1\u9053** \u505a\u4e3a \u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165 \u53ef\u4ee5\u7406\u89e3\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u7ba1\u5b50\uff0c\u7ba1\u5b50\u7684\u4e00\u5934\u585e\u4e1c\u897f\u8fdb\u53bb\uff0c\u53e6\u4e00\u5934\u53d6\u51fa\u6765\uff0c\u8fd9\u91cc | \u7684\u5de6\u53f3\u5206\u4e3a\u4e24\u7aef\uff0c\u5de6\u7aef\u585e\u4e1c\u897f\uff08\u5199\uff09\uff0c\u53f3\u7aef\u53d6\u4e1c\u897f\uff08\u8bfb\uff09 \u5e38\u7528\u7684\u7ba1\u9053\u547d\u4ee4\u6709\uff1a more \uff1a\u5206\u5c4f\u663e\u793a\u5185\u5bb9 grep \uff1a\u5728\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\u67e5\u8be2\u6307\u5b9a\u7684\u6587\u672c","title":"6.3 \u7ba1\u9053 |"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_16","text":"","title":"\u8fdc\u7a0b\u7ba1\u7406\u5e38\u7528\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_17","text":"\u5173\u673a/\u91cd\u542f shutdown \u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f ifconfig ping \u8fdc\u7a0b\u767b\u5f55\u548c\u590d\u5236\u6587\u4ef6 ssh scp","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01_2","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 shutdown \u9009\u9879 \u65f6\u95f4 shutdown \u5173\u673a\uff0f\u91cd\u65b0\u542f\u52a8","title":"01. \u5173\u673a/\u91cd\u542f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#11-shutdown","text":"shutdown \u547d\u4ee4\u53ef\u4ee5 \u5b89\u5168 \u5173\u95ed \u6216\u8005 \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf \u9009\u9879 \u542b\u4e49 -r \u91cd\u65b0\u542f\u52a8 \u63d0\u793a\uff1a \u4e0d\u6307\u5b9a\u9009\u9879\u548c\u53c2\u6570 \uff0c\u9ed8\u8ba4\u8868\u793a 1 \u5206\u949f**\u4e4b\u540e **\u5173\u95ed\u7535\u8111 \u8fdc\u7a0b\u7ef4\u62a4\u670d\u52a1\u5668\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u5173\u95ed\u7cfb\u7edf\uff0c\u800c\u5e94\u8be5\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf \u5e38\u7528\u547d\u4ee4\u793a\u4f8b # \u91cd\u65b0\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5176\u4e2d now \u8868\u793a\u73b0\u5728 $ shutdown -r now # \u7acb\u523b\u5173\u673a\uff0c\u5176\u4e2d now \u8868\u793a\u73b0\u5728 $ shutdown now # \u7cfb\u7edf\u5728\u4eca\u5929\u7684 20:25 \u4f1a\u5173\u673a $ shutdown 20 :25 # \u7cfb\u7edf\u518d\u8fc7\u5341\u5206\u949f\u540e\u81ea\u52a8\u5173\u673a $ shutdown +10 # \u53d6\u6d88\u4e4b\u524d\u6307\u5b9a\u7684\u5173\u673a\u8ba1\u5212 $ shutdown -c","title":"1.1 shutdown"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02_2","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ifconfig configure a network interface \u67e5\u770b/\u914d\u7f6e\u8ba1\u7b97\u673a\u5f53\u524d\u7684\u7f51\u5361\u914d\u7f6e\u4fe1\u606f 02 ping ip\u5730\u5740 ping \u68c0\u6d4b\u5230\u76ee\u6807 ip\u5730\u5740 \u7684\u8fde\u63a5\u662f\u5426\u6b63\u5e38","title":"02. \u67e5\u770b\u6216\u914d\u7f6e\u7f51\u5361\u4fe1\u606f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#21-ip","text":"","title":"2.1 \u7f51\u5361 \u548c IP \u5730\u5740"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_18","text":"\u7f51\u5361\u662f\u4e00\u4e2a\u4e13\u95e8\u8d1f\u8d23\u7f51\u7edc\u901a\u8baf\u7684\u786c\u4ef6\u8bbe\u5907 **IP \u5730\u5740**\u662f\u8bbe\u7f6e\u5728\u7f51\u5361\u4e0a\u7684\u5730\u5740\u4fe1\u606f \u6211\u4eec\u53ef\u4ee5\u628a \u7535\u8111 \u6bd4\u4f5c \u7535\u8bdd \uff0c \u7f51\u5361 \u76f8\u5f53\u4e8e SIM \u5361 \uff0c IP \u5730\u5740 \u76f8\u5f53\u4e8e \u7535\u8bdd\u53f7\u7801","title":"\u7f51\u5361"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#ip","text":"\u6bcf\u53f0\u8054\u7f51\u7684\u7535\u8111\u4e0a**\u90fd\u6709 **IP \u5730\u5740 \uff0c \u662f\u4fdd\u8bc1\u7535\u8111\u4e4b\u95f4\u6b63\u5e38\u901a\u8baf\u7684\u91cd\u8981\u8bbe\u7f6e \u6ce8\u610f\uff1a\u6bcf\u53f0\u7535\u8111\u7684 IP \u5730\u5740\u4e0d\u80fd\u76f8\u540c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 IP \u5730\u5740\u51b2\u7a81\uff0c\u5e76\u4e14\u6ca1\u6709\u529e\u6cd5\u6b63\u5e38\u901a\u8baf \u63d0\u793a\uff1a\u6709\u5173 **IP \u5730\u5740**\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff01","title":"IP \u5730\u5740"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#22-ifconfig","text":"ifconfig \u53ef\u4ee5\u67e5\u770b\uff0f\u914d\u7f6e\u8ba1\u7b97\u673a\u5f53\u524d\u7684\u7f51\u5361\u914d\u7f6e\u4fe1\u606f # \u67e5\u770b\u7f51\u5361\u914d\u7f6e\u4fe1\u606f $ ifconfig # \u67e5\u770b\u7f51\u5361\u5bf9\u5e94\u7684 IP \u5730\u5740 $ ifconfig | grep inet \u63d0\u793a\uff1a\u4e00\u53f0\u8ba1\u7b97\u673a\u4e2d\u6709\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a \u7269\u7406\u7f51\u5361 \u548c \u591a\u4e2a\u865a\u62df\u7f51\u5361 \uff0c\u5728 Linux \u4e2d\u7269\u7406\u7f51\u5361\u7684\u540d\u5b57\u901a\u5e38\u4ee5 ensXX \u8868\u793a 127.0.0.1 \u88ab\u79f0\u4e3a \u672c\u5730\u56de\u73af/\u73af\u56de\u5730\u5740 \uff0c\u4e00\u822c\u7528\u6765\u6d4b\u8bd5\u672c\u673a\u7f51\u5361\u662f\u5426\u6b63\u5e38","title":"2.2 ifconfig"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#23-ping","text":"# \u68c0\u6d4b\u5230\u76ee\u6807\u4e3b\u673a\u662f\u5426\u8fde\u63a5\u6b63\u5e38 $ ping IP\u5730\u5740 # \u68c0\u6d4b\u672c\u5730\u7f51\u5361\u5de5\u4f5c\u6b63\u5e38 $ ping 127 .0.0.1 ping \u4e00\u822c\u7528\u4e8e\u68c0\u6d4b\u5f53\u524d\u8ba1\u7b97\u673a\u5230\u76ee\u6807\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u7f51\u7edc \u662f\u5426\u901a\u7545 \uff0c \u6570\u503c\u8d8a\u5927\uff0c\u901f\u5ea6\u8d8a\u6162 ping \u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u6f5c\u6c34\u8247\u7684\u58f0\u7eb3\u76f8\u4f3c\uff0c ping \u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\u53d6\u81ea \u58f0\u7eb3\u7684\u58f0\u97f3 \u7f51\u7edc\u7ba1\u7406\u5458\u4e4b\u95f4\u4e5f\u5e38\u5c06 ping \u7528\u4f5c\u52a8\u8bcd \u2014\u2014 ping \u4e00\u4e0b\u8ba1\u7b97\u673aX\uff0c\u770b\u4ed6\u662f\u5426\u5f00\u7740 \u539f\u7406\uff1a\u7f51\u7edc\u4e0a\u7684\u673a\u5668\u90fd\u6709 \u552f\u4e00\u786e\u5b9a\u7684 IP \u5730\u5740 \uff0c\u6211\u4eec\u7ed9**\u76ee\u6807 IP \u5730\u5740**\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5bf9\u65b9\u5c31\u8981\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u6839\u636e\u8fd4\u56de\u7684\u6570\u636e\u5305\u4ee5\u53ca\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u76ee\u6807\u4e3b\u673a\u7684\u5b58\u5728 \u63d0\u793a\uff1a\u5728 Linux \u4e2d\uff0c\u60f3\u8981\u7ec8\u6b62\u4e00\u4e2a\u7ec8\u7aef\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u7edd\u5927\u591a\u6570\u90fd\u53ef\u4ee5\u4f7f\u7528 CTRL + C","title":"2.3 ping"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#03_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u5bf9\u5e94\u82f1\u6587 \u4f5c\u7528 01 ssh \u7528\u6237\u540d@ip secure shell \u5173\u673a\uff0f\u91cd\u65b0\u542f\u52a8 02 scp \u7528\u6237\u540d@ip:\u6587\u4ef6\u540d\u6216\u8def\u5f84 \u7528\u6237\u540d@ip:\u6587\u4ef6\u540d\u6216\u8def\u5f84 secure copy \u8fdc\u7a0b\u590d\u5236\u6587\u4ef6","title":"03. \u8fdc\u7a0b\u767b\u5f55\u548c\u590d\u5236\u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#31-ssh","text":"\u5728 Linux \u4e2d SSH \u662f \u975e\u5e38\u5e38\u7528 \u7684\u5de5\u5177\uff0c\u901a\u8fc7 SSH \u5ba2\u6237\u7aef \u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5230\u8fd0\u884c\u4e86 SSH \u670d\u52a1\u5668 \u7684\u8fdc\u7a0b\u673a\u5668\u4e0a **SSH \u5ba2\u6237\u7aef**\u662f\u4e00\u79cd\u4f7f\u7528 Secure Shell\uff08SSH\uff09 \u534f\u8bae\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u7a0b\u5e8f SSH \u662f\u76ee\u524d\u8f83\u53ef\u9760\uff0c\u4e13\u4e3a\u8fdc\u7a0b\u767b\u5f55\u4f1a\u8bdd\u548c\u5176\u4ed6\u7f51\u7edc\u670d\u52a1 \u63d0\u4f9b\u5b89\u5168\u6027\u7684\u534f\u8bae \u5229\u7528 SSH \u534f\u8bae \u53ef\u4ee5\u6709\u6548**\u9632\u6b62\u8fdc\u7a0b\u7ba1\u7406\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u6cc4\u9732** \u901a\u8fc7 SSH \u534f\u8bae \u53ef\u4ee5\u5bf9\u6240\u6709\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4e5f\u80fd\u591f\u9632\u6b62 DNS \u6b3a\u9a97\u548c IP \u6b3a\u9a97 SSH \u7684\u53e6\u4e00\u9879\u4f18\u70b9\u662f\u4f20\u8f93\u7684\u6570\u636e\u53ef\u4ee5\u662f\u7ecf\u8fc7\u538b\u7f29\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u52a0\u5feb\u4f20\u8f93\u7684\u901f\u5ea6","title":"3.1 ssh \u57fa\u7840\uff08\u91cd\u70b9\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#1_2","text":"","title":"1) \u57df\u540d \u548c \u7aef\u53e3\u53f7"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_19","text":"\u7531\u4e00\u4e32 \u7528\u70b9\u5206\u9694 \u7684\u540d\u5b57\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a www.itcast.cn \u662f IP \u5730\u5740 \u7684\u522b\u540d\uff0c\u65b9\u4fbf\u7528\u6237\u8bb0\u5fc6","title":"\u57df\u540d"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_20","text":"IP \u5730\u5740 \uff1a\u901a\u8fc7 IP \u5730\u5740 \u627e\u5230\u7f51\u7edc\u4e0a\u7684 \u8ba1\u7b97\u673a \u7aef\u53e3\u53f7 \uff1a\u901a\u8fc7 \u7aef\u53e3\u53f7 \u53ef\u4ee5\u627e\u5230 \u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f SSH \u670d\u52a1\u5668 \u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f 22 \uff0c\u5982\u679c\u662f\u9ed8\u8ba4\u7aef\u53e3\u53f7\uff0c\u5728\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7701\u7565 \u5e38\u89c1\u670d\u52a1\u7aef\u53e3\u53f7\u5217\u8868\uff1a \u5e8f\u53f7 \u670d\u52a1 \u7aef\u53e3\u53f7 01 SSH \u670d\u52a1\u5668 22 02 Web \u670d\u52a1\u5668 80 03 HTTPS 443 04 FTP \u670d\u52a1\u5668 21 \u63d0\u793a\uff1a\u6709\u5173 **\u7aef\u53e3\u53f7**\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff01","title":"\u7aef\u53e3\u53f7"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#2-ssh","text":"ssh [ -p port ] user@remote user \u662f\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a\u7684\u7528\u6237\u540d\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7528\u6237 remote \u662f\u8fdc\u7a0b\u673a\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u662f IP \uff0f \u57df\u540d \uff0c\u6216\u8005\u662f \u540e\u9762\u4f1a\u63d0\u5230\u7684\u522b\u540d port \u662f SSH Server \u76d1\u542c\u7684\u7aef\u53e3 \uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5c31\u4e3a\u9ed8\u8ba4\u503c 22 \u63d0\u793a\uff1a \u4f7f\u7528 exit \u9000\u51fa\u5f53\u524d\u7528\u6237\u7684\u767b\u5f55 \u6ce8\u610f\uff1a ssh \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u53ea\u80fd\u5728 Linux \u6216\u8005 UNIX \u7cfb\u7edf\u4e0b\u4f7f\u7528 \u5982\u679c\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5 PuTTY \u6216\u8005 XShell \u5ba2\u6237\u7aef\u8f6f\u4ef6\u5373\u53ef \u63d0\u793a\uff1a \u5728\u5de5\u4f5c\u4e2d\uff0cSSH \u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u5f88\u6709\u53ef\u80fd**\u4e0d\u662f 22**\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u9700\u8981\u4f7f\u7528 -p \u9009\u9879\uff0c\u6307\u5b9a\u6b63\u786e\u7684\u7aef\u53e3\u53f7\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u8fde\u63a5\u5230\u670d\u52a1\u5668","title":"2) SSH \u5ba2\u6237\u7aef\u7684\u7b80\u5355\u4f7f\u7528"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#3-windows-ssh","text":"Putty http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html XShell http://xshellcn.com \u5efa\u8bae\u4ece\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u6b63\u5f0f\u7684\u5b89\u88c5\u7a0b\u5e8f","title":"3) Windows \u4e0b SSH \u5ba2\u6237\u7aef\u7684\u5b89\u88c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#32-scp","text":"scp \u5c31\u662f secure copy \uff0c\u662f\u4e00\u4e2a\u5728 Linux \u4e0b\u7528\u6765\u8fdb\u884c \u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6 \u7684\u547d\u4ee4 \u5b83\u7684**\u5730\u5740\u683c\u5f0f\u4e0e ssh \u57fa\u672c\u76f8\u540c**\uff0c \u9700\u8981\u6ce8\u610f\u7684\u662f \uff0c\u5728\u6307\u5b9a\u7aef\u53e3\u65f6\u7528\u7684\u662f\u5927\u5199\u7684 -P \u800c\u4e0d\u662f\u5c0f\u5199\u7684 # \u628a\u672c\u5730\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 01.py \u6587\u4ef6 \u590d\u5236\u5230 \u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop/01.py # \u6ce8\u610f\uff1a`:` \u540e\u9762\u7684\u8def\u5f84\u5982\u679c\u4e0d\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u4ee5\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u4f5c\u4e3a\u53c2\u7167\u8def\u5f84 scp -P port 01 .py user@remote:Desktop/01.py # \u628a\u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop/01.py \u6587\u4ef6 \u590d\u5236\u5230 \u672c\u5730\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 01.py scp -P port user@remote:Desktop/01.py 01 .py # \u52a0\u4e0a -r \u9009\u9879\u53ef\u4ee5\u4f20\u9001\u6587\u4ef6\u5939 # \u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo \u6587\u4ef6\u5939 \u590d\u5236\u5230 \u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop scp -r demo user@remote:Desktop # \u628a\u8fdc\u7a0b \u5bb6\u76ee\u5f55\u4e0b\u7684 Desktop \u590d\u5236\u5230 \u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo \u6587\u4ef6\u5939 scp -r user@remote:Desktop demo \u9009\u9879 \u542b\u4e49 -r \u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6\uff0c\u5219 scp \u5c06\u9012\u5f52\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u76ee\u6807\u6587\u4ef6\u5fc5\u987b\u4e3a\u4e00\u4e2a\u76ee\u5f55\u540d -P \u82e5\u8fdc\u7a0b SSH \u670d\u52a1\u5668\u7684\u7aef\u53e3\u4e0d\u662f 22\uff0c\u9700\u8981\u4f7f\u7528\u5927\u5199\u5b57\u6bcd -P \u9009\u9879\u6307\u5b9a\u7aef\u53e3 \u6ce8\u610f\uff1a scp \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u53ea\u80fd\u5728 Linux \u6216\u8005 UNIX \u7cfb\u7edf\u4e0b\u4f7f\u7528 \u5982\u679c\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5 PuTTY \uff0c\u4f7f\u7528 pscp \u547d\u4ee4\u884c\u5de5\u5177\u6216\u8005\u5b89\u88c5 FileZilla \u4f7f\u7528 FTP \u8fdb\u884c\u6587\u4ef6\u4f20\u8f93","title":"3.2 scp\uff08\u638c\u63e1\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#filezilla","text":"\u5b98\u65b9\u7f51\u7ad9\uff1a https://www.filezilla.cn/download/client FileZilla \u5728\u4f20\u8f93\u6587\u4ef6\u65f6\uff0c\u4f7f\u7528\u7684\u662f FTP \u670d\u52a1 \u800c\u4e0d\u662f SSH \u670d\u52a1 \uff0c\u56e0\u6b64\u7aef\u53e3\u53f7\u5e94\u8be5\u8bbe\u7f6e\u4e3a 21","title":"FileZilla"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#33-ssh","text":"\u514d\u5bc6\u7801\u767b\u5f55 \u914d\u7f6e\u522b\u540d \u63d0\u793a\uff1a\u6709\u5173 SSH \u914d\u7f6e\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u7528\u6237\u5bb6\u76ee\u5f55\u4e0b\u7684 .ssh \u76ee\u5f55\u4e0b","title":"3.3 SSH \u9ad8\u7ea7\uff08\u77e5\u9053\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#1_3","text":"","title":"1\uff09\u514d\u5bc6\u7801\u767b\u5f55"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_21","text":"\u914d\u7f6e\u516c\u94a5 \u6267\u884c ssh-keygen \u5373\u53ef\u751f\u6210 SSH \u94a5\u5319\uff0c\u4e00\u8def\u56de\u8f66\u5373\u53ef \u4e0a\u4f20\u516c\u94a5\u5230\u670d\u52a1\u5668 \u6267\u884c ssh-copy-id -p port user@remote \uff0c\u53ef\u4ee5\u8ba9\u8fdc\u7a0b\u670d\u52a1\u5668\u8bb0\u4f4f\u6211\u4eec\u7684\u516c\u94a5","title":"\u6b65\u9aa4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_22","text":"![003_SSH \u514d\u5bc6\u7801\u793a\u610f\u56fe] \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 \u4f7f\u7528 \u516c\u94a5 \u52a0\u5bc6\u7684\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 \u79c1\u94a5 \u89e3\u5bc6 \u4f7f\u7528 \u79c1\u94a5 \u52a0\u5bc6\u7684\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528 \u516c\u94a5 \u89e3\u5bc6","title":"\u793a\u610f\u56fe"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#2_2","text":"\u6bcf\u6b21\u90fd\u8f93\u5165 ssh -p port user@remote \uff0c\u65f6\u95f4\u4e45\u4e86\u4f1a\u89c9\u5f97\u5f88\u9ebb\u70e6\uff0c\u7279\u522b\u662f\u5f53 user , remote \u548c port \u90fd\u5f97\u8f93\u5165\uff0c\u800c\u4e14\u8fd8\u4e0d\u597d\u8bb0\u5fc6 \u800c \u914d\u7f6e\u522b\u540d \u53ef\u4ee5\u8ba9\u6211\u4eec\u8fdb\u4e00\u6b65\u5077\u61d2\uff0c\u8b6c\u5982\u7528\uff1a ssh mac \u6765\u66ff\u4ee3\u4e0a\u9762\u8fd9\u4e48\u4e00\u957f\u4e32\uff0c\u90a3\u4e48\u5c31\u5728 ~/.ssh/config \u91cc\u9762\u8ffd\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a Host mac HostName ip\u5730\u5740 User itheima Port 22 \u4fdd\u5b58\u4e4b\u540e\uff0c\u5373\u53ef\u7528 ssh mac \u5b9e\u73b0\u8fdc\u7a0b\u767b\u5f55\u4e86\uff0cscp \u540c\u6837\u53ef\u4ee5\u4f7f\u7528","title":"2) \u914d\u7f6e\u522b\u540d"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_23","text":"","title":"\u7528\u6237\u6743\u9650\u76f8\u5173\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_24","text":"\u7528\u6237 \u548c \u6743\u9650 \u7684\u57fa\u672c\u6982\u5ff5 \u7528\u6237\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u7ec4\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4 \u4fee\u6539\u6743\u9650 \u7ec8\u7aef\u547d\u4ee4","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01_3","text":"","title":"01. \u7528\u6237 \u548c \u6743\u9650 \u7684\u57fa\u672c\u6982\u5ff5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#11_2","text":"\u7528\u6237 \u662f Linux \u7cfb\u7edf\u5de5\u4f5c\u4e2d\u91cd\u8981\u7684\u4e00\u73af\uff0c\u7528\u6237\u7ba1\u7406\u5305\u62ec \u7528\u6237 \u4e0e \u7ec4 \u7ba1\u7406 \u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u4e0d\u8bba\u662f\u7531\u672c\u673a\u6216\u662f\u8fdc\u7a0b\u767b\u5f55\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u90fd**\u5fc5\u987b\u62e5\u6709\u4e00\u4e2a\u8d26\u53f7**\uff0c\u5e76\u4e14**\u5bf9\u4e8e\u4e0d\u540c\u7684\u7cfb\u7edf\u8d44\u6e90\u62e5\u6709\u4e0d\u540c\u7684\u4f7f\u7528\u6743\u9650** \u5728 Linux \u4e2d\uff0c\u53ef\u4ee5\u6307\u5b9a \u6bcf\u4e00\u4e2a\u7528\u6237 \u9488\u5bf9 \u4e0d\u540c\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55 \u7684 \u4e0d\u540c\u6743\u9650 \u5bf9 \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u6743\u9650\u5305\u62ec\uff1a \u5e8f\u53f7 \u6743\u9650 \u82f1\u6587 \u7f29\u5199 \u6570\u5b57\u4ee3\u53f7 01 \u8bfb read r 4 02 \u5199 write w 2 03 \u6267\u884c excute x 1","title":"1.1 \u57fa\u672c\u6982\u5ff5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#12_1","text":"\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u7ba1\u7406\uff0c\u63d0\u51fa\u4e86 \u7ec4 \u7684\u6982\u5ff5\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u9884\u5148\u9488\u5bf9 \u7ec4 \u8bbe\u7f6e\u597d\u6743\u9650\uff0c\u7136\u540e \u5c06\u4e0d\u540c\u7684\u7528\u6237\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u7ec4\u4e2d \uff0c\u4ece\u800c**\u4e0d\u7528\u4f9d\u6b21\u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u8bbe\u7f6e\u6743\u9650**","title":"1.2 \u7ec4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#13-ls-l","text":"ls -l \u53ef\u4ee5\u67e5\u770b\u6587\u4ef6\u5939\u4e0b\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f\uff1a \u6743\u9650 \uff0c\u7b2c 1 \u4e2a\u5b57\u7b26\u5982\u679c\u662f d \u8868\u793a\u76ee\u5f55 \u786c\u94fe\u63a5\u6570 \uff0c\u901a\u4fd7\u5730\u8bb2\uff0c\u5c31\u662f\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230\u5f53\u524d\u76ee\u5f55\uff0f\u6587\u4ef6 \u62e5\u6709\u8005 \uff0c\u5bb6\u76ee\u5f55\u4e0b \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u62e5\u6709\u8005\u901a\u5e38\u90fd\u662f\u5f53\u524d\u7528\u6237 \u7ec4 \uff0c\u5728 Linux \u4e2d\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u7ec4\u540d\u548c\u7528\u6237\u540d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u540e\u7eed\u4f1a\u8bb2 \u5927\u5c0f \u65f6\u95f4 \u540d\u79f0","title":"1.3 ls -l \u6269\u5c55"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#14-chmod","text":"chmod \u53ef\u4ee5\u4fee\u6539 \u7528\u6237\uff0f\u7ec4 \u5bf9 \u6587\u4ef6\uff0f\u76ee\u5f55 \u7684\u6743\u9650 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a chmod +/-rwx \u6587\u4ef6\u540d | \u76ee\u5f55\u540d \u63d0\u793a\uff1a\u4ee5\u4e0a\u65b9\u5f0f\u4f1a\u4e00\u6b21\u6027\u4fee\u6539 \u62e5\u6709\u8005 / \u7ec4 \u6743\u9650\uff0c\u6709\u5173 chmod \u7684\u9ad8\u7ea7\u7528\u6cd5\uff0c\u540e\u7eed\u4f1a\u8bb2","title":"1.4 chmod \u7b80\u5355\u4f7f\u7528\uff08\u91cd\u8981\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#15","text":"Linux \u7cfb\u7edf\u4e2d\u7684 root \u8d26\u53f7\u901a\u5e38 \u7528\u4e8e\u7cfb\u7edf\u7684\u7ef4\u62a4\u548c\u7ba1\u7406 \uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u8d44\u6e90 \u5177\u6709\u6240\u6709\u8bbf\u95ee\u6743\u9650 \u5728\u5927\u591a\u6570\u7248\u672c\u7684 Linux \u4e2d\uff0c\u90fd\u4e0d\u63a8\u8350 \u76f4\u63a5\u4f7f\u7528 root \u8d26\u53f7\u767b\u5f55\u7cfb\u7edf \u5728 Linux \u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u8d26\u53f7\uff0c\u800c\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u7528\u6237\u5c31\u79f0\u4e3a\u201c\u6807\u51c6\u7528\u6237\u201d","title":"1.5 \u8d85\u7ea7\u7528\u6237"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#sudo","text":"su \u662f substitute user \u7684\u7f29\u5199\uff0c\u8868\u793a \u4f7f\u7528\u53e6\u4e00\u4e2a\u7528\u6237\u7684\u8eab\u4efd sudo \u547d\u4ee4\u7528\u6765\u4ee5\u5176\u4ed6\u8eab\u4efd\u6765\u6267\u884c\u547d\u4ee4\uff0c\u9884\u8bbe\u7684\u8eab\u4efd\u4e3a root \u7528\u6237\u4f7f\u7528 sudo \u65f6\uff0c\u5fc5\u987b\u5148\u8f93\u5165\u5bc6\u7801\uff0c\u4e4b\u540e\u6709 5 \u5206\u949f\u7684\u6709\u6548\u671f\u9650 \uff0c\u8d85\u8fc7\u671f\u9650\u5219\u5fc5\u987b\u91cd\u65b0\u8f93\u5165\u5bc6\u7801 \u82e5\u5176\u672a\u7ecf\u6388\u6743\u7684\u7528\u6237\u4f01\u56fe\u4f7f\u7528 sudo \uff0c\u5219\u4f1a\u53d1\u51fa\u8b66\u544a\u90ae\u4ef6\u7ed9\u7ba1\u7406\u5458","title":"sudo"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02_3","text":"\u63d0\u793a\uff1a \u521b\u5efa\u7ec4 / \u5220\u9664\u7ec4 \u7684\u7ec8\u7aef\u547d\u4ee4\u90fd\u9700\u8981\u901a\u8fc7 sudo \u6267\u884c \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 groupadd \u7ec4\u540d \u6dfb\u52a0\u7ec4 02 groupdel \u7ec4\u540d \u5220\u9664\u7ec4 03 cat /etc/group \u786e\u8ba4\u7ec4\u4fe1\u606f 04 chgrp -R \u7ec4\u540d \u6587\u4ef6/\u76ee\u5f55\u540d \u9012\u5f52\u4fee\u6539\u6587\u4ef6/\u76ee\u5f55\u7684\u6240\u5c5e\u7ec4 \u63d0\u793a\uff1a \u7ec4\u4fe1\u606f\u4fdd\u5b58\u5728 /etc/group \u6587\u4ef6\u4e2d /etc \u76ee\u5f55\u662f\u4e13\u95e8\u7528\u6765\u4fdd\u5b58 \u7cfb\u7edf\u914d\u7f6e\u4fe1\u606f \u7684\u76ee\u5f55 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u9884\u5148\u9488\u5bf9 \u7ec4 \u8bbe\u7f6e\u597d\u6743\u9650\uff0c\u7136\u540e \u5c06\u4e0d\u540c\u7684\u7528\u6237\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u7ec4\u4e2d \uff0c\u4ece\u800c**\u4e0d\u7528\u4f9d\u6b21\u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u8bbe\u7f6e\u6743\u9650**","title":"02. \u7ec4\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_25","text":"\u5728 python \u7528\u6237\u7684\u684c\u9762\u6587\u4ef6\u5939\u4e0b\u521b\u5efa Python\u5b66\u4e60 \u76ee\u5f55 \u65b0\u5efa dev \u7ec4 \u5c06 Python\u5b66\u4e60 \u76ee\u5f55\u7684\u7ec4\u4fee\u6539\u4e3a dev","title":"\u6f14\u7ec3\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#03_2","text":"\u63d0\u793a\uff1a \u521b\u5efa\u7528\u6237 / \u5220\u9664\u7528\u6237 / \u4fee\u6539\u5176\u4ed6\u7528\u6237\u5bc6\u7801 \u7684\u7ec8\u7aef\u547d\u4ee4\u90fd\u9700\u8981\u901a\u8fc7 sudo \u6267\u884c","title":"03. \u7528\u6237\u7ba1\u7406 \u7ec8\u7aef\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#31_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 \u8bf4\u660e 01 useradd -m -g \u7ec4 \u65b0\u5efa\u7528\u6237\u540d \u6dfb\u52a0\u65b0\u7528\u6237 -m \u81ea\u52a8\u5efa\u7acb\u7528\u6237\u5bb6\u76ee\u5f55-g \u6307\u5b9a\u7528\u6237\u6240\u5728\u7684\u7ec4\uff0c\u5426\u5219\u4f1a\u5efa\u7acb\u4e00\u4e2a\u548c\u540c\u540d\u7684\u7ec4 02 passwd \u7528\u6237\u540d \u8bbe\u7f6e\u7528\u6237\u5bc6\u7801 \u5982\u679c\u662f\u666e\u901a\u7528\u6237\uff0c\u76f4\u63a5\u7528 passwd \u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u8d26\u6237\u5bc6\u7801 03 userdel -r \u7528\u6237\u540d \u5220\u9664\u7528\u6237 -r \u9009\u9879\u4f1a\u81ea\u52a8\u5220\u9664\u7528\u6237\u5bb6\u76ee\u5f55 04 cat /etc/passwd | grep \u7528\u6237\u540d \u786e\u8ba4\u7528\u6237\u4fe1\u606f \u65b0\u5efa\u7528\u6237\u540e\uff0c\u7528\u6237\u4fe1\u606f\u4f1a\u4fdd\u5b58\u5728 /etc/passwd \u6587\u4ef6\u4e2d \u63d0\u793a\uff1a \u521b\u5efa\u7528\u6237\u65f6\uff0c\u5982\u679c\u5fd8\u8bb0\u6dfb\u52a0 -m \u9009\u9879\u6307\u5b9a\u65b0\u7528\u6237\u7684\u5bb6\u76ee\u5f55 \u2014\u2014 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f**\u5220\u9664\u7528\u6237\uff0c\u91cd\u65b0\u521b\u5efa** \u521b\u5efa\u7528\u6237\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u548c**\u7528\u6237\u540d**\u540c\u540d\u7684**\u7ec4\u540d** \u7528\u6237\u4fe1\u606f\u4fdd\u5b58\u5728 /etc/passwd \u6587\u4ef6\u4e2d","title":"3.1 \u521b\u5efa\u7528\u6237\uff0f\u8bbe\u7f6e\u5bc6\u7801\uff0f\u5220\u9664\u7528\u6237"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#32_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 id [\u7528\u6237\u540d] \u67e5\u770b\u7528\u6237 UID \u548c GID \u4fe1\u606f 02 who \u67e5\u770b\u5f53\u524d\u6240\u6709\u767b\u5f55\u7684\u7528\u6237\u5217\u8868 03 whoami \u67e5\u770b\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684\u8d26\u6237\u540d","title":"3.2 \u67e5\u770b\u7528\u6237\u4fe1\u606f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#passwd","text":"/etc/passwd \u6587\u4ef6\u5b58\u653e\u7684\u662f\u7528\u6237\u7684\u4fe1\u606f\uff0c\u7531 6 \u4e2a\u5206\u53f7\u7ec4\u6210\u7684 7 \u4e2a\u4fe1\u606f\uff0c\u5206\u522b\u662f \u7528\u6237\u540d \u5bc6\u7801\uff08x\uff0c\u8868\u793a\u52a0\u5bc6\u7684\u5bc6\u7801\uff09 UID\uff08\u7528\u6237\u6807\u8bc6\uff09 GID\uff08\u7ec4\u6807\u8bc6\uff09 \u7528\u6237\u5168\u540d\u6216\u672c\u5730\u5e10\u53f7 \u5bb6\u76ee\u5f55 \u767b\u5f55\u4f7f\u7528\u7684 Shell\uff0c\u5c31\u662f\u767b\u5f55\u4e4b\u540e\uff0c\u4f7f\u7528\u7684\u7ec8\u7aef\u547d\u4ee4\uff0c ubuntu \u9ed8\u8ba4\u662f dash","title":"passwd \u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#usermod","text":"usermod \u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e \u7528\u6237 \u7684 \u4e3b\u7ec4 \uff0f \u9644\u52a0\u7ec4 \u548c \u767b\u5f55 Shell \uff0c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a \u4e3b\u7ec4 \uff1a\u901a\u5e38\u5728\u65b0\u5efa\u7528\u6237\u65f6\u6307\u5b9a\uff0c\u5728 etc/passwd \u7684\u7b2c 4 \u5217 GID \u5bf9\u5e94\u7684\u7ec4 \u9644\u52a0\u7ec4 \uff1a\u5728 etc/group \u4e2d\u6700\u540e\u4e00\u5217\u8868\u793a\u8be5\u7ec4\u7684\u7528\u6237\u5217\u8868\uff0c\u7528\u4e8e\u6307\u5b9a \u7528\u6237\u7684\u9644\u52a0\u6743\u9650 \u63d0\u793a\uff1a\u8bbe\u7f6e\u4e86\u7528\u6237\u7684\u9644\u52a0\u7ec4\u4e4b\u540e\uff0c\u9700\u8981\u91cd\u65b0\u767b\u5f55\u624d\u80fd\u751f\u6548\uff01 # \u4fee\u6539\u7528\u6237\u7684\u4e3b\u7ec4\uff08passwd \u4e2d\u7684 GID\uff09 usermod -g \u7ec4 \u7528\u6237\u540d # \u4fee\u6539\u7528\u6237\u7684\u9644\u52a0\u7ec4 usermod -G \u7ec4 \u7528\u6237\u540d # \u4fee\u6539\u7528\u6237\u767b\u5f55 Shell usermod -s /bin/bash \u7528\u6237\u540d \u6ce8\u610f\uff1a\u9ed8\u8ba4\u4f7f\u7528 useradd \u6dfb\u52a0\u7684\u7528\u6237\u662f\u6ca1\u6709\u6743\u9650\u4f7f\u7528 sudo \u4ee5 root \u8eab\u4efd\u6267\u884c\u547d\u4ee4\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u7528\u6237\u6dfb\u52a0\u5230 sudo \u9644\u52a0\u7ec4\u4e2d usermod -G sudo \u7528\u6237\u540d","title":"usermod"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#which","text":"\u63d0\u793a /etc/passwd \u662f\u7528\u4e8e\u4fdd\u5b58\u7528\u6237\u4fe1\u606f\u7684\u6587\u4ef6 /usr/bin/passwd \u662f\u7528\u4e8e\u4fee\u6539\u7528\u6237\u5bc6\u7801\u7684\u7a0b\u5e8f which \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6267\u884c\u547d\u4ee4\u6240\u5728\u4f4d\u7f6e\uff0c\u4f8b\u5982\uff1a which ls # \u8f93\u51fa # /bin/ls which useradd # \u8f93\u51fa # /usr/sbin/useradd","title":"which\uff08\u91cd\u8981\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#bin-sbin","text":"\u5728 Linux \u4e2d\uff0c\u7edd\u5927\u591a\u6570\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u662f\u4fdd\u5b58\u5728 /bin \u3001 /sbin \u3001 /usr/bin \u3001 /usr/sbin /bin \uff08 binary \uff09\u662f\u4e8c\u8fdb\u5236\u6267\u884c\u6587\u4ef6\u76ee\u5f55\uff0c\u4e3b\u8981\u7528\u4e8e\u5177\u4f53\u5e94\u7528 /sbin \uff08 system binary \uff09\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4e13\u7528\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u5b58\u653e\u76ee\u5f55\uff0c\u4e3b\u8981\u7528\u4e8e\u7cfb\u7edf\u7ba1\u7406 /usr/bin \uff08 user commands for applications \uff09\u540e\u671f\u5b89\u88c5\u7684\u4e00\u4e9b\u8f6f\u4ef6 /usr/sbin \uff08 super user commands for applications \uff09\u8d85\u7ea7\u7528\u6237\u7684\u4e00\u4e9b\u7ba1\u7406\u7a0b\u5e8f \u63d0\u793a\uff1a cd \u8fd9\u4e2a\u7ec8\u7aef\u547d\u4ee4\u662f\u5185\u7f6e\u5728\u7cfb\u7edf\u5185\u6838\u4e2d\u7684\uff0c\u6ca1\u6709\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u7528 which \u65e0\u6cd5\u627e\u5230 cd \u547d\u4ee4\u7684\u4f4d\u7f6e","title":"bin \u548c sbin"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#33_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 \u8bf4\u660e 01 su - \u7528\u6237\u540d \u5207\u6362\u7528\u6237\uff0c\u5e76\u4e14\u5207\u6362\u76ee\u5f55 - \u53ef\u4ee5\u5207\u6362\u5230\u7528\u6237\u5bb6\u76ee\u5f55\uff0c\u5426\u5219\u4fdd\u6301\u4f4d\u7f6e\u4e0d\u53d8 02 exit \u9000\u51fa\u5f53\u524d\u767b\u5f55\u8d26\u6237 su \u4e0d\u63a5\u7528\u6237\u540d\uff0c\u53ef\u4ee5\u5207\u6362\u5230 root \uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u4e0d\u5b89\u5168 exit \u793a\u610f\u56fe\u5982\u4e0b\uff1a","title":"3.3 \u5207\u6362\u7528\u6237"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#04_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 chown \u4fee\u6539\u62e5\u6709\u8005 02 chgrp \u4fee\u6539\u7ec4 03 chmod \u4fee\u6539\u6743\u9650 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684\u62e5\u6709\u8005 chown \u7528\u6237\u540d \u6587\u4ef6\u540d | \u76ee\u5f55\u540d # \u9012\u5f52\u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684\u7ec4 chgrp -R \u7ec4\u540d \u6587\u4ef6\u540d | \u76ee\u5f55\u540d # \u9012\u5f52\u4fee\u6539\u6587\u4ef6\u6743\u9650 chmod -R 755 \u6587\u4ef6\u540d | \u76ee\u5f55\u540d chmod \u5728\u8bbe\u7f6e\u6743\u9650\u65f6\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e09\u4e2a\u6570\u5b57\u5206\u522b\u5bf9\u5e94 \u62e5\u6709\u8005 \uff0f \u7ec4 \u548c \u5176\u4ed6 \u7528\u6237\u7684\u6743\u9650 # \u76f4\u63a5\u4fee\u6539\u6587\u4ef6|\u76ee\u5f55\u7684 \u8bfb|\u5199|\u6267\u884c \u6743\u9650\uff0c\u4f46\u662f\u4e0d\u80fd\u7cbe\u786e\u5230 \u62e5\u6709\u8005|\u7ec4|\u5176\u4ed6 chmod +/-rwx \u6587\u4ef6\u540d | \u76ee\u5f55\u540d \u5e38\u89c1\u6570\u5b57\u7ec4\u5408\u6709\uff08 u \u8868\u793a\u7528\u6237\uff0f g \u8868\u793a\u7ec4\uff0f o \u8868\u793a\u5176\u4ed6\uff09\uff1a 777 ===> u=rwx,g=rwx,o=rwx 755 ===> u=rwx,g=rx,o=rx 644 ===> u=rw,g=r,o=r","title":"04. \u4fee\u6539\u6587\u4ef6\u6743\u9650"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#chmod","text":"\u5c06 01.py \u7684\u6743\u9650\u4fee\u6539\u4e3a u=rwx,g=rx,o=r \u5c06 123.txt \u7684\u6743\u9650\u4fee\u6539\u4e3a u=rw,g=r,o=- \u5c06 test \u76ee\u5f55\u4ee5\u53ca\u76ee\u5f55\u4e0b\u7684 \u6240\u6709 \u6587\u4ef6\u6743\u9650\u4fee\u6539\u4e3a u=rwx,g=rwx,o=rx","title":"chmod \u6f14\u7ec3\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_26","text":"\u672c\u8282\u5185\u5bb9\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u901a\u8fc7\u8fdc\u7a0b\u7ec8\u7aef\u7ef4\u62a4\u670d\u52a1\u5668\u65f6\uff0c\u67e5\u770b\u670d\u52a1\u5668\u4e0a\u5f53\u524d \u7cfb\u7edf\u65e5\u671f\u548c\u65f6\u95f4 \uff0f \u78c1\u76d8\u7a7a\u95f4\u5360\u7528\u60c5\u51b5 \uff0f \u7a0b\u5e8f\u6267\u884c\u60c5\u51b5 \u672c\u5c0f\u7ed3\u5b66\u4e60\u7684\u7ec8\u7aef\u547d\u4ee4\u57fa\u672c\u90fd\u662f\u67e5\u8be2\u547d\u4ee4\uff0c\u901a\u8fc7\u8fd9\u4e9b\u547d\u4ee4\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u6709\u4e2a\u4e86\u89e3","title":"\u7cfb\u7edf\u4fe1\u606f\u76f8\u5173\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_27","text":"\u65f6\u95f4\u548c\u65e5\u671f date cal \u78c1\u76d8\u548c\u76ee\u5f55\u7a7a\u95f4 df du \u8fdb\u7a0b\u4fe1\u606f ps top kill","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#01_4","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 date \u67e5\u770b\u7cfb\u7edf\u65f6\u95f4 02 cal calendar \u67e5\u770b\u65e5\u5386\uff0c -y \u9009\u9879\u53ef\u4ee5\u67e5\u770b\u4e00\u5e74\u7684\u65e5\u5386","title":"01. \u65f6\u95f4\u548c\u65e5\u671f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#02_4","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 df -h disk free \u663e\u793a\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4 02 du -h [\u76ee\u5f55\u540d] disk usage \u663e\u793a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5927\u5c0f \u9009\u9879\u8bf4\u660e \u53c2\u6570 \u542b\u4e49 -h \u4ee5\u4eba\u6027\u5316\u7684\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u5927\u5c0f","title":"02. \u78c1\u76d8\u4fe1\u606f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#03_3","text":"\u6240\u8c13 \u8fdb\u7a0b \uff0c\u901a\u4fd7\u5730\u8bf4\u5c31\u662f \u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 ps aux process status \u67e5\u770b\u8fdb\u7a0b\u7684\u8be6\u7ec6\u72b6\u51b5 02 top \u52a8\u6001\u663e\u793a\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u5e76\u4e14\u6392\u5e8f 03 kill [-9] \u8fdb\u7a0b\u4ee3\u53f7 \u7ec8\u6b62\u6307\u5b9a\u4ee3\u53f7\u7684\u8fdb\u7a0b\uff0c -9 \u8868\u793a\u5f3a\u884c\u7ec8\u6b62 ps \u9ed8\u8ba4\u53ea\u4f1a\u663e\u793a\u5f53\u524d\u7528\u6237\u901a\u8fc7\u7ec8\u7aef\u542f\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f ps \u9009\u9879\u8bf4\u660e\u529f\u80fd \u9009\u9879 \u542b\u4e49 a \u663e\u793a\u7ec8\u7aef\u4e0a\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u5305\u62ec\u5176\u4ed6\u7528\u6237\u7684\u8fdb\u7a0b u \u663e\u793a\u8fdb\u7a0b\u7684\u8be6\u7ec6\u72b6\u6001 x \u663e\u793a\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b \u63d0\u793a\uff1a\u4f7f\u7528 kill \u547d\u4ee4\u65f6\uff0c\u6700\u597d\u53ea\u7ec8\u6b62\u7531\u5f53\u524d\u7528\u6237\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u800c\u4e0d\u8981\u7ec8\u6b62 root \u8eab\u4efd\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5d29\u6e83 \u8981\u9000\u51fa top \u53ef\u4ee5\u76f4\u63a5\u8f93\u5165 q","title":"03. \u8fdb\u7a0b\u4fe1\u606f"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_28","text":"","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_29","text":"\u67e5\u627e\u6587\u4ef6 find \u8f6f\u94fe\u63a5 ln \u6253\u5305\u548c\u538b\u7f29 tar \u8f6f\u4ef6\u5b89\u88c5 apt-get","title":"\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0146_2","text":"find \u547d\u4ee4\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u901a\u5e38\u7528\u6765\u5728 \u7279\u5b9a\u7684\u76ee\u5f55\u4e0b \u641c\u7d22 \u7b26\u5408\u6761\u4ef6\u7684\u6587\u4ef6 \u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 find [\u8def\u5f84] -name \"*.py\" \u67e5\u627e\u6307\u5b9a\u8def\u5f84\u4e0b\u6269\u5c55\u540d\u662f .py \u7684\u6587\u4ef6\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 \u5982\u679c\u7701\u7565\u8def\u5f84\uff0c\u8868\u793a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u67e5\u627e \u4e4b\u524d\u5b66\u4e60\u7684\u901a\u914d\u7b26\uff0c\u5728\u4f7f\u7528 find \u547d\u4ee4\u65f6\u540c\u65f6\u53ef\u7528 \u6709\u5173 find \u7684\u9ad8\u7ea7\u4f7f\u7528\uff0c\u5728\u5c31\u4e1a\u73ed\u4f1a\u8bb2","title":"01. \u67e5\u627e\u6587\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_30","text":"1. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u6587\u4ef6\u540d\u5305\u542b 1 \u7684\u6587\u4ef6 find -name \"*1*\" 2. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u6240\u6709\u4ee5 .txt \u4e3a\u6269\u5c55\u540d\u7684\u6587\u4ef6 find -name \"*.txt\" 3. \u641c\u7d22\u684c\u9762\u76ee\u5f55\u4e0b\uff0c\u4ee5\u6570\u5b57 1 \u5f00\u5934\u7684\u6587\u4ef6 find -name \"1*\"","title":"\u6f14\u7ec3\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0246_1","text":"\u5e8f\u53f7 \u547d\u4ee4 \u4f5c\u7528 01 ln -s \u88ab\u94fe\u63a5\u7684\u6e90\u6587\u4ef6 \u94fe\u63a5\u6587\u4ef6 \u5efa\u7acb\u6587\u4ef6\u7684\u8f6f\u94fe\u63a5\uff0c\u7528\u901a\u4fd7\u7684\u65b9\u5f0f\u8bb2**\u7c7b\u4f3c\u4e8e** Windows \u4e0b\u7684**\u5feb\u6377\u65b9\u5f0f** \u6ce8\u610f\uff1a 1. \u6ca1\u6709 -s \u9009\u9879\u5efa\u7acb\u7684\u662f\u4e00\u4e2a \u786c\u94fe\u63a5\u6587\u4ef6 \u4e24\u4e2a\u6587\u4ef6\u5360\u7528\u76f8\u540c\u5927\u5c0f\u7684\u786c\u76d8\u7a7a\u95f4\uff0c \u5de5\u4f5c\u4e2d\u51e0\u4e4e\u4e0d\u4f1a\u5efa\u7acb\u6587\u4ef6\u7684\u786c\u94fe\u63a5 2. \u6e90\u6587\u4ef6\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 \uff0c\u4e0d\u80fd\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u79fb\u52a8\u94fe\u63a5\u6587\u4ef6\u540e\uff0c\u4ecd\u7136\u80fd\u591f\u6b63\u5e38\u4f7f\u7528","title":"02. \u8f6f\u94fe\u63a5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_31","text":"1. \u5c06\u684c\u9762\u76ee\u5f55\u4e0b\u7684 01.py **\u79fb\u52a8**\u5230 demo/b/c \u76ee\u5f55\u4e0b 2. \u5728\u684c\u9762\u76ee\u5f55\u4e0b\u65b0\u5efa 01.py \u7684 \u8f6f\u94fe\u63a5 FirstPython \u5206\u522b\u4f7f\u7528 \u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u5efa\u7acb FirstPython \u7684\u8f6f\u94fe\u63a5 3. \u5c06 FirstPython \u79fb\u52a8**\u5230 demo \u76ee\u5f55\u4e0b\uff0c\u5bf9\u6bd4\u4f7f\u7528 **\u76f8\u5bf9\u8def\u5f84 \u548c \u7edd\u5bf9\u8def\u5f84 \u7684\u533a\u522b","title":"\u6f14\u7ec3\u76ee\u6807"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_32","text":"\u5728\u4f7f\u7528 ln \u521b\u5efa\u94fe\u63a5\u65f6\uff0c\u5982\u679c\u6ca1\u6709 -s \u9009\u9879\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a \u786c\u94fe\u63a5 \uff0c\u800c\u4e0d\u662f\u8f6f\u94fe\u63a5","title":"\u786c\u94fe\u63a5\u7b80\u4ecb\uff08\u77e5\u9053\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_33","text":"1. \u5728 ~/Desktop/demo \u76ee\u5f55\u4e0b\u5efa\u7acb ~/Desktop/demo/b/c/01.py \u7684\u786c\u94fe\u63a5 01_hard 2. \u4f7f\u7528 ls -l \u67e5\u770b\u6587\u4ef6\u7684**\u786c\u94fe\u63a5\u6570**\uff08\u786c\u94fe\u63a5\u2014\u2014\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff09 3. \u5220\u9664 ~/Desktop/demo/b/c/01.py \uff0c\u5e76\u4e14\u4f7f\u7528 tree \u6765\u786e\u8ba4 demo \u76ee\u5f55\u4e0b\u7684\u4e09\u4e2a\u94fe\u63a5\u6587\u4ef6","title":"\u786c\u94fe\u63a5\u6f14\u7ec3"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_34","text":"\ufffc \u5728 Linux \u4e2d\uff0c \u6587\u4ef6\u540d \u548c \u6587\u4ef6\u7684\u6570\u636e \u662f\u5206\u5f00\u5b58\u50a8\u7684 \u63d0\u793a\uff1a \u5728 Linux \u4e2d\uff0c\u53ea\u6709\u6587\u4ef6\u7684 \u786c\u94fe\u63a5\u6570 == 0 \u624d\u4f1a\u88ab\u5220\u9664 \u4f7f\u7528 ls -l \u53ef\u4ee5\u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u786c\u94fe\u63a5\u7684\u6570\u91cf \u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u5efa\u7acb\u6587\u4ef6\u7684\u786c\u94fe\u63a5\uff0c\u77e5\u9053\u5373\u53ef","title":"\u6587\u4ef6\u8f6f\u786c\u94fe\u63a5\u7684\u793a\u610f\u56fe"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0346_1","text":"\u6253\u5305\u538b\u7f29 \u662f\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5907\u4efd\u6587\u4ef6\u7684\u4e00\u79cd\u65b9\u5f0f \u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u5e38\u7528\u7684\u6253\u5305\u538b\u7f29\u65b9\u5f0f\u662f\u4e0d\u540c\u7684 Windows \u5e38\u7528 rar Mac \u5e38\u7528 zip Linux \u5e38\u7528 tar.gz","title":"03. \u6253\u5305\u538b\u7f29"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#31_2","text":"tar \u662f Linux \u4e2d\u6700\u5e38\u7528\u7684 \u5907\u4efd**\u5de5\u5177\uff0c\u6b64\u547d\u4ee4\u53ef\u4ee5 **\u628a\u4e00\u7cfb\u5217\u6587\u4ef6 \u6253\u5305\u5230 \u4e00\u4e2a\u5927\u6587\u4ef6\u4e2d \uff0c\u4e5f\u53ef\u4ee5\u628a\u4e00\u4e2a \u6253\u5305\u7684\u5927\u6587\u4ef6\u6062\u590d\u6210\u4e00\u7cfb\u5217\u6587\u4ef6 tar \u7684\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u6253\u5305\u6587\u4ef6 tar -cvf \u6253\u5305\u6587\u4ef6.tar \u88ab\u6253\u5305\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u5305\u6587\u4ef6 tar -xvf \u6253\u5305\u6587\u4ef6.tar tar \u9009\u9879\u8bf4\u660e \u9009\u9879 \u542b\u4e49 c \u751f\u6210\u6863\u6848\u6587\u4ef6\uff0c\u521b\u5efa\u6253\u5305\u6587\u4ef6 x \u89e3\u5f00\u6863\u6848\u6587\u4ef6 v \u5217\u51fa\u5f52\u6863\u89e3\u6863\u7684\u8be6\u7ec6\u8fc7\u7a0b\uff0c\u663e\u793a\u8fdb\u5ea6 f \u6307\u5b9a\u6863\u6848\u6587\u4ef6\u540d\u79f0\uff0cf \u540e\u9762\u4e00\u5b9a\u662f .tar \u6587\u4ef6\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u9009\u9879\u6700\u540e \u6ce8\u610f\uff1a f \u9009\u9879\u5fc5\u987b\u653e\u5728\u6700\u540e\uff0c\u5176\u4ed6\u9009\u9879\u987a\u5e8f\u53ef\u4ee5\u968f\u610f","title":"3.1 \u6253\u5305 \uff0f \u89e3\u5305"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_35","text":"\u5220\u9664\u684c\u9762\u4e0b\u7684\u6240\u6709\u5185\u5bb9 \u5728\u684c\u9762\u4e0b\u65b0\u5efa\u4e09\u4e2a\u7a7a\u767d\u6587\u4ef6 01.py \u3001 02.py \u3001 03.py \u5c06\u8fd9\u4e09\u4e2a\u6587\u4ef6\u6253\u4e00\u4e2a py.tar \u7684\u5305 \u65b0\u5efa tar \u76ee\u5f55\uff0c\u5e76\u4e14\u5c06 py.tar \u79fb\u52a8\u5230 tar \u76ee\u5f55\u4e0b \u89e3\u5305 py.tar","title":"\u6253\u5305\u89e3\u5305\u6f14\u7ec3"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#32_2","text":"","title":"3.2 \u538b\u7f29\uff0f\u89e3\u538b\u7f29"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#1-gzip","text":"tar \u4e0e gzip \u547d\u4ee4\u7ed3\u5408\u53ef\u4ee5\u4f7f\u7528\u5b9e\u73b0\u6587\u4ef6 \u6253\u5305\u548c\u538b\u7f29 tar \u53ea\u8d1f\u8d23\u6253\u5305\u6587\u4ef6\uff0c\u4f46\u4e0d\u538b\u7f29 \u7528 gzip \u538b\u7f29 tar \u6253\u5305\u540e\u7684\u6587\u4ef6\uff0c\u5176\u6269\u5c55\u540d\u4e00\u822c\u7528 xxx.tar.gz \u5728 Linux \u4e2d\uff0c\u6700\u5e38\u89c1\u7684\u538b\u7f29\u6587\u4ef6\u683c\u5f0f\u5c31\u662f xxx.tar.gz \u5728 tar \u547d\u4ee4\u4e2d\u6709\u4e00\u4e2a\u9009\u9879 -z \u53ef\u4ee5\u8c03\u7528 gzip \uff0c\u4ece\u800c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u538b\u7f29\u548c\u89e3\u538b\u7f29\u7684\u529f\u80fd \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u538b\u7f29\u6587\u4ef6 tar -zcvf \u6253\u5305\u6587\u4ef6.tar.gz \u88ab\u538b\u7f29\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u538b\u7f29\u6587\u4ef6 tar -zxvf \u6253\u5305\u6587\u4ef6.tar.gz # \u89e3\u538b\u7f29\u5230\u6307\u5b9a\u8def\u5f84 tar -zxvf \u6253\u5305\u6587\u4ef6.tar.gz -C \u76ee\u6807\u8def\u5f84 \u9009\u9879 \u542b\u4e49 -C \u89e3\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u6ce8\u610f\uff1a\u8981\u89e3\u538b\u7f29\u7684\u76ee\u5f55\u5fc5\u987b\u5b58\u5728","title":"1)\u00a0gzip"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#2-bzip2two","text":"tar \u4e0e bzip2 \u547d\u4ee4\u7ed3\u5408\u53ef\u4ee5\u4f7f\u7528\u5b9e\u73b0\u6587\u4ef6 \u6253\u5305\u548c\u538b\u7f29 \uff08\u7528\u6cd5\u548c gzip \u4e00\u6837\uff09 tar \u53ea\u8d1f\u8d23\u6253\u5305\u6587\u4ef6\uff0c\u4f46\u4e0d\u538b\u7f29\uff0c \u7528 bzip2 \u538b\u7f29 tar \u6253\u5305\u540e\u7684\u6587\u4ef6\uff0c\u5176\u6269\u5c55\u540d\u4e00\u822c\u7528 xxx.tar.bz2 \u5728 tar \u547d\u4ee4\u4e2d\u6709\u4e00\u4e2a\u9009\u9879 -j \u53ef\u4ee5\u8c03\u7528 bzip2 \uff0c\u4ece\u800c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u538b\u7f29\u548c\u89e3\u538b\u7f29\u7684\u529f\u80fd \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a # \u538b\u7f29\u6587\u4ef6 tar -jcvf \u6253\u5305\u6587\u4ef6.tar.bz2 \u88ab\u538b\u7f29\u7684\u6587\u4ef6\uff0f\u8def\u5f84... # \u89e3\u538b\u7f29\u6587\u4ef6 tar -jxvf \u6253\u5305\u6587\u4ef6.tar.bz2","title":"2)\u00a0bzip2(two)"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#0446","text":"","title":"04. \u8f6f\u4ef6\u5b89\u88c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#41-apt","text":"apt \u662f Advanced Packaging Tool \uff0c\u662f Linux \u4e0b\u7684\u4e00\u6b3e\u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177 \u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u65b9\u4fbf\u7684 \u5b89\u88c5 \uff0f \u5378\u8f7d \uff0f \u66f4\u65b0\u8f6f\u4ef6\u5305 # 1\\. \u5b89\u88c5\u8f6f\u4ef6 $ sudo apt install \u8f6f\u4ef6\u5305 # 2\\. \u5378\u8f7d\u8f6f\u4ef6 $ sudo apt remove \u8f6f\u4ef6\u540d # 3\\. \u66f4\u65b0\u5df2\u5b89\u88c5\u7684\u5305 $ sudo apt upgrade","title":"4.1 \u901a\u8fc7 apt \u5b89\u88c5\uff0f\u5378\u8f7d\u8f6f\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#_36","text":"# \u4e00\u4e2a\u5c0f\u706b\u8f66\u63d0\u793a $ sudo apt install sl # \u4e00\u4e2a\u6bd4\u8f83\u6f02\u4eae\u7684\u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u6392\u540d\u7684\u8f6f\u4ef6 $ sudo apt install htop","title":"\u5b89\u88c5\u6f14\u7ec3"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/044 linux\u7cfb\u7edf/#42","text":"\u5982\u679c\u5e0c\u671b\u5728 ubuntu \u4e2d\u5b89\u88c5\u8f6f\u4ef6\uff0c \u66f4\u52a0\u5feb\u901f \uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e**\u955c\u50cf\u6e90**\uff0c\u9009\u62e9\u4e00\u4e2a\u8bbf\u95ee\u7f51\u901f\u66f4\u5feb\u7684\u670d\u52a1\u5668\uff0c\u6765\u63d0\u4f9b\u8f6f\u4ef6\u4e0b\u8f7d\uff0f\u5b89\u88c5\u670d\u52a1 \u63d0\u793a\uff1a\u66f4\u6362\u670d\u52a1\u5668\u4e4b\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u76f8\u5bf9\u6bd4\u8f83\u957f\u65f6\u95f4\u7684\u66f4\u65b0\u8fc7\u7a0b\uff0c\u9700\u8981\u8010\u5fc3\u7b49\u5f85\u3002\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u518d\u5b89\u88c5\u8f6f\u4ef6\u90fd\u4f1a\u4ece\u65b0\u8bbe\u7f6e\u7684\u670d\u52a1\u5668\u4e0b\u8f7d\u8f6f\u4ef6\u4e86 \u6240\u8c13\u955c\u50cf\u6e90\uff0c\u5c31\u662f**\u6240\u6709\u670d\u52a1\u5668\u7684\u5185\u5bb9\u662f\u76f8\u540c\u7684\uff08\u955c\u50cf\uff09**\uff0c\u4f46\u662f\u6839\u636e\u6240\u5728\u4f4d\u7f6e\u4e0d\u540c\uff0c\u56fd\u5185\u670d\u52a1\u5668\u901a\u5e38\u901f\u5ea6\u4f1a\u66f4\u5feb\u4e00\u4e9b\uff01 \ufffc","title":"4.2 \u914d\u7f6e\u8f6f\u4ef6\u6e90"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/","text":"\u524d\u9762\u8bb2\u8fc7\u4e86\u53ea\u8981ubuntu\u7cfb\u7edf\u4e0d\u5b89\u88c5\u663e\u5361\u7684\u4e13\u6709\u7684\u9a71\u52a8,\u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u7684\u7535\u8111\u4e0a\u4f7f\u7528\u7684,\u56e0\u4e3aubuntu\u7528\u7684\u5927\u591a\u6570\u90fd\u662f\u516c\u7248\u7684\u9a71\u52a8. 1.\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u5c31\u662f\u5c06\u786c\u76d8\u653e\u7f6e\u5728\u786c\u76d8\u76d2\u4e2d\u7136\u540e\u4f7f\u7528\u7684\u662fusb\u7ebf\u8fde\u63a5,\u901a\u8fc7\u5916\u7f6e\u7684\u786c\u76d8\u542f\u52a8ubuntu\u7684\u7cfb\u7edf. \u00b6 2.\u9996\u5148\u4f7f\u7528\u7684\u4e0d\u80fd\u662f2.5\u82f1\u5bf8\u7684\u786c\u76d8,\u56e0\u4e3a\u4f9b\u7535\u4e0d\u662f\u5f88\u597d,\u56fa\u6001\u7684\u6ca1\u6709\u5c1d\u8bd5\u8fc7,\u4f7f\u7528\u673a\u68b0\u786c\u76d8,2.5\u7684\u76d2\u5b50\u662f\u5e26\u4e0d\u8d77\u6765\u7684 \u00b6 3. \u6700\u597d\u662f\u4f7f\u7528\u5e26\u6709\u72ec\u7acb\u4f9b\u7535\u7684,\u6211\u624b\u91cc\u67093.5\u82f1\u5bf8\u7684\u95f2\u7f6e\u7684\u786c\u76d8,\u8fd8\u6709\u4e24\u4e2a\u786c\u76d8\u76d2,\u5c31\u76f4\u63a5\u62ff3.5\u82f1\u5bf8\u7684\u786c\u76d8\u4f7f\u7528\u4e86. \u00b6 4.\u4f7f\u7528\u7684\u786c\u76d8\u4e0d\u8981\u662f\u897f\u6570\u7684,\u6709\u7684\u53f0\u5f0f\u673a\u652f\u6301\u897f\u6570\u7684\u5916\u7f6e\u786c\u76d8\u7cfb\u7edf,\u4f46\u662f\u5f88\u591a\u7b14\u8bb0\u672c,\u5de5\u4f5c\u7ad9\u7b49\u7684\u4e0d\u652f\u6301,\u6240\u4ee5\u6211\u9009\u62e9\u7684\u662f\u5e0c\u6377\u76843.5\u7684\u786c\u76d8 \u00b6 5. \u7b14\u8bb0\u672c\u5728\u5f00\u673a\u9009\u62e9\u542f\u52a8\u76d8,\u5173\u673a\u4ee5\u540e\u8981\u60f3\u518d\u6b21\u8fdb\u5165\u662f\u8981\u5c06\u786c\u76d8\u76d2\u7684\u5f00\u5173\u5173\u95ed\u518d\u6253\u5f00,\u7136\u540e\u518d\u5f00\u673a\u624d\u884c,\u4e0d\u7136\u542f\u52a8\u83dc\u5355\u5c31\u6ca1\u6709\u79fb\u52a8\u786c\u76d8\u7684\u9009\u9879.\u5f53\u7136\u53f0\u5f0f\u673a\u7684\u662f\u4e0d\u9700\u8981\u7684. \u00b6 6. \u4ee5\u4e0a\u7684\u5185\u5bb9\u53ea\u662f\u9488\u5bf9\u4e2a\u4eba\u7684\u7535\u8111\u786c\u4ef6,\u8981\u9488\u5bf9\u81ea\u5df1\u7684\u60c5\u51b5.\u6709\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u5f0f. \u00b6 7.\u6298\u817e\u7684\u591a\u4e86\u5c31\u4f1a\u4e86,\u4eba\u751f\u5728\u4e8e\u6298\u817e.\u8ba8\u538c\u7ed9\u522b\u4eba\u88c5\u7cfb\u7edf,\u8d39\u529b\u4e0d\u8ba8\u597d,\u53c8\u4e0d\u7ed9\u94b1,\u8fd8\u6d6a\u8d39\u81ea\u5df1\u7684\u65f6\u95f4,\u5c24\u5176\u662f\u542c\u5230\u4f60\u7cfb\u7edf\u6709\u95ee\u9898\u5427,\u5c31\u60f3\u6253\u4eba,\u4e0d\u4f1a\u7528\u5173\u6211\u5c41\u4e8b,\u6bdb\u75c5 \u00b6","title":"047 \u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#1usbubuntu","text":"","title":"1.\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u5c31\u662f\u5c06\u786c\u76d8\u653e\u7f6e\u5728\u786c\u76d8\u76d2\u4e2d\u7136\u540e\u4f7f\u7528\u7684\u662fusb\u7ebf\u8fde\u63a5,\u901a\u8fc7\u5916\u7f6e\u7684\u786c\u76d8\u542f\u52a8ubuntu\u7684\u7cfb\u7edf."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#22525","text":"","title":"2.\u9996\u5148\u4f7f\u7528\u7684\u4e0d\u80fd\u662f2.5\u82f1\u5bf8\u7684\u786c\u76d8,\u56e0\u4e3a\u4f9b\u7535\u4e0d\u662f\u5f88\u597d,\u56fa\u6001\u7684\u6ca1\u6709\u5c1d\u8bd5\u8fc7,\u4f7f\u7528\u673a\u68b0\u786c\u76d8,2.5\u7684\u76d2\u5b50\u662f\u5e26\u4e0d\u8d77\u6765\u7684"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#3-3535","text":"","title":"3. \u6700\u597d\u662f\u4f7f\u7528\u5e26\u6709\u72ec\u7acb\u4f9b\u7535\u7684,\u6211\u624b\u91cc\u67093.5\u82f1\u5bf8\u7684\u95f2\u7f6e\u7684\u786c\u76d8,\u8fd8\u6709\u4e24\u4e2a\u786c\u76d8\u76d2,\u5c31\u76f4\u63a5\u62ff3.5\u82f1\u5bf8\u7684\u786c\u76d8\u4f7f\u7528\u4e86."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#435","text":"","title":"4.\u4f7f\u7528\u7684\u786c\u76d8\u4e0d\u8981\u662f\u897f\u6570\u7684,\u6709\u7684\u53f0\u5f0f\u673a\u652f\u6301\u897f\u6570\u7684\u5916\u7f6e\u786c\u76d8\u7cfb\u7edf,\u4f46\u662f\u5f88\u591a\u7b14\u8bb0\u672c,\u5de5\u4f5c\u7ad9\u7b49\u7684\u4e0d\u652f\u6301,\u6240\u4ee5\u6211\u9009\u62e9\u7684\u662f\u5e0c\u6377\u76843.5\u7684\u786c\u76d8"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#5","text":"","title":"5. \u7b14\u8bb0\u672c\u5728\u5f00\u673a\u9009\u62e9\u542f\u52a8\u76d8,\u5173\u673a\u4ee5\u540e\u8981\u60f3\u518d\u6b21\u8fdb\u5165\u662f\u8981\u5c06\u786c\u76d8\u76d2\u7684\u5f00\u5173\u5173\u95ed\u518d\u6253\u5f00,\u7136\u540e\u518d\u5f00\u673a\u624d\u884c,\u4e0d\u7136\u542f\u52a8\u83dc\u5355\u5c31\u6ca1\u6709\u79fb\u52a8\u786c\u76d8\u7684\u9009\u9879.\u5f53\u7136\u53f0\u5f0f\u673a\u7684\u662f\u4e0d\u9700\u8981\u7684."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#6","text":"","title":"6. \u4ee5\u4e0a\u7684\u5185\u5bb9\u53ea\u662f\u9488\u5bf9\u4e2a\u4eba\u7684\u7535\u8111\u786c\u4ef6,\u8981\u9488\u5bf9\u81ea\u5df1\u7684\u60c5\u51b5.\u6709\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u5f0f."},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/047-\u8bb0\u5f55\u4e00\u6b21\u7b14\u8bb0\u672c\u4f7f\u7528\u786c\u76d8\u7cfb\u7edf\u7684\u7ecf\u5386/#7","text":"","title":"7.\u6298\u817e\u7684\u591a\u4e86\u5c31\u4f1a\u4e86,\u4eba\u751f\u5728\u4e8e\u6298\u817e.\u8ba8\u538c\u7ed9\u522b\u4eba\u88c5\u7cfb\u7edf,\u8d39\u529b\u4e0d\u8ba8\u597d,\u53c8\u4e0d\u7ed9\u94b1,\u8fd8\u6d6a\u8d39\u81ea\u5df1\u7684\u65f6\u95f4,\u5c24\u5176\u662f\u542c\u5230\u4f60\u7cfb\u7edf\u6709\u95ee\u9898\u5427,\u5c31\u60f3\u6253\u4eba,\u4e0d\u4f1a\u7528\u5173\u6211\u5c41\u4e8b,\u6bdb\u75c5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/048-linux\u7684\u6307\u4ee4/","text":"Linux\u5e38\u7528\u547d\u4ee4\u5927\u5168\uff08\u975e\u5e38\u5168\uff01\uff01\uff01\uff09 \u00b6 \u8f6c\u8f7d: \u6211\u7231\u5b66python \u7cfb\u7edf\u4fe1\u606f arch \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(1) uname -m \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(2) uname -r \u663e\u793a\u6b63\u5728\u4f7f\u7528\u7684\u5185\u6838\u7248\u672c dmidecode -q \u663e\u793a\u786c\u4ef6\u7cfb\u7edf\u90e8\u4ef6 - (SMBIOS / DMI) hdparm -i /dev/hda \u7f57\u5217\u4e00\u4e2a\u78c1\u76d8\u7684\u67b6\u6784\u7279\u6027 hdparm -tT /dev/sda \u5728\u78c1\u76d8\u4e0a\u6267\u884c\u6d4b\u8bd5\u6027\u8bfb\u53d6\u64cd\u4f5c cat /proc/cpuinfo \u663e\u793aCPU info\u7684\u4fe1\u606f cat /proc/interrupts \u663e\u793a\u4e2d\u65ad cat /proc/meminfo \u6821\u9a8c\u5185\u5b58\u4f7f\u7528 cat /proc/swaps \u663e\u793a\u54ea\u4e9bswap\u88ab\u4f7f\u7528 cat /proc/version \u663e\u793a\u5185\u6838\u7684\u7248\u672c cat /proc/net/dev \u663e\u793a\u7f51\u7edc\u9002\u914d\u5668\u53ca\u7edf\u8ba1 cat /proc/mounts \u663e\u793a\u5df2\u52a0\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf lspci -tv \u7f57\u5217 PCI \u8bbe\u5907 lsusb -tv \u663e\u793a USB \u8bbe\u5907 date \u663e\u793a\u7cfb\u7edf\u65e5\u671f cal 2007 \u663e\u793a2007\u5e74\u7684\u65e5\u5386\u8868 date 041217002007.00 \u8bbe\u7f6e\u65e5\u671f\u548c\u65f6\u95f4 - \u6708\u65e5\u65f6\u5206\u5e74.\u79d2 clock -w \u5c06\u65f6\u95f4\u4fee\u6539\u4fdd\u5b58\u5230 BIOS **\u5173\u673a (\u7cfb\u7edf\u7684\u5173\u673a\u3001\u91cd\u542f\u4ee5\u53ca\u767b\u51fa ) ** shutdown -h now \u5173\u95ed\u7cfb\u7edf(1) init 0 \u5173\u95ed\u7cfb\u7edf(2) telinit 0 \u5173\u95ed\u7cfb\u7edf(3) shutdown -h hours:minutes & \u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf shutdown -c \u53d6\u6d88\u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf shutdown -r now \u91cd\u542f(1) reboot \u91cd\u542f(2) logout \u6ce8\u9500 \u6587\u4ef6\u548c\u76ee\u5f55 cd /home \u8fdb\u5165 '/ home' \u76ee\u5f55' cd .. \u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55 cd ../.. \u8fd4\u56de\u4e0a\u4e24\u7ea7\u76ee\u5f55 cd \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55 cd ~user1 \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55 cd - \u8fd4\u56de\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55 pwd \u663e\u793a\u5de5\u4f5c\u8def\u5f84 ls \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 ls -F \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 ls -l \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u8be6\u7ec6\u8d44\u6599 ls -a \u663e\u793a\u9690\u85cf\u6587\u4ef6 ls [0-9] \u663e\u793a\u5305\u542b\u6570\u5b57\u7684\u6587\u4ef6\u540d\u548c\u76ee\u5f55\u540d tree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(1) lstree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(2) mkdir dir1 \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55' mkdir dir1 dir2 \u540c\u65f6\u521b\u5efa\u4e24\u4e2a\u76ee\u5f55 mkdir -p /tmp/dir1/dir2 \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u6811 rm -f file1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6' rmdir dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55' rm -rf dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55\u5e76\u540c\u65f6\u5220\u9664\u5176\u5185\u5bb9 rm -rf dir1 dir2 \u540c\u65f6\u5220\u9664\u4e24\u4e2a\u76ee\u5f55\u53ca\u5b83\u4eec\u7684\u5185\u5bb9 mv dir1 new_dir \u91cd\u547d\u540d/\u79fb\u52a8 \u4e00\u4e2a\u76ee\u5f55 cp file1 file2 \u590d\u5236\u4e00\u4e2a\u6587\u4ef6 cp dir/* . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 cp -a /tmp/dir1 . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 cp -a dir1 dir2 \u590d\u5236\u4e00\u4e2a\u76ee\u5f55 ln -s file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8f6f\u94fe\u63a5 ln file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u7269\u7406\u94fe\u63a5 touch -t 0712250000 file1 \u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u65f6\u95f4\u6233 - (YYMMDDhhmm) file file1 outputs the mime type of the file as text iconv -l \u5217\u51fa\u5df2\u77e5\u7684\u7f16\u7801 iconv -f fromEncoding -t toEncoding inputFile > outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. find . -maxdepth 1 -name *.jpg -print -exec convert \"{}\" -resize 80x60 \"thumbs/{}\" \\; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) \u6587\u4ef6\u641c\u7d22 find / -name file1 \u4ece '/' \u5f00\u59cb\u8fdb\u5165\u6839\u6587\u4ef6\u7cfb\u7edf\u641c\u7d22\u6587\u4ef6\u548c\u76ee\u5f55 find / -user user1 \u641c\u7d22\u5c5e\u4e8e\u7528\u6237 'user1' \u7684\u6587\u4ef6\u548c\u76ee\u5f55 find /home/user1 -name *.bin \u5728\u76ee\u5f55 '/ home/user1' \u4e2d\u641c\u7d22\u5e26\u6709'.bin' \u7ed3\u5c3e\u7684\u6587\u4ef6 find /usr/bin -type f -atime +100 \u641c\u7d22\u5728\u8fc7\u53bb100\u5929\u5185\u672a\u88ab\u4f7f\u7528\u8fc7\u7684\u6267\u884c\u6587\u4ef6 find /usr/bin -type f -mtime -10 \u641c\u7d22\u572810\u5929\u5185\u88ab\u521b\u5efa\u6216\u8005\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 find / -name *.rpm -exec chmod 755 '{}' \\; \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u5b9a\u4e49\u5176\u6743\u9650 find / -xdev -name *.rpm \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5ffd\u7565\u5149\u9a71\u3001\u6377\u76d8\u7b49\u53ef\u79fb\u52a8\u8bbe\u5907 locate *.ps \u5bfb\u627e\u4ee5 '.ps' \u7ed3\u5c3e\u7684\u6587\u4ef6 - \u5148\u8fd0\u884c 'updatedb' \u547d\u4ee4 whereis halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u6e90\u7801\u6216man\u7684\u4f4d\u7f6e which halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84 \u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mount /dev/hda2 /mnt/hda2 \u6302\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u786e\u5b9a\u76ee\u5f55 '/ mnt/hda2' \u5df2\u7ecf\u5b58\u5728 umount /dev/hda2 \u5378\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u5148\u4ece\u6302\u8f7d\u70b9 '/ mnt/hda2' \u9000\u51fa fuser -km /mnt/hda2 \u5f53\u8bbe\u5907\u7e41\u5fd9\u65f6\u5f3a\u5236\u5378\u8f7d umount -n /mnt/hda2 \u8fd0\u884c\u5378\u8f7d\u64cd\u4f5c\u800c\u4e0d\u5199\u5165 /etc/mtab \u6587\u4ef6- \u5f53\u6587\u4ef6\u4e3a\u53ea\u8bfb\u6216\u5f53\u78c1\u76d8\u5199\u6ee1\u65f6\u975e\u5e38\u6709\u7528 mount /dev/fd0 /mnt/floppy \u6302\u8f7d\u4e00\u4e2a\u8f6f\u76d8 mount /dev/cdrom /mnt/cdrom \u6302\u8f7d\u4e00\u4e2acdrom\u6216dvdrom mount /dev/hdc /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom mount /dev/hdb /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom mount -o loop file.iso /mnt/cdrom \u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u6216ISO\u955c\u50cf\u6587\u4ef6 mount -t vfat /dev/hda5 /mnt/hda5 \u6302\u8f7d\u4e00\u4e2aWindows FAT32\u6587\u4ef6\u7cfb\u7edf mount /dev/sda1 /mnt/usbdisk \u6302\u8f7d\u4e00\u4e2ausb \u6377\u76d8\u6216\u95ea\u5b58\u8bbe\u5907 mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share \u6302\u8f7d\u4e00\u4e2awindows\u7f51\u7edc\u5171\u4eab \u78c1\u76d8\u7a7a\u95f4 df -h \u663e\u793a\u5df2\u7ecf\u6302\u8f7d\u7684\u5206\u533a\u5217\u8868 ls -lSr |more \u4ee5\u5c3a\u5bf8\u5927\u5c0f\u6392\u5217\u6587\u4ef6\u548c\u76ee\u5f55 du -sh dir1 \u4f30\u7b97\u76ee\u5f55 'dir1' \u5df2\u7ecf\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4' du -sk * | sort -rn \u4ee5\u5bb9\u91cf\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5927\u5c0f rpm -q -a --qf '%10{SIZE}t%{NAME}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u5df2\u5b89\u88c5\u7684rpm\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (fedora, redhat\u7c7b\u7cfb\u7edf) dpkg-query -W -f=' {Installed-Size;10}t {Installed-Size;10}t {Package}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u663e\u793a\u5df2\u5b89\u88c5\u7684deb\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (ubuntu, debian\u7c7b\u7cfb\u7edf) \u7528\u6237\u548c\u7fa4\u7ec4 groupadd group_name \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237\u7ec4 groupdel group_name \u5220\u9664\u4e00\u4e2a\u7528\u6237\u7ec4 groupmod -n new_group_name old_group_name \u91cd\u547d\u540d\u4e00\u4e2a\u7528\u6237\u7ec4 useradd -c \"Name Surname \" -g admin -d /home/user1 -s /bin/bash user1 \u521b\u5efa\u4e00\u4e2a\u5c5e\u4e8e \"admin\" \u7528\u6237\u7ec4\u7684\u7528\u6237 useradd user1 \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237 userdel -r user1 \u5220\u9664\u4e00\u4e2a\u7528\u6237 ( '-r' \u6392\u9664\u4e3b\u76ee\u5f55) usermod -c \"User FTP\" -g system -d /ftp/user1 -s /bin/nologin user1 \u4fee\u6539\u7528\u6237\u5c5e\u6027 passwd \u4fee\u6539\u53e3\u4ee4 passwd user1 \u4fee\u6539\u4e00\u4e2a\u7528\u6237\u7684\u53e3\u4ee4 (\u53ea\u5141\u8bb8root\u6267\u884c) chage -E 2005-12-31 user1 \u8bbe\u7f6e\u7528\u6237\u53e3\u4ee4\u7684\u5931\u6548\u671f\u9650 pwck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7528\u6237 grpck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7fa4\u7ec4 newgrp group_name \u767b\u9646\u8fdb\u4e00\u4e2a\u65b0\u7684\u7fa4\u7ec4\u4ee5\u6539\u53d8\u65b0\u521b\u5efa\u6587\u4ef6\u7684\u9884\u8bbe\u7fa4\u7ec4 \u6587\u4ef6\u7684\u6743\u9650 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88 ls -lh \u663e\u793a\u6743\u9650 ls /tmp | pr -T5 -W$COLUMNS \u5c06\u7ec8\u7aef\u5212\u5206\u62105\u680f\u663e\u793a chmod ugo+rwx directory1 \u8bbe\u7f6e\u76ee\u5f55\u7684\u6240\u6709\u4eba(u)\u3001\u7fa4\u7ec4(g)\u4ee5\u53ca\u5176\u4ed6\u4eba(o)\u4ee5\u8bfb\uff08r \uff09\u3001\u5199(w)\u548c\u6267\u884c(x)\u7684\u6743\u9650 chmod go-rwx directory1 \u5220\u9664\u7fa4\u7ec4(g)\u4e0e\u5176\u4ed6\u4eba(o)\u5bf9\u76ee\u5f55\u7684\u8bfb\u5199\u6267\u884c\u6743\u9650 chown user1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u5c5e\u6027 chown -R user1 directory1 \u6539\u53d8\u4e00\u4e2a\u76ee\u5f55\u7684\u6240\u6709\u4eba\u5c5e\u6027\u5e76\u540c\u65f6\u6539\u53d8\u6539\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u7684\u5c5e\u6027 chgrp group1 file1 \u6539\u53d8\u6587\u4ef6\u7684\u7fa4\u7ec4 chown user1:group1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u548c\u7fa4\u7ec4\u5c5e\u6027 find / -perm -u+s \u7f57\u5217\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528\u4e86SUID\u63a7\u5236\u7684\u6587\u4ef6 chmod u+s /bin/file1 \u8bbe\u7f6e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID \u4f4d - \u8fd0\u884c\u8be5\u6587\u4ef6\u7684\u7528\u6237\u4e5f\u88ab\u8d4b\u4e88\u548c\u6240\u6709\u8005\u540c\u6837\u7684\u6743\u9650 chmod u-s /bin/file1 \u7981\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID\u4f4d chmod g+s /home/public \u8bbe\u7f6e\u4e00\u4e2a\u76ee\u5f55\u7684SGID \u4f4d - \u7c7b\u4f3cSUID \uff0c\u4e0d\u8fc7\u8fd9\u662f\u9488\u5bf9\u76ee\u5f55\u7684 chmod g-s /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 SGID \u4f4d chmod o+t /home/public \u8bbe\u7f6e\u4e00\u4e2a\u6587\u4ef6\u7684 STIKY \u4f4d - \u53ea\u5141\u8bb8\u5408\u6cd5\u6240\u6709\u4eba\u5220\u9664\u6587\u4ef6 chmod o-t /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 STIKY \u4f4d \u6587\u4ef6\u7684\u7279\u6b8a\u5c5e\u6027 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88 chattr +a file1 \u53ea\u5141\u8bb8\u4ee5\u8ffd\u52a0\u65b9\u5f0f\u8bfb\u5199\u6587\u4ef6 chattr +c file1 \u5141\u8bb8\u8fd9\u4e2a\u6587\u4ef6\u80fd\u88ab\u5185\u6838\u81ea\u52a8\u538b\u7f29/\u89e3\u538b chattr +d file1 \u5728\u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u5907\u4efd\u65f6\uff0cdump\u7a0b\u5e8f\u5c06\u5ffd\u7565\u8fd9\u4e2a\u6587\u4ef6 chattr +i file1 \u8bbe\u7f6e\u6210\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\uff0c\u4e0d\u80fd\u88ab\u5220\u9664\u3001\u4fee\u6539\u3001\u91cd\u547d\u540d\u6216\u8005\u94fe\u63a5 chattr +s file1 \u5141\u8bb8\u4e00\u4e2a\u6587\u4ef6\u88ab\u5b89\u5168\u5730\u5220\u9664 chattr +S file1 \u4e00\u65e6\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u6267\u884c\u4e86\u5199\u64cd\u4f5c\uff0c\u4f7f\u7cfb\u7edf\u7acb\u523b\u628a\u4fee\u6539\u7684\u7ed3\u679c\u5199\u5230\u78c1\u76d8 chattr +u file1 \u82e5\u6587\u4ef6\u88ab\u5220\u9664\uff0c\u7cfb\u7edf\u4f1a\u5141\u8bb8\u4f60\u5728\u4ee5\u540e\u6062\u590d\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6587\u4ef6 lsattr \u663e\u793a\u7279\u6b8a\u7684\u5c5e\u6027 \u6253\u5305\u548c\u538b\u7f29\u6587\u4ef6 bunzip2 file1.bz2 \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.bz2'\u7684\u6587\u4ef6 bzip2 file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6 gunzip file1.gz \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.gz'\u7684\u6587\u4ef6 gzip file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1'\u7684\u6587\u4ef6 gzip -9 file1 \u6700\u5927\u7a0b\u5ea6\u538b\u7f29 rar a file1.rar test_file \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'file1.rar' \u7684\u5305 rar a file1.rar file1 file2 dir1 \u540c\u65f6\u538b\u7f29 'file1', 'file2' \u4ee5\u53ca\u76ee\u5f55 'dir1' rar x file1.rar \u89e3\u538brar\u5305 unrar x file1.rar \u89e3\u538brar\u5305 tar -cvf archive.tar file1 \u521b\u5efa\u4e00\u4e2a\u975e\u538b\u7f29\u7684 tarball tar -cvf archive.tar file1 file2 dir1 \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e86 'file1', 'file2' \u4ee5\u53ca 'dir1'\u7684\u6863\u6848\u6587\u4ef6 tar -tf archive.tar \u663e\u793a\u4e00\u4e2a\u5305\u4e2d\u7684\u5185\u5bb9 tar -xvf archive.tar \u91ca\u653e\u4e00\u4e2a\u5305 tar -xvf archive.tar -C /tmp \u5c06\u538b\u7f29\u5305\u91ca\u653e\u5230 /tmp\u76ee\u5f55\u4e0b tar -cvfj archive.tar.bz2 dir1 \u521b\u5efa\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -jxvf archive.tar.bz2 \u89e3\u538b\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -cvfz archive.tar.gz dir1 \u521b\u5efa\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -zxvf archive.tar.gz \u89e3\u538b\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305 zip file1.zip file1 \u521b\u5efa\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305 zip -r file1.zip file1 file2 dir1 \u5c06\u51e0\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u540c\u65f6\u538b\u7f29\u6210\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305 unzip file1.zip \u89e3\u538b\u4e00\u4e2azip\u683c\u5f0f\u538b\u7f29\u5305 RPM \u5305 - \uff08Fedora, Redhat\u53ca\u7c7b\u4f3c\u7cfb\u7edf\uff09 rpm -ivh package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305 rpm -ivh --nodeeps package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305\u800c\u5ffd\u7565\u4f9d\u8d56\u5173\u7cfb\u8b66\u544a rpm -U package.rpm \u66f4\u65b0\u4e00\u4e2arpm\u5305\u4f46\u4e0d\u6539\u53d8\u5176\u914d\u7f6e\u6587\u4ef6 rpm -F package.rpm \u66f4\u65b0\u4e00\u4e2a\u786e\u5b9a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305 rpm -e package_name.rpm \u5220\u9664\u4e00\u4e2arpm\u5305 rpm -qa \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305 rpm -qa | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684rpm\u5305 rpm -qi package_name \u83b7\u53d6\u4e00\u4e2a\u5df2\u5b89\u88c5\u5305\u7684\u7279\u6b8a\u4fe1\u606f rpm -qg \"System Environment/Daemons\" \u663e\u793a\u4e00\u4e2a\u7ec4\u4ef6\u7684rpm\u5305 rpm -ql package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 rpm -qc package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u5217\u8868 rpm -q package_name --whatrequires \u663e\u793a\u4e0e\u4e00\u4e2arpm\u5305\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u5217\u8868 rpm -q package_name --whatprovides \u663e\u793a\u4e00\u4e2arpm\u5305\u6240\u5360\u7684\u4f53\u79ef rpm -q package_name --scripts \u663e\u793a\u5728\u5b89\u88c5/\u5220\u9664\u671f\u95f4\u6240\u6267\u884c\u7684\u811a\u672cl rpm -q package_name --changelog \u663e\u793a\u4e00\u4e2arpm\u5305\u7684\u4fee\u6539\u5386\u53f2 rpm -qf /etc/httpd/conf/httpd.conf \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2arpm\u5305\u6240\u63d0\u4f9b rpm -qp package.rpm -l \u663e\u793a\u7531\u4e00\u4e2a\u5c1a\u672a\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 rpm --import /media/cdrom/RPM-GPG-KEY \u5bfc\u5165\u516c\u94a5\u6570\u5b57\u8bc1\u4e66 rpm --checksig package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u7684\u5b8c\u6574\u6027 rpm -qa gpg-pubkey \u786e\u8ba4\u5df2\u5b89\u88c5\u7684\u6240\u6709rpm\u5305\u7684\u5b8c\u6574\u6027 rpm -V package_name \u68c0\u67e5\u6587\u4ef6\u5c3a\u5bf8\u3001 \u8bb8\u53ef\u3001\u7c7b\u578b\u3001\u6240\u6709\u8005\u3001\u7fa4\u7ec4\u3001MD5\u68c0\u67e5\u4ee5\u53ca\u6700\u540e\u4fee\u6539\u65f6\u95f4 rpm -Va \u68c0\u67e5\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u5b89\u88c5\u7684rpm\u5305- \u5c0f\u5fc3\u4f7f\u7528 rpm -Vp package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u8fd8\u672a\u5b89\u88c5 rpm2cpio package.rpm | cpio --extract --make-directories bin \u4ece\u4e00\u4e2arpm\u5305\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6 rpm -ivh /usr/src/redhat/RPMS/ arch /package.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u5b89\u88c5\u4e00\u4e2a\u6784\u5efa\u597d\u7684\u5305 rpmbuild --rebuild package_name.src.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u6784\u5efa\u4e00\u4e2a rpm \u5305 YUM \u8f6f\u4ef6\u5305\u5347\u7ea7\u5668 - \uff08Fedora, RedHat\u53ca\u7c7b\u4f3c\u7cfb\u7edf) yum install package_name \u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e00\u4e2arpm\u5305 yum localinstall package_name.rpm \u5c06\u5b89\u88c5\u4e00\u4e2arpm\u5305\uff0c\u4f7f\u7528\u4f60\u81ea\u5df1\u7684\u8f6f\u4ef6\u4ed3\u5e93\u4e3a\u4f60\u89e3\u51b3\u6240\u6709\u4f9d\u8d56\u5173\u7cfb yum update package_name.rpm \u66f4\u65b0\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u5b89\u88c5\u7684rpm\u5305 yum update package_name \u66f4\u65b0\u4e00\u4e2arpm\u5305 yum remove package_name \u5220\u9664\u4e00\u4e2arpm\u5305 yum list \u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u6240\u6709\u5305 yum search package_name \u5728rpm\u4ed3\u5e93\u4e2d\u641c\u5bfb\u8f6f\u4ef6\u5305 yum clean packages \u6e05\u7406rpm\u7f13\u5b58\u5220\u9664\u4e0b\u8f7d\u7684\u5305 yum clean headers \u5220\u9664\u6240\u6709\u5934\u6587\u4ef6 yum clean all \u5220\u9664\u6240\u6709\u7f13\u5b58\u7684\u5305\u548c\u5934\u6587\u4ef6 DEB \u5305 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf) dpkg -i package.deb \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 dpkg -r package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2a deb \u5305 dpkg -l \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684 deb \u5305 dpkg -l | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684deb\u5305 dpkg -s package_name \u83b7\u5f97\u5df2\u7ecf\u5b89\u88c5\u5728\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u7279\u6b8a\u5305\u7684\u4fe1\u606f dpkg -L package_name \u663e\u793a\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b89\u88c5\u7684\u4e00\u4e2adeb\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 dpkg --contents package.deb \u663e\u793a\u5c1a\u672a\u5b89\u88c5\u7684\u4e00\u4e2a\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 dpkg -S /bin/ping \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2adeb\u5305\u63d0\u4f9b APT \u8f6f\u4ef6\u5de5\u5177 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf) apt-get install package_name \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 apt-cdrom install package_name \u4ece\u5149\u76d8\u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 apt-get update \u5347\u7ea7\u5217\u8868\u4e2d\u7684\u8f6f\u4ef6\u5305 apt-get upgrade \u5347\u7ea7\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6 apt-get remove package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2adeb\u5305 apt-get check \u786e\u8ba4\u4f9d\u8d56\u7684\u8f6f\u4ef6\u4ed3\u5e93\u6b63\u786e apt-get clean \u4ece\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305\u4e2d\u6e05\u7406\u7f13\u5b58 apt-cache search searched-package \u8fd4\u56de\u5305\u542b\u6240\u8981\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u8f6f\u4ef6\u5305\u540d\u79f0 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 cat file1 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u8282\u5f00\u59cb\u6b63\u5411\u67e5\u770b\u6587\u4ef6\u7684\u5185\u5bb9 tac file1 \u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u53cd\u5411\u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 more file1 \u67e5\u770b\u4e00\u4e2a\u957f\u6587\u4ef6\u7684\u5185\u5bb9 less file1 \u7c7b\u4f3c\u4e8e 'more' \u547d\u4ee4\uff0c\u4f46\u662f\u5b83\u5141\u8bb8\u5728\u6587\u4ef6\u4e2d\u548c\u6b63\u5411\u64cd\u4f5c\u4e00\u6837\u7684\u53cd\u5411\u64cd\u4f5c head -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u524d\u4e24\u884c tail -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u6700\u540e\u4e24\u884c tail -f /var/log/messages \u5b9e\u65f6\u67e5\u770b\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9 \u6587\u672c\u5904\u7406 cat file1 file2 ... | command <> file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT cat file1 | command( sed, grep, awk, grep, etc...) > result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d cat file1 | command( sed, grep, awk, grep, etc...) >> result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u5df2\u6709\u7684\u6587\u4ef6\u4e2d grep Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u5173\u952e\u8bcd\"Aug\" grep ^Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u4ee5\"Aug\"\u5f00\u59cb\u7684\u8bcd\u6c47 grep [0-9] /var/log/messages \u9009\u62e9 '/var/log/messages' \u6587\u4ef6\u4e2d\u6240\u6709\u5305\u542b\u6570\u5b57\u7684\u884c grep Aug -R /var/log/* \u5728\u76ee\u5f55 '/var/log' \u53ca\u968f\u540e\u7684\u76ee\u5f55\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\"Aug\" sed 's/stringa1/stringa2/g' example.txt \u5c06example.txt\u6587\u4ef6\u4e2d\u7684 \"string1\" \u66ff\u6362\u6210 \"string2\" sed '/^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u7a7a\u767d\u884c sed '/ *#/d; /^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u6ce8\u91ca\u548c\u7a7a\u767d\u884c echo 'esempio' | tr '[:lower:]' '[:upper:]' \u5408\u5e76\u4e0a\u4e0b\u5355\u5143\u683c\u5185\u5bb9 sed -e '1d' result.txt \u4ece\u6587\u4ef6example.txt \u4e2d\u6392\u9664\u7b2c\u4e00\u884c sed -n '/stringa1/p' \u67e5\u770b\u53ea\u5305\u542b\u8bcd\u6c47 \"string1\"\u7684\u884c sed -e 's/ *$//' example.txt \u5220\u9664\u6bcf\u4e00\u884c\u6700\u540e\u7684\u7a7a\u767d\u5b57\u7b26 sed -e 's/stringa1//g' example.txt \u4ece\u6587\u6863\u4e2d\u53ea\u5220\u9664\u8bcd\u6c47 \"string1\" \u5e76\u4fdd\u7559\u5269\u4f59\u5168\u90e8 sed -n '1,5p;5q' example.txt \u67e5\u770b\u4ece\u7b2c\u4e00\u884c\u5230\u7b2c5\u884c\u5185\u5bb9 sed -n '5p;5q' example.txt \u67e5\u770b\u7b2c5\u884c sed -e 's/00*/0/g' example.txt \u7528\u5355\u4e2a\u96f6\u66ff\u6362\u591a\u4e2a\u96f6 cat -n file1 \u6807\u793a\u6587\u4ef6\u7684\u884c\u6570 cat example.txt | awk 'NR%2==1' \u5220\u9664example.txt\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5076\u6570\u884c echo a b c | awk '{print $1}' \u67e5\u770b\u4e00\u884c\u7b2c\u4e00\u680f echo a b c | awk '{print 1, 1, 3}' \u67e5\u770b\u4e00\u884c\u7684\u7b2c\u4e00\u548c\u7b2c\u4e09\u680f paste file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9 paste -d '+' file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9\uff0c\u4e2d\u95f4\u7528\"+\"\u533a\u5206 sort file1 file2 \u6392\u5e8f\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 sort file1 file2 | uniq \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u5e76\u96c6(\u91cd\u590d\u7684\u884c\u53ea\u4fdd\u7559\u4e00\u4efd) sort file1 file2 | uniq -u \u5220\u9664\u4ea4\u96c6\uff0c\u7559\u4e0b\u5176\u4ed6\u7684\u884c sort file1 file2 | uniq -d \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u4ea4\u96c6(\u53ea\u7559\u4e0b\u540c\u65f6\u5b58\u5728\u4e8e\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6) comm -1 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file1' \u6240\u5305\u542b\u7684\u5185\u5bb9 comm -2 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file2' \u6240\u5305\u542b\u7684\u5185\u5bb9 comm -3 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664\u4e24\u4e2a\u6587\u4ef6\u5171\u6709\u7684\u90e8\u5206 \u5b57\u7b26\u8bbe\u7f6e\u548c\u6587\u4ef6\u683c\u5f0f\u8f6c\u6362 dos2unix filedos.txt fileunix.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceMSDOS\u8f6c\u6362\u6210UNIX unix2dos fileunix.txt filedos.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceUNIX\u8f6c\u6362\u6210MSDOS recode ..HTML < page.txt > page.html \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u8f6c\u6362\u6210html recode -l | more \u663e\u793a\u6240\u6709\u5141\u8bb8\u7684\u8f6c\u6362\u683c\u5f0f \u6587\u4ef6\u7cfb\u7edf\u5206\u6790 badblocks -v /dev/hda1 \u68c0\u67e5\u78c1\u76d8hda1\u4e0a\u7684\u574f\u78c1\u5757 fsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0alinux\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.ext2 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 e2fsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 e2fsck -j /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.ext3 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.vfat /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0afat\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.msdos /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 dosfsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 \u521d\u59cb\u5316\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mkfs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mke2fs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext2\u7684\u6587\u4ef6\u7cfb\u7edf mke2fs -j /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext3(\u65e5\u5fd7\u578b)\u7684\u6587\u4ef6\u7cfb\u7edf mkfs -t vfat 32 -F /dev/hda1 \u521b\u5efa\u4e00\u4e2a FAT32 \u6587\u4ef6\u7cfb\u7edf fdformat -n /dev/fd0 \u683c\u5f0f\u5316\u4e00\u4e2a\u8f6f\u76d8 mkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf SWAP\u6587\u4ef6\u7cfb\u7edf mkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf swapon /dev/hda3 \u542f\u7528\u4e00\u4e2a\u65b0\u7684swap\u6587\u4ef6\u7cfb\u7edf swapon /dev/hda2 /dev/hdb3 \u542f\u7528\u4e24\u4e2aswap\u5206\u533a \u5907\u4efd dump -0aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u5b8c\u6574\u5907\u4efd dump -1aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd restore -if /tmp/home0.bak \u8fd8\u539f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u5907\u4efd rsync -rogpav --delete /home /tmp \u540c\u6b65\u4e24\u8fb9\u7684\u76ee\u5f55 rsync -rogpav -e ssh --delete /home ip_address:/tmp \u901a\u8fc7SSH\u901a\u9053rsync rsync -az -e ssh --delete ip_addr:/home/public /home/local \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u4e00\u4e2a\u8fdc\u7a0b\u76ee\u5f55\u540c\u6b65\u5230\u672c\u5730\u76ee\u5f55 rsync -az -e ssh --delete /home/local ip_addr:/home/public \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u672c\u5730\u76ee\u5f55\u540c\u6b65\u5230\u8fdc\u7a0b\u76ee\u5f55 dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr 'dd of=hda.gz' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c\u4e00\u6b21\u5907\u4efd\u672c\u5730\u78c1\u76d8\u7684\u64cd\u4f5c dd if=/dev/sda of=/tmp/file1 \u5907\u4efd\u78c1\u76d8\u5185\u5bb9\u5230\u4e00\u4e2a\u6587\u4ef6 tar -Puf backup.tar /home/user \u6267\u884c\u4e00\u6b21\u5bf9 '/home/user' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd\u64cd\u4f5c ( cd /tmp/local/ && tar c . ) | ssh -C user@ip_addr 'cd /home/share/ && tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5185\u5bb9 ( tar c /home ) | ssh -C user@ip_addr 'cd /home/backup-home && tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u672c\u5730\u76ee\u5f55 tar cf - . | (cd /tmp/backup ; tar xf - ) \u672c\u5730\u5c06\u4e00\u4e2a\u76ee\u5f55\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u4fdd\u7559\u539f\u6709\u6743\u9650\u53ca\u94fe\u63a5 find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents \u4ece\u4e00\u4e2a\u76ee\u5f55\u67e5\u627e\u5e76\u590d\u5236\u6240\u6709\u4ee5 '.txt' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 find /var/log -name '*.log' | tar cv --files-from=- | bzip2 > log.tar.bz2 \u67e5\u627e\u6240\u6709\u4ee5 '.log' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u505a\u6210\u4e00\u4e2abzip\u5305 dd if=/dev/hda of=/dev/fd0 bs=512 count=1 \u505a\u4e00\u4e2a\u5c06 MBR (Master Boot Record)\u5185\u5bb9\u590d\u5236\u5230\u8f6f\u76d8\u7684\u52a8\u4f5c dd if=/dev/fd0 of=/dev/hda bs=512 count=1 \u4ece\u5df2\u7ecf\u4fdd\u5b58\u5230\u8f6f\u76d8\u7684\u5907\u4efd\u4e2d\u6062\u590dMBR\u5185\u5bb9 \u5149\u76d8 cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force \u6e05\u7a7a\u4e00\u4e2a\u53ef\u590d\u5199\u7684\u5149\u76d8\u5185\u5bb9 mkisofs /dev/cdrom > cd.iso \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u5149\u76d8\u7684iso\u955c\u50cf\u6587\u4ef6 mkisofs /dev/cdrom | gzip > cd_iso.gz \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u4e86\u7684\u5149\u76d8iso\u955c\u50cf\u6587\u4ef6 mkisofs -J -allow-leading-dots -R -V \"Label CD\" -iso-level 4 -o ./cd.iso data_cd \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u7684iso\u955c\u50cf\u6587\u4ef6 cdrecord -v dev=/dev/cdrom cd.iso \u523b\u5f55\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6 gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - \u523b\u5f55\u4e00\u4e2a\u538b\u7f29\u4e86\u7684ISO\u955c\u50cf\u6587\u4ef6 mount -o loop cd.iso /mnt/iso \u6302\u8f7d\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6 cd-paranoia -B \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d cd-paranoia -- \"-3\" \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d\uff08\u53c2\u6570-3\uff09 cdrecord --scanbus \u626b\u63cf\u603b\u7ebf\u4ee5\u8bc6\u522bscsi\u901a\u9053 dd if=/dev/hdc | md5sum \u6821\u9a8c\u4e00\u4e2a\u8bbe\u5907\u7684md5sum\u7f16\u7801\uff0c\u4f8b\u5982\u4e00\u5f20 CD \u7f51\u7edc - \uff08\u4ee5\u592a\u7f51\u548cWIFI\u65e0\u7ebf \uff09 ifconfig eth0 \u663e\u793a\u4e00\u4e2a\u4ee5\u592a\u7f51\u5361\u7684\u914d\u7f6e ifup eth0 \u542f\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907 ifdown eth0 \u7981\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907 ifconfig eth0 192.168.1.1 netmask 255.255.255.0 \u63a7\u5236IP\u5730\u5740 ifconfig eth0 promisc \u8bbe\u7f6e 'eth0' \u6210\u6df7\u6742\u6a21\u5f0f\u4ee5\u55c5\u63a2\u6570\u636e\u5305 (sniffing) dhclient eth0 \u4ee5dhcp\u6a21\u5f0f\u542f\u7528 'eth0' route -n show routing table route add -net 0/0 gw IP_Gateway configura default gateway route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network '192.168.0.0/16' route del 0/0 gw IP_gateway remove static route echo \"1\" > /proc/sys/net/ipv4/ip_forward activate ip routing hostname show hostname of system host www.example.com lookup hostname to resolve name to ip address and viceversa(1) nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2) ip link show show link status of all interfaces mii-tool eth0 show link status of 'eth0' ethtool eth0 show statistics of network card 'eth0' netstat -tup show all active network connections and their PID netstat -tupl show all network services listening on the system and their PID tcpdump tcp port 80 show all HTTP traffic iwlist scan show wireless networks iwconfig eth1 show configuration of a wireless network card hostname show hostname host www.example.com lookup hostname to resolve name to ip address and viceversa nslookup www.example.com lookup hostname to resolve name to ip address and viceversa whois www.example.com lookup on Whois database JPS\u5de5\u5177 jps(Java Virtual Machine Process Status Tool)\u662fJDK 1.5\u63d0\u4f9b\u7684\u4e00\u4e2a\u663e\u793a\u5f53\u524d\u6240\u6709java\u8fdb\u7a0bpid\u7684\u547d\u4ee4\uff0c\u7b80\u5355\u5b9e\u7528\uff0c\u975e\u5e38\u9002\u5408\u5728linux/unix\u5e73\u53f0\u4e0a\u7b80\u5355\u5bdf\u770b\u5f53\u524djava\u8fdb\u7a0b\u7684\u4e00\u4e9b\u7b80\u5355\u60c5\u51b5\u3002 \u6211\u60f3\u5f88\u591a\u4eba\u90fd\u662f\u7528\u8fc7unix\u7cfb\u7edf\u91cc\u7684ps\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684\u8fdb\u7a0b\u60c5\u51b5\uff0c\u6709\u54ea\u4e9b\u8fdb\u7a0b\uff0c\u53ca\u5176 id\u3002 jps \u4e5f\u662f\u4e00\u6837\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684java\u8fdb\u7a0b\u60c5\u51b5\uff0c\u53ca\u5176id\u53f7\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u67e5\u770b\u6211\u4eec\u5230\u5e95\u542f\u52a8\u4e86\u51e0\u4e2ajava\u8fdb\u7a0b\uff08\u56e0\u4e3a\u6bcf\u4e00\u4e2ajava\u7a0b\u5e8f\u90fd\u4f1a\u72ec\u5360\u4e00\u4e2ajava\u865a\u62df\u673a\u5b9e\u4f8b\uff09\uff0c\u548c\u4ed6\u4eec\u7684\u8fdb\u7a0b\u53f7\uff08\u4e3a\u4e0b\u9762\u51e0\u4e2a\u7a0b\u5e8f\u505a\u51c6\u5907\uff09\uff0c\u5e76\u53ef\u901a\u8fc7opt\u6765\u67e5\u770b\u8fd9\u4e9b\u8fdb\u7a0b\u7684\u8be6\u7ec6\u542f\u52a8\u53c2\u6570\u3002 ** \u4f7f\u7528\u65b9\u6cd5\uff1a\u5728\u5f53\u524d\u547d\u4ee4\u884c\u4e0b\u6253 jps(\u9700\u8981JAVA_HOME\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u5230\u6539\u7a0b\u5e8f\u7684\u76ee\u5f55\u4e0b\u6253) \u3002** jps\u5b58\u653e\u5728JAVA_HOME/bin/jps\uff0c\u4f7f\u7528\u65f6\u4e3a\u4e86\u65b9\u4fbf\u8bf7\u5c06JAVA_HOME/bin/\u52a0\u5165\u5230Path. $>** jps** 23991 Jps 23789 BossMain 23651 Resin \u6bd4\u8f83\u5e38\u7528\u7684\u53c2\u6570\uff1a -q \u53ea\u663e\u793apid\uff0c\u4e0d\u663e\u793aclass\u540d\u79f0,jar\u6587\u4ef6\u540d\u548c\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570 $> jps -q 28680 23789 23651 -m \u8f93\u51fa\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5728\u5d4c\u5165\u5f0fjvm\u4e0a\u53ef\u80fd\u662fnull $> jps -m 28715 Jps -m 23789 BossMain 23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log -l \u8f93\u51fa\u5e94\u7528\u7a0b\u5e8fmain class\u7684\u5b8c\u6574package\u540d \u6216\u8005 \u5e94\u7528\u7a0b\u5e8f\u7684jar\u6587\u4ef6\u5b8c\u6574\u8def\u5f84\u540d $> jps -l 28729 sun.tools.jps.Jps 23789 com.asiainfo.aimc.bossbi.BossMain 23651 com.caucho.server.resin.Resin -v \u8f93\u51fa\u4f20\u9012\u7ed9JVM\u7684\u53c2\u6570 $> jps -v 23789 BossMain 28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m 23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl - Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl sudo jps\u770b\u5230\u7684\u8fdb\u7a0b\u6570\u91cf\u6700\u5168 jps 192.168.0.77 \u5217\u51fa\u8fdc\u7a0b\u670d\u52a1\u5668192.168.0.77\u673a\u5668\u6240\u6709\u7684jvm\u5b9e\u4f8b\uff0c\u91c7\u7528rmi\u534f\u8bae\uff0c\u9ed8\u8ba4\u8fde\u63a5\u7aef\u53e3\u4e3a1099 \uff08\u524d\u63d0\u662f\u8fdc\u7a0b\u670d\u52a1\u5668\u63d0\u4f9bjstatd\u670d\u52a1\uff09 \u6ce8\uff1ajps\u547d\u4ee4\u6709\u4e2a\u5730\u65b9\u5f88\u4e0d\u597d\uff0c\u4f3c\u4e4e\u53ea\u80fd\u663e\u793a\u5f53\u524d\u7528\u6237\u7684java\u8fdb\u7a0b\uff0c\u8981\u663e\u793a\u5176\u4ed6\u7528\u6237\u7684\u8fd8\u662f\u53ea\u80fd\u7528unix/linux\u7684ps\u547d\u4ee4\u3002","title":"048 linux\u7684\u6307\u4ee4"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/048-linux\u7684\u6307\u4ee4/#linux","text":"\u8f6c\u8f7d: \u6211\u7231\u5b66python \u7cfb\u7edf\u4fe1\u606f arch \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(1) uname -m \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(2) uname -r \u663e\u793a\u6b63\u5728\u4f7f\u7528\u7684\u5185\u6838\u7248\u672c dmidecode -q \u663e\u793a\u786c\u4ef6\u7cfb\u7edf\u90e8\u4ef6 - (SMBIOS / DMI) hdparm -i /dev/hda \u7f57\u5217\u4e00\u4e2a\u78c1\u76d8\u7684\u67b6\u6784\u7279\u6027 hdparm -tT /dev/sda \u5728\u78c1\u76d8\u4e0a\u6267\u884c\u6d4b\u8bd5\u6027\u8bfb\u53d6\u64cd\u4f5c cat /proc/cpuinfo \u663e\u793aCPU info\u7684\u4fe1\u606f cat /proc/interrupts \u663e\u793a\u4e2d\u65ad cat /proc/meminfo \u6821\u9a8c\u5185\u5b58\u4f7f\u7528 cat /proc/swaps \u663e\u793a\u54ea\u4e9bswap\u88ab\u4f7f\u7528 cat /proc/version \u663e\u793a\u5185\u6838\u7684\u7248\u672c cat /proc/net/dev \u663e\u793a\u7f51\u7edc\u9002\u914d\u5668\u53ca\u7edf\u8ba1 cat /proc/mounts \u663e\u793a\u5df2\u52a0\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf lspci -tv \u7f57\u5217 PCI \u8bbe\u5907 lsusb -tv \u663e\u793a USB \u8bbe\u5907 date \u663e\u793a\u7cfb\u7edf\u65e5\u671f cal 2007 \u663e\u793a2007\u5e74\u7684\u65e5\u5386\u8868 date 041217002007.00 \u8bbe\u7f6e\u65e5\u671f\u548c\u65f6\u95f4 - \u6708\u65e5\u65f6\u5206\u5e74.\u79d2 clock -w \u5c06\u65f6\u95f4\u4fee\u6539\u4fdd\u5b58\u5230 BIOS **\u5173\u673a (\u7cfb\u7edf\u7684\u5173\u673a\u3001\u91cd\u542f\u4ee5\u53ca\u767b\u51fa ) ** shutdown -h now \u5173\u95ed\u7cfb\u7edf(1) init 0 \u5173\u95ed\u7cfb\u7edf(2) telinit 0 \u5173\u95ed\u7cfb\u7edf(3) shutdown -h hours:minutes & \u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf shutdown -c \u53d6\u6d88\u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf shutdown -r now \u91cd\u542f(1) reboot \u91cd\u542f(2) logout \u6ce8\u9500 \u6587\u4ef6\u548c\u76ee\u5f55 cd /home \u8fdb\u5165 '/ home' \u76ee\u5f55' cd .. \u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55 cd ../.. \u8fd4\u56de\u4e0a\u4e24\u7ea7\u76ee\u5f55 cd \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55 cd ~user1 \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55 cd - \u8fd4\u56de\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55 pwd \u663e\u793a\u5de5\u4f5c\u8def\u5f84 ls \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 ls -F \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 ls -l \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u8be6\u7ec6\u8d44\u6599 ls -a \u663e\u793a\u9690\u85cf\u6587\u4ef6 ls [0-9] \u663e\u793a\u5305\u542b\u6570\u5b57\u7684\u6587\u4ef6\u540d\u548c\u76ee\u5f55\u540d tree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(1) lstree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(2) mkdir dir1 \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55' mkdir dir1 dir2 \u540c\u65f6\u521b\u5efa\u4e24\u4e2a\u76ee\u5f55 mkdir -p /tmp/dir1/dir2 \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u6811 rm -f file1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6' rmdir dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55' rm -rf dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55\u5e76\u540c\u65f6\u5220\u9664\u5176\u5185\u5bb9 rm -rf dir1 dir2 \u540c\u65f6\u5220\u9664\u4e24\u4e2a\u76ee\u5f55\u53ca\u5b83\u4eec\u7684\u5185\u5bb9 mv dir1 new_dir \u91cd\u547d\u540d/\u79fb\u52a8 \u4e00\u4e2a\u76ee\u5f55 cp file1 file2 \u590d\u5236\u4e00\u4e2a\u6587\u4ef6 cp dir/* . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 cp -a /tmp/dir1 . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 cp -a dir1 dir2 \u590d\u5236\u4e00\u4e2a\u76ee\u5f55 ln -s file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8f6f\u94fe\u63a5 ln file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u7269\u7406\u94fe\u63a5 touch -t 0712250000 file1 \u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u65f6\u95f4\u6233 - (YYMMDDhhmm) file file1 outputs the mime type of the file as text iconv -l \u5217\u51fa\u5df2\u77e5\u7684\u7f16\u7801 iconv -f fromEncoding -t toEncoding inputFile > outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. find . -maxdepth 1 -name *.jpg -print -exec convert \"{}\" -resize 80x60 \"thumbs/{}\" \\; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) \u6587\u4ef6\u641c\u7d22 find / -name file1 \u4ece '/' \u5f00\u59cb\u8fdb\u5165\u6839\u6587\u4ef6\u7cfb\u7edf\u641c\u7d22\u6587\u4ef6\u548c\u76ee\u5f55 find / -user user1 \u641c\u7d22\u5c5e\u4e8e\u7528\u6237 'user1' \u7684\u6587\u4ef6\u548c\u76ee\u5f55 find /home/user1 -name *.bin \u5728\u76ee\u5f55 '/ home/user1' \u4e2d\u641c\u7d22\u5e26\u6709'.bin' \u7ed3\u5c3e\u7684\u6587\u4ef6 find /usr/bin -type f -atime +100 \u641c\u7d22\u5728\u8fc7\u53bb100\u5929\u5185\u672a\u88ab\u4f7f\u7528\u8fc7\u7684\u6267\u884c\u6587\u4ef6 find /usr/bin -type f -mtime -10 \u641c\u7d22\u572810\u5929\u5185\u88ab\u521b\u5efa\u6216\u8005\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 find / -name *.rpm -exec chmod 755 '{}' \\; \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u5b9a\u4e49\u5176\u6743\u9650 find / -xdev -name *.rpm \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5ffd\u7565\u5149\u9a71\u3001\u6377\u76d8\u7b49\u53ef\u79fb\u52a8\u8bbe\u5907 locate *.ps \u5bfb\u627e\u4ee5 '.ps' \u7ed3\u5c3e\u7684\u6587\u4ef6 - \u5148\u8fd0\u884c 'updatedb' \u547d\u4ee4 whereis halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u6e90\u7801\u6216man\u7684\u4f4d\u7f6e which halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84 \u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mount /dev/hda2 /mnt/hda2 \u6302\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u786e\u5b9a\u76ee\u5f55 '/ mnt/hda2' \u5df2\u7ecf\u5b58\u5728 umount /dev/hda2 \u5378\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u5148\u4ece\u6302\u8f7d\u70b9 '/ mnt/hda2' \u9000\u51fa fuser -km /mnt/hda2 \u5f53\u8bbe\u5907\u7e41\u5fd9\u65f6\u5f3a\u5236\u5378\u8f7d umount -n /mnt/hda2 \u8fd0\u884c\u5378\u8f7d\u64cd\u4f5c\u800c\u4e0d\u5199\u5165 /etc/mtab \u6587\u4ef6- \u5f53\u6587\u4ef6\u4e3a\u53ea\u8bfb\u6216\u5f53\u78c1\u76d8\u5199\u6ee1\u65f6\u975e\u5e38\u6709\u7528 mount /dev/fd0 /mnt/floppy \u6302\u8f7d\u4e00\u4e2a\u8f6f\u76d8 mount /dev/cdrom /mnt/cdrom \u6302\u8f7d\u4e00\u4e2acdrom\u6216dvdrom mount /dev/hdc /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom mount /dev/hdb /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom mount -o loop file.iso /mnt/cdrom \u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u6216ISO\u955c\u50cf\u6587\u4ef6 mount -t vfat /dev/hda5 /mnt/hda5 \u6302\u8f7d\u4e00\u4e2aWindows FAT32\u6587\u4ef6\u7cfb\u7edf mount /dev/sda1 /mnt/usbdisk \u6302\u8f7d\u4e00\u4e2ausb \u6377\u76d8\u6216\u95ea\u5b58\u8bbe\u5907 mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share \u6302\u8f7d\u4e00\u4e2awindows\u7f51\u7edc\u5171\u4eab \u78c1\u76d8\u7a7a\u95f4 df -h \u663e\u793a\u5df2\u7ecf\u6302\u8f7d\u7684\u5206\u533a\u5217\u8868 ls -lSr |more \u4ee5\u5c3a\u5bf8\u5927\u5c0f\u6392\u5217\u6587\u4ef6\u548c\u76ee\u5f55 du -sh dir1 \u4f30\u7b97\u76ee\u5f55 'dir1' \u5df2\u7ecf\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4' du -sk * | sort -rn \u4ee5\u5bb9\u91cf\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5927\u5c0f rpm -q -a --qf '%10{SIZE}t%{NAME}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u5df2\u5b89\u88c5\u7684rpm\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (fedora, redhat\u7c7b\u7cfb\u7edf) dpkg-query -W -f=' {Installed-Size;10}t {Installed-Size;10}t {Package}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u663e\u793a\u5df2\u5b89\u88c5\u7684deb\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (ubuntu, debian\u7c7b\u7cfb\u7edf) \u7528\u6237\u548c\u7fa4\u7ec4 groupadd group_name \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237\u7ec4 groupdel group_name \u5220\u9664\u4e00\u4e2a\u7528\u6237\u7ec4 groupmod -n new_group_name old_group_name \u91cd\u547d\u540d\u4e00\u4e2a\u7528\u6237\u7ec4 useradd -c \"Name Surname \" -g admin -d /home/user1 -s /bin/bash user1 \u521b\u5efa\u4e00\u4e2a\u5c5e\u4e8e \"admin\" \u7528\u6237\u7ec4\u7684\u7528\u6237 useradd user1 \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237 userdel -r user1 \u5220\u9664\u4e00\u4e2a\u7528\u6237 ( '-r' \u6392\u9664\u4e3b\u76ee\u5f55) usermod -c \"User FTP\" -g system -d /ftp/user1 -s /bin/nologin user1 \u4fee\u6539\u7528\u6237\u5c5e\u6027 passwd \u4fee\u6539\u53e3\u4ee4 passwd user1 \u4fee\u6539\u4e00\u4e2a\u7528\u6237\u7684\u53e3\u4ee4 (\u53ea\u5141\u8bb8root\u6267\u884c) chage -E 2005-12-31 user1 \u8bbe\u7f6e\u7528\u6237\u53e3\u4ee4\u7684\u5931\u6548\u671f\u9650 pwck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7528\u6237 grpck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7fa4\u7ec4 newgrp group_name \u767b\u9646\u8fdb\u4e00\u4e2a\u65b0\u7684\u7fa4\u7ec4\u4ee5\u6539\u53d8\u65b0\u521b\u5efa\u6587\u4ef6\u7684\u9884\u8bbe\u7fa4\u7ec4 \u6587\u4ef6\u7684\u6743\u9650 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88 ls -lh \u663e\u793a\u6743\u9650 ls /tmp | pr -T5 -W$COLUMNS \u5c06\u7ec8\u7aef\u5212\u5206\u62105\u680f\u663e\u793a chmod ugo+rwx directory1 \u8bbe\u7f6e\u76ee\u5f55\u7684\u6240\u6709\u4eba(u)\u3001\u7fa4\u7ec4(g)\u4ee5\u53ca\u5176\u4ed6\u4eba(o)\u4ee5\u8bfb\uff08r \uff09\u3001\u5199(w)\u548c\u6267\u884c(x)\u7684\u6743\u9650 chmod go-rwx directory1 \u5220\u9664\u7fa4\u7ec4(g)\u4e0e\u5176\u4ed6\u4eba(o)\u5bf9\u76ee\u5f55\u7684\u8bfb\u5199\u6267\u884c\u6743\u9650 chown user1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u5c5e\u6027 chown -R user1 directory1 \u6539\u53d8\u4e00\u4e2a\u76ee\u5f55\u7684\u6240\u6709\u4eba\u5c5e\u6027\u5e76\u540c\u65f6\u6539\u53d8\u6539\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u7684\u5c5e\u6027 chgrp group1 file1 \u6539\u53d8\u6587\u4ef6\u7684\u7fa4\u7ec4 chown user1:group1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u548c\u7fa4\u7ec4\u5c5e\u6027 find / -perm -u+s \u7f57\u5217\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528\u4e86SUID\u63a7\u5236\u7684\u6587\u4ef6 chmod u+s /bin/file1 \u8bbe\u7f6e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID \u4f4d - \u8fd0\u884c\u8be5\u6587\u4ef6\u7684\u7528\u6237\u4e5f\u88ab\u8d4b\u4e88\u548c\u6240\u6709\u8005\u540c\u6837\u7684\u6743\u9650 chmod u-s /bin/file1 \u7981\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID\u4f4d chmod g+s /home/public \u8bbe\u7f6e\u4e00\u4e2a\u76ee\u5f55\u7684SGID \u4f4d - \u7c7b\u4f3cSUID \uff0c\u4e0d\u8fc7\u8fd9\u662f\u9488\u5bf9\u76ee\u5f55\u7684 chmod g-s /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 SGID \u4f4d chmod o+t /home/public \u8bbe\u7f6e\u4e00\u4e2a\u6587\u4ef6\u7684 STIKY \u4f4d - \u53ea\u5141\u8bb8\u5408\u6cd5\u6240\u6709\u4eba\u5220\u9664\u6587\u4ef6 chmod o-t /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 STIKY \u4f4d \u6587\u4ef6\u7684\u7279\u6b8a\u5c5e\u6027 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88 chattr +a file1 \u53ea\u5141\u8bb8\u4ee5\u8ffd\u52a0\u65b9\u5f0f\u8bfb\u5199\u6587\u4ef6 chattr +c file1 \u5141\u8bb8\u8fd9\u4e2a\u6587\u4ef6\u80fd\u88ab\u5185\u6838\u81ea\u52a8\u538b\u7f29/\u89e3\u538b chattr +d file1 \u5728\u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u5907\u4efd\u65f6\uff0cdump\u7a0b\u5e8f\u5c06\u5ffd\u7565\u8fd9\u4e2a\u6587\u4ef6 chattr +i file1 \u8bbe\u7f6e\u6210\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\uff0c\u4e0d\u80fd\u88ab\u5220\u9664\u3001\u4fee\u6539\u3001\u91cd\u547d\u540d\u6216\u8005\u94fe\u63a5 chattr +s file1 \u5141\u8bb8\u4e00\u4e2a\u6587\u4ef6\u88ab\u5b89\u5168\u5730\u5220\u9664 chattr +S file1 \u4e00\u65e6\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u6267\u884c\u4e86\u5199\u64cd\u4f5c\uff0c\u4f7f\u7cfb\u7edf\u7acb\u523b\u628a\u4fee\u6539\u7684\u7ed3\u679c\u5199\u5230\u78c1\u76d8 chattr +u file1 \u82e5\u6587\u4ef6\u88ab\u5220\u9664\uff0c\u7cfb\u7edf\u4f1a\u5141\u8bb8\u4f60\u5728\u4ee5\u540e\u6062\u590d\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6587\u4ef6 lsattr \u663e\u793a\u7279\u6b8a\u7684\u5c5e\u6027 \u6253\u5305\u548c\u538b\u7f29\u6587\u4ef6 bunzip2 file1.bz2 \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.bz2'\u7684\u6587\u4ef6 bzip2 file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6 gunzip file1.gz \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.gz'\u7684\u6587\u4ef6 gzip file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1'\u7684\u6587\u4ef6 gzip -9 file1 \u6700\u5927\u7a0b\u5ea6\u538b\u7f29 rar a file1.rar test_file \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'file1.rar' \u7684\u5305 rar a file1.rar file1 file2 dir1 \u540c\u65f6\u538b\u7f29 'file1', 'file2' \u4ee5\u53ca\u76ee\u5f55 'dir1' rar x file1.rar \u89e3\u538brar\u5305 unrar x file1.rar \u89e3\u538brar\u5305 tar -cvf archive.tar file1 \u521b\u5efa\u4e00\u4e2a\u975e\u538b\u7f29\u7684 tarball tar -cvf archive.tar file1 file2 dir1 \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e86 'file1', 'file2' \u4ee5\u53ca 'dir1'\u7684\u6863\u6848\u6587\u4ef6 tar -tf archive.tar \u663e\u793a\u4e00\u4e2a\u5305\u4e2d\u7684\u5185\u5bb9 tar -xvf archive.tar \u91ca\u653e\u4e00\u4e2a\u5305 tar -xvf archive.tar -C /tmp \u5c06\u538b\u7f29\u5305\u91ca\u653e\u5230 /tmp\u76ee\u5f55\u4e0b tar -cvfj archive.tar.bz2 dir1 \u521b\u5efa\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -jxvf archive.tar.bz2 \u89e3\u538b\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -cvfz archive.tar.gz dir1 \u521b\u5efa\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305 tar -zxvf archive.tar.gz \u89e3\u538b\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305 zip file1.zip file1 \u521b\u5efa\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305 zip -r file1.zip file1 file2 dir1 \u5c06\u51e0\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u540c\u65f6\u538b\u7f29\u6210\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305 unzip file1.zip \u89e3\u538b\u4e00\u4e2azip\u683c\u5f0f\u538b\u7f29\u5305 RPM \u5305 - \uff08Fedora, Redhat\u53ca\u7c7b\u4f3c\u7cfb\u7edf\uff09 rpm -ivh package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305 rpm -ivh --nodeeps package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305\u800c\u5ffd\u7565\u4f9d\u8d56\u5173\u7cfb\u8b66\u544a rpm -U package.rpm \u66f4\u65b0\u4e00\u4e2arpm\u5305\u4f46\u4e0d\u6539\u53d8\u5176\u914d\u7f6e\u6587\u4ef6 rpm -F package.rpm \u66f4\u65b0\u4e00\u4e2a\u786e\u5b9a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305 rpm -e package_name.rpm \u5220\u9664\u4e00\u4e2arpm\u5305 rpm -qa \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305 rpm -qa | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684rpm\u5305 rpm -qi package_name \u83b7\u53d6\u4e00\u4e2a\u5df2\u5b89\u88c5\u5305\u7684\u7279\u6b8a\u4fe1\u606f rpm -qg \"System Environment/Daemons\" \u663e\u793a\u4e00\u4e2a\u7ec4\u4ef6\u7684rpm\u5305 rpm -ql package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 rpm -qc package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u5217\u8868 rpm -q package_name --whatrequires \u663e\u793a\u4e0e\u4e00\u4e2arpm\u5305\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u5217\u8868 rpm -q package_name --whatprovides \u663e\u793a\u4e00\u4e2arpm\u5305\u6240\u5360\u7684\u4f53\u79ef rpm -q package_name --scripts \u663e\u793a\u5728\u5b89\u88c5/\u5220\u9664\u671f\u95f4\u6240\u6267\u884c\u7684\u811a\u672cl rpm -q package_name --changelog \u663e\u793a\u4e00\u4e2arpm\u5305\u7684\u4fee\u6539\u5386\u53f2 rpm -qf /etc/httpd/conf/httpd.conf \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2arpm\u5305\u6240\u63d0\u4f9b rpm -qp package.rpm -l \u663e\u793a\u7531\u4e00\u4e2a\u5c1a\u672a\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 rpm --import /media/cdrom/RPM-GPG-KEY \u5bfc\u5165\u516c\u94a5\u6570\u5b57\u8bc1\u4e66 rpm --checksig package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u7684\u5b8c\u6574\u6027 rpm -qa gpg-pubkey \u786e\u8ba4\u5df2\u5b89\u88c5\u7684\u6240\u6709rpm\u5305\u7684\u5b8c\u6574\u6027 rpm -V package_name \u68c0\u67e5\u6587\u4ef6\u5c3a\u5bf8\u3001 \u8bb8\u53ef\u3001\u7c7b\u578b\u3001\u6240\u6709\u8005\u3001\u7fa4\u7ec4\u3001MD5\u68c0\u67e5\u4ee5\u53ca\u6700\u540e\u4fee\u6539\u65f6\u95f4 rpm -Va \u68c0\u67e5\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u5b89\u88c5\u7684rpm\u5305- \u5c0f\u5fc3\u4f7f\u7528 rpm -Vp package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u8fd8\u672a\u5b89\u88c5 rpm2cpio package.rpm | cpio --extract --make-directories bin \u4ece\u4e00\u4e2arpm\u5305\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6 rpm -ivh /usr/src/redhat/RPMS/ arch /package.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u5b89\u88c5\u4e00\u4e2a\u6784\u5efa\u597d\u7684\u5305 rpmbuild --rebuild package_name.src.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u6784\u5efa\u4e00\u4e2a rpm \u5305 YUM \u8f6f\u4ef6\u5305\u5347\u7ea7\u5668 - \uff08Fedora, RedHat\u53ca\u7c7b\u4f3c\u7cfb\u7edf) yum install package_name \u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e00\u4e2arpm\u5305 yum localinstall package_name.rpm \u5c06\u5b89\u88c5\u4e00\u4e2arpm\u5305\uff0c\u4f7f\u7528\u4f60\u81ea\u5df1\u7684\u8f6f\u4ef6\u4ed3\u5e93\u4e3a\u4f60\u89e3\u51b3\u6240\u6709\u4f9d\u8d56\u5173\u7cfb yum update package_name.rpm \u66f4\u65b0\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u5b89\u88c5\u7684rpm\u5305 yum update package_name \u66f4\u65b0\u4e00\u4e2arpm\u5305 yum remove package_name \u5220\u9664\u4e00\u4e2arpm\u5305 yum list \u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u6240\u6709\u5305 yum search package_name \u5728rpm\u4ed3\u5e93\u4e2d\u641c\u5bfb\u8f6f\u4ef6\u5305 yum clean packages \u6e05\u7406rpm\u7f13\u5b58\u5220\u9664\u4e0b\u8f7d\u7684\u5305 yum clean headers \u5220\u9664\u6240\u6709\u5934\u6587\u4ef6 yum clean all \u5220\u9664\u6240\u6709\u7f13\u5b58\u7684\u5305\u548c\u5934\u6587\u4ef6 DEB \u5305 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf) dpkg -i package.deb \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 dpkg -r package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2a deb \u5305 dpkg -l \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684 deb \u5305 dpkg -l | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684deb\u5305 dpkg -s package_name \u83b7\u5f97\u5df2\u7ecf\u5b89\u88c5\u5728\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u7279\u6b8a\u5305\u7684\u4fe1\u606f dpkg -L package_name \u663e\u793a\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b89\u88c5\u7684\u4e00\u4e2adeb\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 dpkg --contents package.deb \u663e\u793a\u5c1a\u672a\u5b89\u88c5\u7684\u4e00\u4e2a\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868 dpkg -S /bin/ping \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2adeb\u5305\u63d0\u4f9b APT \u8f6f\u4ef6\u5de5\u5177 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf) apt-get install package_name \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 apt-cdrom install package_name \u4ece\u5149\u76d8\u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305 apt-get update \u5347\u7ea7\u5217\u8868\u4e2d\u7684\u8f6f\u4ef6\u5305 apt-get upgrade \u5347\u7ea7\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6 apt-get remove package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2adeb\u5305 apt-get check \u786e\u8ba4\u4f9d\u8d56\u7684\u8f6f\u4ef6\u4ed3\u5e93\u6b63\u786e apt-get clean \u4ece\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305\u4e2d\u6e05\u7406\u7f13\u5b58 apt-cache search searched-package \u8fd4\u56de\u5305\u542b\u6240\u8981\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u8f6f\u4ef6\u5305\u540d\u79f0 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 cat file1 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u8282\u5f00\u59cb\u6b63\u5411\u67e5\u770b\u6587\u4ef6\u7684\u5185\u5bb9 tac file1 \u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u53cd\u5411\u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 more file1 \u67e5\u770b\u4e00\u4e2a\u957f\u6587\u4ef6\u7684\u5185\u5bb9 less file1 \u7c7b\u4f3c\u4e8e 'more' \u547d\u4ee4\uff0c\u4f46\u662f\u5b83\u5141\u8bb8\u5728\u6587\u4ef6\u4e2d\u548c\u6b63\u5411\u64cd\u4f5c\u4e00\u6837\u7684\u53cd\u5411\u64cd\u4f5c head -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u524d\u4e24\u884c tail -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u6700\u540e\u4e24\u884c tail -f /var/log/messages \u5b9e\u65f6\u67e5\u770b\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9 \u6587\u672c\u5904\u7406 cat file1 file2 ... | command <> file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT cat file1 | command( sed, grep, awk, grep, etc...) > result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d cat file1 | command( sed, grep, awk, grep, etc...) >> result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u5df2\u6709\u7684\u6587\u4ef6\u4e2d grep Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u5173\u952e\u8bcd\"Aug\" grep ^Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u4ee5\"Aug\"\u5f00\u59cb\u7684\u8bcd\u6c47 grep [0-9] /var/log/messages \u9009\u62e9 '/var/log/messages' \u6587\u4ef6\u4e2d\u6240\u6709\u5305\u542b\u6570\u5b57\u7684\u884c grep Aug -R /var/log/* \u5728\u76ee\u5f55 '/var/log' \u53ca\u968f\u540e\u7684\u76ee\u5f55\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\"Aug\" sed 's/stringa1/stringa2/g' example.txt \u5c06example.txt\u6587\u4ef6\u4e2d\u7684 \"string1\" \u66ff\u6362\u6210 \"string2\" sed '/^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u7a7a\u767d\u884c sed '/ *#/d; /^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u6ce8\u91ca\u548c\u7a7a\u767d\u884c echo 'esempio' | tr '[:lower:]' '[:upper:]' \u5408\u5e76\u4e0a\u4e0b\u5355\u5143\u683c\u5185\u5bb9 sed -e '1d' result.txt \u4ece\u6587\u4ef6example.txt \u4e2d\u6392\u9664\u7b2c\u4e00\u884c sed -n '/stringa1/p' \u67e5\u770b\u53ea\u5305\u542b\u8bcd\u6c47 \"string1\"\u7684\u884c sed -e 's/ *$//' example.txt \u5220\u9664\u6bcf\u4e00\u884c\u6700\u540e\u7684\u7a7a\u767d\u5b57\u7b26 sed -e 's/stringa1//g' example.txt \u4ece\u6587\u6863\u4e2d\u53ea\u5220\u9664\u8bcd\u6c47 \"string1\" \u5e76\u4fdd\u7559\u5269\u4f59\u5168\u90e8 sed -n '1,5p;5q' example.txt \u67e5\u770b\u4ece\u7b2c\u4e00\u884c\u5230\u7b2c5\u884c\u5185\u5bb9 sed -n '5p;5q' example.txt \u67e5\u770b\u7b2c5\u884c sed -e 's/00*/0/g' example.txt \u7528\u5355\u4e2a\u96f6\u66ff\u6362\u591a\u4e2a\u96f6 cat -n file1 \u6807\u793a\u6587\u4ef6\u7684\u884c\u6570 cat example.txt | awk 'NR%2==1' \u5220\u9664example.txt\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5076\u6570\u884c echo a b c | awk '{print $1}' \u67e5\u770b\u4e00\u884c\u7b2c\u4e00\u680f echo a b c | awk '{print 1, 1, 3}' \u67e5\u770b\u4e00\u884c\u7684\u7b2c\u4e00\u548c\u7b2c\u4e09\u680f paste file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9 paste -d '+' file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9\uff0c\u4e2d\u95f4\u7528\"+\"\u533a\u5206 sort file1 file2 \u6392\u5e8f\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 sort file1 file2 | uniq \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u5e76\u96c6(\u91cd\u590d\u7684\u884c\u53ea\u4fdd\u7559\u4e00\u4efd) sort file1 file2 | uniq -u \u5220\u9664\u4ea4\u96c6\uff0c\u7559\u4e0b\u5176\u4ed6\u7684\u884c sort file1 file2 | uniq -d \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u4ea4\u96c6(\u53ea\u7559\u4e0b\u540c\u65f6\u5b58\u5728\u4e8e\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6) comm -1 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file1' \u6240\u5305\u542b\u7684\u5185\u5bb9 comm -2 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file2' \u6240\u5305\u542b\u7684\u5185\u5bb9 comm -3 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664\u4e24\u4e2a\u6587\u4ef6\u5171\u6709\u7684\u90e8\u5206 \u5b57\u7b26\u8bbe\u7f6e\u548c\u6587\u4ef6\u683c\u5f0f\u8f6c\u6362 dos2unix filedos.txt fileunix.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceMSDOS\u8f6c\u6362\u6210UNIX unix2dos fileunix.txt filedos.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceUNIX\u8f6c\u6362\u6210MSDOS recode ..HTML < page.txt > page.html \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u8f6c\u6362\u6210html recode -l | more \u663e\u793a\u6240\u6709\u5141\u8bb8\u7684\u8f6c\u6362\u683c\u5f0f \u6587\u4ef6\u7cfb\u7edf\u5206\u6790 badblocks -v /dev/hda1 \u68c0\u67e5\u78c1\u76d8hda1\u4e0a\u7684\u574f\u78c1\u5757 fsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0alinux\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.ext2 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 e2fsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 e2fsck -j /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.ext3 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.vfat /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0afat\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 fsck.msdos /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 dosfsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027 \u521d\u59cb\u5316\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mkfs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf mke2fs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext2\u7684\u6587\u4ef6\u7cfb\u7edf mke2fs -j /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext3(\u65e5\u5fd7\u578b)\u7684\u6587\u4ef6\u7cfb\u7edf mkfs -t vfat 32 -F /dev/hda1 \u521b\u5efa\u4e00\u4e2a FAT32 \u6587\u4ef6\u7cfb\u7edf fdformat -n /dev/fd0 \u683c\u5f0f\u5316\u4e00\u4e2a\u8f6f\u76d8 mkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf SWAP\u6587\u4ef6\u7cfb\u7edf mkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf swapon /dev/hda3 \u542f\u7528\u4e00\u4e2a\u65b0\u7684swap\u6587\u4ef6\u7cfb\u7edf swapon /dev/hda2 /dev/hdb3 \u542f\u7528\u4e24\u4e2aswap\u5206\u533a \u5907\u4efd dump -0aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u5b8c\u6574\u5907\u4efd dump -1aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd restore -if /tmp/home0.bak \u8fd8\u539f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u5907\u4efd rsync -rogpav --delete /home /tmp \u540c\u6b65\u4e24\u8fb9\u7684\u76ee\u5f55 rsync -rogpav -e ssh --delete /home ip_address:/tmp \u901a\u8fc7SSH\u901a\u9053rsync rsync -az -e ssh --delete ip_addr:/home/public /home/local \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u4e00\u4e2a\u8fdc\u7a0b\u76ee\u5f55\u540c\u6b65\u5230\u672c\u5730\u76ee\u5f55 rsync -az -e ssh --delete /home/local ip_addr:/home/public \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u672c\u5730\u76ee\u5f55\u540c\u6b65\u5230\u8fdc\u7a0b\u76ee\u5f55 dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr 'dd of=hda.gz' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c\u4e00\u6b21\u5907\u4efd\u672c\u5730\u78c1\u76d8\u7684\u64cd\u4f5c dd if=/dev/sda of=/tmp/file1 \u5907\u4efd\u78c1\u76d8\u5185\u5bb9\u5230\u4e00\u4e2a\u6587\u4ef6 tar -Puf backup.tar /home/user \u6267\u884c\u4e00\u6b21\u5bf9 '/home/user' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd\u64cd\u4f5c ( cd /tmp/local/ && tar c . ) | ssh -C user@ip_addr 'cd /home/share/ && tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5185\u5bb9 ( tar c /home ) | ssh -C user@ip_addr 'cd /home/backup-home && tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u672c\u5730\u76ee\u5f55 tar cf - . | (cd /tmp/backup ; tar xf - ) \u672c\u5730\u5c06\u4e00\u4e2a\u76ee\u5f55\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u4fdd\u7559\u539f\u6709\u6743\u9650\u53ca\u94fe\u63a5 find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents \u4ece\u4e00\u4e2a\u76ee\u5f55\u67e5\u627e\u5e76\u590d\u5236\u6240\u6709\u4ee5 '.txt' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 find /var/log -name '*.log' | tar cv --files-from=- | bzip2 > log.tar.bz2 \u67e5\u627e\u6240\u6709\u4ee5 '.log' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u505a\u6210\u4e00\u4e2abzip\u5305 dd if=/dev/hda of=/dev/fd0 bs=512 count=1 \u505a\u4e00\u4e2a\u5c06 MBR (Master Boot Record)\u5185\u5bb9\u590d\u5236\u5230\u8f6f\u76d8\u7684\u52a8\u4f5c dd if=/dev/fd0 of=/dev/hda bs=512 count=1 \u4ece\u5df2\u7ecf\u4fdd\u5b58\u5230\u8f6f\u76d8\u7684\u5907\u4efd\u4e2d\u6062\u590dMBR\u5185\u5bb9 \u5149\u76d8 cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force \u6e05\u7a7a\u4e00\u4e2a\u53ef\u590d\u5199\u7684\u5149\u76d8\u5185\u5bb9 mkisofs /dev/cdrom > cd.iso \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u5149\u76d8\u7684iso\u955c\u50cf\u6587\u4ef6 mkisofs /dev/cdrom | gzip > cd_iso.gz \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u4e86\u7684\u5149\u76d8iso\u955c\u50cf\u6587\u4ef6 mkisofs -J -allow-leading-dots -R -V \"Label CD\" -iso-level 4 -o ./cd.iso data_cd \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u7684iso\u955c\u50cf\u6587\u4ef6 cdrecord -v dev=/dev/cdrom cd.iso \u523b\u5f55\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6 gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - \u523b\u5f55\u4e00\u4e2a\u538b\u7f29\u4e86\u7684ISO\u955c\u50cf\u6587\u4ef6 mount -o loop cd.iso /mnt/iso \u6302\u8f7d\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6 cd-paranoia -B \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d cd-paranoia -- \"-3\" \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d\uff08\u53c2\u6570-3\uff09 cdrecord --scanbus \u626b\u63cf\u603b\u7ebf\u4ee5\u8bc6\u522bscsi\u901a\u9053 dd if=/dev/hdc | md5sum \u6821\u9a8c\u4e00\u4e2a\u8bbe\u5907\u7684md5sum\u7f16\u7801\uff0c\u4f8b\u5982\u4e00\u5f20 CD \u7f51\u7edc - \uff08\u4ee5\u592a\u7f51\u548cWIFI\u65e0\u7ebf \uff09 ifconfig eth0 \u663e\u793a\u4e00\u4e2a\u4ee5\u592a\u7f51\u5361\u7684\u914d\u7f6e ifup eth0 \u542f\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907 ifdown eth0 \u7981\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907 ifconfig eth0 192.168.1.1 netmask 255.255.255.0 \u63a7\u5236IP\u5730\u5740 ifconfig eth0 promisc \u8bbe\u7f6e 'eth0' \u6210\u6df7\u6742\u6a21\u5f0f\u4ee5\u55c5\u63a2\u6570\u636e\u5305 (sniffing) dhclient eth0 \u4ee5dhcp\u6a21\u5f0f\u542f\u7528 'eth0' route -n show routing table route add -net 0/0 gw IP_Gateway configura default gateway route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network '192.168.0.0/16' route del 0/0 gw IP_gateway remove static route echo \"1\" > /proc/sys/net/ipv4/ip_forward activate ip routing hostname show hostname of system host www.example.com lookup hostname to resolve name to ip address and viceversa(1) nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2) ip link show show link status of all interfaces mii-tool eth0 show link status of 'eth0' ethtool eth0 show statistics of network card 'eth0' netstat -tup show all active network connections and their PID netstat -tupl show all network services listening on the system and their PID tcpdump tcp port 80 show all HTTP traffic iwlist scan show wireless networks iwconfig eth1 show configuration of a wireless network card hostname show hostname host www.example.com lookup hostname to resolve name to ip address and viceversa nslookup www.example.com lookup hostname to resolve name to ip address and viceversa whois www.example.com lookup on Whois database JPS\u5de5\u5177 jps(Java Virtual Machine Process Status Tool)\u662fJDK 1.5\u63d0\u4f9b\u7684\u4e00\u4e2a\u663e\u793a\u5f53\u524d\u6240\u6709java\u8fdb\u7a0bpid\u7684\u547d\u4ee4\uff0c\u7b80\u5355\u5b9e\u7528\uff0c\u975e\u5e38\u9002\u5408\u5728linux/unix\u5e73\u53f0\u4e0a\u7b80\u5355\u5bdf\u770b\u5f53\u524djava\u8fdb\u7a0b\u7684\u4e00\u4e9b\u7b80\u5355\u60c5\u51b5\u3002 \u6211\u60f3\u5f88\u591a\u4eba\u90fd\u662f\u7528\u8fc7unix\u7cfb\u7edf\u91cc\u7684ps\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684\u8fdb\u7a0b\u60c5\u51b5\uff0c\u6709\u54ea\u4e9b\u8fdb\u7a0b\uff0c\u53ca\u5176 id\u3002 jps \u4e5f\u662f\u4e00\u6837\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684java\u8fdb\u7a0b\u60c5\u51b5\uff0c\u53ca\u5176id\u53f7\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u67e5\u770b\u6211\u4eec\u5230\u5e95\u542f\u52a8\u4e86\u51e0\u4e2ajava\u8fdb\u7a0b\uff08\u56e0\u4e3a\u6bcf\u4e00\u4e2ajava\u7a0b\u5e8f\u90fd\u4f1a\u72ec\u5360\u4e00\u4e2ajava\u865a\u62df\u673a\u5b9e\u4f8b\uff09\uff0c\u548c\u4ed6\u4eec\u7684\u8fdb\u7a0b\u53f7\uff08\u4e3a\u4e0b\u9762\u51e0\u4e2a\u7a0b\u5e8f\u505a\u51c6\u5907\uff09\uff0c\u5e76\u53ef\u901a\u8fc7opt\u6765\u67e5\u770b\u8fd9\u4e9b\u8fdb\u7a0b\u7684\u8be6\u7ec6\u542f\u52a8\u53c2\u6570\u3002 ** \u4f7f\u7528\u65b9\u6cd5\uff1a\u5728\u5f53\u524d\u547d\u4ee4\u884c\u4e0b\u6253 jps(\u9700\u8981JAVA_HOME\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u5230\u6539\u7a0b\u5e8f\u7684\u76ee\u5f55\u4e0b\u6253) \u3002** jps\u5b58\u653e\u5728JAVA_HOME/bin/jps\uff0c\u4f7f\u7528\u65f6\u4e3a\u4e86\u65b9\u4fbf\u8bf7\u5c06JAVA_HOME/bin/\u52a0\u5165\u5230Path. $>** jps** 23991 Jps 23789 BossMain 23651 Resin \u6bd4\u8f83\u5e38\u7528\u7684\u53c2\u6570\uff1a -q \u53ea\u663e\u793apid\uff0c\u4e0d\u663e\u793aclass\u540d\u79f0,jar\u6587\u4ef6\u540d\u548c\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570 $> jps -q 28680 23789 23651 -m \u8f93\u51fa\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5728\u5d4c\u5165\u5f0fjvm\u4e0a\u53ef\u80fd\u662fnull $> jps -m 28715 Jps -m 23789 BossMain 23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log -l \u8f93\u51fa\u5e94\u7528\u7a0b\u5e8fmain class\u7684\u5b8c\u6574package\u540d \u6216\u8005 \u5e94\u7528\u7a0b\u5e8f\u7684jar\u6587\u4ef6\u5b8c\u6574\u8def\u5f84\u540d $> jps -l 28729 sun.tools.jps.Jps 23789 com.asiainfo.aimc.bossbi.BossMain 23651 com.caucho.server.resin.Resin -v \u8f93\u51fa\u4f20\u9012\u7ed9JVM\u7684\u53c2\u6570 $> jps -v 23789 BossMain 28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m 23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl - Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl sudo jps\u770b\u5230\u7684\u8fdb\u7a0b\u6570\u91cf\u6700\u5168 jps 192.168.0.77 \u5217\u51fa\u8fdc\u7a0b\u670d\u52a1\u5668192.168.0.77\u673a\u5668\u6240\u6709\u7684jvm\u5b9e\u4f8b\uff0c\u91c7\u7528rmi\u534f\u8bae\uff0c\u9ed8\u8ba4\u8fde\u63a5\u7aef\u53e3\u4e3a1099 \uff08\u524d\u63d0\u662f\u8fdc\u7a0b\u670d\u52a1\u5668\u63d0\u4f9bjstatd\u670d\u52a1\uff09 \u6ce8\uff1ajps\u547d\u4ee4\u6709\u4e2a\u5730\u65b9\u5f88\u4e0d\u597d\uff0c\u4f3c\u4e4e\u53ea\u80fd\u663e\u793a\u5f53\u524d\u7528\u6237\u7684java\u8fdb\u7a0b\uff0c\u8981\u663e\u793a\u5176\u4ed6\u7528\u6237\u7684\u8fd8\u662f\u53ea\u80fd\u7528unix/linux\u7684ps\u547d\u4ee4\u3002","title":"Linux\u5e38\u7528\u547d\u4ee4\u5927\u5168\uff08\u975e\u5e38\u5168\uff01\uff01\uff01\uff09"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/049-ubuntu\u7ed8\u56fe\u8f6f\u4ef6/","text":"**ubuntu**\u7cfb\u7edf\u662f\u4ee5\u684c\u9762\u5e94\u7528\u4e3a\u4e3b\u7684linux\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5177\u6709\u5b9e\u7528\u7684\u754c\u9762\uff0c\u5e76\u4e14\u5b8c\u5168\u514d\u8d39\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u7528\u6237\u4e5f\u5f00\u59cb\u4f7f\u7528ubuntu\u7cfb\u7edf\u3002\u4e0b\u6587\u662fUbuntu\u73af\u5883\u4e0b\u4e5d\u5927\u6700\u4f73**\u7ed8\u56fe\u7a0b\u5e8f**\u63a8\u8350\uff0c\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u8ff0\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u50cfGIMP\u6216\u8005 Krita\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u6ca1\u6709\u5305\u542b\u5728\u5185\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u662f\u5b8c\u5168\u6210\u719f\u7684\u56fe\u50cf\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u7ed8\u56fe\u7a0b\u5e8f;\u56e0\u76ee\u7684\u4e0d\u540c\uff0c\u4e5f\u4e0d\u5305\u6269Scribus\u6216Inkscape\u3002\u672c\u6587\u6982\u8ff0\u4e86 KDE\u548cGNOME\u4e24\u79cd\u73af\u5883\u4e0b\u76849\u79cd\u7b80\u5355\u7ed8\u56fe\u5e94\u7528\u7a0b\u5e8f\u3002 \u8bf7\u5bb9\u5fcd\u6211\u4e11\u964b\u7684\u5c4f\u5e55\u622a\u56fe\uff0c\u9664\u4e86\u77e9\u5f62\u3001\u5706\u548c\u66f2\u7ebf\uff0c\u6211\u4ece\u51fa\u751f\u5230\u73b0\u5728\uff0c\u8fd8\u4ece\u6ca1\u753b\u8fc7\u4efb\u4f55\u4e1c\u897f\u3002 Ubuntu\u7ed8\u56fe\u7a0b\u5e8f1\u3001Kolourpaint Kolourpaint\u662fKDE\u4e0b\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7ed8\u56fe\u7a0b\u5e8f\uff0c\u62e5\u6709\u72ec\u7279\u7684\u7528\u6237\u53cb\u597d\u754c\u9762\uff0c\u652f\u6301\u591a\u79cd\u56fe\u50cf\u683c\u5f0f(\u5305\u62ecPNG\uff0cJPG\uff0cTGA\uff0cPNM\uff0cGIF\uff0cBMP\uff0cXPM\u6216TIFF)\u3002\u5b83\u53ef\u4ee5\u653e\u5927/\u7f29\u5c0f\uff0c\u590d\u5236/\u7c98\u8d34\uff0c\u6253\u5370\u3001\u526a\u88c1\u3001\u65cb\u8f6c\u3001\u5404\u79cd\u6548\u679c\u5e94\u7528(\u5e73\u8861\uff0c\u6d6e\u96d5\uff0c\u67d4\u5316\u4e0e\u9510\u5316)\u3002\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5236\u4f5c\u7b80\u5355\u7ed8\u753b\u6216\u7d20\u63cf\u7684\u5b8c\u7f8e\u5e94\u7528\u7a0b\u5e8f\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Kolourpaint4 sudo apt-get install kolourpaint4 -y Ubuntu\u7ed8\u56fe\u7a0b\u5e8f2\u3001MyPaint MyPaint\u63d0\u4f9b\u4e86\u8bb8\u591a\u529f\u80fd\uff0c\u5176\u754c\u9762\u5728\u7ed8\u56fe\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6709\u51e0\u5206\u72ec\u7279\u3002\u5b83\u6709\u5b9e\u9645\u7684\u5de5\u4f5c\u533a\uff0c\u5e76\u5728\u72ec\u7acb\u7a97\u53e3\u4e2d\u53ef\u9009\u62e9\u81ea\u5b9a\u4e49\u753b\u7b14\u5de5\u5177\u3002\u5b83\u7684\u666e\u901a\u529f\u80fd\u7279\u70b9\u5305\u62ec\u64a4\u6d88\u6216\u91cd\u505a\u3001\u653e\u5927\u6216\u7f29\u5c0f\u3001\u591a\u79cd\u7b14\u5237\u7c7b\u578b\u548c\u591a\u79cd\u6548\u679c\u3002\u5728\u8fd9\u91cc\u8981\u63d0\u5230\u4e24\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u4e8b\u60c5\uff0c\u4e00\u4e2a\u662f\u56fe\u5c42\uff0c\u53e6\u5916\u662f\u7b14\u5237\u7f16\u8f91\u5668\uff0c\u5b83\u80fd\u8ba9\u4f60\u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684\u753b\u7b14\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5MyPaint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f3\u3001mtPaint mtPaint\u662f\u4e00\u6b3e\u5df2\u7ecf\u6210\u719f\u7684\u7ed8\u56fe\u8f6f\u4ef6\uff0c\u5176\u9ed8\u8ba4\u81ea\u5e26\u4e00\u4e2a\u9ed1\u8272\u7684\u80cc\u666f\u3002\u5b83\u63d0\u4f9b\u4e86\u4e13\u7528\u8bbe\u7f6e(\u5982\u663e\u793a/\u9690\u85cf\u5de5\u5177\u680f\uff0c\u5206\u5272\u7a97\u53e3)\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5404\u79cd\u6548\u679c\u3001\u901a\u9053\u6216\u56fe\u5c42\u3002\u867d\u7136\u5b83\u76f8\u5f53\u4e0d\u9519\uff0c\u5e76\u6709\u8bb8\u591a\u9009\u9879\uff0c\u4f46\u5176\u662f\u5426\u9002\u5408\u5b69\u5b50\u4f7f\u7528\u503c\u5f97\u6000\u7591\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5mtpaint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f4\u3001Gnome-paint \u8fd9\u662f\u4e00\u4e2aGNOME\u684c\u9762\u4e0b\u5f88\u7b80\u5355\u7684\u7ed8\u56fe\u5e94\u7528\u7a0b\u5e8f\uff0c\u62e5\u6709\u5178\u578b\u754c\u9762\u548c\u4e00\u4e9b\u5176\u4ed6\u9009\u9879\u3002\u5b83\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u529f\u80fd\u548c\u4e24\u4e2a\u5de5\u5177\u6761\uff1a\u4e00\u4e2a\u662f\u7528\u6765\u9009\u62e9\u5de5\u5177\uff0c\u53e6\u4e00\u4e2a\u7528\u6765\u9009\u62e9\u989c\u8272\u3002\u800c\u63d2\u5165\u6587\u672c\u7684\u529f\u80fd\u5c1a\u672a\u5b9e\u73b0\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Gnome-paint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f5\u3001Gpaint Gpaint\u662f\u53e6\u4e00\u4e2aGNOME\u684c\u9762\u4e0b\u7684\u7b80\u5355\u7ed8\u56fe\u7a0b\u5e8f\uff0c\u7528GTK\u642d\u5efa\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6807\u51c6\u529f\u80fd\u548c\u76f8\u5f53\u591a\u7684\u7279\u6548\uff0c\u5982\u9510\u5316\u3001\u6d6e\u96d5\u3001\u6cb9\u6f06\u6216\u66dd\u5149\u3002\u4f46\u6ca1\u6709\u64a4\u6d88\u529f\u80fd\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Gpaint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f6\u3001Tkpaint Tkpaint\u662f\u4f7f\u7528Tcl/ Tk\u8bed\u8a00\u7f16\u5199\u800c\u6210\u7684\uff0c\u63d0\u4f9b\u9884\u5b9a\u4e49\u5f62\u72b6\u3001\u5404\u79cd\u7ebf\u578b\u3001\u6587\u5b57\u63d2\u5165\u652f\u6301\u4e00\u7ea7\u5176\u4ed6\u7684\u4e00\u4e9b\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u6253\u5f00GIF\u3001PPM\u6216BMP\u683c\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u8f93\u51fa\u56fe\u50cf\u4fdd\u5b58\u4e3aEncapsulated PostScript\u683c\u5f0f\u6216Tcl\u811a\u672c\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Tkpaint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f7\u3001Xpaint XPaint\u662f\u4e00\u4e2a\u76f8\u5f53\u4e0d\u9519\u7684\u7ed8\u56fe\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\u4e00\u4e2aC\u811a\u672c\u7f16\u8f91\u5668\u3001\u5de5\u5177\u7bb1\u3001\u7b14\u5237\u9009\u62e9\u5668\u3001\u5b57\u4f53\u9009\u62e9\u5668\u3001\u989c\u8272\u548c\u56fe\u6848\u7f16\u8f91\u5668\uff0c\u751a\u81f3\u8fd8\u6709\u653e\u5927\u5668\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Xpaint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f8\u3001Tux Paint Tux Paint\u662f\u4e13\u4e3a\u5b69\u5b50\u800c\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u4e86\u666e\u901a\u7ed8\u753b\u5de5\u5177\u548c\u753b\u7b14\u7684\u7b26\u53f7\u6309\u94ae\u3002Tux Paint\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u529f\u80fd\uff1a\u5f53\u4f7f\u7528\u548c\u9009\u62e9\u7ed8\u56fe\u5de5\u5177\u65f6\uff0c\u5b83\u8fd8\u914d\u7f6e\u4e86\u5404\u79cd\u58f0\u97f3\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Tux Paint Ubuntu\u7ed8\u56fe\u7a0b\u5e8f9\u3001Pinta Pinta\u662fGNOME\u4e0b\u7684\u53c8\u4e00\u4e2a\u5f3a\u5927\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u529f\u80fd\u5305\u62ec\u8f93\u5165/\u8f93\u51fa\u3001\u5168\u5c4f\u6a21\u5f0f\u3001\u65cb\u8f6c\u3001\u8c03\u6574\u5927\u5c0f\u3001\u4eae\u5ea6/\u5bf9\u6bd4\u5ea6\u3001\u8272\u76f8/\u9971\u548c\u5ea6\u8bbe\u7f6e\u3001\u753b\u7b14\u5de5\u5177\u3001\u72ec\u7279\u7ed8\u753b\u5de5\u5177\u3002\u9664\u6b64\u4e4b\u5916\uff0cPinta\u8fd8\u63d0\u4f9b\u5404\u79cd\u6548\u679c\u548c\u56fe\u5c42\u3002 \u4f7f\u7528sudo apt-get\u547d\u4ee4\u5b89\u88c5Pinta","title":"049 ubuntu\u7ed8\u56fe\u8f6f\u4ef6"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/050-ubuntu\u4e0bcodeblocks\u5b89\u88c5\u53ca\u6c49\u5316\u6559\u7a0b/","text":"ubuntu\u4e0bcodeblocks\u5b89\u88c5\u53ca\u6c49\u5316\u6559\u7a0b \u4e00\u3001\u5b89\u88c5codeblocks sudo apt-get install codeblocks codeblocks-dev \u4e8c\u3001\u6c49\u5316\u65b9\u6cd5 1\u3001\u4e0b\u8f7d\u4e2d\u6587mo\u5305 \u7b80\u4f53\u4e2d\u6587mo\u5305 2\u3001\u521b\u5efa\u4e2d\u6587\u5305\u76ee\u5f55 cd /usr/share/codeblocks/ sudo mkdir locale cd locale sudo mkdir zh_CN cd zh_CN cp CodeBlocks.mo chmod 777 CodeBlocks.mo \u5927\u529f\u544a\u6210\uff01","title":"050 ubuntu\u4e0bcodeblocks\u5b89\u88c5\u53ca\u6c49\u5316\u6559\u7a0b"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/051-ubuntu\u5b89\u88c5redis\u7684\u65b9\u6cd5/","text":"1.\u5b89\u88c5 sudo apt-get install redis-server 2.\u68c0\u67e5Redis\u670d\u52a1\u5668\u7cfb\u7edf\u8fdb\u7a0b ps -agx|grep redis 3.\u67e5\u770btcp \u8fde\u63a5 netstat -ap | grep 6379 4.\u542f\u52a8\uff1a \u670d\u52a1\uff1a redis-server \u5ba2\u6237\u7aef\uff1a redis-cli 5.\u914d\u7f6e \u4fee\u6539 \u914d\u7f6e\u6587\u4ef6\u5141\u8bb8\u5c40\u57df\u7f51\u5185\u7684\u5176\u4ed6\u7535\u8111\u8fde\u63a5redis \u6587\u4ef6\u4f4d\u7f6e\uff1a/etc/redis/redis.conf \u5982\u679c\u65e0\u6cd5\u7f16\u8f91\u6216\u8005\u65e0\u6cd5\u4fdd\u5b58 \u8bf7\u5148\u4fee\u6539\u6743\u9650","title":"051 ubuntu\u5b89\u88c5redis\u7684\u65b9\u6cd5"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/052-ubuntu18-04\u5378\u8f7dibus\u51fa\u73b0\u767b\u5f55\u5faa\u73af\u95ee\u9898,\u771f\u662f\u4ec0\u4e48\u4eba\u90fd\u51fa\u6765\u5199\u535a\u5ba2/","text":"\u53c2\u8003\u7684\u5c31\u662f\u8fd9\u4f4d\u4e0d\u8d1f\u8d23\u4efb\u7684\u535a\u4e3b\u5199\u7684\u6587\u7ae0# [\u7cfb\u7edf\u8f6f\u4ef6]Ubuntu 18.04 LTS \u5b89\u88c5 \u641c\u72d7\u8f93\u5165\u6cd5\uff0c\u8c37\u6b4c\u62fc\u97f3 \u5c3d\u7ba1\u81ea\u5df1\u4e5f\u6ca1\u770b\u6e05\u695a\u76f4\u63a5\u6572\u5f97\u547d\u4ee4,\u4f46\u662f\u5199\u4e2a\u535a\u5ba2\u4e0d\u6e05\u4e0d\u695a\u7684,\u4ec0\u4e48\u73a9\u610f\u554a!!! \u5982\u679c\u81ea\u5df1\u4e0d\u5c0f\u5fc3\u5378\u8f7d\u4e86ibus,\u51fa\u73b0\u4e86\u5faa\u73af\u767b\u5f55\u7684\u95ee\u9898 \u8fdb\u5165\u5230tty\u754c\u9762: Ctrl+Shift+F2 \u8fd9\u91cc\u7684\u547d\u4ee4\u4e0d\u540c\u7684\u7248\u672c\u4e0d\u662f\u5f88\u4e00\u6837\u81ea\u5df1\u67e5\u8be2\u4e00\u4e0b \u7136\u540e\u91cd\u65b0\u5b89\u88c5ibus\u5c31\u597d\u4e86 sudo apt-get install ibus \u5982\u679c\u4f1a\u51fa\u73b0\u95ee\u9898\u8bf7\u8be6\u7ec6\u7684\u6307\u660e\u80fd\u6b7b\u554a!","title":"052 ubuntu18-04\u5378\u8f7dibus\u51fa\u73b0\u767b\u5f55\u5faa\u73af\u95ee\u9898,\u771f\u662f\u4ec0\u4e48\u4eba\u90fd\u51fa\u6765\u5199\u535a\u5ba2"},{"location":"ubuntu\u7cfb\u7edf\u7684\u4f7f\u7528/053-ubuntu18-04\u5b89\u88c5\u641c\u72d7\u8f93\u5165\u6cd5/","text":"\u5b89\u88c5 fcitx \u8f93\u5165\u6cd5\u914d\u7f6e\u6846\u67b6 sudo apt install fcitx-bin fcitx-table \u7136\u540e\u6253\u5f00\u8bbe\u7f6e\u4e2d\u5fc3\uff0c \u9009\u4e2d \u201c\u533a\u57df\u548c\u8bed\u8a00\u201d > \u7ba1\u7406\u5df2\u5b89\u88c5\u7684\u8bed\u8a00\uff08\u4f1a\u63d0\u793a\u662f\u5426\u5b89\u88c5ibus\u7684\u8f93\u5165\u6cd5\uff0c\u8fd9\u91cc\u9009\u62e9\u201c\u7a0d\u540e\u63d0\u9192\u201d\uff09 > \u952e\u76d8\u8f93\u5165\u6cd5\u7cfb\u7edf\u4e2d\u9009\u62e9 \u201cfcitx\u201d > \u5e94\u7528\u5230\u6574\u4e2a\u7cfb\u7edf \u8fd9\u4e2a\u65f6\u5019\u91cd\u542f\u7535\u8111\u4e4b\u540e\u5c31\u53ef\u4ee5\u518d\u53f3\u4e0a\u89d2\u770b\u5230 fcitx \u7684\u8bbe\u7f6e\u56fe\u6807\uff1b \u7136\u540e\u5f00\u59cb\u5b89\u88c5\u641c\u72d7\u8f93\u5165\u6cd5\uff0c\u8fdb\u5165 \u5730\u5740\uff1a https://pinyin.sogou.com/linux/ \uff0c \u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u914d\u7f6e\u7684\u8f93\u5165\u6cd5\uff0c \u53cc\u51fb\u5b89\u88c5\u5373\u53ef\u5b89\u88c5\u641c\u72d7\u8f93\u5165\u6cd5 \u8fdb\u884c\u914d\u7f6e\u5c31\u597d\u4e86.","title":"053 ubuntu18-04\u5b89\u88c5\u641c\u72d7\u8f93\u5165\u6cd5"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/001-\u5f00\u673a\u542f\u52a8\u9879\u7684\u5b58\u50a8\u4f4d\u7f6e/","text":"C:\\Users\\31897\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup \u00b6","title":"001-\u5f00\u673a\u542f\u52a8\u9879\u7684\u5b58\u50a8\u4f4d\u7f6e"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/001-\u5f00\u673a\u542f\u52a8\u9879\u7684\u5b58\u50a8\u4f4d\u7f6e/#cusers31897appdataroamingmicrosoftwindowsstart-menuprogramsstartup","text":"","title":"C:\\Users\\31897\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/002-\u51e0\u4f55\u753b\u677f\u8ff7\u4f60\u589e\u5f3a\u7248/","text":"\u4e00\u76f4\u627e\u4e0d\u5230\u51e0\u4f55\u753b\u677f\u7684\u514d\u5b89\u88c5\u7834\u89e3\u7248\u672c,\u6700\u8fd1\u5728B\u7ad9\u4e0a\u770b\u5230\u6709\u4eba\u5728\u5206\u4eab,\u5c31\u52a0\u4e86\u597d\u53cb,\u8981\u4e86\u4e00\u4efd.\u5c3d\u7ba1\u81ea\u5df1\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u7f16\u7a0b\u7684\u5de5\u5177\u751f\u6210\u5404\u79cd\u590d\u6742\u7684\u51fd\u6570\u66f2\u7ebf. \u4f46\u662f\u5bf9\u4e8e\u9ad8\u4e2d\u65f6\u671f\u6570\u5b66\u8001\u5e08\u4f7f\u7528\u51e0\u4f55\u753b\u677f\u968f\u624b\u753b\u4e00\u4e2a\u692d\u5706\u7684\u8f6f\u4ef6\u8fd8\u662f\u5ff5\u5ff5\u4e0d\u5fd8. \u7531\u4e8e\u67d0\u4e2a\u56fd\u5185\u6bd2\u7624\u516c\u53f8\u7684\u5c01\u6740,\u7f51\u4e0a\u7684\u51e0\u4f55\u753b\u677f\u8f6f\u4ef6\u57fa\u672c\u90fd\u662f\u8bd5\u7528\u7248. \u5bf9\u4e8e\u4ee5\u540e\u6559\u80b2\u5b69\u5b50\u57f9\u517b\u51e0\u4f55\u4e0a\u7684\u601d\u7ef4\u80fd\u529b\u4e5f\u4f1a\u65b9\u4fbf\u5f88\u591a.\u6b63\u597d\u81ea\u5df1\u7684\u5916\u7525\u5973\u5feb\u4e24\u5c81\u4e86,\u53ef\u4ee5\u6559\u5979\u73a9\u8fd9\u4e2a.\u54c8\u54c8 \u597d\u7684\u4e1c\u897f\u5c31\u8981\u5206\u4eab\u51fa\u6765,\u9700\u8981\u7684\u52a0\u6211 QQ:1654567419,\u5907\u6ce8\u51e0\u4f55\u753b\u677f\u5c31\u53ef\u4ee5\u4e86. \u4e0d\u76f4\u63a5\u8d34\u767e\u5ea6\u4e91\u7684\u539f\u56e0\u662f\u67d0\u6bd2\u7624\u516c\u53f8\u592a\u6076\u5fc3. \u770b\u7f51\u4e0a\u7684\u7834\u89e3\u7248\u662f\u8fd9\u4e2a\u6837\u5b50\u7684: \u5b89\u88c5\u5b8c\u6210\u7167\u6837\u662f\u672a\u6ce8\u518c\u7684\u8bd5\u7528\u7248\u672c,\u5927\u5bb6\u8fd8\u662f\u4e0d\u8981\u767d\u8d39\u529f\u592b\u53bb\u4e0b\u8f7d\u4e86 \u6211\u597d\u4e0d\u5bb9\u6613\u627e\u6765\u7684\u7248\u672c\u662f\u5f00\u7bb1\u5373\u7528\u7684:","title":"002-\u51e0\u4f55\u753b\u677f\u8ff7\u4f60\u589e\u5f3a\u7248"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/","text":"\u4e0b\u8f7d\u5730\u5740: http://www.pandoc.org/installing.html \u00b6 1\u3001\u5b89\u88c5pandoc2.6 \u00b6 \u6211\u8fd9\u91cc\u7684\u5b89\u88c5\u76842.6\u7248\u672c\uff0c2.3\u7248\u672c\u4e4b\u524d\u4e5f\u6d4b\u8bd5\u8fc7\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002 \u70b9\u51fbInstall\u5f00\u59cb\u5b89\u88c5 \u00b6 \u7b49\u5f85\u5b89\u88c5\u4e2d... \u00b6 \u5b89\u88c5\u6210\u529f\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u662f\u5728C\u76d8\u4e0b\uff0c\u70b9\u51fbFinish \u00b6 \u6211\u4eeccmd\u8fdb\u5165\u547d\u4ee4\u884c\u770b\u770b\u662f\u5426\u5b89\u88c5\u6210\u529f \u00b6 \u8fd9\u91cc\u8f93\u5165 pandoc --version \u56de\u8f66\uff0c\u5982\u679c\u663e\u793a\u5982\u4e0b\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f \u00b6 2\u3001\u901a\u8fc7Typora\u5bfc\u51fapdf\u3001word\u7b49 \u00b6 \u8fd9\u91cc\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u540d\u79f0\u4e3a typora-to-pdf-word.md \u7684markdown\u6587\u4ef6 \u00b6 \u4f7f\u7528Typora\u6253\u5f00 typora-to-pdf-word.md \u6587\u4ef6\u7f16\u8f91\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5199\u4e24\u53e5\u8bdd\uff0c\u653e\u4e86\u4e00\u5f20\u56fe \u00b6 3\u3001\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b \u00b6 \u5bfc\u51fapdf\uff0c\u4f9d\u6b21\u9009\u62e9\u6587\u4ef6-\u5bfc\u51fa-PDF \u00b6 \u4fdd\u5b58 \u00b6 \u6211\u4eec\u6253\u5f00pdf\u770b\u4e0b \u00b6 \u6211\u4eec\u518d\u8bd5\u8bd5\u5bfc\u51faword \u00b6 \u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u5230\u8fbe\u4e86\u8fd9\u91cc\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u5df2\u7ecf\u53ef\u4ee5\u6210\u529f\u7684\u5bfc\u51fapdf\u548cword\u4e86\uff01 \u00b6","title":"004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#httpwwwpandocorginstallinghtml","text":"","title":"\u4e0b\u8f7d\u5730\u5740: http://www.pandoc.org/installing.html"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#1pandoc26","text":"\u6211\u8fd9\u91cc\u7684\u5b89\u88c5\u76842.6\u7248\u672c\uff0c2.3\u7248\u672c\u4e4b\u524d\u4e5f\u6d4b\u8bd5\u8fc7\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002","title":"1\u3001\u5b89\u88c5pandoc2.6"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#install","text":"","title":"\u70b9\u51fbInstall\u5f00\u59cb\u5b89\u88c5"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#_1","text":"","title":"\u7b49\u5f85\u5b89\u88c5\u4e2d..."},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#cfinish","text":"","title":"\u5b89\u88c5\u6210\u529f\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u662f\u5728C\u76d8\u4e0b\uff0c\u70b9\u51fbFinish"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#cmd","text":"","title":"\u6211\u4eeccmd\u8fdb\u5165\u547d\u4ee4\u884c\u770b\u770b\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#pandoc-version","text":"","title":"\u8fd9\u91cc\u8f93\u5165pandoc --version\u56de\u8f66\uff0c\u5982\u679c\u663e\u793a\u5982\u4e0b\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#2typorapdfword","text":"","title":"2\u3001\u901a\u8fc7Typora\u5bfc\u51fapdf\u3001word\u7b49"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#typora-to-pdf-wordmdmarkdown","text":"","title":"\u8fd9\u91cc\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u540d\u79f0\u4e3atypora-to-pdf-word.md\u7684markdown\u6587\u4ef6"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#typoratypora-to-pdf-wordmd","text":"","title":"\u4f7f\u7528Typora\u6253\u5f00typora-to-pdf-word.md\u6587\u4ef6\u7f16\u8f91\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5199\u4e24\u53e5\u8bdd\uff0c\u653e\u4e86\u4e00\u5f20\u56fe"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#3","text":"","title":"3\u3001\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#pdf-pdf","text":"","title":"\u5bfc\u51fapdf\uff0c\u4f9d\u6b21\u9009\u62e9\u6587\u4ef6-\u5bfc\u51fa-PDF"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#_2","text":"","title":"\u4fdd\u5b58"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#pdf","text":"","title":"\u6211\u4eec\u6253\u5f00pdf\u770b\u4e0b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#word","text":"","title":"\u6211\u4eec\u518d\u8bd5\u8bd5\u5bfc\u51faword"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/004-windows\u4e0b\u5b89\u88c5pandoc\u5e76\u901a\u8fc7Typora\u5bfc\u51fapdf\u548cword/#pdfword","text":"","title":"\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u5230\u8fbe\u4e86\u8fd9\u91cc\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u5df2\u7ecf\u53ef\u4ee5\u6210\u529f\u7684\u5bfc\u51fapdf\u548cword\u4e86\uff01"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/005-win10\u5f00\u673a\u63d0\u793a\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e0d\u6b63\u786e\u7684\u89e3\u51b3\u529e\u6cd5/","text":"\u6709\u65f6\u5019\u6211\u4eec\u7528Win10\u7cfb\u7edf\uff0c\u521a\u5f00\u673a\u5c31\u63d0\u793a\u5bc6\u7801\u4e0d\u6b63\u786e\u65e0\u6cd5\u8fdb\u5165\u7cfb\u7edf\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u4eca\u5929\u6211\u4eec\u5c31\u6765\u770b\u4e00\u4e0b\u5177\u4f53\u95ee\u9898\u3002 \u5de5\u5177/\u539f\u6599 Win10 \u65b9\u6cd5/\u6b65\u9aa4 \u51fa\u73b0\u8fd9\u7c7b\u95ee\u9898\u7684\u539f\u56e0\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u4f60\u6709\u53ef\u80fd\u5728\u8bbe\u7f6e\u4e86\u8ba1\u7b97\u673a\u7684\u81ea\u52a8\u767b\u5f55\u540e\uff0c\u53c8\u66f4\u6539\u4e86\u8ba1\u7b97\u673a\u7684\u8d26\u6237\u6216\u8005\u540d\u79f0\u3002 \u89e3\u51b3\u65b9\u6cd5\u5f53\u7136\u662f\u9006\u5176\u9053\u800c\u884c\u3002\u6211\u4eec\u9996\u5148\u8fdb\u5165\u4efb\u4f55\u4e00\u4e2a\u8d26\u6237\u3002 \u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u901a\u8fc7\u5b89\u5168\u6a21\u5f0f\u8fdb\u5165\u3002\u8fdb\u5165\u540e\u6309\u4e0bWin+R\u3002 \u5728\u7a97\u53e3\u4e2d\u8f93\u5165netplwiz\u4ee3\u7801\u3002 \u8fdb\u5165\u540e\u52fe\u9009\u3010\u8981\u4f7f\u7528\u672c\u8ba1\u7b97\u673a\uff0c\u7528\u6237\u5fc5\u987b\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801(E)\u3011\u3002 \u63a5\u4e0b\u6765\u6b63\u5e38\u542f\u52a8\uff0c\u5c31\u53ef\u4ee5\u767b\u9646\u4e86\u3002","title":"005-win10\u5f00\u673a\u63d0\u793a\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e0d\u6b63\u786e\u7684\u89e3\u51b3\u529e\u6cd5"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/","text":"\u8f6c\u8f7d\u81ea \u5e7f\u5dde\u82a6\u82c7\u79d1\u6280App \u56fe\u5e8a\u5de5\u5177\u7684\u4f7f\u7528---PicGo \u00b6 \u6240\u8c13\u56fe\u5e8a\u5de5\u5177\uff0c\u5c31\u662f\u81ea\u52a8\u628a\u672c\u5730\u56fe\u7247\u8f6c\u6362\u6210\u94fe\u63a5\u7684\u4e00\u6b3e\u5de5\u5177\uff0c\u7f51\u7edc\u4e0a\u6709\u5f88\u591a\u56fe\u5e8a\u5de5\u5177\uff0c\u5c31\u76ee\u524d\u4f7f\u7528\u79cd\u7c7b\u800c\u8a00\uff0cPicGo \u7b97\u5f97\u4e0a\u4e00\u6b3e\u6bd4\u8f83\u4f18\u79c0\u7684\u56fe\u5e8a\u5de5\u5177\u3002\u5b83\u662f\u4e00\u6b3e\u7528 Electron-vue \u5f00\u53d1\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u652f\u6301\u5fae\u535a\uff0c\u4e03\u725b\u4e91\uff0c\u817e\u8baf\u4e91COS\uff0c\u53c8\u62cd\u4e91\uff0cGitHub\uff0c\u963f\u91cc\u4e91OSS\uff0cSM.MS\uff0cimgur \u7b498\u79cd\u5e38\u7528\u56fe\u5e8a\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u7b80\u5355\u6613\u7528 \u6211\u4eec\u5230\u4e0b\u9762\u7684\u94fe\u63a5\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c https://github.com/Molunerfinn/PicGo/releases \u6ce8\u610f\uff1a mac \u7cfb\u7edf\u9009\u62e9 dmg \u4e0b\u8f7d\uff0c windwos \u9009\u62e9 *.exe*\u7cfb\u7edf\uff0clinux\u4e0b\u8f7d\u7684\u662fappimage.\u5982\u679c\u4e0d\u662f\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u60f3\u770b\u6e90\u7801\u7684\u8bdd\uff0c\u53ef\u4ee5\u9009\u62e9 git clone https://github.com/Molunerfinn/PicGo.git \u514b\u9686\u5230\u672c\u5730 \u5b89\u88c5\u540e\u5b8c\u6210\u4e4b\u540e\uff0c\u5e73\u65f6\u4f1a\u663e\u793a\u5728\u684c\u9762\u6700\u4e0a\u65b9\uff0c\u70b9\u51fb\u5c0f\u56fe\u6807\uff0c\u9009\u62e9\u6253\u5f00\u8be6\u7ec6\u7a97\u53e3\uff0c\u7a97\u53e3\u770b\u7740\u8fd8\u662f\u975e\u5e38\u6574\u6d01\uff0c\u7f8e\u89c2 GitHub \u00b6 \u5728\u6b64\uff0c\u6211\u4eec\u5c31\u62ff GitHub \u4f5c\u4e3a\u56fe\u5e8a\u6765\u8bf4\u4e00\u4e0b\u5177\u4f53\u7528\u6cd5\u3002\u7531\u4e8e\u5728\u56fd\u5185\u8bbf\u95ee GitHub \u901f\u5ea6\u4e0d\u662f\u5f88\u5feb\uff0c\u4e0d\u8fc7\u5982\u679c\u4f60\u6709\u7279\u6b8a\u5de5\u5177\u6216\u8005\u9002\u5e94\u8fd9\u6837\u7684\u901f\u5ea6\u7684\u8bdd\uff0c\u90a3\u5c31\u4e0d\u59a8\u4f7f\u7528\u4e00\u4e0b\uff0c\u8fd9\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9 \u9996\u5148\u767b\u9646 GitHub \uff0c\u65b0\u5efa\u4e00\u4e2a\u4ed3\u5e93\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5df2\u6709\u4ed3\u5e93 \u524d\u51e0\u5929 GitHub \u4e0a\u5df2\u7ecf\u5f00\u653e\u4f7f\u7528*\u79c1\u6709\u5e93*\uff0c\u6211\u4eec\u53ef\u4ee5\u8086\u65e0\u5fcc\u60ee\u7684\u5728\u4e0a\u9762\u5b58\u653e\u79c1\u4eba\u4fe1\u606f\uff5e\uff5e\uff08PS\uff1a\u60f3\u662f\u8fd9\u6837\u60f3\uff0c\u4e0d\u8fc7\u79c1\u6709\u5e93\u53ea\u6709\u81ea\u5df1\u80fd\u591f\u8bbf\u95ee\uff0c\u56e0\u6b64\u56fe\u7247\u4e0a\u4f20\u4e0a\u53bb\u4e4b\u540e\u662f\u6ca1\u6cd5\u663e\u793a\u6ef4\uff5e\ud83d\udc7b\uff09 \u521b\u5efa\u597d\u540e\uff0c\u9700\u8981\u5728 GitHub \u4e0a\u751f\u6210\u4e00\u4e2a token \u4ee5\u4fbf PicGo \u6765\u64cd\u4f5c\u6211\u4eec\u7684\u4ed3\u5e93\uff0c\u6765\u5230\u4e2a\u4eba\u4e2d\u5fc3\uff0c\u9009\u62e9 Developer settings \u5c31\u80fd\u770b\u5230 Personal access tokens \uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u521b\u5efa\u9700\u8981\u7684 token \u70b9\u51fb Generate new token \u521b\u5efa\u4e00\u4e2a\u65b0 token\uff0c\u9009\u62e9 repo\uff0c\u540c\u65f6\u5b83\u4f1a\u628a\u5305\u542b\u5176\u4e2d\u7684\u90fd\u4f1a\u52fe\u9009\u4e0a\uff0c\u6211\u4eec\u52fe\u9009\u8fd9\u4e9b\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u540e\u62c9\u5230\u6700\u4e0b\u65b9\u70b9\u51fb\u7eff\u8272\u6309\u94ae\uff0cGenerate token \u5373\u53ef\u3002\u4e4b\u540e\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a token \uff0c\u8bb0\u5f97\u590d\u5236\u4fdd\u5b58\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u8fd9\u4e2a token \u53ea\u663e\u793a\u4e00\u6b21\uff01\uff01 \u914d\u7f6e PicGo \u00b6 \u6253\u5f00 PicGo \u9762\u677f\uff0c \u4ed3\u5e93\u540d\u683c\u5f0f\u4e3a \u7528\u6237\u540d/\u4ed3\u5e93\u540d \u5206\u652f\u540d\uff1amaster token\uff1a\u4e0a\u4e00\u4e2a\u54b1\u4eec\u521b\u5efa\u7684token \u7136\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u5b8c\u6210\u7ed1\u5b9a\uff0c\u7136\u540e\u8bbe\u7f6e\u6210\u9ed8\u8ba4\u56fe\u5e8a \u4f7f\u7528 \u00b6 \u63a5\u7740\u6253\u5f00\u4e0a\u4f20\u533a\uff0c\u628a\u9700\u8981\u7684\u56fe\u7247\u62c9\u8fdb\u53bb\uff0c\u8fd9\u91cc\u6709\u4e09\u79cd\u4e0a\u4f20\u56fe\u7247\u7684\u65b9\u5f0f\uff1a menubar \u56fe\u6807\u62d6\u62fd\u4e0a\u4f20\uff08\u4ec5\u652f\u6301 macOS\uff09 \u4e3b\u7a97\u53e3\u62d6\u62fd\u6216\u8005\u9009\u62e9\u56fe\u7247\u4e0a\u4f20 \u526a\u8d34\u677f\u56fe\u7247\uff08\u6700\u5e38\u89c1\u7684\u662f\u622a\u56fe\uff09\u4e0a\u4f20\uff08\u652f\u6301\u81ea\u5b9a\u4e49\u5feb\u6377\u952e\uff09 \u5176\u4e2d\u524d\u4e24\u79cd\u90fd\u662f\u53ef\u4ee5\u660e\u786e\u83b7\u5f97\u6587\u4ef6\u540d\uff0c\u800c\u7b2c\u4e09\u79cd\u65e0\u6cd5\u83b7\u53d6\u6587\u4ef6\u540d\uff08\u56e0\u4e3a\u526a\u8d34\u677f\u91cc\u6709\u4e9b\u56fe\u7247\u6bd4\u5982\u622a\u56fe\u6839\u672c\u5c31\u4e0d\u5b58\u5728\u6587\u4ef6\u540d\uff0c\u8fd9\u4e2a\u95ee\u9898\u540e\u9762\u4f1a\u6709\u89e3\u51b3\u65b9\u6848\ud83d\udc21\uff09 \u63a5\u7740\u4e0a\u4f20\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5230\u76f8\u518c\u5c31\u4f1a\u770b\u5230\u4e0a\u4f20\u6210\u529f\u540e\u7684\u7167\u7247\u4e86\uff0c\u53e6\u5916\u5728\u81ea\u5df1\u7684\u4ed3\u5e93\u91cc\uff0c\u4e5f\u80fd\u591f\u770b\u5230\u4e0a\u4f20\u7684\u56fe\u7247 \u63a5\u7740\u70b9\u51fb\u590d\u5236\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5b83\u4f1a\u7ed9\u6211\u4eec\u590d\u5236\u4e3a Markdown \u7684\u6837\u5f0f\uff0c\u5982\u679c\u4f60\u662f\u5728\u5199 Markdown \u7684\u8bdd\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u518d\u8f6c\u5316\u683c\u5f0f\u4e86\ud83c\udf40 \u5176\u4ed6\u529f\u80fd \u00b6 \u6709\u65f6\u5019\u5728\u4e0a\u4f20\u7167\u7247\u524d\uff0c\u6211\u4eec\u60f3\u91cd\u65b0\u547d\u540d\u8fd9\u4e2a\u56fe\u7247\u540d\u79f0\uff0c\u6216\u8005\u662f\u5728\u4e0a\u4f20\u4e4b\u540e\u6211\u4eec\u9700\u8981\u7ed9\u56fe\u7247\u91cd\u65b0\u547d\u540d\uff0c\u8fd9\u6b3e\u5de5\u5177\u5c31\u53ef\u4ee5\u5feb\u901f\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u8981\uff0c\u652f\u6301\u7f16\u8f91\u76f8\u518c\u7684\u56fe\u7247\u4fe1\u606f\uff0c\u540c\u65f6\u66f4\u597d\u66f4\u65b9\u4fbf\u7684\u7ba1\u7406\u6211\u4eec\u7684\u56fe\u7247\u3002 \u5de5\u5177\u9ed8\u8ba4\u4e0a\u4f20\u524d\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u5982\u679c\u9700\u8981\u5728\u4e0a\u4f20\u524d\u91cd\u65b0\u547d\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u5230 PicGo\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u628a\u4e0a\u4f20\u524d\u91cd\u547d\u540d\u5f00\u5173\u6253\u5f00\u5373\u53ef\u3002 \u4e0e\u6b64\u540c\u65f6\uff0c\u9664\u4e86\u5355\u5f20\u4e0a\u4f20\u5916\uff0c\u5176\u5b9e\u8fd8\u652f\u6301\u591a\u5f20\uff0c\u6279\u91cf\u4e0a\u4f20\uff0c\u53ea\u9700\u8981\u9009\u4e2d\u591a\u4e2a\u6587\u4ef6\uff0c\u5c06\u5176\u5bfc\u5165\uff0c\u6216\u8005\u62d6\u5165\u5176\u4e2d\u4fbf\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u518d\u591a\u7684\u6587\u4ef6\uff0c\u4e5f\u80fd\u591f\u505a\u5230\u4e00\u6b21\u4e0a\u4f20\u5c31\u80fd\u7528\u7684\u6548\u679c\u3002 \u652f\u6301\u67e5\u770b\u5f53\u524d\u4e0a\u4f20\u7684\u56fe\u5e8a \u00b6 \u5982\u679c\u4f60\u8bbe\u7f6e\u4e86\u9664 GitHub \u4ee5\u5916\u7684\u56fe\u5e8a\uff0c\u800c\u4e0d\u6e05\u695a\u5f53\u524d\u4e0a\u4f20\u5230\u4e86\u54ea\u4e2a\u56fe\u5e8a\u65f6\uff0c\u6ca1\u5173\u7cfb\uff0c\u5728\u4e0a\u4f20\u533a\u80fd\u591f\u770b\u5230\u8fd9\u4e2a\u56fe\u5e8a\u662f\u54ea\u4e00\u4e2a \u53e6\u5916\u8fd8\u652f\u6301\u5f00\u673a\u81ea\u52a8\u542f\u52a8\uff0c\u8981\u662f\u4f60\u89c9\u5f97\u6bcf\u6b21\u5f00\u673a\u90fd\u8981\u624b\u52a8\u542f\u52a8 PicGo \u662f\u4e00\u4ef6\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u4e0d\u59a8\u8bd5\u8bd5\u8ba9\u4ed6\u5f00\u673a\u81ea\u542f\u5427\ud83d\ude04\uff5e","title":"006-picgo\u56fe\u5e8a\u4f7f\u7528"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#-picgo","text":"\u6240\u8c13\u56fe\u5e8a\u5de5\u5177\uff0c\u5c31\u662f\u81ea\u52a8\u628a\u672c\u5730\u56fe\u7247\u8f6c\u6362\u6210\u94fe\u63a5\u7684\u4e00\u6b3e\u5de5\u5177\uff0c\u7f51\u7edc\u4e0a\u6709\u5f88\u591a\u56fe\u5e8a\u5de5\u5177\uff0c\u5c31\u76ee\u524d\u4f7f\u7528\u79cd\u7c7b\u800c\u8a00\uff0cPicGo \u7b97\u5f97\u4e0a\u4e00\u6b3e\u6bd4\u8f83\u4f18\u79c0\u7684\u56fe\u5e8a\u5de5\u5177\u3002\u5b83\u662f\u4e00\u6b3e\u7528 Electron-vue \u5f00\u53d1\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u652f\u6301\u5fae\u535a\uff0c\u4e03\u725b\u4e91\uff0c\u817e\u8baf\u4e91COS\uff0c\u53c8\u62cd\u4e91\uff0cGitHub\uff0c\u963f\u91cc\u4e91OSS\uff0cSM.MS\uff0cimgur \u7b498\u79cd\u5e38\u7528\u56fe\u5e8a\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u7b80\u5355\u6613\u7528 \u6211\u4eec\u5230\u4e0b\u9762\u7684\u94fe\u63a5\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c https://github.com/Molunerfinn/PicGo/releases \u6ce8\u610f\uff1a mac \u7cfb\u7edf\u9009\u62e9 dmg \u4e0b\u8f7d\uff0c windwos \u9009\u62e9 *.exe*\u7cfb\u7edf\uff0clinux\u4e0b\u8f7d\u7684\u662fappimage.\u5982\u679c\u4e0d\u662f\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u60f3\u770b\u6e90\u7801\u7684\u8bdd\uff0c\u53ef\u4ee5\u9009\u62e9 git clone https://github.com/Molunerfinn/PicGo.git \u514b\u9686\u5230\u672c\u5730 \u5b89\u88c5\u540e\u5b8c\u6210\u4e4b\u540e\uff0c\u5e73\u65f6\u4f1a\u663e\u793a\u5728\u684c\u9762\u6700\u4e0a\u65b9\uff0c\u70b9\u51fb\u5c0f\u56fe\u6807\uff0c\u9009\u62e9\u6253\u5f00\u8be6\u7ec6\u7a97\u53e3\uff0c\u7a97\u53e3\u770b\u7740\u8fd8\u662f\u975e\u5e38\u6574\u6d01\uff0c\u7f8e\u89c2","title":"\u56fe\u5e8a\u5de5\u5177\u7684\u4f7f\u7528---PicGo"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#github","text":"\u5728\u6b64\uff0c\u6211\u4eec\u5c31\u62ff GitHub \u4f5c\u4e3a\u56fe\u5e8a\u6765\u8bf4\u4e00\u4e0b\u5177\u4f53\u7528\u6cd5\u3002\u7531\u4e8e\u5728\u56fd\u5185\u8bbf\u95ee GitHub \u901f\u5ea6\u4e0d\u662f\u5f88\u5feb\uff0c\u4e0d\u8fc7\u5982\u679c\u4f60\u6709\u7279\u6b8a\u5de5\u5177\u6216\u8005\u9002\u5e94\u8fd9\u6837\u7684\u901f\u5ea6\u7684\u8bdd\uff0c\u90a3\u5c31\u4e0d\u59a8\u4f7f\u7528\u4e00\u4e0b\uff0c\u8fd9\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9 \u9996\u5148\u767b\u9646 GitHub \uff0c\u65b0\u5efa\u4e00\u4e2a\u4ed3\u5e93\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5df2\u6709\u4ed3\u5e93 \u524d\u51e0\u5929 GitHub \u4e0a\u5df2\u7ecf\u5f00\u653e\u4f7f\u7528*\u79c1\u6709\u5e93*\uff0c\u6211\u4eec\u53ef\u4ee5\u8086\u65e0\u5fcc\u60ee\u7684\u5728\u4e0a\u9762\u5b58\u653e\u79c1\u4eba\u4fe1\u606f\uff5e\uff5e\uff08PS\uff1a\u60f3\u662f\u8fd9\u6837\u60f3\uff0c\u4e0d\u8fc7\u79c1\u6709\u5e93\u53ea\u6709\u81ea\u5df1\u80fd\u591f\u8bbf\u95ee\uff0c\u56e0\u6b64\u56fe\u7247\u4e0a\u4f20\u4e0a\u53bb\u4e4b\u540e\u662f\u6ca1\u6cd5\u663e\u793a\u6ef4\uff5e\ud83d\udc7b\uff09 \u521b\u5efa\u597d\u540e\uff0c\u9700\u8981\u5728 GitHub \u4e0a\u751f\u6210\u4e00\u4e2a token \u4ee5\u4fbf PicGo \u6765\u64cd\u4f5c\u6211\u4eec\u7684\u4ed3\u5e93\uff0c\u6765\u5230\u4e2a\u4eba\u4e2d\u5fc3\uff0c\u9009\u62e9 Developer settings \u5c31\u80fd\u770b\u5230 Personal access tokens \uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u521b\u5efa\u9700\u8981\u7684 token \u70b9\u51fb Generate new token \u521b\u5efa\u4e00\u4e2a\u65b0 token\uff0c\u9009\u62e9 repo\uff0c\u540c\u65f6\u5b83\u4f1a\u628a\u5305\u542b\u5176\u4e2d\u7684\u90fd\u4f1a\u52fe\u9009\u4e0a\uff0c\u6211\u4eec\u52fe\u9009\u8fd9\u4e9b\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u540e\u62c9\u5230\u6700\u4e0b\u65b9\u70b9\u51fb\u7eff\u8272\u6309\u94ae\uff0cGenerate token \u5373\u53ef\u3002\u4e4b\u540e\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a token \uff0c\u8bb0\u5f97\u590d\u5236\u4fdd\u5b58\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u8fd9\u4e2a token \u53ea\u663e\u793a\u4e00\u6b21\uff01\uff01","title":"GitHub"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#picgo","text":"\u6253\u5f00 PicGo \u9762\u677f\uff0c \u4ed3\u5e93\u540d\u683c\u5f0f\u4e3a \u7528\u6237\u540d/\u4ed3\u5e93\u540d \u5206\u652f\u540d\uff1amaster token\uff1a\u4e0a\u4e00\u4e2a\u54b1\u4eec\u521b\u5efa\u7684token \u7136\u540e\u70b9\u51fb\u786e\u5b9a\u5373\u53ef\u5b8c\u6210\u7ed1\u5b9a\uff0c\u7136\u540e\u8bbe\u7f6e\u6210\u9ed8\u8ba4\u56fe\u5e8a","title":"\u914d\u7f6e PicGo"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#_1","text":"\u63a5\u7740\u6253\u5f00\u4e0a\u4f20\u533a\uff0c\u628a\u9700\u8981\u7684\u56fe\u7247\u62c9\u8fdb\u53bb\uff0c\u8fd9\u91cc\u6709\u4e09\u79cd\u4e0a\u4f20\u56fe\u7247\u7684\u65b9\u5f0f\uff1a menubar \u56fe\u6807\u62d6\u62fd\u4e0a\u4f20\uff08\u4ec5\u652f\u6301 macOS\uff09 \u4e3b\u7a97\u53e3\u62d6\u62fd\u6216\u8005\u9009\u62e9\u56fe\u7247\u4e0a\u4f20 \u526a\u8d34\u677f\u56fe\u7247\uff08\u6700\u5e38\u89c1\u7684\u662f\u622a\u56fe\uff09\u4e0a\u4f20\uff08\u652f\u6301\u81ea\u5b9a\u4e49\u5feb\u6377\u952e\uff09 \u5176\u4e2d\u524d\u4e24\u79cd\u90fd\u662f\u53ef\u4ee5\u660e\u786e\u83b7\u5f97\u6587\u4ef6\u540d\uff0c\u800c\u7b2c\u4e09\u79cd\u65e0\u6cd5\u83b7\u53d6\u6587\u4ef6\u540d\uff08\u56e0\u4e3a\u526a\u8d34\u677f\u91cc\u6709\u4e9b\u56fe\u7247\u6bd4\u5982\u622a\u56fe\u6839\u672c\u5c31\u4e0d\u5b58\u5728\u6587\u4ef6\u540d\uff0c\u8fd9\u4e2a\u95ee\u9898\u540e\u9762\u4f1a\u6709\u89e3\u51b3\u65b9\u6848\ud83d\udc21\uff09 \u63a5\u7740\u4e0a\u4f20\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5230\u76f8\u518c\u5c31\u4f1a\u770b\u5230\u4e0a\u4f20\u6210\u529f\u540e\u7684\u7167\u7247\u4e86\uff0c\u53e6\u5916\u5728\u81ea\u5df1\u7684\u4ed3\u5e93\u91cc\uff0c\u4e5f\u80fd\u591f\u770b\u5230\u4e0a\u4f20\u7684\u56fe\u7247 \u63a5\u7740\u70b9\u51fb\u590d\u5236\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5b83\u4f1a\u7ed9\u6211\u4eec\u590d\u5236\u4e3a Markdown \u7684\u6837\u5f0f\uff0c\u5982\u679c\u4f60\u662f\u5728\u5199 Markdown \u7684\u8bdd\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u518d\u8f6c\u5316\u683c\u5f0f\u4e86\ud83c\udf40","title":"\u4f7f\u7528"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#_2","text":"\u6709\u65f6\u5019\u5728\u4e0a\u4f20\u7167\u7247\u524d\uff0c\u6211\u4eec\u60f3\u91cd\u65b0\u547d\u540d\u8fd9\u4e2a\u56fe\u7247\u540d\u79f0\uff0c\u6216\u8005\u662f\u5728\u4e0a\u4f20\u4e4b\u540e\u6211\u4eec\u9700\u8981\u7ed9\u56fe\u7247\u91cd\u65b0\u547d\u540d\uff0c\u8fd9\u6b3e\u5de5\u5177\u5c31\u53ef\u4ee5\u5feb\u901f\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u8981\uff0c\u652f\u6301\u7f16\u8f91\u76f8\u518c\u7684\u56fe\u7247\u4fe1\u606f\uff0c\u540c\u65f6\u66f4\u597d\u66f4\u65b9\u4fbf\u7684\u7ba1\u7406\u6211\u4eec\u7684\u56fe\u7247\u3002 \u5de5\u5177\u9ed8\u8ba4\u4e0a\u4f20\u524d\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u5982\u679c\u9700\u8981\u5728\u4e0a\u4f20\u524d\u91cd\u65b0\u547d\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u5230 PicGo\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u628a\u4e0a\u4f20\u524d\u91cd\u547d\u540d\u5f00\u5173\u6253\u5f00\u5373\u53ef\u3002 \u4e0e\u6b64\u540c\u65f6\uff0c\u9664\u4e86\u5355\u5f20\u4e0a\u4f20\u5916\uff0c\u5176\u5b9e\u8fd8\u652f\u6301\u591a\u5f20\uff0c\u6279\u91cf\u4e0a\u4f20\uff0c\u53ea\u9700\u8981\u9009\u4e2d\u591a\u4e2a\u6587\u4ef6\uff0c\u5c06\u5176\u5bfc\u5165\uff0c\u6216\u8005\u62d6\u5165\u5176\u4e2d\u4fbf\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u518d\u591a\u7684\u6587\u4ef6\uff0c\u4e5f\u80fd\u591f\u505a\u5230\u4e00\u6b21\u4e0a\u4f20\u5c31\u80fd\u7528\u7684\u6548\u679c\u3002","title":"\u5176\u4ed6\u529f\u80fd"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/006-picgo\u56fe\u5e8a\u4f7f\u7528/#_3","text":"\u5982\u679c\u4f60\u8bbe\u7f6e\u4e86\u9664 GitHub \u4ee5\u5916\u7684\u56fe\u5e8a\uff0c\u800c\u4e0d\u6e05\u695a\u5f53\u524d\u4e0a\u4f20\u5230\u4e86\u54ea\u4e2a\u56fe\u5e8a\u65f6\uff0c\u6ca1\u5173\u7cfb\uff0c\u5728\u4e0a\u4f20\u533a\u80fd\u591f\u770b\u5230\u8fd9\u4e2a\u56fe\u5e8a\u662f\u54ea\u4e00\u4e2a \u53e6\u5916\u8fd8\u652f\u6301\u5f00\u673a\u81ea\u52a8\u542f\u52a8\uff0c\u8981\u662f\u4f60\u89c9\u5f97\u6bcf\u6b21\u5f00\u673a\u90fd\u8981\u624b\u52a8\u542f\u52a8 PicGo \u662f\u4e00\u4ef6\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u4e0d\u59a8\u8bd5\u8bd5\u8ba9\u4ed6\u5f00\u673a\u81ea\u542f\u5427\ud83d\ude04\uff5e","title":"\u652f\u6301\u67e5\u770b\u5f53\u524d\u4e0a\u4f20\u7684\u56fe\u5e8a"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/","text":"\u9996\u5148\u4e0a\u7f51\u4e0b\u8f7dMathpix Snipping Tool\u3001Typora\u4e0ePandoc\u3002\u4e0b\u8f7d\u5730\u5740\u5982\u4e0b\uff1a \u00b6 https://mathpix.com/ https://www.typora.io/ https://github.com/jgm/pandoc/releases/tag/2.0.5 \u4e0b\u8f7d\u5b8c\u8fdb\u884c\u5b89\u88c5\u5373\u53ef,\u90fd\u662f\u514d\u8d39\u8f6f\u4ef6\u65e0\u9700\u7834\u89e3 \u00b6 \u6982\u5ff5\u53ca\u529f\u80fd\u89e3\u91ca\uff1a \u00b6 Mathpix Snipping Tool: \u00b6 Mathpix Snipping Tool is a Shareware software in the category Miscellaneous developed by Mathpix, Inc. \u8fd9\u4e2a\u8f6f\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aOCR\u8f6f\u4ef6\uff0c\u5c06\u622a\u53d6\u7684\u56fe\u7247\u8f6c\u5316\u6210LaTeX\u7684\u4ee3\u7801 Typora: \u00b6 \u4e00\u6b3e\u7b80\u5355\u9ad8\u6548\u7684Markdown\u7f16\u8f91\u5668\u3002\u8fd9\u91cc\u662f\u6211\u4eec\u7684\u6865\u6881\uff0c\u63a5\u53d7LaTeX\u7684\u4ee3\u7801\uff0c\u8f6c\u5316\u6210\u53ef\u89c6\u5316\u7684\u516c\u5f0f\u3002 Pandoc: \u00b6 A universal document text converter. Typora use it to support file import/export features for several file types including .docx file. \u5b89\u88c5Pandoc\u662f\u4e3a\u4e86\u4ee5\u540e\u53ef\u4ee5\u5bfc\u51fa\u6210Word\uff0c\u5426\u5219\u5c06\u4f1a\u5931\u8d25\u3002 LaTeX \u00b6 \u662f\u4e00\u79cd\u57fa\u4e8eTEX\u7684\u6392\u7248\u7cfb\u7edf\uff0c\u7528\u5b83\u5199\u6570\u5b66\u516c\u5f0f\u975e\u5e38\u6f02\u4eae\u3002 \u4e3e\u4f8b\u6f14\u793a\uff1a \u5047\u8bbe\u8bba\u6587\u4e2d\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u7b80\u5355\u516c\u5f0f\uff1a \u7528Mathpix Snipping Tool\u5f97\u5230\u7684\u8bc6\u522b\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5176\u4e2dConfidence\u662f\u6307\u8f6f\u4ef6\u5bf9\u81ea\u5df1\u7ffb\u8bd1\u7684\u516c\u5f0f\u7684\u6709\u628a\u63e1\u7a0b\u5ea6\u3002 \u590d\u5236\u4e0a\u9762\u90a3\u4e2a\u516c\u5f0f\uff0c\u5c31\u662f\u70b9\u51fb\u4e00\u4e0b\u5c31\u5230\u526a\u8d34\u677f\u4e86\u3002 \u6253\u5f00Typora\u8f6f\u4ef6\uff0c\u6309Ctrl+Shift+M(\u6216\u8005\u8f93\u5165$$\u6572\u56de\u8f66)\uff0c\u8fdb\u5165Math Block \u5728\u4e24\u4e2a$$\u4e4b\u95f4\uff0c\u7c98\u8d34\u521a\u521a\u590d\u5236\u7684LaTeX\u8868\u8fbe\u5f0f\u516c\u5f0f\uff1a \u5728\u5916\u9762\u7a7a\u767d\u5904\u70b9\u51fb\u4e00\u4e0b\uff0c\u5c31\u6709\u4e86\u8fd9\u4e2a\u516c\u5f0f\uff1a \u7136\u540e\uff0c\u5bfc\u51fa\u6210Word\u3002\u8fdb\u5165File->Export->Word \u6253\u5f00\u90a3\u4e2aWord\u4f60\u5c31\u53d1\u73b0\u4e86\u8fd9\u4e2a\u516c\u5f0f\uff1a \u6240\u4ee5\u4f60\u53ef\u4ee5\u5c06\u522b\u4eba\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u7edf\u7edf\u7528Mathpix Snipping Tool\u7ffb\u8bd1\u6210LaTeX\u4ee3\u7801\uff0c\u7136\u540e\u7528Typora\u83b7\u5f97\u53ef\u89c6\u5316\u7684\u516c\u5f0f\uff0c\u6700\u540e\u5bfc\u51fa\u5230Word\u4e2d\uff0c\u518d\u505a\u5fc5\u8981\u7684\u4fee\u6539\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u7684\u7279\u70b9\u662f\u5b9e\u73b0\u4e86LaTeX\u4ee3\u7801\u5230Word\u53ef\u7f16\u8f91\u516c\u5f0f\u7684\u8f6c\u6362\uff0c\u5b9e\u7528\u4ef7\u503c\u9887\u9ad8\u3002 \u5907\u6ce8 \u00b6 \u5982\u679c\u81ea\u5df1\u6709Mathtype(\u6216\u8005AXmath)\u5e76\u80fd\u653e\u5230Word\u91cc\u9762\u5219\u662f\u6700\u597d\u4e0d\u8fc7\u7684\u4e86\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u7528Mathpix Snipping Tool\uff0c\u5f97\u5230LaTeX\u4ee3\u7801\uff0c\u7136\u540e\u5c31\u80fd\u76f4\u63a5\u8f93\u5165\u5230Mathtype\u91cc\u9762\uff0c\u5f97\u5230Word\u4e2d\u53ef\u4ee5\u65b9\u4fbf\u7f16\u8f91\u7684\u516c\u5f0f\u4e86\u3002","title":"007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#mathpix-snipping-tooltyporapandoc","text":"https://mathpix.com/ https://www.typora.io/ https://github.com/jgm/pandoc/releases/tag/2.0.5","title":"\u9996\u5148\u4e0a\u7f51\u4e0b\u8f7dMathpix Snipping Tool\u3001Typora\u4e0ePandoc\u3002\u4e0b\u8f7d\u5730\u5740\u5982\u4e0b\uff1a"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#_1","text":"","title":"\u4e0b\u8f7d\u5b8c\u8fdb\u884c\u5b89\u88c5\u5373\u53ef,\u90fd\u662f\u514d\u8d39\u8f6f\u4ef6\u65e0\u9700\u7834\u89e3"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#_2","text":"","title":"\u6982\u5ff5\u53ca\u529f\u80fd\u89e3\u91ca\uff1a"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#mathpix-snipping-tool","text":"Mathpix Snipping Tool is a Shareware software in the category Miscellaneous developed by Mathpix, Inc. \u8fd9\u4e2a\u8f6f\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aOCR\u8f6f\u4ef6\uff0c\u5c06\u622a\u53d6\u7684\u56fe\u7247\u8f6c\u5316\u6210LaTeX\u7684\u4ee3\u7801","title":"Mathpix Snipping Tool:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#typora","text":"\u4e00\u6b3e\u7b80\u5355\u9ad8\u6548\u7684Markdown\u7f16\u8f91\u5668\u3002\u8fd9\u91cc\u662f\u6211\u4eec\u7684\u6865\u6881\uff0c\u63a5\u53d7LaTeX\u7684\u4ee3\u7801\uff0c\u8f6c\u5316\u6210\u53ef\u89c6\u5316\u7684\u516c\u5f0f\u3002","title":"Typora:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#pandoc","text":"A universal document text converter. Typora use it to support file import/export features for several file types including .docx file. \u5b89\u88c5Pandoc\u662f\u4e3a\u4e86\u4ee5\u540e\u53ef\u4ee5\u5bfc\u51fa\u6210Word\uff0c\u5426\u5219\u5c06\u4f1a\u5931\u8d25\u3002","title":"Pandoc:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#latex","text":"\u662f\u4e00\u79cd\u57fa\u4e8eTEX\u7684\u6392\u7248\u7cfb\u7edf\uff0c\u7528\u5b83\u5199\u6570\u5b66\u516c\u5f0f\u975e\u5e38\u6f02\u4eae\u3002 \u4e3e\u4f8b\u6f14\u793a\uff1a \u5047\u8bbe\u8bba\u6587\u4e2d\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u7b80\u5355\u516c\u5f0f\uff1a \u7528Mathpix Snipping Tool\u5f97\u5230\u7684\u8bc6\u522b\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5176\u4e2dConfidence\u662f\u6307\u8f6f\u4ef6\u5bf9\u81ea\u5df1\u7ffb\u8bd1\u7684\u516c\u5f0f\u7684\u6709\u628a\u63e1\u7a0b\u5ea6\u3002 \u590d\u5236\u4e0a\u9762\u90a3\u4e2a\u516c\u5f0f\uff0c\u5c31\u662f\u70b9\u51fb\u4e00\u4e0b\u5c31\u5230\u526a\u8d34\u677f\u4e86\u3002 \u6253\u5f00Typora\u8f6f\u4ef6\uff0c\u6309Ctrl+Shift+M(\u6216\u8005\u8f93\u5165$$\u6572\u56de\u8f66)\uff0c\u8fdb\u5165Math Block \u5728\u4e24\u4e2a$$\u4e4b\u95f4\uff0c\u7c98\u8d34\u521a\u521a\u590d\u5236\u7684LaTeX\u8868\u8fbe\u5f0f\u516c\u5f0f\uff1a \u5728\u5916\u9762\u7a7a\u767d\u5904\u70b9\u51fb\u4e00\u4e0b\uff0c\u5c31\u6709\u4e86\u8fd9\u4e2a\u516c\u5f0f\uff1a \u7136\u540e\uff0c\u5bfc\u51fa\u6210Word\u3002\u8fdb\u5165File->Export->Word \u6253\u5f00\u90a3\u4e2aWord\u4f60\u5c31\u53d1\u73b0\u4e86\u8fd9\u4e2a\u516c\u5f0f\uff1a \u6240\u4ee5\u4f60\u53ef\u4ee5\u5c06\u522b\u4eba\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u7edf\u7edf\u7528Mathpix Snipping Tool\u7ffb\u8bd1\u6210LaTeX\u4ee3\u7801\uff0c\u7136\u540e\u7528Typora\u83b7\u5f97\u53ef\u89c6\u5316\u7684\u516c\u5f0f\uff0c\u6700\u540e\u5bfc\u51fa\u5230Word\u4e2d\uff0c\u518d\u505a\u5fc5\u8981\u7684\u4fee\u6539\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u7684\u7279\u70b9\u662f\u5b9e\u73b0\u4e86LaTeX\u4ee3\u7801\u5230Word\u53ef\u7f16\u8f91\u516c\u5f0f\u7684\u8f6c\u6362\uff0c\u5b9e\u7528\u4ef7\u503c\u9887\u9ad8\u3002","title":"LaTeX"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/007-Mathpix-Snipping-Tool-+-Typora-+-Pandoc-\u5feb\u901f\u5c06\u5176\u4ed6\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u56fe\u7247\u8f6c\u5316\u6210Word\u53ef\u7f16\u8f91\u683c\u5f0f/#_3","text":"\u5982\u679c\u81ea\u5df1\u6709Mathtype(\u6216\u8005AXmath)\u5e76\u80fd\u653e\u5230Word\u91cc\u9762\u5219\u662f\u6700\u597d\u4e0d\u8fc7\u7684\u4e86\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u7528Mathpix Snipping Tool\uff0c\u5f97\u5230LaTeX\u4ee3\u7801\uff0c\u7136\u540e\u5c31\u80fd\u76f4\u63a5\u8f93\u5165\u5230Mathtype\u91cc\u9762\uff0c\u5f97\u5230Word\u4e2d\u53ef\u4ee5\u65b9\u4fbf\u7f16\u8f91\u7684\u516c\u5f0f\u4e86\u3002","title":"\u5907\u6ce8"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/","text":"\u9996\u5148\u4e0b\u8f7dAxmath\u5b89\u88c5\u5305: \u00b6 \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1Wy1TqK2cmx9yrGU4GDufYw \u63d0\u53d6\u7801\uff1ap2gi \u590d\u5236\u8fd9\u6bb5\u5185\u5bb9\u540e\u6253\u5f00\u767e\u5ea6\u7f51\u76d8\u624b\u673aApp\uff0c\u64cd\u4f5c\u66f4\u65b9\u4fbf\u54e6 \u590d\u5236\u8fd9\u6bb5\u5185\u5bb9\u540e\u6253\u5f00\u767e\u5ea6\u7f51\u76d8\u624b\u673aApp\uff0c\u64cd\u4f5c\u66f4\u65b9\u4fbf\u54e6 \u6ce8\u610f\u5b89\u88c5\u4e4b\u524d\u6700\u597d\u628a\u6240\u6709\u7684office\u8f6f\u4ef6\u5173\u95ed(\u4fdd\u9669\u8d77\u89c1) \u00b6 \u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\u5939\u6709\u4e00\u4e2a\u5b89\u88c5\u5305,\u4e00\u4e2a\u7834\u89e3\u6587\u4ef6: \u00b6 1.\u53cc\u51fbAxMath....\u8fdb\u884c\u5b89\u88c5: \u00b6 2. \u70b9\u51fb\u6211\u63a5\u53d7: \u00b6 3. \u4e09\u4e2a\u5168\u9009,\u7136\u540e\u70b9\u51fb\u4e0b\u4e00\u6b65 \u00b6 4. \u9009\u62e9\u5b89\u88c5\u8def\u5f84,\u70b9\u51fb\u5b89\u88c5 \u00b6 5. \u5b89\u88c5\u5b8c\u6210,\u70b9\u51fb\u5b8c\u6210 \u00b6 6 \u5f39\u51faAxmath\u7684\u754c\u9762\u662f\u8fd9\u6837\u7684:\u5171\u4eab\u7248\u672c(\u6709\u529f\u80fd\u9650\u5236) \u00b6 7 \u4e0b\u9762\u8fdb\u884c\u7834\u89e3,\u5173\u95edaxmath \u00b6 \u5c06creak\u6587\u4ef6\u4e2d\u7684 \u00b6 AxMath\u590d\u5236\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u5b89\u88c5\u8def\u5f84\u4e2d\u8fdb\u884c\u66ff\u6362 \u00b6 \u590d\u5236\u5230\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u66ff\u6362\u542f\u52a8\u7a0b\u5e8f\u5c31\u53ef\u4ee5 8 \u91cd\u65b0\u6253\u5f00Axmath \u00b6 \u53ef\u4ee5\u770b\u5230\u7834\u89e3\u6210\u529f,\u5171\u4eab\u7248\u7684\u6807\u5fd7\u6ca1\u6709\u4e86 9 \u6253\u5f00word \u4e5f\u53ef\u4ee5\u770b\u5230Axmath\u7684\u63d2\u4ef6\u4e86 \u00b6 \u8fd9\u4e2aAxmath\u662f\u652f\u6301\u5c06\u516c\u5f0f\u8f6c\u6362\u4e3alatex\u4ee3\u7801\u7684. \u00b6","title":"010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#axmath","text":"\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1Wy1TqK2cmx9yrGU4GDufYw \u63d0\u53d6\u7801\uff1ap2gi \u590d\u5236\u8fd9\u6bb5\u5185\u5bb9\u540e\u6253\u5f00\u767e\u5ea6\u7f51\u76d8\u624b\u673aApp\uff0c\u64cd\u4f5c\u66f4\u65b9\u4fbf\u54e6 \u590d\u5236\u8fd9\u6bb5\u5185\u5bb9\u540e\u6253\u5f00\u767e\u5ea6\u7f51\u76d8\u624b\u673aApp\uff0c\u64cd\u4f5c\u66f4\u65b9\u4fbf\u54e6","title":"\u9996\u5148\u4e0b\u8f7dAxmath\u5b89\u88c5\u5305:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#office","text":"","title":"\u6ce8\u610f\u5b89\u88c5\u4e4b\u524d\u6700\u597d\u628a\u6240\u6709\u7684office\u8f6f\u4ef6\u5173\u95ed(\u4fdd\u9669\u8d77\u89c1)"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#_1","text":"","title":"\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\u5939\u6709\u4e00\u4e2a\u5b89\u88c5\u5305,\u4e00\u4e2a\u7834\u89e3\u6587\u4ef6:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#1axmath","text":"","title":"1.\u53cc\u51fbAxMath....\u8fdb\u884c\u5b89\u88c5:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#2","text":"","title":"2. \u70b9\u51fb\u6211\u63a5\u53d7:"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#3","text":"","title":"3. \u4e09\u4e2a\u5168\u9009,\u7136\u540e\u70b9\u51fb\u4e0b\u4e00\u6b65"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#4","text":"","title":"4. \u9009\u62e9\u5b89\u88c5\u8def\u5f84,\u70b9\u51fb\u5b89\u88c5"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#5","text":"","title":"5. \u5b89\u88c5\u5b8c\u6210,\u70b9\u51fb\u5b8c\u6210"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#6-axmath","text":"","title":"6 \u5f39\u51faAxmath\u7684\u754c\u9762\u662f\u8fd9\u6837\u7684:\u5171\u4eab\u7248\u672c(\u6709\u529f\u80fd\u9650\u5236)"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#7-axmath","text":"","title":"7 \u4e0b\u9762\u8fdb\u884c\u7834\u89e3,\u5173\u95edaxmath"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#creak","text":"","title":"\u5c06creak\u6587\u4ef6\u4e2d\u7684"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#axmath_1","text":"\u590d\u5236\u5230\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u66ff\u6362\u542f\u52a8\u7a0b\u5e8f\u5c31\u53ef\u4ee5","title":"AxMath\u590d\u5236\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u5b89\u88c5\u8def\u5f84\u4e2d\u8fdb\u884c\u66ff\u6362"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#8-axmath","text":"\u53ef\u4ee5\u770b\u5230\u7834\u89e3\u6210\u529f,\u5171\u4eab\u7248\u7684\u6807\u5fd7\u6ca1\u6709\u4e86","title":"8 \u91cd\u65b0\u6253\u5f00Axmath"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#9-word-axmath","text":"","title":"9 \u6253\u5f00word \u4e5f\u53ef\u4ee5\u770b\u5230Axmath\u7684\u63d2\u4ef6\u4e86"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/010-Axmath\u7834\u89e3\u5b89\u88c5\u4f7f\u7528/#axmathlatex","text":"","title":"\u8fd9\u4e2aAxmath\u662f\u652f\u6301\u5c06\u516c\u5f0f\u8f6c\u6362\u4e3alatex\u4ee3\u7801\u7684."},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/011-Windows-\u65e0\u6cd5\u542f\u52a8print-spooler\u670d\u52a1(\u4f4d\u4e8e\u672c\u5730\u8ba1\u7b97\u673a\u4e0a)\u3002\u9519\u8bef0x800706b/","text":"","title":"011-Windows-\u65e0\u6cd5\u542f\u52a8print-spooler\u670d\u52a1(\u4f4d\u4e8e\u672c\u5730\u8ba1\u7b97\u673a\u4e0a)\u3002\u9519\u8bef0x800706b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/012--win10\u7cfb\u7edf\u600e\u4e48\u7981\u7528defender/","text":"win10\u7cfb\u7edf\u600e\u4e48\u7981\u7528defender\uff1fWindows Defender\u662f\u81ea\u5e26\u6740\u6bd2\u8f6f\u4ef6\uff0c\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u7684\u4f7f\u7528\u8005\u6216\u8005\u4e0d\u559c\u6b22\u5b89\u88c5\u6740\u6bd2\u8f6f\u4ef6\u7684\u7528\u6237\u600e\u4e48\u7981\u7528\u5b83\u6210\u4e3a\u4e86\u96be\u9898\u3002\u5176\u5b9e\u7981\u7528defender\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u4e0b\u9762\u8ddf\u968f\u5c0f\u7f16\u6211\u4e00\u8d77\u5f80\u4e0b\u8fb9\u6765\u770b\u770bwin10\u7cfb\u7edf\u7981\u7528defender\u7684\u65b9\u6cd5\u3002 \u65b9\u6cd5\u4e00\uff0c\u901a\u8fc7Windows Defender\u8bbe\u7f6e\u4e34\u65f6\u5173\u95ed 1\uff0c\u6253\u5f00Windows Defender\u64cd\u4f5c\u754c\u9762\uff0c\u4f9d\u6b21\u6253\u5f00\u201c\u75c5\u6bd2\u548c\u5a01\u80c1\u9632\u62a4\u201d-\u201c\u75c5\u6bd2\u548c\u5a01\u80c1\u9632\u62a4\u8bbe\u7f6e\u201d\uff1b 2\uff0c\u5728\u201c\u75c5\u6bd2\u548c\u5a01\u80c1\u9632\u62a4\u201d\u8bbe\u7f6e\u754c\u9762\uff0c\u5173\u95ed\u201c\u5b9e\u65f6\u4fdd\u62a4\u201d\uff0c\u5173\u95ed\u201c\u4e91\u63d0\u4f9b\u7684\u4fdd\u62a4\u201d\uff0c\u5173\u95ed\u201c\u81ea\u52a8\u63d0\u4ea4\u6837\u672c\u201d\u8fd9\u4e09\u9879\u3002 \u5982\u679c\u6309\u94ae\u662f\u7070\u8272\u65e0\u6cd5\u4fee\u6539\uff0c\u90a3\u4e48\u53ef\u80fd\u4f60\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5df2\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u4e3a\u60a8\u5df2\u7ecf\u5173\u95ed\u4e86\u3002 \u65b9\u6cd52\uff1a\u901a\u8fc7\u4fee\u6539\u6ce8\u518c\u8868\uff0c\u6c38\u4e45\u7981\u7528Windows Defender1\uff0c\u6253\u5f00\u6ce8\u518c\u8868\u7f16\u8f91\u5668\u3002 \u6309 Win +R\u952e\u5165regedit\uff0c\u70b9\u51fb\u786e\u5b9a\u3002 2\uff0c\u5b9a\u4f4d\u9700\u8981\u4fee\u6539\u7684\u6ce8\u518c\u8868\u5176\u8def\u5f84\u5982\u4e0bHKEY_LOCAL_MACHINE SOFTWARE Policies Microsoft Windows Defender\u3002 3\uff0c\u521b\u5efaDWORD\uff0832\u4f4d\uff09\u6ce8\u518c\u8868\u503c\uff1b \u53f3\u4fa7\u7a7a\u767d\u533a\u57df\u53f3\u952e-\u65b0\u5efa-DWORD\uff0832\u4f4d\uff09\u503c\uff0c\u547d\u540d\u5b83\u4e3aDisableAntiSpyware\u3002 \u4fee\u6539\u6570\u503c\u4e3a1\uff0c\u56e00\u4ee3\u8868\u542f\u7528\uff0c1\u4ee3\u8868\u7981\u7528\u3002 \u70b9\u786e\u5b9a\u5173\u95ed\u6ce8\u518c\u8868\u3002 \u91cd\u542f\u7535\u8111Windows Defender\u5df2\u7ecf\u4e0d\u4f1a\u5728\u5f00\u673a\u542f\u52a8\u4e86\u3002 \u65b9\u6cd53\uff1a\u901a\u8fc7\u7ec4\u7b56\u7565\u7981\u7528Windows Defender1\uff0c\u6253\u5f00\u672c\u5730\u7ec4\u7b56\u7565\u7f16\u8f91\u5668\u5e94\u7528\u7a0b\u5e8f \u8fd8\u662f\u6309\u4e0bWin+R\u952e\uff0c\u8f93\u5165gpedit.msc\uff0c\u6253\u5f00\u7ec4\u7b56\u7565\u7a97\u53e3\u3002 2\uff0c\u627e\u5230windows Defender\u9009\u9879\u7ba1\u7406\u6a21\u677f-windows\u7ec4\u4ef6-windows defender\u9632\u75c5\u6bd2\u7a0b\u5e8f\uff0c 3\uff0c\u5728\u53f3\u4fa7\u9009\u62e9\u5173\u95edwindows defender\u9632\u75c5\u6bd2\u7a0b\u5e8f\uff0c\u6253\u5f00 \u9009\u62e9 \u542f\u7528\uff0c\u786e\u5b9a\uff01 \u5982\u679c\u6ca1\u6709\u7acb\u523b\u5173\u95ed\uff0c\u8bf7\u91cd\u542f\u7535\u8111\u6216\u8005\u5237\u65b0\u7b56\u7565\u7ec4\u3002 \u6ce8\u610f\uff1a\u7981\u7528\u7684\u8fd0\u884cWD\uff0c\u542f\u7528\u624d\u662f\u5173\u95ed\u3002 \u4ee5\u4e0a\u5c31\u662fwin10\u7cfb\u7edf\u7981\u7528defender\u7684\u4e09\u79cd\u65b9\u6cd5\uff0c\u9009\u62e9\u4e00\u6b3e\u4f60\u4e60\u60ef\u7684\u65b9\u6cd5\u5173\u95ed\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5230\u5927\u5bb6\u3002","title":"012--win10\u7cfb\u7edf\u600e\u4e48\u7981\u7528defender"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/013-win10\u53d6\u6d88\u5e94\u7528\u5f39\u6846/","text":"win10\u7cfb\u7edf\u6bcf\u6b21\u6253\u5f00\u5e94\u7528\u90fd\u4f1a\u5f39\u51fa\u63d0\u793a\u8ba9\u4eba\u5f88\u4e0d\u8212\u670d\uff0c\u600e\u6837\u53d6\u6d88\u8fd9\u4e9b\u4e0d\u5fc5\u8981\u7684\u63d0\u793a\u5462\uff0c\u8bf7\u770b\u6b65\u9aa4 \u65b9\u6cd5/\u6b65\u9aa4 \u00b6 \u6253\u5f00\u63a7\u5236\u9762\u677f\uff0c\u70b9\u51fb\u7cfb\u7edf\u548c\u5b89\u5168\u8bbe\u7f6e \u70b9\u51fb\u5b89\u5168\u6027\u4e0e\u7ef4\u62a4 \u70b9\u51fb\u66f4\u6539\u7528\u6237\u5e10\u6237\u63a7\u5236\u8bbe\u7f6e \u6700\u540e\u9009\u62e9\u4ece\u4e0d\u901a\u77e5\u6309\u786e\u8ba4\u5c31\u53ef\u4ee5\u5566","title":"013-win10\u53d6\u6d88\u5e94\u7528\u5f39\u6846"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/013-win10\u53d6\u6d88\u5e94\u7528\u5f39\u6846/#_1","text":"\u6253\u5f00\u63a7\u5236\u9762\u677f\uff0c\u70b9\u51fb\u7cfb\u7edf\u548c\u5b89\u5168\u8bbe\u7f6e \u70b9\u51fb\u5b89\u5168\u6027\u4e0e\u7ef4\u62a4 \u70b9\u51fb\u66f4\u6539\u7528\u6237\u5e10\u6237\u63a7\u5236\u8bbe\u7f6e \u6700\u540e\u9009\u62e9\u4ece\u4e0d\u901a\u77e5\u6309\u786e\u8ba4\u5c31\u53ef\u4ee5\u5566","title":"\u65b9\u6cd5/\u6b65\u9aa4"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/014-Win10\u6dfb\u52a0\u53f3\u952e\u6253\u5f00cmd\u548cPowershell\u7a97\u53e3\uff08\u7ba1\u7406\u5458-\u975e\u7ba1\u7406\u5458\uff09/","text":"Win10\u6dfb\u52a0\u53f3\u952e\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u884c \u00b6 \u901a\u8fc7\u6dfb\u52a0\u6ce8\u518c\u8868\u9879,\u5b9e\u73b0\u53f3\u51fb**\u201c\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u884c\u529f\u80fd\u201d** \u6ce8\u518c\u8868\u4f4d\u7f6e\uff1a HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\ win10\u7cfb\u7edf\u7528\u6807\u8bc6\u53f3\u952e\u83dc\u5355\u6253\u5f00\u547d\u4ee4\u884c\u7684\u952e\uff0c\u952e\u503c639bc8\uff08\u5341\u516d\u8fdb\u5236\uff09\uff1a ShowBasedOnVelocityId \uff08\u663e\u793a\u6807\u8bc6\uff09 HideBasedOnVelocityId \uff08\u9690\u85cf\u6807\u8bc6\uff09 \u6548\u679c \u76f4\u63a5\u53f3\u952e\u5373\u53ef\u770b\u5230\u8be5\u9009\u9879\uff0c\u65e0\u9700\u540c\u65f6\u6309\u4f4fshift\u952e\u3002\u5f53\u7136\uff0c\u6309\u4f4f\u53f3\u952e\u4e5f\u80fd\u663e\u793a\uff0c\u5e76\u4e14\u4e0d\u5f71\u54cd\u53f3\u952e\u6253\u5f00powershell\u7684\u529f\u80fd\u3002 \u65b9\u6cd5\u4e00\uff1a \u00b6 \u4e00\u952e\u81ea\u52a8\u5bfc\u5165\u8bbe\u7f6e\u3002\u5c06\u4ee5\u4e0b\u5185\u5bb9\u4fdd\u5b58\u6210reg\u6587\u4ef6\uff0c\u5982a.reg\uff0c\u53cc\u51fb\u8be5\u6587\u4ef6\u81ea\u52a8\u5bfc\u5165\u8bbe\u7f6e\u3002 Windows Registry Editor Version 5 .00 [ HKEY_CLASSES_ROOT \\D irectory \\B ackground \\s hell \\O penCMDHere ] \"ShowBasedOnVelocityId\" = dword:00639bc8 [ HKEY_CLASSES_ROOT \\D irectory \\B ackground \\s hell \\O penCMDHere \\c ommand ] @ = \"cmd.exe /s /k pushd \\\"%V\\\"\" \u65b9\u6cd5\u4e8c\uff1a\u624b\u5de5\u8bbe\u7f6e \u00b6 1. \u6211\u4eec\u7528regedit\u6216\u8005\u5176\u4ed6\u6ce8\u518c\u8868\u7f16\u8f91\u5668\u5b9a\u4f4d\u5230HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\\u5904\uff0c\u53f3\u51fb\u65b0\u5efa\u9879\u201cOpenCMDHere\u201d\uff0c\u5e76\u5728\u8be5\u9879\u4e0b\uff0c\u53f3\u51fb\u65b0\u5efa\u9879\u201ccommand\u201d\u3002 2.\u6211\u4eec\u5728\u53f3\u8fb9OpenCMDHere\u9879\u4e0b\uff0c\u53f3\u51fb\u65b0\u5efaREG_DWORD\u7c7b\u578b\u6574\u6570\u503c\u3002\u8bbe\u7f6e\u952e\u540d\u4e3a\u201cShowBasedOnVelocityId\u201d\uff0c\u952e\u503c\u4e3a\u201c639bc8\u201d\u3002 3.\u8fdb\u5165command\u9879\u4e0b\uff0c\u8bbe\u7f6e\u952e\u503c\u4e3acmd.exe /s /k pushd \"%V\"","title":"014-Win10\u6dfb\u52a0\u53f3\u952e\u6253\u5f00cmd\u548cPowershell\u7a97\u53e3\uff08\u7ba1\u7406\u5458-\u975e\u7ba1\u7406\u5458\uff09"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/014-Win10\u6dfb\u52a0\u53f3\u952e\u6253\u5f00cmd\u548cPowershell\u7a97\u53e3\uff08\u7ba1\u7406\u5458-\u975e\u7ba1\u7406\u5458\uff09/#win10","text":"\u901a\u8fc7\u6dfb\u52a0\u6ce8\u518c\u8868\u9879,\u5b9e\u73b0\u53f3\u51fb**\u201c\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u884c\u529f\u80fd\u201d** \u6ce8\u518c\u8868\u4f4d\u7f6e\uff1a HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\ win10\u7cfb\u7edf\u7528\u6807\u8bc6\u53f3\u952e\u83dc\u5355\u6253\u5f00\u547d\u4ee4\u884c\u7684\u952e\uff0c\u952e\u503c639bc8\uff08\u5341\u516d\u8fdb\u5236\uff09\uff1a ShowBasedOnVelocityId \uff08\u663e\u793a\u6807\u8bc6\uff09 HideBasedOnVelocityId \uff08\u9690\u85cf\u6807\u8bc6\uff09 \u6548\u679c \u76f4\u63a5\u53f3\u952e\u5373\u53ef\u770b\u5230\u8be5\u9009\u9879\uff0c\u65e0\u9700\u540c\u65f6\u6309\u4f4fshift\u952e\u3002\u5f53\u7136\uff0c\u6309\u4f4f\u53f3\u952e\u4e5f\u80fd\u663e\u793a\uff0c\u5e76\u4e14\u4e0d\u5f71\u54cd\u53f3\u952e\u6253\u5f00powershell\u7684\u529f\u80fd\u3002","title":"Win10\u6dfb\u52a0\u53f3\u952e\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u884c"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/014-Win10\u6dfb\u52a0\u53f3\u952e\u6253\u5f00cmd\u548cPowershell\u7a97\u53e3\uff08\u7ba1\u7406\u5458-\u975e\u7ba1\u7406\u5458\uff09/#_1","text":"\u4e00\u952e\u81ea\u52a8\u5bfc\u5165\u8bbe\u7f6e\u3002\u5c06\u4ee5\u4e0b\u5185\u5bb9\u4fdd\u5b58\u6210reg\u6587\u4ef6\uff0c\u5982a.reg\uff0c\u53cc\u51fb\u8be5\u6587\u4ef6\u81ea\u52a8\u5bfc\u5165\u8bbe\u7f6e\u3002 Windows Registry Editor Version 5 .00 [ HKEY_CLASSES_ROOT \\D irectory \\B ackground \\s hell \\O penCMDHere ] \"ShowBasedOnVelocityId\" = dword:00639bc8 [ HKEY_CLASSES_ROOT \\D irectory \\B ackground \\s hell \\O penCMDHere \\c ommand ] @ = \"cmd.exe /s /k pushd \\\"%V\\\"\"","title":"\u65b9\u6cd5\u4e00\uff1a"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/014-Win10\u6dfb\u52a0\u53f3\u952e\u6253\u5f00cmd\u548cPowershell\u7a97\u53e3\uff08\u7ba1\u7406\u5458-\u975e\u7ba1\u7406\u5458\uff09/#_2","text":"1. \u6211\u4eec\u7528regedit\u6216\u8005\u5176\u4ed6\u6ce8\u518c\u8868\u7f16\u8f91\u5668\u5b9a\u4f4d\u5230HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\\u5904\uff0c\u53f3\u51fb\u65b0\u5efa\u9879\u201cOpenCMDHere\u201d\uff0c\u5e76\u5728\u8be5\u9879\u4e0b\uff0c\u53f3\u51fb\u65b0\u5efa\u9879\u201ccommand\u201d\u3002 2.\u6211\u4eec\u5728\u53f3\u8fb9OpenCMDHere\u9879\u4e0b\uff0c\u53f3\u51fb\u65b0\u5efaREG_DWORD\u7c7b\u578b\u6574\u6570\u503c\u3002\u8bbe\u7f6e\u952e\u540d\u4e3a\u201cShowBasedOnVelocityId\u201d\uff0c\u952e\u503c\u4e3a\u201c639bc8\u201d\u3002 3.\u8fdb\u5165command\u9879\u4e0b\uff0c\u8bbe\u7f6e\u952e\u503c\u4e3acmd.exe /s /k pushd \"%V\"","title":"\u65b9\u6cd5\u4e8c\uff1a\u624b\u5de5\u8bbe\u7f6e"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/015-anaconda-\u6dfb\u52a0\u73af\u5883\u53d8\u91cf/","text":"\u603b\u5171\u9700\u8981\u7684\u73af\u5883\u53d8\u91cf \u6dfb\u52a0\u5bf9\u5e94Anaconda\u73af\u5883\u53d8\u91cf\uff1a\uff08\u4ee5\u81ea\u5df1\u7684\u5b89\u88c5\u8def\u5f84\u4e3a\u51c6\uff09 D : \\ Conda D : \\ Conda \\ Scripts D : \\ Conda \\ Library \\ bin","title":"015-anaconda-\u6dfb\u52a0\u73af\u5883\u53d8\u91cf"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/016-Java\u6dfb\u52a0\u73af\u5883\u53d8\u91cf/","text":"1 \u00b6 2 \u00b6","title":"016-Java\u6dfb\u52a0\u73af\u5883\u53d8\u91cf"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/016-Java\u6dfb\u52a0\u73af\u5883\u53d8\u91cf/#1","text":"","title":"1"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/016-Java\u6dfb\u52a0\u73af\u5883\u53d8\u91cf/#2","text":"","title":"2"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/","text":"\u7cfb\u7edf\u7c7b \u00b6 \u65e5\u5386(\u81ea\u5e26) \u90ae\u4ef6(\u81ea\u5e26) \u56de\u6536\u7ad9(\u81ea\u5e26) \u6b64\u7535\u8111(\u81ea\u5e26) Eartrumpet(\u8f6f\u4ef6\u5546\u5e97): \u8c03\u8282\u97f3\u91cf \u706b\u7ed2\u5b89\u5168 (\u5b89\u88c5):\u6700\u597d\u7528\u7684\u5b89\u5168\u8f6f\u4ef6 \u8f6f\u4ef6\u5546\u5e97(\u81ea\u5e26) \u63a7\u5236\u9762\u677f(\u81ea\u5e26) \u7cfb\u7edf\u5de5\u5177 \u00b6 Translucent (\u7eff\u8272,\u8f6f\u4ef6\u5546\u5e97\u4e5f\u6709): \u4efb\u52a1\u680f\u900f\u660e 360\u9a71\u52a8(\u7eff\u8272): \u5b89\u88c5\u7684\u9a71\u52a8\u6bd4\u8f83\u7a33\u5b9a Bandizip(\u5b89\u88c5): \u6700\u597d\u7528\u7684\u89e3\u538b\u7f29\u8f6f\u4ef6 AIDA64(\u7eff\u8272\u7834\u89e3): \u67e5\u770b\u7535\u8111\u7684\u5404\u79cd\u4fe1\u606f Windows10Manager(\u7eff\u8272\u7834\u89e3): \u7528\u4e8e\u7f8e\u5316win10\u7535\u8111,\u6ce8\u518c\u8868\u6e05\u7406 Quicklook(\u5b89\u88c5): \u4f7f\u7528\u7a7a\u683c\u952e\u5bf9\u591a\u79cd\u683c\u5f0f\u8fdb\u884c\u5feb\u901f\u7684\u9884\u89c8 Dism++(\u7eff\u8272): \u7528\u4e8e\u5904\u7406\u7cfb\u7edf\u7684\u4e00\u4e9b\u95ee\u9898\u53ca\u5907\u4efd\u7cfb\u7edf\u7b49,\u5f88\u597d\u7528\u7684\u8f6f\u4ef6 DiskGenius(\u7eff\u8272): \u7528\u4e8e\u786c\u76d8\u7684\u4fe1\u606f\u68c0\u6d4b\u7b49,\u574f\u9053\u68c0\u6d4b,\u78c1\u76d8\u5206\u533a\u7b49\u7b49 IObitUninstall(\u7eff\u8272): \u7528\u4e8e\u5378\u8f7d\u987d\u56fa\u7684\u8f6f\u4ef6,\u6e05\u7406\u5378\u8f7d\u65f6\u7684\u5783\u573e\u53ca\u6ce8\u518c\u8868\u7b49 HWBoxDock(\u7eff\u8272): \u7528\u4e8e\u5728\u4efb\u52a1\u680f\u663e\u793a\u786c\u4ef6\u7684\u6e29\u5ea6\u4fe1\u606f\u7b49 \u706b\u67f4(\u5b89\u88c5) :\u5feb\u901f\u7684\u67e5\u627e\u6587\u4ef6,\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u5c0f\u529f\u80fd\u7b49 TrafficMonitor:(\u7eff\u8272): \u7528\u4e8e\u5728\u4efb\u52a1\u680f\u663e\u793a\u7535\u8111\u7684cpu,\u5185\u5b58\u7b49\u7684\u5360\u7528\u7387,\u4ee5\u53ca\u663e\u793a\u7f51\u901f\u7684\u4fe1\u606f siw-x64(\u7eff\u8272): \u7528\u4e8e\u67e5\u770b\u7535\u8111\u4e00\u4e9b\u7684\u786c\u4ef6\u4fe1\u606f,\u53ef\u4ee5\u8bfb\u53d6\u7535\u8111\u8fde\u63a5\u8fc7\u7684wifi\u5bc6\u7801\u7b49 Rainmeter(\u5b89\u88c5): \u70ab\u9177\u7684\u7528\u4e8e\u7f8e\u5316\u684c\u9762\u7684\u63d2\u4ef6 Duplicate Cleaner Pro(\u5b89\u88c5\u7834\u89e3) :\u7528\u4e8e\u67e5\u627e\u7535\u8111\u4e2d\u7684\u91cd\u590d\u7684\u6587\u4ef6 Groupy(\u5b89\u88c5\u7834\u89e3): \u53ef\u4ee5\u8ba9\u6240\u6709\u7684\u8f6f\u4ef6\u53d8\u6210\u6807\u7b7e FreeFileSync(\u5b89\u88c5\u4e00\u6b21\u4e4b\u540e\u5c31\u662f\u4fbf\u643a\u7248): \u53ef\u4ee5\u7528\u4e8e\u5907\u4efd\u7684\u53cc\u5411\u540c\u6b65,\u4e0d\u7ba1\u5728\u54ea\u4e2a\u76d8\u4e2d\u4fee\u6539\u90fd\u4f1a\u8fdb\u884c\u53cc\u5411\u540c\u6b65,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u89c4\u5219 HideTaskbar(\u7eff\u8272): \u5feb\u6377\u952e\u9690\u85cf\u4efb\u52a1\u680f \u529e\u516c \u00b6 office(\u81ea\u5e26) \u5feb\u901f\u7684\u67e5\u627eoffice\u5e94\u7528 oneNote (\u81ea\u5e26): win10\u81ea\u5e26\u7684\u7b14\u8bb0\u672c Typora(\u5b89\u88c5): \u6700\u597d\u7528\u7684\u514d\u8d39\u7684\u5199makedown\u7684ru\u8f6f\u4ef6(linux,windows,mac) winTop(\u7eff\u8272):\u53ef\u4ee5\u8ba9\u4f60\u60f3\u8ba9\u7684\u8f6f\u4ef6\u59cb\u7ec8\u4fdd\u6301\u7a97\u53e3\u6700\u524d windowsTabs(\u7eff\u8272\u7834\u89e3):\u8ddfGroup\u529f\u80fd\u7c7b\u4f3c\u66f4\u5c0f\u5de7\u4e00\u70b9 Snipaste(\u7eff\u8272):\u5f3a\u5927\u7684\u622a\u56fe\u8f6f\u4ef6,\u53ef\u4ee5\u5c06\u622a\u56fe\u951a\u5b9a\u7684\u529f\u80fd\u5f88\u4e0d\u9519 word2016(\u5b89\u88c5\u7834\u89e3): \u5199\u6587\u6863 Fish(\u5b89\u88c5): \u4e0b\u8f7d\u67d0\u4e9b\u6587\u5e93\u7684\u6587\u6863,pdf\u7248\u672c visio 2016(\u5b89\u88c5\u7834\u89e3): \u753b\u77e2\u91cf\u7684\u6d41\u7a0b\u56fe\u6bd4\u8f83\u597d\u7528,\u4f46\u662f\u5bf9\u516c\u5f0f\u7684\u652f\u6301\u4e0d\u662f\u5f88\u597d PowerPoint\u5b89\u88c5\u7834\u89e3): \u505aPPT,\u88ab\u6c47\u62a5\u6298\u817e\u7684\u8981\u6b7b Excel(\u5b89\u88c5\u7834\u89e3): \u505a\u8868\u683c Axmath(\u5b89\u88c5\u7834\u89e3): \u7c7b\u4f3c\u4e8emathtype ,\u66f4\u597d\u770b\u4e00\u70b9 Mathpix Snipping Tool(\u5b89\u88c5): \u53ef\u4ee5\u8bc6\u522b\u516c\u5f0f\u8f6c\u6362\u6210latex\u5f62\u5f0f\u7684\u516c\u5f0f \u798f\u6615\u9605\u8bfb\u5668(\u5b89\u88c5\u7834\u89e3): \u5bf9\u4e8epdf\u7684\u64cd\u4f5c\u6bd4\u8f83\u7b26\u5408\u56fd\u4eba\u7684\u4e60\u60ef,\u8fd8\u662f\u633a\u8212\u670d\u7684(linux\u7248\u672c\u4e5f\u6709) \u6d4f\u89c8\u7c7b \u00b6 \u7535\u5f71\u548c\u7535\u89c6(\u81ea\u5e26): win10\u81ea\u5e26\u529f\u80fd\u6709\u9650,\u804a\u80dc\u4e8e\u65e0 PotPlayer(\u7eff\u8272): windows\u4e0b\u6700\u597d\u7528\u7684\u89c6\u9891\u64ad\u653e\u5668,\u8fd8\u6709\u5f88\u591a\u597d\u7528\u7684\u529f\u80fd \u9177\u72d7\u97f3\u4e50(\u5b89\u88c5): \u97f3\u4e50\u64ad\u653e\u5668 TIM(\u5b89\u88c5): \u6bd4QQ\u7528\u7740\u7b80\u6d01\u8212\u670d\u4e00\u70b9 \u7f51\u6613\u4e91\u97f3\u4e50(\u5b89\u88c5): \u4ee5\u524d\u8d3c\u559c\u6b22\u7684\u97f3\u4e50\u8f6f\u4ef6,\u73b0\u5728\u7248\u6743\u5c11\u4e86 Honeyview(\u5b89\u88c5): \u56fe\u7247\u64ad\u653e\u5668,\u529f\u80fd\u5f3a\u5927\u7528\u7740\u8212\u670d Microsoft Edge(\u81ea\u5e26): \u5475\u5475,\u5783\u573e\u6d4f\u89c8\u5668 Cent Browser(\u5b89\u88c5): \u5957\u58f3\u7684\u8c37\u6b4c\u6d4f\u89c8\u5668,\u66f4\u7b26\u5408\u56fd\u4eba\u7684\u4e60\u60ef,\u7528\u7740\u6700\u8212\u670d\u7684\u6d4f\u89c8\u5668\u4e86 Firefox(\u5b89\u88c5): \u7528\u4e86\u5f88\u4e45\u7684\u6d4f\u89c8\u5668,\u5185\u5b58\u5360\u7528\u6bd4\u8f83\u5927,\u4f46\u662f\u4e66\u7b7e\u7684\u540c\u6b65\u4e0d\u7528\u7ffb\u5899 \u56fe\u7247\u91cd\u547d\u540d\u5904\u7406(\u7eff\u8272\u7834\u89e3):\u5bf9\u4e8e\u56fe\u7247\u53ef\u4ee5\u8fdb\u884c\u6279\u91cf\u7684\u91cd\u547d\u540d Wechat(\u5b89\u88c5\u6216\u7eff\u8272):\u5fae\u4fe1\u804a\u5929\u5de5\u5177 QQ(\u5b89\u88c5):QQ\u804a\u5929\u5de5\u5177 \u5de8\u5e94\u58c1\u7eb8(\u8f6f\u4ef6\u5546\u5e97): \u529f\u80fd\u5355\u4e00\u7684\u52a8\u6001\u58c1\u7eb8\u8f6f\u4ef6,\u4e0d\u597d\u7528 ManicTime(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272):\u65f6\u95f4\u7ba1\u7406\u5668,\u975e\u5e38\u68d2\u7684\u53ef\u4ee5\u67e5\u770b\u81ea\u5df1\u6bcf\u5929\u5e72\u4e86\u4ec0\u4e48,\u5168\u90fd\u53ef\u4ee5\u8bb0\u5f55 \u706b\u8424\u89c6\u9891\u684c\u9762(\u5b89\u88c5):\u52a8\u6001\u89c6\u9891\u684c\u9762,\u8fd8\u7b97\u86ee\u597d\u7528\u7684,\u5185\u5b58,cpu\u5360\u7528\u5927 Quicker(\u5b89\u88c5): \u642d\u914d\u624b\u673a\u7aef\u4f7f\u7528,\u624b\u673a\u53ef\u4ee5\u63a7\u5236\u5feb\u901f\u5f00\u542f\u7535\u8111\u8f6f\u4ef6 \u5b66\u4e60\u7c7b \u00b6 Endnote(\u4e2d\u79d1\u5927\u7248\u672c\u7eff\u8272): \u6587\u732e\u7ba1\u7406 idea(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272): \u5199\u524d\u7aef\u5f88\u8212\u670d,\u4e3b\u8981\u5199java\u7b49\u7b49(\u6700\u597d\u7528\u7684\u8f6f\u4ef6\u4e86,\u5c31\u662f\u5360\u7528\u5185\u5b58\u5927) sublime text3(\u7eff\u8272\u7834\u89e3):\u53ef\u4ee5\u7f16\u5199\u591a\u79cd\u7684\u6587\u4ef6\u7c7b\u578b,\u542f\u52a8\u5feb,\u5b9a\u5236\u6027\u597d Visual studio code(\u5b89\u88c5):\u5199\u4ee3\u7801\u7684\u795e\u5668,\u4e2a\u4eba\u4e0d\u662f\u5f88\u559c\u6b22 Anaconda Navigater(\u5b89\u88c5):anaconda\u4e0b\u7684\u7ba1\u7406\u865a\u62df\u73af\u5883\u7684\u8f6f\u4ef6,\u4ece\u6765\u4e0d\u7528 Anaconda Prompt(\u5b89\u88c5):anaconda \u7684\u7ec8\u7aef\u547d\u4ee4\u884c\u5de5\u5177,\u4ece\u6765\u4e0d\u7528,\u53ea\u7528CMD Spyder(\u5b89\u88c5):\u7b97\u662f\u5199python\u8fdb\u884c\u8c03\u8bd5\u5f88\u597d\u7528\u7684\u5de5\u5177,\u7c7b\u4f3c\u4e8ematlab\u7684\u53d8\u91cf\u67e5\u770b\u5f88\u8212\u670d Jupyter notebook(\u5b89\u88c5):\u5199python\u8ddfmakedown\u7ed3\u5408\u5728\u4e00\u8d77,\u5bf9\u4e8e\u5c0f\u578b\u4ee3\u7801\u6709\u4e0d\u53ef\u6bd4\u62df\u7684\u8212\u9002 notepad++(\u5b89\u88c5):\u6700\u65b9\u4fbf\u7b80\u6d01\u7684\u6587\u672c\u7c7b\u7684\u7f16\u8f91\u5668 Xmind(\u5b89\u88c5\u7834\u89e3):\u7ed8\u5236\u601d\u7ef4\u5bfc\u56fe,\u5f88\u597d\u7528 Editplus(\u5b89\u88c5\u7834\u89e3):\u5199java\u76f4\u63a5\u8fd0\u884c\u7f16\u8bd1\u6267\u884c\u7684\u8f6f\u4ef6,\u8fc7\u6e21\u4ea7\u54c1,\u7528\u7740\u8fd8\u884c Mobipocketreader(\u7eff\u8272\u7834\u89e3):\u770bMobi\u683c\u5f0f\u7684\u56fe\u4e66\u975e\u5e38\u7684\u65b9\u4fbf GIT GUI(\u5b89\u88c5):git\u56fe\u5f62\u5316\u7684\u7248\u672c\u63a7\u5236\u5668,\u4ece\u6765\u4e0d\u7528 GIT Bash(\u5b89\u88c5): git\u7684\u547d\u4ee4\u884c,\u5176\u5b9e\u4e0d\u662f\u5f88\u597d\u7528,\u6ca1\u6709cmd\u7684\u547d\u4ee4\u884c\u8212\u670d matlab(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272):\u77e9\u9635\u5b9e\u9a8c\u5ba4\u4e0d\u662f\u767d\u5439\u5f97,\u53ea\u662f\u597d\u4e45\u4e0d\u7528\u4e86,\u542f\u52a8\u6162,\u81c3\u80bf \u751f\u4ea7\u529b\u7c7b \u00b6 VMware (\u5b89\u88c5\u7834\u89e3):\u4e13\u95e8\u521b\u5efa\u865a\u62df\u673a\u4f7f\u7528,\u5b8c\u4e86\u4e00\u6bb5\u65f6\u95f4,\u8fd8\u633a\u4e0d\u9519\u7684,\u4f53\u9a8c\u4e86\u597d\u591a\u7684\u7cfb\u7edf \u767e\u5ea6\u7f51\u76d8(\u5b89\u88c5):\u7f51\u76d8\u4e0b\u8f7d\u5de5\u5177 Bandicam(\u5b89\u88c5\u7834\u89e3): \u5f55\u5c4f\u5de5\u5177,\u5f88\u5c0f\u5de7\u529f\u80fd\u5f3a\u5927 pandownload(\u5b89\u88c5):\u767e\u5ea6\u7f51\u76d8\u4e0b\u8f7d\u7684\u66ff\u4ee3\u54c1,\u7834\u89e3\u9650\u901f,\u6709\u65f6\u5019\u8fd8\u662f\u4f1a\u9650\u901f Teamviewr(\u5b89\u88c5):\u8fdc\u7a0b\u63a7\u5236\u5de5\u5177,\u514d\u8d39\u7248\u8fd8\u662f\u591f\u7528\u7684 nodeVPN(\u8f6f\u4ef6\u5546\u5e97):\u514d\u8d39\u7684\u7ffb\u5899200M\u5076\u5c14\u4f7f\u7528,\u4f46\u662f\u4f1a\u5bfc\u81f4\u4ee3\u7406\u95ee\u9898,\u614e\u7528 MobaXterm(\u7eff\u8272\u7834\u89e3):\u6700\u597d\u7528\u7684windows\u4e0b\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u64cd\u4f5c\u7684\u8f6f\u4ef6,\u6ca1\u6709\u4e4b\u4e00\u5c31\u662f\u597d\u7528 adobe \u00b6 Adobe Creative Cloud(\u5b89\u88c5):\u4e13\u95e8\u7528\u6765\u5b89\u88c5adobe\u7684\u4ea7\u54c1 PS2018(\u5b89\u88c5\u7834\u89e3): \u6700\u5f3a\u5927\u7684\u56fe\u7247\u5904\u7406\u5de5\u5177 Pr2018(\u5b89\u88c5\u7834\u89e3): \u7528\u6765\u5904\u7406\u89c6\u9891 AU(\u5b89\u88c5\u7834\u89e3):\u7528\u6765\u5904\u7406\u97f3\u9891 EPUB(\u5b89\u88c5\u7834\u89e3):\u7528\u6765\u89c2\u770bEPUB\u683c\u5f0f\u7684\u56fe\u4e66\u5f88\u65b9\u4fbf","title":"017-\u7b14\u8bb0\u672c\u8f6f\u4ef6"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_1","text":"\u65e5\u5386(\u81ea\u5e26) \u90ae\u4ef6(\u81ea\u5e26) \u56de\u6536\u7ad9(\u81ea\u5e26) \u6b64\u7535\u8111(\u81ea\u5e26) Eartrumpet(\u8f6f\u4ef6\u5546\u5e97): \u8c03\u8282\u97f3\u91cf \u706b\u7ed2\u5b89\u5168 (\u5b89\u88c5):\u6700\u597d\u7528\u7684\u5b89\u5168\u8f6f\u4ef6 \u8f6f\u4ef6\u5546\u5e97(\u81ea\u5e26) \u63a7\u5236\u9762\u677f(\u81ea\u5e26)","title":"\u7cfb\u7edf\u7c7b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_2","text":"Translucent (\u7eff\u8272,\u8f6f\u4ef6\u5546\u5e97\u4e5f\u6709): \u4efb\u52a1\u680f\u900f\u660e 360\u9a71\u52a8(\u7eff\u8272): \u5b89\u88c5\u7684\u9a71\u52a8\u6bd4\u8f83\u7a33\u5b9a Bandizip(\u5b89\u88c5): \u6700\u597d\u7528\u7684\u89e3\u538b\u7f29\u8f6f\u4ef6 AIDA64(\u7eff\u8272\u7834\u89e3): \u67e5\u770b\u7535\u8111\u7684\u5404\u79cd\u4fe1\u606f Windows10Manager(\u7eff\u8272\u7834\u89e3): \u7528\u4e8e\u7f8e\u5316win10\u7535\u8111,\u6ce8\u518c\u8868\u6e05\u7406 Quicklook(\u5b89\u88c5): \u4f7f\u7528\u7a7a\u683c\u952e\u5bf9\u591a\u79cd\u683c\u5f0f\u8fdb\u884c\u5feb\u901f\u7684\u9884\u89c8 Dism++(\u7eff\u8272): \u7528\u4e8e\u5904\u7406\u7cfb\u7edf\u7684\u4e00\u4e9b\u95ee\u9898\u53ca\u5907\u4efd\u7cfb\u7edf\u7b49,\u5f88\u597d\u7528\u7684\u8f6f\u4ef6 DiskGenius(\u7eff\u8272): \u7528\u4e8e\u786c\u76d8\u7684\u4fe1\u606f\u68c0\u6d4b\u7b49,\u574f\u9053\u68c0\u6d4b,\u78c1\u76d8\u5206\u533a\u7b49\u7b49 IObitUninstall(\u7eff\u8272): \u7528\u4e8e\u5378\u8f7d\u987d\u56fa\u7684\u8f6f\u4ef6,\u6e05\u7406\u5378\u8f7d\u65f6\u7684\u5783\u573e\u53ca\u6ce8\u518c\u8868\u7b49 HWBoxDock(\u7eff\u8272): \u7528\u4e8e\u5728\u4efb\u52a1\u680f\u663e\u793a\u786c\u4ef6\u7684\u6e29\u5ea6\u4fe1\u606f\u7b49 \u706b\u67f4(\u5b89\u88c5) :\u5feb\u901f\u7684\u67e5\u627e\u6587\u4ef6,\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u5c0f\u529f\u80fd\u7b49 TrafficMonitor:(\u7eff\u8272): \u7528\u4e8e\u5728\u4efb\u52a1\u680f\u663e\u793a\u7535\u8111\u7684cpu,\u5185\u5b58\u7b49\u7684\u5360\u7528\u7387,\u4ee5\u53ca\u663e\u793a\u7f51\u901f\u7684\u4fe1\u606f siw-x64(\u7eff\u8272): \u7528\u4e8e\u67e5\u770b\u7535\u8111\u4e00\u4e9b\u7684\u786c\u4ef6\u4fe1\u606f,\u53ef\u4ee5\u8bfb\u53d6\u7535\u8111\u8fde\u63a5\u8fc7\u7684wifi\u5bc6\u7801\u7b49 Rainmeter(\u5b89\u88c5): \u70ab\u9177\u7684\u7528\u4e8e\u7f8e\u5316\u684c\u9762\u7684\u63d2\u4ef6 Duplicate Cleaner Pro(\u5b89\u88c5\u7834\u89e3) :\u7528\u4e8e\u67e5\u627e\u7535\u8111\u4e2d\u7684\u91cd\u590d\u7684\u6587\u4ef6 Groupy(\u5b89\u88c5\u7834\u89e3): \u53ef\u4ee5\u8ba9\u6240\u6709\u7684\u8f6f\u4ef6\u53d8\u6210\u6807\u7b7e FreeFileSync(\u5b89\u88c5\u4e00\u6b21\u4e4b\u540e\u5c31\u662f\u4fbf\u643a\u7248): \u53ef\u4ee5\u7528\u4e8e\u5907\u4efd\u7684\u53cc\u5411\u540c\u6b65,\u4e0d\u7ba1\u5728\u54ea\u4e2a\u76d8\u4e2d\u4fee\u6539\u90fd\u4f1a\u8fdb\u884c\u53cc\u5411\u540c\u6b65,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u89c4\u5219 HideTaskbar(\u7eff\u8272): \u5feb\u6377\u952e\u9690\u85cf\u4efb\u52a1\u680f","title":"\u7cfb\u7edf\u5de5\u5177"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_3","text":"office(\u81ea\u5e26) \u5feb\u901f\u7684\u67e5\u627eoffice\u5e94\u7528 oneNote (\u81ea\u5e26): win10\u81ea\u5e26\u7684\u7b14\u8bb0\u672c Typora(\u5b89\u88c5): \u6700\u597d\u7528\u7684\u514d\u8d39\u7684\u5199makedown\u7684ru\u8f6f\u4ef6(linux,windows,mac) winTop(\u7eff\u8272):\u53ef\u4ee5\u8ba9\u4f60\u60f3\u8ba9\u7684\u8f6f\u4ef6\u59cb\u7ec8\u4fdd\u6301\u7a97\u53e3\u6700\u524d windowsTabs(\u7eff\u8272\u7834\u89e3):\u8ddfGroup\u529f\u80fd\u7c7b\u4f3c\u66f4\u5c0f\u5de7\u4e00\u70b9 Snipaste(\u7eff\u8272):\u5f3a\u5927\u7684\u622a\u56fe\u8f6f\u4ef6,\u53ef\u4ee5\u5c06\u622a\u56fe\u951a\u5b9a\u7684\u529f\u80fd\u5f88\u4e0d\u9519 word2016(\u5b89\u88c5\u7834\u89e3): \u5199\u6587\u6863 Fish(\u5b89\u88c5): \u4e0b\u8f7d\u67d0\u4e9b\u6587\u5e93\u7684\u6587\u6863,pdf\u7248\u672c visio 2016(\u5b89\u88c5\u7834\u89e3): \u753b\u77e2\u91cf\u7684\u6d41\u7a0b\u56fe\u6bd4\u8f83\u597d\u7528,\u4f46\u662f\u5bf9\u516c\u5f0f\u7684\u652f\u6301\u4e0d\u662f\u5f88\u597d PowerPoint\u5b89\u88c5\u7834\u89e3): \u505aPPT,\u88ab\u6c47\u62a5\u6298\u817e\u7684\u8981\u6b7b Excel(\u5b89\u88c5\u7834\u89e3): \u505a\u8868\u683c Axmath(\u5b89\u88c5\u7834\u89e3): \u7c7b\u4f3c\u4e8emathtype ,\u66f4\u597d\u770b\u4e00\u70b9 Mathpix Snipping Tool(\u5b89\u88c5): \u53ef\u4ee5\u8bc6\u522b\u516c\u5f0f\u8f6c\u6362\u6210latex\u5f62\u5f0f\u7684\u516c\u5f0f \u798f\u6615\u9605\u8bfb\u5668(\u5b89\u88c5\u7834\u89e3): \u5bf9\u4e8epdf\u7684\u64cd\u4f5c\u6bd4\u8f83\u7b26\u5408\u56fd\u4eba\u7684\u4e60\u60ef,\u8fd8\u662f\u633a\u8212\u670d\u7684(linux\u7248\u672c\u4e5f\u6709)","title":"\u529e\u516c"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_4","text":"\u7535\u5f71\u548c\u7535\u89c6(\u81ea\u5e26): win10\u81ea\u5e26\u529f\u80fd\u6709\u9650,\u804a\u80dc\u4e8e\u65e0 PotPlayer(\u7eff\u8272): windows\u4e0b\u6700\u597d\u7528\u7684\u89c6\u9891\u64ad\u653e\u5668,\u8fd8\u6709\u5f88\u591a\u597d\u7528\u7684\u529f\u80fd \u9177\u72d7\u97f3\u4e50(\u5b89\u88c5): \u97f3\u4e50\u64ad\u653e\u5668 TIM(\u5b89\u88c5): \u6bd4QQ\u7528\u7740\u7b80\u6d01\u8212\u670d\u4e00\u70b9 \u7f51\u6613\u4e91\u97f3\u4e50(\u5b89\u88c5): \u4ee5\u524d\u8d3c\u559c\u6b22\u7684\u97f3\u4e50\u8f6f\u4ef6,\u73b0\u5728\u7248\u6743\u5c11\u4e86 Honeyview(\u5b89\u88c5): \u56fe\u7247\u64ad\u653e\u5668,\u529f\u80fd\u5f3a\u5927\u7528\u7740\u8212\u670d Microsoft Edge(\u81ea\u5e26): \u5475\u5475,\u5783\u573e\u6d4f\u89c8\u5668 Cent Browser(\u5b89\u88c5): \u5957\u58f3\u7684\u8c37\u6b4c\u6d4f\u89c8\u5668,\u66f4\u7b26\u5408\u56fd\u4eba\u7684\u4e60\u60ef,\u7528\u7740\u6700\u8212\u670d\u7684\u6d4f\u89c8\u5668\u4e86 Firefox(\u5b89\u88c5): \u7528\u4e86\u5f88\u4e45\u7684\u6d4f\u89c8\u5668,\u5185\u5b58\u5360\u7528\u6bd4\u8f83\u5927,\u4f46\u662f\u4e66\u7b7e\u7684\u540c\u6b65\u4e0d\u7528\u7ffb\u5899 \u56fe\u7247\u91cd\u547d\u540d\u5904\u7406(\u7eff\u8272\u7834\u89e3):\u5bf9\u4e8e\u56fe\u7247\u53ef\u4ee5\u8fdb\u884c\u6279\u91cf\u7684\u91cd\u547d\u540d Wechat(\u5b89\u88c5\u6216\u7eff\u8272):\u5fae\u4fe1\u804a\u5929\u5de5\u5177 QQ(\u5b89\u88c5):QQ\u804a\u5929\u5de5\u5177 \u5de8\u5e94\u58c1\u7eb8(\u8f6f\u4ef6\u5546\u5e97): \u529f\u80fd\u5355\u4e00\u7684\u52a8\u6001\u58c1\u7eb8\u8f6f\u4ef6,\u4e0d\u597d\u7528 ManicTime(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272):\u65f6\u95f4\u7ba1\u7406\u5668,\u975e\u5e38\u68d2\u7684\u53ef\u4ee5\u67e5\u770b\u81ea\u5df1\u6bcf\u5929\u5e72\u4e86\u4ec0\u4e48,\u5168\u90fd\u53ef\u4ee5\u8bb0\u5f55 \u706b\u8424\u89c6\u9891\u684c\u9762(\u5b89\u88c5):\u52a8\u6001\u89c6\u9891\u684c\u9762,\u8fd8\u7b97\u86ee\u597d\u7528\u7684,\u5185\u5b58,cpu\u5360\u7528\u5927 Quicker(\u5b89\u88c5): \u642d\u914d\u624b\u673a\u7aef\u4f7f\u7528,\u624b\u673a\u53ef\u4ee5\u63a7\u5236\u5feb\u901f\u5f00\u542f\u7535\u8111\u8f6f\u4ef6","title":"\u6d4f\u89c8\u7c7b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_5","text":"Endnote(\u4e2d\u79d1\u5927\u7248\u672c\u7eff\u8272): \u6587\u732e\u7ba1\u7406 idea(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272): \u5199\u524d\u7aef\u5f88\u8212\u670d,\u4e3b\u8981\u5199java\u7b49\u7b49(\u6700\u597d\u7528\u7684\u8f6f\u4ef6\u4e86,\u5c31\u662f\u5360\u7528\u5185\u5b58\u5927) sublime text3(\u7eff\u8272\u7834\u89e3):\u53ef\u4ee5\u7f16\u5199\u591a\u79cd\u7684\u6587\u4ef6\u7c7b\u578b,\u542f\u52a8\u5feb,\u5b9a\u5236\u6027\u597d Visual studio code(\u5b89\u88c5):\u5199\u4ee3\u7801\u7684\u795e\u5668,\u4e2a\u4eba\u4e0d\u662f\u5f88\u559c\u6b22 Anaconda Navigater(\u5b89\u88c5):anaconda\u4e0b\u7684\u7ba1\u7406\u865a\u62df\u73af\u5883\u7684\u8f6f\u4ef6,\u4ece\u6765\u4e0d\u7528 Anaconda Prompt(\u5b89\u88c5):anaconda \u7684\u7ec8\u7aef\u547d\u4ee4\u884c\u5de5\u5177,\u4ece\u6765\u4e0d\u7528,\u53ea\u7528CMD Spyder(\u5b89\u88c5):\u7b97\u662f\u5199python\u8fdb\u884c\u8c03\u8bd5\u5f88\u597d\u7528\u7684\u5de5\u5177,\u7c7b\u4f3c\u4e8ematlab\u7684\u53d8\u91cf\u67e5\u770b\u5f88\u8212\u670d Jupyter notebook(\u5b89\u88c5):\u5199python\u8ddfmakedown\u7ed3\u5408\u5728\u4e00\u8d77,\u5bf9\u4e8e\u5c0f\u578b\u4ee3\u7801\u6709\u4e0d\u53ef\u6bd4\u62df\u7684\u8212\u9002 notepad++(\u5b89\u88c5):\u6700\u65b9\u4fbf\u7b80\u6d01\u7684\u6587\u672c\u7c7b\u7684\u7f16\u8f91\u5668 Xmind(\u5b89\u88c5\u7834\u89e3):\u7ed8\u5236\u601d\u7ef4\u5bfc\u56fe,\u5f88\u597d\u7528 Editplus(\u5b89\u88c5\u7834\u89e3):\u5199java\u76f4\u63a5\u8fd0\u884c\u7f16\u8bd1\u6267\u884c\u7684\u8f6f\u4ef6,\u8fc7\u6e21\u4ea7\u54c1,\u7528\u7740\u8fd8\u884c Mobipocketreader(\u7eff\u8272\u7834\u89e3):\u770bMobi\u683c\u5f0f\u7684\u56fe\u4e66\u975e\u5e38\u7684\u65b9\u4fbf GIT GUI(\u5b89\u88c5):git\u56fe\u5f62\u5316\u7684\u7248\u672c\u63a7\u5236\u5668,\u4ece\u6765\u4e0d\u7528 GIT Bash(\u5b89\u88c5): git\u7684\u547d\u4ee4\u884c,\u5176\u5b9e\u4e0d\u662f\u5f88\u597d\u7528,\u6ca1\u6709cmd\u7684\u547d\u4ee4\u884c\u8212\u670d matlab(\u5b89\u88c5\u7834\u89e3\u53ef\u7eff\u8272):\u77e9\u9635\u5b9e\u9a8c\u5ba4\u4e0d\u662f\u767d\u5439\u5f97,\u53ea\u662f\u597d\u4e45\u4e0d\u7528\u4e86,\u542f\u52a8\u6162,\u81c3\u80bf","title":"\u5b66\u4e60\u7c7b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#_6","text":"VMware (\u5b89\u88c5\u7834\u89e3):\u4e13\u95e8\u521b\u5efa\u865a\u62df\u673a\u4f7f\u7528,\u5b8c\u4e86\u4e00\u6bb5\u65f6\u95f4,\u8fd8\u633a\u4e0d\u9519\u7684,\u4f53\u9a8c\u4e86\u597d\u591a\u7684\u7cfb\u7edf \u767e\u5ea6\u7f51\u76d8(\u5b89\u88c5):\u7f51\u76d8\u4e0b\u8f7d\u5de5\u5177 Bandicam(\u5b89\u88c5\u7834\u89e3): \u5f55\u5c4f\u5de5\u5177,\u5f88\u5c0f\u5de7\u529f\u80fd\u5f3a\u5927 pandownload(\u5b89\u88c5):\u767e\u5ea6\u7f51\u76d8\u4e0b\u8f7d\u7684\u66ff\u4ee3\u54c1,\u7834\u89e3\u9650\u901f,\u6709\u65f6\u5019\u8fd8\u662f\u4f1a\u9650\u901f Teamviewr(\u5b89\u88c5):\u8fdc\u7a0b\u63a7\u5236\u5de5\u5177,\u514d\u8d39\u7248\u8fd8\u662f\u591f\u7528\u7684 nodeVPN(\u8f6f\u4ef6\u5546\u5e97):\u514d\u8d39\u7684\u7ffb\u5899200M\u5076\u5c14\u4f7f\u7528,\u4f46\u662f\u4f1a\u5bfc\u81f4\u4ee3\u7406\u95ee\u9898,\u614e\u7528 MobaXterm(\u7eff\u8272\u7834\u89e3):\u6700\u597d\u7528\u7684windows\u4e0b\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u64cd\u4f5c\u7684\u8f6f\u4ef6,\u6ca1\u6709\u4e4b\u4e00\u5c31\u662f\u597d\u7528","title":"\u751f\u4ea7\u529b\u7c7b"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/017-\u7b14\u8bb0\u672c\u8f6f\u4ef6/#adobe","text":"Adobe Creative Cloud(\u5b89\u88c5):\u4e13\u95e8\u7528\u6765\u5b89\u88c5adobe\u7684\u4ea7\u54c1 PS2018(\u5b89\u88c5\u7834\u89e3): \u6700\u5f3a\u5927\u7684\u56fe\u7247\u5904\u7406\u5de5\u5177 Pr2018(\u5b89\u88c5\u7834\u89e3): \u7528\u6765\u5904\u7406\u89c6\u9891 AU(\u5b89\u88c5\u7834\u89e3):\u7528\u6765\u5904\u7406\u97f3\u9891 EPUB(\u5b89\u88c5\u7834\u89e3):\u7528\u6765\u89c2\u770bEPUB\u683c\u5f0f\u7684\u56fe\u4e66\u5f88\u65b9\u4fbf","title":"adobe"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/018--win10\u5378\u8f7d\u81ea\u5e26\u7684\u5e94\u7528/","text":"\u9996\u5148\uff0c\u6211\u4eec\u5728windows\u684c\u9762\u5de6\u4e0b\u89d2\u5982\u56fe\u6240\u793a\u8f93\u5165\u6846\u8f93\u5165PowerShell \u7136\u540e\u70b9\u51fb\u8fd0\u884cWindows PowerShell\uff0c\u5982\u56fe\u6240\u793a \u5728\u5f39\u51fa\u7684Windows PowerShell\u4e2d\uff0c\u6211\u4eec\u6572\u5165Get-AppxPackage photo | Remove-AppxPackage\uff0c\u5373\u53ef\u5378\u8f7dwin10\u81ea\u5e26\u7167\u7247\u67e5\u770b\u5668 \u7136\u540e\u6211\u4eec\u53f3\u952e\u70b9\u51fb\u4e00\u5f20\u7167\u7247\uff0c\u5373\u53ef\u770b\u5230\u5df2\u7ecf\u6ca1\u6709win10\u81ea\u5e26\u5e94\u7528\u7684\u6253\u5f00\u65b9\u5f0f\u4e86 \u5047\u5982\u6211\u4eec\u60f3\u8981\u5378\u8f7d\u522b\u7684win10\u81ea\u5e26\u5e94\u7528\uff0c\u65b9\u6cd5\u7c7b\u4f3c\u5378\u8f7dwin10\u7167\u7247\u67e5\u770b\u5668\uff0c\u53ea\u8981\u5c06\u547d\u4ee4\u66ff\u6362\u5373\u53ef\u3002 \u90ae\u4ef6\u548c\u65e5\u5386\uff1a Get-AppxPackage *communi* | Remove-AppxPackage \u65b0\u95fb\uff1a Get-AppxPackage *bing* | Remove-AppxPackage \u4eba\u8109\uff1a Get-AppxPackage *people* | Remove-AppxPackage \u7167\u7247\uff1a Get-AppxPackage *photo* | Remove-AppxPackage \u7eb8\u724c\u6e38\u620f\uff1a Get-AppxPackage *solit* | Remove-AppxPackage \u5f55\u97f3\u673a\uff1a Get-AppxPackage *soundrec* | Remove-AppxPackage Xbox\uff1a Get-AppxPackage *xbox* | Remove-AppxPackage OneNote\uff1a Get-AppxPackage *OneNote* | Remove-AppxPackage 3D Builder\uff1a Get-AppxPackage *3d* | Remove-AppxPackage Camera\u76f8\u673a\uff1a Get-AppxPackage *camera* | Remove-AppxPackage Groove\u97f3\u4e50\uff1a Get-AppxPackage *zune* | Remove-AppxPackage","title":"018--win10\u5378\u8f7d\u81ea\u5e26\u7684\u5e94\u7528"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/019-windows1809-\u7cfb\u7edf\u6700\u8fd1\u7684\u66f4\u65b0\u51fa\u73b0\u4e86bug/","text":"\u66f4\u65b0\u5b8c\u6210\u4ee5\u540e\u6ca1\u6709\u663e\u793a\u754c\u9762\uff0c\u53ea\u6709\u4e00\u4e2a\u9f20\u6807\u7684\u663e\u793a\uff0c\u8fd9\u662f\u66f4\u65b0\u540e\u51fa\u73b0\u4e86\u7684\u4e00\u4e2abug\u53ea\u9700\u8981\u4f7f\u7528\u5feb\u6377\u952e\u8fdb\u5165\u4efb\u52a1\u7ba1\u7406\u5668\u9009\u62e9\u6587\u4ef6\u65b0\u5efa\u4efb\u52a1 \u7136\u540e\u5efa\u7acb\u4e00\u4e2aexplorer.exe\u5e76\u4f7f\u7528\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86","title":"019-windows1809-\u7cfb\u7edf\u6700\u8fd1\u7684\u66f4\u65b0\u51fa\u73b0\u4e86bug"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/020-\u5220\u9664\u5173\u673a\u7b49\u6309\u94ae/","text":"\u5f00\u59cb\u2192\u8fd0\u884c\uff0c\u8f93\u5165gpedit.msc\u5e76\u56de\u8f66\uff0c\u6253\u5f00\u201c\u7ec4\u7b56\u7565\u201d","title":"020-\u5220\u9664\u5173\u673a\u7b49\u6309\u94ae"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/021win\u7cfb\u7edf\u65b0\u589e\u65b0\u5efa\u53f3\u952eMarkdown\u6587\u4ef6\u53ca\u9ed8\u8ba4UTF-8\u7f16\u7801\u683c\u5f0f/","text":"\u65b0\u589e\u53f3\u952e \u65b0\u5efaMarkdown\u6587\u4ef6 \u00b6 \u6211\u7684\u7535\u8111\u91cc\u5e38\u7528\u7684Markdown\u7f16\u8f91\u5668\u662f Typora . \u6240\u4ee5, \u9488\u5bf9\u8fd9\u4e2a\u8f6f\u4ef6\u589e\u52a0\u4e86, \u9ed8\u8ba4\u4ee5\u8fd9\u4e2a\u8f6f\u4ef6\u6253\u5f00Markdown\u7684\u8bbe\u7f6e. \u65b0\u5efatxt\u6587\u672c, \u590d\u5236\u8fdb\u4e00\u4e0b\u5185\u5bb9, \u7136\u540e\u4fee\u6539\u540e\u7f00\u4e3a: reg. Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\.md] @=\"TyporaMarkdownFile\" \"PerceivedType\"=\"text\" \"Content Type\"=\"text/plain\" [HKEY_CLASSES_ROOT\\.md\\ShellNew] \"NullFile\"=\"\" \u53cc\u51fbreg\u6587\u4ef6, \u5bfc\u5165\u6ce8\u518c\u8868, \u7136\u540e\u5237\u65b0\u684c\u9762, \u53f3\u952e \u7136\u800c\u6709\u4e2a\u7f3a\u9677, \u65b0\u5efa\u7684Markdown\u6587\u4ef6\u662f\u9ed8\u8ba4ANSI\u7f16\u7801\u683c\u5f0f. \u4f5c\u4e3a\u7a0b\u5e8f\u733f, \u4e00\u822c\u90fd\u5e0c\u671b\u9ed8\u8ba4\u662futf-8\u683c\u5f0f . \u9ed8\u8ba4\u65b0\u5efa UTF-8 \u7f16\u7801Markdown\u6587\u4ef6(\u6211\u5728win10\u4e0b\u8bd5\u4e86\u6ca1\u5fc5\u8981,\u6709\u9700\u8981\u7684\u7ee7\u7eed\u505a\u4e0b\u53bb) \u00b6 \u9996\u5148\u51c6\u5907\u4e00\u4e2autf-8\u7f16\u7801\u7684md\u6587\u4ef6\u6a21\u677f(\u53ef\u4ee5\u7528Notepad++\u65b0\u5efa). Tip: \u6a21\u677f\u91cc\u9762\u6dfb\u52a0\u4e00\u70b9\u5185\u5bb9, \u6211\u8fd9\u91cc\u586b\u5199: --- typora-copy-images-to:media --- Why? \u8fd9\u662f\u56e0\u4e3a, \u6ca1\u6709\u5185\u5bb9\u7684\u7a7a\u6587\u4ef6, \u5373\u4f7f\u8bbe\u7f6eutf-8\u7f16\u7801, \u4e0b\u6b21\u518d\u6253\u5f00, \u4f60\u4f1a\u53d1\u73b0, \u4f9d\u65e7\u662fANSI\u7f16\u7801. \u6240\u4ee5\u7d22\u6027\u52a0\u4e0a\u4e0a\u8ff0\u5185\u5bb9, \u8fd9\u6bb5\u5185\u5bb9\u662f\u6307\u5b9aTypora\u5c06\u7c98\u8d34\u7684\u56fe\u7247\u81ea\u52a8\u4fdd\u5b58\u81f3md\u6587\u4ef6\u540c\u8def\u5f84\u4e0b\u7684 ./media \u6587\u4ef6\u5939\u91cc. \u5c06\u6a21\u677f\u6587\u4ef6\u653e\u5728 C:\\Program Files\\Microsoft Office\\root\\VFS\\Windows\\SHELLNEW \u4e0b(\u6bcf\u4e2a\u7535\u8111\u53ef\u80fd\u4e0d\u4e00\u81f4, \u5e94\u8be5\u5f71\u54cd\u4e0d\u5927, \u603b\u4e4b\u653e\u5230\u4e00\u4e2a\u5730\u65b9\u5373\u53ef). \u8bbe\u7f6e\u6ce8\u518c\u8868 HKEY_CLASSES_ROOT\\.md\\ShellNew \u4e0b\u65b0\u5efa\u5b57\u7b26\u4e32\u503c, \u503c\u8bbe\u8bbe\u4e3a\u524d\u6587\u51c6\u5907\u7684\u6a21\u677f\u6587\u4ef6\u8def\u5f84. \u641e\u5b9a! \u9644\u5f55 \u00b6 \u540c\u7406, \u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u65b0\u5efa\u7684txt\u6587\u4ef6\u4e3aUTF-8\u7f16\u7801\u683c\u5f0f. \u5bf9\u5e94\u7684\u6ce8\u518c\u8868\u8def\u5f84: HKEY_CLASSES_ROOT\\.txt\\ShellNew","title":"021win\u7cfb\u7edf\u65b0\u589e\u65b0\u5efa\u53f3\u952eMarkdown\u6587\u4ef6\u53ca\u9ed8\u8ba4UTF-8\u7f16\u7801\u683c\u5f0f"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/021win\u7cfb\u7edf\u65b0\u589e\u65b0\u5efa\u53f3\u952eMarkdown\u6587\u4ef6\u53ca\u9ed8\u8ba4UTF-8\u7f16\u7801\u683c\u5f0f/#markdown","text":"\u6211\u7684\u7535\u8111\u91cc\u5e38\u7528\u7684Markdown\u7f16\u8f91\u5668\u662f Typora . \u6240\u4ee5, \u9488\u5bf9\u8fd9\u4e2a\u8f6f\u4ef6\u589e\u52a0\u4e86, \u9ed8\u8ba4\u4ee5\u8fd9\u4e2a\u8f6f\u4ef6\u6253\u5f00Markdown\u7684\u8bbe\u7f6e. \u65b0\u5efatxt\u6587\u672c, \u590d\u5236\u8fdb\u4e00\u4e0b\u5185\u5bb9, \u7136\u540e\u4fee\u6539\u540e\u7f00\u4e3a: reg. Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\.md] @=\"TyporaMarkdownFile\" \"PerceivedType\"=\"text\" \"Content Type\"=\"text/plain\" [HKEY_CLASSES_ROOT\\.md\\ShellNew] \"NullFile\"=\"\" \u53cc\u51fbreg\u6587\u4ef6, \u5bfc\u5165\u6ce8\u518c\u8868, \u7136\u540e\u5237\u65b0\u684c\u9762, \u53f3\u952e \u7136\u800c\u6709\u4e2a\u7f3a\u9677, \u65b0\u5efa\u7684Markdown\u6587\u4ef6\u662f\u9ed8\u8ba4ANSI\u7f16\u7801\u683c\u5f0f. \u4f5c\u4e3a\u7a0b\u5e8f\u733f, \u4e00\u822c\u90fd\u5e0c\u671b\u9ed8\u8ba4\u662futf-8\u683c\u5f0f .","title":"\u65b0\u589e\u53f3\u952e\u65b0\u5efaMarkdown\u6587\u4ef6"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/021win\u7cfb\u7edf\u65b0\u589e\u65b0\u5efa\u53f3\u952eMarkdown\u6587\u4ef6\u53ca\u9ed8\u8ba4UTF-8\u7f16\u7801\u683c\u5f0f/#utf-8markdownwin10","text":"\u9996\u5148\u51c6\u5907\u4e00\u4e2autf-8\u7f16\u7801\u7684md\u6587\u4ef6\u6a21\u677f(\u53ef\u4ee5\u7528Notepad++\u65b0\u5efa). Tip: \u6a21\u677f\u91cc\u9762\u6dfb\u52a0\u4e00\u70b9\u5185\u5bb9, \u6211\u8fd9\u91cc\u586b\u5199: --- typora-copy-images-to:media --- Why? \u8fd9\u662f\u56e0\u4e3a, \u6ca1\u6709\u5185\u5bb9\u7684\u7a7a\u6587\u4ef6, \u5373\u4f7f\u8bbe\u7f6eutf-8\u7f16\u7801, \u4e0b\u6b21\u518d\u6253\u5f00, \u4f60\u4f1a\u53d1\u73b0, \u4f9d\u65e7\u662fANSI\u7f16\u7801. \u6240\u4ee5\u7d22\u6027\u52a0\u4e0a\u4e0a\u8ff0\u5185\u5bb9, \u8fd9\u6bb5\u5185\u5bb9\u662f\u6307\u5b9aTypora\u5c06\u7c98\u8d34\u7684\u56fe\u7247\u81ea\u52a8\u4fdd\u5b58\u81f3md\u6587\u4ef6\u540c\u8def\u5f84\u4e0b\u7684 ./media \u6587\u4ef6\u5939\u91cc. \u5c06\u6a21\u677f\u6587\u4ef6\u653e\u5728 C:\\Program Files\\Microsoft Office\\root\\VFS\\Windows\\SHELLNEW \u4e0b(\u6bcf\u4e2a\u7535\u8111\u53ef\u80fd\u4e0d\u4e00\u81f4, \u5e94\u8be5\u5f71\u54cd\u4e0d\u5927, \u603b\u4e4b\u653e\u5230\u4e00\u4e2a\u5730\u65b9\u5373\u53ef). \u8bbe\u7f6e\u6ce8\u518c\u8868 HKEY_CLASSES_ROOT\\.md\\ShellNew \u4e0b\u65b0\u5efa\u5b57\u7b26\u4e32\u503c, \u503c\u8bbe\u8bbe\u4e3a\u524d\u6587\u51c6\u5907\u7684\u6a21\u677f\u6587\u4ef6\u8def\u5f84. \u641e\u5b9a!","title":"\u9ed8\u8ba4\u65b0\u5efaUTF-8\u7f16\u7801Markdown\u6587\u4ef6(\u6211\u5728win10\u4e0b\u8bd5\u4e86\u6ca1\u5fc5\u8981,\u6709\u9700\u8981\u7684\u7ee7\u7eed\u505a\u4e0b\u53bb)"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/021win\u7cfb\u7edf\u65b0\u589e\u65b0\u5efa\u53f3\u952eMarkdown\u6587\u4ef6\u53ca\u9ed8\u8ba4UTF-8\u7f16\u7801\u683c\u5f0f/#_1","text":"\u540c\u7406, \u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u65b0\u5efa\u7684txt\u6587\u4ef6\u4e3aUTF-8\u7f16\u7801\u683c\u5f0f. \u5bf9\u5e94\u7684\u6ce8\u518c\u8868\u8def\u5f84: HKEY_CLASSES_ROOT\\.txt\\ShellNew","title":"\u9644\u5f55"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/022-Vmware\u5b89\u88c5\u62a5\u9519--\u6b64\u5b89\u88c5\u7a0b\u5e8f\u8981\u6c42\u60a8\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u4ee5\u5b8c\u6210Microsoft-VC-Redistributable-\u5b89\u88c5/","text":"\u4e00\u3001\u524d\u8a00 \u00b6 \u7cfb\u7edf\u91cd\u65b0\u8fdb\u884c\u4e86\u5b89\u88c5,\u5728\u5b89\u88c5VMWARE\u65f6\u51fa\u73b0\u4e86\u8be5\u9519\u8bef: \u4e8c\u3001\u89e3\u51b3 \u00b6 \u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff1a \u6253\u5f00\u5982\u4e0b\u94fe\u63a5\uff0c\u4e0b\u8f7dRedistributable\u5e76\u5b89\u88c5\u3002 https://support.microsoft.com/zh-cn/help/2977003/the-latest-supported-visual-c-downloads \u5b89\u88c5\u6210\u529f\u622a\u56fe\u5982\u4e0b\uff1a \u518d\u6b21\u6253\u5f00\uff0c\u5b89\u88c5\u5c31\u6ca1\u95ee\u9898\u4e86","title":"022-Vmware\u5b89\u88c5\u62a5\u9519--\u6b64\u5b89\u88c5\u7a0b\u5e8f\u8981\u6c42\u60a8\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u4ee5\u5b8c\u6210Microsoft-VC-Redistributable-\u5b89\u88c5"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/022-Vmware\u5b89\u88c5\u62a5\u9519--\u6b64\u5b89\u88c5\u7a0b\u5e8f\u8981\u6c42\u60a8\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u4ee5\u5b8c\u6210Microsoft-VC-Redistributable-\u5b89\u88c5/#_1","text":"\u7cfb\u7edf\u91cd\u65b0\u8fdb\u884c\u4e86\u5b89\u88c5,\u5728\u5b89\u88c5VMWARE\u65f6\u51fa\u73b0\u4e86\u8be5\u9519\u8bef:","title":"\u4e00\u3001\u524d\u8a00"},{"location":"windows10\u7cfb\u7edf\u4f7f\u7528/022-Vmware\u5b89\u88c5\u62a5\u9519--\u6b64\u5b89\u88c5\u7a0b\u5e8f\u8981\u6c42\u60a8\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u4ee5\u5b8c\u6210Microsoft-VC-Redistributable-\u5b89\u88c5/#_2","text":"\u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff1a \u6253\u5f00\u5982\u4e0b\u94fe\u63a5\uff0c\u4e0b\u8f7dRedistributable\u5e76\u5b89\u88c5\u3002 https://support.microsoft.com/zh-cn/help/2977003/the-latest-supported-visual-c-downloads \u5b89\u88c5\u6210\u529f\u622a\u56fe\u5982\u4e0b\uff1a \u518d\u6b21\u6253\u5f00\uff0c\u5b89\u88c5\u5c31\u6ca1\u95ee\u9898\u4e86","title":"\u4e8c\u3001\u89e3\u51b3"},{"location":"\u529b\u6263\u5237\u9898/001-\u529b\u6263\u5237\u98981--\u4e24\u6570\u4e4b\u548c/","text":"\u9898\u76ee\u63cf\u8ff0: \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002 \u793a\u4f8b: \u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9 \u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9 \u6240\u4ee5\u8fd4\u56de [0, 1] \u529b\u6263\u4e0d\u7528\u8fdb\u884c\u5b9e\u4f8b\u5316: class Solution ( object ): def twoSum ( self , nums , target ): \"\"\" :type nums: List[int] :type target: int :rtype: List[int] \"\"\" dict1 = {} #\u5c06\u6570\u5b57\u4e0e\u7d22\u5f15\u4e00\u4e00\u5bf9\u5e94 for i , num in enumerate ( nums ): if target - num in dict1 : #\u5982\u679c\u76ee\u6807\u6570\u51cf\u53bbnum\u7684\u6570\u5728\u5b57\u5178\u91cc\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u662f\u7b49\u4e8etarget\u7684 return [ dict1 [ target - num ], i ] #\u8fd4\u56de\u5b58\u653e else : dict1 [ num ] = i \u81ea\u5df1\u5728\u7f16\u8bd1\u5668\u4e2d\u8fdb\u884c\u6d4b\u8bd5: # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 30 09:47:46 2019 @author: zangz \"\"\" class Solution ( object ): def twoSum ( self , nums , target ): \"\"\" :type nums: List[int] :type target: int :rtype: List[int] \"\"\" dict1 = {} #\u5c06\u6570\u5b57\u4e0e\u7d22\u5f15\u4e00\u4e00\u5bf9\u5e94(\u5b58\u653e\u7684\u662f\u90a3\u4e9bfor\u5faa\u73af\u4e2d\u7b5b\u9009\u51fa\u6765\u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u4e0d\u662f\u7684\u6570) for i , num in enumerate ( nums ): if target - num in dict1 : #\u5982\u679c\u76ee\u6807\u6570\u51cf\u53bbnum\u7684\u6570\u5728\u5b57\u5178\u91cc\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u662f\u7b49\u4e8etarget\u7684 return [ dict1 [ target - num ], i ] #\u8fd4\u56de\u5b58\u653e\u7b2c\u4e00\u4e2a\u6570\u53ca\u7b2c\u4e8c\u4e2a\u6570\u7684\u7d22\u5f15 else : dict1 [ num ] = i \"\"\" \u601d\u8def\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u7528\u6765\u5b58\u50a8\u7b2c\u4e00\u4e2a\u6570\u53ca\u5176\u7d22\u5f15,\u8fd9\u4e2a\u5b57\u5178\u5b58\u50a8\u7684\u662f\u4e24\u4e2a\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u4ee5\u53ca\u5176\u4ed6\u76f8\u52a0\u4e0d\u7b49\u4e8etarget\u7684\u6570 \u4f7f\u7528if\u7b5b\u9009\u51fa\u7b2c\u4e8c\u4e2a\u6570,\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6570\u6ca1\u6709\u901a\u8fc7if\u6761\u4ef6,\u56e0\u6b64\u7ecf\u8fc7\u4e86else\u6dfb\u52a0\u5c06\u7b2c\u4e00\u4e2a\u6570\u5b58\u5230\u4e86\u5b57\u5178\u4e2d,\u8fd9\u65f6\u5019\u7b2c\u4e8c\u4e2a\u5b57\u6765\u7684\u65f6\u5019\u5462 \u5c31\u4f1a\u901a\u8fc7\u7b5b\u9009\u7684\u6dfb\u52a0,\u5f97\u5230\u7b2c\u4e8c\u4e2a\u6570\u7684\u7d22\u5f15. \u56e0\u6b64\u8fd4\u56de\u503c\u53ea\u8981\u53d6\u51fa\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u6570\u7684\u5bf9\u5e94\u7684\u7d22\u5f15.\u4ee5\u53ca\u7b2c\u4e8c\u4e2a\u6570\u5bf9\u5e94\u7684\u7d22\u5f15\u5c31\u53ef\u4ee5\u4e86 \u4f46\u662f\u7f3a\u9677\u5c31\u662f\u901a\u8fc7\u8fd4\u56de\u503c,\u53ea\u80fd\u8fd4\u56de\u4e00\u7ec4,\u5982\u679c\u6709\u4e24\u7ec4\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86. \"\"\" #\u4e0b\u9762\u8fdb\u884c\u6d4b\u8bd5 nums = [ 2 , 7 , 11 , 15 ] target = 9 s = Solution () jie_guo = s . twoSum ( nums , target ) print ( jie_guo ) \u6267\u884c\u7ed3\u679c: [ 0 , 1 ] \u4e0b\u9762\u8fdb\u884c\u6539\u8fdb,\u5982\u679c\u6709\u591a\u7ec4\u600e\u4e48\u529e? # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 30 09:47:46 2019 @author: zangz \"\"\" class Solution ( object ): def twoSum ( self , nums , target ): \"\"\" :type nums: List[int] :type target: int :rtype: List[int] \"\"\" dict1 = {} #\u5c06\u6570\u5b57\u4e0e\u7d22\u5f15\u4e00\u4e00\u5bf9\u5e94(\u5b58\u653e\u7684\u662f\u90a3\u4e9bfor\u5faa\u73af\u4e2d\u7b5b\u9009\u51fa\u6765\u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u4e0d\u662f\u7684\u6570) list1 = [] #\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7528\u6765\u5b58\u50a8\u591a\u7ec4\u503c for i , num in enumerate ( nums ): if target - num in dict1 : #\u5982\u679c\u76ee\u6807\u6570\u51cf\u53bbnum\u7684\u6570\u5728\u5b57\u5178\u91cc\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u662f\u7b49\u4e8etarget\u7684 list1 . append ([ dict1 [ target - num ], i ]) #\u8fd4\u56de\u5b58\u653e\u7b2c\u4e00\u4e2a\u6570\u53ca\u7b2c\u4e8c\u4e2a\u6570\u7684\u7d22\u5f15 else : dict1 [ num ] = i return list1 \"\"\" \u5728\u4e0a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u5217\u8868\u7528\u6765\u63a5\u6536\u591a\u7ec4\u7684\u7d22\u5f15,\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u60c5\u51b5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5217\u8868\u8bb0\u5f55\u4e0b\u6765\u4e86 \"\"\" #\u4e0b\u9762\u8fdb\u884c\u6d4b\u8bd5 nums = [ 2 , 7 , 11 , 15 , 3 , 6 , 4 , 5 ] target = 9 s = Solution () jie_guo = s . twoSum ( nums , target ) print ( jie_guo ) \u6267\u884c\u7ed3\u679c: [[ 0 , 1 ], [ 4 , 5 ], [ 6 , 7 ]]","title":"001-\u529b\u6263\u5237\u98981--\u4e24\u6570\u4e4b\u548c"},{"location":"\u529b\u6263\u5237\u9898/002-\u529b\u6263\u5237\u98982-\u4e24\u6570\u76f8\u52a0/","text":"\u9898\u76ee\u63cf\u8ff0: \u7ed9\u51fa\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\u7528\u6765\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5176\u4e2d\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u6570\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002 \u5982\u679c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u8d77\u6765\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u6765\u8868\u793a\u5b83\u4eec\u7684\u548c\u3002 \u60a8\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a(2 -> 4 -> 3) + (5 -> 6 -> 4) \u8f93\u51fa\uff1a7 -> 0 -> 8 \u539f\u56e0\uff1a342 + 465 = 807 # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def addTwoNumbers ( self , l1 , l2 ): \"\"\" :type l1: ListNode :type l2: ListNode :rtype: ListNode \"\"\" def convert ( list ): #3\u5b9a\u4e49\u4e00\u4e2a\u94fe\u8868\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u51fd\u6570 num = '' #\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5b58\u50a8\u6570\u5b57 while list != None : #\u5f53\u94fe\u8868\u6307\u5411\u4e0d\u4e3a\u7a7a\u7684\u65f6\u5019\u53d6\u51fa\u8fd9\u4e2a\u6570\u5b57\u5e76\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u4ee5\u4fbf\u8fdb\u884c\u76f4\u63a5\u8fdb\u884c\u5b57\u7b26\u4e32\u76f8\u52a0 num = str ( list . val ) + num list = list . next #\u5c06list\u6307\u5411list\u7684\u4e0b\u4e00\u4e2a return int ( num ) #\u5c06\u5b57\u7b26\u4e32\u8fd4\u56de\u6210\u6570\u5b57 num1 , num2 = convert ( l1 ), convert ( l2 ) #\u5c06\u4e24\u4e2a\u94fe\u8868\u8f6c\u6362\u6210\u7684\u6570\u5b57\u76f8\u52a0 num = num1 + num2 #\u4e0b\u9762\u5c06\u8f6c\u6362\u597d\u76f8\u52a0\u7684\u6570\u5b57\u8f6c\u5316\u6210\u94fe\u8868 root = ListNode ( num % 10 ) l3 = root num = num // 10 while num != 0 : l3 . next = ListNode ( num % 10 ) l3 = l3 . next num = num // 10 return root \u4e0a\u9762\u7684\u65b9\u5f0f\u5176\u5b9e\u662f\u4e00\u4e2a\u53d6\u5de7\u7684\u64cd\u4f5c \u4e0b\u9762\u624d\u662f\u771f\u6b63\u957f\u94fe\u8868\u64cd\u4f5c\u7684\u4e00\u4e2a\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u5f0f # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def addTwoNumbers ( self , l1 , l2 ): \"\"\" :type l1: ListNode :type l2: ListNode :rtype: ListNode \"\"\" if l1 == None : return l2 if l2 == None : return l1 carry = 0 #\u8fdb\u4f4d\u7684\u5927\u5c0f dummy = ListNode ( 0 ) #\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868 #dummy\u662f\u6839\u8282\u70b9 p = dummy #\u6307\u9488 while l1 and l2 : p . next = ListNode (( l1 . val + l2 . val + carry ) % 10 ) #\u5b58\u50a8\u5f53\u524d\u4e24\u4e2a\u8282\u70b9\u7684\u503c\u76f8\u52a0\u540e\u8fdb\u4f4d\u5269\u4e0b\u7684\u6570\u503c carry = ( l1 . val + l2 . val + carry ) // 10 #\u66f4\u65b0carry\u8fdb\u4f4d\u7684\u5927\u5c0f l1 = l1 . next l2 = l2 . next p = p . next #\u6307\u9488\u5411\u4e0b\u79fb\u52a8 if l2 : #\u5982\u679cl2\u6bd4\u8f83\u957f\u7684\u8bdd while l2 : p . next = ListNode (( l2 . val + carry ) % 10 ) carry = ( l2 . val + carry ) // 10 l2 = l2 . next p = p . next if l1 : #\u5982\u679cl1\u6bd4\u8f83\u957f\u7684\u8bdd while l1 : p . next = ListNode (( l1 . val + carry ) % 10 ) carry = ( l1 . val + carry ) // 10 l1 = l1 . next p = p . next if carry == 1 : #\u6700\u7ec8carry\u4f9d\u65e7\u6709\u8fdb\u4f4d\u7684\u8bdd p . next = ListNode ( 1 ) #\u6700\u9ad8\u4f4d\u6ea2\u51fa return dummy . next #\u8fd4\u56denext\u7684\u539f\u56e0\u662f\u8ddf\u8282\u70b9\u662f\u6211\u4eec\u4e0d\u9700\u8981\u7684","title":"002-\u529b\u6263\u5237\u98982-\u4e24\u6570\u76f8\u52a0"},{"location":"\u529b\u6263\u5237\u9898/003-\u529b\u6263\u5237\u98983\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684-\u6700\u957f\u5b50\u4e32-\u7684\u957f\u5ea6/","text":"\u9898\u76ee\u63cf\u8ff0: \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684 \u6700\u957f\u5b50\u4e32 \u7684\u957f\u5ea6\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"abcabcbb\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u793a\u4f8b 2: \u8f93\u5165: \"bbbbb\" \u8f93\u51fa: 1 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"b\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002 \u793a\u4f8b 3: \u8f93\u5165: \"pwwkew\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"wke\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c\"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002 \u89e3\u9898\u601d\u8def \u00b6 \u9996\u5148\u56e0\u4e3a\u662f\u8981\u67e5\u627e\u4e00\u4e2a\u65e0\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u56e0\u6b64\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b57\u5178,\u6bcf\u4e00\u6b21\u53d6\u51fa\u65b0\u7684\u5b57\u7b26\u53d6\u68c0\u6d4b\u6709\u6ca1\u6709\u5728\u5b57\u5178\u4e2d,\u5982\u679c\u5728\u90a3\u4e48\u5c31\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u5c31\u56de\u9000\u5230\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e,\u91cd\u590d\u8fdb\u884c\u68c0\u6d4b,\u76f4\u5230\u904d\u5386\u5b8c\u6240\u6709\u7684\u5b57\u7b26\u4e32,\u627e\u5230\u4e00\u4e2a\u6700\u5927\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 class Solution : def lengthOfLongestSubstring ( self , s : str ) -> int : dict = {} #\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u7528\u6765\u5b58\u50a8\u65e0\u91cd\u590d\u7684\u5b57\u7b26\u4e32 i = count = max_count = 0 #\u5efa\u7acb\u4e00\u4e2a\u6307\u9488,\u4e24\u4e2a\u8ba1\u6570\u5668,\u6307\u9488\u7528\u6765\u6307\u793a\u5b57\u7b26\u7684\u79fb\u52a8,count\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,max_count\u7528\u6765\u8bb0\u5f55\u6700\u5927\u957f\u5ea6\u7684\u5b50\u5b57\u7b26\u4e32 while i < len ( s ): #\u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u5b57\u7b26 if s [ i ] not in dict : #\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e0d\u5728\u5b57\u5178\u4e2d dict [ s [ i ]] = i #\u5c31\u8bb2\u8fd9\u4e2a\u5b57\u7b26\u53ca\u5bf9\u5e94\u7684\u7d22\u5f15\u5b58\u50a8\u5230\u5b57\u5178\u4e2d count += 1 #\u4e0d\u5728\u5b57\u5178\u4e2d\u5c31\u8bb2\u957f\u5ea6\u52a01 else : i = dict [ s [ i ]] + 1 #\u5426\u5219\u7684\u8bdd,\u8bf4\u660e\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u90a3\u5c31\u56de\u9000\u5230\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u4f4d\u7f6e,\u91cd\u65b0\u68c0\u6d4b del ( dict ) #\u5220\u9664\u5b57\u5178 dict = {} #\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u7528\u6765\u5b58\u50a8 max_count = max ( count , max_count ) #\u4f5c\u6bd4\u8f83,max_count\u627e\u4e00\u4e2a\u6700\u5927\u503c dict [ s [ i ]] = i #\u5b58\u50a8\u8fd9\u4e2a\u56de\u9000\u5230\u7684\u5b57\u7b26\u53ca\u5bf9\u5e94\u7684\u7d22\u5f15 count = 1 #\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u5b58\u50a8\u4e86\u4e00\u4e2a\u5b57\u7b26\u5c31\u8ba9count=1 i += 1 #i \u7528\u6765\u4f5c\u4e3a\u79fb\u52a8\u6307\u9488 max_count = max ( count , max_count ) #\u6700\u540e\u5faa\u73af\u5b8c\u6210\u627e\u4e00\u4e2a\u6700\u5927\u503c return max_count \u6d4b\u8bd5\u5168\u90e8\u901a\u8fc7","title":"003-\u529b\u6263\u5237\u98983\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684-\u6700\u957f\u5b50\u4e32-\u7684\u957f\u5ea6"},{"location":"\u529b\u6263\u5237\u9898/003-\u529b\u6263\u5237\u98983\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684-\u6700\u957f\u5b50\u4e32-\u7684\u957f\u5ea6/#_1","text":"\u9996\u5148\u56e0\u4e3a\u662f\u8981\u67e5\u627e\u4e00\u4e2a\u65e0\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u56e0\u6b64\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b57\u5178,\u6bcf\u4e00\u6b21\u53d6\u51fa\u65b0\u7684\u5b57\u7b26\u53d6\u68c0\u6d4b\u6709\u6ca1\u6709\u5728\u5b57\u5178\u4e2d,\u5982\u679c\u5728\u90a3\u4e48\u5c31\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u5c31\u56de\u9000\u5230\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e,\u91cd\u590d\u8fdb\u884c\u68c0\u6d4b,\u76f4\u5230\u904d\u5386\u5b8c\u6240\u6709\u7684\u5b57\u7b26\u4e32,\u627e\u5230\u4e00\u4e2a\u6700\u5927\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 class Solution : def lengthOfLongestSubstring ( self , s : str ) -> int : dict = {} #\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u7528\u6765\u5b58\u50a8\u65e0\u91cd\u590d\u7684\u5b57\u7b26\u4e32 i = count = max_count = 0 #\u5efa\u7acb\u4e00\u4e2a\u6307\u9488,\u4e24\u4e2a\u8ba1\u6570\u5668,\u6307\u9488\u7528\u6765\u6307\u793a\u5b57\u7b26\u7684\u79fb\u52a8,count\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,max_count\u7528\u6765\u8bb0\u5f55\u6700\u5927\u957f\u5ea6\u7684\u5b50\u5b57\u7b26\u4e32 while i < len ( s ): #\u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u5b57\u7b26 if s [ i ] not in dict : #\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e0d\u5728\u5b57\u5178\u4e2d dict [ s [ i ]] = i #\u5c31\u8bb2\u8fd9\u4e2a\u5b57\u7b26\u53ca\u5bf9\u5e94\u7684\u7d22\u5f15\u5b58\u50a8\u5230\u5b57\u5178\u4e2d count += 1 #\u4e0d\u5728\u5b57\u5178\u4e2d\u5c31\u8bb2\u957f\u5ea6\u52a01 else : i = dict [ s [ i ]] + 1 #\u5426\u5219\u7684\u8bdd,\u8bf4\u660e\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u5b57\u7b26\u4e32,\u90a3\u5c31\u56de\u9000\u5230\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u4f4d\u7f6e,\u91cd\u65b0\u68c0\u6d4b del ( dict ) #\u5220\u9664\u5b57\u5178 dict = {} #\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u7528\u6765\u5b58\u50a8 max_count = max ( count , max_count ) #\u4f5c\u6bd4\u8f83,max_count\u627e\u4e00\u4e2a\u6700\u5927\u503c dict [ s [ i ]] = i #\u5b58\u50a8\u8fd9\u4e2a\u56de\u9000\u5230\u7684\u5b57\u7b26\u53ca\u5bf9\u5e94\u7684\u7d22\u5f15 count = 1 #\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u5b58\u50a8\u4e86\u4e00\u4e2a\u5b57\u7b26\u5c31\u8ba9count=1 i += 1 #i \u7528\u6765\u4f5c\u4e3a\u79fb\u52a8\u6307\u9488 max_count = max ( count , max_count ) #\u6700\u540e\u5faa\u73af\u5b8c\u6210\u627e\u4e00\u4e2a\u6700\u5927\u503c return max_count \u6d4b\u8bd5\u5168\u90e8\u901a\u8fc7","title":"\u89e3\u9898\u601d\u8def"},{"location":"\u529b\u6263\u5237\u9898/004-\u529b\u6263\u5237\u98984--\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570/","text":"\u9898\u76ee\u63cf\u8ff0: \u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u4e3a m \u548c n \u7684\u6709\u5e8f\u6570\u7ec4 nums1 \u548c nums2\u3002 \u8bf7\u4f60\u627e\u51fa\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log(m + n))\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u548c nums2 \u4e0d\u4f1a\u540c\u65f6\u4e3a\u7a7a\u3002 \u793a\u4f8b 1: nums1 = [1, 3] nums2 = [2] \u5219\u4e2d\u4f4d\u6570\u662f 2.0 \u793a\u4f8b 2: nums1 = [1, 2] nums2 = [3, 4] \u5219\u4e2d\u4f4d\u6570\u662f (2 + 3)/2 = 2.5","title":"004-\u529b\u6263\u5237\u98984--\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},{"location":"\u529b\u6263\u5237\u9898/005-\u529b\u6263\u5237\u989813--\u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570/","text":"\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26: I\uff0c V\uff0c X\uff0c L\uff0cC\uff0cD \u548c M\u3002 \u5b57\u7b26 \u6570\u503c I 1 V 5 X 10 L 50 C 100 D 500 M 1000 \u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a II \uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a XII \uff0c\u5373\u4e3a X + II \u3002 27 \u5199\u505a XXVII , \u5373\u4e3a XX + V + II \u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a IIII \uff0c\u800c\u662f IV \u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a IX \u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a I \u53ef\u4ee5\u653e\u5728 V (5) \u548c X (10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002 X \u53ef\u4ee5\u653e\u5728 L (50) \u548c C (100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c 90\u3002 C \u53ef\u4ee5\u653e\u5728 D (500) \u548c M (1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 400 \u548c 900\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002\u8f93\u5165\u786e\u4fdd\u5728 1 \u5230 3999 \u7684\u8303\u56f4\u5185\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"III\" \u8f93\u51fa: 3 \u793a\u4f8b 2: \u8f93\u5165: \"IV\" \u8f93\u51fa: 4 \u793a\u4f8b 3: \u8f93\u5165: \"IX\" \u8f93\u51fa: 9 \u793a\u4f8b 4: \u8f93\u5165: \"LVIII\" \u8f93\u51fa: 58 \u89e3\u91ca: L = 50, V= 5, III = 3. \u793a\u4f8b 5: \u8f93\u5165: \"MCMXCIV\" \u8f93\u51fa: 1994 \u89e3\u91ca: M = 1000, CM = 900, XC = 90, IV = 4. class Solution ( object ): def romanToInt ( self , s ): \"\"\" :type s: str :rtype: int \"\"\" numral_map = { \"I\" : 1 , \"V\" : 5 , \"X\" : 10 , \"L\" : 50 , \"C\" : 100 , \"D\" : 500 , \"M\" : 1000 } #\u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u6620\u5c04\u7684\u5b57\u5178,\u5c06\u7f57\u9a6c\u6570\u5b57\u4e0e\u6570\u5b57\u8fdb\u884c\u5bf9\u5e94 result = 0 #\u521d\u59cb\u8f6c\u6362\u7684\u6570\u5b57\u7ed3\u679c\u4e3a0 for i in range ( len ( s )): if i > 0 and numral_map [ s [ i ]] > numral_map [ s [ i - 1 ]]: #\u5f53\u540e\u9762\u904d\u5386\u7684\u503c\u6bd4\u524d\u4e00\u4e2a\u503c\u5927\u7684\u65f6\u5019\u8bf4\u660e\u662f CM\u8fd9\u79cd\u7684\u5f62\u5f0f,\u90a3\u4e48\u6211\u4eec\u4e0d\u80fd\u628a\u524d\u9762\u7684\u7b80\u5355\u7684\u52a0\u548c\u800c\u5e94\u8be5\u662f\u52a0\u4e0a\u73b0\u5728\u7684\u6570\u51cf\u6389\u4e4b\u524d\u6dfb\u52a0\u8fc7\u7684\u6570\u518d\u51cf\u6389\u4e00\u6b21\u4e4b\u524d\u6dfb\u52a0\u7684\u6570 \u4e5f\u5c31\u662f\u51cf\u4e24\u6b21\u539f\u56e0\u662f\u591a\u6dfb\u52a0 \u4e86\u4e00\u904d result += ( numral_map [ s [ i ]] - 2 * numral_map [ s [ i - 1 ]] ) else : result += numral_map [ s [ i ]] #\u5426\u5219\u7684\u8bdd\u5c31\u76f4\u63a5\u76f8\u52a0\u5c31\u597d\u4e86 return result","title":"005-\u529b\u6263\u5237\u989813--\u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570"},{"location":"\u529b\u6263\u5237\u9898/006-\u529b\u6263\u5237\u989822--\u62ec\u53f7\u751f\u6210/","text":"\u7ed9\u51fa n \u4ee3\u8868\u751f\u6210\u62ec\u53f7\u7684\u5bf9\u6570\uff0c\u8bf7\u4f60\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u591f\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u5e76\u4e14\u6709\u6548\u7684\u62ec\u53f7\u7ec4\u5408\u3002 \u4f8b\u5982\uff0c\u7ed9\u51fa n = 3\uff0c\u751f\u6210\u7ed3\u679c\u4e3a\uff1a [ \"((()))\", \"(()())\", \"(())()\", \"()(())\", \"()()()\" ] **\u4e0d\u80fd\u51fa\u73b0\u8fd9\u79cd\u7684\u60c5\u51b5 )( ** class Solution ( object ): def generateParenthesis ( self , n ): \"\"\" :type n: int :rtype: List[str] \"\"\" if n == 0 : #\u5982\u679cn\u662f\u96f6\u7684\u8bdd\u90a3\u4e48\u5c31\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868,\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684 return [] result = [] #\u5728n\u4e0d\u7b49\u4e8e\u96f6\u7684\u65f6\u5019\u8fdb\u884c\u9012\u5f52\u904d\u5386 self . helper ( n , n , '' , result ) return result #\u8fd4\u56de\u6700\u7ec8\u7684\u7ed3\u679c def helper ( self , l , r , item , result ): #l\u662f\u5de6\u62ec\u53f7\u7684\u4e2a\u6570,r\u662f\u53f3\u62ec\u53f7\u7684\u4e2a\u6570,item\u5b58\u50a8\u7684\u6bcf\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32((()))\u7c7b\u4f3c\u8fd9\u79cd\u7684 if r < l : #\u8fd9\u4e2a\u662f\u53bb\u9664\u9519\u8bef\u7684\u5b57\u7b26\u4e32\u7684\u5224\u65ad\u7684 \u5f53r<l \u4e5f\u5c31\u662f\u8bf4\u5269\u4e0b\u7684(\u7684\u4e2a\u6570\u6bd4)\u62ec\u53f7\u7684\u4e2a\u6570\u5c11\u4e5f\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5 ()) \u5b9e\u9645\u4e0a\u5e94\u8be5\u5de6\u62ec\u53f7\u8981\u4e48\u6bd4\u53f3\u62ec\u53f7\u7528\u7684\u591a,\u5269\u4e0b\u7684\u5c31\u5c11\u624d\u80fd\u6ee1\u8db3\u8981\u6c42 .\u8fd9\u4e2a\u5224\u65ad\u8bed\u53e5\u5c31\u7b5b\u9664\u4e86\u6240\u6709\u4e0d\u6ee1\u8db3\u6dfb\u52a0\u7684\u5b57\u7b26\u4e32 return if l == 0 and r == 0 : result . append ( item ) #\u5f53\u5de6\u53f3\u62ec\u53f7\u90fd\u7528\u5b8c\u7684\u4f7f\u7528\u6211\u4eec\u5c06\u8fd9\u4e2aitem\u6dfb\u52a0\u5230result\u4e2d #\u4e00\u5f00\u59cb\u5148\u6dfb\u52a0\u5de6\u62ec\u53f7\u4e5f\u662f\u4e00\u4e2a\u5fc5\u8981\u7684\u6761\u4ef6 if l > 0 : #\u5f53\u5de6\u62ec\u53f7\u8fd8\u5269\u4e0b\u7684\u65f6\u5019\u90a3\u4e48\u5c31\u8ba9\u5de6\u62ec\u53f7\u7684\u6570\u91cf\u51cf1\u53f3\u62ec\u53f7\u7684\u6570\u91cf\u4e0d\u53d8,item\u4e32\u52a0\u4e0a\u4e00\u4e2a\u5de6\u62ec\u53f7,\u7136\u540e\u5c31\u662f\u9012\u5f52 self . helper ( l - 1 , r , item + '(' , result ) if r > 0 : #\u6709\u62ec\u53f7\u7684\u6dfb\u52a0\u4e5f\u662f\u4e00\u6837\u7684 self . helper ( l , r - 1 , item + ')' , result )","title":"006-\u529b\u6263\u5237\u989822--\u62ec\u53f7\u751f\u6210"},{"location":"\u529b\u6263\u5237\u9898/007-\u529b\u6263\u5237\u989826--\u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728\u539f\u5730\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002 \u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002 \u793a\u4f8b 1: \u7ed9\u5b9a\u6570\u7ec4 nums = [1,1,2], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e24\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 1, 2\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u793a\u4f8b 2: \u7ed9\u5b9a nums = [0,0,1,1,1,2,2,3,3,4], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 0, 1, 2, 3, 4\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u8bf4\u660e: \u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462? \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b: // nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d int len = removeDuplicates(nums); // \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 // \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u8be5\u957f\u5ea6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002 for (int i = 0; i < len; i++) { print(nums[i]); } class Solution ( object ): def removeDuplicates ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" if not nums : #\u5f53\u8f93\u5165\u7684\u6570\u7ec4\u662f\u4e00\u4e2a\u7a7a\u7684\u65f6\u5019\u90a3\u4e48\u957f\u5ea6\u5c31\u8fd4\u56de\u662f\u96f6 return 0 #\u5f53\u6570\u7ec4\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u518d\u8fdb\u884c\u4e0b\u9762\u7684\u64cd\u4f5c count = 0 #\u521d\u59cb\u5316\u6570\u7ec4\u957f\u5ea6\u4e3a0,\u7136\u540e\u8fdb\u884c\u904d\u5386 #count\u5176\u5b9e\u662f\u4e00\u4e2a\u6307\u9488,\u6bd4\u5982nums = [0,0,1,1,1,2,2,3,3,4] #\u4e00\u5f00\u59cb\u7684count\u662f0, \u8fdb\u5165for\u5faa\u73af\u7b2c\u4e00\u6b21.i=0 ,nums[count]=nums[0],\u90a3\u4e48\u5c31\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c #i=1\u7684\u65f6\u5019nums[0]=0,\u4f46\u662fnums[1]=0,\u6b64\u65f6\u5462\u4e0d\u8fdb\u884c\u64cd\u4f5c, #i=2\u7684\u65f6\u5019\u5462nums[count]=nums[0]=0,\u4f46\u662fnums[2]=1,\u6b64\u65f6\u4e0d\u76f8\u7b49,\u5c31\u8ba9count\u6307\u5411\u4e86\u7b2c\u4e8c\u4e2a\u5143\u7d20,\u540c\u65f6\u5c06\u8fd9\u4e2a\u4e0d\u76f8\u7b49\u7684\u5143\u7d20\u8d4b\u503c\u7ed9\u4e86\u7d22\u5f15\u4e3a1\u7684\u4f4d\u7f6e\u7684\u5143\u7d20.\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u66f4\u65b0,\u6700\u540e\u7684count+1\u662f\u56e0\u4e3acount\u7684\u8d77\u59cb\u503c\u662f\u4ece0\u5f00\u59cb\u7684\u56e0\u6b64\u662f\u8981\u52a01\u7684. for i in range ( len ( nums )): if nums [ count ] != nums [ i ]: count += 1 nums [ count ] = nums [ i ] return count + 1 #i=0 [0 0 1 1 1 2 2 3 3 4] count=0 #i=1 [0 0 1 1 1 2 2 3 3 4] count=0 #i=2 [0 1 1 1 1 2 2 3 3 4] count=1 #i=3 [0 1 1 1 1 2 2 3 3 4] count=1 #i=4 [0 1 1 1 1 2 2 3 3 4] count=1 #i=5 [0 1 2 1 1 2 2 3 3 4] count=2 #\u4f9d\u6b21\u7684\u7c7b\u63a8\u5728count\u6307\u9488\u7684\u4f4d\u7f6e\u8fdb\u884c\u66f4\u65b0,\u6700\u540e\u53ea\u8981\u6709count+1\u7684\u957f\u5ea6\u8f93\u51fa\u539f\u6765\u6570\u7ec4\u66f4\u65b0\u8fc7\u7684count+1\u957f\u5ea6\u7684\u6570\u7ec4\u5373\u53ef","title":"007-\u529b\u6263\u5237\u989826--\u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879"},{"location":"\u529b\u6263\u5237\u9898/008-\u529b\u6263\u5237\u989820--\u6709\u6548\u7684\u62ec\u53f7/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u62ec '('\uff0c')'\uff0c'{'\uff0c'}'\uff0c'['\uff0c']' \u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\u3002 \u6709\u6548\u5b57\u7b26\u4e32\u9700\u6ee1\u8db3\uff1a \u5de6\u62ec\u53f7\u5fc5\u987b\u7528\u76f8\u540c\u7c7b\u578b\u7684\u53f3\u62ec\u53f7\u95ed\u5408\u3002 \u5de6\u62ec\u53f7\u5fc5\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u95ed\u5408\u3002 \u6ce8\u610f\u7a7a\u5b57\u7b26\u4e32\u53ef\u88ab\u8ba4\u4e3a\u662f\u6709\u6548\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"()\" \u8f93\u51fa: true \u793a\u4f8b 2: \u8f93\u5165: \"()[]{}\" \u8f93\u51fa: true \u793a\u4f8b 3: \u8f93\u5165: \"(]\" \u8f93\u51fa: false \u793a\u4f8b 4: \u8f93\u5165: \"([)]\" \u8f93\u51fa: false \u793a\u4f8b 5: \u8f93\u5165: \"{[]}\" \u8f93\u51fa: true class Solution ( object ): def isValid ( self , s ): \"\"\" :type s: str :rtype: bool \"\"\" #\u8fd8\u662f\u4f7f\u7528\u5b57\u5178\u6570\u636e\u7ed3\u6784 stack = [] #\u8fd9\u4e2astack\u5b58\u50a8\u7684\u662f\u5de6\u8fb9\u7684\u62ec\u53f7 lookup = { \"(\" : \")\" , \"[\" : \"]\" , \"{\" : \"}\" } #\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5b57\u5178\u7684\u6620\u5c04,\u5c06\u5404\u79cd\u62ec\u53f7\u8fdb\u884c\u5bf9\u5e94 for parenthese in s : #\u5bf9s\u8fdb\u884c\u904d\u5386 if parenthese in lookup : #\u5982\u679c\u8bf4\u8f93\u5165\u7684\u62ec\u53f7\u662f\u5de6\u62ec\u53f7,\u90a3\u4e48\u5728\u5b57\u5178\u4e2d stack . append ( parenthese ) #\u5c31\u5c06\u5de6\u62ec\u53f7\u6dfb\u52a0\u5230stack\u8fd9\u4e2a\u5217\u8868\u4e2d\u53bb elif len ( stack ) == 0 or lookup [ stack . pop ()] != parenthese : #or \u540e\u9762\u7684\u610f\u601d\u5f88\u597d\u7406\u89e3\u5f53\u6211\u4eec\u53d6\u51fa\u7684parenthes\u662f\u53f3\u62ec\u53f7\u65f6,\u90a3\u4e48\u5b83\u7684\u524d\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u4e00\u5b9a\u662f\u5bf9\u5e94\u7684\u5de6\u62ec\u53f7,\u5426\u5219\u5c31\u662f\u9519\u7684 \u6bd4\u5982(],()(}\u90fd\u662f\u4e0d\u80fd\u5bf9\u5e94\u7684,\u8fd9\u4e2a\u5730\u65b9\u4ed4\u7ec6\u7814\u7a76\u5c31\u61c2\u4e86,\u53ea\u8981\u662f\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u53f3\u62ec\u53f7\u524d\u9762\u4e0a\u4e00\u4e2a \u51fa\u73b0\u7684\u4e00\u5b9a\u5f97\u662f\u5bf9\u5e94\u7684\u5de6\u62ec\u53f7\u4e0d\u7136\u5c31\u662f\u9519\u7684. # or \u540e\u9762\u7684\u662f\u8fd9\u79cd\u60c5\u51b5 ) \u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a) \u6216\u8005\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5c31\u662f\u53f3\u62ec\u53f7,\u90a3\u4e48stack\u4e2d\u662f\u7a7a\u7684,\u4e5f\u8ba4\u4e3a\u662f\u9519\u7684 return False return len ( stack ) == 0 #\u8fd9\u4e00\u79cd\u60c5\u51b5\u8003\u8651\u7684\u662f \u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a [ \u90a3\u4e48\u6b64\u65f6stack\u4e2d\u53ea\u4f1a\u5b58\u50a8\u4e00\u4e2a [ \u5c31\u5b8c\u4e8b\u4e86,\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u662f\u9519\u7684. #\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6700\u540e\u5224\u65ad\u4f7f\u7528\u7684stack\u7684\u957f\u5ea6\u5462,\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728elif\u5224\u65ad\u5de6\u53f3\u62ec\u53f7\u7684\u65f6\u5019\u662f\u7528\u4e86\u5f39\u51fa\u5143\u7d20\u7684\u65b9\u6cd5,\u6700\u540e\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u6570\u91cf\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b,stack\u4e2d\u7684\u5143\u7d20\u6700\u7ec8\u4f1a\u5168\u90e8\u88ab\u5f39\u51fa #\u5c31\u4f1a\u8fd4\u56deTrue #\u6bd4\u5982 () [] # stack=['(' ] #stack=[] pop\u64cd\u4f5c #stack=[[] #stack=[] pop\u64cd\u4f5c","title":"008-\u529b\u6263\u5237\u989820--\u6709\u6548\u7684\u62ec\u53f7"},{"location":"\u529b\u6263\u5237\u9898/009-\u529b\u6263\u5237\u989828--\u5b9e\u73b0strStr()/","text":"\u5b9e\u73b0 strStr() \u51fd\u6570\u3002 \u7ed9\u5b9a\u4e00\u4e2a haystack \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a needle \u5b57\u7b26\u4e32\uff0c\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e (\u4ece0\u5f00\u59cb)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1\u3002 \u793a\u4f8b 1: \u8f93\u5165: haystack = \"hello\", needle = \"ll\" \u8f93\u51fa: 2 \u793a\u4f8b 2: \u8f93\u5165: haystack = \"aaaaa\", needle = \"bba\" \u8f93\u51fa: -1 \u8bf4\u660e: \u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5e94\u5f53\u8fd4\u56de\u4ec0\u4e48\u503c\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5728\u9762\u8bd5\u4e2d\u5f88\u597d\u7684\u95ee\u9898\u3002 \u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u5e94\u5f53\u8fd4\u56de 0 \u3002\u8fd9\u4e0eC\u8bed\u8a00\u7684 strstr() \u4ee5\u53ca Java\u7684 indexOf() \u5b9a\u4e49\u76f8\u7b26\u3002 class Solution ( object ): def strStr ( self , haystack , needle ): \"\"\" :type haystack: str :type needle: str :rtype: int \"\"\" #for\u5faa\u73af\u7684\u6b21\u6570, haystack = \"hello\", needle = \"ll\" ,\u5e94\u8be5\u5faa\u73af\u7684\u662f4\u6b21,\u5982\u679c\u540e\u9762\u7684\u662flll\u90a3\u4e48\u5e94\u8be5\u5faa\u73af\u7684\u5c31\u662f3\u6b21,\u603b\u7ed3\u89c4\u5f8b\u5c31\u662f 5-2+1 \u4ee5\u53ca 5-3+1 #\u4e3b\u8981\u7684\u96be\u70b9\u5c31\u662f\u5728\u4e8e\u8fd9\u4e2afor\u5faa\u73af\u7684\u6b21\u6570\u600e\u4e48\u8ba1\u7b97,\u5176\u4ed6\u7684\u5c31\u662f\u76f4\u63a5\u5339\u914d\u7684\u4e8b for i in range ( len ( haystack ) - len ( needle ) + 1 ): if haystack [ i : i + len ( needle )] == needle : return i return - 1","title":"009-\u529b\u6263\u5237\u989828--\u5b9e\u73b0strStr()"},{"location":"\u529b\u6263\u5237\u9898/010-\u529b\u6263\u5237\u989827--\u79fb\u9664\u5143\u7d20/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u503c val\uff0c\u4f60\u9700\u8981\u539f\u5730\u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e val \u7684\u5143\u7d20\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002 \u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002 \u5143\u7d20\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u793a\u4f8b 1: \u7ed9\u5b9a nums = [3,2,2,3], val = 3, \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u5747\u4e3a 2\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u793a\u4f8b 2: \u7ed9\u5b9a nums = [0,1,2,2,3,0,4,2], val = 2, \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u4e3a 0, 1, 3, 0, 4\u3002 \u6ce8\u610f\u8fd9\u4e94\u4e2a\u5143\u7d20\u53ef\u4e3a\u4efb\u610f\u987a\u5e8f\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u8bf4\u660e: \u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462? \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b: // nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u4f5c\u4efb\u4f55\u62f7\u8d1d int len = removeElement(nums, val); // \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 // \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u8be5\u957f\u5ea6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002 for (int i = 0; i < len; i++) { print(nums[i]); } class Solution ( object ): def removeElement ( self , nums , val ): \"\"\" :type nums: List[int] :type val: int :rtype: int \"\"\" # 3,2,2,3 \u79fb\u96643 #2,2,3,3 \u957f\u5ea6\u4e3a2 # 3 ,2 ,2 3 ,\u8bbe\u7f6e\u4e24\u4e2a\u6307\u9488,\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488 #val=3 # round 1_after_swap:3,2,2,3 ,\u7b2c\u4e00\u6b21\u53d1\u73b0\u5934\u6307\u9488\u6307\u5411\u7684\u662f\u8981\u5220\u9664\u7684\u5143\u7d20,\u56e0\u6b64\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u8fdb\u884c\u4ea4\u6362,\u5c3e\u6307\u9488\u5411\u524d\u79fb\u52a8\u4e00\u4e0b,\u539f\u56e0\u662f\u539f\u6765\u7684\u5c3e\u6307\u9488\u6307\u5411\u7684\u5c31\u662f\u8981\u5220\u9664\u7684\u5143\u7d20,\u5c3e\u6307\u9488\u524d\u79fb\u5c31\u4ee3\u8868\u5c06\u5176\u5220\u9664\u4e86 # round 2_after_swap: 2,2,3,3 ,\u5934\u6307\u9488\u8fd8\u662f\u6307\u54113,\u5c3e\u6307\u9488\u6307\u5411\u7684\u662f2\u53d1\u73b0\u5934\u6307\u9488\u6307\u5411\u7684\u8fd8\u662f\u9700\u8981\u5220\u9664\u7684\u5143\u7d20,\u7ee7\u7eed\u4ea4\u6362,\u4ea4\u6362\u7684\u540c\u65f6\u5c3e\u6307\u9488\u524d\u79fb # round 3 : 2 , 2, 3,3 #\u5934\u6307\u9488\u6307\u5411\u7684\u662f2\u5c3e\u6307\u9488\u6307\u5411\u7684\u662f2 ,\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362,\u4e0d\u7528\u4ea4\u6362\u90a3\u4e48\u5934\u6307\u9488\u5c31\u524d\u79fb # round 4: 2,2,3,3 #\u5934\u6307\u9488\u6307\u5411\u7684\u662f\u7b2c\u4e8c\u4e2a2\u4e0d\u662f\u8981\u5220\u9664\u7684\u5143\u7d20,\u5c3e\u6307\u9488\u6307\u5411\u7684\u4e5f\u662f\u7b2c\u4e8c\u4e2a2,\u6b64\u65f6\u5df2\u7ecf\u904d\u5386\u5b8c\u6210,\u540c\u6837\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362 # round5:\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u7684\u957f\u5ea6,\u90a3\u4e48\u5c31\u662f\u5c3e\u6307\u9488\u7684\u7d22\u5f15+1 #============================= # \u9996\u5148\u5b9a\u4e49\u7684\u662f\u5934\u6307\u9488\u8ddf\u5c3e\u6307\u9488 i = 0 last = len ( nums ) - 1 #\u7d22\u5f15\u503c while i <= last : #\u6700\u540e\u5934\u5c3e\u6307\u9488\u4ea4\u53c9\u8bc1\u660e\u6211\u4eec\u5b8c\u4e8b\u4e86(\u8fd9\u91cc\u8fd8\u662f\u8fdb\u5165\u4e86\u5faa\u73af\u4f53\u5224\u65ad\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u4ea4\u53c9\u533a\u662f\u4e0d\u662f\u9700\u8981\u5220\u9664\u7684,\u5982\u679c\u662f\u7684\u8bddlast\u662f\u4f1a\u5230\u5934\u6307\u9488\u7684\u524d\u9762\u7684) if nums [ i ] == val : nums [ i ], nums [ last ] = nums [ last ], nums [ i ] last -= 1 else : i += 1 return last + 1","title":"010-\u529b\u6263\u5237\u989827--\u79fb\u9664\u5143\u7d20"},{"location":"\u529b\u6263\u5237\u9898/011-\u529b\u6263\u5237\u989821--\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868/","text":"\u5c06\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u6709\u5e8f\u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a1->2->4, 1->3->4 \u8f93\u51fa\uff1a1->1->2->3->4->4 # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def mergeTwoLists ( self , l1 , l2 ): \"\"\" :type l1: ListNode :type l2: ListNode :rtype: ListNode \"\"\" curr = damy = ListNode ( 0 ) #\u865a\u62df\u8282\u70b9,\u518d\u8fd4\u56de\u7684\u65f6\u5019\u8fd4\u56de\u7684\u662f\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\u7684\u4e0b\u4e00\u4f4d\u8282\u70b9 while l1 and l2 : #\u5bf9\u4e24\u4e2a\u94fe\u8868\u8fdb\u884c\u904d\u5386 if l1 . val < l2 . val : curr . next = l1 #\u7b2c\u4e00\u6b21\u53d6\u51fa\u7684\u5c31\u662fl1\u7684\u5934\u7ed3\u70b9 l1 = l1 . next #\u5728\u6b21\u53d6\u5c31\u662f\u4e0b\u4e00\u4e2a\u8282\u70b9next else : curr . next = l2 #\u8fdb\u5165else\u8bf4\u660e\u73b0\u5728\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u503c\u662fl2.val\u662f\u6bd4\u8f83\u5927\u7684\u56e0\u6b64\u8ba9curr\u7684\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u94fe\u63a5\u4e0al2\u53d6\u51fa\u7684\u6765\u7684\u8282\u70b9 l2 = l2 . next #\u540c\u65f6\u8ba9l2\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 curr = curr . next #\u66f4\u65b0current, current\u539f\u6765\u662f\u5728root\u8282\u70b9,current.next\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9, \u518d\u6b21\u5faa\u73af\u7684\u65f6\u5019current.next\u6307\u5411\u7684\u5c31\u662f\u7b2c\u4e8c\u4e2a\u8282\u70b9 #\u4f46\u662f\u4e0a\u9762\u7528\u7684\u662fand\u8fdb\u884c\u94fe\u63a5,\u90a3\u4e48\u4e0b\u9762\u8981\u5c06\u6ca1\u6709\u94fe\u63a5\u7684\u5269\u4e0b\u7684l1\u6216\u8005\u662fl2\u8fdb\u884c\u94fe\u63a5 curr . next = l1 or l2 return damy . next #\u8fd4\u56de\u7684\u662f\u6211\u4eec\u8bbe\u5b9a\u7684\u865a\u62df\u8d77\u59cb\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9","title":"011-\u529b\u6263\u5237\u989821--\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868"},{"location":"\u529b\u6263\u5237\u9898/012-\u529b\u6263\u5237\u989814--\u6700\u957f\u516c\u5171\u524d\u7f00/","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002 \u793a\u4f8b 1: \u8f93\u5165: [\"flower\",\"flow\",\"flight\"] \u8f93\u51fa: \"fl\" \u793a\u4f8b 2: \u8f93\u5165: [\"dog\",\"racecar\",\"car\"] \u8f93\u51fa: \"\" \u89e3\u91ca: \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002 \u8bf4\u660e: \u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd a-z \u3002 \u7b2c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848 class Solution ( object ): def longestCommonPrefix ( self , strs ): \"\"\" :type strs: List[str] :rtype: str \"\"\" if not strs : #\u5982\u679c\u8fd9\u4e2astrs\u662f\u7a7a\u90a3\u4e48\u5c31\u8fd4\u56de\u7684\u662f\"\" return \"\" for i in range ( len ( strs [ 0 ])): #\u9009\u7b2c\u4e00\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u4e00\u4e2a\u6807\u6746,\u6700\u957f\u4e5f\u4e0d\u4f1a\u6bd4\u8fd9\u4e2a\u5355\u8bcd\u66f4\u957f,\u5bf9\u8fd9\u4e2a\u5355\u8bcd\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u904d\u5386 for string in strs [ 1 :]: #\u62ff\u6240\u6709\u7684\u540e\u9762\u7684\u5b57\u7b26\u4e32\u6bcf\u4e00\u4e2a\u5b57\u7b26\u8ddf\u8ddf\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540c\u6837\u4f4d\u7f6e\u7684\u5b57\u7b26\u8fdb\u884c\u6bd4\u8f83 if i >= len ( string ) or string [ i ] != strs [ 0 ][ i ]: #\u5982\u679c\u53d6\u51fa\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0d\u76f8\u540c\u90a3\u4e48\u5c31\u8fd4\u56de\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u4e86 return strs [ 0 ][: i ] #\u53d6\u4e0d\u5230i\u4f4d\u7f6e\u7684\u5b57\u7b26 return strs [ 0 ] #\u5982\u679cstrs=[\"\"] ,\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u5c31\u597d\u4e86 \u7b2c\u4e8c\u4e2a\u89e3\u51b3\u65b9\u6848: class Solution ( object ): def longestCommonPrefix ( self , strs ): \"\"\" :type strs: List[str] :rtype: str \"\"\" result = \"\" i = 0 while True : try : sets = set ( string [ i ] for string in strs ) #\u8fd9\u4e2aset\u7684\u4f5c\u7528\u8fd4\u56de\u6240\u6709\u5b57\u7b26\u4e32\u540c\u6837\u4f4d\u7f6e\u662f\u5426\u76f8\u540c,\u5982\u679c\u76f8\u540c\u7684\u8bdd\u90a3\u4e48\u5c31\u8fd4\u56de\u8fd9\u4e2a\u76f8\u540c\u7684\u5b57\u7b26,\u4e0d\u540c\u7684\u8bdd\u5c31\u662f\u7a7a if len ( sets ) == 1 : result += sets . pop () #\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u6dfb\u52a0\u5230\u6211\u4eec\u7684result\u4e2d i += 1 else : #\u5426\u7684\u8bdd\u90a3\u4e48\u5c31\u8bf4\u660e\u6ca1\u6709\u76f8\u540c\u7684\u5b57\u7b26\u4e86,\u505c\u6b62\u5faa\u73af break except Exception as e : #\u51fa\u73b0\u5f02\u5e38\u7684\u8bdd\u76f4\u63a5\u8df3\u51fa\u5faa\u73af break return result #\u6700\u540e\u8fd4\u56deresult\u5c31\u597d\u4e86","title":"012-\u529b\u6263\u5237\u989814--\u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"\u529b\u6263\u5237\u9898/013-\u529b\u6263\u5237\u98987--\u6574\u6570\u53cd\u8f6c/","text":"\u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002 \u793a\u4f8b 1: \u8f93\u5165: 123 \u8f93\u51fa: 321 \u793a\u4f8b 2: \u8f93\u5165: -123 \u8f93\u51fa: -321 \u793a\u4f8b 3: \u8f93\u5165: 120 \u8f93\u51fa: 21 \u6ce8\u610f: \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u2212231, 231 \u2212 1]\u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002 class Solution ( object ): def reverse ( self , x ): \"\"\" :type x: int :rtype: int \"\"\" # -214783648 - 214783647 num = 0 #\u8fd9\u4e2a\u662f\u6700\u7ec8\u7684\u8fd4\u56de\u503c #\u5bf9\u8f93\u5165\u7684x\u53d6\u4e00\u4e2a\u7edd\u5bf9\u503c,\u65b9\u4fbf\u53d6\u6bcf\u4e00\u4f4d a = abs ( x ) while ( a != 0 ): #\u521d\u59cb123 #\u60f3\u8981\u5f97\u5230\u662f321 #num=0 #\u7b2c\u4e00\u6b65 #a=12 \u53d6\u51fa\u4e00\u4e2a3 #num=3 #\u7b2c\u4e8c\u6b65 #a=1 \u53d6\u51fa\u4e00\u4e2a2 #num=32 #\u7b2c\u4e09\u6b65 #a=0 \u53d6\u51fa\u4e00\u4e2a1 #num=321 #a=0\u5c31\u662fwhile\u7ed3\u675f\u7684\u6761\u4ef6 #==================== #\u6c42\u4f59\u53d6\u6bcf\u4e00\u4f4d temp = a % 10 num = num * 10 + temp #num\u6bcf\u4e00\u4f4d\u5de6\u79fb\u4e00\u4f4d\u52a0\u4e0a\u6c42\u4f59\u53d6\u51fa\u7684\u4e2a\u4f4d #\u8fd9\u91cc\u8fd8\u662f\u6570\u5b57\u8fd0\u7b97\u7684\u597d\u5904\u5c31\u662f\u4e0d\u7528\u8003\u8651\u672b\u4f4d\u662f0\u7684\u60c5\u51b5 a = int ( a / 10 ) #\u5c06a\u7684\u672b\u4f4d\u53bb\u6389 if x > 0 and num < 2147483647 : return num elif x < 0 and num <= 2147483647 : #\u8d1f\u6570\u591a\u4e00\u4f4d\u6240\u4ee5\u53ef\u4ee5\u53d6\u7b49\u4e8e\u53f7 return - num else : #\u8d8a\u754c return 0","title":"013-\u529b\u6263\u5237\u98987--\u6574\u6570\u53cd\u8f6c"},{"location":"\u529b\u6263\u5237\u9898/014-\u529b\u6263\u5237\u98989--\u56de\u6587\u6570/","text":"\u627f\u63a5\u7b2c7\u9898 \u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002 \u793a\u4f8b 1: \u8f93\u5165: 121 \u8f93\u51fa: true \u793a\u4f8b 2: \u8f93\u5165: -121 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u5de6\u5411\u53f3\u8bfb, \u4e3a -121 \u3002 \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 121- \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u793a\u4f8b 3: \u8f93\u5165: 10 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 01 \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u8fdb\u9636: \u4f60\u80fd\u4e0d\u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f class Solution ( object ): def isPalindrome ( self , x ): \"\"\" :type x: int :rtype: bool \"\"\" num = 0 a = abs ( x ) #\u8d1f\u6570\u76f4\u63a5\u5c31\u662f\u9519\u7684,\u540e\u9762\u52a0\u4e00\u4e2a\u5224\u65ad\u5c31\u884c\u4e86 #\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u4e0a\u4e00\u4e2a\u9898\u7684\u4e00\u4e2a\u5e94\u7528 while ( a != 0 ): temp = a % 10 #\u627e\u5230\u672b\u4f4d num = num * 10 + temp a = int ( a / 10 ) #\u5c06a\u7684\u672b\u4f4d\u53bb\u6389 #\u8f93\u5165\u662f\u8d1f\u6570\u5c31\u662ffalse if x >= 0 and x == num : return True else : return False","title":"014-\u529b\u6263\u5237\u98989--\u56de\u6587\u6570"},{"location":"\u529b\u6263\u5237\u9898/015-\u529b\u6263\u5237\u989835--\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u5728\u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u76ee\u6807\u503c\u4e0d\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b83\u5c06\u4f1a\u88ab\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4f4d\u7f6e\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u65e0\u91cd\u590d\u5143\u7d20\u3002 \u793a\u4f8b 1: \u8f93\u5165: [1,3,5,6], 5 \u8f93\u51fa: 2 \u793a\u4f8b 2: \u8f93\u5165: [1,3,5,6], 2 \u8f93\u51fa: 1 \u793a\u4f8b 3: \u8f93\u5165: [1,3,5,6], 7 \u8f93\u51fa: 4 \u793a\u4f8b 4: \u8f93\u5165: [1,3,5,6], 0 \u8f93\u51fa: 0 class Solution ( object ): def searchInsert ( self , nums , target ): \"\"\" :type nums: List[int] :type target: int :rtype: int \"\"\" #\u5224\u65ad\u4e24\u79cd\u60c5\u51b5,\u5b58\u5728array\u4e2d,\u4e0d\u5b58\u5728?\u4e0d\u7ba1\u5982\u4f55\u90fd\u662f\u8981\u5224\u65ad\u7684,\u7528\u4e00\u4e2a\u7b49\u5f0f #\u5c0f\u7684\u6280\u5de7\u5c31\u662f\u5148\u5224\u65ad\u8ddf\u6700\u5927\u503c\u7684\u6bd4\u8f83,\u6bd4\u6700\u5927\u503c\u5927\u5c31\u52a0\u5230\u6700\u540e\u9762 if target > nums [ len ( nums ) - 1 ]: #\u8fd9\u4e2a\u53ef\u4ee5\u964d\u4f4e\u8fd0\u884c\u603b\u65f6\u95f4 return len ( nums ) for i in range ( len ( nums )): if nums [ i ] >= target : #\u8fd9\u4e00\u4e2a\u5224\u65ad\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e24\u79cd\u60c5\u51b5,\u5982\u679cnums[i] = tarrget \u8fd4\u56de\u8fd9\u4e2a\u7d22\u5f15\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5,\u5982\u679c nums[i] > target \u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u8be5\u662f\u63d2\u5165\u7684\u4f4d\u7f6e,\u771f\u7684\u662f\u5999\u554a return i","title":"015-\u529b\u6263\u5237\u989835--\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e"},{"location":"\u529b\u6263\u5237\u9898/016-\u529b\u6263\u5237\u9898873--\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5b50\u5e8f\u5217\u7684\u957f\u5ea6/","text":"\u5982\u679c\u5e8f\u5217 $$X_1, X_2, ..., X_n $$ X_1, X_2, ..., X_n \u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff0c\u5c31\u8bf4\u5b83\u662f \u6590\u6ce2\u90a3\u5951\u5f0f \u7684\uff1a n >= 3 n >= 3 <span><span class=\"MathJax_Preview\">n &gt;= 3</span><script type=\"math/tex\">n >= 3 \u5bf9\u4e8e\u6240\u6709 $ i + 2 <= n$ i + 2 <= n \uff0c\u90fd\u6709 X_i + X_{i+1} = X_{i+2} X_i + X_{i+1} = X_{i+2} <span><span class=\"MathJax_Preview\">X_i + X_{i+1} = X_{i+2}</span><script type=\"math/tex\">X_i + X_{i+1} = X_{i+2} \u7ed9\u5b9a\u4e00\u4e2a\u4e25\u683c\u9012\u589e\u7684\u6b63\u6574\u6570\u6570\u7ec4\u5f62\u6210\u5e8f\u5217\uff0c\u627e\u5230 A \u4e2d\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de 0 \u3002 \uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5b50\u5e8f\u5217\u662f\u4ece\u539f\u5e8f\u5217 A \u4e2d\u6d3e\u751f\u51fa\u6765\u7684\uff0c\u5b83\u4ece A \u4e2d\u5220\u6389\u4efb\u610f\u6570\u91cf\u7684\u5143\u7d20\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\uff09\uff0c\u800c\u4e0d\u6539\u53d8\u5176\u4f59\u5143\u7d20\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c [3, 5, 8] \u662f [3, 4, 5, 6, 7, 8] \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff09 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3,4,5,6,7,8] \u8f93\u51fa: 5 \u89e3\u91ca: \u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u4e3a\uff1a[1,2,3,5,8] \u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [1,3,7,11,12,14,18] \u8f93\u51fa: 3 \u89e3\u91ca: \u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5f0f\u5b50\u5e8f\u5217\u6709\uff1a [1,11,12]\uff0c[3,11,14] \u4ee5\u53ca [7,11,18] \u3002 \u63d0\u793a\uff1a 3 <= A.length <= 1000 1 <= A[0] < A[1] < ... < A[A.length - 1] <= 10^9 \uff08\u5bf9\u4e8e\u4ee5 Java\uff0cC\uff0cC++\uff0c\u4ee5\u53ca C# \u7684\u63d0\u4ea4\uff0c\u65f6\u95f4\u9650\u5236\u88ab\u51cf\u5c11\u4e86 50%\uff09 class Solution ( object ): def lenLongestFibSubseq ( self , A ): \"\"\" :type A: List[int] :rtype: int \"\"\" s = set ( A ) #set\u4ee5\u540e\u662f\u4e00\u4e2a\u96c6\u5408,\u53bb\u6389\u91cd\u590d\u7684\u5143\u7d20 n = len ( A ) #n\u662fA\u7684\u957f\u5ea6 result = 0 #\u4e0b\u9762\u5f00\u59cb\u904d\u5386 # [1,2,3,4,5,6,7]#\u8981\u8fdb\u884c\u4e24\u4e2afor\u5faa\u73af\u8fdb\u884c\u7ec4\u5408 # \u9996\u9009\u7b2c\u4e00\u4e2a\u5faa\u73af\u53d6\u51fa\u7b2c\u4e00\u4f4d,\u7b2c\u4e8c\u4e2a\u5faa\u73af\u53d6\u51fa\u540e\u9762\u7684\u6240\u6709\u7684\u5143\u7d20 \u8fdb\u884c\u4e0d\u540c\u7684\u7ec4\u5408\u524d\u4e24\u4e2a\u6570 1,2 1,3 1,4 1,5 1,6 2,3 2,4 ..... #\u53d6\u51fa\u524d\u4e24\u4f4d\u540e\u8ba1\u7b97\u540e\u9762\u7684\u7ed3\u679c\u5224\u65ad\u662f\u4e0d\u662f\u5728\u5269\u4e0b\u7684\u5143\u7d20\u4e32\u4e2d S for i in range ( n - 1 ): #\u8981\u7559\u51fa\u4e00\u4f4d\u7ed9\u7b2c\u4e8c\u4e2a\u5143\u7d20 for j in range ( i + 1 , n ): #\u8fd9\u91cc\u8981\u6ce8\u610f\u662fi+1 a , b = A [ i ], A [ j ] #\u53d6\u51fa\u4e24\u4e2a\u5143\u7d20\u8d4b\u7ed9a,b count = 2 #\u53ea\u8981\u662f\u53d6\u51fa\u4e24\u4e2a\u503c\u8bf4\u9762\u6700\u5c11\u4e5f\u5f97\u6709\u4e24\u4e2a\u6570 #\u4e0b\u9762\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97\u5224\u65ad\u4e0b\u9762\u7684\u7ed3\u679c\u662f\u4e0d\u662f\u5728s\u4e2d while a + b in s : #\u53ea\u8981\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5728s\u4e2d\u90a3\u4e48\u7ee7\u7eed\u5faa\u73af a , b = b , a + b #\u7ee7\u7eed\u5411\u4e0b\u8fed\u4ee3 count += 1 #\u4e2a\u6570\u52a01 result = max ( count , result ) #\u6bcf\u6b21\u4fdd\u5b58\u7684\u90fd\u662f\u7ed3\u679c\u6700\u5927\u7684 return result if result > 0 else 0 #\u8fd4\u56de\u6700\u7ec8\u7684\u8ba1\u7b97\u7ed3\u679c \u8fd9\u91cc\u8fd9\u4e48\u5199\u662f\u56e0\u4e3a\u53ea\u6709n>=3\u624d\u80fd\u7ec4\u6210\u5e8f\u5217\u5426\u5219\u7684\u8bdd\u5c31\u8fd4\u56de0","title":"016-\u529b\u6263\u5237\u9898873--\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5b50\u5e8f\u5217\u7684\u957f\u5ea6"},{"location":"\u529b\u6263\u5237\u9898/017-46--\u5168\u6392\u5217/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6ca1\u6709\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u5176\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002 \u793a\u4f8b: \u8f93\u5165: [1,2,3] \u8f93\u51fa: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ] class Solution : def permute ( self , nums : List [ int ]) -> List [ List [ int ]]: if len ( nums ) <= 1 : #\u5982\u679c\u957f\u5ea6\u662f\u5c0f\u4e8e\u7b49\u4e8e1\u90a3\u4e48\u5c31\u53ea\u6709\u81ea\u8eab\u7684\u6392\u5217\u7ec4\u5408 return [ nums ] #\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u522b\u5fd8\u4e86\u4e2d\u62ec\u53f7 answer = [] #\u5b58\u50a8\u6700\u540e\u7684\u7ed3\u679c for i , num in enumerate ( nums ): #\u8fed\u4ee3\u5668,i\u662findex,num\u662f\u5143\u7d20 n = nums [: i ] + nums [ i + 1 :] #\u5228\u9664\u4e86i\u4f4d\u7f6e\u5143\u7d20\u7684\u5269\u4f59\u7684\u6240\u6709\u7684\u5143\u7d20 for y in self . permute ( n ): #\u5c06n\u4f20\u9012\u7ed9 answer . append ([ num ] + y ) return answer \u6d4b\u8bd5 class Solution : def permute ( self , nums : List [ int ]) -> List [ List [ int ]]: if len ( nums ) <= 1 : #\u5982\u679c\u957f\u5ea6\u662f\u5c0f\u4e8e\u7b49\u4e8e1\u90a3\u4e48\u5c31\u53ea\u6709\u81ea\u8eab\u7684\u6392\u5217\u7ec4\u5408 return [ nums ] #\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u522b\u5fd8\u4e86\u4e2d\u62ec\u53f7 answer = [] #\u5b58\u50a8\u6700\u540e\u7684\u7ed3\u679c for i , num in enumerate ( nums ): #\u8fed\u4ee3\u5668,i\u662findex,num\u662f\u5143\u7d20 n = nums [: i ] + nums [ i + 1 :] #\u5228\u9664\u4e86i\u4f4d\u7f6e\u5143\u7d20\u7684\u5269\u4f59\u7684\u6240\u6709\u7684\u5143\u7d20 print ( \"num:\" , num ) for y in self . permute ( n ): #\u8fdb\u884c\u9012\u5f52\u8c03\u7528,\u5728\u9012\u5f52\u7684\u65f6\u5019\u5355\u4e2a\u8fd9\u79cd[3]\u662f\u4e00\u5f00\u59cb\u7684\u5224\u65ad\u8fd4\u56de\u7684\u5343\u4e07\u8981\u6ce8\u610f,\u81ea\u5df1\u597d\u597d\u60f3\u60f3\u8c03\u8bd5\u4e00\u4e0b\u6d41\u7a0b # print(num) print ( \"y:\" , y ) answer . append ([ num ] + y ) print ( \"answer\" , answer ) return answer num : 1 #\u8fdb\u5165for\u5faa\u73af num : 2 #\u9012\u5f52\u8fdb\u5165\u5faa\u73af y : [ 3 ] #\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e1\u76f4\u63a5\u8fd4\u56de\u7684\u5c31\u662f[3] answer [[ 2 , 3 ]] #\u63a5\u6536\u4ee5\u540e\u8ddf\u524d\u9762\u76842\u8fdb\u884c\u7ec4\u5408\u6210[[2,3]]\u7ee7\u7eed\u8fd4\u56de.\u7b2c\u4e8c\u4e2a\u5faa\u73af\u5728\u6b21\u8fdb\u884c\u6240\u4ee5\u4e0b\u9762\u6253\u5370\u7684\u662f3.\u8fd9\u4e2a\u9012\u5f52\u7684\u8fd0\u7528\u4e00\u5b9a\u7684\u597d\u597d\u7684\u60f3\u6e05\u695a num : 3 y : [ 2 ] answer [[ 2 , 3 ], [ 3 , 2 ]] y : [ 2 , 3 ] answer [[ 1 , 2 , 3 ]] y : [ 3 , 2 ] answer [[ 1 , 2 , 3 ], [ 1 , 3 , 2 ]] num : 2 num : 1 y : [ 3 ] answer [[ 1 , 3 ]] num : 3 y : [ 1 ] answer [[ 1 , 3 ], [ 3 , 1 ]] y : [ 1 , 3 ] answer [[ 1 , 2 , 3 ], [ 1 , 3 , 2 ], [ 2 , 1 , 3 ]] y : [ 3 , 1 ] answer [[ 1 , 2 , 3 ], [ 1 , 3 , 2 ], [ 2 , 1 , 3 ], [ 2 , 3 , 1 ]] num : 3 num : 1 y : [ 2 ] answer [[ 1 , 2 ]] num : 2 y : [ 1 ] answer [[ 1 , 2 ], [ 2 , 1 ]] y : [ 1 , 2 ] answer [[ 1 , 2 , 3 ], [ 1 , 3 , 2 ], [ 2 , 1 , 3 ], [ 2 , 3 , 1 ], [ 3 , 1 , 2 ]] y : [ 2 , 1 ] answer [[ 1 , 2 , 3 ], [ 1 , 3 , 2 ], [ 2 , 1 , 3 ], [ 2 , 3 , 1 ], [ 3 , 1 , 2 ], [ 3 , 2 , 1 ]]","title":"017-46--\u5168\u6392\u5217"},{"location":"\u529b\u6263\u5237\u9898/018-\u529b\u6263\u5237\u9898-38--\u62a5\u6570/","text":"\u62a5\u6570\u5e8f\u5217\u662f\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u6309\u7167\u5176\u4e2d\u7684\u6574\u6570\u7684\u987a\u5e8f\u8fdb\u884c\u62a5\u6570\uff0c\u5f97\u5230\u4e0b\u4e00\u4e2a\u6570\u3002\u5176\u524d\u4e94\u9879\u5982\u4e0b\uff1a 1 11 21 1211 111221 1 \u88ab\u8bfb\u4f5c \"one 1\" (\"\u4e00\u4e2a\u4e00\") , \u5373 11\u3002 11 \u88ab\u8bfb\u4f5c \"two 1s\" (\"\u4e24\u4e2a\u4e00\"\uff09, \u5373 21\u3002 21 \u88ab\u8bfb\u4f5c \"one 2\", \"one 1\" \uff08\"\u4e00\u4e2a\u4e8c\" , \"\u4e00\u4e2a\u4e00\") , \u5373 1211\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff081 \u2264 n \u2264 30\uff09\uff0c\u8f93\u51fa\u62a5\u6570\u5e8f\u5217\u7684\u7b2c n \u9879\u3002 \u6ce8\u610f\uff1a\u6574\u6570\u987a\u5e8f\u5c06\u8868\u793a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b 1: \u8f93\u5165: 1 \u8f93\u51fa: \"1\" \u793a\u4f8b 2: \u8f93\u5165: 4 \u8f93\u51fa: \"1211\" class Solution ( object ): def countAndSay ( self , n ): \"\"\" :type n: int :rtype: str \"\"\" seq = \"1\" for i in range ( n - 1 ): #\u5faa\u73af\u7684n-1\u6b21\u5c31\u53ef\u4ee5\u4e86 .\u5982\u679c\u4e00\u5f00\u59cb\u5c31\u662f1\u90a3\u4e48\u5c31\u8f93\u51fa\u672c\u8eab\u6ca1\u6709\u8fdb\u5165\u5faa\u73af seq = self . getNext ( seq ) #\u5faa\u73af\u83b7\u53d6\u7684\u662f\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32 return seq def getNext ( self , seq ): i , next_seq = 0 , \"\" #i\u5faa\u73af\u7ed3\u675f\u7684\u6807\u5fd7,\u8981\u904d\u5386\u6574\u4e2a\u7684\u5b57\u7b26\u4e32 \u6bd4\u5982\u73b0\u5728\u7684\u662f1211 #\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684i\u8ddf\u4e0a\u9762\u7684i\u8fd8\u662f\u4e0d\u4e00\u6837\u7684. while i < len ( seq ): count = 1 #\u4e00\u5f00\u59cb\u4f20\u8fdb\u6765\u7684count\u80af\u5b9a\u662f\u6700\u5c11\u662f1 while i < len ( seq ) - 1 and seq [ i ] == seq [ i + 1 ]: #\u8fd9\u4e2a\u5c31\u662f\u904d\u5386 ,\u8fd9\u91cc\u7684i<len(seq)-1 \u662f\u56e0\u4e3a\u540e\u9762\u7684\u5224\u65ad,\u5982\u679c\u6700\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u5c31\u4e0d\u7528\u8fdb\u8fd9\u4e2a\u5faa\u73af\u4e86 count += 1 print ( count ) i += 1 next_seq += str ( count ) + seq [ i ] i += 1 #\u8fd9\u91cc\u7684i+1\u662f\u56e0\u4e3a\u8981\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u4e0d\u540c\u5143\u7d20\u7684\u7d22\u5f15 return next_seq \u601d\u60f3\u5c31\u662f\u9012\u5f52\u7684\u5c06\u4e0a\u4e00\u4e2asequence\u4f20\u9012\u4e0b\u53bb,\u7136\u540e\u8fdb\u884c\u904d\u5386 \u00b6 \u5bf9\u76f8\u540c\u7684\u5143\u7d20\u8fdb\u884c\u8ba1\u6570,\u6700\u540e\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u76f8\u52a0,\u7136\u540e\u5c06count\u518d\u5f52\u4e00\u7ee7\u7eed\u8fdb\u884c\u904d\u5386.\u6700\u7ec8\u4f20\u9012\u5230\u60f3\u8981\u7684\u7b2c\u51e0\u4e2a\u62a5\u6570","title":"018-\u529b\u6263\u5237\u9898-38--\u62a5\u6570"},{"location":"\u529b\u6263\u5237\u9898/018-\u529b\u6263\u5237\u9898-38--\u62a5\u6570/#sequence","text":"\u5bf9\u76f8\u540c\u7684\u5143\u7d20\u8fdb\u884c\u8ba1\u6570,\u6700\u540e\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u76f8\u52a0,\u7136\u540e\u5c06count\u518d\u5f52\u4e00\u7ee7\u7eed\u8fdb\u884c\u904d\u5386.\u6700\u7ec8\u4f20\u9012\u5230\u60f3\u8981\u7684\u7b2c\u51e0\u4e2a\u62a5\u6570","title":"\u601d\u60f3\u5c31\u662f\u9012\u5f52\u7684\u5c06\u4e0a\u4e00\u4e2asequence\u4f20\u9012\u4e0b\u53bb,\u7136\u540e\u8fdb\u884c\u904d\u5386"},{"location":"\u529b\u6263\u5237\u9898/019-\u529b\u6263\u5237\u989853--\u6700\u5927\u5b50\u5e8f\u548c/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002 \u793a\u4f8b: \u8f93\u5165: [-2,1,-3,4,-1,2,1,-5,4], \u8f93\u51fa: 6 \u89e3\u91ca: \u8fde\u7eed\u5b50\u6570\u7ec4 [4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a 6\u3002 \u8fdb\u9636: \u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a O(n) \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684\u5206\u6cbb\u6cd5\u6c42\u89e3\u3002 class Solution ( object ): def maxSubArray ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" if max ( nums ) < 0 : #\u90fd\u662f\u8d1f\u6570\u90a3\u4e48\u5c31\u8fd4\u56de\u6700\u5927\u503c return max ( nums ) local_max , global_max = 0 , 0 #\u6700\u7ec8\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u6b63\u7684\u521d\u59cb\u5316\u4e3a0\u662f\u5408\u7406\u7684 for num in nums : #\u5c06\u6bcf\u4e00\u4e2a\u6570\u53d6\u51fa\u6765 local_max = max ( 0 , local_max + num ) #\u8fd9\u4e00\u53e5\u5c31\u4fdd\u8bc1\u4e86\u4f60\u5728\u540e\u9762\u7684\u52a0\u548c\u7684\u8fc7\u7a0b\u4e2d,\u5982\u679c\u52a0\u51fa\u6765\u662f\u8d1f\u6570\u90a3\u4e48\u5c31\u76f4\u63a5\u91cd\u65b0\u53d8\u62100,\u56e0\u4e3a\u524d\u9762\u7684\u52a0\u548c\u6bd40\u5c0f,\u90a3\u4e48\u5c31\u6ca1\u6709\u518d\u4f7f\u7528\u524d\u9762\u6570\u5b57\u7684\u610f\u4e49,\u76f4\u63a5\u518d\u4ece\u96f6\u5f00\u59cb\u7b97,\u5f53\u7136\u524d\u9762\u52a0\u548c\u662f\u6574\u6570\u7684\u503c\u4f1a\u88abglobal_max\u8fdb\u884c\u4fdd\u5b58 # print(local_max) global_max = max ( local_max , global_max ) # print(global_max) return global_max","title":"019-\u529b\u6263\u5237\u989853--\u6700\u5927\u5b50\u5e8f\u548c"},{"location":"\u529b\u6263\u5237\u9898/020-\u529b\u6263\u5237\u9898-58--\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u7a7a\u683c ' ' \u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u8bf7\u8fd4\u56de 0 \u3002 \u8bf4\u660e\uff1a\u4e00\u4e2a\u5355\u8bcd\u662f\u6307\u7531\u5b57\u6bcd\u7ec4\u6210\uff0c\u4f46\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b: \u8f93\u5165: \"Hello World\" \u8f93\u51fa: 5 class Solution ( object ): def lengthOfLastWord ( self , s ): \"\"\" :type s: str :rtype: int \"\"\" count = 0 #\u8bb0\u5f55\u7684\u662f\u6700\u540e\u7684\u5355\u8bcd\u7684\u957f\u5ea6 local_count = 0 #\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 for i in range ( len ( s )): #\u5bf9\u6574\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u904d\u5386 if s [ i ] == \" \" : #\u5982\u679c\u904d\u5386\u5230\u4e86\" \" \u5c31\u8ba9local_count\u53d8\u62100 local_count = 0 else : #\u5426\u5219\u7684\u8bdd\u8bf4\u660e\u5f53\u524d\u7684\u8fd9\u4e2a\u5355\u8bcd\u8fd8\u6ca1\u6709\u904d\u5386\u5b8c local_count += 1 count = local_count #\u4f7f\u7528count\u4fdd\u5b58\u904d\u5386\u5230\u7684\u5355\u8bcd\u7684\u957f\u5ea6,\u6700\u540e\u4fdd\u5b58\u7684\u5c31\u662f\u6700\u540e\u7684\u5355\u8bcd\u7684\u957f\u5ea6 return count","title":"020-\u529b\u6263\u5237\u9898-58--\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6"},{"location":"\u529b\u6263\u5237\u9898/021-\u529b\u6263\u5237\u9898151--\u7ffb\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u4e2a\u7ffb\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: \"the sky is blue\" \u8f93\u51fa: \"blue is sky the\" \u793a\u4f8b 2\uff1a \u8f93\u5165: \" hello world! \" \u8f93\u51fa: \"world! hello\" \u89e3\u91ca: \u8f93\u5165\u5b57\u7b26\u4e32\u53ef\u4ee5\u5728\u524d\u9762\u6216\u8005\u540e\u9762\u5305\u542b\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e0d\u80fd\u5305\u62ec\u3002 \u793a\u4f8b 3\uff1a \u8f93\u5165: \"a good example\" \u8f93\u51fa: \"example good a\" \u89e3\u91ca: \u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u95f4\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5c06\u53cd\u8f6c\u540e\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u51cf\u5c11\u5230\u53ea\u542b\u4e00\u4e2a\u3002 \u8bf4\u660e\uff1a \u65e0\u7a7a\u683c\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u5355\u8bcd\u3002 \u8f93\u5165\u5b57\u7b26\u4e32\u53ef\u4ee5\u5728\u524d\u9762\u6216\u8005\u540e\u9762\u5305\u542b\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e0d\u80fd\u5305\u62ec\u3002 \u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u95f4\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5c06\u53cd\u8f6c\u540e\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u51cf\u5c11\u5230\u53ea\u542b\u4e00\u4e2a\u3002 \u8fdb\u9636\uff1a \u8bf7\u9009\u7528 C \u8bed\u8a00\u7684\u7528\u6237\u5c1d\u8bd5\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u539f\u5730\u89e3\u6cd5\u3002 class Solution ( object ): def reverseWords ( self , s ): \"\"\" :type s: str :rtype: str \"\"\" if s == \"\" : #\u4ec0\u4e48\u4e5f\u6ca1\u6709\u5c31\u76f4\u63a5\u8f93\u51fas return s ls = s . split () #\u5206\u5272\u5b57\u7b26\u4e32\u6210\u4e00\u4e2a\u4e2a\u7684\u5355\u8bcd\u5217\u8868 # print(ls) if ls == []: return \"\" result = \"\" for i in range ( 0 , len ( ls ) - 1 ): #\u8fd9\u91cc\u5faa\u73af\u6dfb\u52a0\u7684\u65f6\u5019\u662f\u4ece\u6700\u540e\u9762\u6dfb\u52a0\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a,\u539f\u56e0\u662f\u6211\u4eec\u8981\u6dfb\u52a0\" \",\u56e0\u6b64\u5012\u6570\u7b2c\u4e00\u4e2a\u6700\u540e\u7684\u65f6\u5019\u76f4\u63a5\u8fdb\u884cappend\u5c31\u597d\u4e86 result += ls [ len ( ls ) - 1 - i ] + \" \" #len(ls)-1\u662f\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15 result += ls [ 0 ] return result","title":"021-\u529b\u6263\u5237\u9898151--\u7ffb\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd"},{"location":"\u529b\u6263\u5237\u9898/022-\u529b\u6263\u5237\u9898-\u4e8c\u8fdb\u5236\u6c42\u548c/","text":"\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4ed6\u4eec\u7684\u548c\uff08\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002 \u8f93\u5165\u4e3a\u975e\u7a7a\u5b57\u7b26\u4e32\u4e14\u53ea\u5305\u542b\u6570\u5b57 1 \u548c 0\u3002 \u793a\u4f8b 1: \u8f93\u5165: a = \"11\", b = \"1\" \u8f93\u51fa: \"100\" \u793a\u4f8b 2: \u8f93\u5165: a = \"1010\", b = \"1011\" \u8f93\u51fa: \"10101\" class Solution ( object ): def addBinary ( self , a , b ): \"\"\" :type a: str :type b: str :rtype: str \"\"\" result , carry , val = \"\" , 0 , 0 #\u7ed3\u679c,\u8fdb\u4f4d,\u5f53\u524d\u503c for i in range ( max ( len ( a ), len ( b ))): #\u53d6\u5f97\u662f\u6700\u5927\u957f\u5ea6\u7684\u4f5c\u4e3a\u5faa\u73af\u7684\u6b21\u6570 val = carry #\u8fd9\u91cc\u7684\u539f\u56e0\u662f\u540e\u9762\u7684carry\u4e3a\u76f4\u63a5\u590d\u5236\u7ed9val\u4f5c\u4e3a\u4e0b\u4e00\u4f4d\u52a0\u51cf\u7684\u521d\u59cb\u503c if i < len ( a ): val += int ( a [ - ( i + 1 )]) #\u4ece\u53f3\u5f80\u5de6\u7b97 if i < len ( b ): #\u5047\u5982b\u6bd4\u8f83\u77ed\u7684\u8bdd\u4f7f\u7528\u8fd9\u4e2a-(i+1)\u4e5f\u540c\u6837\u6ee1\u8db3\u4ece\u53f3\u5411\u5de6\u53d6\u6570\u5b57 val += int ( b [ - ( i + 1 )]) carry , val = val // 2 , val % 2 #val//2 \u5982\u679c\u7ed3\u679c\u662f2//2\u90a3\u4e48\u5c31\u662fcarry=1\u5c31\u8981\u8fdb\u4f4d\u5982\u679c\u662f1//2\u90a3\u4e48\u5c31\u662f0\u8fd8\u662f\u4e0d\u4f1a\u8fdb\u4f4d\u7684.\u5bf9\u4e8eval\u6765\u8bf4\u5982\u679c\u662f2%2\u90a3\u4e48\u4f59\u4e0b\u7684\u5c31\u662f0\u8bf4\u660e\u8fdb\u4f4d\u4e86,\u5982\u679c\u6ca1\u6709\u8fdb\u4f4d\u6c42\u4f59\u540e\u5c31\u662f1 result += str ( val ) #\u5c06\u6700\u540e\u8fd9\u4e00\u4f4d\u52a0\u7684\u8fd0\u7b97\u7ed3\u679c\u8fdb\u884c\u6dfb\u52a0 if carry : #\u8fd0\u7b97\u5230\u4e86\u6700\u540e\u7684\u65f6\u5019\u5982\u679c\u6709\u8fdb\u4f4d\u7684\u8bdd,\u90a3\u4e48\u5c31\u591a\u6dfb\u52a0\u4e00\u4f4d result += str ( 1 ) return result [:: - 1 ] #\u6dfb\u52a0\u662f\u4ece\u53f3\u5f80\u5de6,\u8f93\u51fa\u7684\u65f6\u5019\u9700\u8981\u8fdb\u884c\u7ffb\u8f6c","title":"022-\u529b\u6263\u5237\u9898-\u4e8c\u8fdb\u5236\u6c42\u548c"},{"location":"\u529b\u6263\u5237\u9898/023-\u529b\u6263\u5237\u9898-69--x-\u7684\u5e73\u65b9\u6839/","text":"\u5b9e\u73b0 int sqrt(int x) \u51fd\u6570\u3002 \u8ba1\u7b97\u5e76\u8fd4\u56de x \u7684\u5e73\u65b9\u6839\uff0c\u5176\u4e2d x \u662f\u975e\u8d1f\u6574\u6570\u3002 \u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7ed3\u679c\u53ea\u4fdd\u7559\u6574\u6570\u7684\u90e8\u5206\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002 \u793a\u4f8b 1: \u8f93\u5165: 4 \u8f93\u51fa: 2 \u793a\u4f8b 2: \u8f93\u5165: 8 \u8f93\u51fa: 2 \u8bf4\u660e: 8 \u7684\u5e73\u65b9\u6839\u662f 2.82842..., \u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002 class Solution ( object ): def mySqrt ( self , x ): \"\"\" :type x: int :rtype: int \"\"\" if x < 2 : return x left , right = 1 , x // 2 #\u6700\u5c0f\u4ece1\u5f00\u59cb,\u6700\u5927\u7684\u503c\u9876\u591a\u662f\u9664\u4ee52\u7684\u6574\u6570 while left <= right : mid = left + ( right - left ) // 2 #\u6c42\u7684\u662fleft\u548cright\u7684\u4e2d\u95f4\u503c if mid > x / mid : #\u8fd9\u884c\u4ee3\u7801\u7684\u610f\u601d\u5c31\u662f\u8bf4\u73b0\u5728\u7684\u8fd9\u4e2amid\u503c\u504f\u5927mid**2 = x \u8fd9\u4e48\u53bb\u7b97\u7684 right = mid - 1 #\u8fd9\u4e2a\u5c31\u662f\u8bf4\u504f\u5927\u7684\u8bdd\u5c31\u8ba9\u53f3\u8fb9\u7684\u503c\u5de6\u79fb\u7f29\u5c0f\u8303\u56f4,\u8ba9\u4e2d\u95f4\u503c\u51cf\u5c0f else : left = mid + 1 #\u5982\u679c\u6211\u4eec\u6c42\u7684mid\u6bd4\u8f83\u5c0f\u7684\u8bdd\u5c31\u8ba9left\u53f3\u79fb\u589e\u5927mid\u7684\u503c return left - 1 #\u8fd9\u4e2a\u7684\u8bdd\u662f\u56e0\u4e3a\u8fdb\u4e86\u6700\u540e\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6left\u80af\u5b9a\u8981\u591a\u52a01\u6700\u540e\u51cf\u63891","title":"023-\u529b\u6263\u5237\u9898-69--x-\u7684\u5e73\u65b9\u6839"},{"location":"\u529b\u6263\u5237\u9898/024-\u529b\u6263\u5237\u9898-66--\u52a0\u4e00/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\uff0c\u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u3002 \u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u4e00\u4e2a\u6570\u5b57\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6574\u6570 0 \u4e4b\u5916\uff0c\u8fd9\u4e2a\u6574\u6570\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002 \u793a\u4f8b 1: \u8f93\u5165: [1,2,3] \u8f93\u51fa: [1,2,4] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 123\u3002 \u793a\u4f8b 2: \u8f93\u5165: [4,3,2,1] \u8f93\u51fa: [4,3,2,2] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 4321\u3002 class Solution ( object ): def plusOne ( self , digits ): \"\"\" :type digits: List[int] :rtype: List[int] \"\"\" for i in reversed ( range ( len ( digits ))): #\u4ece\u53f3\u5411\u5de6\u53d6\u6570 if digits [ i ] == 9 : #\u53d6\u5230\u7684\u6570\u662f9\u5c31\u53d8\u62100 digits [ i ] = 0 else : digits [ i ] += 1 #\u53d6\u5230\u7684\u4e0d\u662f9,\u90a3\u4e48\u5c31\u8ba9\u8fd9\u4e00\u4f4d+1,\u6bd4\u5982\u7b2c\u4e00\u4e2a\u5faa\u73af\u7684\u65f6\u5019\u662f8\u90a3\u4e48\u5c31\u4f1a\u8df3\u5230\u8fd9\u91cc,\u76f4\u63a5\u52a01\u5e76\u4e14\u8fd4\u56de #\u5982\u679c\u4e00\u5f00\u59cb\u53d6\u5230\u7684\u662f9\u7ed9\u5b83\u7f6e\u96f6.\u5faa\u73af\u5230\u4e0b\u4e00\u4f4d\u4e0d\u662f8\u90a3\u4e48\u52a0\u4e00\u5c31\u662f\u5bf9\u524d\u9762\u7684\u4e00\u4e2a\u8fdb\u4f4d\u52a0 return digits digits [ 0 ] = 1 #\u5982\u679c\u662f\u6574\u4e2a\u7684for\u5faa\u73af\u90fd\u6267\u884c\u5b8c\u4e86\u90a3\u4e48\u5c31\u8bf4\u660e\u662f\u5168\u662f9999\u7684\u60c5\u51b5,\u90a3\u4e48for\u5faa\u73af\u5b8c\u4e86\u4ee5\u540e\u7684\u7ed3\u679c\u5c31\u662f0000 #\u6b64\u65f6\u6211\u4eec\u628a\u7b2c\u4e00\u4f4d\u53d8\u62101\u540c\u65f6\u672b\u4f4d\u6dfb\u52a00\u53d8\u621010000\u6700\u540e\u518d\u8fd4\u56de digits . append ( 0 ) return digits","title":"024-\u529b\u6263\u5237\u9898-66--\u52a0\u4e00"},{"location":"\u529b\u6263\u5237\u9898/025-\u529b\u6263\u5237\u9898-100-\u76f8\u540c\u7684\u6811/","text":"\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u53c9\u6811\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u9a8c\u5b83\u4eec\u662f\u5426\u76f8\u540c\u3002 \u5982\u679c\u4e24\u4e2a\u6811\u5728\u7ed3\u6784\u4e0a\u76f8\u540c\uff0c\u5e76\u4e14\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u8ba4\u4e3a\u5b83\u4eec\u662f\u76f8\u540c\u7684\u3002 \u793a\u4f8b 1: \u8f93\u51fa: true \u793a\u4f8b 2: \u8f93\u51fa: false \u793a\u4f8b 3: \u8f93\u51fa: false \u4e3b\u8981\u662f\u9012\u5f52\u7684\u4f7f\u7528 # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def isSameTree ( self , p , q ): \"\"\" :type p: TreeNode :type q: TreeNode :rtype: bool \"\"\" if p is None and q is None : #\u5982\u679c\u4e00\u5f00\u59cb\u7684\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u7a7a\u7684\u8bdd\u90a3\u4e48\u5c31\u662f\u8bf4\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\u90a3\u4e48\u5c31\u662f\u76f8\u7b49\u7684,\u5373\u4f7f\u662f\u9012\u5f52\u4e2d,\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u4e0d\u5b58\u5728\u7684,\u8fd4\u56deTrue\u7136\u540e\u63a5\u7740\u53bb\u5224\u65ad\u522b\u7684\u8282\u70b9\u5c31\u597d\u4e86 return True if p is not None and q is not None : #\u5982\u679c\u8bf4\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u4e0d\u662f\u7a7a\u7684\u8bdd,\u90a3\u4e48\u5c31\u5224\u65ad\u8fd9\u4e2a\u540c\u7b49\u4f4d\u7f6e\u7684\u8282\u70b9\u7684\u503c\u662f\u4e0d\u662f\u4e00\u6837\u7684,\u4ed6\u4eec\u7684\u5de6\u5b69\u5b50\u4ee5\u53ca\u53f3\u5b69\u5b50\u662f\u4e0d\u662f\u4e00\u6837\u7684.\u9012\u5f52\u8fdb\u884c\u8c03\u7528.\u8fd9\u6837\u9012\u5f52\u5224\u65ad\u540e,\u4e09\u4e2a\u6761\u4ef6\u6ee1\u8db3\u5c31\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u662f\u76f8\u7b49\u7684,\u6700\u540e\u8fd9\u9897\u6811\u662f\u76f8\u7b49\u7684. return p . val == q . val and self . isSameTree ( p . left , q . left ) and self . isSameTree ( p . right , q . right ) return False #\u5982\u679c\u5b58\u5728\u4e00\u68f5\u6811\u975e\u7a7a,\u4e00\u68f5\u6811\u662f\u7a7a\u7684\u90a3\u4e48\u5c31\u8fd4\u56deFalse","title":"025-\u529b\u6263\u5237\u9898-100-\u76f8\u540c\u7684\u6811"},{"location":"\u529b\u6263\u5237\u9898/026-\u529b\u6263\u5237\u9898-108--\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811/","text":"\u5c06\u4e00\u4e2a\u6309\u7167\u5347\u5e8f\u6392\u5217\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u8f6c\u6362\u4e3a\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307\u4e00\u4e2a\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9 \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\u3002(\u6700\u6df1\u7684\u6df1\u5ea6\u548c\u6700\u6d45\u7684\u6df1\u5ea6\u4e0d\u80fd\u8d85\u8fc71) \u793a\u4f8b: \u5e94\u8be5\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u662f\u53ef\u80fd\u7684\u7b54\u6848,\u8fd9\u91cc\u7684\u8fd9\u4e2a\u7b54\u6848\u5e76\u4e0d\u662f\u552f\u4e00\u7684 # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def sortedArrayToBST ( self , nums ): \"\"\" :type nums: List[int] :rtype: TreeNode \"\"\" def to_bst ( nums , start , end ): #\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u7684\u51fd\u6570,\u4f20\u9012\u8fdb\u6765\u7684\u662f\u539f\u59cb\u7684\u6570\u7ec4,\u4ee5\u53ca\u8d77\u59cb\u8ddf\u7ec8\u6b62\u7684\u4f4d\u7f6e if start > end : #\u5f53\u8fd9\u4e2astrat>end\u7684\u65f6\u5019\u5c31\u8fd4\u56de\u7a7a,\u6bd4\u5982\u8fd9\u91cc\u7684mid\u8ddfstart\u60f3\u7b49\u7684\u65f6\u5019,\u5c31\u76f4\u63a5\u8fd4\u56de\u7a7a,\u610f\u5473\u7740\u8fd9\u4e2a\u8282\u70b9\u662f\u7a7a\u7684\u5c31\u597d\u4e86 return None mid = ( start + end ) // 2 #\u56e0\u4e3a\u8981\u6c42\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811,\u56e0\u6b64\u4e24\u8fb9\u6811\u7684\u5143\u7d20\u7684\u4e2a\u6570\u76f8\u5dee\u4e0d\u80fd\u8d85\u8fc71,\u6211\u4eec\u5c31\u53d6\u4e2d\u95f4\u503c\u4f5c\u4e3a\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9 node = TreeNode ( nums [ mid ]) #\u5b58\u50a8\u8fd9\u4e2a\u8282\u70b9\u7684\u503c node . left = to_bst ( nums , start , mid - 1 ) #\u9012\u5f52\u5b58\u50a8\u5de6\u5b69\u5b50 node . right = to_bst ( nums , mid + 1 , end ) #\u9012\u5f52\u5b58\u50a8\u53f3\u5b69\u5b50 return node #\u8fd4\u56de\u8fd9\u4e2a\u8282\u70b9 return to_bst ( nums , 0 , len ( nums ) - 1 ) #\u6574\u4e2a\u7684\u9012\u5f52\u8c03\u7528,\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u7684\u6570\u7ec4 # print (node)","title":"026-\u529b\u6263\u5237\u9898-108--\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"\u529b\u6263\u5237\u9898/027-\u5b57\u8282\u8df3\u52a8\u7b14\u8bd5\u9898-\u5faa\u73af\u94fe\u8868\u5b9e\u73b0\u7ea6\u745f\u592b\u73af/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Mon Jul 1 18:40:30 2019 @author: zangz \"\"\" class Node ( object ): \"\"\"\u8282\u70b9\"\"\" def __init__ ( self , item ): self . item = item #\u8fd9\u4e2a\u94fe\u8868\u8282\u70b9\u7684\u503c self . next = None #\u8fd9\u4e2a\u94fe\u8868\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9,\u6bcf\u4e00\u4e2a\u8282\u70b9\u770b\u6210\u662f\u4e00\u4e2a\u5bf9\u8c61 class SinCycLinkedlist ( object ): \"\"\"\u5355\u5411\u5faa\u73af\u94fe\u8868\"\"\" def __init__ ( self ): self . _head = None #\u521d\u59cb\u5316\u5934\u7ed3\u70b9\u662f\u7a7a\u7684 def is_empty ( self ): \"\"\"\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\"\"\" return self . _head == None def yuesefu ( self , N ): \"\"\"\u7ea6\u745f\u592b\u73af\"\"\" # if self.is_empty(): # return cur = self . _head #\u6e38\u6807\u6307\u5411\u5f00\u59cb\u7684\u5934\u7ed3\u70b9 list1 = [] while True : for i in range ( N - 2 ): #\u8d70\u4e00\u6b65 cur = cur . next #\u8ba9\u6e38\u6807\u6307\u5411\u7b2c\u4e8c\u4e2a\u8282\u70b9 # print(cur.next.item) #\u6253\u5370\u7b2c\u4e09\u4e2a\u8282\u70b9\u7684\u503c list1 . append ( cur . next . item ) cur . next = cur . next . next #\u7b2c\u4e8c\u4e2a\u8282\u70b9\u8fde\u63a5\u7b2c\u56db\u4e2a\u8282\u70b9 cur = cur . next #\u6e38\u6807\u6307\u5411\u7b2c\u56db\u4e2a\u8282\u70b9 if cur . next == cur : #\u81ea\u5df1\u6307\u5411\u81ea\u5df1\u7684\u65f6\u5019\u8bf4\u660e\u53ea\u6709\u4e00\u4e2a\u4e86 # print(cur.item) list1 . append ( cur . next . item ) return list1 def append ( self , item ): \"\"\"\u5c3e\u90e8\u6dfb\u52a0\u8282\u70b9\"\"\" node = Node ( item ) if self . is_empty (): self . _head = node node . next = self . _head else : # \u79fb\u5230\u94fe\u8868\u5c3e\u90e8 cur = self . _head while cur . next != self . _head : cur = cur . next # \u5c06\u5c3e\u8282\u70b9\u6307\u5411node cur . next = node # \u5c06node\u6307\u5411\u5934\u8282\u70b9_head node . next = self . _head if __name__ == \"__main__\" : m = int ( input ()) #\u8f93\u5165\u6709\u51e0\u7ec4\u6837\u4f8b list2 = [] #\u7528\u6765\u63a5\u6536\u8f93\u5165\u7684\u591a\u7ec4\u6837\u4f8b\u7684\u503c for i in range ( m ): n = int ( input ()) list2 . append ( n ) #\u5bf9\u591a\u7ec4\u6837\u4f8b\u6c42\u7ea6\u745f\u592b\u73af\u5e76\u8f93\u51fa for j in list2 : ll = SinCycLinkedlist () #\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684\u94fe\u8868 for a in range ( j ): ll . append ( a + 1 ) list1 = [] list1 = ll . yuesefu ( 3 ) #3\u662f\u6570\u52303\u7684\u81ea\u6740 str1 = \"\" for b in list1 : #\u6309\u7167\u8f93\u51fa\u7684\u8981\u6c42\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u62fc\u63a5 str1 += str ( b ) + \" \" print ( str1 )","title":"027-\u5b57\u8282\u8df3\u52a8\u7b14\u8bd5\u9898-\u5faa\u73af\u94fe\u8868\u5b9e\u73b0\u7ea6\u745f\u592b\u73af"},{"location":"\u529b\u6263\u5237\u9898/028-\u529b\u6263\u5237\u9898107--\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386-II/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u81ea\u5e95\u5411\u4e0a\u7684\u5c42\u6b21\u904d\u5386\u3002 \uff08\u5373\u6309\u4ece\u53f6\u5b50\u8282\u70b9\u6240\u5728\u5c42\u5230\u6839\u8282\u70b9\u6240\u5728\u7684\u5c42\uff0c\u9010\u5c42\u4ece\u5de6\u5411\u53f3\u904d\u5386\uff09 \u4f8b\u5982\uff1a \u7ed9\u5b9a\u4e8c\u53c9\u6811 [3,9,20,null,null,15,7], # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def levelOrderBottom ( self , root ): \"\"\" :type root: TreeNode :rtype: List[List[int]] \"\"\" if root is None : #\u5982\u679croot\u8fd9\u4e2a\u8282\u70b9\u5bf9\u8c61\u662f\u7a7a\u7684\u5c31\u8fd4\u56de\u7a7a\u7684lieb return [] result , current = [],[ root ] #result\u7528\u4e8e\u5b58\u50a8\u904d\u5386\u7684\u7ed3\u679c,\u6211\u4eec\u4ece\u4e0a\u5230\u4e0b\u8fdb\u884c\u904d\u5386,\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u5012\u7740\u8f93\u51fa\u5c31\u884c,current\u4e2d\u5b58\u50a8\u7684\u662f\u76ee\u524d\u9700\u8981\u8fdb\u884c\u904d\u5386\u7684\u5bf9\u8c61 while current : #\u5f53current\u4e2d\u6709\u5bf9\u8c61\u7684\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7ee7\u7eed\u5411\u4e0b\u904d\u5386 next_levels , vals = [],[] #next_levels\u5b58\u50a8\u7684\u662f\u4e0b\u4e00\u5c42\u9700\u8981\u8fdb\u884c\u904d\u5386\u7684\u5bf9\u8c61,vals\u5c31\u662f\u904d\u5386\u5230\u7684\u8fd9\u4e00\u5c42\u7684\u5143\u7d20 for node in current : #\u904d\u5386\u8fd9\u4e00\u5c42\u7684\u8282\u70b9\u5bf9\u8c61:\u5c06\u4ed6\u4eec\u7684\u503c\u8fdb\u884c\u5b58\u50a8 vals . append ( node . val ) #\u4ece\u5de6\u5230\u53f3\u5b58\u50a8\u8981\u904d\u5386\u7684\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\u5bf9\u8c61,\u8fd9\u6837\u53d6\u5f97\u65f6\u5019\u4e5f\u662f\u4ece\u5de6\u5230\u53f3\u5b58\u503c if node . left : #\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u6709\u5de6\u5b69\u5b50\u5b58\u50a8\u5230\u4e34\u65f6\u5b58\u50a8\u8fd9\u4e00\u5c42\u8282\u70b9\u5bf9\u8c61\u7684\u5217\u8868\u4e2d next_levels . append ( node . left ) if node . right : next_levels . append ( node . right ) result . append ( vals ) #\u5c06\u8fd9\u4e00\u5c42\u7684\u5143\u7d20\u503c\u5217\u8868\u8fdb\u884c\u5b58\u50a8 current = next_levels #\u66f4\u65b0current\u4e2d\u5b58\u50a8\u7684\u9700\u8981\u904d\u5386\u7684\u5bf9\u8c61 return result [:: - 1 ] #\u8fdb\u884c\u53cd\u8f6c\u8f93\u51fa","title":"028-\u529b\u6263\u5237\u9898107--\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386-II"},{"location":"\u529b\u6263\u5237\u9898/029-\u529b\u6263\u5237\u9898-104--\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5927\u6df1\u5ea6\u3002 \u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002 \u8bf4\u660e: \u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002 \u793a\u4f8b\uff1a \u7ed9\u5b9a\u4e8c\u53c9\u6811 [3,9,20,null,null,15,7]\uff0c # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def maxDepth ( self , root ): \"\"\" :type root: TreeNode :rtype: int \"\"\" if root is None : #\u5982\u679croot\u8fd9\u4e2a\u8282\u70b9\u5bf9\u8c61\u662f\u7a7a\u7684\u5c31\u8fd4\u56de\u7a7a\u7684lieb return 0 else : #\u4f7f\u7528\u7684\u5c31\u662f\u9012\u5f52\u7b97\u6cd5,\u6bcf\u4e00\u6b21\u8fd4\u56de\u90fd\u662ftoot\u8282\u70b9\u7684\u8def\u5f84\u6700\u957f\u7684\u5b50\u6811,\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e00\u76f4\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9,\u7136\u540e\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u52a01\u56e0\u4e3a\u6700\u540e\u7684\u53f6\u5b50\u7ed3\u70b9\u8fd4\u56de\u7684\u662f0\u4f46\u662f\u672c\u8eab\u4e5f\u662f\u5305\u542b\u4e86\u4e00\u5c42\u7684,\u6240\u4ee5\u8981\u52a01 return max ( self . maxDepth ( root . left ), self . maxDepth ( root . right )) + 1","title":"029-\u529b\u6263\u5237\u9898-104--\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"},{"location":"\u529b\u6263\u5237\u9898/030-\u529b\u6263\u5237\u9898-111--\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5c0f\u6df1\u5ea6\u3002 \u6700\u5c0f\u6df1\u5ea6\u662f\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u91cf\u3002 \u8bf4\u660e: \u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002 \u793a\u4f8b: \u7ed9\u5b9a\u4e8c\u53c9\u6811 [3,9,20,null,null,15,7] \u53e6\u5916\u8fd9\u9053\u9898\u7684\u5173\u952e\u662f\u641e\u6e05\u695a\u9012\u5f52\u7ed3\u675f\u6761\u4ef6 \u53f6\u5b50\u8282\u70b9\u7684\u5b9a\u4e49\u662f\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u90fd\u4e3aNULL\u65f6\u53eb\u505a\u53f6\u5b50\u8282\u70b9 \u5f53root\u8282\u70b9\u5de6\u53f3\u5b69\u5b50\u90fd\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de1 \u5f53root\u8282\u70b9\u5de6\u53f3\u5b69\u5b50\u6709\u4e00\u4e2a\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de\u4e0d\u4e3a\u7a7a\u7684\u5b69\u5b50\u8282\u70b9\u7684\u6df1\u5ea6 \u5f53root\u8282\u70b9\u5de6\u53f3\u5b69\u5b50\u90fd\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de\u5de6\u53f3\u5b69\u5b50\u8f83\u5c0f\u6df1\u5ea6\u7684\u8282\u70b9\u503c # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def minDepth ( self , root ): \"\"\" :type root: TreeNode :rtype: int \"\"\" if root is None : #\u8fd9\u4e2a\u8282\u70b9\u5bf9\u8c61\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de\u7a7a return 0 if root . left and root . right : #\u8fd9\u4e2a\u8282\u70b9\u5bf9\u8c61\u5de6\u53f3\u5b69\u5b50\u90fd\u5b58\u5728\u7684\u65f6\u5019 return min ( self . minDepth ( root . left ), self . minDepth ( root . right )) + 1 #\u8fd4\u56de\u7684\u662f\u4e0b\u9762\u5b50\u6811\u4e2d\u8def\u5f84\u6700\u77ed\u7684.\u8fd9\u4e2a\u52a01\u52a0\u7684\u662f\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u4e00\u5c42 else : return max ( self . minDepth ( root . left ), self . minDepth ( root . right )) + 1 #\u8fd9\u4e00\u4e2a\u8003\u8651\u7684\u662f\u8fd9\u4e2a\u6570\u7684\u6839\u8282\u70b9\u53ea\u6709\u4e00\u8fb9\u7684\u6811,\u6bd4\u5982\u53ea\u6709\u53f3\u8fb9,\u90a3\u4e48\u5728\u8fd9\u6b21\u5224\u65ad\u4e2d\u5de6\u5b69\u5b50\u4e0d\u5b58\u5728\u8fd4\u56de\u7684\u662f0 ,\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u8ba4\u4e3a\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\u5c31\u662f1\u4e86,\u6240\u4ee5\u8fd4\u56de\u7684\u5e94\u8be5\u662f\u5927\u7684\u90a3\u4e2a\u503c.\u8fd9\u6837\u624d\u80fd\u6ee1\u8db3\u6761\u4ef6 \u7b2c\u4e00\u4e2aif\u5224\u65ad\u7684\u662f\u53f6\u5b50\u51e0\u70b9,\u4e0d\u4f1a\u5411\u4e0b\u5ef6\u4f38,\u8fd4\u56de\u503c\u4e3a\u96f6 \u7b2c\u4e8c\u4e2aif \u662f\u5de6\u53f3\u8282\u70b9\u90fd\u6709\u90a3\u4e48\u5c31\u8fdb\u884c\u9012\u5f52 \u7b2c\u4e09\u4e2a\u7684else\u662f\u4e0b\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u60c5\u51b5","title":"030-\u529b\u6263\u5237\u9898-111--\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"},{"location":"\u529b\u6263\u5237\u9898/031-\u529b\u6263\u5237\u9898-101--\u5bf9\u79f0\u4e8c\u53c9\u6811/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u3002 \u4f8b\u5982\uff0c\u4e8c\u53c9\u6811 [1,2,2,3,4,4,3] \u662f\u5bf9\u79f0\u7684\u3002 # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution(object): def isSymmetric(self, root): \"\"\" :type root: TreeNode :rtype: bool \"\"\" if root is None: #\u5982\u679c\u8f93\u5165\u7684\u6811\u662f\u7a7a\u7684\u90a3\u4e48\u4e00\u5b9a\u662f\u5bf9\u79f0\u7684 return True else: return self.isSymmetricRecu(root.left,root.right) def isSymmetricRecu(self,left,right): if left is None and right is None: #\u5982\u679c\u8bf4\u8fd9\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u7a7a\u8bf4\u660e\u4e00\u5b9a\u662f\u4f1a\u5bf9\u79f0\u7684\u5c31\u662f\u6700\u540e\u4e00\u5c42\u7684\u53f6\u5b50\u8282\u70b9\u8fd9\u91cc\u5224\u65ad\u7684\u65f6\u5019 return True if left is None or right is None or left.val !=right.val: return False #\u8fd9\u91cc\u7684\u610f\u601d\u662f\u53ea\u6709\u4e00\u8fb9\u6709\u4e00\u8fb9\u6ca1\u6709,\u6216\u8005\u4e24\u4e2a\u90fd\u6709\u7684\u60c5\u51b5\u4e0b\u503c\u4e0d\u4e00\u6837\u5c31\u5168\u90e8\u8fd4\u56deFalse else: return self.isSymmetricRecu(left.left,right.right) and self.isSymmetricRecu(left.right,right.left) #\u5f53\u8fd9\u4e00\u5c42\u7684\u5bf9\u79f0\u6761\u4ef6\u90fd\u6ee1\u8db3\u7684\u65f6\u5019\u5c31\u7ee7\u7eed\u5411\u4e0b\u5224\u65ad\u662f\u4e0d\u662f\u6ee1\u8db3\u5bf9\u79f0\u6761\u4ef6,\u76f4\u5230\u53f6\u5b50\u53f6\u5b50\u7ed3\u70b9\u5168\u90e8\u6ee1\u8db3\u5bf9\u79f0\u7684\u6761\u4ef6","title":"031-\u529b\u6263\u5237\u9898-101--\u5bf9\u79f0\u4e8c\u53c9\u6811"},{"location":"\u529b\u6263\u5237\u9898/032-\u529b\u6263\u5237\u9898-83--\u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u5220\u9664\u6240\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u3002 # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def deleteDuplicates ( self , head ): \"\"\" :type head: ListNode :rtype: ListNode \"\"\" cur = head #\u8bbe\u7acb\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5934\u7ed3\u70b9 while cur != None : # print(cur.val) runner = cur . next #\u8ba9runner\u8bb0\u5f55\u7684\u662fcur\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 while runner and cur . val == runner . val : #,\u56e0\u4e3arunner\u6307\u5411\u7684\u662fcur\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9,\u6240\u4ee5\u9996\u5148\u5230\u8fbe\u7a7a,\u8981\u5224\u65ad\u4e00\u4e0b\u5e76\u4e14\u5982\u679c\u5f53\u524d\u503c\u8ddf\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u76f8\u7b49\u8bdd\u5c31\u5220\u9664\u4e0b\u4e00\u4e2a\u8282\u70b9,\u5e76\u7ee7\u7eed\u5faa\u73af #\u5220\u9664\u64cd\u4f5c cur . next = runner . next #\u5f53\u524d\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 runner = cur . next #runner\u4e5f\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9.runner\u4e00\u5f00\u59cb\u6307\u5411\u7684\u8282\u70b9\u5c31\u88ab\u5220\u9664\u4e86 cur = cur . next #\u5f53\u5220\u9664\u4e86\u76f8\u540c\u7684\u5143\u7d20,\u5c31\u8ba9cur\u6307\u9488\u5f80\u4e0b\u8d70\u4e00\u4e2a\u51e0\u70b9 return head #\u6700\u540e\u8fd4\u56de\u5934\u7ed3\u70b9\u5c31\u597d\u4e86","title":"032-\u529b\u6263\u5237\u9898-83--\u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20"},{"location":"\u529b\u6263\u5237\u9898/033-\u529b\u6263\u5237\u9898-70--\u722c\u697c\u68af/","text":"\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002 \u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f \u6ce8\u610f\uff1a\u7ed9\u5b9a n \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a 2 \u8f93\u51fa\uff1a 2 \u89e3\u91ca\uff1a \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 2. 2 \u9636 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a 3 \u8f93\u51fa\uff1a 3 \u89e3\u91ca\uff1a \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 + 1 \u9636 2. 1 \u9636 + 2 \u9636 3. 2 \u9636 + 1 \u9636 class Solution ( object ): def climbStairs ( self , n ): \"\"\" :type n: int :rtype: int \"\"\" a , b = 0 , 1 #\u5b9e\u9645\u4e0a\u5c31\u662f\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217,\u53ea\u4e0d\u8fc7a\u4ece0,b\u4ece1\u5f00\u59cb,\u539f\u56e0\u662f\u6211\u4eec\u8981\u5faa\u73af\u7684\u662fn\u6b21,\u6240\u4ee5\u7b2c\u4e00\u6b21\u5faa\u73af\u5f97\u5230\u7684\u662f1,1\u7ee7\u7eed\u5411\u4e0b\u5faa\u73af\u5c31\u597d\u4e86 for i in range ( n ): a , b = b , a + b return b #\u8fd4\u56de\u6700\u540eb\u5c31\u662f\u7ec4\u5408\u7684\u79cd\u6570 \u5206\u7c7b\u8ba1\u6570\u539f\u7406\uff0c\u4e5f\u5c31\u662f\u52a0\u6cd5\u539f\u7406\uff1a\u5982\u679c\u5b8c\u6210\u4e00\u4ef6\u4e8b\u7684\u65b9\u6cd5\u5206\u4e3a\uff08\u4e0d\u91cd\u4e0d\u6f0f\u7684\uff09\u4e24\u7c7b\uff0c\u7b2c\u4e00\u7c7b\u6709x\u79cd\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u7c7b\u6709y\u79cd\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u7684\u65b9\u6cd5\u5171\u6709x+y\u79cd\u3002\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u8c01\u90fd\u60f3\u5f97\u901a\u3002 \u5230\u672c\u9898\uff0c\u5047\u8bbe\u8d70\u5230\u7b2cn\u5c42\u697c\u68af\u7684\u65b9\u6cd5\u6570\u4e3af(n)\u3002\u8d70\u5230\u7b2cn\u5c42\u697c\u68af\u7684\u65b9\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a\u7b2c\u4e00\u7c7b\uff0c\u5148\u8d70\u5230\u7b2cn-1\u5c42\uff0c\u7136\u540e\u8d70\u4e00\u7ea7\u697c\u68af\uff0c\u8fd9\u7c7b\u65b9\u6cd5\u6709f(n-1)\u79cd\uff1b\u7b2c\u4e8c\u7c7b\uff0c\u5148\u8d70\u5230\u7b2cn-2\u5c42\uff0c\u7136\u540e\u8d70\u4e24\u7ea7\u697c\u68af\uff0c\u8fd9\u7c7b\u65b9\u6cd5\u6709f(n-2)\u79cd\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e24\u7c7b\u65b9\u6cd5\u8986\u76d6\u4e86\u5230\u8fbe\u7b2cn\u5c42\u697c\u68af\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u4e14\u5f7c\u6b64\u6ca1\u6709\u91cd\u590d\uff0c\u90a3\u4e48\u6839\u636e\u52a0\u6cd5\u8ba1\u6570\u539f\u7406\uff1af(n)=f(n-1)+f(n-2)\u3002","title":"033-\u529b\u6263\u5237\u9898-70--\u722c\u697c\u68af"},{"location":"\u529b\u6263\u5237\u9898/034-\u529b\u6263\u5237\u9898-88--\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4/","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2\uff0c\u5c06 nums2 \u5408\u5e76\u5230 nums1 \u4e2d\uff0c\u4f7f\u5f97 num1 \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002 \u8bf4\u660e: \u521d\u59cb\u5316 nums1 \u548c nums2 \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a m \u548c n\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e m + n\uff09\u6765\u4fdd\u5b58 nums2 \u4e2d\u7684\u5143\u7d20\u3002 \u793a\u4f8b: nums1 = [1,2,3,0,0,0], m = 3 nums2 = [2,5,6], n = 3 \u8f93\u51fa: [1,2,2,3,5,6] class Solution ( object ): def merge ( self , nums1 , m , nums2 , n ): \"\"\" :type nums1: List[int] :type m: int :type nums2: List[int] :type n: int :rtype: None Do not return anything, modify nums1 in-place instead. \"\"\" while m > 0 and n > 0 : if nums1 [ m - 1 ] < nums2 [ n - 1 ]: nums1 [ m - 1 + n ] = nums2 [ n - 1 ] #\u5982\u679c\u8bf4nums\u672b\u4f4d\u7684\u6570\u5b57\u6bd4nums1\u672b\u4f4d\u7684\u6570\u5b57\u5927,\u8bf4\u660enums2\u672b\u4f4d\u7684\u6570\u5b57\u5728\u6574\u4e2a\u6570\u7ec4\u4e2d\u90fd\u662f\u6700\u5927\u7684,\u76f4\u63a5\u5b58\u5230nums\u7684m-1+n\u8fd9\u4e2a\u7d22\u5f15\u7684\u4f4d\u7f6e n = n - 1 #nums2\u7684\u7d22\u5f15\u5411\u524d\u79fb\u52a8\u4e00\u4e0b else : nums1 [ m - 1 + n ], nums1 [ m - 1 ] = nums1 [ m - 1 ], nums1 [ m - 1 + n ] #\u6bd4\u4ed6\u5c0f\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u8f83\u5927\u90a3\u4e48\u5c31\u79fb\u52a8\u5230\u540e\u9762\u53bb,\u5e76\u4e14\u5c06\u672c\u8eab\u7684\u4f4d\u7f6e\u7559\u51fa\u6765\u53d8\u62100\u53ef\u4ee5\u4e0d\u53d8\u4f46\u662f\u53d8\u4e86\u662f\u4e2a\u597d\u7684\u4e60\u60ef,\u6709\u52a9\u4e8e\u8fdb\u884c\u7406\u89e3 m = m - 1 #\u540c\u65f6\u9700\u8981\u5c06m\u5411\u5de6\u79fb\u52a8\u4e00\u4e0b if m == 0 and n > 0 : nums1 [: n ] = nums2 [: n ]","title":"034-\u529b\u6263\u5237\u9898-88--\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4"},{"location":"\u529b\u6263\u5237\u9898/035-\u5b57\u8282\u8df3\u52a8\u9898\u76ee-\u5c0f\u7403\u5f80\u8fd4\u8def\u7a0b/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Tue Jul 2 17:46:55 2019 @author: zangz \"\"\" def weight ( h , cnt ): ''' \u9898\u76ee\uff1a\u4e00\u7403\u4eceH\u7c73\u9ad8\u5ea6\u81ea\u7531\u843d\u4e0b\uff0c\u6bcf\u6b21\u843d\u5730\u540e\u53cd\u8df3\u56de\u539f\u9ad8\u5ea6\u7684\u4e00\u534a\uff1b\u518d\u843d\u4e0b\uff0c\u6c42\u5b83\u5728\u7b2ccnt\u6b21\u843d\u5730\u65f6\uff0c\u5171\u7ecf\u8fc7\u591a\u5c11\u7c73\uff1f\u7b2c10\u6b21\u53cd\u5f39\u591a\u9ad8\uff1f :param h:\u539f\u59cb\u9ad8\u5ea6 :param cnt:\u7740\u5730\u6b21\u6570 :return:sum \u7b2ccnt \u7740\u5730\u7ecf\u8fc7\u7684\u7c73 \u601d\u8def\uff1a1\u3001\u7b2cn\u6b21\u53cd\u5f39\u9ad8\u5ea6\u7528\u5faa\u73af\u6240\u5f97 2\u3001\u7b2cn\u6b21\u843d\u5730\u7ecf\u8fc7\u603b\u8def\u7a0b ''' hei = [] #\u5b58\u50a8\u7684\u662f\u7b2c\u4e00\u6b21\u53cd\u5f39\u540e\u7684\u9ad8\u5ea6 sum = h #\u7b2c\u4e00\u6b21\u7740\u5730\u8d70\u8fc7\u7684\u8def\u7a0b\u5c31\u662f\u521d\u59cb\u843d\u4e0b\u6765\u7136\u540e\u63a5\u89e6\u5230\u5730\u9762 for i in range ( 1 , cnt ): #\u5faa\u73af\u8ba1\u7b97\u7684\u662f\u89e6\u5730\u7684\u6b21\u6570,\u7b2c1\u6b21\u5c31\u662f\u7d22\u5f150\u5df2\u7ecf\u5728\u4e0a\u9762\u505a\u4e86 h = h / 2 hei . append ( h ) #\u53cd\u5f39\u5230\u843d\u5730\u7b97\u662f\u4e00\u6b21\u63a5\u89e6\u5730\u9762 if h == 0 : break #\u8ba1\u7b97cnt \u7740\u5730\u7ecf\u8fc7\u8def\u7a0b if cnt == 1 : sum = h else : for j in range ( len ( hei )): #\u5c06\u5b58\u50a8\u7684\u9ad8\u5ea6\u8fdb\u884c\u904d\u5386 sum = sum + hei [ j ] * 2 #\u6bcf\u6b21\u90fd\u8981\u52a0\u4e0a\u7684\u662f\u5f39\u8d77\u52a0\u843d\u4e0b\u7684\u8def\u7a0b\u7684\u4e24\u500d # print(sum) print ( ' %.2f ' % sum ) #\u683c\u5f0f\u5316\u8f93\u51fa if __name__ == \"__main__\" : m = int ( input ()) #\u6c42\u51e0\u7ec4\u6837\u4f8b list1 = [] #\u5b58\u50a8\u6837\u4f8b\u6570\u636e for i in range ( m ): H , n = str ( input ()) . split ( \" \" ) list1 . append ( int ( H )) list1 . append ( int ( n )) for i in range ( 0 , 2 * m , 2 ): weight ( list1 [ i ], list1 [ i + 1 ]) \u6267\u884c 2 #\u8f93\u5165\u7684\u51e0\u7ec4\u6d4b\u8bd5\u6837\u4f8b 10 2 #\u7b2c\u4e00\u7ec4 10m 2\u6b21 5 2 #\u7b2c\u4e8c\u7ec4 5m 2\u6b21 20.00 #\u683c\u5f0f\u5316\u8f93\u51fa 10.00","title":"035-\u5b57\u8282\u8df3\u52a8\u9898\u76ee-\u5c0f\u7403\u5f80\u8fd4\u8def\u7a0b"},{"location":"\u529b\u6263\u5237\u9898/036-\u529b\u6263\u5237\u9898-166--\u5206\u6570\u5230\u5c0f\u6570/","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50 numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570\u3002 \u5982\u679c\u5c0f\u6570\u90e8\u5206\u4e3a\u5faa\u73af\u5c0f\u6570\uff0c\u5219\u5c06\u5faa\u73af\u7684\u90e8\u5206\u62ec\u5728\u62ec\u53f7\u5185\u3002 \u793a\u4f8b 1: \u8f93\u5165: numerator = 1, denominator = 2 \u8f93\u51fa: \"0.5\" \u793a\u4f8b 2: \u8f93\u5165: numerator = 2, denominator = 1 \u8f93\u51fa: \"2\" \u793a\u4f8b 3: \u8f93\u5165: numerator = 2, denominator = 3 \u8f93\u51fa: \"0.(6)\" class Solution ( object ): def fractionToDecimal ( self , numerator , denominator ): \"\"\" :type numerator: int :type denominator: int :rtype: str \"\"\" #\u8fd9\u91cc\u4e00\u4e2a\u6ce8\u610f\u7684\u662f\u662flist[0:5] #\u53d6\u524d\u4e94\u4e2a\u4f46\u662f\u53d6\u4e0d\u5230\u7d22\u5f15\u4e3a5\u7684\u5143\u7d20 #negativeflag \u9664\u6cd5\u7684\u6807\u5fd7\u4f4d,\u4e3a\u4e86\u4f7f\u7528\u7edd\u5bf9\u503c\u7684\u65b9\u4fbf negativeFlag = numerator * denominator < 0 #\u5982\u679c\u8bf4\u5176\u4e2d\u6709\u4e00\u4e2a\u662f\u8d1f\u7684\u90a3\u4e48\u76f8\u4e58\u662f\u5c0f\u4e8e\u96f6\u7684\u8fd4\u56de\u7684\u5c31\u662fTrue\u5426\u5219\u8fd4\u56de\u7684\u5c31\u662fFalse numerator = abs ( numerator ) #\u6c42\u7edd\u5bf9\u503c denominator = abs ( denominator ) numlist = [] #\u5b58\u50a8\u9664\u6cd5\u8ba1\u7b97\u7684\u5546\u7684\u6bcf\u4e00\u4f4d,\u5982\u679c\u662f\u5faa\u73af\u4f1a\u591a\u5b58\u50a8\u4e00\u4f4d cnt = 0 #\u8bb0\u5f55\u5b58\u50a8\u7684\u6b21\u6570,\u7b97\u662f\u4e00\u4e2a\u5faa\u73af\u68c0\u6d4b\u5f00\u59cb\u7684\u6807\u5fd7\u4f4d loopDict = {} #\u7528\u6765\u5b58\u50a8\u7684\u662f\u4e0d\u91cd\u590d\u7684\u6570\u5b57,\u4ece\u5c0f\u6570\u5f00\u59cb\u5b58\u50a8 loopStr = None #\u5faa\u73af\u7684\u5c0f\u6570\u5b57\u7b26 while True : numlist . append ( str ( numerator // denominator )) #s\u9996\u5148\u5b58\u50a8\u7684\u662f\u6574\u6570\u4f4d,\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u76f4\u63a5\u5b58\u50a8\u7684\u662f\u5b57\u7b26\u4e32 cnt += 1 #count=1\u7684\u662f\u624b\u5b58\u50a8\u7684\u662f\u7b2c\u4e00\u4f4d\u5c0f\u6570 numerator = ( numerator % denominator ) * 10 #\u6a21\u4eff\u7684\u662f\u9664\u6cd5\u7684\u624b\u52a8\u8ba1\u7b97\u7684\u65b9\u6cd5,\u5c06\u9664\u5b8c\u7684\u4f59\u6570\u4e58\u4e0a10\u7ee7\u7eed\u5bf9\u5206\u6bcd\u505a\u9664\u6cd5(\u624b\u52a8\u8ba1\u7b97\u662f\u8865\u96f6) if numerator == 0 : #\u5982\u679c\u6700\u540e\u9664\u5b8c\u4e86\u6ca1\u6709\u5faa\u73af\u90a3\u4e48\u5c31\u76f4\u63a5\u505c\u6b62while\u5faa\u73af break loc = loopDict . get ( numerator ) #\u5224\u65ad\u4e00\u4e0b\u73b0\u5728\u7684\u4f59\u6570\u4e58\u4e0a10\u662f\u4e0d\u662f\u5728\u5b57\u5178\u4e2d,\u5982\u679c\u5728\u7684\u8bdd\u8bf4\u660e\u518d\u9664\u4ee5\u5206\u6bcd\u5c31\u5f00\u59cb\u5faa\u73af\u4e86 if loc : loopStr = \"\" . join ( numlist [ loc : cnt ]) #\u5982\u679cloc\u6709\u8fd4\u56de\u503c\u8bf4\u660e\u5df2\u7ecf\u5f00\u59cb\u5faa\u73af\u4e86,\u5faa\u73af\u7684\u539f\u56e0\u662f\u53ea\u8981\u4f59\u6570\u7684\u5341\u500d\u5f00\u59cb\u76f8\u540c,\u56e0\u4e3a\u5206\u6bcd\u662f\u76f8\u540c\u7684\u90a3\u4e48\u5c31\u4f1a\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb.\u8fd9\u91cccnt\u6b63\u597d\u662fnumlist\u7684\u957f\u5ea6,\u6240\u4ee5loc\u53d6\u51fa\u7684\u662f\u5faa\u73af\u5f00\u59cb\u7684\u6570\u518dnumlist\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e. break loopDict [ numerator ] = cnt #\u5982\u679c\u5b57\u5178\u91cc\u6ca1\u6709\u90a3\u4e48\u5c31\u76f4\u63a5\u5c06\u8fd9\u4e2a\u4f59\u6570\u7684\u5341\u500d\u8ddf\u6b64\u65f6\u7684count\u4f5c\u4e3a\u952e\u503c\u8fdb\u884c\u5b58\u50a8 #\u5faa\u73af\u5b8c\u6210\u5f00\u59cb\u8f93\u51fa ans = numlist [ 0 ] #\u5148\u5b58\u50a8\u7684\u662f\u6574\u6570\u503c\u5b57\u7b26\u4e32 if len ( numlist ) > 1 : #\u8bf4\u660e\u6709\u5c0f\u6570,\u90a3\u4e48\u9700\u8981\u6dfb\u52a0\u5c0f\u6570\u70b9 ans += \".\" #\u5982\u679c\u8bf4\u6709\u5faa\u73af\u6570\u5b57\u7684\u8bdd\u90a3\u4e48\u8fdb\u884c\u6dfb\u52a0 if loopStr : ans += \"\" . join ( numlist [ 1 : len ( numlist ) - len ( loopStr )]) + \"(\" + loopStr + \")\" numlist = [ 2 8 6 3 ] #\u5faa\u73af\u7684\u662f6 3 \u975e\u5faa\u73af\u7684\u662f\u5c0f\u6570\u662f8 else : ans += \"\" . join ( numlist [ 1 :]) #\u5426\u5219\u7684\u8bdd\u5c31\u5c06\u6574\u9664\u5b8c\u7684\u6570\u8fdb\u884c\u6dfb\u52a0 if negativeFlag : ans = \"-\" + ans return ans","title":"036-\u529b\u6263\u5237\u9898-166--\u5206\u6570\u5230\u5c0f\u6570"},{"location":"\u529b\u6263\u5237\u9898/037-\u529b\u6263\u5237\u9898-110--\u5e73\u8861\u4e8c\u53c9\u6811--\u91cd\u70b9\u8fdb\u884c\u7406\u89e3/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002 \u672c\u9898\u4e2d\uff0c\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u5b9a\u4e49\u4e3a\uff1a \u4e00\u4e2a\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9 \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\u3002 \u793a\u4f8b 1: \u7ed9\u5b9a\u4e8c\u53c9\u6811 [3,9,20,null,null,15,7] # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def isBalanced ( self , root ): \"\"\" :type root: TreeNode :rtype: bool \"\"\" def get_height ( root ): #\u9012\u5f52\u5224\u65ad\u5b50\u6811\u662f\u4e0d\u662f\u5e73\u8861\u6811,\u5168\u90e8\u5e73\u8861\u6574\u4e2a\u624d\u5e73\u8861 if root is None : return 0 left_height , right_height = get_height ( root . left ), get_height ( root . right ) #\u8fdb\u884c\u9012\u5f52\u7684\u64cd\u4f5c #return #\u5982\u4f55\u5224\u65adruturn True\u548cFalse # if left_height != \u5e73\u8861\u6811 or right_height!= \u5e73\u8861\u6811 or abs(left_height-height_height) > 1 \u5c31\u4e0d\u662f\u5e73\u8861\u6811\u90a3\u4e48\u6211\u4eec\u8ba9\u4ed6\u8fd4\u56de\u503c\u662f -1 \u6b64\u65f6\u7684\u8bdd,left_height\u8fd4\u56de\u7684\u503c\u5c31\u662f-1\u4e5f\u5c31\u662f\u8bf4\u8fd4\u56de\u503c\u662f-1\u5c31\u4e0d\u662f\u5e73\u8861\u6811 if left_height < 0 or right_height < 0 or abs ( left_height - right_height ) > 1 : #\u5224\u65ad\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7528abs\u4e0d\u7528\u8003\u8651\u6b63\u8d1f return - 1 #\u5982\u679c\u8bf4\u662f\u5e73\u8861\u6811\u90a3\u4e48\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\u5462? return max ( left_height , right_height ) + 1 #\u6211\u4eec\u5c31\u628a\u6700\u957f\u7684\u6570\u52a0\u4e0a 1 3\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5b50\u6811\u6700\u957f\u7684\u6df1\u5ea6,\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u8fd4\u56de\u7684\u662f0\u6240\u4ee5\u52a0\u4e00\u662f\u52a0\u7684root\u8282\u70b9\u672c\u8eab return ( get_height ( root ) >= 0 ) #\u8fd4\u56de\u7684\u662f\u5927\u4e8e\u96f6\u7684\u6570\u5c31\u8bf4\u660e\u662f\u5e73\u8861\u4e8c\u53c9\u6811","title":"037-\u529b\u6263\u5237\u9898-110--\u5e73\u8861\u4e8c\u53c9\u6811--\u91cd\u70b9\u8fdb\u884c\u7406\u89e3"},{"location":"\u529b\u6263\u5237\u9898/038-\u529b\u6263\u5237\u9898-98--\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u5047\u8bbe\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a \u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u793a\u4f8b 1: # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def isValidBST ( self , root ): \"\"\" :type root: TreeNode :rtype: bool \"\"\" return self . valid ( root , float ( \"-inf\" ), float ( \"inf\" )) #\u5728\u4e00\u5f00\u59cb\u8fdb\u884c\u8c03\u7528\u7684\u65f6\u5019\u5462\u4f20\u9012\u6700\u5c0f\u503c\u8ddf\u6700\u5927\u503c\u5c31\u662f\u8d1f\u65e0\u7a77\u548c\u6b63\u65e0\u7a77 def valid ( self , root , min , max ): if not root : return True #\u5230\u4e86\u53f6\u5b50\u8282\u70b9\u505a\u6839\u8282\u70b9,\u81ea\u7136\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684 if root . val >= max or root . val <= min : #max\u548cmin\u90fd\u662f\u4e0b\u9762\u7684\u5b50\u6811\u8fd4\u56de\u6765\u7684,\u6700\u5c0f\u503c\u5e94\u8be5\u6bd4val\u5c0f.\u6700\u5927\u503c\u5e94\u8be5\u6bd4val\u5927,\u53d1\u751fif \u7684\u60c5\u51b5\u5c31\u8bf4\u660e\u4e0d\u662f\u4e8c\u53c9\u641c\u7d22\u6811 return False return self . valid ( root . left , min , root . val ) and self . valid ( root . right , root . val , max ) #\u5bf9\u4e8e\u5de6\u8fb9\u7684\u5b50\u6811\u800c\u8a00\u5462,\u7f51\u4e0a\u4f20\u9012\u662f\u5e94\u8be5\u81ea\u5df1\u7684min,\u6700\u5927\u503c\u503c\u7684\u8bdd\u5c31\u662f\u81ea\u5df1\u672c\u8eab,\u56e0\u4e3a\u5de6\u8fb9\u7684\u6811\u7684\u503c\u90fd\u6bd4\u6839\u8282\u70b9\u5c0f.\u53f3\u5b50\u6811\u7684\u4e5f\u662f\u540c\u7406 \u9012\u5f52\u9a8c\u8bc1 \uff0c\u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a \u5982\u679c\u5f53\u524d\u8282\u70b9\u53ef\u7528\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u503c\u4e0e\u5176\u4e0a\u3001\u4e0b\u9650\u8fdb\u884c\u6bd4\u8f83 \u7136\u540e\u5bf9\u4e8e\u5de6\u3001\u53f3\u5b50\u6811\u91cd\u590d\u8be5\u6b65\u9aa4 \u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a \u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\uff0c\u4e0a\u3001\u4e0b\u9650\u5206\u522b\u4e3a\u5bf9\u5e94\u8bed\u8a00\u4e2d\u6b63\u65e0\u7a77\u548c\u8d1f\u65e0\u7a77\uff0cpython\u4e2d\u4f7f\u7528float('-inf')\u548cfloat('inf')\u8868\u793a \u9012\u5f52\u8fc7\u7a0b\u4e2d\u9700\u4e0d\u65ad\u66f4\u65b0\u4e0a\u3001\u4e0b\u9650\uff0c\u5de6\u5b50\u8282\u70b9\u4e0a\u9650\u4e3a\u5f53\u524d\u8282\u70b9\u503c\uff0c\u53f3\u5b50\u8282\u70b9\u4e0b\u9650\u4e3a\u5f53\u524d\u8282\u70b9\u503c","title":"038-\u529b\u6263\u5237\u9898-98--\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"\u529b\u6263\u5237\u9898/039-\u529b\u6263\u5237\u9898-112--\u8def\u5f84\u603b\u548c/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u548c\uff0c\u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c\u3002 \u8bf4\u660e: \u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002 \u793a\u4f8b: \u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811\uff0c\u4ee5\u53ca\u76ee\u6807\u548c sum = 22\uff0c # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def hasPathSum ( self , root , sum ): \"\"\" :type root: TreeNode :type sum: int :rtype: bool \"\"\" if root is None : #\u5224\u65ad\u8ddf\u8282\u70b9\u5b58\u5728\u5417?\u4e0d\u5b58\u5728\u8bdd\u5e76\u4e14\u4f20\u9012\u5230\u8fd9\u4e86,\u90a3\u4e48\u80af\u5b9a\u5c31\u662f\u52a0\u8d77\u6765\u7684\u503c\u4e0d\u7b49\u4e8e\u8fd9\u4e2asum return False if root . left is None and root . right is None and root . val == sum : #\u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c,\u8fd9\u4e2a\u5224\u65ad\u8bed\u53e5\u5c31\u662f\u8d70\u5230\u4e86\u6700\u7ec8\u7684\u53f6\u5b50\u8282\u70b9,\u5e76\u4e14\u6ee1\u8db3\u4e86\u6240\u6709\u7684\u6761\u4ef6 return True else : #\u9012\u5f52\u7684\u65f6\u5019\u8981\u628a\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u51cf\u6389\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012 return self . hasPathSum ( root . left , sum - root . val ) or self . hasPathSum ( root . right , sum - root . val )","title":"039-\u529b\u6263\u5237\u9898-112--\u8def\u5f84\u603b\u548c"},{"location":"\u529b\u6263\u5237\u9898/040-\u529b\u6263\u5237\u9898-535--TinyURL-\u7684\u52a0\u5bc6\u4e0e\u89e3\u5bc6/","text":"TinyURL\u662f\u4e00\u79cdURL\u7b80\u5316\u670d\u52a1\uff0c \u6bd4\u5982\uff1a\u5f53\u4f60\u8f93\u5165\u4e00\u4e2aURL https://leetcode.com/problems/design-tinyurl \u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u7b80\u5316\u7684URL http://tinyurl.com/4e9iAk . \u8981\u6c42\uff1a\u8bbe\u8ba1\u4e00\u4e2a TinyURL \u7684\u52a0\u5bc6 encode \u548c\u89e3\u5bc6 decode \u7684\u65b9\u6cd5\u3002\u4f60\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u5982\u4f55\u8bbe\u8ba1\u548c\u8fd0\u4f5c\u662f\u6ca1\u6709\u9650\u5236\u7684\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2aURL\u53ef\u4ee5\u88ab\u52a0\u5bc6\u6210\u4e00\u4e2aTinyURL\uff0c\u5e76\u4e14\u8fd9\u4e2aTinyURL\u53ef\u4ee5\u7528\u89e3\u5bc6\u65b9\u6cd5\u6062\u590d\u6210\u539f\u672c\u7684URL\u3002 import string import random import math letters = string . ascii_letters + string . digits #\u83b7\u53d6\u7684\u662f62\u4e2a\u82f1\u6587\u5b57\u6bcd\u52a0\u6570\u5b57 full_tiny = {} #\u4ee5\u957furl\u4e3a\u952e\u4ee5\u77edurl\u4e3a\u503c tiny_full = {} #\u4ee5\u77edurl\u4e3a\u952e,\u4ee5\u957furl\u4e3a\u503c class Codec : def encode ( self , longUrl ): \"\"\"Encodes a URL to a shortened URL. :type longUrl: str :rtype: str \"\"\" def short_addr (): ans = '' tmp = '' for i in range ( 6 ): tmp = letters [ random . randint ( 0 , 61 )] #\u968f\u673a\u7684\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26,\u8fd9\u4e2a\u5730\u65b9\u4e00\u5b9a\u8981\u6ce8\u610f\u7684\u662f\u4e00\u5b9a\u6ce8\u610f\u7684\u662frandint\u8fd4\u56de\u7684\u4e4b\u662f0-61 \u6070\u597d\u662f62\u4e2a.\u662f\u5305\u542b\u6700\u540e\u4e00\u4f4d\u7684 ans += tmp return ans if longUrl in full_tiny : return \"http://tinyurl.com/\" + full_tiny [ longUrl ] #\u8fd4\u56de\u7f16\u7801\u540e\u7684\u77ed\u7684Url else : suffix = short_addr () #\u5f97\u5230\u4e00\u4e2a\u516d\u4f4d\u7684\u5b57\u7b26\u4e32 full_tiny [ longUrl ] = suffix #\u66f4\u65b0\u957f\u8f6c\u77ed tiny_full [ suffix ] = longUrl #\u66f4\u65b0\u77ed\u8f6c\u957f return \"http://tinyurl.com/\" + suffix #\u8fd4\u56de\u77edUrl def decode ( self , shortUrl ): \"\"\"Decodes a shortened URL to its original URL. :type shortUrl: str :rtype: str \"\"\" shortUrl = shortUrl . split ( '/' )[ - 1 ] #\u5c06\u77edUrl\u6309\u7167 '/' \u8fdb\u884c\u5206\u6210\u5217\u8868\u5e76\u53d6\u6700\u540e\u4e00\u4e2a\u5143\u7d20 if shortUrl in tiny_full : #\u5982\u679c\u8fd9\u4e2a\u77edUrl\u5728\u5b57\u5178\u4e2d\u5c31\u8fd4\u56de return tiny_full [ shortUrl ] else : #\u53cd\u5219\u5c31\u8fd4\u56deNOne return None # Your Codec object will be instantiated and called as such: # codec = Codec() # codec.decode(codec.encode(url))","title":"040-\u529b\u6263\u5237\u9898-535--TinyURL-\u7684\u52a0\u5bc6\u4e0e\u89e3\u5bc6"},{"location":"\u529b\u6263\u5237\u9898/041-\u529b\u6263\u5237\u9898-118--\u6768\u8f89\u4e09\u89d2/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 numRows\uff0c\u751f\u6210\u6768\u8f89\u4e09\u89d2\u7684\u524d numRows \u884c\u3002 \u793a\u4f8b: \u8f93\u5165 : 5 \u8f93\u51fa : [ [ 1 ], [ 1 , 1 ], [ 1 , 2 , 1 ], [ 1 , 3 , 3 , 1 ], [ 1 , 4 , 6 , 4 , 1 ] ] class Solution ( object ): def generate ( self , numRows ): \"\"\" :type numRows: int :rtype: List[List[int]] \"\"\" result = [] for i in range ( numRows ): result . append ([]) #\u5faa\u73af\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u64cd\u4f5c,\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684list for j in range ( i + 1 ): #\u5bf9\u8fd9\u4e00\u884c\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c,\u56e0\u4e3a\u6ca1\u884c\u6b63\u597d\u662fi+1\u4e2a\u5143\u7d20 if j in ( 0 , i ): #\u5982\u679c\u904d\u5386\u8fd9\u4e00\u884c\u7684\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019,\u9996\u5c3e\u7d22\u5f15\u7684\u5143\u7d20\u5b58\u7684\u5e94\u8be5\u90fd\u662f1 result [ i ] . append ( 1 ) #\u53d6\u51fa\u4e8c\u7ef4\u5217\u8868\u7684\u8fd9\u4e00\u884c\u8fdb\u884c\u6dfb\u52a0\u64cd\u4f5c else : #\u5426\u5219\u7684\u662f\u4e0a\u4e00\u884c\u7684\u524d\u4e00\u5217\u8ddf\u4e0a\u4e00\u884c\u7684\u540c\u4e00\u5217\u7684\u503c\u8fdb\u884c\u76f8\u52a0 result [ i ] . append ( result [ i - 1 ][ j - 1 ] + result [ i - 1 ][ j ]) return result \u5c31\u6309\u7167\u539f\u7406\u505a\u5c31\u597d\u4e86","title":"041-\u529b\u6263\u5237\u9898-118--\u6768\u8f89\u4e09\u89d2"},{"location":"\u529b\u6263\u5237\u9898/042-\u529b\u6263\u5237\u9898-8--\u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570-(atoi)/","text":"\u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a atoi \u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002 \u9996\u5148\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u9700\u8981\u4e22\u5f03\u65e0\u7528\u7684\u5f00\u5934\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u5b57\u7b26\u4e3a\u6b62\u3002 \u5f53\u6211\u4eec\u5bfb\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e3a\u6b63\u6216\u8005\u8d1f\u53f7\u65f6\uff0c\u5219\u5c06\u8be5\u7b26\u53f7\u4e0e\u4e4b\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u7eed\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u8be5\u6574\u6570\u7684\u6b63\u8d1f\u53f7\uff1b\u5047\u5982\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u5c06\u5176\u4e0e\u4e4b\u540e\u8fde\u7eed\u7684\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u6574\u6570\u3002 \u8be5\u5b57\u7b26\u4e32\u9664\u4e86\u6709\u6548\u7684\u6574\u6570\u90e8\u5206\u4e4b\u540e\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u5b83\u4eec\u5bf9\u4e8e\u51fd\u6570\u4e0d\u5e94\u8be5\u9020\u6210\u5f71\u54cd\u3002 \u6ce8\u610f\uff1a\u5047\u5982\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u6574\u6570\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u4e3a\u7a7a\u6216\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u65f6\uff0c\u5219\u4f60\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u6362\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u82e5\u51fd\u6570\u4e0d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8f6c\u6362\u65f6\uff0c\u8bf7\u8fd4\u56de 0\u3002 \u8bf4\u660e\uff1a \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u90a3\u4e48\u5176\u6570\u503c\u8303\u56f4\u4e3a $ [\u22122^{31}, 2^{31} \u2212 1]$ [\u22122^{31}, 2^{31} \u2212 1] \u3002\u5982\u679c\u6570\u503c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0cqing\u8fd4\u56de INT_MAX (2^{31} \u2212 1) (2^{31} \u2212 1) \u6216 INT_MIN $(\u22122^{31}) $ (\u22122^{31}) \u3002 \u793a\u4f8b 1: \u8f93\u5165: \"42\" \u8f93\u51fa: 42 \u793a\u4f8b 2: \u8f93\u5165: \" -42\" \u8f93\u51fa: -42 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u4e3a '-', \u5b83\u662f\u4e00\u4e2a\u8d1f\u53f7\u3002 \u6211\u4eec\u5c3d\u53ef\u80fd\u5c06\u8d1f\u53f7\u4e0e\u540e\u9762\u6240\u6709\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u6700\u540e\u5f97\u5230 -42 \u3002 \u793a\u4f8b 3: \u8f93\u5165: \"4193 with words\" \u8f93\u51fa: 4193 \u89e3\u91ca: \u8f6c\u6362\u622a\u6b62\u4e8e\u6570\u5b57 '3' \uff0c\u56e0\u4e3a\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\u3002 \u793a\u4f8b 4: \u8f93\u5165: \"words and 987\" \u8f93\u51fa: 0 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f 'w', \u4f46\u5b83\u4e0d\u662f\u6570\u5b57\u6216\u6b63\u3001\u8d1f\u53f7\u3002 \u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u6709\u6548\u7684\u8f6c\u6362\u3002 \u793a\u4f8b 5: \u8f93\u5165: \"-91283472332\" \u8f93\u51fa: -2147483648 \u89e3\u91ca: \u6570\u5b57 \"-91283472332\" \u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002 \u56e0\u6b64\u8fd4\u56de INT_MIN (\u22122^{31}) (\u22122^{31}) \u3002 class Solution ( object ): def myAtoi ( self , str ): \"\"\" :type str: str :rtype: int \"\"\" stripS = str . strip () #strip()\u53bb\u9664\u4e24\u7aef\u7684\u7a7a\u683c if stripS == \"\" or stripS == \"-\" or stripS == \"+\" : #\u5982\u679c\u53bb\u9664\u4e86\u7a7a\u683c\u4ee5\u540e\u5462\u53ea\u5269\u4e0b\u7a7a\u6216\u8005\u52a0\u51cf\u53f7\u90a3\u4e48\u5c31\u8fd4\u56de\u662f0 return 0 #stripS \u662f\u53bb\u9664\u4e86\u7a7a\u683c\u7684\u5b57\u7b26\u4e32 #s1\u662f\u5bf9\u9996\u5148\u53bb\u9664\u4e86\u8d1f\u53f7,\u53c8\u53bb\u9664\u4e86\u4e00\u4e2a\u6b63\u53f7\u7684\u5b57\u7b26\u4e32(\u8fd9\u91cc\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a-\u6216\u8005+\u90fd\u662f\u65e0\u6240\u8c13\u7684)\u7136\u540e\u8fd9\u4e2a\u6b63\u5219\u662f[^\\d]+ \u5339\u914d\u5f00\u5934\u6ca1\u6709\u6570\u5b57\u7684\u5b57\u7b26\u4e32.\u8bf4\u767d\u4e86\u8fd9\u91cc\u5c31\u662f\u7b5b\u9009\u90a3\u79cd\u5f00\u5934\u5305\u542b\u4e86 -+ - + +- \u7684\u540e\u9762\u4e0d\u8ddf\u6570\u5b57\u7684\u8ddf\u7684\u662f\u5b57\u7b26\u4e32\u7684 s1 = re . match ( \"[^\\d]+\" ,( stripS . lstrip ( \"-\" )) . lstrip ( \"+\" )) #lstrip(\"\u5b57\u7b26\") #\u53bb\u9664\u5f00\u5934\u8fd9\u4e2a\u5b57\u7b26 if s1 != None : #\u5982\u679c\u8bf4\u4e0d\u4e3a\u7a7a\u7684\u8bdd\u90a3\u4e48\u5c31\u8bf4\u660e\u53bb\u6389\u4e86-\u53f7\u6216\u8005+\u53f7\u5269\u4e0b\u7684\u53ea\u6709\u5b57\u7b26\u4e32,\u4e0d\u662f\u4ee5\u6570\u5b57\u5f00\u5934\u7684 return 0 else : s1 = re . search ( '\\-*\\+*\\d+' , stripS ) . group () #\u5426\u5219\u7684\u8bdd\u5c31\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u5339\u914d.\u4efb\u610f\u591a\u4e2a-\u4efb\u610f\u591a\u4e2a+\u7136\u540e\u540e\u9762\u8ddf\u7684\u662f\u6570\u5b57\u7684\u5b57\u7b26\u4e32 if s1 [ 0 : 2 ] == \"--\" or s1 [ 0 : 2 ] == \"-+\" or s1 [ 0 : 2 ] == \"++\" : #\u5982\u679c\u8bf4\u524d\u4e24\u4f4d\u662f--\u6216\u8005\u662f-+\u6216\u8005\u662f++\u8fd4\u56de0 .+- \u7684\u5df2\u7ecf\u5728\u4e0a\u9762\u7b5b\u9009\u6389\u4e86,\u56e0\u4e3a\u4e0a\u9762\u7684\u6b63\u5219\u5339\u914d\u7684\u65f6\u5019\u5982\u679c\u662f+-\u90a3\u4e48\u4f1a\u88ab\u5220\u9664+\u53f7,\u4fdd\u7559\u4e86-\u53f7,\u6b64\u65f6\u5339\u914d\u5230\u7684\u4f9d\u65e7\u662f\u975e\u6570\u5b57,\u5728\u8fd9\u4e00\u6b65\u5c31\u628a-+\u7684\u8fc7\u6ee4\u6389\u4e86 return 0 result = int ( s1 ) #\u6700\u540e\u7559\u4e0b\u6765\u7684\u5c31\u662f\u53ea\u7528+ - \u6216\u8005\u6ca1\u6709\u6b63\u8d1f\u53f7\u7684 if result > 0 : #\u8f6c\u6362\u6210int\u578b\u4ee5\u540e\u5462,\u518d\u8fdb\u884c\u6bd4\u8f83\u5927\u5c0f\u6700\u540e\u8fdb\u884c\u8f93\u51fa return 2147483647 if result > 2147483647 else result else : return - 2147483648 if result < - 2147483648 else result \u8f93\u51fa\u662f0\u7684\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u6709\u8fd9\u4e9b\u6309\u7167\u4ee3\u7801\u7684\u5224\u65ad\u7b5b\u9009\u987a\u5e8f \u7b2c\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 \"\" - + \u7b2c\u4e8c\u4e2a\u5224\u65ad\u6761\u4ef6 -+ abc - abc + abc +- abc +- 123 abc ( \u7279\u6b8a\u9879 ) \u7b2c\u4e09\u4e2a\u5224\u65ad\u6761\u4ef6 -- 123 -+ 123 ++ 123 +- 123 ( \u5728\u7b2c\u4e8c\u4e2a\u5224\u65ad\u6761\u4ef6\u5c31\u8fdb\u884c\u4e86\u8fc7\u6ee4 ) \u5f53\u7136\u5c31\u5305\u542b\u4e86\u8fd9\u4e9b\u4e2a ++++ 123 \u7684\u5b57\u7b26\u4e32\u7b49 \u6700\u540e\u7b5b\u9009\u5b8c\u6240\u6709\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u4ee5\u540e\u8981\u8f6c\u6362\u6210 int\u578b \u7136\u540e\u8fdb\u884c\u5927\u5c0f\u7684\u6bd4\u8f83\u8fb9\u754c\u7684\u6ea2\u51fa\u95ee\u9898 \u6574\u4e2a\u9898\u76ee\u4e3b\u8981\u662f\u51e0\u4e2a\u5224\u65ad\u6761\u4ef6\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e66\u5199 \u9700\u8981\u6ce8\u610f\u7684\u662f [ ^ \\ d ] \u662f\u5339\u914d\u5f00\u5934\u975e\u6570\u5b57\u7684\u610f\u601d ( \u53ef\u4ee5\u5199\u6210\u8fd9\u6837 ^ [ \\ D ]) \u8981\u8ddf ^ [ \\ d ] \u8fdb\u884c\u533a\u5206 [ ^ a ] \u8868\u793a\u201c\u5339\u914d\u9664\u4e86 a\u7684\u4efb\u610f\u5b57\u7b26","title":"042-\u529b\u6263\u5237\u9898-8--\u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570-(atoi)"},{"location":"\u529b\u6263\u5237\u9898/043-\u529b\u6263\u5237\u9898-121--\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u5982\u679c\u4f60\u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff08\u5373\u4e70\u5165\u548c\u5356\u51fa\u4e00\u652f\u80a1\u7968\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002 \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u80a1\u7968\u524d\u5356\u51fa\u80a1\u7968\u3002 \u793a\u4f8b 1: \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 5 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002 \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\u3002 \u793a\u4f8b 2: \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 \u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5c31\u662f\u6ca1\u6709\u4ea4\u6613\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u5229\u6da6\u662f0\u6240\u4ee5\u8bbe\u7f6e\u521d\u59cb\u503c\u662f0 `python class Solution(object): def maxProfit(self, prices): \"\"\" :type prices: List[int] :rtype: int \"\"\" max_profit,min_price=0,float(\"inf\") #\u7ed9\u5b9a\u6700\u5927\u7684\u6536\u76ca\u521d\u59cb\u503c\u662f0,\u6700\u5c0f\u4ef7\u683c\u7684\u521d\u59cb\u503c\u662finf for price in prices: min_price=min(min_price,price) #\u8fdb\u884c\u6700\u5c0f\u4ef7\u683c\u7684\u66f4\u65b0,\u662f\u5f53\u524d\u7684\u6700\u5c0f\u4ef7\u683c\u4e0e\u5f53\u524d\u4ef7\u683c\u53d6\u6700\u5c0f\u503c max_profit=max(max_profit,price-min_price) #\u6700\u5927\u6536\u76ca\u7684\u66f4\u65b0\u5c31\u662f\u5f53\u524d\u7684\u6700\u5927\u6536\u76ca\u4e0e\u5f53\u524d\u4ef7\u683c\u51cf\u53bb\u6700\u5c0f\u4ef7\u683c\u7684\u5dee\u53d6\u4e00\u4e2a\u6700\u5927\u503c return max_profit","title":"043-\u529b\u6263\u5237\u9898-121--\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a"},{"location":"\u529b\u6263\u5237\u9898/044-\u529b\u6263\u5237\u9898-119--\u6768\u8f89\u4e09\u89d2-II/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u7d22\u5f15 k\uff0c\u5176\u4e2d k \u2264 33\uff0c\u8fd4\u56de\u6768\u8f89\u4e09\u89d2\u7684\u7b2c k \u884c\u3002 \u793a\u4f8b: \u8f93\u5165: 3 \u8f93\u51fa: [1,3,3,1] \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230 O(k) \u7a7a\u95f4\u590d\u6742\u5ea6\u5417\uff1f \u7279\u522b\u590d\u6742\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 class Solution ( object ): def getRow ( self , rowIndex ): \"\"\" :type rowIndex: int :rtype: List[int] \"\"\" result = [] for i in range ( rowIndex + 1 ): result . append ([]) #\u5faa\u73af\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u64cd\u4f5c,\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684list for j in range ( i + 1 ): #\u5bf9\u8fd9\u4e00\u884c\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c,\u56e0\u4e3a\u6ca1\u884c\u6b63\u597d\u662fi+1\u4e2a\u5143\u7d20 if j in ( 0 , i ): #\u5982\u679c\u904d\u5386\u8fd9\u4e00\u884c\u7684\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019,\u9996\u5c3e\u7d22\u5f15\u7684\u5143\u7d20\u5b58\u7684\u5e94\u8be5\u90fd\u662f1 result [ i ] . append ( 1 ) #\u53d6\u51fa\u4e8c\u7ef4\u5217\u8868\u7684\u8fd9\u4e00\u884c\u8fdb\u884c\u6dfb\u52a0\u64cd\u4f5c else : #\u5426\u5219\u7684\u662f\u4e0a\u4e00\u884c\u7684\u524d\u4e00\u5217\u8ddf\u4e0a\u4e00\u884c\u7684\u540c\u4e00\u5217\u7684\u503c\u8fdb\u884c\u76f8\u52a0 result [ i ] . append ( result [ i - 1 ][ j - 1 ] + result [ i - 1 ][ j ]) return result [ rowIndex ] ```` \u4f18\u5316\u5b8c\u7684 `` ` python class Solution ( object ): def getRow ( self , rowIndex ): \"\"\" :type rowIndex: int :rtype: List[int] \"\"\" result = [ 1 ] + [ 0 ] * rowIndex #\u5148\u5c06\u8fd9\u4e00\u884c\u8bbe\u7f6e\u4e00\u4e2a\u521d\u59cb\u503c,\u5176\u5b9e\u4e5f\u662f\u7b2c\u4e00\u884c for i in range ( 1 , rowIndex + 1 ): #\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u64cd\u4f5c,\u6240\u4ee5\u662f1,rowindex+1 for j in range ( i , 0 , - 1 ): #\u6bcf\u4e0b\u4e00\u884c\u7684\u64cd\u4f5c\u5982\u4e0b,\u5f53\u524di\u5bf9\u5e94\u7684\u5c31\u662f\u8fd9\u4e00\u884c\u6700\u53f3\u4fa7\u6570\u7684\u7d22\u5f15 result [ j ] = result [ j ] + result [ j - 1 ] #\u4ece\u6700\u53f3\u4fa7\u7684\u6570\u5f00\u59cb\u8fdb\u884c\u6570\u7684\u66f4\u65b0\u66f4\u65b0\u5230\u7b2c\u4e8c\u4e2a\u6570,\u5f53\u524d\u7d22\u5f15\u5bf9\u5e94\u7684\u6570,\u53d8\u6210\u5f53\u524d\u503c\u52a0\u4e0a\u5de6\u4fa7\u4e00\u4f4d\u6570\u5b57\u7684\u548c,\u8fd9\u6837\u4e00\u6b21\u6b21\u7684\u5faa\u73af\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e86 return result \u601d\u60f3\u5c31\u662f\u5012\u7740\u770b,\u5f53\u524d\u884c\u4f4d\u7f6e\u7684\u5143\u7d20\u7b49\u4e8e\u4e0a\u4e00\u884c\u5f53\u524d\u4f4d\u7f6e\u7684\u5143\u7d20\u52a0\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u7684\u503c.","title":"044-\u529b\u6263\u5237\u9898-119--\u6768\u8f89\u4e09\u89d2-II"},{"location":"\u529b\u6263\u5237\u9898/045-\u529b\u6263\u5237\u9898-122--\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a-II/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002 \u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002 \u793a\u4f8b 1: \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 7 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-3 = 3 \u3002 \u793a\u4f8b 2: \u8f93\u5165: [1,2,3,4,5] \u8f93\u51fa: 4 \u89e3\u91ca: \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002 \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002 \u793a\u4f8b 3: \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 class Solution ( object ): def maxProfit ( self , prices ): \"\"\" :type prices: List[int] :rtype: int \"\"\" if len ( prices ) <= 1 : return 0 #\u5982\u679c\u8bf4\u8fd9\u4e2a\u5217\u8868\u53ea\u6709\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u5c31\u6ca1\u6cd5\u8fdb\u884c\u4e70\u5165\u5356\u51fa total = 0 #\u8bbe\u7f6e\u4e00\u4e2a\u521d\u59cb\u7684\u603b\u6536\u76ca\u4e3a0 for i in range ( 1 , len ( prices )): if prices [ i ] > prices [ i - 1 ]: #\u5982\u679c\u5f53\u524d\u65f6\u523b\u7684\u4ef7\u683c\u6bd4\u524d\u4e00\u5929\u7684\u9ad8\u7684\u8bdd total += prices [ i ] - prices [ i - 1 ] #\u8fdb\u884c\u7d2f\u52a0 return total #\u8fd9\u91cc\u76f4\u63a5\u8fdb\u884c\u7d2f\u52a0\u7684\u539f\u56e0\u662f\u6211\u4eec\u770b\u8fd9\u6837\u7684\u4e00\u4e2a[1,2,3,4,5] #total= 0+(2-1)+(3-2)+(4-3)+(5-4)=5-1 #\u6700\u540e\u5c06\u4e2d\u95f4\u7684\u5168\u90e8\u90fd\u6d88\u6389\u4e86\u4fdd\u7559\u4e86\u6700\u540e\u7684\u7ed3\u679c # \u4e0b\u9762\u4e00\u4e2a\u4e5f\u662f\u4e00\u6837\u7684[7,1,5,3,6,4] # total=(5-1)+ (6-3) \u6240\u6709\u7684\u6761\u4ef6\u90fd\u662f\u6ee1\u8db3\u7684\u5c31\u662f\u6570\u5b66\u7684\u7ec4\u5408","title":"045-\u529b\u6263\u5237\u9898-122--\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a-II"},{"location":"\u529b\u6263\u5237\u9898/046-\u529b\u6263\u5237\u9898-125--\u9a8c\u8bc1\u56de\u6587\u4e32/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002 \u8bf4\u660e\uff1a\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7a7a\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e3a\u6709\u6548\u7684\u56de\u6587\u4e32\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"A man, a plan, a canal: Panama\" \u8f93\u51fa: true \u793a\u4f8b 2: \u8f93\u5165: \"race a car\" \u8f93\u51fa: false class Solution ( object ): def isPalindrome ( self , s ): \"\"\" :type s: str :rtype: bool \"\"\" i , j = 0 ,( len ( s ) - 1 ) #\u8bbe\u7f6e\u4e24\u4e2a\u67e5\u8be2\u6307\u9488,\u4e00\u4e2a\u5728\u524d,\u4e00\u4e2a\u5728\u540e,\u6ce8\u610f\u52a0\u62ec\u53f7 while i < j : #\u5f53i,j\u7684\u65f6\u5019\u5c31\u4e00\u76f4\u6bd4\u5bf9 while i < j and not s [ i ] . isalnum (): #\u5982\u679c\u8bf4i<j\u5e76\u4e14 s[i]\u8fd9\u4e2a\u5b57\u7b26\u662f\u975e\u6b63\u6587\u5b57\u7b26(\u4f8b\u5982,\u7a7a\u683c\u7b49)\u7684\u8bdd,\u9700\u8981\u5c06i\u6307\u9488\u5411\u524d\u79fb\u52a8 i += 1 while i < j and not s [ j ] . isalnum (): j -= 1 if s [ i ] . lower () != s [ j ] . lower (): #\u5982\u679c\u524d\u540e\u7684\u5b57\u7b26\u4e0d\u4e00\u81f4\u5c31\u8fd4\u56deFalse return False i += 1 #\u5982\u679c\u4e00\u81f4\u5c31\u7ee7\u7eed\u5411\u4e0b\u5224\u65ad j -= 1 return True \u4e3b\u8981\u662f\u7528\u4e86python\u7684\u4e00\u4e2a\u51fd\u6570 isalnum() \u5224\u65ad\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u662f\u4e0d\u662f\u6b63\u6587\u5b57\u7b26\u4e5f\u5c31\u662fabx123\u8fd9\u79cd","title":"046-\u529b\u6263\u5237\u9898-125--\u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"\u529b\u6263\u5237\u9898/047-\u529b\u6263\u5237\u9898-845--\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u5c71\u8109/","text":"\u6211\u4eec\u628a\u6570\u7ec4 A \u4e2d\u7b26\u5408\u4e0b\u5217\u5c5e\u6027\u7684\u4efb\u610f\u8fde\u7eed\u5b50\u6570\u7ec4 B \u79f0\u4e3a \u201c\u5c71\u8109\u201d\uff1a B.length >= 3 \u5b58\u5728 0 < i < B.length - 1 \u4f7f\u5f97 B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1] \uff08\u6ce8\u610f\uff1aB \u53ef\u4ee5\u662f A \u7684\u4efb\u610f\u5b50\u6570\u7ec4\uff0c\u5305\u62ec\u6574\u4e2a\u6570\u7ec4 A\u3002\uff09 \u7ed9\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u8fd4\u56de\u6700\u957f \u201c\u5c71\u8109\u201d \u7684\u957f\u5ea6\u3002 \u5982\u679c\u4e0d\u542b\u6709 \u201c\u5c71\u8109\u201d \u5219\u8fd4\u56de 0\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[2,1,4,7,3,2,5] \u8f93\u51fa\uff1a5 \u89e3\u91ca\uff1a\u6700\u957f\u7684 \u201c\u5c71\u8109\u201d \u662f [1,4,7,3,2]\uff0c\u957f\u5ea6\u4e3a 5\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[2,2,2] \u8f93\u51fa\uff1a0 \u89e3\u91ca\uff1a\u4e0d\u542b \u201c\u5c71\u8109\u201d\u3002 \u63d0\u793a\uff1a 0 <= A.length <= 10000 0 <= A[i] <= 10000 class Solution ( object ): def longestMountain ( self , A ): \"\"\" :type A: List[int] :rtype: int \"\"\" if len ( A ) < 3 : return 0 ret = 0 # \u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u5224\u65ad stack = [ 0 ] # \u80fd\u627e\u5230\u7684\u6700\u957f\u5c71\u8109\uff0c\u5f53\u53ea\u670901012\u4e4b\u7c7b\u7684\u51fa\u73b0\u65f6\u53ef\u4ee5\u5c3d\u65e9\u7ed3\u675f\u5faa\u73af max_num = 2 * ( max ( A ) - min ( A )) + 1 # \u5f00\u59cb\u5faa\u73af\u67e5\u627e while stack : cur = stack . pop () # \u5f53\u5df2\u7ecf\u627e\u5230\u6700\u957f\u5c71\u8109\u65f6\u76f4\u63a5\u7ed3\u675f\u5faa\u73af if ret >= len ( A ) - cur or ret >= max_num : #\u5f53\u524d\u5c71\u5cf0\u7684\u957f\u5ea6\u5df2\u7ecf\u6bd4\u540e\u9762\u53ef\u80fd\u7684\u957f\u5ea6\u5927 break # \u5c71\u8109\u5de6\u53f3\u4e24\u8fb9\u5143\u7d20\u4e2a\u6570 l_tmp , r_tmp = 0 , 0 # \u4ececur\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e while cur < len ( A ) - 1 : if A [ cur ] < A [ cur + 1 ] and r_tmp == 0 : l_tmp += 1 cur += 1 elif A [ cur ] > A [ cur + 1 ] and l_tmp > 0 : r_tmp += 1 cur += 1 else : break # \u67e5\u627e\u5b8c\u6210\u540e\u5224\u65ad\u662f\u4e0d\u662f\u627e\u5230\u66f4\u957f\u7684 if r_tmp > 0 and l_tmp + r_tmp >= ret : ret = l_tmp + r_tmp + 1 # \u5f53\u6ca1\u627e\u5230\u65f6\u5e94\u8be5\u4ece\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7ee7\u7eed\u5bfb\u627e if r_tmp == 0 : cur += 1 # \u8fd9\u91cc\u4e3b\u8981\u662f\u628a\u4e0b\u4e00\u4e2a\u67e5\u627e\u4f4d\u7f6e\u538b\u5165\u6808\u4e2d\uff0c\u6ce8\u610f\u5f53\u627e\u5230\u5c71\u8109\u65f6\u53ea\u9700\u628a\u5f53\u524d\u6ca1\u6784\u6210\u5c71\u8109\u7684\u4f4d\u7f6e\u6dfb\u52a0\u8fc7\u53bb\u5373\u53ef if cur < len ( A ): stack . append ( cur ) return ret \u62fc\u591a\u591a\u7684\u6700\u957f\u5c71\u8c37 A = [ 1 , 2 , 3 , 2 , 5 , 6 , 5 , 3 , 2 , 3 , 4 , 8 , 1 ] def longestMountain ( A ): \"\"\" :type A: List[int] :rtype: int \"\"\" if len ( A ) < 3 : return 0 ret = 0 # \u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u5224\u65ad stack = [ 0 ] # \u80fd\u627e\u5230\u7684\u6700\u957f\u5c71\u8109\uff0c\u5f53\u53ea\u6709101012\u4e4b\u7c7b\u7684\u51fa\u73b0\u65f6\u53ef\u4ee5\u5c3d\u65e9\u7ed3\u675f\u5faa\u73af max_num = 2 * ( max ( A ) - min ( A )) + 1 # \u5f00\u59cb\u5faa\u73af\u67e5\u627e while stack : cur = stack . pop () # \u5f53\u5df2\u7ecf\u627e\u5230\u6700\u957f\u5c71\u8c37\u65f6\u76f4\u63a5\u7ed3\u675f\u5faa\u73af if ret >= len ( A ) - cur or ret >= max_num : break # \u5c71\u8c37\u5de6\u53f3\u4e24\u8fb9\u5143\u7d20\u4e2a\u6570 l_tmp , r_tmp = 0 , 0 # \u4ececur\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e while cur < len ( A ) - 1 : if A [ cur ] > A [ cur + 1 ] and r_tmp == 0 : l_tmp += 1 cur += 1 elif A [ cur ] < A [ cur + 1 ] and l_tmp > 0 : r_tmp += 1 cur += 1 else : break # \u67e5\u627e\u5b8c\u6210\u540e\u5224\u65ad\u662f\u4e0d\u662f\u627e\u5230\u66f4\u957f\u7684 if r_tmp > 0 and l_tmp + r_tmp >= ret : ret = l_tmp + r_tmp + 1 # \u5f53\u6ca1\u627e\u5230\u65f6\u5e94\u8be5\u4ece\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7ee7\u7eed\u5bfb\u627e if r_tmp == 0 : cur += 1 # \u8fd9\u91cc\u4e3b\u8981\u662f\u628a\u4e0b\u4e00\u4e2a\u67e5\u627e\u4f4d\u7f6e\u538b\u5165\u6808\u4e2d\uff0c\u6ce8\u610f\u5f53\u627e\u5230\u5c71\u8109\u65f6\u53ea\u9700\u628a\u5f53\u524d\u6ca1\u6784\u6210\u5c71\u8109\u7684\u4f4d\u7f6e\u6dfb\u52a0\u8fc7\u53bb\u5373\u53ef if cur < len ( A ): stack . append ( cur ) return ret \u53e6\u4e00\u79cd\u6700\u957f\u5c71\u8c37\u7684\u6c42\u6cd5 x = [ 1 , 2 , 5 , 3 , 2 , 3 , 4 ] n = len ( x ) if n < 3 : print ( 0 ) else : res = 0 for i in range ( 1 , n - 1 ): l = i while l > 0 and x [ l - 1 ] > x [ l ]: l -= 1 r = i while r < n - 1 and x [ r + 1 ] > x [ r ]: r += 1 if l < i and r > i : res = max ( res , r - l + 1 ) print ( res if res >= 3 else 0 ) \u8f93\u51fa xx = input () #\u8f93\u5165\u4e00\u884c x = list ( map ( int , xx . split ( ' ' ))) #\u6ce8\u610f\u4e0d\u8981\u591a\u8f93\u5165\u4e86\u7a7a\u683c","title":"047-\u529b\u6263\u5237\u9898-845--\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u5c71\u8109"},{"location":"\u529b\u6263\u5237\u9898/048-pin\u9898\u76ee1/","text":"import sys #\u8bfb\u53d6\u6570\u636e\u7528\u7684 if __name__ == '__main__' : line = sys . stdin . readline () . strip () #\u8f93\u5165\u4e00\u884c\u5e76\u5220\u9664\u6362\u884c\u7b26 # line='abcdefghigklmnop' k = len ( line ) // 4 #k\u7684\u503c line1 = line [ 0 : k + 1 ] #\u4e0a\u8fb9\u7684\u7b2c\u4e00\u884c line2 = line [ k + 1 : 2 * k ] #\u53f3\u8fb9\u7684\u5217 line3 = line [ 2 * k : 3 * k + 1 ] #\u4e0b\u9762\u7684\u884c line4 = line [ 3 * k + 1 :] #\u5de6\u8fb9\u7684\u5217 res = [[ ' ' ] * ( k + 1 ) for i in range ( k + 1 )] #\u521b\u5efa\u4e00\u4e2a\u7a7a\u683c\u77e9\u9635 k+1\u77e9\u9635 for i in range ( k + 1 ): #\u8fdb\u884c\u4e0a\u4e0b\u884c\u7684\u586b\u8865 res [ 0 ][ i ] = line1 [ i ] #\u7b2c\u4e00\u884c\u6b63\u5e38\u7684\u586b\u8865 res [ k ][ i ] = line3 [ k - i ] #\u4e0b\u9762\u7684\u884c\u5012\u7740\u586b\u8865 for i in range ( 1 , k ): #\u586b\u8865\u5de6\u53f3\u4e24\u5217 res [ i ][ 0 ] = line4 [ k - i - 1 ] #\u5de6\u8fb9\u7684\u5217\u5012\u7740\u586b\u8865 res [ i ][ k ] = line2 [ i - 1 ] #\u53f3\u8fb9\u7684\u5217\u6b63\u5e38\u7684\u586b\u8865 for i in res : #\u53d6\u51fa\u6bcf\u4e00\u7ef4\u7684\u6570\u7ec4 print ( '' . join ( i )) #\u5c06\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u8fde\u63a5\u6210\u5b57\u7b26\u4e32,\u5343\u4e07\u4e0d\u80fd\u5fd8\u4e86join\u51fd\u6570\u597d\u7528\u7684\u5f88","title":"048-pin\u9898\u76ee1"},{"location":"\u529b\u6263\u5237\u9898/049--\u529b\u6263\u5237\u9898459--\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32-pin2\u5b57\u7b26\u4e32\u6784\u9020/","text":"2\u5b57\u7b26\u4e32\u6784\u9020 \u6709\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5b57\u7b26\u4e32P\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7P\u6784\u9020\u51fa\u4e00\u4e2a\u65e0\u9650\u957f\u5ea6\u7684\u5b57\u7b26\u4e32S,\u5176\u4e2dS[i]=P[i%n]\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32S\uff0c\u6c42\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u6784\u9020\u51faS\u7684\u6700\u77ed\u5b57\u7b26\u4e32P\u3002 import sys #s =sys.stdin.readline().strip() s = 'abcdabcabc' n = len ( s ) for i in range ( 1 , n // 2 ): p = '' . join ( s [ 0 : i ]) q = '' for j in range ( n ): q = q + p [ j % ( len ( p ))] if q == s : print ( p ) break if i == ( n // 2 ) - 1 : #\u67e5\u627e\u5230\u4e86\u4e2d\u95f4\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u7684\u8bdd\u8bf4\u660e\u53ea\u6709\u539f\u6765\u7684\u4e32\u624d\u662f\u53ef\u4ee5\u7684 print ( s ) \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5b83\u662f\u5426\u53ef\u4ee5\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u53ea\u542b\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u5e76\u4e14\u957f\u5ea6\u4e0d\u8d85\u8fc710000\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"abab\" \u8f93\u51fa: True \u89e3\u91ca: \u53ef\u7531\u5b50\u5b57\u7b26\u4e32 \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u3002 \u793a\u4f8b 2: \u8f93\u5165: \"aba\" \u8f93\u51fa: False \u793a\u4f8b 3: \u8f93\u5165: \"abcabcabcabc\" \u8f93\u51fa: True \u89e3\u91ca: \u53ef\u7531\u5b50\u5b57\u7b26\u4e32 \"abc\" \u91cd\u590d\u56db\u6b21\u6784\u6210\u3002 (\u6216\u8005\u5b50\u5b57\u7b26\u4e32 \"abcabc\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u3002) class Solution ( object ): def repeatedSubstringPattern ( self , s ): \"\"\" :type s: str :rtype: bool \"\"\" for l in range ( 1 , len ( s ) // 2 + 1 ): if s [: l ] * ( len ( s ) // l ) == s : return True return False \u770b\u4e86\u8bc4\u8bba\u533apython\u4e00\u884c\u4ee3\u7801\u9ad8\u8d5e\u89e3\u7b54\uff0c\u7406\u89e3\u4e86\u4e00\u4e0b\uff0c\u7ed9\u5927\u5bb6\u53c2\u8003\u3002 \u4e00\u4e2a\u5b57\u7b26\u4e32\u5982\u679c\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u81f3\u5c11\u75312\u4e2a\u5b50\u4e32\u7ec4\u6210\u3002\u4f8b\uff1ab b / abc abc s+s\u3002\u4ee5\u540e\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u81f3\u5c11\u75314\u4e2a\u5b50\u4e32\u7ec4\u6210 bb+bb / abcabc+abcabc \u622a\u53bb\u9996\u5c3e\u5404\u4e00\u4e2a\u5b57\u7b26s[1:-1] \uff08\u6ce8\uff1a\u53ea\u622a\u4e00\u4e2a\u662f\u4e3a\u4e86\u5224\u65ad\u7c7b\u4f3c\u672c\u4f8b\uff0c\u91cd\u590d\u5b50\u4e32\u957f\u5ea6\u4e3a1\u7684\u60c5\u51b5\u3002\u5f53\u91cd\u590d\u5b50\u4e32\u957f\u5ea6\u5927\u4e8e1\u65f6\uff0c\u4efb\u610f\u622a\u53bb\u9996\u5c3e\u5c0f\u4e8e\u7b49\u4e8e\u91cd\u590d\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\u90fd\u53ef\uff09 \u7531\u4e8es+s\u7ec4\u6210\u76844\u4e2a\u91cd\u590d\u5b50\u4e32\u88ab\u7834\u574f\u4e86\u9996\u5c3e2\u4e2a\uff0c\u5219\u53ea\u5269\u4e0b\u4e2d\u95f4\u4e24\u4e2a b bb b\u3002\u6b64\u65f6\u5728\u5224\u65ad\u4e2d\u95f4\u4e24\u4e2a\u5b50\u4e32\u7ec4\u6210\u662f\u5426\u7b49\u4e8es\uff0c\u82e5\u662f\uff0c\u5219\u6210\u7acb\u3002 class Solution : def repeatedSubstringPattern ( self , s : str ) -> bool : return ( s + s )[ 1 : - 1 ] . find ( s ) != - 1","title":"049--\u529b\u6263\u5237\u9898459--\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32-pin2\u5b57\u7b26\u4e32\u6784\u9020"},{"location":"\u529b\u6263\u5237\u9898/050-\u4e8c\u7ef4\u751f\u7269\u7684\u65c5\u884c-754--\u5230\u8fbe\u7ec8\u70b9\u6570\u5b57/","text":"\u7b2c\u4e09\u9898 \u4e8c\u7ef4\u751f\u7269\u7684\u65c5\u884c \u4e8c\u7ef4\u751f\u7269hip\u5f53\u524d\u5904\u4e8ex\u8f74\u76840\u5750\u6807\u4f4d\u7f6e\uff0c\u6253\u7b97\u53bb\u62dc\u8bbf\u5b83\u7684\u8001\u53cbhop\uff0chop\u4f4d\u4e8e\u5750\u6807\u8f74\u7684target\u4f4d\u7f6e\u3002hip\u6709\u4e00\u4e2a\u5f88\u5947\u602a\u7684\u80fd\u529b\uff0c\u5176\u8fc8\u51fa\u7684\u7b2cn\u6b65\uff08\u4ece1\u7b97\u8d77\uff09\uff0c\u6b65\u957f\u4e3an\u3002\u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e00\u6b65\u53ef\u4ee5\u79fb\u52a8\u7684\u8ddd\u79bb\u4e3a1\uff0c\u7b2c\u4e8c\u6b65\u53ef\u4ee5\u79fb\u52a8\u7684\u8ddd\u79bb\u4e3a2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6bcf\u8d70\u4e00\u6b65\u4e4b\u524d\uff0chip\u90fd\u53ef\u4ee5\u51b3\u5b9a\u8fd9\u4e00\u6b65\u662f\u5411\u5de6\u8d70\u8fd8\u662f\u5411\u53f3\u8d70\uff0c\u4f46\u6bcf\u4e00\u6b65\u90fd\u53ea\u80fd\u671d\u4e00\u4e2a\u65b9\u5411\u524d\u8fdb\u3002\u4e8c\u7ef4\u751f\u7269\u90fd\u5f88\u61d2\uff0chip\u5e0c\u671b\u4f60\u80fd\u5148\u5e2e\u4ed6\u8ba1\u7b97\u51fa\u6700\u5c11\u9700\u8981\u8d70\u591a\u5c11\u6b65\u624d\u80fd\u5230\u8fbetarget\u4f4d\u7f6e\uff0c\u4ed6\u518d\u51b3\u5b9a\u8981\u4e0d\u8981\u53bb\u62dc\u8bbf\u8001\u53cb\u3002 \u8f93\u5165\u63cf\u8ff0\uff1a \u6bcf\u4e2a\u6d4b\u8bd5\u8f93\u5165\u5305\u542b1\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5373\u7ed9\u51fa\u76ee\u6807\u4f4d\u7f6etarget\u7684\u503c\u3002\u8fd9\u91cc\u4fdd\u8bc1-10 9<=target<=10 9,\u4e14\u4e3a\u6574\u6570 \u5728\u4e00\u6839\u65e0\u9650\u957f\u7684\u6570\u8f74\u4e0a\uff0c\u4f60\u7ad9\u57280\u7684\u4f4d\u7f6e\u3002\u7ec8\u70b9\u5728target\u7684\u4f4d\u7f6e\u3002 \u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u3002\u7b2c n \u6b21\u79fb\u52a8\uff08\u4ece 1 \u5f00\u59cb\uff09\uff0c\u53ef\u4ee5\u8d70 n \u6b65\u3002 \u8fd4\u56de\u5230\u8fbe\u7ec8\u70b9\u9700\u8981\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002 \u793a\u4f8b 1: \u8f93\u5165: target = 3 \u8f93\u51fa: 2 \u89e3\u91ca: \u7b2c\u4e00\u6b21\u79fb\u52a8\uff0c\u4ece 0 \u5230 1 \u3002 \u7b2c\u4e8c\u6b21\u79fb\u52a8\uff0c\u4ece 1 \u5230 3 \u3002 \u793a\u4f8b 2: \u8f93\u5165: target = 2 \u8f93\u51fa: 3 \u89e3\u91ca: \u7b2c\u4e00\u6b21\u79fb\u52a8\uff0c\u4ece 0 \u5230 1 \u3002 \u7b2c\u4e8c\u6b21\u79fb\u52a8\uff0c\u4ece 1 \u5230 -1 \u3002 \u7b2c\u4e09\u6b21\u79fb\u52a8\uff0c\u4ece -1 \u5230 2 \u3002 \u6ce8\u610f: target\u662f\u5728[-10^9, 10^9]\u8303\u56f4\u4e2d\u7684\u975e\u96f6\u6574\u6570\u3002 \u9898\u89e3 \u9996\u5148\u6ce8\u610f\u5230\u5bf9\u79f0\u6027\uff0c\u5411\u6b63\u5411\u884c\u8d70\u548c\u53cd\u5411\u884c\u8d70\u76f8\u540c\u8ddd\u79bb\u4f7f\u7528\u6700\u5c0f\u6b65\u6570\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u53ea\u8003\u8651target>0\u7684\u60c5\u51b5\u3002 \u6ce8\u610f\u5230\uff0c\u8d70n\u6b65\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u8ddd\u79bb\u4e3a n * (n + 1) / 2 n * (n + 1) / 2 \u3002 \u56e0\u6b64\uff0c\u4ee4 a = math.sqrt(2 * target + 0.25) - 0.5 a = math.sqrt(2 * target + 0.25) - 0.5 \uff0c\u82e5 a == int(a) a == int(a) \u5219\u8bf4\u660e\u6b64\u65f6\u7684target\u6b63\u597d\u662fa\u6b65\u6240\u80fd\u8fbe\u5230\u7684\u6700\u8fdc\u8ddd\u79bb\u3002\u76f4\u63a5\u8fd4\u56de int(a) int(a) \u5373\u53ef\u3002 \u5982\u679c a != int(a) a != int(a) \uff0c\u5219\u5c06a\u8bbe\u7f6e\u4e3a\u6700\u8fdc\u8ddd\u79bb\u5927\u4e8etarget\u7684\u6700\u5c0f\u6b65\u6570\u3002\u6b64\u65f6\u5206\u60c5\u51b5\u8ba8\u8bba\u3002 \u6ce8\u610f\u5230\u5bf9\u4e8e\u8d70\u4e86\u6b65\u6570n\uff1a \u82e5((n + 1) // 2) % 2 == 1\u5219\u6b64\u65f6\u505c\u4e0b\u6765\u7684\u8ddd\u79bb\u80af\u5b9a\u4e3a\u5947\u6570 \u82e5((n + 1) // 2) % 2 == 0\u5219\u6b64\u65f6\u505c\u4e0b\u6765\u7684\u8ddd\u79bb\u80af\u5b9a\u4e3a\u5076\u6570 \u82e5\u6b65\u6570a\u5bf9\u5e94\u7684\u5947\u5076\u6570\u60c5\u51b5\u548ctarget\u6b63\u597d\u76f8\u540c\uff0c\u5219\u8f93\u51faa\u3002 \u82e5\u6b65\u6570a\u5bf9\u5e94\u7684\u5947\u5076\u6570\u60c5\u51b5\u548ctarget\u4e0d\u76f8\u540c\uff0c\u5219\u8f93\u51fa\u5927\u4e8ea\u7684\u4e0b\u4e00\u4e2a\u4e0etarget\u5947\u5076\u76f8\u540c\u7684\u6b65\u6570\u3002 \u76f4\u63a5\u770b\u4ee3\u7801\u66f4\u6e05\u6670 import math class Solution ( object ): def reachNumber ( self , target ): \"\"\" :type target: int :rtype: int \"\"\" if target < 0 : target = 0 - target a = math . sqrt ( 2 * target + 0.25 ) - 0.5 # print(a) if a == int ( a ): return int ( a ) else : a = int ( a ) + 1 if (( a + 1 ) // 2 ) % 2 == target % 2 : return a elif a % 2 == 1 : return a + 2 else : return a + 1","title":"050-\u4e8c\u7ef4\u751f\u7269\u7684\u65c5\u884c-754--\u5230\u8fbe\u7ec8\u70b9\u6570\u5b57"},{"location":"\u529b\u6263\u5237\u9898/051-\u529b\u6263\u5237\u9898-136--\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u8bf4\u660e\uff1a \u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6(O(n))\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4O(1)\u6765\u5b9e\u73b0\u5417\uff1f \u793a\u4f8b 1: \u8f93\u5165: [2,2,1] \u8f93\u51fa: 1 \u793a\u4f8b 2: \u8f93\u5165: [4,1,2,1,2] \u8f93\u51fa: 4 \u5de7\u7528\u96c6\u5408 \u00b6 class Solution ( object ): def singleNumber ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" #\u9996\u5148\u4f7f\u7528\u7684\u662f\u96c6\u5408\u53bb\u9664\u4e86\u91cd\u590d\u7684\u503c,\u7136\u540e\u8fdb\u884c\u4e86\u52a0\u548c.\u56e0\u4e3a\u8fd9\u4e2a nums \u662f\u5947\u6570\u4e2a,\u56e0\u4e3a\u6709\u4e00\u4e2a\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684.\u56e0\u6b64\u53bb\u9664\u4e86\u91cd\u590d\u7684\u503c\u540e\u7d2f\u52a0\u4e58\u4e0a2\u500d,\u518d\u51cf\u6389\u539f\u6765\u7684\u6570\u7ec4\u7684\u52a0\u548c\u5c31\u662f\u5269\u4e0b\u7684\u90a3\u4e2a\u6ca1\u6709\u51fa\u73b0\u4e24\u6b21\u7684\u5143\u7d20\u7684\u503c return sum ( set ( nums )) * 2 - sum ( nums ) #\u8fd9\u4e48\u592a\u725b\u903c\u7684\u505a\u6cd5\u4e86 \u5f02\u6216 \u00b6 class Solution ( object ): def singleNumber ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" # \u4f7f\u7528\u5f02\u6216\u7684\u65b9\u5f0f # \u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u7ed3\u679c\u662f0 # \u4efb\u4f55\u6570\u5b57\u4e0e0\u5f02\u6216\u662f\u81ea\u5df1\u672c\u8eab ans = 0 for num in nums : ans ^= num return ans #\u8fd9\u91cc\u5229\u7528\u5c31\u662f\u4e0d\u7ba1\u4ec0\u4e48\u6570\u53ea\u8981\u662f\u5f02\u6216\u4e24\u6b21\u60f3\u76f8\u5f53\u4e8e\u6ca1\u6709\u88ab\u5f02\u6216\u8fc7,\u56e0\u6b64\u4f7f\u75280\u4f5c\u4e3a\u521d\u59cb\u7684\u5f02\u6216\u503c,\u51fa\u73b0\u4e24\u6b21\u7684\u5143\u7d20\u5168\u90e8\u88ab\u5f02\u6216\u6389\u4e86 #\u51fa\u73b0\u4e00\u6b21\u7684\u8ddf0\u5f02\u6216\u5c31\u662f\u81ea\u5df1\u672c\u8eab test 0 ^ 2 ^ 3 ^ 2 Out [ 22 ]: 3","title":"051-\u529b\u6263\u5237\u9898-136--\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"\u529b\u6263\u5237\u9898/051-\u529b\u6263\u5237\u9898-136--\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57/#_1","text":"class Solution ( object ): def singleNumber ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" #\u9996\u5148\u4f7f\u7528\u7684\u662f\u96c6\u5408\u53bb\u9664\u4e86\u91cd\u590d\u7684\u503c,\u7136\u540e\u8fdb\u884c\u4e86\u52a0\u548c.\u56e0\u4e3a\u8fd9\u4e2a nums \u662f\u5947\u6570\u4e2a,\u56e0\u4e3a\u6709\u4e00\u4e2a\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684.\u56e0\u6b64\u53bb\u9664\u4e86\u91cd\u590d\u7684\u503c\u540e\u7d2f\u52a0\u4e58\u4e0a2\u500d,\u518d\u51cf\u6389\u539f\u6765\u7684\u6570\u7ec4\u7684\u52a0\u548c\u5c31\u662f\u5269\u4e0b\u7684\u90a3\u4e2a\u6ca1\u6709\u51fa\u73b0\u4e24\u6b21\u7684\u5143\u7d20\u7684\u503c return sum ( set ( nums )) * 2 - sum ( nums ) #\u8fd9\u4e48\u592a\u725b\u903c\u7684\u505a\u6cd5\u4e86","title":"\u5de7\u7528\u96c6\u5408"},{"location":"\u529b\u6263\u5237\u9898/051-\u529b\u6263\u5237\u9898-136--\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57/#_2","text":"class Solution ( object ): def singleNumber ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" # \u4f7f\u7528\u5f02\u6216\u7684\u65b9\u5f0f # \u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u7ed3\u679c\u662f0 # \u4efb\u4f55\u6570\u5b57\u4e0e0\u5f02\u6216\u662f\u81ea\u5df1\u672c\u8eab ans = 0 for num in nums : ans ^= num return ans #\u8fd9\u91cc\u5229\u7528\u5c31\u662f\u4e0d\u7ba1\u4ec0\u4e48\u6570\u53ea\u8981\u662f\u5f02\u6216\u4e24\u6b21\u60f3\u76f8\u5f53\u4e8e\u6ca1\u6709\u88ab\u5f02\u6216\u8fc7,\u56e0\u6b64\u4f7f\u75280\u4f5c\u4e3a\u521d\u59cb\u7684\u5f02\u6216\u503c,\u51fa\u73b0\u4e24\u6b21\u7684\u5143\u7d20\u5168\u90e8\u88ab\u5f02\u6216\u6389\u4e86 #\u51fa\u73b0\u4e00\u6b21\u7684\u8ddf0\u5f02\u6216\u5c31\u662f\u81ea\u5df1\u672c\u8eab test 0 ^ 2 ^ 3 ^ 2 Out [ 22 ]: 3","title":"\u5f02\u6216"},{"location":"\u529b\u6263\u5237\u9898/052-\u529b\u6263\u5237\u9898-162--\u5bfb\u627e\u5cf0\u503c/","text":"\u5cf0\u503c\u5143\u7d20\u662f\u6307\u5176\u503c\u5927\u4e8e\u5de6\u53f3\u76f8\u90bb\u503c\u7684\u5143\u7d20\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u6570\u7ec4 nums\uff0c\u5176\u4e2d nums[i] \u2260 nums[i+1]\uff0c\u627e\u5230\u5cf0\u503c\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002 \u6570\u7ec4\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5cf0\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u4efb\u4f55\u4e00\u4e2a\u5cf0\u503c\u6240\u5728\u4f4d\u7f6e\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums[-1] = nums[n] = -\u221e\u3002 \u793a\u4f8b 1: \u8f93\u5165: nums = [1,2,3,1] \u8f93\u51fa: 2 \u89e3\u91ca: 3 \u662f\u5cf0\u503c\u5143\u7d20\uff0c\u4f60\u7684\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u5176\u7d22\u5f15 2\u3002 \u793a\u4f8b 2: \u8f93\u5165: nums = [1,2,1,3,5,6,4] \u8f93\u51fa: 1 \u6216 5 \u89e3\u91ca: \u4f60\u7684\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u7d22\u5f15 1\uff0c\u5176\u5cf0\u503c\u5143\u7d20\u4e3a 2\uff1b \u6216\u8005\u8fd4\u56de\u7d22\u5f15 5\uff0c \u5176\u5cf0\u503c\u5143\u7d20\u4e3a 6\u3002 \u8bf4\u660e: \u4f60\u7684\u89e3\u6cd5\u5e94\u8be5\u662f O(logN) \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u3002 class Solution ( object ): def findPeakElement ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" size = len ( nums ) for x in range ( 1 , size - 1 ): if nums [ x ] > nums [ x - 1 ] and nums > nums [ x + 1 ]: return x #\u8fd4\u56de\u7684\u5c31\u662f\u4e2d\u95f4\u7684\u5c71\u5cf0 return [ 0 , size - 1 ][ nums [ 0 ] < nums [ size - 1 ]] #\u5982\u679c\u8bf4\u662f\u964d\u5e8f,\u90a3\u4e48nums[0]<nums[size-1]\u7ed3\u679c\u4e3a0\u8fd4\u56de\u7684\u5c31\u662f\u7d22\u5f150 \u5982\u679c\u662f\u5347\u5e8f,\u90a3\u4e48\u7ed3\u679c\u5c31\u662f1\u8fd4\u56de\u7684\u5c31\u662fsize-1 \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15..\u540c\u65f6\u4e5f\u5305\u542b\u4e86\u8fd9\u79cd\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5(\u8fd4\u56de\u7d22\u5f150) \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6 : O(n)O(n)\u3002 \u6211\u4eec\u5bf9\u957f\u5ea6\u4e3a nn \u7684\u6570\u7ec4 numsnums \u53ea\u8fdb\u884c\u4e00\u6b21\u904d\u5386\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 : O(1)O(1)\u3002 \u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u7a7a\u95f4\u3002 \u4e8c\u5206\u6cd5\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u627e\u7c7b\u4f3c\u4e8e\u901a\u8fc7\u68af\u5ea6\u51b3\u5b9a\u53d8\u6362\u7684\u65b9\u5411,\u76f8\u5f53\u4e8e\u68af\u5ea6\u4e0a\u5347\u6cd5 class Solution ( object ): def findPeakElement ( self , nums ): \"\"\" :type nums: List[int] :rtype: int \"\"\" left , right = 0 , len ( nums ) - 1 while left < right : mid = ( left + right ) // 2 if nums [ mid ] < nums [ mid + 1 ]: #\u4ece\u5de6\u5411\u53f3\u662f\u4e0a\u5761 left = mid + 1 #\u90a3\u4e48\u5c31\u628a\u5de6\u8fb9\u7684left\u5411\u53f3\u79fb\u52a8 else : #\u4ece\u53f3\u5411\u5de6\u662f\u4e0a\u5761 right = mid return left # nums =[1,2,3,1] # left--0,right--3,mid = 1 => nums[1] < nums[2] #\u4ece\u5de6\u5411\u53f3\u662f\u4e0a\u5761 # left = mid+1 =1+1=2 ,right--3 ,mid=2 => nums[2]> num[3]#\u4ece\u53f3\u5411\u5de6\u662f\u4e0a\u5761 #left=2,right=mid--2,return left=2","title":"052-\u529b\u6263\u5237\u9898-162--\u5bfb\u627e\u5cf0\u503c"},{"location":"\u529b\u6263\u5237\u9898/053-\u529b\u6263\u5237\u9898-235--\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002 \u767e\u5ea6\u767e\u79d1\u4e2d\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a\u201c\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u7ed3\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u7ed3\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148\uff09\u3002\u201d \u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u641c\u7d22\u6811: root = [6,2,8,0,4,7,9,null,null,3,5] \u793a\u4f8b 1: \u8f93\u5165: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8 \u8f93\u51fa: 6 \u89e3\u91ca: \u8282\u70b9 2 \u548c\u8282\u70b9 8 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f 6\u3002 \u793a\u4f8b 2: \u8f93\u5165: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4 \u8f93\u51fa: 2 \u89e3\u91ca: \u8282\u70b9 2 \u548c\u8282\u70b9 4 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f 2, \u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002 \u8bf4\u660e: \u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002 p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u3002","title":"053-\u529b\u6263\u5237\u9898-235--\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},{"location":"\u529b\u6263\u5237\u9898/054-\u5c0f\u7403\u53cd\u5f39\u7684\u603b\u8def\u7a0b/","text":"\u7f16\u7a0b\u9898\uff1a\u4e00\u4e2a\u7403\u4ece100m\u9ad8\u5ea6\u81ea\u7531\u843d\u4e0b,\u6bcf\u6b21\u843d\u5730\u540e\u53cd\u8df3\u56de\u539f\u6765\u9ad8\u5ea6\u7684\u4e00\u822c,\u518d\u843d\u4e0b.\u6c42\u7b2c10\u6b21\u843d\u5730\u65f6,\u5171\u7ecf\u8fc7\u591a\u5c11\u7c73?\u7b2c10\u6b21\u53cd\u5f39\u7684\u9ad8\u5ea6\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Mon Aug 12 20:26:31 2019 @author: zangz \"\"\" def distance ( H , k ): if not ( H and k ): #\u4efb\u610f\u4e00\u4e2a\u51fa\u73b00\u7684\u60c5\u51b5 return 0 , 0 h = H / 2 #\u521d\u59cb\u5316\u53cd\u5f39\u9ad8\u5ea6 S = H #\u521d\u59cb\u5316\u603b\u8ddd\u79bb if k == 1 : return S , h else : for i in range ( k - 1 ): S = S + 2 * h h = h / 2 return S , h if __name__ == \"__main__\" : print ( distance ( 100 , 10 )) ( 299.609375 , 0.09765625 )","title":"054-\u5c0f\u7403\u53cd\u5f39\u7684\u603b\u8def\u7a0b"},{"location":"\u529b\u6263\u5237\u9898/055-\u529b\u6263\u5237\u9898-1004--\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570-III/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u82e5\u5e72 0 \u548c 1 \u7ec4\u6210\u7684\u6570\u7ec4 A\uff0c\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u5c06 K \u4e2a\u503c\u4ece 0 \u53d8\u6210 1 \u3002 \u8fd4\u56de\u4ec5\u5305\u542b 1 \u7684\u6700\u957f\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1aA = [1,1,1,0,0,0,1,1,1,1,0], K = 2 \u8f93\u51fa\uff1a6 \u89e3\u91ca\uff1a [1,1,1,0,0,1,1,1,1,1,1] \u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 6\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1aA = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3 \u8f93\u51fa\uff1a10 \u89e3\u91ca\uff1a [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1] \u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 10\u3002 \u63d0\u793a\uff1a 1 <= A.length <= 20000 0 <= K <= A.length A[i] \u4e3a 0 \u6216 1 \u601d\u8def\uff1a \u7528\u53cc\u6307\u9488lo, hi\u7ef4\u62a4\u5168\u90e8\u662f1\u7684\u533a\u95f4\uff0c \u7528 hi \u7ebf\u6027\u626b\u63cf\uff0c \u5982\u679c\u78b0\u52300\uff0c zero += 1 \u5982\u679c\u5df2\u7ecf\u6709 k \u4e2a zero \u4e86\uff0c\u8bf4\u660e\u533a\u95f4 \u5de6\u7aef \u5e94\u8be5\u5411 \u53f3 \u8c03\u6574\u5230\u8de8\u8d8a\u8fc7\u4e00\u4e2a 0 \u7684\u4f4d\u7f6e\u3002 \u6bcf\u6b21\u5faa\u73af\u7528res\u8bb0\u5f55\u4e0b\u5f53\u524d\u7684\u533a\u95f4\u6700\u5927\u957f\u5ea6\u3002 class Solution ( object ): def longestOnes ( self , A , k ): \"\"\" :type A: List[int] :type K: int :rtype: int \"\"\" l = len ( A ) #\u4f20\u9012\u8fd1\u6765\u7684A\u7684\u957f\u5ea6 zero = 0 #\u8bb0\u5f55\u904d\u5386\u5230\u76840\u7684\u4e2a\u6570 lo , hi = 0 , 0 #lo\u662f\u9700\u8981\u79fb\u52a8\u7684\u6307\u9488,\u7a97\u53e3\u957f\u5ea6\u5c31\u662fhi-lo+1 res = 0 #\u8fd9\u4e2a\u8bb0\u5f55\u7684\u662f\u6700\u5927\u7684\u957f\u5ea6 for hi in range ( l ): #\u8fdb\u884c\u5faa\u73af if A [ hi ] == 0 : #\u5f00\u59cb\u904d\u5386,\u5982\u679c\u904d\u5386\u5230\u4e860\u5c31\u52a01 zero += 1 while zero > k : #\u5f53zero\u7684\u4e2a\u6570\u8d85\u8fc7k\u7684\u4e2a\u6570\u7684\u65f6\u5019\u5c31\u8981\u79fb\u52a8 lo \u7684\u5750\u6807,\u76f4\u5230\u79fb\u52a8\u5230lo\u6307\u5411\u4e2d\u95f40\u4f4d\u7f6e\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a(\u63a5\u4e0b\u6765\u518d\u53bb\u627e\u66f4\u957f\u7684\u957f\u5ea6,\u524d\u9762\u7684\u957f\u5ea6\u5df2\u7ecf\u786e\u5b9a\u4e86) if A [ lo ] == 0 : # zero -= 1 #\u8fd9\u91cclo\u5f00\u59cb\u79fb\u52a8\u5230\u4e2d\u95f4\u76840\u7684\u4f4d\u7f6e\u4e86,\u79fb\u52a8\u4e00\u4e2a\u5c31\u51cf\u6389\u4e00\u4e2a lo += 1 # \u79fb\u52a8\u8d77\u59cb\u7684\u6307\u9488 # print lo, hi res = max ( res , hi - lo + 1 ) #\u6c42\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u7684\u6700\u5927\u503c return res #\u8fd4\u56de\u6700\u5927\u503c","title":"055-\u529b\u6263\u5237\u9898-1004--\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570-III"},{"location":"\u529b\u6263\u5237\u9898/056-\u529b\u6263\u5237\u9898-206--\u53cd\u8f6c\u94fe\u8868/","text":"\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\u3002 \u793a\u4f8b: \u8f93\u5165: 1->2->3->4->5->NULL \u8f93\u51fa: 5->4->3->2->1->NULL \u8fdb\u9636: \u4f60\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u94fe\u8868\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def reverseList ( self , head ): \"\"\" :type head: ListNode :rtype: ListNode \"\"\" pre = None cur = head while cur : nextcode = cur . next #\u5148\u4fdd\u5b58cur\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 cur . next = pre #\u5c06cur\u6267\u884c\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u53cd\u8f6c pre = cur #\u8ba9\u524d\u4e00\u4e2a\u6307\u9488\u6267\u884c\u5f53\u524d\u7684cur cur = nextcode #cur\u540e\u79fb return pre #\u6700\u540e\u628apre\u7684\u503c\u8fd4\u56de,\u8fd9\u4e2a\u5c31\u662f\u5934\u7ed3\u70b9","title":"056-\u529b\u6263\u5237\u9898-206--\u53cd\u8f6c\u94fe\u8868"},{"location":"\u529b\u6263\u5237\u9898/057-\u529b\u6263\u5237\u9898-237\u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9/","text":"\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u94fe\u8868\u4e2d\u7ed9\u5b9a\u7684\uff08\u975e\u672b\u5c3e\uff09\u8282\u70b9\uff0c\u4f60\u5c06\u53ea\u88ab\u7ed9\u5b9a\u8981\u6c42\u88ab\u5220\u9664\u7684\u8282\u70b9\u3002 \u73b0\u6709\u4e00\u4e2a\u94fe\u8868 -- head = [4,5,1,9]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a: \u793a\u4f8b 1: \u8f93\u5165: head = [4,5,1,9], node = 5 \u8f93\u51fa: [4,1,9] \u89e3\u91ca: \u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 5 \u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 1 -> 9. \u793a\u4f8b 2: \u8f93\u5165: head = [4,5,1,9], node = 1 \u8f93\u51fa: [4,5,9] \u89e3\u91ca: \u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 1 \u7684\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 5 -> 9. \u8bf4\u660e: \u94fe\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u8282\u70b9\u3002 \u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002 \u7ed9\u5b9a\u7684\u8282\u70b9\u4e3a\u975e\u672b\u5c3e\u8282\u70b9\u5e76\u4e14\u4e00\u5b9a\u662f\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002 \u4e0d\u8981\u4ece\u4f60\u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002 # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None class Solution ( object ): def deleteNode ( self , node ): \"\"\" :type node: ListNode :rtype: void Do not return anything, modify node in-place instead. \"\"\" nextnode = node . next #nextnode\u6307\u5411\u7684\u662fnode\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 after_next_node = node . next . next #\u6307\u5411\u7684\u662f\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 node . val = nextnode . val #\u8ba9node\u503c\u503c\u662f\u4ed6\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c node . next = after_next_node #\u5220\u9664\u5979\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9.\u7531\u4e8enode\u4fdd\u5b58\u7684\u503c\u53d8\u6210\u4e86\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c,\u56e0\u6b64\u5220\u9664\u4e0b\u4e00\u4e2a\u8282\u70b9\u5c31\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u672c\u8eab\u8981\u5220\u9664\u7684\u8282\u70b9","title":"057-\u529b\u6263\u5237\u9898-237\u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"\u529b\u6263\u5237\u9898/058-\u529b\u6263\u5237\u9898-226--\u7ffb\u8f6c\u4e8c\u53c9\u6811/","text":"\u7ffb\u8f6c\u4e00\u68f5\u4e8c\u53c9\u6811\u3002 \u793a\u4f8b\uff1a \u5907\u6ce8: \u8fd9\u4e2a\u95ee\u9898\u662f\u53d7\u5230 Max Howell \u7684 \u539f\u95ee\u9898 \u542f\u53d1\u7684 \uff1a \u8c37\u6b4c\uff1a\u6211\u4eec90\uff05\u7684\u5de5\u7a0b\u5e08\u4f7f\u7528\u60a8\u7f16\u5199\u7684\u8f6f\u4ef6(Homebrew)\uff0c\u4f46\u662f\u60a8\u5374\u65e0\u6cd5\u5728\u9762\u8bd5\u65f6\u5728\u767d\u677f\u4e0a\u5199\u51fa\u7ffb\u8f6c\u4e8c\u53c9\u6811\u8fd9\u9053\u9898\uff0c\u8fd9\u592a\u7cdf\u7cd5\u4e86\u3002 # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def invertTree ( self , root ): \"\"\" :type root: TreeNode :rtype: TreeNode \"\"\" if root : root . left , root . right = root . right , root . left #\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4ea4\u6362\u5de6\u53f3\u5b50\u6811,\u6700\u540e\u5c31\u5b9e\u73b0\u4e86\u6697\u8f6c self . invertTree ( root . left ) self . invertTree ( root . right ) return root","title":"058-\u529b\u6263\u5237\u9898-226--\u7ffb\u8f6c\u4e8c\u53c9\u6811"},{"location":"\u529b\u6263\u5237\u9898/059-\u529b\u6263\u5237\u9898-102--\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5176\u6309\u5c42\u6b21\u904d\u5386\u7684\u8282\u70b9\u503c\u3002 \uff08\u5373\u9010\u5c42\u5730\uff0c\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff09\u3002 \u4f8b\u5982: \u7ed9\u5b9a\u4e8c\u53c9\u6811: [3,9,20,null,null,15,7], # Definition for a binary tree node. # class TreeNode(object): # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution ( object ): def levelOrder ( self , root ): \"\"\" :type root: TreeNode :rtype: List[List[int]] \"\"\" if root is None : return [] res = [] cur_nodes = [ root ] #\u5f53\u524d\u5c42\u7684\u8282\u70b9 next_nodes = [] #\u4e0b\u4e00\u5c42\u7684\u8282\u70b9 res . append ([ i . val for i in cur_nodes ]) #\u5c06\u5f53\u524d\u5c42\u7684\u503c\u4ece\u5230\u5230\u53f3\u7684\u904d\u5386\u5e76\u5b58\u50a8 while cur_nodes or next_nodes : for node in cur_nodes : if node . left : next_nodes . append ( node . left ) if node . right : next_nodes . append ( node . right ) if next_nodes : res . append ([ i . val for i in next_nodes ]) cur_nodes = next_nodes next_nodes = [] return res","title":"059-\u529b\u6263\u5237\u9898-102--\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386"},{"location":"\u529b\u6263\u5237\u9898/060-\u529b\u6263\u5237\u9898-232--\u7528\u6808\u5b9e\u73b0\u961f\u5217/","text":"\u4f7f\u7528\u6808\u5b9e\u73b0\u961f\u5217\u7684\u4e0b\u5217\u64cd\u4f5c\uff1a push(x) -- \u5c06\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u961f\u5217\u7684\u5c3e\u90e8\u3002 pop() -- \u4ece\u961f\u5217\u9996\u90e8\u79fb\u9664\u5143\u7d20\u3002 peek() -- \u8fd4\u56de\u961f\u5217\u9996\u90e8\u7684\u5143\u7d20\u3002 empty() -- \u8fd4\u56de\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002 \u793a\u4f8b: MyQueue queue = new MyQueue(); queue.push(1); queue.push(2); queue.peek(); // \u8fd4\u56de 1 queue.pop(); // \u8fd4\u56de 1 queue.empty(); // \u8fd4\u56de false \u8bf4\u660e: \u4f60\u53ea\u80fd\u4f7f\u7528\u6807\u51c6\u7684\u6808\u64cd\u4f5c -- \u4e5f\u5c31\u662f\u53ea\u6709 push to top, peek/pop from top, size, \u548c is empty \u64cd\u4f5c\u662f\u5408\u6cd5\u7684\u3002 \u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u4e5f\u8bb8\u4e0d\u652f\u6301\u6808\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 list \u6216\u8005 deque\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u53ea\u8981\u662f\u6807\u51c6\u7684\u6808\u64cd\u4f5c\u5373\u53ef\u3002 \u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u6709\u6548\u7684 \uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\u4e0d\u4f1a\u8c03\u7528 pop \u6216\u8005 peek \u64cd\u4f5c\uff09\u3002 class MyQueue ( object ): def __init__ ( self ): \"\"\" Initialize your data structure here. \"\"\" self . stack1 = [] self . stack2 = [] def push ( self , x ): \"\"\" Push element x to the back of queue. :type x: int :rtype: None \"\"\" self . stack1 . append ( x ) #\u76f4\u63a5\u5c06\u5143\u7d20\u5b58\u5230\u7b2c\u4e00\u4e2a\u6808\u91cc def pop ( self ): \"\"\" Removes the element from in front of queue and returns that element. :rtype: int \"\"\" if self . stack2 : return self . stack2 . pop () #\u5982\u679c\u8bf4\u7b2c\u4e8c\u4e2a\u6808\u4e2d\u6709\u5143\u7d20\u7684\u8bdd\u90a3\u4e48\u5c31\u4ece\u7b2c\u4e8c\u4e2a\u6808\u4e2d\u5f39\u51fa\u5143\u7d20 else : if self . stack1 : while self . stack1 : self . stack2 . append ( self . stack1 . pop ()) #\u5faa\u73af\u5c06stack1\u4e2d\u7684\u5143\u7d20\u5b58\u5230stack2\u4e2d return self . stack2 . pop () #\u4ece\u68082\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20 else : return None def peek ( self ): \"\"\" Get the front element. :rtype: int \"\"\" if self . stack2 : return self . stack2 [ - 1 ] #\u8fd4\u56de\u7684\u662f\u6700\u540e\u7684\u4e00\u4e2a\u5143\u7d20 else : if self . stack1 : while self . stack1 : self . stack2 . append ( self . stack1 . pop ()) return self . stack2 [ - 1 ] else : return None def empty ( self ): \"\"\" Returns whether the queue is empty. :rtype: bool \"\"\" if ( self . stack1 or self . stack2 ): return False else : return True # Your MyQueue object will be instantiated and called as such: # obj = MyQueue() # obj.push(x) # param_2 = obj.pop() # param_3 = obj.peek() # param_4 = obj.empty() \u7528\u6808\u5b9e\u73b0\u961f\u5217\u771f\u7684\u6ca1\u4ec0\u4e48\u592a\u5927\u7684\u96be\u5ea6","title":"060-\u529b\u6263\u5237\u9898-232--\u7528\u6808\u5b9e\u73b0\u961f\u5217"},{"location":"\u529b\u6263\u5237\u9898/061-\u529b\u6263\u5237\u9898-23--\u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868/","text":"\u5408\u5e76 k \u4e2a\u6392\u5e8f\u94fe\u8868\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u6392\u5e8f\u94fe\u8868\u3002\u8bf7\u5206\u6790\u548c\u63cf\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u3002 \u793a\u4f8b: \u8f93\u5165: [ 1->4->5, 1->3->4, 2->6 ] \u8f93\u51fa: 1->1->2->3->4->4->5->6 # Definition for singly-linked list. # class ListNode(object): # def __init__(self, x): # self.val = x # self.next = None from heapq import heapify , heappop #\u4ece\u5806\u6a21\u5757\u5bfc\u5165\u5efa\u5806\u7684\u51fd\u6570heapify\u4ee5\u53ca\u5f39\u51fa\u6a21\u5757heappop class Solution ( object ): def mergeKLists ( self , lists ): \"\"\" :type lists: List[ListNode] :rtype: ListNode \"\"\" #\u8bfb\u53d6\u6240\u6709\u8282\u70b9\u7684\u503c # if lists is None: # return None #\u8fd9\u91cc\u4f1a\u51fa\u73b0[[]] \u4e0d\u901a\u8fc7 h = [] for node in lists : while node : h . append ( node . val ) node = node . next # \u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u5806 if not h : return None heapify ( h ) #\u8f6c\u6362\u6210\u6700\u5c0f\u5806 # \u6784\u9020\u94fe\u8868 root = ListNode ( heappop ( h )) #\u5f39\u51fa\u7b2c\u4e00\u4e2a\u6700\u5c0f\u503c\u4f5c\u4e3a\u5934\u8282\u70b9 curnode = root while h : nextnode = ListNode ( heappop ( h )) #\u5efa\u7acb\u65b0\u7684\u8282\u70b9 curnode . next = nextnode #\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 curnode = nextnode #\u6307\u9488\u540e\u79fb return root","title":"061-\u529b\u6263\u5237\u9898-23--\u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868"},{"location":"\u529b\u6263\u5237\u9898/062-\u529b\u6263\u5237\u9898-344--\u53cd\u8f6c\u5b57\u7b26\u4e32/","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 char[] \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f ASCII \u7801\u8868\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[\"h\",\"e\",\"l\",\"l\",\"o\"] \u8f93\u51fa\uff1a[\"o\",\"l\",\"l\",\"e\",\"h\"] \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"] \u8f93\u51fa\uff1a[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"] class Solution ( object ): def reverseString ( self , s ): \"\"\" :type s: List[str] :rtype: None Do not return anything, modify s in-place instead. \"\"\" start = 0 end = len ( s ) - 1 while start < end : s [ start ], s [ end ] = s [ end ], s [ start ] start += 1 end -= 1 \u5c31\u662f\u524d\u540e\u4e92\u6362 \u8001\u7b80\u5355\u4e86","title":"062-\u529b\u6263\u5237\u9898-344--\u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"\u529b\u6263\u5237\u9898/063-LRU\u7f13\u5b58\u7b97\u6cd5\u7684python\u5b9e\u73b0/","text":"# -*- coding: utf-8 -*- \"\"\" Created on Fri Aug 30 08:23:40 2019 @author: zangz \"\"\" from collections import OrderedDict #\u5bfc\u5165\u8fd9\u4e2a\u53ef\u4ee5\u5bf9\u952e\u6392\u5e8f\u7684\u5b57\u5178 class LRUCache : def __init__ ( self , capacity = 128 ): self . od = OrderedDict () self . capacity = capacity #\u8bbe\u7f6e\u4e00\u6b4c\u6700\u5927\u7684\u5bb9\u91cf def get ( self , key ): #\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u66f4\u65b0\u6700\u65b0\u4f7f\u7528\u7684 Key if key in self . od : val = self . od [ key ] #\u53d6\u51fa\u8fd9\u4e2a\u952e\u5bf9\u5e94\u7684\u503c self . od . move_to_end ( key ) #\u5c06\u8bbf\u95ee\u8fc7\u7684\u952e\u503c\u79fb\u52a8\u5230\u8fd9\u4e2a\u5b57\u5178\u7684\u6700\u540e\u9762 return val #\u8fd4\u56de\u8981\u7684\u503c else : return - 1 def put ( self , key , value ): #\u66f4\u65b0k/v if key in self . od : #\u5982\u679c\u8fd9\u4e2a\u952e\u5df2\u7ecf\u5b58\u5728\u4e86 del self . od [ key ] #\u5220\u9664 self . od [ key ] = value #\u66f4\u65b0key\u5230\u8868\u5934 else : #\u4e0d\u5728\u5b57\u5178\u4e2d\u5c31\u6267\u884c\u63d2\u5165 self . od [ key ] = value #\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c #\u5224\u65ad\u5f53\u524d\u7684\u5bb9\u91cf\u662f\u4e0d\u662f\u5df2\u7ecf\u6ee1\u4e86 if len ( self . od ) > self . capacity : self . od . popitem ( last = False ) #\u5982\u679c\u5df2\u7ecf\u6ee1\u4e86\u5c31\u629b\u5f03\u5b57\u5178\u7684\u6700\u540e\u4e00\u4e2a\u4e5f\u5c31\u662f\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684","title":"063-LRU\u7f13\u5b58\u7b97\u6cd5\u7684python\u5b9e\u73b0"},{"location":"\u529b\u6263\u5237\u9898/064-\u5237\u9898\u8fc7\u7a0b\u4e2d\u614e\u7528-[]-is-None/","text":"[] is None Out[19]: False not [] Out[20]: True not [[]] Out[21]: False [[]] is None Out[23]: False is None \u6bd4\u8f83\u5b9e\u7528\u5224\u65ad\u6811\u7684\u8282\u70b9\u5b58\u5728\u4e0d\u5b58\u5728,\u4f46\u662f\u5224\u65ad\u5217\u8868\u662f\u4e0d\u662f\u7a7a\u7edd\u5bf9\u4e0d\u80fd\u4f7f\u7528is None \u8981\u662f\u7528 not list while list \u7b49\u7b49\u7684\u6761\u4ef6","title":"064-\u5237\u9898\u8fc7\u7a0b\u4e2d\u614e\u7528-[]-is-None"},{"location":"\u529b\u6263\u5237\u9898/065-\u5b8c\u5168\u6570\u7684\u6c42\u89e3/","text":"\u624b\u6495\u4ee3\u7801\u5b8c\u5168\u6570\u7adf\u7136\u5199\u9519\u4e86 \u00b6 \u4f24\u5fc3\u6b32\u7edd \u4e66\u51991\u52301000\u7684\u5b8c\u5168\u6570 # \u5b8c\u5168\u6570 for aa in range ( 1 , 1001 ): #\u6c42\u4e00\u52301000\u7684\u5b8c\u5168\u6570 sum = 0 #\u8bbe\u7f6e\u4e00\u4e2a\u6c42\u548c\u53d8\u91cf for o in range ( 1 , aa ): #\u4ece1\u5f00\u59cb\u770bo\u662f\u4e0d\u662f\u56e0\u6570,\u76f4\u5230aa\u7684\u524d\u4e00\u4e2a\u6570\u5b57,\u81ea\u5df1\u672c\u8eab\u662f\u4e0d\u53ef\u4ee5\u7684 if aa % o == 0 : #\u5982\u679caa\u5bf9o\u6c42\u4f59\u662f\u7b49\u4e8e0\u7684\u90a3\u4e48\u5c31\u662f\u56e0\u6570 sum += o #\u8fdb\u884c\u7d2f\u52a0 if sum == aa : #\u6700\u540e\u5224\u65ad\u662f\u4e0d\u662f\u76f8\u7b49 print ( aa ) #\u76f8\u7b49\u5c31\u662f\u5b8c\u5168\u6570 \u6267\u884c\u7ed3\u679c: 6 28 496 \u5199\u6210\u51fd\u6570\u7684\u5f62\u5f0f \u00b6 # -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 29 19:39:34 2019 @author: zangz \"\"\" def gong_yin_shu ( n ): #\u6c42\u4e00\u4e2a\u6570\u6240\u6709\u7684\u516c\u56e0\u6570 alist = [] #\u8bb0\u5f55\u516c\u56e0\u6570 for o in range ( 1 , n ): if n % o == 0 : alist . append ( o ) return alist # \u5b8c\u5168\u6570 def wan_quan_shu ( n ): for aa in range ( 1 , n + 1 ): #\u6c42\u4e00\u52301000\u7684\u5b8c\u5168\u6570 sum1 = sum ( gong_yin_shu ( aa )) if sum1 == aa : #\u6700\u540e\u5224\u65ad\u662f\u4e0d\u662f\u76f8\u7b49 print ( aa ) #\u76f8\u7b49\u5c31\u662f\u5b8c\u5168\u6570","title":"065-\u5b8c\u5168\u6570\u7684\u6c42\u89e3"},{"location":"\u529b\u6263\u5237\u9898/065-\u5b8c\u5168\u6570\u7684\u6c42\u89e3/#_1","text":"\u4f24\u5fc3\u6b32\u7edd \u4e66\u51991\u52301000\u7684\u5b8c\u5168\u6570 # \u5b8c\u5168\u6570 for aa in range ( 1 , 1001 ): #\u6c42\u4e00\u52301000\u7684\u5b8c\u5168\u6570 sum = 0 #\u8bbe\u7f6e\u4e00\u4e2a\u6c42\u548c\u53d8\u91cf for o in range ( 1 , aa ): #\u4ece1\u5f00\u59cb\u770bo\u662f\u4e0d\u662f\u56e0\u6570,\u76f4\u5230aa\u7684\u524d\u4e00\u4e2a\u6570\u5b57,\u81ea\u5df1\u672c\u8eab\u662f\u4e0d\u53ef\u4ee5\u7684 if aa % o == 0 : #\u5982\u679caa\u5bf9o\u6c42\u4f59\u662f\u7b49\u4e8e0\u7684\u90a3\u4e48\u5c31\u662f\u56e0\u6570 sum += o #\u8fdb\u884c\u7d2f\u52a0 if sum == aa : #\u6700\u540e\u5224\u65ad\u662f\u4e0d\u662f\u76f8\u7b49 print ( aa ) #\u76f8\u7b49\u5c31\u662f\u5b8c\u5168\u6570 \u6267\u884c\u7ed3\u679c: 6 28 496","title":"\u624b\u6495\u4ee3\u7801\u5b8c\u5168\u6570\u7adf\u7136\u5199\u9519\u4e86"},{"location":"\u529b\u6263\u5237\u9898/065-\u5b8c\u5168\u6570\u7684\u6c42\u89e3/#_2","text":"# -*- coding: utf-8 -*- \"\"\" Created on Thu Aug 29 19:39:34 2019 @author: zangz \"\"\" def gong_yin_shu ( n ): #\u6c42\u4e00\u4e2a\u6570\u6240\u6709\u7684\u516c\u56e0\u6570 alist = [] #\u8bb0\u5f55\u516c\u56e0\u6570 for o in range ( 1 , n ): if n % o == 0 : alist . append ( o ) return alist # \u5b8c\u5168\u6570 def wan_quan_shu ( n ): for aa in range ( 1 , n + 1 ): #\u6c42\u4e00\u52301000\u7684\u5b8c\u5168\u6570 sum1 = sum ( gong_yin_shu ( aa )) if sum1 == aa : #\u6700\u540e\u5224\u65ad\u662f\u4e0d\u662f\u76f8\u7b49 print ( aa ) #\u76f8\u7b49\u5c31\u662f\u5b8c\u5168\u6570","title":"\u5199\u6210\u51fd\u6570\u7684\u5f62\u5f0f"},{"location":"\u529b\u6263\u5237\u9898/066-\u8d28\u56e0\u6570/","text":"\u6bcf\u4e2a\u5408\u6570\u90fd\u53ef\u4ee5\u5199\u6210\u51e0\u4e2a\u8d28\u6570\u76f8\u4e58\u7684\u5f62\u5f0f\uff0c\u8fd9\u51e0\u4e2a\u8d28\u6570\u90fd\u53eb\u505a\u8fd9\u4e2a\u5408\u6570\u7684\u8d28\u56e0\u6570\u3002\u5982\u679c\u4e00\u4e2a\u8d28\u6570\u662f\u67d0\u4e2a\u6570\u7684\u7ea6\u6570\uff0c\u90a3\u4e48\u5c31\u8bf4\u8fd9\u4e2a\u8d28\u6570\u662f\u8fd9\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u3002 \u5c31\u662f\u4e00\u4e2a\u6570\u7684\u7ea6\u6570\uff0c\u5e76\u4e14\u662f\u8d28\u6570\uff0c\u6bd4\u59828=2\u4e582\u4e582\uff0c2\u5c31\u662f8\u7684\u8d28\u56e0\u6570\u300212\uff1d2\u00d72\u00d73\uff0c2\u548c3\u5c31\u662f12\u7684\u8d28\u56e0\u6570\u3002\u628a\u4e00\u4e2a\u5f0f\u5b50\u4ee512\uff1d2\u00d72\u00d73\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u53eb\u505a\u5206\u89e3\u8d28\u56e0\u6570\u300216=2\u00d72\u00d72\u00d72,2\u5c31\u662f16\u7684\u8d28\u56e0\u6570\uff0c\u628a\u4e00\u4e2a\u5408\u6570\u5199\u6210\u51e0\u4e2a\u8d28\u6570\u76f8\u4e58\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u53eb\u505a\u5206\u89e3\u8d28\u56e0\u6570\u3002 \u5206\u89e3\u8d28\u56e0\u6570\u7684\u65b9\u6cd5\u662f\u5148\u7528\u4e00\u4e2a\u5408\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u53bb\u9664\u8fd9\u4e2a\u5408\u6570\uff0c\u5f97\u51fa\u7684\u6570\u82e5\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u5c31\u5199\u6210\u8fd9\u4e2a\u5408\u6570\u76f8\u4e58\u5f62\u5f0f\uff1b\u82e5\u662f\u4e00\u4e2a\u5408\u6570\u5c31\u7ee7\u7eed\u6309\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u76f4\u81f3\u6700\u540e\u662f\u4e00\u4e2a\u8d28\u6570 \u3002 \u5206\u89e3\u8d28\u56e0\u6570\u7684\u6709\u4e24\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u9664\u4e86\u5927\u5bb6\u6700\u5e38\u7528\u77e5\u9053\u7684\u201c\u77ed\u9664\u5206\u89e3\u5f62\u5f0f\u201d\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u201c\u5854\u5f62\u5206\u89e3\u5f62\u5f0f\u201d\u3002 \u5206\u89e3\u8d28\u56e0\u6570\u5bf9\u89e3\u51b3\u4e00\u4e9b\u81ea\u7136\u6570\u548c\u4e58\u79ef\u7684\u95ee\u9898\u6709\u5f88\u5927\u7684\u5e2e\u52a9\uff0c\u540c\u65f6\u53c8\u4e3a\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u505a\u4e86\u91cd\u8981\u7684\u94fa\u57ab\u3002 # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" # \u5c06\u4e00\u4e2a\u6b63\u6574\u6570\u5206\u89e3\u8d28\u56e0\u6570\u3002\u4f8b\u5982\uff1a\u8f93\u516590,\u6253\u5370\u51fa90=2*3*3*5\u3002\u5176\u5b9e\u5c31\u662f\u6c42\u6700\u5c0f\u7684\u80fd\u5206\u89e3\u7684\u56e0\u6570 n = int ( input ( '\u8bf7\u8f93\u5165\u9700\u8981\u5206\u89e3\u7684\u6b63\u6570:' )) # \u521b\u5efa\u4e00\u4e2a\u5217\u8868\u7528\u6765\u5b58\u653e\u904d\u5386\u51fa\u6765\u7684\u56e0\u6570 lt = [] # \u7ed9n\u6362\u4e2a\u540d\u5b57\u8bb0\u5f55,\u4fbf\u4e8e\u6253\u5370\u65f6\u6253\u5370\u51fa\u7528\u6237\u8f93\u5165\u7684n m = n while n > 1 : for i in range ( 2 , n + 1 ): if n % i == 0 : # \u8bb0\u5f55\u4e0b\u7528\u6700\u5c0f\u56e0\u6570\u5206\u89e3\u540e\u7684n ,\u56e0\u4e3a\u662f\u4ece2\u5f00\u59cb\u7684\u56e0\u6b64\u90fd\u662f\u5148\u5bfb\u627e\u7684\u6700\u5c0f\u7684,\u7528\u7684\u5c31\u662f\u77ed\u9664\u6cd5 n = n // i #\u56e0\u4e3an\u5bf9i\u80fd\u591f\u6c42\u4f59\u7b49\u4e8e0\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u6574\u9664 # \u628ai\u8f6c\u6362\u6210str,\u5b58\u5230\u5217\u8868,\u4fbf\u4e8e\u540e\u9762\u7528join\u62fc\u63a5\u5b57\u7b26\u4e32\u5217\u8868, lt . append ( str ( i )) # \u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u56e0\u6570\u65f6,\u5c31\u8df3\u51fafor in\u5faa\u73af,\u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af,\u6bcf\u6b21\u5faa\u73af\u90fd\u662f\u5bf9\u5f53\u524d\u6570\u7684\u4e58\u6cd5\u7684\u5206\u89e3 break if len ( lt ) == 1 : print ( m , '=' , '1 \u00d7' , m ) else : s = '\u00d7' . join ( lt ) print ( m , '=' , s ) \u8fde\u8d28\u56e0\u6570\u6211\u90fd\u4e0d\u4f1a\u6c42,\u611f\u89c9\u53d7\u5230\u4e86\u91cd\u5927\u7684\u6253\u51fb,\u5509.","title":"066-\u8d28\u56e0\u6570"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/","text":"sklearn\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u4e00\u4e2a\u5e38\u7528\u7684python\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u5bf9\u5e38\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8fdb\u884c\u4e86\u5c01\u88c5 \u5176\u4e2d\u5305\u62ec\uff1a 1.\u5206\u7c7b\uff08Classification\uff09 2.\u56de\u5f52\uff08Regression\uff09 3.\u805a\u7c7b\uff08Clustering\uff09 4.\u6570\u636e\u964d\u7ef4\uff08Dimensionality reduction\uff09 5.\u5e38\u7528\u6a21\u578b\uff08Model selection\uff09 6.\u6570\u636e\u9884\u5904\u7406\uff08Preprocessing\uff09 \u672c\u6587\u5c06\u4ecesklearn\u7684\u5b89\u88c5\u5f00\u59cb\u8bb2\u89e3\uff0c\u7531\u6d45\u5165\u6df1\uff0c\u9010\u6b65\u4e0a\u624bsklearn\u3002 sklearn\u5b98\u7f51\uff1a http://scikit-learn.org/stable/index.html sklearn API\uff1a http://scikit-learn.org/stable/modules/classes.html#module-sklearn.preprocessing skleran\u5b89\u88c5 \u00b6 sklearn\u7684\u76ee\u524d\u7248\u672c\u662f0.19.1 \u4f9d\u8d56\u5305\uff1a Python (>=2.6\u6216>=3.3) NumPy(>=1.6.1) SciPy(>=0.9) \u4f7f\u7528pip\u5b89\u88c5\uff0cterminal\u76f4\u63a5\u6267\u884c\u5373\u53ef pip install -U scikit-learn \u4f7f\u7528Anaconda\u5b89\u88c5\uff0c\u63a8\u8350Anaconda\uff0c\u56e0\u4e3a\u91cc\u9762\u5df2\u7ecf\u5185\u7f6e\u4e86NumPy\uff0cSciPy\u7b49\u5e38\u7528\u5de5\u5177 conda install scikit-learn \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u5728python\u4e2d\u68c0\u67e5\u4e00\u4e0b\u7248\u672c\uff0cimport sklearn\u4e0d\u62a5\u9519\uff0c\u5219\u8868\u793a\u5b89\u88c5\u6210\u529f >>import sklearn >>sklearn.__version__ '0.19.1' \u83b7\u53d6\u6570\u636e \u00b6 \u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u6570\u636e\uff0c\u5728skleran\u4e2d\u83b7\u53d6\u6570\u636e\u901a\u5e38\u91c7\u7528\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u4f7f\u7528\u81ea\u5e26\u7684\u6570\u636e\u96c6\uff0c\u53e6\u4e00\u79cd\u662f\u521b\u5efa\u6570\u636e\u96c6 \u5bfc\u5165\u6570\u636e\u96c6 \u00b6 sklearn\u81ea\u5e26\u4e86\u5f88\u591a\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u7528\u6765\u5bf9\u7b97\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u5206\u6790\uff0c\u514d\u53bb\u4e86\u81ea\u5df1\u518d\u53bb\u627e\u6570\u636e\u96c6\u7684\u70e6\u607c \u5176\u4e2d\u5305\u62ec\uff1a \u9e22\u5c3e\u82b1\u6570\u636e\u96c6:load_iris() \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6:load_digitals() \u7cd6\u5c3f\u75c5\u6570\u636e\u96c6:load_diabetes() \u4e73\u817a\u764c\u6570\u636e\u96c6:load_breast_cancer() \u6ce2\u58eb\u987f\u623f\u4ef7\u6570\u636e\u96c6:load_boston() \u4f53\u80fd\u8bad\u7ec3\u6570\u636e\u96c6:load_linnerud() \u8fd9\u91cc\u4ee5\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e3a\u4f8b\u5bfc\u5165\u6570\u636e\u96c6 #\u5bfc\u5165sklearn\u7684\u6570\u636e\u96c6 import sklearn.datasets as sk_datasets iris = sk_datasets.load_iris() iris_X = iris.data #\u5bfc\u5165\u6570\u636e iris_y = iris.target #\u5bfc\u5165\u6807\u7b7e \u521b\u5efa\u6570\u636e\u96c6 \u00b6 \u4f7f\u7528skleran\u7684\u6837\u672c\u751f\u6210\u5668(samples generator)\u53ef\u4ee5\u521b\u5efa\u6570\u636e\uff0csklearn.datasets.samples_generator\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u521b\u5efa\u6837\u672c\u6570\u636e\u7684\u65b9\u6cd5\u3002 \u8fd9\u91cc\u4ee5\u5206\u7c7b\u95ee\u9898\u521b\u5efa\u6837\u672c\u6570\u636e import sklearn.datasets.samples_generator as sk_sample_generator X,y=sk_sample_generator.make_classification(n_samples=6,n_features=5,n_informative=2,n_redundant=3,n_classes=2,n_clusters_per_class=2,scale=1,random_state=20) for x_,y_ in zip(X,y): print(y_,end=\": \") print(x_) \u53c2\u6570\u8bf4\u660e\uff1a n_features :\u7279\u5f81\u4e2a\u6570= n_informative\uff08\uff09 + n_redundant + n_repeated n_informative\uff1a\u591a\u4fe1\u606f\u7279\u5f81\u7684\u4e2a\u6570 n_redundant\uff1a\u5197\u4f59\u4fe1\u606f\uff0cinformative\u7279\u5f81\u7684\u968f\u673a\u7ebf\u6027\u7ec4\u5408 n_repeated \uff1a\u91cd\u590d\u4fe1\u606f\uff0c\u968f\u673a\u63d0\u53d6n_informative\u548cn_redundant \u7279\u5f81 n_classes\uff1a\u5206\u7c7b\u7c7b\u522b n_clusters_per_class \uff1a\u67d0\u4e00\u4e2a\u7c7b\u522b\u662f\u7531\u51e0\u4e2acluster\u6784\u6210\u7684 random_state\uff1a\u968f\u673a\u79cd\u5b50\uff0c\u4f7f\u5f97\u5b9e\u9a8c\u53ef\u91cd\u590d n_classes*n_clusters_per_class \u8981\u5c0f\u4e8e\u6216\u7b49\u4e8e 2^n_informative \u6253\u5370\u7ed3\u679c\uff1a 0: [ 0.64459602 0.92767918 -1.32091378 -1.25725859 -0.74386837] 0: [ 1.66098845 2.22206181 -2.86249859 -3.28323172 -1.62389676] 0: [ 0.27019475 -0.12572907 1.1003977 -0.6600737 0.58334745] 1: [-0.77182836 -1.03692724 1.34422289 1.52452016 0.76221055] 1: [-0.1407289 0.32675611 -1.41296696 0.4113583 -0.75833145] 1: [-0.76656634 -0.35589955 -0.83132182 1.68841011 -0.4153836 ] \u6570\u636e\u96c6\u7684\u5212\u5206 \u00b6 \u673a\u5668\u5b66\u4e60\u7684\u8fc7\u7a0b\u6b63\u5f80\u5f80\u9700\u8981\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u5212\u5206\uff0c\u5e38\u5206\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6d4b\u8bd5\u96c6\u3002sklearn\u4e2d\u7684model_selection\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5212\u5206\u6570\u636e\u96c6\u7684\u65b9\u6cd5\u3002 \u4ee5\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e3a\u4f8b\u8fdb\u884c\u5212\u5206 import sklearn.model_selection as sk_model_selection X_train,X_test,y_train,y_test = sk_model_selection.train_test_split(iris_X,iris_y,train_size=0.3,random_state=20) \u53c2\u6570\u8bf4\u660e\uff1a arrays\uff1a\u6837\u672c\u6570\u7ec4\uff0c\u5305\u542b\u7279\u5f81\u5411\u91cf\u548c\u6807\u7b7e test_size\uff1a \u3000\u3000float-\u83b7\u5f97\u591a\u5927\u6bd4\u91cd\u7684\u6d4b\u8bd5\u6837\u672c \uff08\u9ed8\u8ba4\uff1a0.25\uff09 \u3000\u3000int - \u83b7\u5f97\u591a\u5c11\u4e2a\u6d4b\u8bd5\u6837\u672c train_size: \u540ctest_size random_state:int - \u968f\u673a\u79cd\u5b50\uff08\u79cd\u5b50\u56fa\u5b9a\uff0c\u5b9e\u9a8c\u53ef\u590d\u73b0\uff09 shuffle - \u662f\u5426\u5728\u5206\u5272\u4e4b\u524d\u5bf9\u6570\u636e\u8fdb\u884c\u6d17\u724c\uff08\u9ed8\u8ba4True\uff09 \u540e\u9762\u6211\u4eec\u8bad\u7ec3\u6a21\u578b\u4f7f\u7528\u7684\u6570\u636e\u96c6\u90fd\u57fa\u4e8e\u6b64 \u6570\u636e\u9884\u5904\u7406 \u00b6 \u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u6570\u636e\u9884\u5904\u7406\uff1f \u901a\u5e38\uff0c\u771f\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u6570\u636e\u4e2d\u5f80\u5f80\u5b58\u5728\u5f88\u591a\u7684\u65e0\u7528\u4fe1\u606f\uff0c\u751a\u81f3\u5b58\u5728\u9519\u8bef\u4fe1\u606f\uff0c\u800c\u673a\u5668\u5b66\u4e60\u4e2d\u6709\u4e00\u53e5\u8bdd\u53eb\u505a\"Garbage in\uff0cGarbage out\"\uff0c\u6570\u636e\u7684\u5065\u5eb7\u7a0b\u5ea6\u5bf9\u4e8e\u7b97\u6cd5\u7ed3\u679c\u7684\u5f71\u54cd\u6781\u5927\u3002\u6570\u636e\u9884\u5904\u7406\u5c31\u662f\u8ba9\u90a3\u4e9b\u5197\u4f59\u6df7\u4e71\u7684\u6e90\u6570\u636e\u53d8\u5f97\u80fd\u6ee1\u8db3\u5176\u5e94\u7528\u8981\u6c42\u3002 \u5f53\u7136\uff0c\u4ec5\u4ec5\u662f\u6570\u636e\u9884\u5904\u7406\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5199\u597d\u51e0\u5343\u5b57\u7684\u6587\u7ae0\u4e86\uff0c\u5728\u8fd9\u91cc\u53ea\u8c08\u53ca\u51e0\u4e2a\u57fa\u7840\u7684\u6570\u636e\u9884\u5904\u7406\u7684\u65b9\u6cd5\u3002 skleran\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u9884\u5904\u7406\u7684package\uff1apreprocessing\uff0c\u6211\u4eec\u76f4\u63a5\u5bfc\u5165\u5373\u53ef import sklearn.preprocessing as sk_preprocessing \u4e0b\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4f7f\u7528:[[1, -1, 2], [0, 2, -1], [0, 1, -2]]\u505a\u4e3a\u521d\u59cb\u6570\u636e\u3002 \u6570\u636e\u7684\u5f52\u4e00\u5316 \u00b6 \u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316 scaler = sk_preprocessing.StandardScaler().fit(X) new_X = scaler.transform(X) print('\u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316:',new_X) \u6253\u5370\u7ed3\u679c: \u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316: [[ 1.41421356 -1.33630621 1.37281295] [-0.70710678 1.06904497 -0.39223227] [-0.70710678 0.26726124 -0.98058068]] \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 feature_range\u4e3a\u6570\u636e\u89c4\u8303\u5316\u7684\u8303\u56f4 scaler = sk_preprocessing.MinMaxScaler(feature_range=(0,1)).fit(X) new_X=scaler.transform(X) print('\u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185',new_X) \u6253\u5370\u7ed3\u679c: \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 [[1. 0. 1. ] [ 0. 1. 0.25 ] [ 0. 0.66666667 0. ]] \u6570\u636e\u7684\u6b63\u5219\u5316 \u00b6 \u9996\u5148\u6c42\u51fa\u6837\u672c\u7684p-\u8303\u6570\uff0c\u7136\u540e\u8be5\u6837\u672c\u7684\u6240\u6709\u5143\u7d20\u90fd\u8981\u9664\u4ee5\u8be5\u8303\u6570\uff0c\u8fd9\u6837\u6700\u7ec8\u4f7f\u5f97\u6bcf\u4e2a\u6837\u672c\u7684\u8303\u6570\u90fd\u4e3a1 new_X = sk_preprocessing.normalize(X,norm='l2') print('\u6c42\u4e8c\u8303\u6570',new_X) \u6253\u5370\u7ed3\u679c\uff1a \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 [[0.40824829 -0.40824829 0.81649658] [ 0. 0.89442719 -0.4472136 ] [ 0. 0.4472136 -0.89442719]] \u5c0f\u7ed3 \u00b6 \u672c\u6587\u4ecb\u7ecd\u4e86sklearn\u7684\u5b89\u88c5\uff0csklearn\u5bfc\u5165\u6570\u636e\u96c6\uff0c\u521b\u5efa\u6570\u636e\u96c6\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u5bf9\u6570\u636e\u9884\u5904\u7406\u7684\u5e38\u7528\u65b9\u6cd5\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002 \u8f6c\u8f7d\u81ea: https://www.jianshu.com/p/a9168803edc6","title":"001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#skleran","text":"sklearn\u7684\u76ee\u524d\u7248\u672c\u662f0.19.1 \u4f9d\u8d56\u5305\uff1a Python (>=2.6\u6216>=3.3) NumPy(>=1.6.1) SciPy(>=0.9) \u4f7f\u7528pip\u5b89\u88c5\uff0cterminal\u76f4\u63a5\u6267\u884c\u5373\u53ef pip install -U scikit-learn \u4f7f\u7528Anaconda\u5b89\u88c5\uff0c\u63a8\u8350Anaconda\uff0c\u56e0\u4e3a\u91cc\u9762\u5df2\u7ecf\u5185\u7f6e\u4e86NumPy\uff0cSciPy\u7b49\u5e38\u7528\u5de5\u5177 conda install scikit-learn \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u5728python\u4e2d\u68c0\u67e5\u4e00\u4e0b\u7248\u672c\uff0cimport sklearn\u4e0d\u62a5\u9519\uff0c\u5219\u8868\u793a\u5b89\u88c5\u6210\u529f >>import sklearn >>sklearn.__version__ '0.19.1'","title":"skleran\u5b89\u88c5"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_1","text":"\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u6570\u636e\uff0c\u5728skleran\u4e2d\u83b7\u53d6\u6570\u636e\u901a\u5e38\u91c7\u7528\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u4f7f\u7528\u81ea\u5e26\u7684\u6570\u636e\u96c6\uff0c\u53e6\u4e00\u79cd\u662f\u521b\u5efa\u6570\u636e\u96c6","title":"\u83b7\u53d6\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_2","text":"sklearn\u81ea\u5e26\u4e86\u5f88\u591a\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u7528\u6765\u5bf9\u7b97\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u5206\u6790\uff0c\u514d\u53bb\u4e86\u81ea\u5df1\u518d\u53bb\u627e\u6570\u636e\u96c6\u7684\u70e6\u607c \u5176\u4e2d\u5305\u62ec\uff1a \u9e22\u5c3e\u82b1\u6570\u636e\u96c6:load_iris() \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6:load_digitals() \u7cd6\u5c3f\u75c5\u6570\u636e\u96c6:load_diabetes() \u4e73\u817a\u764c\u6570\u636e\u96c6:load_breast_cancer() \u6ce2\u58eb\u987f\u623f\u4ef7\u6570\u636e\u96c6:load_boston() \u4f53\u80fd\u8bad\u7ec3\u6570\u636e\u96c6:load_linnerud() \u8fd9\u91cc\u4ee5\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e3a\u4f8b\u5bfc\u5165\u6570\u636e\u96c6 #\u5bfc\u5165sklearn\u7684\u6570\u636e\u96c6 import sklearn.datasets as sk_datasets iris = sk_datasets.load_iris() iris_X = iris.data #\u5bfc\u5165\u6570\u636e iris_y = iris.target #\u5bfc\u5165\u6807\u7b7e","title":"\u5bfc\u5165\u6570\u636e\u96c6"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_3","text":"\u4f7f\u7528skleran\u7684\u6837\u672c\u751f\u6210\u5668(samples generator)\u53ef\u4ee5\u521b\u5efa\u6570\u636e\uff0csklearn.datasets.samples_generator\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u521b\u5efa\u6837\u672c\u6570\u636e\u7684\u65b9\u6cd5\u3002 \u8fd9\u91cc\u4ee5\u5206\u7c7b\u95ee\u9898\u521b\u5efa\u6837\u672c\u6570\u636e import sklearn.datasets.samples_generator as sk_sample_generator X,y=sk_sample_generator.make_classification(n_samples=6,n_features=5,n_informative=2,n_redundant=3,n_classes=2,n_clusters_per_class=2,scale=1,random_state=20) for x_,y_ in zip(X,y): print(y_,end=\": \") print(x_) \u53c2\u6570\u8bf4\u660e\uff1a n_features :\u7279\u5f81\u4e2a\u6570= n_informative\uff08\uff09 + n_redundant + n_repeated n_informative\uff1a\u591a\u4fe1\u606f\u7279\u5f81\u7684\u4e2a\u6570 n_redundant\uff1a\u5197\u4f59\u4fe1\u606f\uff0cinformative\u7279\u5f81\u7684\u968f\u673a\u7ebf\u6027\u7ec4\u5408 n_repeated \uff1a\u91cd\u590d\u4fe1\u606f\uff0c\u968f\u673a\u63d0\u53d6n_informative\u548cn_redundant \u7279\u5f81 n_classes\uff1a\u5206\u7c7b\u7c7b\u522b n_clusters_per_class \uff1a\u67d0\u4e00\u4e2a\u7c7b\u522b\u662f\u7531\u51e0\u4e2acluster\u6784\u6210\u7684 random_state\uff1a\u968f\u673a\u79cd\u5b50\uff0c\u4f7f\u5f97\u5b9e\u9a8c\u53ef\u91cd\u590d n_classes*n_clusters_per_class \u8981\u5c0f\u4e8e\u6216\u7b49\u4e8e 2^n_informative \u6253\u5370\u7ed3\u679c\uff1a 0: [ 0.64459602 0.92767918 -1.32091378 -1.25725859 -0.74386837] 0: [ 1.66098845 2.22206181 -2.86249859 -3.28323172 -1.62389676] 0: [ 0.27019475 -0.12572907 1.1003977 -0.6600737 0.58334745] 1: [-0.77182836 -1.03692724 1.34422289 1.52452016 0.76221055] 1: [-0.1407289 0.32675611 -1.41296696 0.4113583 -0.75833145] 1: [-0.76656634 -0.35589955 -0.83132182 1.68841011 -0.4153836 ]","title":"\u521b\u5efa\u6570\u636e\u96c6"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_4","text":"\u673a\u5668\u5b66\u4e60\u7684\u8fc7\u7a0b\u6b63\u5f80\u5f80\u9700\u8981\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u5212\u5206\uff0c\u5e38\u5206\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6d4b\u8bd5\u96c6\u3002sklearn\u4e2d\u7684model_selection\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5212\u5206\u6570\u636e\u96c6\u7684\u65b9\u6cd5\u3002 \u4ee5\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e3a\u4f8b\u8fdb\u884c\u5212\u5206 import sklearn.model_selection as sk_model_selection X_train,X_test,y_train,y_test = sk_model_selection.train_test_split(iris_X,iris_y,train_size=0.3,random_state=20) \u53c2\u6570\u8bf4\u660e\uff1a arrays\uff1a\u6837\u672c\u6570\u7ec4\uff0c\u5305\u542b\u7279\u5f81\u5411\u91cf\u548c\u6807\u7b7e test_size\uff1a \u3000\u3000float-\u83b7\u5f97\u591a\u5927\u6bd4\u91cd\u7684\u6d4b\u8bd5\u6837\u672c \uff08\u9ed8\u8ba4\uff1a0.25\uff09 \u3000\u3000int - \u83b7\u5f97\u591a\u5c11\u4e2a\u6d4b\u8bd5\u6837\u672c train_size: \u540ctest_size random_state:int - \u968f\u673a\u79cd\u5b50\uff08\u79cd\u5b50\u56fa\u5b9a\uff0c\u5b9e\u9a8c\u53ef\u590d\u73b0\uff09 shuffle - \u662f\u5426\u5728\u5206\u5272\u4e4b\u524d\u5bf9\u6570\u636e\u8fdb\u884c\u6d17\u724c\uff08\u9ed8\u8ba4True\uff09 \u540e\u9762\u6211\u4eec\u8bad\u7ec3\u6a21\u578b\u4f7f\u7528\u7684\u6570\u636e\u96c6\u90fd\u57fa\u4e8e\u6b64","title":"\u6570\u636e\u96c6\u7684\u5212\u5206"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_5","text":"\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u6570\u636e\u9884\u5904\u7406\uff1f \u901a\u5e38\uff0c\u771f\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u6570\u636e\u4e2d\u5f80\u5f80\u5b58\u5728\u5f88\u591a\u7684\u65e0\u7528\u4fe1\u606f\uff0c\u751a\u81f3\u5b58\u5728\u9519\u8bef\u4fe1\u606f\uff0c\u800c\u673a\u5668\u5b66\u4e60\u4e2d\u6709\u4e00\u53e5\u8bdd\u53eb\u505a\"Garbage in\uff0cGarbage out\"\uff0c\u6570\u636e\u7684\u5065\u5eb7\u7a0b\u5ea6\u5bf9\u4e8e\u7b97\u6cd5\u7ed3\u679c\u7684\u5f71\u54cd\u6781\u5927\u3002\u6570\u636e\u9884\u5904\u7406\u5c31\u662f\u8ba9\u90a3\u4e9b\u5197\u4f59\u6df7\u4e71\u7684\u6e90\u6570\u636e\u53d8\u5f97\u80fd\u6ee1\u8db3\u5176\u5e94\u7528\u8981\u6c42\u3002 \u5f53\u7136\uff0c\u4ec5\u4ec5\u662f\u6570\u636e\u9884\u5904\u7406\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5199\u597d\u51e0\u5343\u5b57\u7684\u6587\u7ae0\u4e86\uff0c\u5728\u8fd9\u91cc\u53ea\u8c08\u53ca\u51e0\u4e2a\u57fa\u7840\u7684\u6570\u636e\u9884\u5904\u7406\u7684\u65b9\u6cd5\u3002 skleran\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u9884\u5904\u7406\u7684package\uff1apreprocessing\uff0c\u6211\u4eec\u76f4\u63a5\u5bfc\u5165\u5373\u53ef import sklearn.preprocessing as sk_preprocessing \u4e0b\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4f7f\u7528:[[1, -1, 2], [0, 2, -1], [0, 1, -2]]\u505a\u4e3a\u521d\u59cb\u6570\u636e\u3002","title":"\u6570\u636e\u9884\u5904\u7406"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_6","text":"\u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316 scaler = sk_preprocessing.StandardScaler().fit(X) new_X = scaler.transform(X) print('\u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316:',new_X) \u6253\u5370\u7ed3\u679c: \u57fa\u4e8emean\u548cstd\u7684\u6807\u51c6\u5316: [[ 1.41421356 -1.33630621 1.37281295] [-0.70710678 1.06904497 -0.39223227] [-0.70710678 0.26726124 -0.98058068]] \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 feature_range\u4e3a\u6570\u636e\u89c4\u8303\u5316\u7684\u8303\u56f4 scaler = sk_preprocessing.MinMaxScaler(feature_range=(0,1)).fit(X) new_X=scaler.transform(X) print('\u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185',new_X) \u6253\u5370\u7ed3\u679c: \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 [[1. 0. 1. ] [ 0. 1. 0.25 ] [ 0. 0.66666667 0. ]]","title":"\u6570\u636e\u7684\u5f52\u4e00\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_7","text":"\u9996\u5148\u6c42\u51fa\u6837\u672c\u7684p-\u8303\u6570\uff0c\u7136\u540e\u8be5\u6837\u672c\u7684\u6240\u6709\u5143\u7d20\u90fd\u8981\u9664\u4ee5\u8be5\u8303\u6570\uff0c\u8fd9\u6837\u6700\u7ec8\u4f7f\u5f97\u6bcf\u4e2a\u6837\u672c\u7684\u8303\u6570\u90fd\u4e3a1 new_X = sk_preprocessing.normalize(X,norm='l2') print('\u6c42\u4e8c\u8303\u6570',new_X) \u6253\u5370\u7ed3\u679c\uff1a \u89c4\u8303\u5316\u5230\u4e00\u5b9a\u533a\u95f4\u5185 [[0.40824829 -0.40824829 0.81649658] [ 0. 0.89442719 -0.4472136 ] [ 0. 0.4472136 -0.89442719]]","title":"\u6570\u636e\u7684\u6b63\u5219\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/001-sklearn-\u5b89\u88c5\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u9884\u5904\u7406/#_8","text":"\u672c\u6587\u4ecb\u7ecd\u4e86sklearn\u7684\u5b89\u88c5\uff0csklearn\u5bfc\u5165\u6570\u636e\u96c6\uff0c\u521b\u5efa\u6570\u636e\u96c6\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u5bf9\u6570\u636e\u9884\u5904\u7406\u7684\u5e38\u7528\u65b9\u6cd5\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002 \u8f6c\u8f7d\u81ea: https://www.jianshu.com/p/a9168803edc6","title":"\u5c0f\u7ed3"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/","text":"\u9884\u5904\u7406\u6570 \u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09 \u00b6 \u5f53\u6211\u4eec\u62ff\u5230\u4e00\u6279\u539f\u59cb\u7684\u6570\u636e \u9996\u5148\u8981\u660e\u786e\u6709\u591a\u5c11\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u7c7b\u522b\u7684\u3002 \u68c0\u67e5\u6709\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5bf9\u786e\u5b9e\u7684\u7279\u5f81\u9009\u62e9\u6070\u5f53\u65b9\u5f0f\u8fdb\u884c\u5f25\u8865\uff0c\u4f7f\u6570\u636e\u5b8c\u6574\u3002 \u5bf9\u8fde\u7eed\u7684\u6570\u503c\u578b\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002 \u5bf9\u7c7b\u522b\u578b\u7684\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u5c06\u9700\u8981\u8f6c\u6362\u6210\u7c7b\u522b\u578b\u6570\u636e\u7684\u8fde\u7eed\u578b\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\u3002 \u4e3a\u9632\u6b62\u8fc7\u62df\u5408\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u9009\u62e9\u662f\u5426\u8981\u5c06\u6570\u636e\u8fdb\u884c\u6b63\u5219\u5316\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u63a2\u4e4b\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u4f73\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u9879\u5f0f\u65b9\u6cd5\uff0c\u5bfb\u627e\u975e\u7ebf\u6027\u7684\u5173\u7cfb\u3002 \u6839\u636e\u5b9e\u9645\u95ee\u9898\u5206\u6790\u662f\u5426\u9700\u8981\u5bf9\u7279\u5f81\u8fdb\u884c\u76f8\u5e94\u7684\u51fd\u6570\u8f6c\u6362\u3002 1. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 \u00b6 Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd # \u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09from sklearn import preprocessingimport numpy as np # 1\\. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 # Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. # \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 # \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 # \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\u3002 x = np . array ([[ 1. , - 1. , 2. ], [ 2. , 0. , 0. ], [ 0. , 1. , - 1. ]]) # \u5c06\u6bcf\u4e00\u5217\u7279\u5f81\u6807\u51c6\u5316\u4e3a\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u6ce8\u610f\uff0c\u6807\u51c6\u5316\u662f\u9488\u5bf9\u6bcf\u4e00\u5217\u800c\u8a00\u7684 x_scale = preprocessing . scale ( x ) x_scale x_scale . shape # \u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5df2\u7ecf\u53d8\u62100,1\u4e86 # axis=0 \u8868\u793a\u5bf9\u6bcf\u4e00\u5217 x_scale.mean(axis=0) # axis=1\u8868\u793a\u5bf9\u6bcf\u4e00\u884c\u53bb\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0caxis=0\u8868\u793a\u5bf9\u6bcf\u4e00\u5217\u505a\u76f8\u540c\u7684\u8fd9\u4e2a\u64cd\u4f5c x_scale.mean(axis=1) # \u540c\u7406\uff0c\u770b\u4e00\u4e0b\u6807\u51c6\u5dee x_scale.std(axis=0) preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 # \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # \u8c03\u7528fit\u65b9\u6cd5\uff0c\u6839\u636e\u5df2\u6709\u7684\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u8f6c\u6362\u5668# \u53e6\u5916\uff0cStandardScaler()\u4e2d\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1awith_mean,with_std.\u8fd9\u4e24\u4e2a\u90fd\u662f\u5e03\u5c14\u578b\u7684\u53c2\u6570\uff0c # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u662ftrue,\u4f46\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6210false.\u5373\u4e0d\u8981\u5747\u503c\u4e2d\u5fc3\u5316\u6216\u8005\u4e0d\u8981\u65b9\u5dee\u89c4\u6a21\u5316\u4e3a1. scaler = preprocessing . StandardScaler () . fit ( x ) scaler # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5scaler.transform(x)######################################### \u597d\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u53c8\u6765\u4e86\u4e00\u7ec4\u65b0\u7684\u6837\u672c\uff0c\u4e5f\u60f3\u5f97\u5230\u76f8\u540c\u7684\u8f6c\u6362new_x = [[-1., 1., 0.]]scaler.transform(new_x)################################## # MinMaxScaler# \u5728MinMaxScaler\u4e2d\u662f\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u660e\u786e\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a # X_std = (X - X.min(axis=0)) / (X.max(axis=0) - X.min(axis=0))# X_scaled = X_std / (max - min) + min # \u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06\u6570\u636e\u89c4\u4e0e[0,1]\u4e4b\u95f4\uff0c\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u6700\u5c0f\u503c\u53d8\u6210\u4e860\uff0c\u6700\u5927\u503c\u53d8\u6210\u4e861\uff0c\u8bf7\u770b\uff1a min_max_scaler = preprocessing . MinMaxScaler () x_minmax = min_max_scaler . fit_transform ( x ) x_minmax ################################################################################# \u540c\u6837\u7684\uff0c\u5982\u679c\u6709\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u6765\uff0c\u4e5f\u60f3\u505a\u540c\u6837\u7684\u8f6c\u6362\u548b\u529e\u5462\uff1f\u8bf7\u770b\uff1a x_test = np . array ([[ - 3. , - 1. , 4. ]]) x_test_minmax = min_max_scaler . transform ( x_test ) x_test_minmax ################################################################################ MaxAbsScaler \u539f\u7406\u4e0e\u4e0a\u9762\u7684\u5f88\u50cf\uff0c\u53ea\u662f\u6570\u636e\u4f1a\u88ab\u89c4\u6a21\u5316\u5230[-1,1]\u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u7279\u5f81\u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u9664\u4ee5\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u90a3\u4e9b\u5df2\u7ecf\u4e2d\u5fc3\u5316\u5747\u503c\u7ef40\u6216\u8005\u7a00\u758f\u7684\u6570\u636e\u6709\u610f\u4e49\u3002 1.2 \u89c4\u6a21\u5316\u7a00\u758f\u6570\u636e \u00b6 \u5982\u679c\u5bf9\u7a00\u758f\u6570\u636e\u8fdb\u884c\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\u5c31\u4f1a\u7834\u574f\u7a00\u758f\u7684\u6570\u636e\u7ed3\u6784\u3002\u867d\u7136\u5982\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u627e\u5230\u65b9\u6cd5\u53bb\u5bf9\u7a00\u758f\u7684\u8f93\u5165\u6570\u636e\u8fdb\u884c\u8f6c\u6362\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u7279\u5f81\u4e4b\u95f4\u7684\u6570\u636e\u89c4\u6a21\u4e0d\u4e00\u6837\u7684\u6570\u636e\u3002 MaxAbsScaler \u548c maxabs_scale\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u4e13\u95e8\u4e3a\u7a00\u758f\u6570\u636e\u7684\u89c4\u6a21\u5316\u6240\u8bbe\u8ba1\u7684\u3002 1.3 \u89c4\u6a21\u5316\u6709\u5f02\u5e38\u503c\u7684\u6570\u636e \u00b6 \u5982\u679c\u4f60\u7684\u6570\u636e\u6709\u8bb8\u591a\u5f02\u5e38\u503c\uff0c\u90a3\u4e48\u4f7f\u7528\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\u53bb\u505a\u6807\u51c6\u5316\u5c31\u4e0d\u884c\u4e86\u3002 \u5728\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528robust_scale \u548c RobustScaler\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002\u5b83\u4f1a\u6839\u636e\u4e2d\u4f4d\u6570\u6216\u8005\u56db\u5206\u4f4d\u6570\u53bb\u4e2d\u5fc3\u5316\u6570\u636e\u3002 2 \u6b63\u5219\u5316Normalization \u00b6 \u6b63\u5219\u5316\u662f\u5c06\u6837\u672c\u5728\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u4e0a\u7684\u4e00\u4e2a\u8f6c\u6362\uff0c\u7ecf\u5e38\u88ab\u4f7f\u7528\u5728\u5206\u7c7b\u4e0e\u805a\u7c7b\u4e2d\u3002 \u51fd\u6570normalize \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u901f\u6709\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u4e00\u4e2a\u5355\u5411\u91cf\u4e0a\u6765\u5b9e\u73b0\u8fd9\u6b63\u5219\u5316\u7684\u529f\u80fd\u3002\u6b63\u5219\u5316\u6709l1,l2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4e0a\uff1a # 2 \u6b63\u5219\u5316Normalization # \u6b63\u5219\u5316\u662f\u5c06\u6837\u672c\u5728\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u4e0a\u7684\u4e00\u4e2a\u8f6c\u6362\uff0c\u7ecf\u5e38\u88ab\u4f7f\u7528\u5728\u5206\u7c7b\u4e0e\u805a\u7c7b\u4e2d\u3002 # \u51fd\u6570normalize \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u901f\u6709\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u4e00\u4e2a\u5355\u5411\u91cf\u4e0a\u6765\u5b9e\u73b0\u8fd9\u6b63\u5219\u5316\u7684\u529f\u80fd\u3002 # \u6b63\u5219\u5316\u6709l1,l2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4e0a\uff1a x_normalized = preprocessing . normalize ( x , norm = 'l2' ) x_normalized ###############################################################################x############################################################################### preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bNormalizer,\u5b9e\u7528transform\u65b9\u6cd5\u540c\u6837\u4e5f\u53ef\u4ee5\u5bf9\u65b0\u7684\u6570\u636e\u8fdb\u884c\u540c\u6837\u7684\u8f6c\u6362 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bNormalizer,\u5b9e\u7528transform\u65b9\u6cd5\u540c\u6837\u4e5f\u53ef\u4ee5\u5bf9\u65b0\u7684\u6570\u636e\u8fdb\u884c\u540c\u6837\u7684\u8f6c\u6362 # \u6839\u636e\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6b63\u5219\u5668 normalizer = preprocessing . Normalizer () . fit ( x ) normalizer ##################################################################### \u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6b63\u5219 normalizer . transform ( x ) #################################################################### \u5bf9\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u6b63\u5219 normalizer . transform ([[ - 1. , 1. , 0. ]]) # normalize\u548cNormalizer\u90fd\u65e2\u53ef\u4ee5\u7528\u5728\u5bc6\u96c6\u6570\u7ec4\u4e5f\u53ef\u4ee5\u7528\u5728\u7a00\u758f\u77e9\u9635\uff08scipy.sparse)\u4e2d # \u5bf9\u4e8e\u7a00\u758f\u7684\u8f93\u5165\u6570\u636e\uff0c\u5b83\u4f1a\u88ab\u8f6c\u53d8\u6210\u7ef4\u4e9a\u7d22\u7684\u7a00\u758f\u884c\u8868\u5f81\uff08\u5177\u4f53\u8bf7\u89c1scipy.sparse.csr_matrix) ################################################################################### 3 \u4e8c\u503c\u5316\u2013\u7279\u5f81\u7684\u4e8c\u503c\u5316 \u00b6 \u7279\u5f81\u7684\u4e8c\u503c\u5316\u662f\u6307\u5c06\u6570\u503c\u578b\u7684\u7279\u5f81\u6570\u636e\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u5b9e\u7528\u7c7bBinarizer\u3002 # 3 \u4e8c\u503c\u5316\u2013\u7279\u5f81\u7684\u4e8c\u503c\u5316 # \u7279\u5f81\u7684\u4e8c\u503c\u5316\u662f\u6307\u5c06\u6570\u503c\u578b\u7684\u7279\u5f81\u6570\u636e\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u5b9e\u7528\u7c7bBinarizer # \u9ed8\u8ba4\u662f\u6839\u636e0\u6765\u4e8c\u503c\u5316\uff0c\u5927\u4e8e0\u7684\u90fd\u6807\u8bb0\u4e3a1\uff0c\u5c0f\u4e8e\u7b49\u4e8e0\u7684\u90fd\u6807\u8bb0\u4e3a0\u3002 from sklearn import preprocessing import numpy as np # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 x = np . array ([[ 1. , - 1. , 2. ],[ 2. , 0. , 0. ],[ 0. , 1. , - 1. ]]) binarizer = preprocessing . Binarizer () . fit ( x ) binarizer . transform ( x ) ##################################################################################\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\u8fd9\u4e2a\u9600\u503c\uff0c\u53ea\u9700\u4f20\u51fa\u53c2\u6570threshold\u5373\u53ef binarizer = preprocessing . Binarizer ( threshold = 1.5 ) binarizer . transform ( x ) ##########################################################################3 4 \u4e3a\u7c7b\u522b\u7279\u5f81\u7f16\u7801 \u00b6 OneHotEncoder\u72ec\u70ed\u7f16\u7801 \u00b6 \u5b66\u4e60sklearn\u548ckagggle\u65f6\u9047\u5230\u7684\u95ee\u9898\uff0c\u4ec0\u4e48\u662f\u72ec\u70ed\u7f16\u7801\uff1f\u4e3a\u4ec0\u4e48\u8981\u7528\u72ec\u70ed\u7f16\u7801\uff1f\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u72ec\u70ed\u7f16\u7801\uff1f\u4ee5\u53ca\u548c\u5176\u4ed6\u51e0\u79cd\u7f16\u7801\u65b9\u5f0f\u7684\u533a\u522b\u3002 \u9996\u5148\u4e86\u89e3\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u7279\u5f81\u7c7b\u522b\uff1a\u8fde\u7eed\u578b\u7279\u5f81\u548c\u79bb\u6563\u578b\u7279\u5f81\u3002 \u62ff\u5230\u83b7\u53d6\u7684\u539f\u59cb\u7279\u5f81\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e00\u7279\u5f81\u5206\u522b\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u6bd4\u5982\uff0c\u7279\u5f81A\u7684\u53d6\u503c\u8303\u56f4\u662f[-1000,1000]\uff0c\u7279\u5f81B\u7684\u53d6\u503c\u8303\u56f4\u662f[-1,1].\u5982\u679c\u4f7f\u7528logistic\u56de\u5f52\uff0cw1*x1+w2*x2\uff0c\u56e0\u4e3ax1\u7684\u53d6\u503c\u592a\u5927\u4e86\uff0c\u6240\u4ee5x2\u57fa\u672c\u8d77\u4e0d\u4e86\u4f5c\u7528\u3002\u6240\u4ee5\uff0c\u5fc5\u987b\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\uff0c\u6bcf\u4e2a\u7279\u5f81\u90fd\u5355\u72ec\u8fdb\u884c\u5f52\u4e00\u5316\u3002 \u5bf9\u4e8e\u8fde\u7eed\u6027\u7279\u5f81\uff1a Rescale bounded continuous features: All continuous input that are bounded, rescale them to [-1, 1] through x = (2x - max - min)/(max - min). \u7ebf\u6027\u653e\u7f29\u5230[-1,1] Standardize all continuous features: All continuous input should be standardized and by this I mean, for every continuous feature, compute its mean (u) and standard deviation (s) and do x = (x - u)/s. \u653e\u7f29\u5230\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1 Binarize categorical/discrete features: \u5bf9\u4e8e\u79bb\u6563\u7684\u7279\u5f81\u57fa\u672c\u5c31\u662f\u6309\u7167one-hot\uff08\u72ec\u70ed\uff09\u7f16\u7801\uff0c\u8be5\u79bb\u6563\u7279\u5f81\u6709\u591a\u5c11\u53d6\u503c\uff0c\u5c31\u7528\u591a\u5c11\u7ef4\u6765\u8868\u793a\u8be5\u7279\u5f81\u3002 \u6570\u636e\u6316\u6398OneHotEncoder\u72ec\u70ed\u7f16\u7801\u548cLabelEncoder\u6807\u7b7e\u7f16\u7801 \u4e00. \u4ec0\u4e48\u662f\u72ec\u70ed\u7f16\u7801\uff1f \u72ec\u70ed\u7801\uff0c\u5728\u82f1\u6587\u6587\u732e\u4e2d\u79f0\u505a one-hot code, \u76f4\u89c2\u6765\u8bf4\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u72b6\u6001\u5c31\u6709\u591a\u5c11\u6bd4\u7279\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u4e2a\u6bd4\u7279\u4e3a1\uff0c\u5176\u4ed6\u5168\u4e3a0\u7684\u4e00\u79cd\u7801\u5236\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a \u5047\u5982\u6709\u4e09\u79cd\u989c\u8272\u7279\u5f81\uff1a\u7ea2\u3001\u9ec4\u3001\u84dd\u3002 \u5728\u5229\u7528\u673a\u5668\u5b66\u4e60\u7684\u7b97\u6cd5\u65f6\u4e00\u822c\u9700\u8981\u8fdb\u884c\u5411\u91cf\u5316\u6216\u8005\u6570\u5b57\u5316\u3002\u90a3\u4e48\u4f60\u53ef\u80fd\u60f3\u4ee4 \u7ea2=1\uff0c\u9ec4=2\uff0c\u84dd=3. \u90a3\u4e48\u8fd9\u6837\u5176\u5b9e\u5b9e\u73b0\u4e86\u6807\u7b7e\u7f16\u7801\uff0c\u5373\u7ed9\u4e0d\u540c\u7c7b\u522b\u4ee5\u6807\u7b7e\u3002\u7136\u800c\u8fd9\u610f\u5473\u7740\u673a\u5668\u53ef\u80fd\u4f1a\u5b66\u4e60\u5230\u201c\u7ea2<\u9ec4<\u84dd\u201d\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u7684\u8ba9\u673a\u5668\u5b66\u4e60\u7684\u672c\u610f\uff0c\u53ea\u662f\u60f3\u8ba9\u673a\u5668\u533a\u5206\u5b83\u4eec\uff0c\u5e76\u65e0\u5927\u5c0f\u6bd4\u8f83\u4e4b\u610f\u3002\u6240\u4ee5\u8fd9\u65f6\u6807\u7b7e\u7f16\u7801\u662f\u4e0d\u591f\u7684\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u8f6c\u6362\u3002\u56e0\u4e3a\u6709\u4e09\u79cd\u989c\u8272\u72b6\u6001\uff0c\u6240\u4ee5\u5c31\u67093\u4e2a\u6bd4\u7279\u3002 **\u5373\u7ea2\u8272\uff1a1 0 0 \uff0c\u9ec4\u8272: 0 1 0\uff0c\u84dd\u8272\uff1a0 0 1 \u3002\u5982\u6b64\u4e00\u6765\u6bcf\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u90fd\u662f\u6839\u53f72\uff0c\u5728\u5411\u91cf\u7a7a\u95f4\u8ddd\u79bb\u90fd\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u6837\u4e0d\u4f1a\u51fa\u73b0\u504f\u5e8f\u6027\uff0c\u57fa\u672c\u4e0d\u4f1a\u5f71\u54cd\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u5ea6\u91cf\u7b97\u6cd5\u7684\u6548\u679c\u3002 ** **\u81ea\u7136\u72b6\u6001\u7801\u4e3a\uff1a000,001,010,011,100,101 ** **\u72ec\u70ed\u7f16\u7801\u4e3a\uff1a000001,000010,000100,001000,010000,100000 ** \u6765\u4e00\u4e2asklearn\u7684\u4f8b\u5b50\uff1a from sklearn import preprocessing enc = preprocessing . OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) # fit\u6765\u5b66\u4e60\u7f16\u7801 enc . transform ([[ 0 , 1 , 3 ]]) . toarray () # \u8fdb\u884c\u7f16\u7801 \u8f93\u51fa\uff1aarray([[ 1., 0., 0., 1., 0., 0., 0., 0., 1.]]) \u6570\u636e\u77e9\u9635\u662f4*3\uff0c\u53734\u4e2a\u6570\u636e\uff0c3\u4e2a\u7279\u5f81\u7ef4\u5ea6\u3002 0 0 3 \u89c2\u5bdf\u5de6\u8fb9\u7684\u6570\u636e\u77e9\u9635\uff0c\u7b2c\u4e00\u5217\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e24\u79cd\u53d6\u503c0\\1. \u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**10 \u300101** 1 1 0 \u540c\u7406\uff0c\u7b2c\u4e8c\u5217\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e09\u79cd\u53d6\u503c0\\1\\2\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**100\u3001010\u3001001** 0 2 1 \u540c\u7406\uff0c\u7b2c\u4e09\u5217\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u56db\u4e2d\u53d6\u503c0\\1\\2\\3\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**1000\u30010100\u30010010\u30010001** 1 0 2 \u518d\u6765\u770b\u8981\u8fdb\u884c\u7f16\u7801\u7684\u53c2\u6570[0 , 1, 3]\uff0c 0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a10, 1\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a010\uff0c 3\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a0001. \u6545\u6b64\u7f16\u7801\u7ed3\u679c\u4e3a **1 0 0 1 0 0 0 0 1 ** **\u4e8c. \u4e3a\u4ec0\u4e48\u8981\u72ec\u70ed\u7f16\u7801\uff1f ** \u6b63\u5982\u4e0a\u6587\u6240\u8a00\uff0c \u72ec\u70ed\u7f16\u7801\uff08\u54d1\u53d8\u91cf dummy variable\uff09\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u7b97\u6cd5\u662f\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u5ea6\u91cf\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u4e3a\u4e86\u4f7f\u975e\u504f\u5e8f\u5173\u7cfb\u7684\u53d8\u91cf\u53d6\u503c\u4e0d\u5177\u6709\u504f\u5e8f\u6027\uff0c\u5e76\u4e14\u5230\u5706\u70b9\u662f\u7b49\u8ddd\u7684\u3002\u4f7f\u7528one-hot\u7f16\u7801\uff0c\u5c06\u79bb\u6563\u7279\u5f81\u7684\u53d6\u503c\u6269\u5c55\u5230\u4e86\u6b27\u5f0f\u7a7a\u95f4\uff0c\u79bb\u6563\u7279\u5f81\u7684\u67d0\u4e2a\u53d6\u503c\u5c31\u5bf9\u5e94\u6b27\u5f0f\u7a7a\u95f4\u7684\u67d0\u4e2a\u70b9\u3002****\u5c06\u79bb\u6563\u578b\u7279\u5f81\u4f7f\u7528one-hot\u7f16\u7801\uff0c\u4f1a\u8ba9\u7279\u5f81\u4e4b\u95f4\u7684\u8ddd\u79bb\u8ba1\u7b97\u66f4\u52a0\u5408\u7406 \u3002**\u79bb\u6563\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u540e\uff0c\u7f16\u7801\u540e\u7684\u7279\u5f81\uff0c\u5176\u5b9e\u6bcf\u4e00\u7ef4\u5ea6\u7684\u7279\u5f81\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u8fde\u7eed\u7684\u7279\u5f81\u3002\u5c31\u53ef\u4ee5\u8ddf\u5bf9\u8fde\u7eed\u578b\u7279\u5f81\u7684\u5f52\u4e00\u5316\u65b9\u6cd5\u4e00\u6837\uff0c\u5bf9\u6bcf\u4e00\u7ef4\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u6bd4\u5982\u5f52\u4e00\u5316\u5230[-1,1]\u6216\u5f52\u4e00\u5316\u5230\u5747\u503c\u4e3a0,\u65b9\u5dee\u4e3a1\u3002 ** \u4e3a\u4ec0\u4e48\u7279\u5f81\u5411\u91cf\u8981\u6620\u5c04\u5230\u6b27\u5f0f\u7a7a\u95f4\uff1f \u5c06\u79bb\u6563\u7279\u5f81\u901a\u8fc7one-hot\u7f16\u7801\u6620\u5c04\u5230\u6b27\u5f0f\u7a7a\u95f4\uff0c\u662f\u56e0\u4e3a\uff0c\u5728\u56de\u5f52\uff0c\u5206\u7c7b\uff0c\u805a\u7c7b\u7b49\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u7279\u5f81\u4e4b\u95f4\u8ddd\u79bb\u7684\u8ba1\u7b97\u6216\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u800c\u6211\u4eec\u5e38\u7528\u7684\u8ddd\u79bb\u6216\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u6b27\u5f0f\u7a7a\u95f4\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff0c\u8ba1\u7b97\u4f59\u5f26\u76f8\u4f3c\u6027\uff0c\u57fa\u4e8e\u7684\u5c31\u662f\u6b27\u5f0f\u7a7a\u95f4\u3002 \u4e09 .\u72ec\u70ed\u7f16\u7801\u4f18\u7f3a\u70b9 **\u4f18\u70b9\uff1a**\u72ec\u70ed\u7f16\u7801\u89e3\u51b3\u4e86\u5206\u7c7b\u5668\u4e0d\u597d\u5904\u7406\u5c5e\u6027\u6570\u636e\u7684\u95ee\u9898\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u8d77\u5230\u4e86\u6269\u5145\u7279\u5f81\u7684\u4f5c\u7528\u3002\u5b83\u7684\u503c\u53ea\u67090\u548c1\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u5b58\u50a8\u5728\u5782\u76f4\u7684\u7a7a\u95f4\u3002 **\u7f3a\u70b9\uff1a**\u5f53\u7c7b\u522b\u7684\u6570\u91cf\u5f88\u591a\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u4f1a\u53d8\u5f97\u975e\u5e38\u5927\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u822c\u53ef\u4ee5\u7528PCA\u6765\u51cf\u5c11\u7ef4\u5ea6\u3002\u800c\u4e14**one hot encoding+PCA**\u8fd9\u79cd\u7ec4\u5408\u5728\u5b9e\u9645\u4e2d\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u56db. \u4ec0\u4e48\u60c5\u51b5\u4e0b(\u4e0d)\u7528\u72ec\u70ed\u7f16\u7801\uff1f **\u7528\uff1a**\u72ec\u70ed\u7f16\u7801\u7528\u6765\u89e3\u51b3\u7c7b\u522b\u578b\u6570\u636e\u7684\u79bb\u6563\u503c\u95ee\u9898\uff0c \u4e0d\u7528\uff1a**\u5c06\u79bb\u6563\u578b\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u7684\u4f5c\u7528\uff0c\u662f\u4e3a\u4e86\u8ba9\u8ddd\u79bb\u8ba1\u7b97\u66f4\u5408\u7406\uff0c\u4f46\u5982\u679c\u7279\u5f81\u662f\u79bb\u6563\u7684\uff0c\u5e76\u4e14\u4e0d\u7528one-hot\u7f16\u7801\u5c31\u53ef\u4ee5\u5f88\u5408\u7406\u7684\u8ba1\u7b97\u51fa\u8ddd\u79bb\uff0c\u90a3\u4e48\u5c31\u6ca1\u5fc5\u8981\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u6709\u4e9b\u57fa\u4e8e\u6811\u7684\u7b97\u6cd5\u5728\u5904\u7406\u53d8\u91cf\u65f6\uff0c\u5e76\u4e0d\u662f\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u5ea6\u91cf\uff0c\u6570\u503c\u53ea\u662f\u4e2a\u7c7b\u522b\u7b26\u53f7\uff0c\u5373\u6ca1\u6709\u504f\u5e8f\u5173\u7cfb\uff0c\u6240\u4ee5\u4e0d\u7528\u8fdb\u884c\u72ec\u70ed\u7f16\u7801\u3002 ** Tree Model\u4e0d\u592a\u9700\u8981one-hot\u7f16\u7801\uff1a \u5bf9\u4e8e\u51b3\u7b56\u6811\u6765\u8bf4\uff0cone-hot\u7684\u672c\u8d28\u662f\u589e\u52a0\u6811\u7684\u6df1\u5ea6\u3002 **\u603b\u7684\u6765\u8bf4\uff0c\u8981\u662fone hot encoding\u7684\u7c7b\u522b\u6570\u76ee\u4e0d\u592a\u591a\uff0c\u5efa\u8bae\u4f18\u5148\u8003\u8651\u3002 ** \u4e94. \u4ec0\u4e48\u60c5\u51b5\u4e0b(\u4e0d)\u9700\u8981\u5f52\u4e00\u5316\uff1f \u9700\u8981\uff1a \u57fa\u4e8e\u53c2\u6570\u7684\u6a21\u578b\u6216\u57fa\u4e8e\u8ddd\u79bb\u7684\u6a21\u578b\uff0c\u90fd\u662f\u8981\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\u3002 **\u4e0d\u9700\u8981\uff1a**\u57fa\u4e8e\u6811\u7684\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\uff0c\u4f8b\u5982\u968f\u673a\u68ee\u6797\uff0cbagging \u548c boosting\u7b49\u3002 \u6211\u4eec\u77e5\u9053\u7279\u5f81\u53ef\u80fd\u662f\u8fde\u7eed\u578b\u7684\u4e5f\u53ef\u80fd\u662f\u7c7b\u522b\u578b\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\uff1a [\u201cmale\u201d, \u201cfemale\u201d], [\u201cfrom Europe\u201d, \u201cfrom US\u201d, \u201cfrom Asia\u201d], [\u201cuses Firefox\u201d, \u201cuses Chrome\u201d, \u201cuses Safari\u201d, \u201cuses Internet Explorer\u201d]. \u8fd9\u4e9b\u7c7b\u522b\u7279\u5f81\u65e0\u6cd5\u76f4\u63a5\u8fdb\u5165\u6a21\u578b\uff0c\u5b83\u4eec\u9700\u8981\u88ab\u8f6c\u6362\u6210\u6574\u6570\u6765\u8868\u5f81\uff0c\u6bd4\u5982\uff1a [\u201cmale\u201d, \u201cfrom US\u201d, \u201cuses Internet Explorer\u201d] could be expressed as [0, 1, 3] while [\u201cfemale\u201d, \u201cfrom Asia\u201d, \u201cuses Chrome\u201d] would be [1, 2, 1]. \u7136\u800c\u4e0a\u9762\u8fd9\u79cd\u8868\u5f81\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0d\u80fd\u76f4\u63a5\u4e3ascikit-learn\u7684\u6a21\u578b\u6240\u7528\uff0c\u56e0\u4e3a\u6a21\u578b\u4f1a\u628a\u5b83\u4eec\u5f53\u6210\u5e8f\u5217\u578b\u7684\u8fde\u7eed\u53d8\u91cf\u3002 \u8981\u60f3\u4f7f\u5f97\u7c7b\u522b\u578b\u7684\u53d8\u91cf\u80fd\u6700\u7ec8\u88ab\u6a21\u578b\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528one-of-k\u7f16\u7801\u6216\u8005one-hot\u7f16\u7801\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7OneHotEncoder\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u6709n\u79cd\u503c\u7684\u4e00\u4e2a\u7279\u5f81\u53d8\u6210n\u4e2a\u4e8c\u5143\u7684\u7279\u5f81\u3002 # 4 \u4e3a\u7c7b\u522b\u7279\u5f81\u7f16\u7801# \u6211\u4eec\u77e5\u9053\u7279\u5f81\u53ef\u80fd\u662f\u8fde\u7eed\u578b\u7684\u4e5f\u53ef\u80fd\u662f\u7c7b\u522b\u578b\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\uff1a # [\u201cmale\u201d, \u201cfemale\u201d], [\u201cfrom Europe\u201d, \u201cfrom US\u201d, \u201cfrom Asia\u201d], [\u201cuses Firefox\u201d, \u201cuses Chrome\u201d, \u201cuses Safari\u201d, \u201cuses Internet Explorer\u201d]. # \u8fd9\u4e9b\u7c7b\u522b\u7279\u5f81\u65e0\u6cd5\u76f4\u63a5\u8fdb\u5165\u6a21\u578b\uff0c\u5b83\u4eec\u9700\u8981\u88ab\u8f6c\u6362\u6210\u6574\u6570\u6765\u8868\u5f81\uff0c\u6bd4\u5982\uff1a # [\u201cmale\u201d, \u201cfrom US\u201d, \u201cuses Internet Explorer\u201d] could be expressed as [0, 1, 3] while [\u201cfemale\u201d, \u201cfrom Asia\u201d, \u201cuses Chrome\u201d] would be [1, 2, 1]. # \u7136\u800c\u4e0a\u9762\u8fd9\u79cd\u8868\u5f81\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0d\u80fd\u76f4\u63a5\u4e3ascikit-learn\u7684\u6a21\u578b\u6240\u7528\uff0c\u56e0\u4e3a\u6a21\u578b\u4f1a\u628a\u5b83\u4eec\u5f53\u6210\u5e8f\u5217\u578b\u7684\u8fde\u7eed\u53d8\u91cf\u3002 # \u8981\u60f3\u4f7f\u5f97\u7c7b\u522b\u578b\u7684\u53d8\u91cf\u80fd\u6700\u7ec8\u88ab\u6a21\u578b\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528one-of-k\u7f16\u7801\u6216\u8005one-hot\u7f16\u7801\u3002 # \u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7OneHotEncoder\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u6709n\u79cd\u503c\u7684\u4e00\u4e2a\u7279\u5f81\u53d8\u6210n\u4e2a\u4e8c\u5143\u7684\u7279\u5f81\u3002 # \u7279\u5f811\u4e2d\u6709(0,1\uff09\u4e24\u4e2a\u503c\uff0c\u7279\u5f812\u4e2d\u6709(0,1,2)3\u4e2a\u503c\uff0c\u7279\u5f813\u4e2d\u6709\uff080,1,2,3)4\u4e2a\u503c\uff0c\u6240\u4ee5\u7f16\u7801\u4e4b\u540e\u603b\u5171\u67099\u4e2a\u4e8c\u5143\u7279\u5f81\u3002 enc = preprocessing . OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) enc . transform ([[ 0 , 1 , 3 ]]) . toarray () ########################################################################### \u4f46\u662f\u5462\uff0c\u4e5f\u4f1a\u5b58\u5728\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u67d0\u4e9b\u7279\u5f81\u4e2d\u53ef\u80fd\u5bf9\u4e00\u4e9b\u503c\u6709\u7f3a\u5931\uff0c # \u6bd4\u5982\u660e\u660e\u6709\u7537\u5973\u4e24\u4e2a\u6027\u522b\uff0c\u6837\u672c\u6570\u636e\u4e2d\u90fd\u662f\u7537\u6027\uff0c\u8fd9\u6837\u5c31\u4f1a\u9ed8\u8ba4\u88ab\u5224\u522b\u4e3a\u6211\u53ea\u6709\u4e00\u7c7b\u503c\u3002 # \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5411OneHotEncoder\u4f20\u5982\u53c2\u6570n_values\uff0c\u7528\u6765\u6307\u660e\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u503c\u7684\u603b\u4e2a\u6570 enc = preprocessing . OneHotEncoder ( n_values = [ 2 , 3 , 4 ]) # \u6307\u660e\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u503c\u7684\u603b\u4e2a\u6570\u5206\u522b\u4e3a 2 3 4 enc . fit ([[ 1 , 2 , 3 ], [ 0 , 2 , 0 ]]) enc . transform ([[ 1 , 0 , 0 ]]) . toarray () ############################################################################# # one hot encoder \u4e0d\u4ec5\u5bf9 label \u53ef\u4ee5\u8fdb\u884c\u7f16\u7801\uff0c\u8fd8\u53ef\u5bf9 categorical feature \u8fdb\u884c\u7f16\u7801\uff1a from sklearn.preprocessing import OneHotEncoder enc = OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) ########################################################################## \u5bf9\u8c61 enc\u7684n_values_\u6210\u5458\u53d8\u91cf \uff0c\u8bb0\u5f55\u7740\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u6700\u5927\u53d6\u503c\u6570\u76ee # \u5982\u7b2c\u4e00\u4e2a\u5c5e\u6027\uff1a0 1 0 1 ==> 2 # \u5982\u7b2c\u4e8c\u4e2a\u5c5e\u6027\uff1a0 1 2 0 ==> 3 # \u5982\u7b2c\u4e09\u4e2a\u5c5e\u6027\uff1a3 0 1 2 ==> 4enc.n_values_ # \u5bf9\u8c61enc\u7684feature_indices_ \u5219\u8bb0\u5f55\u5bf9n_values_\u7684\u7d2f\u79ef\u503c \u4e0d\u8fc7feature_indices_\u7684\u9996\u4f4d\u662f 0 enc . feature_indices_ ########################################################### enc . transform ([[ 0 , 1 , 1 ]]) . toarray () \u6570\u636e\u77e9\u9635\u662f4*3\uff0c\u53734\u4e2a\u6570\u636e\uff0c3\u4e2a\u7279\u5f81\u7ef4\u5ea6\u3002 0 0 3 \u89c2\u5bdf\u5de6\u8fb9\u7684\u6570\u636e\u77e9\u9635\uff0c\u7b2c\u4e00\u5217\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e24\u79cd\u53d6\u503c0\\1. \u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**10 \u300101** 1 1 0 \u540c\u7406\uff0c\u7b2c\u4e8c\u5217\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e09\u79cd\u53d6\u503c0\\1\\2\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**100\u3001010\u3001001** 0 2 1 \u540c\u7406\uff0c\u7b2c\u4e09\u5217\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u56db\u4e2d\u53d6\u503c0\\1\\2\\3\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**1000\u30010100\u30010010\u30010001** 1 0 2 \u518d\u6765\u770b\u8981\u8fdb\u884c\u7f16\u7801\u7684\u53c2\u6570[0 , 1, 1]\uff0c 0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a10, 1\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a010\uff0c 3\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a0001. \u6545\u6b64\u7f16\u7801\u7ed3\u679c\u4e3a **1 0 0 1 0 0100 ** 5 \u5f25\u8865\u7f3a\u5931\u6570\u636e \u00b6 \u5728scikit-learn\u7684\u6a21\u578b\u4e2d\u90fd\u662f\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u662f\u6570\u503c\u578b\u7684\uff0c\u5e76\u4e14\u90fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u6709\u7f3a\u5931\u6570\u636e\u662f\u901a\u8fc7NAN\uff0c\u6216\u8005\u7a7a\u503c\u8868\u793a\u7684\u8bdd\uff0c\u5c31\u65e0\u6cd5\u8bc6\u522b\u4e0e\u8ba1\u7b97\u4e86\u3002 \u8981\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5747\u503c\uff0c\u4e2d\u4f4d\u6570\uff0c\u4f17\u6570\u7b49\u7b49\u3002Imputer\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u3002\u8bf7\u770b\uff1a # 5 \u5f25\u8865\u7f3a\u5931\u6570\u636e # \u5728scikit-learn\u7684\u6a21\u578b\u4e2d\u90fd\u662f\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u662f\u6570\u503c\u578b\u7684\uff0c\u5e76\u4e14\u90fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u6709\u7f3a\u5931\u6570\u636e\u662f\u901a\u8fc7NAN\uff0c\u6216\u8005\u7a7a\u503c\u8868\u793a\u7684\u8bdd\uff0c\u5c31\u65e0\u6cd5\u8bc6\u522b\u4e0e\u8ba1\u7b97\u4e86\u3002 # \u8981\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5747\u503c\uff0c\u4e2d\u4f4d\u6570\uff0c\u4f17\u6570\u7b49\u7b49\u3002Imputer\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u3002\u8bf7\u770b\uff1a import numpy as np from sklearn.preprocessing import Imputer imp = Imputer ( missing_values = 'NaN' , strategy = 'mean' , axis = 0 ) imp . fit ([[ 1 , 2 ], [ np . nan , 3 ], [ 7 , 6 ]]) x = [[np.nan, 2], [6, np.nan], [7, 6]]imp.transform(x) Imputer\u7c7b\u540c\u6837\u4e5f\u53ef\u4ee5\u652f\u6301\u7a00\u758f\u77e9\u9635,\u4ee5\u4e0b\u4f8b\u5b50\u5c060\u4f5c\u4e3a\u4e86\u7f3a\u5931\u503c\uff0c\u4e3a\u5176\u8865\u4e0a\u5747\u503c # Imputer\u7c7b\u540c\u6837\u4e5f\u53ef\u4ee5\u652f\u6301\u7a00\u758f\u77e9\u9635,\u4ee5\u4e0b\u4f8b\u5b50\u5c060\u4f5c\u4e3a\u4e86\u7f3a\u5931\u503c\uff0c\u4e3a\u5176\u8865\u4e0a\u5747\u503cimport scipy.sparse as sp # \u521b\u5efa\u4e00\u4e2a\u7a00\u758f\u77e9\u9635x = sp.csc_matrix([[1, 2], [0, 3], [7, 6]]) imp = Imputer ( missing_values = 0 , strategy = 'mean' , verbose = 0 ) imp . fit ( x ) x_test = sp . csc_matrix ([[ 0 , 2 ], [ 6 , 0 ], [ 7 , 6 ]]) imp . transform ( x_test ) 6 \u521b\u5efa\u591a\u9879\u5f0f\u7279\u5f81 \u00b6 \u6709\u7684\u65f6\u5019\u7ebf\u6027\u7684\u7279\u5f81\u5e76\u4e0d\u80fd\u505a\u51fa\u7f8e\u7684\u6a21\u578b\uff0c\u4e8e\u662f\u6211\u4eec\u4f1a\u53bb\u5c1d\u8bd5\u975e\u7ebf\u6027\u3002\u975e\u7ebf\u6027\u662f\u5efa\u7acb\u5728\u5c06\u7279\u5f81\u8fdb\u884c\u591a\u9879\u5f0f\u5730\u5c55\u5f00\u4e0a\u7684\u3002 \u6bd4\u5982\u5c06\u4e24\u4e2a\u7279\u5f81 (X_1, X_2)\uff0c\u5b83\u7684\u5e73\u65b9\u5c55\u5f00\u5f0f\u4fbf\u8f6c\u6362\u62105\u4e2a\u7279\u5f81(1, X_1, X_2, X_1^2, X_1X_2, X_2^2). \u4ee3\u7801\u6848\u4f8b\u5982\u4e0b\uff1a # 6 \u521b\u5efa\u591a\u9879\u5f0f\u7279\u5f81# \u6709\u7684\u65f6\u5019\u7ebf\u6027\u7684\u7279\u5f81\u5e76\u4e0d\u80fd\u505a\u51fa\u7f8e\u7684\u6a21\u578b\uff0c\u4e8e\u662f\u6211\u4eec\u4f1a\u53bb\u5c1d\u8bd5\u975e\u7ebf\u6027\u3002\u975e\u7ebf\u6027\u662f\u5efa\u7acb\u5728\u5c06\u7279\u5f81\u8fdb\u884c\u591a\u9879\u5f0f\u5730\u5c55\u5f00\u4e0a\u7684\u3002 import numpy as np from sklearn.preprocessing import PolynomialFeatures # \u81ea\u5efa\u4e00\u7ec43*2\u7684\u6837\u672c x = np . arange ( 6 ) . reshape ( 3 , 2 ) # \u521b\u5efa2\u6b21\u65b9\u7684\u591a\u9879\u5f0f # \u6bd4\u5982\u5c06\u4e24\u4e2a\u7279\u5f81 (X_1, X_2)\uff0c\u5b83\u7684\u5e73\u65b9\u5c55\u5f00\u5f0f\u4fbf\u8f6c\u6362\u62105\u4e2a\u7279\u5f81(1, X_1, X_2, X_1^2, X_1X_2, X_2^2). \u4ee3\u7801\u6848\u4f8b\u5982\u4e0b\uff1a poly = PolynomialFeatures ( 2 ) poly . fit_transform ( x ) # \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u9009\u62e9\u53ea\u8981\u4fdd\u7559\u7279\u5f81\u76f8\u4e58\u7684\u9879\u3002 # \u5373\u5c06 (X_1, X_2, X_3) \u8f6c\u6362\u6210 (1, X_1, X_2, X_3, X_1X_2, X_1X_3, X_2X_3, X_1X_2X_3). x = np . arange ( 9 ) . reshape ( 3 , 3 ) poly = PolynomialFeatures ( degree = 3 , interaction_only = True ) poly . fit_transform ( x ) # 7 \u81ea\u5b9a\u4e49\u7279\u5f81\u7684\u8f6c\u6362\u51fd\u6570 # \u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u628a\u539f\u59cb\u7684\u7279\u5f81\u653e\u8fdb\u4e00\u4e2a\u51fd\u6570\u4e2d\u505a\u8f6c\u6362\uff0c\u8fd9\u4e2a\u51fd\u6570\u51fa\u6765\u7684\u503c\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81\u3002 # \u6bd4\u5982\u8bf4\u5c06\u7279\u5f81\u6570\u636e\u505alog\u8f6c\u6362\uff0c\u505a\u5012\u6570\u8f6c\u6362\u7b49\u7b49\u3002 # FunctionTransformer \u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd import numpy as np from sklearn.preprocessing import FunctionTransformer transformer = FunctionTransformer ( np . log1p ) x = np . array ([[ 0 , 1 ], [ 2 , 3 ]]) transformer . transform ( x )","title":"002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#sklearn-preprocessing","text":"\u5f53\u6211\u4eec\u62ff\u5230\u4e00\u6279\u539f\u59cb\u7684\u6570\u636e \u9996\u5148\u8981\u660e\u786e\u6709\u591a\u5c11\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u7c7b\u522b\u7684\u3002 \u68c0\u67e5\u6709\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5bf9\u786e\u5b9e\u7684\u7279\u5f81\u9009\u62e9\u6070\u5f53\u65b9\u5f0f\u8fdb\u884c\u5f25\u8865\uff0c\u4f7f\u6570\u636e\u5b8c\u6574\u3002 \u5bf9\u8fde\u7eed\u7684\u6570\u503c\u578b\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002 \u5bf9\u7c7b\u522b\u578b\u7684\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u5c06\u9700\u8981\u8f6c\u6362\u6210\u7c7b\u522b\u578b\u6570\u636e\u7684\u8fde\u7eed\u578b\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\u3002 \u4e3a\u9632\u6b62\u8fc7\u62df\u5408\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u9009\u62e9\u662f\u5426\u8981\u5c06\u6570\u636e\u8fdb\u884c\u6b63\u5219\u5316\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u63a2\u4e4b\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u4f73\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u9879\u5f0f\u65b9\u6cd5\uff0c\u5bfb\u627e\u975e\u7ebf\u6027\u7684\u5173\u7cfb\u3002 \u6839\u636e\u5b9e\u9645\u95ee\u9898\u5206\u6790\u662f\u5426\u9700\u8981\u5bf9\u7279\u5f81\u8fdb\u884c\u76f8\u5e94\u7684\u51fd\u6570\u8f6c\u6362\u3002","title":"\u9884\u5904\u7406\u6570\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#146","text":"Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd # \u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09from sklearn import preprocessingimport numpy as np # 1\\. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 # Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. # \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 # \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 # \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\u3002 x = np . array ([[ 1. , - 1. , 2. ], [ 2. , 0. , 0. ], [ 0. , 1. , - 1. ]]) # \u5c06\u6bcf\u4e00\u5217\u7279\u5f81\u6807\u51c6\u5316\u4e3a\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u6ce8\u610f\uff0c\u6807\u51c6\u5316\u662f\u9488\u5bf9\u6bcf\u4e00\u5217\u800c\u8a00\u7684 x_scale = preprocessing . scale ( x ) x_scale x_scale . shape # \u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5df2\u7ecf\u53d8\u62100,1\u4e86 # axis=0 \u8868\u793a\u5bf9\u6bcf\u4e00\u5217 x_scale.mean(axis=0) # axis=1\u8868\u793a\u5bf9\u6bcf\u4e00\u884c\u53bb\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0caxis=0\u8868\u793a\u5bf9\u6bcf\u4e00\u5217\u505a\u76f8\u540c\u7684\u8fd9\u4e2a\u64cd\u4f5c x_scale.mean(axis=1) # \u540c\u7406\uff0c\u770b\u4e00\u4e0b\u6807\u51c6\u5dee x_scale.std(axis=0) preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 # \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # \u8c03\u7528fit\u65b9\u6cd5\uff0c\u6839\u636e\u5df2\u6709\u7684\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u8f6c\u6362\u5668# \u53e6\u5916\uff0cStandardScaler()\u4e2d\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1awith_mean,with_std.\u8fd9\u4e24\u4e2a\u90fd\u662f\u5e03\u5c14\u578b\u7684\u53c2\u6570\uff0c # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u662ftrue,\u4f46\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6210false.\u5373\u4e0d\u8981\u5747\u503c\u4e2d\u5fc3\u5316\u6216\u8005\u4e0d\u8981\u65b9\u5dee\u89c4\u6a21\u5316\u4e3a1. scaler = preprocessing . StandardScaler () . fit ( x ) scaler # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5scaler.transform(x)######################################### \u597d\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u53c8\u6765\u4e86\u4e00\u7ec4\u65b0\u7684\u6837\u672c\uff0c\u4e5f\u60f3\u5f97\u5230\u76f8\u540c\u7684\u8f6c\u6362new_x = [[-1., 1., 0.]]scaler.transform(new_x)################################## # MinMaxScaler# \u5728MinMaxScaler\u4e2d\u662f\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u660e\u786e\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a # X_std = (X - X.min(axis=0)) / (X.max(axis=0) - X.min(axis=0))# X_scaled = X_std / (max - min) + min # \u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06\u6570\u636e\u89c4\u4e0e[0,1]\u4e4b\u95f4\uff0c\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u6700\u5c0f\u503c\u53d8\u6210\u4e860\uff0c\u6700\u5927\u503c\u53d8\u6210\u4e861\uff0c\u8bf7\u770b\uff1a min_max_scaler = preprocessing . MinMaxScaler () x_minmax = min_max_scaler . fit_transform ( x ) x_minmax ################################################################################# \u540c\u6837\u7684\uff0c\u5982\u679c\u6709\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u6765\uff0c\u4e5f\u60f3\u505a\u540c\u6837\u7684\u8f6c\u6362\u548b\u529e\u5462\uff1f\u8bf7\u770b\uff1a x_test = np . array ([[ - 3. , - 1. , 4. ]]) x_test_minmax = min_max_scaler . transform ( x_test ) x_test_minmax ################################################################################ MaxAbsScaler \u539f\u7406\u4e0e\u4e0a\u9762\u7684\u5f88\u50cf\uff0c\u53ea\u662f\u6570\u636e\u4f1a\u88ab\u89c4\u6a21\u5316\u5230[-1,1]\u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u7279\u5f81\u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u9664\u4ee5\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u90a3\u4e9b\u5df2\u7ecf\u4e2d\u5fc3\u5316\u5747\u503c\u7ef40\u6216\u8005\u7a00\u758f\u7684\u6570\u636e\u6709\u610f\u4e49\u3002","title":"1. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#12","text":"\u5982\u679c\u5bf9\u7a00\u758f\u6570\u636e\u8fdb\u884c\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\u5c31\u4f1a\u7834\u574f\u7a00\u758f\u7684\u6570\u636e\u7ed3\u6784\u3002\u867d\u7136\u5982\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u627e\u5230\u65b9\u6cd5\u53bb\u5bf9\u7a00\u758f\u7684\u8f93\u5165\u6570\u636e\u8fdb\u884c\u8f6c\u6362\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u7279\u5f81\u4e4b\u95f4\u7684\u6570\u636e\u89c4\u6a21\u4e0d\u4e00\u6837\u7684\u6570\u636e\u3002 MaxAbsScaler \u548c maxabs_scale\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u4e13\u95e8\u4e3a\u7a00\u758f\u6570\u636e\u7684\u89c4\u6a21\u5316\u6240\u8bbe\u8ba1\u7684\u3002","title":"1.2 \u89c4\u6a21\u5316\u7a00\u758f\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#13","text":"\u5982\u679c\u4f60\u7684\u6570\u636e\u6709\u8bb8\u591a\u5f02\u5e38\u503c\uff0c\u90a3\u4e48\u4f7f\u7528\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\u53bb\u505a\u6807\u51c6\u5316\u5c31\u4e0d\u884c\u4e86\u3002 \u5728\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528robust_scale \u548c RobustScaler\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002\u5b83\u4f1a\u6839\u636e\u4e2d\u4f4d\u6570\u6216\u8005\u56db\u5206\u4f4d\u6570\u53bb\u4e2d\u5fc3\u5316\u6570\u636e\u3002","title":"1.3 \u89c4\u6a21\u5316\u6709\u5f02\u5e38\u503c\u7684\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#2-normalization","text":"\u6b63\u5219\u5316\u662f\u5c06\u6837\u672c\u5728\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u4e0a\u7684\u4e00\u4e2a\u8f6c\u6362\uff0c\u7ecf\u5e38\u88ab\u4f7f\u7528\u5728\u5206\u7c7b\u4e0e\u805a\u7c7b\u4e2d\u3002 \u51fd\u6570normalize \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u901f\u6709\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u4e00\u4e2a\u5355\u5411\u91cf\u4e0a\u6765\u5b9e\u73b0\u8fd9\u6b63\u5219\u5316\u7684\u529f\u80fd\u3002\u6b63\u5219\u5316\u6709l1,l2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4e0a\uff1a # 2 \u6b63\u5219\u5316Normalization # \u6b63\u5219\u5316\u662f\u5c06\u6837\u672c\u5728\u5411\u91cf\u7a7a\u95f4\u6a21\u578b\u4e0a\u7684\u4e00\u4e2a\u8f6c\u6362\uff0c\u7ecf\u5e38\u88ab\u4f7f\u7528\u5728\u5206\u7c7b\u4e0e\u805a\u7c7b\u4e2d\u3002 # \u51fd\u6570normalize \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u901f\u6709\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u4e00\u4e2a\u5355\u5411\u91cf\u4e0a\u6765\u5b9e\u73b0\u8fd9\u6b63\u5219\u5316\u7684\u529f\u80fd\u3002 # \u6b63\u5219\u5316\u6709l1,l2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u4e0a\uff1a x_normalized = preprocessing . normalize ( x , norm = 'l2' ) x_normalized ###############################################################################x############################################################################### preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bNormalizer,\u5b9e\u7528transform\u65b9\u6cd5\u540c\u6837\u4e5f\u53ef\u4ee5\u5bf9\u65b0\u7684\u6570\u636e\u8fdb\u884c\u540c\u6837\u7684\u8f6c\u6362 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bNormalizer,\u5b9e\u7528transform\u65b9\u6cd5\u540c\u6837\u4e5f\u53ef\u4ee5\u5bf9\u65b0\u7684\u6570\u636e\u8fdb\u884c\u540c\u6837\u7684\u8f6c\u6362 # \u6839\u636e\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6b63\u5219\u5668 normalizer = preprocessing . Normalizer () . fit ( x ) normalizer ##################################################################### \u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6b63\u5219 normalizer . transform ( x ) #################################################################### \u5bf9\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u6b63\u5219 normalizer . transform ([[ - 1. , 1. , 0. ]]) # normalize\u548cNormalizer\u90fd\u65e2\u53ef\u4ee5\u7528\u5728\u5bc6\u96c6\u6570\u7ec4\u4e5f\u53ef\u4ee5\u7528\u5728\u7a00\u758f\u77e9\u9635\uff08scipy.sparse)\u4e2d # \u5bf9\u4e8e\u7a00\u758f\u7684\u8f93\u5165\u6570\u636e\uff0c\u5b83\u4f1a\u88ab\u8f6c\u53d8\u6210\u7ef4\u4e9a\u7d22\u7684\u7a00\u758f\u884c\u8868\u5f81\uff08\u5177\u4f53\u8bf7\u89c1scipy.sparse.csr_matrix) ###################################################################################","title":"2 \u6b63\u5219\u5316Normalization"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#3","text":"\u7279\u5f81\u7684\u4e8c\u503c\u5316\u662f\u6307\u5c06\u6570\u503c\u578b\u7684\u7279\u5f81\u6570\u636e\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u5b9e\u7528\u7c7bBinarizer\u3002 # 3 \u4e8c\u503c\u5316\u2013\u7279\u5f81\u7684\u4e8c\u503c\u5316 # \u7279\u5f81\u7684\u4e8c\u503c\u5316\u662f\u6307\u5c06\u6570\u503c\u578b\u7684\u7279\u5f81\u6570\u636e\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u5b9e\u7528\u7c7bBinarizer # \u9ed8\u8ba4\u662f\u6839\u636e0\u6765\u4e8c\u503c\u5316\uff0c\u5927\u4e8e0\u7684\u90fd\u6807\u8bb0\u4e3a1\uff0c\u5c0f\u4e8e\u7b49\u4e8e0\u7684\u90fd\u6807\u8bb0\u4e3a0\u3002 from sklearn import preprocessing import numpy as np # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 x = np . array ([[ 1. , - 1. , 2. ],[ 2. , 0. , 0. ],[ 0. , 1. , - 1. ]]) binarizer = preprocessing . Binarizer () . fit ( x ) binarizer . transform ( x ) ##################################################################################\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\u8fd9\u4e2a\u9600\u503c\uff0c\u53ea\u9700\u4f20\u51fa\u53c2\u6570threshold\u5373\u53ef binarizer = preprocessing . Binarizer ( threshold = 1.5 ) binarizer . transform ( x ) ##########################################################################3","title":"3 \u4e8c\u503c\u5316\u2013\u7279\u5f81\u7684\u4e8c\u503c\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#4","text":"","title":"4 \u4e3a\u7c7b\u522b\u7279\u5f81\u7f16\u7801"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#onehotencoder","text":"\u5b66\u4e60sklearn\u548ckagggle\u65f6\u9047\u5230\u7684\u95ee\u9898\uff0c\u4ec0\u4e48\u662f\u72ec\u70ed\u7f16\u7801\uff1f\u4e3a\u4ec0\u4e48\u8981\u7528\u72ec\u70ed\u7f16\u7801\uff1f\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u72ec\u70ed\u7f16\u7801\uff1f\u4ee5\u53ca\u548c\u5176\u4ed6\u51e0\u79cd\u7f16\u7801\u65b9\u5f0f\u7684\u533a\u522b\u3002 \u9996\u5148\u4e86\u89e3\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u7279\u5f81\u7c7b\u522b\uff1a\u8fde\u7eed\u578b\u7279\u5f81\u548c\u79bb\u6563\u578b\u7279\u5f81\u3002 \u62ff\u5230\u83b7\u53d6\u7684\u539f\u59cb\u7279\u5f81\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e00\u7279\u5f81\u5206\u522b\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u6bd4\u5982\uff0c\u7279\u5f81A\u7684\u53d6\u503c\u8303\u56f4\u662f[-1000,1000]\uff0c\u7279\u5f81B\u7684\u53d6\u503c\u8303\u56f4\u662f[-1,1].\u5982\u679c\u4f7f\u7528logistic\u56de\u5f52\uff0cw1*x1+w2*x2\uff0c\u56e0\u4e3ax1\u7684\u53d6\u503c\u592a\u5927\u4e86\uff0c\u6240\u4ee5x2\u57fa\u672c\u8d77\u4e0d\u4e86\u4f5c\u7528\u3002\u6240\u4ee5\uff0c\u5fc5\u987b\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\uff0c\u6bcf\u4e2a\u7279\u5f81\u90fd\u5355\u72ec\u8fdb\u884c\u5f52\u4e00\u5316\u3002 \u5bf9\u4e8e\u8fde\u7eed\u6027\u7279\u5f81\uff1a Rescale bounded continuous features: All continuous input that are bounded, rescale them to [-1, 1] through x = (2x - max - min)/(max - min). \u7ebf\u6027\u653e\u7f29\u5230[-1,1] Standardize all continuous features: All continuous input should be standardized and by this I mean, for every continuous feature, compute its mean (u) and standard deviation (s) and do x = (x - u)/s. \u653e\u7f29\u5230\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1 Binarize categorical/discrete features: \u5bf9\u4e8e\u79bb\u6563\u7684\u7279\u5f81\u57fa\u672c\u5c31\u662f\u6309\u7167one-hot\uff08\u72ec\u70ed\uff09\u7f16\u7801\uff0c\u8be5\u79bb\u6563\u7279\u5f81\u6709\u591a\u5c11\u53d6\u503c\uff0c\u5c31\u7528\u591a\u5c11\u7ef4\u6765\u8868\u793a\u8be5\u7279\u5f81\u3002 \u6570\u636e\u6316\u6398OneHotEncoder\u72ec\u70ed\u7f16\u7801\u548cLabelEncoder\u6807\u7b7e\u7f16\u7801 \u4e00. \u4ec0\u4e48\u662f\u72ec\u70ed\u7f16\u7801\uff1f \u72ec\u70ed\u7801\uff0c\u5728\u82f1\u6587\u6587\u732e\u4e2d\u79f0\u505a one-hot code, \u76f4\u89c2\u6765\u8bf4\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u72b6\u6001\u5c31\u6709\u591a\u5c11\u6bd4\u7279\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u4e2a\u6bd4\u7279\u4e3a1\uff0c\u5176\u4ed6\u5168\u4e3a0\u7684\u4e00\u79cd\u7801\u5236\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a \u5047\u5982\u6709\u4e09\u79cd\u989c\u8272\u7279\u5f81\uff1a\u7ea2\u3001\u9ec4\u3001\u84dd\u3002 \u5728\u5229\u7528\u673a\u5668\u5b66\u4e60\u7684\u7b97\u6cd5\u65f6\u4e00\u822c\u9700\u8981\u8fdb\u884c\u5411\u91cf\u5316\u6216\u8005\u6570\u5b57\u5316\u3002\u90a3\u4e48\u4f60\u53ef\u80fd\u60f3\u4ee4 \u7ea2=1\uff0c\u9ec4=2\uff0c\u84dd=3. \u90a3\u4e48\u8fd9\u6837\u5176\u5b9e\u5b9e\u73b0\u4e86\u6807\u7b7e\u7f16\u7801\uff0c\u5373\u7ed9\u4e0d\u540c\u7c7b\u522b\u4ee5\u6807\u7b7e\u3002\u7136\u800c\u8fd9\u610f\u5473\u7740\u673a\u5668\u53ef\u80fd\u4f1a\u5b66\u4e60\u5230\u201c\u7ea2<\u9ec4<\u84dd\u201d\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u7684\u8ba9\u673a\u5668\u5b66\u4e60\u7684\u672c\u610f\uff0c\u53ea\u662f\u60f3\u8ba9\u673a\u5668\u533a\u5206\u5b83\u4eec\uff0c\u5e76\u65e0\u5927\u5c0f\u6bd4\u8f83\u4e4b\u610f\u3002\u6240\u4ee5\u8fd9\u65f6\u6807\u7b7e\u7f16\u7801\u662f\u4e0d\u591f\u7684\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u8f6c\u6362\u3002\u56e0\u4e3a\u6709\u4e09\u79cd\u989c\u8272\u72b6\u6001\uff0c\u6240\u4ee5\u5c31\u67093\u4e2a\u6bd4\u7279\u3002 **\u5373\u7ea2\u8272\uff1a1 0 0 \uff0c\u9ec4\u8272: 0 1 0\uff0c\u84dd\u8272\uff1a0 0 1 \u3002\u5982\u6b64\u4e00\u6765\u6bcf\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u90fd\u662f\u6839\u53f72\uff0c\u5728\u5411\u91cf\u7a7a\u95f4\u8ddd\u79bb\u90fd\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u6837\u4e0d\u4f1a\u51fa\u73b0\u504f\u5e8f\u6027\uff0c\u57fa\u672c\u4e0d\u4f1a\u5f71\u54cd\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u5ea6\u91cf\u7b97\u6cd5\u7684\u6548\u679c\u3002 ** **\u81ea\u7136\u72b6\u6001\u7801\u4e3a\uff1a000,001,010,011,100,101 ** **\u72ec\u70ed\u7f16\u7801\u4e3a\uff1a000001,000010,000100,001000,010000,100000 ** \u6765\u4e00\u4e2asklearn\u7684\u4f8b\u5b50\uff1a from sklearn import preprocessing enc = preprocessing . OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) # fit\u6765\u5b66\u4e60\u7f16\u7801 enc . transform ([[ 0 , 1 , 3 ]]) . toarray () # \u8fdb\u884c\u7f16\u7801 \u8f93\u51fa\uff1aarray([[ 1., 0., 0., 1., 0., 0., 0., 0., 1.]]) \u6570\u636e\u77e9\u9635\u662f4*3\uff0c\u53734\u4e2a\u6570\u636e\uff0c3\u4e2a\u7279\u5f81\u7ef4\u5ea6\u3002 0 0 3 \u89c2\u5bdf\u5de6\u8fb9\u7684\u6570\u636e\u77e9\u9635\uff0c\u7b2c\u4e00\u5217\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e24\u79cd\u53d6\u503c0\\1. \u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**10 \u300101** 1 1 0 \u540c\u7406\uff0c\u7b2c\u4e8c\u5217\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e09\u79cd\u53d6\u503c0\\1\\2\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**100\u3001010\u3001001** 0 2 1 \u540c\u7406\uff0c\u7b2c\u4e09\u5217\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u56db\u4e2d\u53d6\u503c0\\1\\2\\3\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**1000\u30010100\u30010010\u30010001** 1 0 2 \u518d\u6765\u770b\u8981\u8fdb\u884c\u7f16\u7801\u7684\u53c2\u6570[0 , 1, 3]\uff0c 0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a10, 1\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a010\uff0c 3\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a0001. \u6545\u6b64\u7f16\u7801\u7ed3\u679c\u4e3a **1 0 0 1 0 0 0 0 1 ** **\u4e8c. \u4e3a\u4ec0\u4e48\u8981\u72ec\u70ed\u7f16\u7801\uff1f ** \u6b63\u5982\u4e0a\u6587\u6240\u8a00\uff0c \u72ec\u70ed\u7f16\u7801\uff08\u54d1\u53d8\u91cf dummy variable\uff09\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u7b97\u6cd5\u662f\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u5ea6\u91cf\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u4e3a\u4e86\u4f7f\u975e\u504f\u5e8f\u5173\u7cfb\u7684\u53d8\u91cf\u53d6\u503c\u4e0d\u5177\u6709\u504f\u5e8f\u6027\uff0c\u5e76\u4e14\u5230\u5706\u70b9\u662f\u7b49\u8ddd\u7684\u3002\u4f7f\u7528one-hot\u7f16\u7801\uff0c\u5c06\u79bb\u6563\u7279\u5f81\u7684\u53d6\u503c\u6269\u5c55\u5230\u4e86\u6b27\u5f0f\u7a7a\u95f4\uff0c\u79bb\u6563\u7279\u5f81\u7684\u67d0\u4e2a\u53d6\u503c\u5c31\u5bf9\u5e94\u6b27\u5f0f\u7a7a\u95f4\u7684\u67d0\u4e2a\u70b9\u3002****\u5c06\u79bb\u6563\u578b\u7279\u5f81\u4f7f\u7528one-hot\u7f16\u7801\uff0c\u4f1a\u8ba9\u7279\u5f81\u4e4b\u95f4\u7684\u8ddd\u79bb\u8ba1\u7b97\u66f4\u52a0\u5408\u7406 \u3002**\u79bb\u6563\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u540e\uff0c\u7f16\u7801\u540e\u7684\u7279\u5f81\uff0c\u5176\u5b9e\u6bcf\u4e00\u7ef4\u5ea6\u7684\u7279\u5f81\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u8fde\u7eed\u7684\u7279\u5f81\u3002\u5c31\u53ef\u4ee5\u8ddf\u5bf9\u8fde\u7eed\u578b\u7279\u5f81\u7684\u5f52\u4e00\u5316\u65b9\u6cd5\u4e00\u6837\uff0c\u5bf9\u6bcf\u4e00\u7ef4\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u6bd4\u5982\u5f52\u4e00\u5316\u5230[-1,1]\u6216\u5f52\u4e00\u5316\u5230\u5747\u503c\u4e3a0,\u65b9\u5dee\u4e3a1\u3002 ** \u4e3a\u4ec0\u4e48\u7279\u5f81\u5411\u91cf\u8981\u6620\u5c04\u5230\u6b27\u5f0f\u7a7a\u95f4\uff1f \u5c06\u79bb\u6563\u7279\u5f81\u901a\u8fc7one-hot\u7f16\u7801\u6620\u5c04\u5230\u6b27\u5f0f\u7a7a\u95f4\uff0c\u662f\u56e0\u4e3a\uff0c\u5728\u56de\u5f52\uff0c\u5206\u7c7b\uff0c\u805a\u7c7b\u7b49\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u7279\u5f81\u4e4b\u95f4\u8ddd\u79bb\u7684\u8ba1\u7b97\u6216\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u800c\u6211\u4eec\u5e38\u7528\u7684\u8ddd\u79bb\u6216\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u6b27\u5f0f\u7a7a\u95f4\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff0c\u8ba1\u7b97\u4f59\u5f26\u76f8\u4f3c\u6027\uff0c\u57fa\u4e8e\u7684\u5c31\u662f\u6b27\u5f0f\u7a7a\u95f4\u3002 \u4e09 .\u72ec\u70ed\u7f16\u7801\u4f18\u7f3a\u70b9 **\u4f18\u70b9\uff1a**\u72ec\u70ed\u7f16\u7801\u89e3\u51b3\u4e86\u5206\u7c7b\u5668\u4e0d\u597d\u5904\u7406\u5c5e\u6027\u6570\u636e\u7684\u95ee\u9898\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u8d77\u5230\u4e86\u6269\u5145\u7279\u5f81\u7684\u4f5c\u7528\u3002\u5b83\u7684\u503c\u53ea\u67090\u548c1\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u5b58\u50a8\u5728\u5782\u76f4\u7684\u7a7a\u95f4\u3002 **\u7f3a\u70b9\uff1a**\u5f53\u7c7b\u522b\u7684\u6570\u91cf\u5f88\u591a\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u4f1a\u53d8\u5f97\u975e\u5e38\u5927\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u822c\u53ef\u4ee5\u7528PCA\u6765\u51cf\u5c11\u7ef4\u5ea6\u3002\u800c\u4e14**one hot encoding+PCA**\u8fd9\u79cd\u7ec4\u5408\u5728\u5b9e\u9645\u4e2d\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u56db. \u4ec0\u4e48\u60c5\u51b5\u4e0b(\u4e0d)\u7528\u72ec\u70ed\u7f16\u7801\uff1f **\u7528\uff1a**\u72ec\u70ed\u7f16\u7801\u7528\u6765\u89e3\u51b3\u7c7b\u522b\u578b\u6570\u636e\u7684\u79bb\u6563\u503c\u95ee\u9898\uff0c \u4e0d\u7528\uff1a**\u5c06\u79bb\u6563\u578b\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u7684\u4f5c\u7528\uff0c\u662f\u4e3a\u4e86\u8ba9\u8ddd\u79bb\u8ba1\u7b97\u66f4\u5408\u7406\uff0c\u4f46\u5982\u679c\u7279\u5f81\u662f\u79bb\u6563\u7684\uff0c\u5e76\u4e14\u4e0d\u7528one-hot\u7f16\u7801\u5c31\u53ef\u4ee5\u5f88\u5408\u7406\u7684\u8ba1\u7b97\u51fa\u8ddd\u79bb\uff0c\u90a3\u4e48\u5c31\u6ca1\u5fc5\u8981\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u6709\u4e9b\u57fa\u4e8e\u6811\u7684\u7b97\u6cd5\u5728\u5904\u7406\u53d8\u91cf\u65f6\uff0c\u5e76\u4e0d\u662f\u57fa\u4e8e\u5411\u91cf\u7a7a\u95f4\u5ea6\u91cf\uff0c\u6570\u503c\u53ea\u662f\u4e2a\u7c7b\u522b\u7b26\u53f7\uff0c\u5373\u6ca1\u6709\u504f\u5e8f\u5173\u7cfb\uff0c\u6240\u4ee5\u4e0d\u7528\u8fdb\u884c\u72ec\u70ed\u7f16\u7801\u3002 ** Tree Model\u4e0d\u592a\u9700\u8981one-hot\u7f16\u7801\uff1a \u5bf9\u4e8e\u51b3\u7b56\u6811\u6765\u8bf4\uff0cone-hot\u7684\u672c\u8d28\u662f\u589e\u52a0\u6811\u7684\u6df1\u5ea6\u3002 **\u603b\u7684\u6765\u8bf4\uff0c\u8981\u662fone hot encoding\u7684\u7c7b\u522b\u6570\u76ee\u4e0d\u592a\u591a\uff0c\u5efa\u8bae\u4f18\u5148\u8003\u8651\u3002 ** \u4e94. \u4ec0\u4e48\u60c5\u51b5\u4e0b(\u4e0d)\u9700\u8981\u5f52\u4e00\u5316\uff1f \u9700\u8981\uff1a \u57fa\u4e8e\u53c2\u6570\u7684\u6a21\u578b\u6216\u57fa\u4e8e\u8ddd\u79bb\u7684\u6a21\u578b\uff0c\u90fd\u662f\u8981\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\u3002 **\u4e0d\u9700\u8981\uff1a**\u57fa\u4e8e\u6811\u7684\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u7279\u5f81\u7684\u5f52\u4e00\u5316\uff0c\u4f8b\u5982\u968f\u673a\u68ee\u6797\uff0cbagging \u548c boosting\u7b49\u3002 \u6211\u4eec\u77e5\u9053\u7279\u5f81\u53ef\u80fd\u662f\u8fde\u7eed\u578b\u7684\u4e5f\u53ef\u80fd\u662f\u7c7b\u522b\u578b\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\uff1a [\u201cmale\u201d, \u201cfemale\u201d], [\u201cfrom Europe\u201d, \u201cfrom US\u201d, \u201cfrom Asia\u201d], [\u201cuses Firefox\u201d, \u201cuses Chrome\u201d, \u201cuses Safari\u201d, \u201cuses Internet Explorer\u201d]. \u8fd9\u4e9b\u7c7b\u522b\u7279\u5f81\u65e0\u6cd5\u76f4\u63a5\u8fdb\u5165\u6a21\u578b\uff0c\u5b83\u4eec\u9700\u8981\u88ab\u8f6c\u6362\u6210\u6574\u6570\u6765\u8868\u5f81\uff0c\u6bd4\u5982\uff1a [\u201cmale\u201d, \u201cfrom US\u201d, \u201cuses Internet Explorer\u201d] could be expressed as [0, 1, 3] while [\u201cfemale\u201d, \u201cfrom Asia\u201d, \u201cuses Chrome\u201d] would be [1, 2, 1]. \u7136\u800c\u4e0a\u9762\u8fd9\u79cd\u8868\u5f81\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0d\u80fd\u76f4\u63a5\u4e3ascikit-learn\u7684\u6a21\u578b\u6240\u7528\uff0c\u56e0\u4e3a\u6a21\u578b\u4f1a\u628a\u5b83\u4eec\u5f53\u6210\u5e8f\u5217\u578b\u7684\u8fde\u7eed\u53d8\u91cf\u3002 \u8981\u60f3\u4f7f\u5f97\u7c7b\u522b\u578b\u7684\u53d8\u91cf\u80fd\u6700\u7ec8\u88ab\u6a21\u578b\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528one-of-k\u7f16\u7801\u6216\u8005one-hot\u7f16\u7801\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7OneHotEncoder\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u6709n\u79cd\u503c\u7684\u4e00\u4e2a\u7279\u5f81\u53d8\u6210n\u4e2a\u4e8c\u5143\u7684\u7279\u5f81\u3002 # 4 \u4e3a\u7c7b\u522b\u7279\u5f81\u7f16\u7801# \u6211\u4eec\u77e5\u9053\u7279\u5f81\u53ef\u80fd\u662f\u8fde\u7eed\u578b\u7684\u4e5f\u53ef\u80fd\u662f\u7c7b\u522b\u578b\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\uff1a # [\u201cmale\u201d, \u201cfemale\u201d], [\u201cfrom Europe\u201d, \u201cfrom US\u201d, \u201cfrom Asia\u201d], [\u201cuses Firefox\u201d, \u201cuses Chrome\u201d, \u201cuses Safari\u201d, \u201cuses Internet Explorer\u201d]. # \u8fd9\u4e9b\u7c7b\u522b\u7279\u5f81\u65e0\u6cd5\u76f4\u63a5\u8fdb\u5165\u6a21\u578b\uff0c\u5b83\u4eec\u9700\u8981\u88ab\u8f6c\u6362\u6210\u6574\u6570\u6765\u8868\u5f81\uff0c\u6bd4\u5982\uff1a # [\u201cmale\u201d, \u201cfrom US\u201d, \u201cuses Internet Explorer\u201d] could be expressed as [0, 1, 3] while [\u201cfemale\u201d, \u201cfrom Asia\u201d, \u201cuses Chrome\u201d] would be [1, 2, 1]. # \u7136\u800c\u4e0a\u9762\u8fd9\u79cd\u8868\u5f81\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0d\u80fd\u76f4\u63a5\u4e3ascikit-learn\u7684\u6a21\u578b\u6240\u7528\uff0c\u56e0\u4e3a\u6a21\u578b\u4f1a\u628a\u5b83\u4eec\u5f53\u6210\u5e8f\u5217\u578b\u7684\u8fde\u7eed\u53d8\u91cf\u3002 # \u8981\u60f3\u4f7f\u5f97\u7c7b\u522b\u578b\u7684\u53d8\u91cf\u80fd\u6700\u7ec8\u88ab\u6a21\u578b\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528one-of-k\u7f16\u7801\u6216\u8005one-hot\u7f16\u7801\u3002 # \u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7OneHotEncoder\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u6709n\u79cd\u503c\u7684\u4e00\u4e2a\u7279\u5f81\u53d8\u6210n\u4e2a\u4e8c\u5143\u7684\u7279\u5f81\u3002 # \u7279\u5f811\u4e2d\u6709(0,1\uff09\u4e24\u4e2a\u503c\uff0c\u7279\u5f812\u4e2d\u6709(0,1,2)3\u4e2a\u503c\uff0c\u7279\u5f813\u4e2d\u6709\uff080,1,2,3)4\u4e2a\u503c\uff0c\u6240\u4ee5\u7f16\u7801\u4e4b\u540e\u603b\u5171\u67099\u4e2a\u4e8c\u5143\u7279\u5f81\u3002 enc = preprocessing . OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) enc . transform ([[ 0 , 1 , 3 ]]) . toarray () ########################################################################### \u4f46\u662f\u5462\uff0c\u4e5f\u4f1a\u5b58\u5728\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u67d0\u4e9b\u7279\u5f81\u4e2d\u53ef\u80fd\u5bf9\u4e00\u4e9b\u503c\u6709\u7f3a\u5931\uff0c # \u6bd4\u5982\u660e\u660e\u6709\u7537\u5973\u4e24\u4e2a\u6027\u522b\uff0c\u6837\u672c\u6570\u636e\u4e2d\u90fd\u662f\u7537\u6027\uff0c\u8fd9\u6837\u5c31\u4f1a\u9ed8\u8ba4\u88ab\u5224\u522b\u4e3a\u6211\u53ea\u6709\u4e00\u7c7b\u503c\u3002 # \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5411OneHotEncoder\u4f20\u5982\u53c2\u6570n_values\uff0c\u7528\u6765\u6307\u660e\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u503c\u7684\u603b\u4e2a\u6570 enc = preprocessing . OneHotEncoder ( n_values = [ 2 , 3 , 4 ]) # \u6307\u660e\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u503c\u7684\u603b\u4e2a\u6570\u5206\u522b\u4e3a 2 3 4 enc . fit ([[ 1 , 2 , 3 ], [ 0 , 2 , 0 ]]) enc . transform ([[ 1 , 0 , 0 ]]) . toarray () ############################################################################# # one hot encoder \u4e0d\u4ec5\u5bf9 label \u53ef\u4ee5\u8fdb\u884c\u7f16\u7801\uff0c\u8fd8\u53ef\u5bf9 categorical feature \u8fdb\u884c\u7f16\u7801\uff1a from sklearn.preprocessing import OneHotEncoder enc = OneHotEncoder () enc . fit ([[ 0 , 0 , 3 ], [ 1 , 1 , 0 ], [ 0 , 2 , 1 ], [ 1 , 0 , 2 ]]) ########################################################################## \u5bf9\u8c61 enc\u7684n_values_\u6210\u5458\u53d8\u91cf \uff0c\u8bb0\u5f55\u7740\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u6700\u5927\u53d6\u503c\u6570\u76ee # \u5982\u7b2c\u4e00\u4e2a\u5c5e\u6027\uff1a0 1 0 1 ==> 2 # \u5982\u7b2c\u4e8c\u4e2a\u5c5e\u6027\uff1a0 1 2 0 ==> 3 # \u5982\u7b2c\u4e09\u4e2a\u5c5e\u6027\uff1a3 0 1 2 ==> 4enc.n_values_ # \u5bf9\u8c61enc\u7684feature_indices_ \u5219\u8bb0\u5f55\u5bf9n_values_\u7684\u7d2f\u79ef\u503c \u4e0d\u8fc7feature_indices_\u7684\u9996\u4f4d\u662f 0 enc . feature_indices_ ########################################################### enc . transform ([[ 0 , 1 , 1 ]]) . toarray () \u6570\u636e\u77e9\u9635\u662f4*3\uff0c\u53734\u4e2a\u6570\u636e\uff0c3\u4e2a\u7279\u5f81\u7ef4\u5ea6\u3002 0 0 3 \u89c2\u5bdf\u5de6\u8fb9\u7684\u6570\u636e\u77e9\u9635\uff0c\u7b2c\u4e00\u5217\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e24\u79cd\u53d6\u503c0\\1. \u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**10 \u300101** 1 1 0 \u540c\u7406\uff0c\u7b2c\u4e8c\u5217\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u4e09\u79cd\u53d6\u503c0\\1\\2\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**100\u3001010\u3001001** 0 2 1 \u540c\u7406\uff0c\u7b2c\u4e09\u5217\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7ef4\u5ea6\uff0c\u6709\u56db\u4e2d\u53d6\u503c0\\1\\2\\3\uff0c\u6240\u4ee5\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\u4e3a**1000\u30010100\u30010010\u30010001** 1 0 2 \u518d\u6765\u770b\u8981\u8fdb\u884c\u7f16\u7801\u7684\u53c2\u6570[0 , 1, 1]\uff0c 0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a10, 1\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a010\uff0c 3\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7279\u5f81\u7f16\u7801\u4e3a0001. \u6545\u6b64\u7f16\u7801\u7ed3\u679c\u4e3a **1 0 0 1 0 0100 **","title":"OneHotEncoder\u72ec\u70ed\u7f16\u7801"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#5","text":"\u5728scikit-learn\u7684\u6a21\u578b\u4e2d\u90fd\u662f\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u662f\u6570\u503c\u578b\u7684\uff0c\u5e76\u4e14\u90fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u6709\u7f3a\u5931\u6570\u636e\u662f\u901a\u8fc7NAN\uff0c\u6216\u8005\u7a7a\u503c\u8868\u793a\u7684\u8bdd\uff0c\u5c31\u65e0\u6cd5\u8bc6\u522b\u4e0e\u8ba1\u7b97\u4e86\u3002 \u8981\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5747\u503c\uff0c\u4e2d\u4f4d\u6570\uff0c\u4f17\u6570\u7b49\u7b49\u3002Imputer\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u3002\u8bf7\u770b\uff1a # 5 \u5f25\u8865\u7f3a\u5931\u6570\u636e # \u5728scikit-learn\u7684\u6a21\u578b\u4e2d\u90fd\u662f\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u662f\u6570\u503c\u578b\u7684\uff0c\u5e76\u4e14\u90fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u6709\u7f3a\u5931\u6570\u636e\u662f\u901a\u8fc7NAN\uff0c\u6216\u8005\u7a7a\u503c\u8868\u793a\u7684\u8bdd\uff0c\u5c31\u65e0\u6cd5\u8bc6\u522b\u4e0e\u8ba1\u7b97\u4e86\u3002 # \u8981\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5747\u503c\uff0c\u4e2d\u4f4d\u6570\uff0c\u4f17\u6570\u7b49\u7b49\u3002Imputer\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u3002\u8bf7\u770b\uff1a import numpy as np from sklearn.preprocessing import Imputer imp = Imputer ( missing_values = 'NaN' , strategy = 'mean' , axis = 0 ) imp . fit ([[ 1 , 2 ], [ np . nan , 3 ], [ 7 , 6 ]]) x = [[np.nan, 2], [6, np.nan], [7, 6]]imp.transform(x) Imputer\u7c7b\u540c\u6837\u4e5f\u53ef\u4ee5\u652f\u6301\u7a00\u758f\u77e9\u9635,\u4ee5\u4e0b\u4f8b\u5b50\u5c060\u4f5c\u4e3a\u4e86\u7f3a\u5931\u503c\uff0c\u4e3a\u5176\u8865\u4e0a\u5747\u503c # Imputer\u7c7b\u540c\u6837\u4e5f\u53ef\u4ee5\u652f\u6301\u7a00\u758f\u77e9\u9635,\u4ee5\u4e0b\u4f8b\u5b50\u5c060\u4f5c\u4e3a\u4e86\u7f3a\u5931\u503c\uff0c\u4e3a\u5176\u8865\u4e0a\u5747\u503cimport scipy.sparse as sp # \u521b\u5efa\u4e00\u4e2a\u7a00\u758f\u77e9\u9635x = sp.csc_matrix([[1, 2], [0, 3], [7, 6]]) imp = Imputer ( missing_values = 0 , strategy = 'mean' , verbose = 0 ) imp . fit ( x ) x_test = sp . csc_matrix ([[ 0 , 2 ], [ 6 , 0 ], [ 7 , 6 ]]) imp . transform ( x_test )","title":"5 \u5f25\u8865\u7f3a\u5931\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/002-\u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09/#6","text":"\u6709\u7684\u65f6\u5019\u7ebf\u6027\u7684\u7279\u5f81\u5e76\u4e0d\u80fd\u505a\u51fa\u7f8e\u7684\u6a21\u578b\uff0c\u4e8e\u662f\u6211\u4eec\u4f1a\u53bb\u5c1d\u8bd5\u975e\u7ebf\u6027\u3002\u975e\u7ebf\u6027\u662f\u5efa\u7acb\u5728\u5c06\u7279\u5f81\u8fdb\u884c\u591a\u9879\u5f0f\u5730\u5c55\u5f00\u4e0a\u7684\u3002 \u6bd4\u5982\u5c06\u4e24\u4e2a\u7279\u5f81 (X_1, X_2)\uff0c\u5b83\u7684\u5e73\u65b9\u5c55\u5f00\u5f0f\u4fbf\u8f6c\u6362\u62105\u4e2a\u7279\u5f81(1, X_1, X_2, X_1^2, X_1X_2, X_2^2). \u4ee3\u7801\u6848\u4f8b\u5982\u4e0b\uff1a # 6 \u521b\u5efa\u591a\u9879\u5f0f\u7279\u5f81# \u6709\u7684\u65f6\u5019\u7ebf\u6027\u7684\u7279\u5f81\u5e76\u4e0d\u80fd\u505a\u51fa\u7f8e\u7684\u6a21\u578b\uff0c\u4e8e\u662f\u6211\u4eec\u4f1a\u53bb\u5c1d\u8bd5\u975e\u7ebf\u6027\u3002\u975e\u7ebf\u6027\u662f\u5efa\u7acb\u5728\u5c06\u7279\u5f81\u8fdb\u884c\u591a\u9879\u5f0f\u5730\u5c55\u5f00\u4e0a\u7684\u3002 import numpy as np from sklearn.preprocessing import PolynomialFeatures # \u81ea\u5efa\u4e00\u7ec43*2\u7684\u6837\u672c x = np . arange ( 6 ) . reshape ( 3 , 2 ) # \u521b\u5efa2\u6b21\u65b9\u7684\u591a\u9879\u5f0f # \u6bd4\u5982\u5c06\u4e24\u4e2a\u7279\u5f81 (X_1, X_2)\uff0c\u5b83\u7684\u5e73\u65b9\u5c55\u5f00\u5f0f\u4fbf\u8f6c\u6362\u62105\u4e2a\u7279\u5f81(1, X_1, X_2, X_1^2, X_1X_2, X_2^2). \u4ee3\u7801\u6848\u4f8b\u5982\u4e0b\uff1a poly = PolynomialFeatures ( 2 ) poly . fit_transform ( x ) # \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u9009\u62e9\u53ea\u8981\u4fdd\u7559\u7279\u5f81\u76f8\u4e58\u7684\u9879\u3002 # \u5373\u5c06 (X_1, X_2, X_3) \u8f6c\u6362\u6210 (1, X_1, X_2, X_3, X_1X_2, X_1X_3, X_2X_3, X_1X_2X_3). x = np . arange ( 9 ) . reshape ( 3 , 3 ) poly = PolynomialFeatures ( degree = 3 , interaction_only = True ) poly . fit_transform ( x ) # 7 \u81ea\u5b9a\u4e49\u7279\u5f81\u7684\u8f6c\u6362\u51fd\u6570 # \u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u628a\u539f\u59cb\u7684\u7279\u5f81\u653e\u8fdb\u4e00\u4e2a\u51fd\u6570\u4e2d\u505a\u8f6c\u6362\uff0c\u8fd9\u4e2a\u51fd\u6570\u51fa\u6765\u7684\u503c\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81\u3002 # \u6bd4\u5982\u8bf4\u5c06\u7279\u5f81\u6570\u636e\u505alog\u8f6c\u6362\uff0c\u505a\u5012\u6570\u8f6c\u6362\u7b49\u7b49\u3002 # FunctionTransformer \u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd import numpy as np from sklearn.preprocessing import FunctionTransformer transformer = FunctionTransformer ( np . log1p ) x = np . array ([[ 0 , 1 ], [ 2 , 3 ]]) transformer . transform ( x )","title":"6 \u521b\u5efa\u591a\u9879\u5f0f\u7279\u5f81"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/","text":"Sklearn \u7b80\u4ecb \u00b6 Scikit learn \u4e5f\u7b80\u79f0 sklearn , \u662f\u673a\u5668\u5b66\u4e60\u9886\u57df\u5f53\u4e2d\u6700\u77e5\u540d\u7684 python \u6a21\u5757\u4e4b\u4e00. Sklearn \u5305\u542b\u4e86\u5f88\u591a\u79cd\u673a\u5668\u5b66\u4e60\u7684\u65b9\u5f0f: Classification \u5206\u7c7b Regression \u56de\u5f52 Clustering \u975e\u76d1\u7763\u5206\u7c7b Dimensionality reduction \u6570\u636e\u964d\u7ef4 Model Selection \u6a21\u578b\u9009\u62e9 Preprocessing \u6570\u636e\u9884\u5904\u7406 \u9009\u62e9\u6a21\u578b\u6d41\u7a0b \u00b6 \u5b66\u4e60 Sklearn \u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u53bb\u7528\uff0c\u5148\u4e86\u89e3\u4e00\u4e0b\u90fd\u6709\u4ec0\u4e48\u6a21\u578b\u65b9\u6cd5\uff0c\u7136\u540e\u9009\u62e9\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u6765\u8fbe\u5230\u4f60\u7684\u76ee\u6807\u3002 Sklearn \u5b98\u7f51\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6d41\u7a0b\u56fe(\u82f1\u6587)\uff0c\u8fd9\u91cc\u627e\u4e86\u4e00\u5f20\u4e2d\u6587\u7684.\u84dd\u8272\u5706\u5708\u5185\u662f\u5224\u65ad\u6761\u4ef6\uff0c\u7eff\u8272\u65b9\u6846\u5185\u662f\u53ef\u4ee5\u9009\u62e9\u7684\u7b97\u6cd5\uff1a \u4ece \u5f00\u59cb\u4f4d\u7f6e \u5f00\u59cb\uff0c\u9996\u5148\u770b\u6570\u636e\u7684\u6837\u672c\u662f\u5426 >50\uff0c\u5c0f\u4e8e\u5219\u9700\u8981\u6536\u96c6\u66f4\u591a\u7684\u6570\u636e\u3002 \u7531\u56fe\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u7b97\u6cd5\u6709\u56db\u7c7b\uff0c\u5206\u7c7b\uff0c\u56de\u5f52\uff0c\u805a\u7c7b\uff0c\u964d\u7ef4\u3002 \u5176\u4e2d \u5206\u7c7b\u548c\u56de\u5f52\u662f\u76d1\u7763\u5f0f\u5b66\u4e60\uff0c\u5373\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u4e00\u4e2a label\u3002 \u805a\u7c7b \u662f\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\uff0c\u5373\u6ca1\u6709 label\u3002 \u53e6\u5916\u4e00\u7c7b\u662f \u964d\u7ef4\uff0c\u5f53\u6570\u636e\u96c6\u6709\u5f88\u591a\u5f88\u591a\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7 \u964d\u7ef4 \u7b97\u6cd5\u628a\u5c5e\u6027\u5f52\u7eb3\u8d77\u6765\u3002\u4f8b\u5982 20 \u4e2a\u5c5e\u6027\u53ea\u53d8\u6210 2 \u4e2a\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u6311\u51fa 2 \u4e2a\uff0c\u800c\u662f\u538b\u7f29\u6210\u4e3a 2 \u4e2a\uff0c\u5b83\u4eec\u96c6\u5408\u4e86 20 \u4e2a\u5c5e\u6027\u7684\u6240\u6709\u7279\u5f81\uff0c\u76f8\u5f53\u4e8e\u628a\u91cd\u8981\u7684\u4fe1\u606f\u63d0\u53d6\u7684\u66f4\u597d\uff0c\u4e0d\u91cd\u8981\u7684\u4fe1\u606f\u5c31\u4e0d\u8981\u4e86\u3002 \u7136\u540e\u770b\u95ee\u9898\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u95ee\u9898\uff0c\u662f\u5206\u7c7b\u8fd8\u662f\u56de\u5f52\uff0c\u8fd8\u662f\u805a\u7c7b\uff0c\u5c31\u9009\u62e9\u76f8\u5e94\u7684\u7b97\u6cd5\u3002 \u5f53\u7136\u8fd8\u8981\u8003\u8651\u6570\u636e\u7684\u5927\u5c0f\uff0c\u4f8b\u5982 100K \u662f\u4e00\u4e2a\u9608\u503c\u3002 \u53ef\u4ee5\u53d1\u73b0\u6709\u4e9b\u65b9\u6cd5\u662f\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u5206\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u56de\u5f52\uff0c\u4f8b\u5982 SGD\u3002 \u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50) \u00b6 Sklearn \u628a\u6240\u6709\u673a\u5668\u5b66\u4e60\u7684\u6a21\u5f0f\u6574\u5408\u7edf\u4e00\u8d77\u6765\u4e86\uff0c\u5b66\u4f1a\u4e86\u4e00\u4e2a\u6a21\u5f0f\u5c31\u53ef\u4ee5\u901a\u5403\u5176\u4ed6\u4e0d\u540c\u7c7b\u578b\u7684\u5b66\u4e60\u6a21\u5f0f\u3002 \u4f8b\u5982:\u5206\u7c7b\u5668\uff0c Sklearn \u672c\u8eab\u5c31\u6709\u5f88\u591a\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u7ec3\u4e60\u3002 \u6211\u4eec\u7528\u5176\u4e2d Iris \u7684\u6570\u636e\u4e3a\u4f8b\uff0c\u8fd9\u79cd\u82b1\u6709\u56db\u4e2a\u5c5e\u6027\uff0c\u82b1\u74e3\u7684\u957f\u5bbd\uff0c\u830e\u7684\u957f\u5bbd\uff0c\u6839\u636e\u8fd9\u4e9b\u5c5e\u6027\u628a\u82b1\u5206\u4e3a\u4e09\u7c7b\u3002 \u6211\u4eec\u8981\u7528 \u5206\u7c7b\u5668 \u53bb\u628a\u56db\u79cd\u7c7b\u578b\u7684\u82b1\u5206\u5f00\u3002 \u4eca\u5929\u7528 KNN classifier\uff0c\u5c31\u662f\u9009\u62e9\u51e0\u4e2a\u4e34\u8fd1\u70b9\uff0c\u7efc\u5408\u5b83\u4eec\u505a\u4e2a\u5e73\u5747\u6765\u4f5c\u4e3a\u9884\u6d4b\u503c\u3002 \u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a \u00b6 \u5bfc\u5165\u6a21\u5757 \u521b\u5efa\u6570\u636e \u5efa\u7acb\u6a21\u578b\uff0d\u8bad\u7ec3\uff0d\u9884\u6d4b \u6574\u4f53\u7684\u4ee3\u7801: #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 20:02:03 2019 @author: zzh \"\"\" #\u5bfc\u5165\u6a21\u5757 import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #scikit-learn K\u6700\u8fd1\u90bb\u5206\u7c7b\u5668(KNN\u7b97\u6cd5) KNeighborsClassifier \u4f7f\u7528 from sklearn.neighbors import KNeighborsClassifier #\u5bfc\u5165\u6570\u636e #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) print ( iris_X [: 2 ,:]) print ( iris_Y [ 0 : 2 ]) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #print(y_train) #\u521b\u5efaKNN\u6a21\u578b\u5bf9\u8c61 knn = KNeighborsClassifier () #\u5229\u7528knn\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3 knn . fit ( X_train , y_train ) #\u4f20\u5982\u7684\u662f\u8bad\u7ec3\u6570\u636e\u53ca\u6807\u7b7e #\u7528\u8bad\u7ec3\u597d\u7684model\u8fdb\u884c\u9884\u6d4b\u4f7f\u7528\u7684\u662fpredict\u51fd\u6570 print ( knn . predict ( X_test )) #\u9884\u6d4b\u51fa\u7684\u6807\u7b7e print ( y_test ) #\u5b9e\u9645\u7684\u6807\u7b7e Sklearn\u4e2d\u7684\u6570\u636e\u96c6: \u00b6 sklearn \u7684\u6570\u636e\u96c6\u6709\u597d\u591a\u4e2a\u79cd \u81ea\u5e26\u7684\u5c0f\u6570\u636e\u96c6\uff08packaged dataset\uff09\uff1asklearn.datasets.load_ \u53ef\u5728\u7ebf\u4e0b\u8f7d\u7684\u6570\u636e\u96c6\uff08Downloaded Dataset\uff09\uff1asklearn.datasets.fetch_ \u8ba1\u7b97\u673a\u751f\u6210\u7684\u6570\u636e\u96c6\uff08Generated Dataset\uff09\uff1asklearn.datasets.make_ svmlight/libsvm\u683c\u5f0f\u7684\u6570\u636e\u96c6:sklearn.datasets.load_svmlight_file(...) \u4ece\u4e70\u4e86data.org\u5728\u7ebf\u4e0b\u8f7d\u83b7\u53d6\u7684\u6570\u636e\u96c6:sklearn.datasets.fetch_mldata(...) \u2460\u81ea\u5e26\u7684\u6570\u636e\u96c6 \u5176\u4e2d\u7684\u81ea\u5e26\u7684\u5c0f\u7684\u6570\u636e\u96c6\u4e3a\uff1asklearn.datasets.load_ \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6load_digits()\uff1a\u7528\u4e8e\u591a\u5206\u7c7b\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u4e73\u817a\u764c\u6570\u636e\u96c6load-barest-cancer\uff08\uff09\uff1a\u7b80\u5355\u7ecf\u5178\u7684\u7528\u4e8e\u4e8c\u5206\u7c7b\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u7cd6\u5c3f\u75c5\u6570\u636e\u96c6\uff1aload-diabetes\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u56de\u5f52\u8ba4\u4e3a\u7684\u6570\u636e\u96c6\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd910\u4e2a\u7279\u5f81\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u90fd\u5df2\u7ecf\u88ab\u5904\u7406\u62100\u5747\u503c\uff0c\u65b9\u5dee\u5f52\u4e00\u5316\u7684\u7279\u5f81\u503c\uff0c \u6ce2\u58eb\u987f\u623f\u4ef7\u6570\u636e\u96c6\uff1aload-boston\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u56de\u5f52\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u4f53\u80fd\u8bad\u7ec3\u6570\u636e\u96c6\uff1aload-linnerud\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u591a\u53d8\u91cf\u56de\u5f52\u4efb\u52a1\u7684\u6570\u636e\u96c6\uff0c\u5176\u5185\u90e8\u5305\u542b\u4e24\u4e2a\u5c0f\u6570\u636e\u96c6\uff1aExcise\u662f\u5bf93\u4e2a\u8bad\u7ec3\u53d8\u91cf\u768420\u6b21\u89c2\u6d4b\uff08\u4f53\u91cd\uff0c\u8170\u56f4\uff0c\u8109\u640f\uff09\uff0cphysiological\u662f\u5bf93\u4e2a\u751f\u7406\u5b66\u53d8\u91cf\u768420\u6b21\u89c2\u6d4b\uff08\u5f15\u4f53\u5411\u4e0a\uff0c\u4ef0\u5367\u8d77\u5750\uff0c\u7acb\u5b9a\u8df3\u8fdc\uff09 svmlight/libsvm\u7684\u6bcf\u4e00\u884c\u6837\u672c\u7684\u5b58\u653e\u683c\u5f0f\uff1a : : .... \u8fd9\u79cd\u683c\u5f0f\u6bd4\u8f83\u9002\u5408\u7528\u6765\u5b58\u653e\u7a00\u758f\u6570\u636e\uff0c\u5728sklearn\u4e2d\uff0c\u7528scipy sparse CSR\u77e9\u9635\u6765\u5b58\u653eX\uff0c\u7528numpy\u6570\u7ec4\u6765\u5b58\u653eY \u2461\u751f\u6210\u6570\u636e\u96c6 \u751f\u6210\u6570\u636e\u96c6\uff1a\u53ef\u4ee5\u7528\u6765\u5206\u7c7b\u4efb\u52a1\uff0c\u53ef\u4ee5\u7528\u6765\u56de\u5f52\u4efb\u52a1\uff0c\u53ef\u4ee5\u7528\u6765\u805a\u7c7b\u4efb\u52a1\uff0c\u7528\u4e8e\u6d41\u5f62\u5b66\u4e60\u7684\uff0c\u7528\u4e8e\u56e0\u5b50\u5206\u89e3\u4efb\u52a1\u7684 \u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u548c\u805a\u7c7b\u4efb\u52a1\u7684\uff1a\u8fd9\u4e9b\u51fd\u6570\u4ea7\u751f\u6837\u672c\u7279\u5f81\u5411\u91cf\u77e9\u9635\u4ee5\u53ca\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\u96c6\u5408 make_blobs\uff1a\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6\uff0c\u4e3a\u6bcf\u4e2a\u7c7b\u5206\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u592a\u5206\u5e03\u7684\u70b9\u96c6 make_classification\uff1a\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6\uff0c\u4e3a\u6bcf\u4e2a\u7c7b\u5206\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u592a\u5206\u5e03\u7684\u70b9\u96c6\uff0c\u63d0\u4f9b\u4e86\u4e3a\u6570\u636e\u6dfb\u52a0\u566a\u58f0\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\u7ef4\u5ea6\u76f8\u5173\u6027\uff0c\u65e0\u6548\u7279\u5f81\u4ee5\u53ca\u5197\u4f59\u7279\u5f81\u7b49 make_gaussian-quantiles\uff1a\u5c06\u4e00\u4e2a\u5355\u9ad8\u65af\u5206\u5e03\u7684\u70b9\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u6570\u91cf\u5747\u7b49\u7684\u70b9\u96c6\uff0c\u4f5c\u4e3a\u4e24\u7c7b make_hastie-10-2\uff1a\u4ea7\u751f\u4e00\u4e2a\u76f8\u4f3c\u7684\u4e8c\u5143\u5206\u7c7b\u6570\u636e\u96c6\uff0c\u670910\u4e2a\u7ef4\u5ea6 make_circle\u548cmake_moom\u4ea7\u751f\u4e8c\u7ef4\u4e8c\u5143\u5206\u7c7b\u6570\u636e\u96c6\u6765\u6d4b\u8bd5\u67d0\u4e9b\u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u4e3a\u6570\u636e\u96c6\u6dfb\u52a0\u566a\u58f0\uff0c\u53ef\u4ee5\u4e3a\u4e8c\u5143\u5206\u7c7b\u5668\u4ea7\u751f\u4e00\u4e9b\u7403\u5f62\u5224\u51b3\u754c\u9762\u7684\u6570\u636e \u4f8b\u5b50:\u7528\u5230\u4e86\u518d\u8bf4 #\u751f\u6210\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6 import numpy as np import matplotlib.pyplot as plt from sklearn.datasets.samples_generator import make_blobs center = [[ 1 , 1 ],[ - 1 , - 1 ],[ 1 , - 1 ]] cluster_std = 0.3 X , labels = make_blobs ( n_samples = 200 , centers = center , n_features = 2 , cluster_std = cluster_std , random_state = 0 ) print ( 'X.shape' , X . shape ) print ( \"labels\" , set ( labels )) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_blob()' ) plt . show () #\u751f\u6210\u7528\u4e8e\u5206\u7c7b\u7684\u6570\u636e\u96c6 from sklearn.datasets.samples_generator import make_classification X , labels = make_classification ( n_samples = 200 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 1 , n_clusters_per_class = 2 ) rng = np . random . RandomState ( 2 ) X += 2 * rng . uniform ( size = X . shape ) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_classification()' ) plt . show () #\u751f\u6210\u7403\u5f62\u5224\u51b3\u754c\u9762\u7684\u6570\u636e from sklearn.datasets.samples_generator import make_circles X , labels = make_circles ( n_samples = 200 , noise = 0.2 , factor = 0.2 , random_state = 1 ) print ( \"X.shape:\" , X . shape ) print ( \"labels:\" , set ( labels )) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_moons()' ) plt . show () \u5c0f\u4f8b\u5b50:\u6ce2\u58eb\u987f\u623f\u4ef7,\u4ee5\u53ca\u751f\u6210\u4e00\u4e9b\u7ebf\u6027\u7684\u70b9 # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" from __future__ import print_function from sklearn import datasets #\u4f7f\u7528\u7ebf\u6027\u56de\u5f52 from sklearn.linear_model import LinearRegression import matplotlib.pyplot as plt #\u52a0\u8f7d\u6570\u636e\u4f7f\u7528\u7684\u662fload,\u8fd9\u91cc\u4f7f\u7528\u7684\u662fboston\u623f\u4ef7\u7684\u6570\u636e loaded_data = datasets . load_boston () data_X = loaded_data . data #\u6570\u636e\u7279\u5f81 data_y = loaded_data . target #\u6570\u636e\u6807\u7b7e #\u521b\u5efa\u6a21\u578b model = LinearRegression () #\u8bad\u7ec3\u6a21\u578b model . fit ( data_X , data_y ) print ( model . predict ( data_X [: 4 , :])) #\u9884\u6d4b\u524d\u56db\u4e2a\u6570\u636e print ( data_y [: 4 ]) #\u81ea\u5df1\u751f\u6210\u6570\u636e_\u7ebf\u6027\u7684100\u4e2a\u6709\u4e00\u4e2a\u7279\u5f81,1\u4e2a\u6807\u7b7e,\u566a\u58f0\u4e3a10(\u65b9\u5dee\u5427)\u7684\u6570\u636e X , y = datasets . make_regression ( n_samples = 100 , n_features = 1 , n_targets = 1 , noise = 10 ) plt . scatter ( X , y ) #\u6563\u70b9\u56fe plt . show () \u6267\u884c\u7684\u7ed3\u679c: sklearn\u4e2dmodel\u5e38\u7528\u7684\u5c5e\u6027\u548c\u529f\u80fd \u00b6 # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" from __future__ import print_function from sklearn import datasets from sklearn.linear_model import LinearRegression #(\u7ebf\u6027\u56de\u5f52) loaded_data = datasets . load_boston () data_X = loaded_data . data data_y = loaded_data . target model = LinearRegression () model . fit ( data_X , data_y ) print ( model . predict ( data_X [: 4 , :])) #\u9884\u6d4b print ( \"\u53c2\u6570w1-wn: \\n \" , model . coef_ ) #\u5047\u8bbe\u62df\u5408\u66f2\u7ebf\u65b9\u7a0by=0.1x+0.3 ,\u5219\u8f93\u51fa\u7684\u53c2\u6570\u662f0.1 print ( \"\u622a\u8dddw0: \\n \" , model . intercept_ ) #\u5047\u8bbe\u62df\u5408\u66f2\u7ebf\u65b9\u7a0by=0.1x+0.3 ,\u5219\u8f93\u51fa\u7684\u53c2\u6570\u662f0.3(\u622a\u8ddd) print ( model . get_params ()) #\u8fd4\u56de\u7684\u7ed9model\u5b9a\u4e49\u7684\u53c2\u6570,\u6ca1\u6709\u5b9a\u4e49\u5219\u662f\u9ed8\u8ba4\u503c #model\u5b66\u5230\u7684\u4e1c\u897f\u8fdb\u884c\u4e00\u4e2a\u6253\u5206(\u7528data_X\u4f5c\u9884\u6d4b,\u4e0edata_y\u4f5c\u5bf9\u6bd4\u770b\u4e00\u4e0b\u8ddf\u7ed3\u679c\u6709\u591a\u543b\u5408) #\u4f7f\u7528\u7684\u662f coefficient of determination (\u51b3\u5b9a\u7cfb\u6570) \u6765\u5224\u65ad \u56de\u5f52\u65b9\u7a0b \u62df\u5408\u7684\u7a0b\u5ea6 #\u51b3\u5b9a\u7cfb\u6570\u4e5f\u5c31\u662f\u8bf4: \u901a\u8fc7\u56de\u5f52\u65b9\u7a0b\u5f97\u51fa\u7684 dependent variable \u6709 number% \u80fd\u88ab independent variable \u6240\u89e3\u91ca. \u5224\u65ad\u62df\u5408\u7684\u7a0b\u5ea6 print ( model . score ( data_X , data_y )) # R^2 coefficient of determination ### \u9884\u5904\u7406\u6570\u636e \u5f53\u6211\u4eec\u62ff\u5230\u4e00\u6279\u539f\u59cb\u7684\u6570\u636e \u9996\u5148\u8981\u660e\u786e\u6709\u591a\u5c11\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u7c7b\u522b\u7684\u3002 \u68c0\u67e5\u6709\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5bf9\u7f3a\u5931\u7684\u7279\u5f81\u9009\u62e9\u6070\u5f53\u65b9\u5f0f\u8fdb\u884c\u5f25\u8865\uff0c\u4f7f\u6570\u636e\u5b8c\u6574\u3002 \u5bf9\u8fde\u7eed\u7684\u6570\u503c\u578b\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002 \u5bf9\u7c7b\u522b\u578b\u7684\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u5c06\u9700\u8981\u8f6c\u6362\u6210\u7c7b\u522b\u578b\u6570\u636e\u7684\u8fde\u7eed\u578b\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\u3002 \u4e3a\u9632\u6b62\u8fc7\u62df\u5408\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u9009\u62e9\u662f\u5426\u8981\u5c06\u6570\u636e\u8fdb\u884c\u6b63\u5219\u5316\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u63a2\u4e4b\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u4f73\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u9879\u5f0f\u65b9\u6cd5\uff0c\u5bfb\u627e\u975e\u7ebf\u6027\u7684\u5173\u7cfb\u3002 \u6839\u636e\u5b9e\u9645\u95ee\u9898\u5206\u6790\u662f\u5426\u9700\u8981\u5bf9\u7279\u5f81\u8fdb\u884c\u76f8\u5e94\u7684\u51fd\u6570\u8f6c\u6362\u3002 \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1. \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 \u5728sklearn.preprocessing(\u9884\u5904\u7406)\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd \u4f8b: # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 18:44:39 2019 @author: zangz \"\"\" # \u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09 from sklearn import preprocessing import numpy as np # 1. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 # Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. # \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 # \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 # \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\u3002 x = np . array ([[ 1. , - 1. , 2. ], [ 2. , 0. , 0. ], [ 0. , 1. , - 1. ]]) # \u5c06\u6bcf\u4e00\u5217\u7279\u5f81\u6807\u51c6\u5316\u4e3a\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u6ce8\u610f\uff0c\u6807\u51c6\u5316\u662f\u9488\u5bf9\u6bcf\u4e00\u5217\u800c\u8a00\u7684 x_scale = preprocessing . scale ( x ) print ( \"\u672a\u6807\u51c6\u5316\u7684\u6570\u636e: \\n \" , x ) print ( '\u6807\u51c6\u5316\u540e\u7684\u6570\u636e: \\n ' , x_scale ) print ( \"\u77e9\u9635\u7684\u7ef4\u5ea6: \\n \" , x_scale . shape ) # \u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5df2\u7ecf\u53d8\u62100,1\u4e86 # axis=0 \u8868\u793a\u5bf9\u6bcf\u4e00\u5217 # axis=1\u8868\u793a\u5bf9\u6bcf\u4e00\u884c\u53bb\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0caxis=0\u8868\u793a\u5bf9\u6bcf\u4e00\u5217\u505a\u76f8\u540c\u7684\u8fd9\u4e2a\u64cd\u4f5c print ( \"\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u5747\u503c: \\n \" , x_scale . mean ( axis = 0 )) # \u540c\u7406\uff0c\u770b\u4e00\u4e0b\u6807\u51c6\u5dee print ( \"\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee: \\n \" , x_scale . std ( axis = 0 )) \u6267\u884c\u7ed3\u679c: \u672a\u6807\u51c6\u5316\u7684\u6570\u636e : [[ 1. - 1. 2. ] [ 2. 0. 0. ] [ 0. 1. - 1. ]] \u6807\u51c6\u5316\u540e\u7684\u6570\u636e : [[ 0. - 1.22474487 1.33630621 ] [ 1.22474487 0. - 0.26726124 ] [ - 1.22474487 1.22474487 - 1.06904497 ]] \u77e9\u9635\u7684\u7ef4\u5ea6 : ( 3 , 3 ) \u77e9\u9635\u6bcf\u4e00\u5217\u7684\u5747\u503c : [ 0. 0. 0. ] \u77e9\u9635\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee : [ 1. 1. 1. ] preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 # \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # \u8c03\u7528fit\u65b9\u6cd5\uff0c\u6839\u636e\u5df2\u6709\u7684\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u8f6c\u6362\u5668 # \u53e6\u5916\uff0cStandardScaler()\u4e2d\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1awith_mean,with_std.\u8fd9\u4e24\u4e2a\u90fd\u662f\u5e03\u5c14\u578b\u7684\u53c2\u6570\uff0c # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u662ftrue,\u4f46\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6210false.\u5373\u4e0d\u8981\u5747\u503c\u4e2d\u5fc3\u5316\u6216\u8005\u4e0d\u8981\u65b9\u5dee\u89c4\u6a21\u5316\u4e3a1. scaler = preprocessing . StandardScaler () . fit ( x ) #\u5b9e\u4f8b\u5316\u5bf9\u8c61 scaler \u6267\u884c\u7ed3\u679c: StandardScaler ( copy = True , with_mean = True , with_std = True ) # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5 x_tran = scaler . transform ( x ) #x\u6570\u636e\u65f6\u4e0d\u4f1a\u53d8\u7684,\u53ea\u80fd\u628a\u53d8\u5316\u7684\u6570\u636e\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf print ( x_tran ) ######################################## # \u597d\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u53c8\u6765\u4e86\u4e00\u7ec4\u65b0\u7684\u6837\u672c\uff0c\u4e5f\u60f3\u5f97\u5230\u76f8\u540c\u7684\u8f6c\u6362 new_x = [[ - 1. , 1. , 0. ]] scaler . transform ( new_x ) ################################## \u6267\u884c\u7ed3\u679c: [[ 0. - 1.22474487 1.33630621 ] [ 1.22474487 0. - 0.26726124 ] [ - 1.22474487 1.22474487 - 1.06904497 ]] Out [ 18 ]: array ([[ - 2.44948974 , 1.22474487 , - 0.26726124 ]]) # MinMaxScaler # \u5728MinMaxScaler\u4e2d\u662f\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u660e\u786e\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a # X_std = (X - X.min(axis=0)) / (X.max(axis=0) - X.min(axis=0)) # X_scaled = X_std / (max - min) + min # \u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06\u6570\u636e\u89c4\u4e0e[0,1]\u4e4b\u95f4\uff0c\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u6700\u5c0f\u503c\u53d8\u6210\u4e860\uff0c\u6700\u5927\u503c\u53d8\u6210\u4e861\uff0c\u8bf7\u770b\uff1a min_max_scaler = preprocessing . MinMaxScaler () x_minmax = min_max_scaler . fit_transform ( x ) print ( x_minmax ) ################################################################################ # \u540c\u6837\u7684\uff0c\u5982\u679c\u6709\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u6765\uff0c\u4e5f\u60f3\u505a\u540c\u6837\u7684\u8f6c\u6362\u548b\u529e\u5462\uff1f\u8bf7\u770b\uff1a x_test = np . array ([[ - 3. , - 1. , 4. ]]) x_test_minmax = min_max_scaler . transform ( x_test ) x_test_minmax ################################################################################ \u6267\u884c\u7ed3\u679c: [[ 0.5 0. 1. ] [ 1. 0.5 0.33333333 ] [ 0. 1. 0. ]] Out [ 23 ]: array ([[ - 1.5 , 0. , 1.66666667 ]]) MaxAbsScaler \u539f\u7406\u4e0e\u4e0a\u9762\u7684\u5f88\u50cf\uff0c\u53ea\u662f\u6570\u636e\u4f1a\u88ab\u89c4\u6a21\u5316\u5230 [ - 1 , 1 ] \u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u7279\u5f81\u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u9664\u4ee5\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u90a3\u4e9b\u5df2\u7ecf\u4e2d\u5fc3\u5316\u5747\u503c\u7ef4 0 \u6216\u8005\u7a00\u758f\u7684\u6570\u636e\u6709\u610f\u4e49\u3002 \u83ab\u51e1python\u7684\u6807\u51c6\u5316\u4f8b\u5b50:(\u4f7f\u7528\u6807\u51c6\u5316scale) #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 21:29:57 2019 @author: zzh \"\"\" from __future__ import print_function from sklearn import preprocessing #(\u9884\u5904\u7406) import numpy as np from sklearn.model_selection import train_test_split from sklearn.datasets.samples_generator import make_classification from sklearn.svm import SVC #svm\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5 import matplotlib.pyplot as plt a = np . array ([[ 10 , 2.7 , 3.6 ], [ - 100 , 5 , - 2 ], [ 120 , 20 , 40 ]], dtype = np . float64 ) print ( a ) print ( preprocessing . scale ( a )) X , y = make_classification ( n_samples = 300 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 22 , n_clusters_per_class = 1 , scale = 100 ) plt . scatter ( X [:, 0 ], X [:, 1 ], c = y ) plt . show () X = preprocessing . scale ( X ) # normalization step X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size =. 3 ) clf = SVC () #\u5efa\u6a21 clf . fit ( X_train , y_train ) #\u8bad\u7ec3 print ( clf . score ( X_test , y_test )) #\u8bc4\u4ef7\u5f97\u5206 \u6267\u884c\u7ed3\u679c:\u8bc4\u4ef7\u5f97\u5206 0.9555555555555556 \u4e0d\u4f7f\u7528scale: #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 21:29:57 2019 @author: zzh \"\"\" from __future__ import print_function from sklearn import preprocessing #(\u9884\u5904\u7406) import numpy as np from sklearn.model_selection import train_test_split from sklearn.datasets.samples_generator import make_classification from sklearn.svm import SVC #svm\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5 import matplotlib.pyplot as plt a = np . array ([[ 10 , 2.7 , 3.6 ], [ - 100 , 5 , - 2 ], [ 120 , 20 , 40 ]], dtype = np . float64 ) print ( a ) print ( preprocessing . scale ( a )) X , y = make_classification ( n_samples = 300 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 22 , n_clusters_per_class = 1 , scale = 100 ) plt . scatter ( X [:, 0 ], X [:, 1 ], c = y ) plt . show () #X = preprocessing.scale(X) # normalization step X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size =. 3 ) clf = SVC () clf . fit ( X_train , y_train ) print ( clf . score ( X_test , y_test )) \u6267\u884c\u7ed3\u679c:\u8bc4\u4ef7\u5f97\u5206 0.4888888888888889","title":"003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#sklearn","text":"Scikit learn \u4e5f\u7b80\u79f0 sklearn , \u662f\u673a\u5668\u5b66\u4e60\u9886\u57df\u5f53\u4e2d\u6700\u77e5\u540d\u7684 python \u6a21\u5757\u4e4b\u4e00. Sklearn \u5305\u542b\u4e86\u5f88\u591a\u79cd\u673a\u5668\u5b66\u4e60\u7684\u65b9\u5f0f: Classification \u5206\u7c7b Regression \u56de\u5f52 Clustering \u975e\u76d1\u7763\u5206\u7c7b Dimensionality reduction \u6570\u636e\u964d\u7ef4 Model Selection \u6a21\u578b\u9009\u62e9 Preprocessing \u6570\u636e\u9884\u5904\u7406","title":"Sklearn \u7b80\u4ecb"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#_1","text":"\u5b66\u4e60 Sklearn \u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u53bb\u7528\uff0c\u5148\u4e86\u89e3\u4e00\u4e0b\u90fd\u6709\u4ec0\u4e48\u6a21\u578b\u65b9\u6cd5\uff0c\u7136\u540e\u9009\u62e9\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u6765\u8fbe\u5230\u4f60\u7684\u76ee\u6807\u3002 Sklearn \u5b98\u7f51\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6d41\u7a0b\u56fe(\u82f1\u6587)\uff0c\u8fd9\u91cc\u627e\u4e86\u4e00\u5f20\u4e2d\u6587\u7684.\u84dd\u8272\u5706\u5708\u5185\u662f\u5224\u65ad\u6761\u4ef6\uff0c\u7eff\u8272\u65b9\u6846\u5185\u662f\u53ef\u4ee5\u9009\u62e9\u7684\u7b97\u6cd5\uff1a \u4ece \u5f00\u59cb\u4f4d\u7f6e \u5f00\u59cb\uff0c\u9996\u5148\u770b\u6570\u636e\u7684\u6837\u672c\u662f\u5426 >50\uff0c\u5c0f\u4e8e\u5219\u9700\u8981\u6536\u96c6\u66f4\u591a\u7684\u6570\u636e\u3002 \u7531\u56fe\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u7b97\u6cd5\u6709\u56db\u7c7b\uff0c\u5206\u7c7b\uff0c\u56de\u5f52\uff0c\u805a\u7c7b\uff0c\u964d\u7ef4\u3002 \u5176\u4e2d \u5206\u7c7b\u548c\u56de\u5f52\u662f\u76d1\u7763\u5f0f\u5b66\u4e60\uff0c\u5373\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u4e00\u4e2a label\u3002 \u805a\u7c7b \u662f\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\uff0c\u5373\u6ca1\u6709 label\u3002 \u53e6\u5916\u4e00\u7c7b\u662f \u964d\u7ef4\uff0c\u5f53\u6570\u636e\u96c6\u6709\u5f88\u591a\u5f88\u591a\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7 \u964d\u7ef4 \u7b97\u6cd5\u628a\u5c5e\u6027\u5f52\u7eb3\u8d77\u6765\u3002\u4f8b\u5982 20 \u4e2a\u5c5e\u6027\u53ea\u53d8\u6210 2 \u4e2a\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u6311\u51fa 2 \u4e2a\uff0c\u800c\u662f\u538b\u7f29\u6210\u4e3a 2 \u4e2a\uff0c\u5b83\u4eec\u96c6\u5408\u4e86 20 \u4e2a\u5c5e\u6027\u7684\u6240\u6709\u7279\u5f81\uff0c\u76f8\u5f53\u4e8e\u628a\u91cd\u8981\u7684\u4fe1\u606f\u63d0\u53d6\u7684\u66f4\u597d\uff0c\u4e0d\u91cd\u8981\u7684\u4fe1\u606f\u5c31\u4e0d\u8981\u4e86\u3002 \u7136\u540e\u770b\u95ee\u9898\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u95ee\u9898\uff0c\u662f\u5206\u7c7b\u8fd8\u662f\u56de\u5f52\uff0c\u8fd8\u662f\u805a\u7c7b\uff0c\u5c31\u9009\u62e9\u76f8\u5e94\u7684\u7b97\u6cd5\u3002 \u5f53\u7136\u8fd8\u8981\u8003\u8651\u6570\u636e\u7684\u5927\u5c0f\uff0c\u4f8b\u5982 100K \u662f\u4e00\u4e2a\u9608\u503c\u3002 \u53ef\u4ee5\u53d1\u73b0\u6709\u4e9b\u65b9\u6cd5\u662f\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u5206\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u56de\u5f52\uff0c\u4f8b\u5982 SGD\u3002","title":"\u9009\u62e9\u6a21\u578b\u6d41\u7a0b"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#_2","text":"Sklearn \u628a\u6240\u6709\u673a\u5668\u5b66\u4e60\u7684\u6a21\u5f0f\u6574\u5408\u7edf\u4e00\u8d77\u6765\u4e86\uff0c\u5b66\u4f1a\u4e86\u4e00\u4e2a\u6a21\u5f0f\u5c31\u53ef\u4ee5\u901a\u5403\u5176\u4ed6\u4e0d\u540c\u7c7b\u578b\u7684\u5b66\u4e60\u6a21\u5f0f\u3002 \u4f8b\u5982:\u5206\u7c7b\u5668\uff0c Sklearn \u672c\u8eab\u5c31\u6709\u5f88\u591a\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u7ec3\u4e60\u3002 \u6211\u4eec\u7528\u5176\u4e2d Iris \u7684\u6570\u636e\u4e3a\u4f8b\uff0c\u8fd9\u79cd\u82b1\u6709\u56db\u4e2a\u5c5e\u6027\uff0c\u82b1\u74e3\u7684\u957f\u5bbd\uff0c\u830e\u7684\u957f\u5bbd\uff0c\u6839\u636e\u8fd9\u4e9b\u5c5e\u6027\u628a\u82b1\u5206\u4e3a\u4e09\u7c7b\u3002 \u6211\u4eec\u8981\u7528 \u5206\u7c7b\u5668 \u53bb\u628a\u56db\u79cd\u7c7b\u578b\u7684\u82b1\u5206\u5f00\u3002 \u4eca\u5929\u7528 KNN classifier\uff0c\u5c31\u662f\u9009\u62e9\u51e0\u4e2a\u4e34\u8fd1\u70b9\uff0c\u7efc\u5408\u5b83\u4eec\u505a\u4e2a\u5e73\u5747\u6765\u4f5c\u4e3a\u9884\u6d4b\u503c\u3002","title":"\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50)"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#_3","text":"\u5bfc\u5165\u6a21\u5757 \u521b\u5efa\u6570\u636e \u5efa\u7acb\u6a21\u578b\uff0d\u8bad\u7ec3\uff0d\u9884\u6d4b \u6574\u4f53\u7684\u4ee3\u7801: #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 20:02:03 2019 @author: zzh \"\"\" #\u5bfc\u5165\u6a21\u5757 import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #scikit-learn K\u6700\u8fd1\u90bb\u5206\u7c7b\u5668(KNN\u7b97\u6cd5) KNeighborsClassifier \u4f7f\u7528 from sklearn.neighbors import KNeighborsClassifier #\u5bfc\u5165\u6570\u636e #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) print ( iris_X [: 2 ,:]) print ( iris_Y [ 0 : 2 ]) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #print(y_train) #\u521b\u5efaKNN\u6a21\u578b\u5bf9\u8c61 knn = KNeighborsClassifier () #\u5229\u7528knn\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3 knn . fit ( X_train , y_train ) #\u4f20\u5982\u7684\u662f\u8bad\u7ec3\u6570\u636e\u53ca\u6807\u7b7e #\u7528\u8bad\u7ec3\u597d\u7684model\u8fdb\u884c\u9884\u6d4b\u4f7f\u7528\u7684\u662fpredict\u51fd\u6570 print ( knn . predict ( X_test )) #\u9884\u6d4b\u51fa\u7684\u6807\u7b7e print ( y_test ) #\u5b9e\u9645\u7684\u6807\u7b7e","title":"\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#sklearn_1","text":"sklearn \u7684\u6570\u636e\u96c6\u6709\u597d\u591a\u4e2a\u79cd \u81ea\u5e26\u7684\u5c0f\u6570\u636e\u96c6\uff08packaged dataset\uff09\uff1asklearn.datasets.load_ \u53ef\u5728\u7ebf\u4e0b\u8f7d\u7684\u6570\u636e\u96c6\uff08Downloaded Dataset\uff09\uff1asklearn.datasets.fetch_ \u8ba1\u7b97\u673a\u751f\u6210\u7684\u6570\u636e\u96c6\uff08Generated Dataset\uff09\uff1asklearn.datasets.make_ svmlight/libsvm\u683c\u5f0f\u7684\u6570\u636e\u96c6:sklearn.datasets.load_svmlight_file(...) \u4ece\u4e70\u4e86data.org\u5728\u7ebf\u4e0b\u8f7d\u83b7\u53d6\u7684\u6570\u636e\u96c6:sklearn.datasets.fetch_mldata(...) \u2460\u81ea\u5e26\u7684\u6570\u636e\u96c6 \u5176\u4e2d\u7684\u81ea\u5e26\u7684\u5c0f\u7684\u6570\u636e\u96c6\u4e3a\uff1asklearn.datasets.load_ \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6load_digits()\uff1a\u7528\u4e8e\u591a\u5206\u7c7b\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u4e73\u817a\u764c\u6570\u636e\u96c6load-barest-cancer\uff08\uff09\uff1a\u7b80\u5355\u7ecf\u5178\u7684\u7528\u4e8e\u4e8c\u5206\u7c7b\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u7cd6\u5c3f\u75c5\u6570\u636e\u96c6\uff1aload-diabetes\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u56de\u5f52\u8ba4\u4e3a\u7684\u6570\u636e\u96c6\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd910\u4e2a\u7279\u5f81\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u90fd\u5df2\u7ecf\u88ab\u5904\u7406\u62100\u5747\u503c\uff0c\u65b9\u5dee\u5f52\u4e00\u5316\u7684\u7279\u5f81\u503c\uff0c \u6ce2\u58eb\u987f\u623f\u4ef7\u6570\u636e\u96c6\uff1aload-boston\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u56de\u5f52\u4efb\u52a1\u7684\u6570\u636e\u96c6 \u4f53\u80fd\u8bad\u7ec3\u6570\u636e\u96c6\uff1aload-linnerud\uff08\uff09\uff1a\u7ecf\u5178\u7684\u7528\u4e8e\u591a\u53d8\u91cf\u56de\u5f52\u4efb\u52a1\u7684\u6570\u636e\u96c6\uff0c\u5176\u5185\u90e8\u5305\u542b\u4e24\u4e2a\u5c0f\u6570\u636e\u96c6\uff1aExcise\u662f\u5bf93\u4e2a\u8bad\u7ec3\u53d8\u91cf\u768420\u6b21\u89c2\u6d4b\uff08\u4f53\u91cd\uff0c\u8170\u56f4\uff0c\u8109\u640f\uff09\uff0cphysiological\u662f\u5bf93\u4e2a\u751f\u7406\u5b66\u53d8\u91cf\u768420\u6b21\u89c2\u6d4b\uff08\u5f15\u4f53\u5411\u4e0a\uff0c\u4ef0\u5367\u8d77\u5750\uff0c\u7acb\u5b9a\u8df3\u8fdc\uff09 svmlight/libsvm\u7684\u6bcf\u4e00\u884c\u6837\u672c\u7684\u5b58\u653e\u683c\u5f0f\uff1a : : .... \u8fd9\u79cd\u683c\u5f0f\u6bd4\u8f83\u9002\u5408\u7528\u6765\u5b58\u653e\u7a00\u758f\u6570\u636e\uff0c\u5728sklearn\u4e2d\uff0c\u7528scipy sparse CSR\u77e9\u9635\u6765\u5b58\u653eX\uff0c\u7528numpy\u6570\u7ec4\u6765\u5b58\u653eY \u2461\u751f\u6210\u6570\u636e\u96c6 \u751f\u6210\u6570\u636e\u96c6\uff1a\u53ef\u4ee5\u7528\u6765\u5206\u7c7b\u4efb\u52a1\uff0c\u53ef\u4ee5\u7528\u6765\u56de\u5f52\u4efb\u52a1\uff0c\u53ef\u4ee5\u7528\u6765\u805a\u7c7b\u4efb\u52a1\uff0c\u7528\u4e8e\u6d41\u5f62\u5b66\u4e60\u7684\uff0c\u7528\u4e8e\u56e0\u5b50\u5206\u89e3\u4efb\u52a1\u7684 \u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u548c\u805a\u7c7b\u4efb\u52a1\u7684\uff1a\u8fd9\u4e9b\u51fd\u6570\u4ea7\u751f\u6837\u672c\u7279\u5f81\u5411\u91cf\u77e9\u9635\u4ee5\u53ca\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\u96c6\u5408 make_blobs\uff1a\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6\uff0c\u4e3a\u6bcf\u4e2a\u7c7b\u5206\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u592a\u5206\u5e03\u7684\u70b9\u96c6 make_classification\uff1a\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6\uff0c\u4e3a\u6bcf\u4e2a\u7c7b\u5206\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u592a\u5206\u5e03\u7684\u70b9\u96c6\uff0c\u63d0\u4f9b\u4e86\u4e3a\u6570\u636e\u6dfb\u52a0\u566a\u58f0\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\u7ef4\u5ea6\u76f8\u5173\u6027\uff0c\u65e0\u6548\u7279\u5f81\u4ee5\u53ca\u5197\u4f59\u7279\u5f81\u7b49 make_gaussian-quantiles\uff1a\u5c06\u4e00\u4e2a\u5355\u9ad8\u65af\u5206\u5e03\u7684\u70b9\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u6570\u91cf\u5747\u7b49\u7684\u70b9\u96c6\uff0c\u4f5c\u4e3a\u4e24\u7c7b make_hastie-10-2\uff1a\u4ea7\u751f\u4e00\u4e2a\u76f8\u4f3c\u7684\u4e8c\u5143\u5206\u7c7b\u6570\u636e\u96c6\uff0c\u670910\u4e2a\u7ef4\u5ea6 make_circle\u548cmake_moom\u4ea7\u751f\u4e8c\u7ef4\u4e8c\u5143\u5206\u7c7b\u6570\u636e\u96c6\u6765\u6d4b\u8bd5\u67d0\u4e9b\u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u4e3a\u6570\u636e\u96c6\u6dfb\u52a0\u566a\u58f0\uff0c\u53ef\u4ee5\u4e3a\u4e8c\u5143\u5206\u7c7b\u5668\u4ea7\u751f\u4e00\u4e9b\u7403\u5f62\u5224\u51b3\u754c\u9762\u7684\u6570\u636e \u4f8b\u5b50:\u7528\u5230\u4e86\u518d\u8bf4 #\u751f\u6210\u591a\u7c7b\u5355\u6807\u7b7e\u6570\u636e\u96c6 import numpy as np import matplotlib.pyplot as plt from sklearn.datasets.samples_generator import make_blobs center = [[ 1 , 1 ],[ - 1 , - 1 ],[ 1 , - 1 ]] cluster_std = 0.3 X , labels = make_blobs ( n_samples = 200 , centers = center , n_features = 2 , cluster_std = cluster_std , random_state = 0 ) print ( 'X.shape' , X . shape ) print ( \"labels\" , set ( labels )) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_blob()' ) plt . show () #\u751f\u6210\u7528\u4e8e\u5206\u7c7b\u7684\u6570\u636e\u96c6 from sklearn.datasets.samples_generator import make_classification X , labels = make_classification ( n_samples = 200 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 1 , n_clusters_per_class = 2 ) rng = np . random . RandomState ( 2 ) X += 2 * rng . uniform ( size = X . shape ) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_classification()' ) plt . show () #\u751f\u6210\u7403\u5f62\u5224\u51b3\u754c\u9762\u7684\u6570\u636e from sklearn.datasets.samples_generator import make_circles X , labels = make_circles ( n_samples = 200 , noise = 0.2 , factor = 0.2 , random_state = 1 ) print ( \"X.shape:\" , X . shape ) print ( \"labels:\" , set ( labels )) unique_lables = set ( labels ) colors = plt . cm . Spectral ( np . linspace ( 0 , 1 , len ( unique_lables ))) for k , col in zip ( unique_lables , colors ): x_k = X [ labels == k ] plt . plot ( x_k [:, 0 ], x_k [:, 1 ], 'o' , markerfacecolor = col , markeredgecolor = \"k\" , markersize = 14 ) plt . title ( 'data by make_moons()' ) plt . show () \u5c0f\u4f8b\u5b50:\u6ce2\u58eb\u987f\u623f\u4ef7,\u4ee5\u53ca\u751f\u6210\u4e00\u4e9b\u7ebf\u6027\u7684\u70b9 # -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" from __future__ import print_function from sklearn import datasets #\u4f7f\u7528\u7ebf\u6027\u56de\u5f52 from sklearn.linear_model import LinearRegression import matplotlib.pyplot as plt #\u52a0\u8f7d\u6570\u636e\u4f7f\u7528\u7684\u662fload,\u8fd9\u91cc\u4f7f\u7528\u7684\u662fboston\u623f\u4ef7\u7684\u6570\u636e loaded_data = datasets . load_boston () data_X = loaded_data . data #\u6570\u636e\u7279\u5f81 data_y = loaded_data . target #\u6570\u636e\u6807\u7b7e #\u521b\u5efa\u6a21\u578b model = LinearRegression () #\u8bad\u7ec3\u6a21\u578b model . fit ( data_X , data_y ) print ( model . predict ( data_X [: 4 , :])) #\u9884\u6d4b\u524d\u56db\u4e2a\u6570\u636e print ( data_y [: 4 ]) #\u81ea\u5df1\u751f\u6210\u6570\u636e_\u7ebf\u6027\u7684100\u4e2a\u6709\u4e00\u4e2a\u7279\u5f81,1\u4e2a\u6807\u7b7e,\u566a\u58f0\u4e3a10(\u65b9\u5dee\u5427)\u7684\u6570\u636e X , y = datasets . make_regression ( n_samples = 100 , n_features = 1 , n_targets = 1 , noise = 10 ) plt . scatter ( X , y ) #\u6563\u70b9\u56fe plt . show () \u6267\u884c\u7684\u7ed3\u679c:","title":"Sklearn\u4e2d\u7684\u6570\u636e\u96c6:"},{"location":"\u673a\u5668\u5b66\u4e60/003-sklearn\u5b66\u4e60,\u9009\u62e9\u6a21\u578b\u6d41\u7a0b,\u5e94\u7528\u6a21\u578b(\u9e22\u5c3e\u82b1\u7684\u4f8b\u5b50),\u4f7f\u7528\u6a21\u578b\u7684\u6b65\u9aa4\uff1a,Sklearn\u4e2d\u7684\u6570\u636e\u96c6-,\u9884\u5904\u7406\u6570\u636e/#sklearnmodel","text":"# -*- coding: utf-8 -*- \"\"\" Spyder Editor This is a temporary script file. \"\"\" from __future__ import print_function from sklearn import datasets from sklearn.linear_model import LinearRegression #(\u7ebf\u6027\u56de\u5f52) loaded_data = datasets . load_boston () data_X = loaded_data . data data_y = loaded_data . target model = LinearRegression () model . fit ( data_X , data_y ) print ( model . predict ( data_X [: 4 , :])) #\u9884\u6d4b print ( \"\u53c2\u6570w1-wn: \\n \" , model . coef_ ) #\u5047\u8bbe\u62df\u5408\u66f2\u7ebf\u65b9\u7a0by=0.1x+0.3 ,\u5219\u8f93\u51fa\u7684\u53c2\u6570\u662f0.1 print ( \"\u622a\u8dddw0: \\n \" , model . intercept_ ) #\u5047\u8bbe\u62df\u5408\u66f2\u7ebf\u65b9\u7a0by=0.1x+0.3 ,\u5219\u8f93\u51fa\u7684\u53c2\u6570\u662f0.3(\u622a\u8ddd) print ( model . get_params ()) #\u8fd4\u56de\u7684\u7ed9model\u5b9a\u4e49\u7684\u53c2\u6570,\u6ca1\u6709\u5b9a\u4e49\u5219\u662f\u9ed8\u8ba4\u503c #model\u5b66\u5230\u7684\u4e1c\u897f\u8fdb\u884c\u4e00\u4e2a\u6253\u5206(\u7528data_X\u4f5c\u9884\u6d4b,\u4e0edata_y\u4f5c\u5bf9\u6bd4\u770b\u4e00\u4e0b\u8ddf\u7ed3\u679c\u6709\u591a\u543b\u5408) #\u4f7f\u7528\u7684\u662f coefficient of determination (\u51b3\u5b9a\u7cfb\u6570) \u6765\u5224\u65ad \u56de\u5f52\u65b9\u7a0b \u62df\u5408\u7684\u7a0b\u5ea6 #\u51b3\u5b9a\u7cfb\u6570\u4e5f\u5c31\u662f\u8bf4: \u901a\u8fc7\u56de\u5f52\u65b9\u7a0b\u5f97\u51fa\u7684 dependent variable \u6709 number% \u80fd\u88ab independent variable \u6240\u89e3\u91ca. \u5224\u65ad\u62df\u5408\u7684\u7a0b\u5ea6 print ( model . score ( data_X , data_y )) # R^2 coefficient of determination ### \u9884\u5904\u7406\u6570\u636e \u5f53\u6211\u4eec\u62ff\u5230\u4e00\u6279\u539f\u59cb\u7684\u6570\u636e \u9996\u5148\u8981\u660e\u786e\u6709\u591a\u5c11\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u7c7b\u522b\u7684\u3002 \u68c0\u67e5\u6709\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5bf9\u7f3a\u5931\u7684\u7279\u5f81\u9009\u62e9\u6070\u5f53\u65b9\u5f0f\u8fdb\u884c\u5f25\u8865\uff0c\u4f7f\u6570\u636e\u5b8c\u6574\u3002 \u5bf9\u8fde\u7eed\u7684\u6570\u503c\u578b\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002 \u5bf9\u7c7b\u522b\u578b\u7684\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u3002 \u5c06\u9700\u8981\u8f6c\u6362\u6210\u7c7b\u522b\u578b\u6570\u636e\u7684\u8fde\u7eed\u578b\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\u3002 \u4e3a\u9632\u6b62\u8fc7\u62df\u5408\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u9009\u62e9\u662f\u5426\u8981\u5c06\u6570\u636e\u8fdb\u884c\u6b63\u5219\u5316\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u63a2\u4e4b\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u4f73\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u9879\u5f0f\u65b9\u6cd5\uff0c\u5bfb\u627e\u975e\u7ebf\u6027\u7684\u5173\u7cfb\u3002 \u6839\u636e\u5b9e\u9645\u95ee\u9898\u5206\u6790\u662f\u5426\u9700\u8981\u5bf9\u7279\u5f81\u8fdb\u884c\u76f8\u5e94\u7684\u51fd\u6570\u8f6c\u6362\u3002 \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1. \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 \u5728sklearn.preprocessing(\u9884\u5904\u7406)\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd \u4f8b: # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 18:44:39 2019 @author: zangz \"\"\" # \u9884\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u603b\u7ed3\uff08\u4f7f\u7528sklearn-preprocessing\uff09 from sklearn import preprocessing import numpy as np # 1. \u6807\u51c6\u5316\uff1a\u53bb\u5747\u503c\uff0c\u65b9\u5dee\u89c4\u6a21\u5316 # \u521b\u5efa\u4e00\u7ec4\u7279\u5f81\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 # Standardization\u6807\u51c6\u5316:\u5c06\u7279\u5f81\u6570\u636e\u7684\u5206\u5e03\u8c03\u6574\u6210\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u4e5f\u53eb\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6570\u636e\u7684\u5747\u503c\u7ef40\uff0c\u65b9\u5dee\u4e3a1. # \u6807\u51c6\u5316\u7684\u539f\u56e0\u5728\u4e8e\u5982\u679c\u6709\u4e9b\u7279\u5f81\u7684\u65b9\u5dee\u8fc7\u5927\uff0c\u5219\u4f1a\u4e3b\u5bfc\u76ee\u6807\u51fd\u6570\u4ece\u800c\u4f7f\u53c2\u6570\u4f30\u8ba1\u5668\u65e0\u6cd5\u6b63\u786e\u5730\u53bb\u5b66\u4e60\u5176\u4ed6\u7279\u5f81\u3002 # \u6807\u51c6\u5316\u7684\u8fc7\u7a0b\u4e3a\u4e24\u6b65\uff1a\u53bb\u5747\u503c\u7684\u4e2d\u5fc3\u5316\uff08\u5747\u503c\u53d8\u4e3a0\uff09\uff1b\u65b9\u5dee\u7684\u89c4\u6a21\u5316\uff08\u65b9\u5dee\u53d8\u4e3a1\uff09\u3002 # \u5728sklearn.preprocessing\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2ascale\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\u3002 x = np . array ([[ 1. , - 1. , 2. ], [ 2. , 0. , 0. ], [ 0. , 1. , - 1. ]]) # \u5c06\u6bcf\u4e00\u5217\u7279\u5f81\u6807\u51c6\u5316\u4e3a\u6807\u51c6\u6b63\u592a\u5206\u5e03\uff0c\u6ce8\u610f\uff0c\u6807\u51c6\u5316\u662f\u9488\u5bf9\u6bcf\u4e00\u5217\u800c\u8a00\u7684 x_scale = preprocessing . scale ( x ) print ( \"\u672a\u6807\u51c6\u5316\u7684\u6570\u636e: \\n \" , x ) print ( '\u6807\u51c6\u5316\u540e\u7684\u6570\u636e: \\n ' , x_scale ) print ( \"\u77e9\u9635\u7684\u7ef4\u5ea6: \\n \" , x_scale . shape ) # \u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u7684\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5df2\u7ecf\u53d8\u62100,1\u4e86 # axis=0 \u8868\u793a\u5bf9\u6bcf\u4e00\u5217 # axis=1\u8868\u793a\u5bf9\u6bcf\u4e00\u884c\u53bb\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0caxis=0\u8868\u793a\u5bf9\u6bcf\u4e00\u5217\u505a\u76f8\u540c\u7684\u8fd9\u4e2a\u64cd\u4f5c print ( \"\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u5747\u503c: \\n \" , x_scale . mean ( axis = 0 )) # \u540c\u7406\uff0c\u770b\u4e00\u4e0b\u6807\u51c6\u5dee print ( \"\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee: \\n \" , x_scale . std ( axis = 0 )) \u6267\u884c\u7ed3\u679c: \u672a\u6807\u51c6\u5316\u7684\u6570\u636e : [[ 1. - 1. 2. ] [ 2. 0. 0. ] [ 0. 1. - 1. ]] \u6807\u51c6\u5316\u540e\u7684\u6570\u636e : [[ 0. - 1.22474487 1.33630621 ] [ 1.22474487 0. - 0.26726124 ] [ - 1.22474487 1.22474487 - 1.06904497 ]] \u77e9\u9635\u7684\u7ef4\u5ea6 : ( 3 , 3 ) \u77e9\u9635\u6bcf\u4e00\u5217\u7684\u5747\u503c : [ 0. 0. 0. ] \u77e9\u9635\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee : [ 1. 1. 1. ] preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # preprocessing\u8fd9\u4e2a\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7c7bStandarScaler\uff0c\u5b83\u53ef\u4ee5\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u505a\u4e86\u6807\u51c6\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\uff0c\u628a\u76f8\u540c\u7684\u8f6c\u6362\u5e94\u7528\u5230\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u4e2d\u3002 # \u8fd9\u662f\u76f8\u5f53\u597d\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u53ef\u4ee5\u5bf9\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff0c\u4ee5\u540e\u6709\u65b0\u7684\u6570\u636e\u8fdb\u6765\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u7528\u518d\u91cd\u65b0\u628a\u6570\u636e\u653e\u5728\u4e00\u8d77\u518d\u8ba1\u7b97\u4e00\u6b21\u4e86\u3002 # \u8c03\u7528fit\u65b9\u6cd5\uff0c\u6839\u636e\u5df2\u6709\u7684\u8bad\u7ec3\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u8f6c\u6362\u5668 # \u53e6\u5916\uff0cStandardScaler()\u4e2d\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1awith_mean,with_std.\u8fd9\u4e24\u4e2a\u90fd\u662f\u5e03\u5c14\u578b\u7684\u53c2\u6570\uff0c # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u662ftrue,\u4f46\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6210false.\u5373\u4e0d\u8981\u5747\u503c\u4e2d\u5fc3\u5316\u6216\u8005\u4e0d\u8981\u65b9\u5dee\u89c4\u6a21\u5316\u4e3a1. scaler = preprocessing . StandardScaler () . fit ( x ) #\u5b9e\u4f8b\u5316\u5bf9\u8c61 scaler \u6267\u884c\u7ed3\u679c: StandardScaler ( copy = True , with_mean = True , with_std = True ) # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5 x_tran = scaler . transform ( x ) #x\u6570\u636e\u65f6\u4e0d\u4f1a\u53d8\u7684,\u53ea\u80fd\u628a\u53d8\u5316\u7684\u6570\u636e\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf print ( x_tran ) ######################################## # \u597d\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u53c8\u6765\u4e86\u4e00\u7ec4\u65b0\u7684\u6837\u672c\uff0c\u4e5f\u60f3\u5f97\u5230\u76f8\u540c\u7684\u8f6c\u6362 new_x = [[ - 1. , 1. , 0. ]] scaler . transform ( new_x ) ################################## \u6267\u884c\u7ed3\u679c: [[ 0. - 1.22474487 1.33630621 ] [ 1.22474487 0. - 0.26726124 ] [ - 1.22474487 1.22474487 - 1.06904497 ]] Out [ 18 ]: array ([[ - 2.44948974 , 1.22474487 , - 0.26726124 ]]) # MinMaxScaler # \u5728MinMaxScaler\u4e2d\u662f\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u660e\u786e\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a # X_std = (X - X.min(axis=0)) / (X.max(axis=0) - X.min(axis=0)) # X_scaled = X_std / (max - min) + min # \u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06\u6570\u636e\u89c4\u4e0e[0,1]\u4e4b\u95f4\uff0c\u6bcf\u4e2a\u7279\u5f81\u4e2d\u7684\u6700\u5c0f\u503c\u53d8\u6210\u4e860\uff0c\u6700\u5927\u503c\u53d8\u6210\u4e861\uff0c\u8bf7\u770b\uff1a min_max_scaler = preprocessing . MinMaxScaler () x_minmax = min_max_scaler . fit_transform ( x ) print ( x_minmax ) ################################################################################ # \u540c\u6837\u7684\uff0c\u5982\u679c\u6709\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u6765\uff0c\u4e5f\u60f3\u505a\u540c\u6837\u7684\u8f6c\u6362\u548b\u529e\u5462\uff1f\u8bf7\u770b\uff1a x_test = np . array ([[ - 3. , - 1. , 4. ]]) x_test_minmax = min_max_scaler . transform ( x_test ) x_test_minmax ################################################################################ \u6267\u884c\u7ed3\u679c: [[ 0.5 0. 1. ] [ 1. 0.5 0.33333333 ] [ 0. 1. 0. ]] Out [ 23 ]: array ([[ - 1.5 , 0. , 1.66666667 ]]) MaxAbsScaler \u539f\u7406\u4e0e\u4e0a\u9762\u7684\u5f88\u50cf\uff0c\u53ea\u662f\u6570\u636e\u4f1a\u88ab\u89c4\u6a21\u5316\u5230 [ - 1 , 1 ] \u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u7279\u5f81\u4e2d\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u9664\u4ee5\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u90a3\u4e9b\u5df2\u7ecf\u4e2d\u5fc3\u5316\u5747\u503c\u7ef4 0 \u6216\u8005\u7a00\u758f\u7684\u6570\u636e\u6709\u610f\u4e49\u3002 \u83ab\u51e1python\u7684\u6807\u51c6\u5316\u4f8b\u5b50:(\u4f7f\u7528\u6807\u51c6\u5316scale) #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 21:29:57 2019 @author: zzh \"\"\" from __future__ import print_function from sklearn import preprocessing #(\u9884\u5904\u7406) import numpy as np from sklearn.model_selection import train_test_split from sklearn.datasets.samples_generator import make_classification from sklearn.svm import SVC #svm\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5 import matplotlib.pyplot as plt a = np . array ([[ 10 , 2.7 , 3.6 ], [ - 100 , 5 , - 2 ], [ 120 , 20 , 40 ]], dtype = np . float64 ) print ( a ) print ( preprocessing . scale ( a )) X , y = make_classification ( n_samples = 300 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 22 , n_clusters_per_class = 1 , scale = 100 ) plt . scatter ( X [:, 0 ], X [:, 1 ], c = y ) plt . show () X = preprocessing . scale ( X ) # normalization step X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size =. 3 ) clf = SVC () #\u5efa\u6a21 clf . fit ( X_train , y_train ) #\u8bad\u7ec3 print ( clf . score ( X_test , y_test )) #\u8bc4\u4ef7\u5f97\u5206 \u6267\u884c\u7ed3\u679c:\u8bc4\u4ef7\u5f97\u5206 0.9555555555555556 \u4e0d\u4f7f\u7528scale: #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\" Created on Tue Apr 23 21:29:57 2019 @author: zzh \"\"\" from __future__ import print_function from sklearn import preprocessing #(\u9884\u5904\u7406) import numpy as np from sklearn.model_selection import train_test_split from sklearn.datasets.samples_generator import make_classification from sklearn.svm import SVC #svm\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5 import matplotlib.pyplot as plt a = np . array ([[ 10 , 2.7 , 3.6 ], [ - 100 , 5 , - 2 ], [ 120 , 20 , 40 ]], dtype = np . float64 ) print ( a ) print ( preprocessing . scale ( a )) X , y = make_classification ( n_samples = 300 , n_features = 2 , n_redundant = 0 , n_informative = 2 , random_state = 22 , n_clusters_per_class = 1 , scale = 100 ) plt . scatter ( X [:, 0 ], X [:, 1 ], c = y ) plt . show () #X = preprocessing.scale(X) # normalization step X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size =. 3 ) clf = SVC () clf . fit ( X_train , y_train ) print ( clf . score ( X_test , y_test )) \u6267\u884c\u7ed3\u679c:\u8bc4\u4ef7\u5f97\u5206 0.4888888888888889","title":"sklearn\u4e2dmodel\u5e38\u7528\u7684\u5c5e\u6027\u548c\u529f\u80fd"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/","text":"\u8fd9\u4e00\u7bc7\uff0c\u6211\u4eec\u5c06\u5bf9sklearn\u4e2d\u6709\u5173\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\u8fdb\u884c\u8bb2\u89e3\u3002 \u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a 1.PCA\u7b97\u6cd5 2.LDA\u7b97\u6cd5 3.\u7ebf\u6027\u56de\u5f52 4.\u903b\u8f91\u56de\u5f52 5.\u6734\u7d20\u8d1d\u53f6\u65af 6.\u51b3\u7b56\u6811 7.SVM 8.\u795e\u7ecf\u7f51\u7edc 9.KNN\u7b97\u6cd5 \u662f\u4e0d\u662f\u611f\u89c9\u5e72\u8d27\u6ee1\u6ee1\u554a\uff01Let's get moving!!! \u7279\u5f81\u63d0\u53d6 \u00b6 \u6211\u4eec\u83b7\u53d6\u7684\u6570\u636e\u4e2d\u5f88\u591a\u6570\u636e\u5f80\u5f80\u6709\u5f88\u591a\u7ef4\u5ea6\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7ef4\u5ea6\u90fd\u662f\u6709\u7528\u7684\uff0c\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u5bf9\u7ed3\u679c\u5f71\u54cd\u8f83\u5c0f\u7684\u7ef4\u5ea6\u820d\u53bb\uff0c\u4fdd\u7559\u5bf9\u7ed3\u679c\u5f71\u54cd\u8f83\u5927\u7684\u7ef4\u5ea6\u3002 PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09\u4e0eLDA\uff08\u7ebf\u6027\u8bc4\u4ef7\u5206\u6790\uff09\u662f\u7279\u5f81\u63d0\u53d6\u7684\u4e24\u79cd\u7ecf\u5178\u7b97\u6cd5\u3002PCA\u4e0eLDA\u672c\u8d28\u4e0a\u90fd\u662f\u5b66\u4e60\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\uff0c\u4f7f\u6837\u672c\u5728\u65b0\u7684\u5750\u6807\u7cfb\u4e0a\u7684\u8868\u793a\u5177\u6709\u76f8\u5e94\u7684\u7279\u6027\uff0c\u6837\u672c\u5728\u65b0\u5750\u6807\u7cfb\u7684\u5750\u6807\u76f8\u5f53\u4e8e\u65b0\u7684\u7279\u5f81\uff0c\u4fdd\u7559\u4e0b\u7684\u65b0\u7279\u5f81\u5e94\u5f53\u662f\u5bf9\u7ed3\u679c\u6709\u8f83\u5927\u5f71\u54cd\u7684\u7279\u5f81\u3002 PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09 \u00b6 \u6700\u5927\u65b9\u5dee\u7406\u8bba\uff1a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u5177\u6709\u8f83\u5c0f\u7684\u65b9\u5dee PCA\u7684\u76ee\u6807\uff1a\u65b0\u5750\u6807\u7cfb\u4e0a\u6570\u636e\u7684\u65b9\u5dee\u8d8a\u5927\u8d8a\u597d PCA\u662f\u65e0\u76d1\u7763\u7684\u5b66\u4e60\u65b9\u6cd5 PCA\u5b9e\u73b0\u8d77\u6765\u5e76\u4e0d\u590d\u6742\uff08\u8fc7\u51e0\u5929\u5199\u4e00\u7bc7\u4f7f\u7528NumPy\u5b9e\u73b0\u7684PCA\uff09\uff0c\u4f46\u662f\u5728sklearn\u5c31\u66f4\u4e3a\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u98df\u7528skleran.decomposition\u5373\u53ef # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 21:54:33 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5bfc\u5165pca\u7684\u6a21\u5757 import sklearn.decomposition as sk_decomposition #\u5bfc\u5165\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u521b\u5efa\u6a21\u578b pca = sk_decomposition . PCA ( n_components = 'mle' , whiten = False , svd_solver = 'auto' ) #\u8bad\u7ec3\u6a21\u578b pca . fit ( iris_X ) # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5 reduced_X = pca . transform ( iris_X ) #reduced_X\u4e3a\u964d\u7ef4\u540e\u7684\u6570\u636e print ( 'PCA:' ) print ( '\u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c\u5360\u603b\u65b9\u5dee\u503c\u7684\u6bd4\u4f8b' , pca . explained_variance_ratio_ ) print ( '\u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c' , pca . explained_variance_ ) print ( '\u964d\u7ef4\u540e\u7684\u7279\u5f81\u6570' , pca . n_components_ ) \u53c2\u6570\u8bf4\u660e\uff1a n_components\uff1a\u6307\u5b9a\u5e0c\u671bPCA\u964d\u7ef4\u540e\u7684\u7279\u5f81\u7ef4\u5ea6\u6570\u76ee(>1)\uff0c \u6307\u5b9a\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u548c\u6240\u5360\u7684\u6700\u5c0f\u6bd4\u4f8b\u9608\u503c\uff080-1\uff09\uff0c'mle'\u7528MLE\u7b97\u6cd5\u6839\u636e\u7279\u5f81\u7684\u65b9\u5dee\u5206\u5e03\u60c5\u51b5\u81ea\u5df1\u53bb\u9009\u62e9\u4e00\u5b9a\u6570\u91cf\u7684\u4e3b\u6210\u5206\u7279\u5f81\u6765\u964d\u7ef4 whiten\uff1a \u5224\u65ad\u662f\u5426\u8fdb\u884c\u767d\u5316\u3002\u767d\u5316\uff1a\u964d\u7ef4\u540e\u7684\u6570\u636e\u7684\u6bcf\u4e2a\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u8ba9\u65b9\u5dee\u90fd\u4e3a1 svd_solver\uff1a\u5947\u5f02\u503c\u5206\u89e3SVD\u7684\u65b9\u6cd5{\u2018auto\u2019, \u2018full\u2019, \u2018arpack\u2019, \u2018randomized\u2019} \u6253\u5370\u7ed3\u679c: \u4e0b\u9762\u6253\u5370\u7684\u5185\u5bb9\u53ea\u662f\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3pca\u7684\u53c2\u6570\uff0c\u5c31\u4e0d\u6253\u5370\u964d\u7ef4\u540e\u7684\u6570\u636e\u4e86\uff0c\u6253\u5370\u51fa\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002 PCA : \u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c\u5360\u603b\u65b9\u5dee\u503c\u7684\u6bd4\u4f8b [ 0.92461621 0.05301557 0.01718514 ] \u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c [ 4.22484077 0.24224357 0.07852391 ] \u964d\u7ef4\u540e\u7684\u7279\u5f81\u6570 3 LDA\uff08\u7ebf\u6027\u8bc4\u4ef7\u5206\u6790\uff09 \u00b6 LDA\u57fa\u4e8e\u8d39\u820d\u5c14\u51c6\u5219\uff0c\u5373\u540c\u4e00\u7c7b\u6837\u672c\u5c3d\u53ef\u80fd\u805a\u5408\u5728\u4e00\u8d77\uff0c\u4e0d\u540c\u7c7b\u6837\u672c\u5e94\u8be5\u5c3d\u91cf\u6269\u6563\uff1b\u6216\u8005\u8bf4\uff0c\u540c\u7c7b\u5185\u5177\u6709\u8f83\u597d\u7684\u805a\u5408\u5ea6\uff0c\u7c7b\u522b\u95f4\u5177\u6709\u8f83\u597d\u7684\u6269\u6563\u5ea6\u3002 \u65e2\u7136\u6d89\u53ca\u5230\u4e86\u7c7b\u522b\uff0c\u90a3\u4e48LDA\u80af\u5b9a\u662f\u4e00\u4e2a\u6709\u76d1\u7763\u7b97\u6cd5\uff0c\u5176\u5b9eLDA\u65e2\u53ef\u4ee5\u505a\u7279\u5f81\u63d0\u53d6\u4e5f\u53ef\u4ee5\u505a\u5206\u7c7b\u3002 LDA\u5177\u4f53\u7684\u5b9e\u73b0\u6d41\u7a0b\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u76f4\u63a5\u770bskleran\u5982\u4f55\u5b9e\u73b0LDA\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 22:13:29 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets from sklearn.model_selection import train_test_split #\u5bfc\u5165\u4f7f\u7528:LDA\u7684\u6a21\u5757 import sklearn.discriminant_analysis as sk_discriminant_analysis #\u5bfc\u5165\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u5efa\u7acbLDA\u6a21\u578b lda = sk_discriminant_analysis . LinearDiscriminantAnalysis ( n_components = 2 ) #\u8bad\u7ec3\u6a21\u578b(\u4f7f\u7528\u8bad\u7ec3\u6570\u636e) lda . fit ( X_train , y_train ) reduced_X = lda . transform ( iris_X ) #reduced_X\u4e3a\u964d\u7ef4\u540e\u7684\u6570\u636e print ( 'LDA:' ) print ( 'LDA\u7684\u6570\u636e\u4e2d\u5fc3\u70b9:' , lda . means_ ) #\u4e2d\u5fc3\u70b9 print ( 'LDA\u505a\u5206\u7c7b\u65f6\u7684\u6b63\u786e\u7387:' , lda . score ( X_test , y_test )) #score\u662f\u6307\u5206\u7c7b\u7684\u6b63\u786e\u7387 print ( 'LDA\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3:' , lda . scalings_ ) #\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3 \u53c2\u6570\u8bf4\u660e\uff1a n_components\uff1a\u6307\u5b9a\u5e0c\u671bPCA\u964d\u7ef4\u540e\u7684\u7279\u5f81\u7ef4\u5ea6\u6570\u76ee(>1) svd_solver\uff1a\u5947\u5f02\u503c\u5206\u89e3SVD\u7684\u65b9\u6cd5{\u2018auto\u2019, \u2018full\u2019, \u2018arpack\u2019, \u2018randomized\u2019} \u6253\u5370\u7ed3\u679c: \u4e0b\u9762\u6253\u5370\u7684\u5185\u5bb9\u53ea\u662f\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3lda\u7684\u53c2\u6570\uff0c\u5c31\u4e0d\u6253\u5370\u964d\u7ef4\u540e\u7684\u6570\u636e\u4e86\uff0c\u6253\u5370\u51fa\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002 LDA : LDA\u7684\u6570\u636e\u4e2d\u5fc3\u70b9 : [[ 5.00294118 3.45588235 1.43823529 0.24411765 ] [ 5.96111111 2.78888889 4.35833333 1.36111111 ] [ 6.56857143 3. 5.55428571 2.03714286 ]] LDA\u505a\u5206\u7c7b\u65f6\u7684\u6b63\u786e\u7387 : 0.9777777777777777 LDA\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3 : [[ - 0.67612774 0.08223592 ] [ - 1.69411935 2.00705368 ] [ 2.27193737 - 1.11662635 ] [ 2.95645633 3.1900014 ]] \u5e38\u7528\u6a21\u578b \u00b6 \u673a\u5668\u5b66\u4e60\u5e38\u7528\u7684\u7b97\u6cd5\u4e5f\u5c31\u90a3\u51e0\u4e2a\uff0csklearn\u4e2d\u5bf9\u5176\u90fd\u505a\u4e86\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u5373\u53ef\u3002\u4e0b\u9762\u6bcf\u4e00\u4e2a\u7b97\u6cd5\u7684\u539f\u7406\u6211\u5c31\u4e0d\u7ec6\u8bb2\u4e86\uff0c\u53ea\u8bb2\u600e\u4e48\u7528. \u9996\u5148sklearn\u4e2d\u6240\u6709\u7684\u6a21\u578b\u90fd\u6709\u56db\u4e2a\u56fa\u5b9a\u4e14\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u5728PCA\u4e0eLDA\u4e2d\u6211\u4eec\u5df2\u7ecf\u7528\u5230\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684fit\u65b9\u6cd5\u3002 # \u62df\u5408\u6a21\u578b model . fit ( X_train , y_train ) # \u6a21\u578b\u9884\u6d4b model . predict ( X_test ) # \u83b7\u5f97\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570 model . get_params () # \u4e3a\u6a21\u578b\u8fdb\u884c\u6253\u5206 model . score ( data_X , data_y ) # \u56de\u5f52\u95ee\u9898\uff1a\u4ee5R2\u53c2\u6570\u4e3a\u6807\u51c6 \u5206\u7c7b\u95ee\u9898\uff1a\u4ee5\u51c6\u786e\u7387\u4e3a\u6807\u51c6 \u7ebf\u6027\u56de\u5f52 \u00b6 \u7ebf\u6027\u56de\u5f52\u662f\u5229\u7528\u6570\u7406\u7edf\u8ba1\u4e2d\u56de\u5f52\u5206\u6790\uff0c\u6765\u786e\u5b9a\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u53d8\u91cf\u95f4\u76f8\u4e92\u4f9d\u8d56\u7684\u5b9a\u91cf\u5173\u7cfb\u7684\u4e00\u79cd\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\uff0c\u8fd0\u7528\u5341\u5206\u5e7f\u6cdb\u3002\u5176\u8868\u8fbe\u5f62\u5f0f\u4e3a y = w'x+e \uff0ce\u4e3a\u8bef\u5dee\u670d\u4ece\u5747\u503c\u4e3a0\u7684\u6b63\u6001\u5206\u5e03\u3002 \u56de\u5f52\u5206\u6790\u4e2d\uff0c\u53ea\u5305\u62ec\u4e00\u4e2a\u81ea\u53d8\u91cf\u548c\u4e00\u4e2a\u56e0\u53d8\u91cf\uff0c\u4e14\u4e8c\u8005\u7684\u5173\u7cfb\u53ef\u7528\u4e00\u6761\u76f4\u7ebf\u8fd1\u4f3c\u8868\u793a\uff0c\u8fd9\u79cd\u56de\u5f52\u5206\u6790\u79f0\u4e3a\u4e00\u5143\u7ebf\u6027\u56de\u5f52\u5206\u6790\u3002\u5982\u679c\u56de\u5f52\u5206\u6790\u4e2d\u5305\u62ec\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u81ea\u53d8\u91cf\uff0c\u4e14\u56e0\u53d8\u91cf\u548c\u81ea\u53d8\u91cf\u4e4b\u95f4\u662f\u7ebf\u6027\u5173\u7cfb\uff0c\u5219\u79f0\u4e3a\u591a\u5143\u7ebf\u6027\u56de\u5f52\u5206\u6790\u3002 \u5176\u5b9e\uff0c\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u7528\u4e00\u6761\u76f4\u7ebf\u53bb\u62df\u5408\u4e00\u5927\u5806\u6570\u636e\uff0c\u6700\u540e\u628a\u7cfb\u6570w\u548c\u622a\u8dddb\u7b97\u51fa\u6765\uff0c\u76f4\u7ebf\u4e5f\u5c31\u7b97\u51fa\u6765\u4e86\uff0c \u5c31\u53ef\u4ee5\u62ff\u53bb\u505a\u9884\u6d4b\u4e86\u3002 sklearn\u4e2d\u7ebf\u6027\u56de\u5f52\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u5b9e\u73b0\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002 \u7ebf\u6027\u56de\u5f52\u662f\u56de\u5f52\u95ee\u9898\uff0cscore\u4f7f\u7528R2\u7cfb\u6570\u505a\u4e3a\u8bc4\u4ef7\u6807\u51c6\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:47:00 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split import sklearn.linear_model as sk_linear #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train,X_test,y_train,y_test=train_test_split(iris_X,iris_Y,test_size=0.3) #\u521b\u5efa\u6a21\u578b model = sk_linear.LinearRegression(fit_intercept=True,normalize=False,copy_X=True,n_jobs=1) #\u8bad\u7ec3\u6a21\u578b model.fit(X_train,y_train) #\u8bc4\u4ef7\u6a21\u578b acc=model.score(X_test,y_test) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print('\u7ebf\u6027\u56de\u5f52:') print('\u622a\u8ddd:',model.intercept_) #\u8f93\u51fa\u622a\u8ddd print('\u7cfb\u6570:',model.coef_) #\u8f93\u51fa\u7cfb\u6570 print('\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7:',acc) \u53c2\u6570\u8bf4\u660e\uff1a fit_intercept\uff1a\u662f\u5426\u8ba1\u7b97\u622a\u8ddd\u3002False-\u6a21\u578b\u6ca1\u6709\u622a\u8ddd normalize\uff1a \u5f53fit_intercept\u8bbe\u7f6e\u4e3aFalse\u65f6\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u4e3a\u771f\uff0c\u5219\u56de\u5f52\u524d\u7684\u56de\u5f52\u7cfb\u6570X\u5c06\u901a\u8fc7\u51cf\u53bb\u5e73\u5747\u503c\u5e76\u9664\u4ee5l2-\u8303\u6570\u800c\u5f52\u4e00\u5316\u3002 copy_X\uff1a\u662f\u5426\u5bf9X\u6570\u7ec4\u8fdb\u884c\u590d\u5236,\u9ed8\u8ba4\u4e3aTrue n_jobs\uff1a\u6307\u5b9a\u7ebf\u7a0b\u6570 \u6253\u5370\u7ed3\u679c\uff1a \u7ebf\u6027\u56de\u5f52 : \u622a\u8ddd : 0.360007142807655 \u7cfb\u6570 : [ - 0.23016056 0.04521955 0.33913525 0.47029646 ] \u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7 : 0.9252305022245975 \u903b\u8f91\u56de\u5f52 \u00b6 logistic\u56de\u5f52\u662f\u4e00\u79cd\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\uff08generalized linear model\uff09\uff0c\u56e0\u6b64\u4e0e\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u5206\u6790\u6709\u5f88\u591a\u76f8\u540c\u4e4b\u5904\u3002\u5b83\u4eec\u7684\u6a21\u578b\u5f62\u5f0f\u57fa\u672c\u4e0a\u76f8\u540c\uff0c\u90fd\u5177\u6709 w\u2018x+b \uff0c\u5176\u4e2dw\u548cb\u662f\u5f85\u6c42\u53c2\u6570\uff0c\u5176\u533a\u522b\u5728\u4e8e\u4ed6\u4eec\u7684** \u56e0\u53d8\u91cf \u4e0d\u540c\uff0c\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u76f4\u63a5\u5c06w\u2018x+b\u4f5c\u4e3a\u56e0\u53d8\u91cf\uff0c\u5373y =w\u2018x+b\uff0c\u800clogistic\u56de\u5f52\u5219\u901a\u8fc7\u51fd\u6570L\u5c06w\u2018x+b\u5bf9\u5e94\u4e00\u4e2a\u9690\u72b6\u6001 p \uff0cp =L(w\u2018x+b),\u7136\u540e\u6839\u636ep \u4e0e1-p\u7684\u5927\u5c0f\u51b3\u5b9a\u56e0\u53d8\u91cf\u7684\u503c\u3002\u5982\u679cL\u662flogistic\u51fd\u6570\uff0c\u5c31\u662flogistic\u56de\u5f52\uff0c\u5982\u679cL\u662f\u591a\u9879\u5f0f\u51fd\u6570\u5c31\u662f\u591a\u9879\u5f0f\u56de\u5f52\u3002 \u8bf4\u4eba\u8bdd\uff1a**\u7ebf\u6027\u56de\u5f52\u662f\u56de\u5f52\uff0c\u903b\u8f91\u56de\u5f52\u662f\u5206\u7c7b\u3002\u903b\u8f91\u56de\u5f52\u901a\u8fc7logistic\u51fd\u6570\u7b97\u6982\u7387\uff0c\u7136\u540e\u7b97\u51fa\u6765\u4e00\u4e2a\u6837\u672c\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u6982\u7387\u8d8a\u5927\u8d8a\u53ef\u80fd\u662f\u8fd9\u4e2a\u7c7b\u7684\u6837\u672c \u3002 sklearn\u5bf9\u4e8e\u903b\u8f91\u56de\u5f52\u7684\u5b9e\u73b0\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\u3002 \u903b\u8f91\u56de\u5f52\u662f\u5206\u7c7b\u95ee\u9898\uff0cscore\u4f7f\u7528\u51c6\u786e\u7387\u505a\u4e3a\u8bc4\u4ef7\u6807\u51c6\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:53:41 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:47:00 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u903b\u8f91\u56de\u5f52\u7684\u5305 import sklearn.linear_model as sk_linear #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train,X_test,y_train,y_test=train_test_split(iris_X,iris_Y,test_size=0.3) #\u521b\u5efa\u6a21\u578b model = sk_linear.LogisticRegression(penalty='l2',dual=False,C=1.0,n_jobs=1,random_state=20,fit_intercept=True,solver='lbfgs') #\u8bad\u7ec3\u6a21\u578b model.fit(X_train,y_train) #\u8bc4\u4ef7\u6a21\u578b acc=model.score(X_test,y_test) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print('\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7:',acc) \u53c2\u6570\u8bf4\u660e\uff1a penalty\uff1a\u4f7f\u7528\u6307\u5b9a\u6b63\u5219\u5316\u9879\uff08\u9ed8\u8ba4\uff1al2\uff09 dual: n_samples > n_features\u53d6False\uff08\u9ed8\u8ba4\uff09 C\uff1a\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u53cd\uff0c\u503c\u8d8a\u5c0f\u6b63\u5219\u5316\u5f3a\u5ea6\u8d8a\u5927 n_jobs: \u6307\u5b9a\u7ebf\u7a0b\u6570 random_state\uff1a\u968f\u673a\u6570\u751f\u6210\u5668 fit_intercept: \u662f\u5426\u9700\u8981\u5e38\u91cf \u6253\u5370\u7ed3\u679c\uff1a \u903b\u8f91\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7: 0.8 \u6734\u7d20\u8d1d\u53f6\u65af \u00b6 \u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7684\u603b\u79f0\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5747\u4ee5\u8d1d\u53f6\u65af\u5b9a\u7406\u4e3a\u57fa\u7840\uff0c\u6545\u7edf\u79f0\u4e3a\u8d1d\u53f6\u65af\u5206\u7c7b\u3002 \u800c\u6734\u7d20\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u8d1d\u53f6\u65af\u5206\u7c7b\u4e2d\u6700\u7b80\u5355\uff0c\u4e5f\u662f\u5e38\u89c1\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5 \u9996\u5148\u6839\u636e\u6837\u672c\u4e2d\u5fc3\u5b9a\u7406\uff0c\u6982\u7387\u7b49\u4e8e\u9891\u7387\uff0c\u6240\u4ee5\u4e0b\u6587\u7684P\u662f\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6765\u7684 \u6734\u7d20\u8d1d\u53f6\u65af\u7684\u6838\u5fc3\u4fbf\u662f\u8d1d\u53f6\u65af\u516c\u5f0f\uff1aP(B|A)=P(A|B)P(B) / P(A) \u5373\u5728A\u6761\u4ef6\u4e0b\uff0cB\u53d1\u751f\u7684\u6982\u7387 \u6362\u4e2a\u89d2\u5ea6\uff1aP(\u7c7b\u522b|\u7279\u5f81)=P(\u7279\u5f81|\u7c7b\u522b)P(\u7c7b\u522b)/P(\u7279\u5f81) \u800c\u6211\u4eec\u6700\u540e\u8981\u6c42\u89e3\u7684\u5c31\u662fP(\u7c7b\u522b|\u7279\u5f81) \u4e3e\u4e00\u4e2a\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a \u6700\u540e\u4e00\u4e2a\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u6982\u7387\u90fd\u662f\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6765\u7684\uff0c\u6240\u4ee5P(B|A)\u53ef\u4ee5\u8ba1\u7b97\uff01 \u90a3\u4e48\uff01\u6211\u611f\u89c9\u6211\u90fd\u5199\u504f\u9898\u4e86\uff0c\u8fd9\u660e\u660e\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6982\u8ff0\u561b \u90a3\u4e48sklearn\u4e2d\u600e\u4e48\u5b9e\u73b0\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u8d1d\u53f6\u65af\u7684\u5305 import sklearn.naive_bayes as sk_bayes #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) model = sk_bayes . MultinomialNB ( alpha = 1.0 , fit_prior = True , class_prior = None ) #\u591a\u9879\u5f0f\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model = sk_bayes . BernoulliNB ( alpha = 1.0 , binarize = 0.0 , fit_prior = True , class_prior = None ) #\u4f2f\u52aa\u5229\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model = sk_bayes . GaussianNB () #\u9ad8\u65af\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u6734\u7d20\u8d1d\u53f6\u65af(\u9ad8\u65af\u5206\u5e03)\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a alpha\uff1a\u5e73\u6ed1\u53c2\u6570 fit_prior\uff1a\u662f\u5426\u8981\u5b66\u4e60\u7c7b\u7684\u5148\u9a8c\u6982\u7387\uff1bfalse-\u4f7f\u7528\u7edf\u4e00\u7684\u5148\u9a8c\u6982\u7387 class_prior: \u662f\u5426\u6307\u5b9a\u7c7b\u7684\u5148\u9a8c\u6982\u7387\uff1b\u82e5\u6307\u5b9a\u5219\u4e0d\u80fd\u6839\u636e\u53c2\u6570\u8c03\u6574 binarize: \u4e8c\u503c\u5316\u7684\u9608\u503c\uff0c\u82e5\u4e3aNone\uff0c\u5219\u5047\u8bbe\u8f93\u5165\u7531\u4e8c\u8fdb\u5236\u5411\u91cf\u7ec4\u6210 \u6734\u7d20\u8d1d\u53f6\u65af\u5e38\u7528\u7684\u4e09\u4e2a\u6a21\u578b\u6709\uff1a \u9ad8\u65af\u6a21\u578b\uff1a\u5904\u7406\u7279\u5f81\u662f\u8fde\u7eed\u578b\u53d8\u91cf\u7684\u60c5\u51b5 \u591a\u9879\u5f0f\u6a21\u578b\uff1a\u6700\u5e38\u89c1\uff0c\u8981\u6c42\u7279\u5f81\u662f\u79bb\u6563\u6570\u636e \u4f2f\u52aa\u5229\u6a21\u578b\uff1a\u8981\u6c42\u7279\u5f81\u662f\u79bb\u6563\u7684\uff0c\u4e14\u4e3a\u5e03\u5c14\u7c7b\u578b\uff0c\u5373true\u548cfalse\uff0c\u6216\u80051\u548c0 \u6253\u5370\u7ed3\u679c\uff1a \u6734\u7d20\u8d1d\u53f6\u65af ( \u9ad8\u65af\u5206\u5e03 ) \u6a21\u578b\u8bc4\u4ef7 : 0.9777777777777777 \u51b3\u7b56\u6811 \u00b6 \u51b3\u7b56\u6811\u662f\u89e3\u51b3\u5206\u7c7b\u95ee\u9898 \u51b3\u7b56\u6811\u2014\u2014ID3\u7b97\u6cd5\u5b9e\u73b0 \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u4e0a\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u51b3\u7b56\u6811\u7684\u5305 import sklearn.tree as sk_tree #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efaID3\u7b97\u6cd5\u7684\u6a21\u578b model = sk_tree . DecisionTreeClassifier ( criterion = 'entropy' , max_depth = None , min_samples_split = 2 , min_samples_leaf = 1 , max_features = None , max_leaf_nodes = None , min_impurity_decrease = 0 ) #\u8bad\u7ec3\u6a21\u578b model . fit ( X_train , y_train ) #\u6a21\u578b\u7684\u8bc4\u4ef7 acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u51b3\u7b56\u6811\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a criterion \uff1a\u7279\u5f81\u9009\u62e9\u51c6\u5219gini/entropy max_depth\uff1a\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0cNone-\u5c3d\u91cf\u4e0b\u5206 min_samples_split\uff1a\u5206\u88c2\u5185\u90e8\u8282\u70b9\uff0c\u6240\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6811 min_samples_leaf\uff1a\u53f6\u5b50\u8282\u70b9\u6240\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6570 max_features: \u5bfb\u627e\u6700\u4f18\u5206\u5272\u70b9\u65f6\u7684\u6700\u5927\u7279\u5f81\u6570 max_leaf_nodes\uff1a\u4f18\u5148\u589e\u957f\u5230\u6700\u5927\u53f6\u5b50\u8282\u70b9\u6570 min_impurity_decrease\uff1a\u5982\u679c\u8fd9\u79cd\u5206\u79bb\u5bfc\u81f4\u6742\u8d28\u7684\u51cf\u5c11\u5927\u4e8e\u6216\u7b49\u4e8e\u8fd9\u4e2a\u503c\uff0c\u5219\u8282\u70b9\u5c06\u88ab\u62c6\u5206\u3002 \u6253\u5370\u7ed3\u679c\uff1a \u51b3\u7b56\u6811\u6a21\u578b\u8bc4\u4ef7 : 0.942857142857 SVM(\u652f\u6301\u5411\u91cf\u673a\uff09 \u00b6 \u652f\u6301\u5411\u91cf\u673a\u662f\u89e3\u51b3\u5206\u7c7b\u95ee\u9898 \u76ee\u7684\uff1a\u6c42\u89e3\u6700\u5927\u5316\u95f4\u9694 \u652f\u6301\u5411\u91cf\u673a\u5c06\u5411\u91cf\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\u91cc\uff0c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u5efa\u7acb\u6709\u4e00\u4e2a\u6700\u5927\u95f4\u9694\u8d85\u5e73\u9762\u3002\u5728\u5206\u5f00\u6570\u636e\u7684\u8d85\u5e73\u9762\u7684\u4e24\u8fb9\u5efa\u6709\u4e24\u4e2a\u4e92\u76f8\u5e73\u884c\u7684\u8d85\u5e73\u9762\u3002\u5efa\u7acb\u65b9\u5411\u5408\u9002\u7684\u5206\u9694\u8d85\u5e73\u9762\u4f7f\u4e24\u4e2a\u4e0e\u4e4b\u5e73\u884c\u7684\u8d85\u5e73\u9762\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u5316\u3002\u5176\u5047\u5b9a\u4e3a\uff0c\u5e73\u884c\u8d85\u5e73\u9762\u95f4\u7684\u8ddd\u79bb\u6216\u5dee\u8ddd\u8d8a\u5927\uff0c\u5206\u7c7b\u5668\u7684\u603b\u8bef\u5dee\u8d8a\u5c0f\u3002 SVM\u7684\u5173\u952e\u5728\u4e8e\u6838\u51fd\u6570 \u4e00\u53e5\u8bdd\u8bb2\u61c2\u6838\u51fd\u6570\uff1a\u4f4e\u7ef4\u65e0\u6cd5\u7ebf\u6027\u5212\u5206\u7684\u95ee\u9898\u653e\u5230\u9ad8\u7ef4\u5c31\u53ef\u4ee5\u7ebf\u6027\u5212\u5206\uff0c\u4e00\u822c\u7528\u9ad8\u65af\uff0c\u56e0\u4e3a\u6548\u679c\u7edd\u5bf9\u4e0d\u4f1a\u53d8\u5dee\uff01 SVM\u7b97\u6cd5\u601d\u8def\u5f88\u6e05\u6670\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u5f88\u590d\u6742 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165SVM\u7684\u5305 import sklearn.svm as sk_svm #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efaSVM\u7b97\u6cd5\u7684\u6a21\u578b model = sk_svm . SVC ( C = 1.0 , kernel = 'rbf' , gamma = 'auto' ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( 'SVM\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a C\uff1a\u8bef\u5dee\u9879\u7684\u60e9\u7f5a\u53c2\u6570C kernel\uff1a\u6838\u51fd\u6570\u9009\u62e9 \u9ed8\u8ba4\uff1arbf(\u9ad8\u65af\u6838\u51fd\u6570)\uff0c\u53ef\u9009\uff1a\u2018linear\u2019, \u2018poly\u2019, \u2018rbf\u2019, \u2018sigmoid\u2019, \u2018precomputed\u2019 gamma: \u6838\u76f8\u5173\u7cfb\u6570\u3002\u6d6e\u70b9\u6570\uff0cIf gamma is \u2018auto\u2019 then 1/n_features will be used instead.\u70b9\u5c06\u88ab\u62c6\u5206\u3002 \u6253\u5370\u7ed3\u679c\uff1a SVM\u6a21\u578b\u8bc4\u4ef7: 0.961904761905 \u795e\u7ecf\u7f51\u7edc \u00b6 \u8fd8\u5728\u611f\u6168\u56e0\u4e3a\u4e0d\u4f1atensorflow\u800c\u65e0\u6cd5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\uff1f\u8fd8\u5728\u7fa1\u6155\u795e\u7ecf\u7f51\u7edc\u7684\u60ca\u4eba\u6548\u679c?\u4e0d\u9700\u8981tf\uff0c\u4e0d\u9700\u8981caffe\uff0c\u4e0d\u9700\u8981pytorch\uff01\u53ea\u8981\u4e00\u53e5\u8bdd\uff0c\u4fbf\u53ef\u4ee5\u5b9e\u73b0\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff01\uff01\uff01 \u5728\u8fd9\u91cc\u8fd8\u662f\u7b80\u5355\u8bf4\u4e00\u4e0bM-P\u795e\u7ecf\u5143\u7684\u539f\u7406\uff1a \ud835\udc99\ud835\udc8a \u6765\u81ea\u7b2c\ud835\udc56\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u5165 \ud835\udc98\ud835\udc8a \u7b2c\ud835\udc56\u4e2a\u795e\u7ecf\u5143\u7684\u8fde\u63a5\u6743\u91cd \ud835\udf3d \u9608\u503c(threshold)\u6216\u79f0\u4e3a\u504f\u7f6e\uff08bias\uff09 \ud835\udc53 \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5e38\u7528\uff1asigmoid\uff0crelu\uff0ctanh\u7b49\u7b49 \u5bf9\u4e8e\u4e00\u4e2a\u795e\u7ecf\u5143\u6765\u8bf4\uff0c\u6709i\u4e2a\u8f93\u5165\uff0c\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6743\u91cd\uff08w\uff09\uff0c\u795e\u7ecf\u5143\u5177\u6709\u4e00\u4e2a\u504f\u7f6e\uff08\u9608\u503c\uff09\uff0c\u5c06\u6240\u6709\u7684i*w\u6c42\u548c\u540e\u51cf\u53bb\u9608\u503c\u5f97\u5230\u4e00\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6fc0\u6d3b\u51fd\u6570\u5c06\u6839\u636e\u8fd9\u4e2a\u53c2\u6570\u6765\u5224\u5b9a\u8fd9\u4e2a\u795e\u7ecf\u5143\u662f\u5426\u88ab\u6fc0\u6d3b\u3002 \u672c\u8d28\u4e0a, M-P\u795e\u7ecf\u5143=\u7ebf\u6027\u4e8c\u5206\u7c7b\u5668 \u90a3\u4e48\u4ec0\u4e48\u662f\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff1f \u7ebf\u6027\u4e0d\u53ef\u5206\uff1a\u4e00\u4e2a\u8d85\u5e73\u9762\u6ca1\u6cd5\u89e3\u51b3\u95ee\u9898\uff0c\u5c31\u7528\u4e24\u4e2a\u8d85\u5e73\u9762\u6765\u89e3\u51b3\uff0c\u4ec0\u4e48\uff1f\u8fd8\u4e0d\u884c\uff01\u90a3\u5c31\u518d\u589e\u52a0\u8d85\u5e73\u9762\u76f4\u5230\u89e3\u51b3\u95ee\u9898\u4e3a\u6b62\u3002 \u2014\u2014\u591a\u5c42\u795e\u7ecf\u7f51\u7edc \u6ca1\u9519\uff0c\u591a\u5c42\u795e\u7ecf\u5143\u5c31\u662f\u7528\u6765\u89e3\u51b3\u7ebf\u6027\u4e0d\u53ef\u5206\u95ee\u9898\u7684\u3002 \u90a3\u4e48\uff0csklearn\u4e2d\u5982\u4f55\u5b9e\u73b0\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u795e\u7ecf\u7f51\u7edc\u7684\u5305 import sklearn.neural_network as sk_nn #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efa\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u7684\u6a21\u578b model = sk_nn . MLPClassifier ( activation = 'tanh' , solver = 'adam' , alpha = 0.0001 , learning_rate = 'adaptive' , learning_rate_init = 0.001 , max_iter = 200 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a hidden_layer_sizes: \u5143\u7956 activation\uff1a\u6fc0\u6d3b\u51fd\u6570 {\u2018identity\u2019, \u2018logistic\u2019, \u2018tanh\u2019, \u2018relu\u2019}, \u9ed8\u8ba4 \u2018relu\u2019 solver \uff1a\u4f18\u5316\u7b97\u6cd5{\u2018lbfgs\u2019, \u2018sgd\u2019, \u2018Adam\u2019} alpha\uff1aL2\u60e9\u7f5a(\u6b63\u5219\u5316\u9879)\u53c2\u6570 learning_rate\uff1a\u5b66\u4e60\u7387 {\u2018constant\u2019, \u2018invscaling\u2019, \u2018adaptive\u2019} learning_rate_init\uff1a\u521d\u59cb\u5b66\u4e60\u7387\uff0c\u9ed8\u8ba40.001 max_iter\uff1a\u6700\u5927\u8fed\u4ee3\u6b21\u6570 \u9ed8\u8ba4200 \u7279\u522b\uff1a \u5b66\u4e60\u7387\u4e2d\u53c2\u6570\uff1a constant: \u6709\u2018learning_rate_init\u2019\u7ed9\u5b9a\u7684\u6052\u5b9a\u5b66\u4e60\u7387 incscaling\uff1a\u968f\u7740\u65f6\u95f4t\u4f7f\u7528\u2019power_t\u2019\u7684\u9006\u6807\u5ea6\u6307\u6570\u4e0d\u65ad\u964d\u4f4e\u5b66\u4e60\u7387 adaptive\uff1a\u53ea\u8981\u8bad\u7ec3\u635f\u8017\u5728\u4e0b\u964d\uff0c\u5c31\u4fdd\u6301\u5b66\u4e60\u7387\u4e3a\u2019learning_rate_init\u2019\u4e0d\u53d8 \u4f18\u5316\u7b97\u6cd5\u53c2\u6570\uff1a lbfgs\uff1aquasi-Newton\u65b9\u6cd5\u7684\u4f18\u5316\u5668 sgd\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d adam\uff1a Kingma, Diederik, and Jimmy Ba\u63d0\u51fa\u7684\u673a\u9047\u968f\u673a\u68af\u5ea6\u7684\u4f18\u5316\u5668 \u6253\u5370\u7ed3\u679c\uff1a\uff08\u795e\u7ecf\u7f51\u7edc\u7684\u786e\u725b\u903c\uff09 \u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8bc4\u4ef7: 0.980952380952 KNN\uff08K-\u8fd1\u90bb\u7b97\u6cd5\uff09 \u00b6 KNN\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u597d\u7528\uff0c\u4e5f\u975e\u5e38\u5e38\u7528\u7684\u5206\u7c7b\u7b97\u6cd5\u4e86\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u6613\u61c2\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u6ca1\u6709\u4e4b\u4e00\u3002\u7531\u4e8e\u7b97\u6cd5\u5148\u5929\u4f18\u52bf\uff0cKNN\u751a\u81f3\u4e0d\u9700\u8981\u8bad\u7ec3\u5c31\u53ef\u4ee5\u5f97\u5230\u975e\u5e38\u597d\u7684\u5206\u7c7b\u6548\u679c\u4e86\u3002 \u5728\u8bad\u7ec3\u96c6\u4e2d\u6570\u636e\u548c\u6807\u7b7e\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u6d4b\u8bd5\u6570\u636e\uff0c\u5c06\u6d4b\u8bd5\u6570\u636e\u7684\u7279\u5f81\u4e0e\u8bad\u7ec3\u96c6\u4e2d\u5bf9\u5e94\u7684\u7279\u5f81\u8fdb\u884c\u76f8\u4e92\u6bd4\u8f83\uff0c\u627e\u5230\u8bad\u7ec3\u96c6\u4e2d\u4e0e\u4e4b\u6700\u4e3a\u76f8\u4f3c\u7684\u524dK\u4e2a\u6570\u636e\uff0c\u5219\u8be5\u6d4b\u8bd5\u6570\u636e\u5bf9\u5e94\u7684\u7c7b\u522b\u5c31\u662fK\u4e2a\u6570\u636e\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\u5206\u7c7b\u3002 \u5176\u7b97\u6cd5\u7684\u63cf\u8ff0\u4e3a\uff1a 1.\u8ba1\u7b97\u6d4b\u8bd5\u6570\u636e\u4e0e\u5404\u4e2a\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1b 2.\u6309\u7167\u8ddd\u79bb\u7684\u9012\u589e\u5173\u7cfb\u8fdb\u884c\u6392\u5e8f\uff1b 3.\u9009\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684K\u4e2a\u70b9\uff1b 4.\u786e\u5b9a\u524dK\u4e2a\u70b9\u6240\u5728\u7c7b\u522b\u7684\u51fa\u73b0\u9891\u7387\uff1b 5.\u8fd4\u56de\u524dK\u4e2a\u70b9\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u522b\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u5206\u7c7b\u3002 (\u611f\u89c9\u53c8\u8bf4\u591a\u4e86...... - -!) \u5176\u5b9e\u8fd9\u4e2a\u7b97\u6cd5\u81ea\u5df1\u5b9e\u73b0\u8d77\u6765\u4e5f\u5c31\u53ea\u6709\u51e0\u884c\u4ee3\u7801\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u662f\u4f7f\u7528sklearn\u6765\u5b9e\u73b0\u3002 sklearn\u4e2d\u7684KNN\u53ef\u4ee5\u505a\u5206\u7c7b\u4e5f\u53ef\u4ee5\u505a\u56de\u5f52 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165KNN\u7684\u5305 import sklearn.neighbors as sk_neighbors #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #KNN\u5206\u7c7b\u6a21\u578b model = sk_neighbors . KNeighborsClassifier ( n_neighbors = 5 , n_jobs = 1 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( 'KNN\u6a21\u578b(\u5206\u7c7b)\u8bc4\u4ef7:' , acc ) new_X = ([[ 1 , 2 , 5 , 9 ]]) #\u4e8c\u7ef4 print ( model . predict ( new_X )) #\u6253\u5370\u9884\u6d4b\u7684\u7ed3\u679c #KNN\u56de\u5f52\u6a21\u578b model = sk_neighbors . KNeighborsRegressor ( n_neighbors = 5 , n_jobs = 1 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print ( 'KNN\u6a21\u578b(\u56de\u5f52)\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a n_neighbors\uff1a \u4f7f\u7528\u90bb\u5c45\u7684\u6570\u76ee n_jobs\uff1a\u5e76\u884c\u4efb\u52a1\u6570 \u6253\u5370\u7ed3\u679c\uff1a KNN\u6a21\u578b ( \u5206\u7c7b ) \u8bc4\u4ef7 : 0.9777777777777777 [ 2 ] KNN\u6a21\u578b ( \u56de\u5f52 ) \u8bc4\u4ef7 : 0.9710843373493976 \u4ea4\u53c9\u9a8c\u8bc1 \u00b6 \u597d\u7684\uff0c\u7ec8\u4e8e\u8bf4\u5b8c\u4e86\u5e38\u7528\u6a21\u578b\uff0c\u611f\u89c9\u5b8c\u5168\u662f\u4e00\u4e2a\u7b97\u6cd5\u6982\u8ff0\u554ahhhhh \u65e2\u7136\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u6570\u636e\u7684\u83b7\u53d6\uff0c\u6a21\u578b\u7684\u5efa\u7acb\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u6b65\u4fbf\u662f\u9a8c\u8bc1\u6211\u4eec\u7684\u6a21\u578b \u5176\u5b9e\u4ea4\u53c9\u9a8c\u8bc1\u5e94\u8be5\u653e\u5728\u6570\u636e\u96c6\u7684\u5212\u5206\u90a3\u91cc\uff0c\u4f46\u662f\u4ed6\u53c8\u4e0e\u6a21\u578b\u7684\u9a8c\u8bc1\u7d27\u5bc6\u76f8\u5173\uff0c\u6240\u4ee5\u6211\u5c31\u6309\u7167\u7f16\u5199\u4ee3\u7801\u7684\u987a\u5e8f\u8fdb\u884c\u8bb2\u89e3\u4e86\u3002 \u9996\u5148\uff0c\u4ec0\u4e48\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff1f \u8fd9\u91cc\u5b8c\u5168\u5f15\u7528\u897f\u74dc\u4e66\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u4e66\u4e0a\u5199\u7684\u975e\u5e38\u6e05\u695a\uff01\uff01\uff01 \u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u5148\u5c06\u6570\u636e\u96c6D\u5212\u5206\u4e3ak\u4e2a\u5927\u5c0f\u76f8\u4f3c\u7684\u4e92\u65a5\u5b50\u96c6\uff0c\u6bcf\u4e2a\u5b50\u96c6Di\u90fd\u5c3d\u53ef\u80fd\u4fdd\u6301\u6570\u636e\u5206\u5e03\u7684\u4e00\u81f4\u6027\uff0c\u5373\u4eceD\u4e2d\u901a\u8fc7\u5206\u5c42\u91c7\u6837\u5f97\u5230\u3002\u7136\u540e\u6bcf\u6b21\u7528k-1\u4e2a\u5b50\u96c6\u7684\u5e76\u96c6\u505a\u4e3a\u8bad\u7ec3\u96c6\uff0c\u4f59\u4e0b\u7684\u5b50\u96c6\u505a\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u83b7\u5f97K\u7ec4\u8bad\u7ec3/\u6d4b\u8bd5\u96c6\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884ck\u6b21\u8bad\u7ec3\u548c\u6d4b\u8bd5\uff0c\u6700\u7ec8\u8fd4\u56de\u7684\u662f\u8fd9\u4e2ak\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u7684\u5747\u503c\u3002k\u901a\u5e38\u7684\u53d6\u503c\u662f10\uff0c\u5176\u4ed6\u5e38\u7528\u53d6\u503c\u4e3a2\uff0c5\uff0c20\u7b49\u3002 \u8fd9\u91cc\u4f7f\u7528KNN\u505a\u4e3a\u8bad\u7ec3\u6a21\u578b\uff0c\u91c7\u7528\u5341\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165KNN\u7684\u5305 import sklearn.neighbors as sk_neighbors #\u5bfc\u5165\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5305 import sklearn.model_selection as sk_model_selection #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u521b\u5efa\u6a21\u578b model = sk_neighbors.KNeighborsClassifier(n_neighbors=5,n_jobs=1) #KNN\u5206\u7c7b #\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1 accs=sk_model_selection.cross_val_score(model, iris_X, y=iris_Y, scoring=None,cv=10, n_jobs=1) print('\u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c:',accs) \u53c2\u6570\u8bf4\u660e\uff1a model\uff1a\u62df\u5408\u6570\u636e\u7684\u6a21\u578b cv \uff1a \u5b50\u96c6\u4e2a\u6570 \u5c31\u662fk scoring: \u6253\u5206\u53c2\u6570 \u9ed8\u8ba4\u2018accuracy\u2019\u3001\u53ef\u9009\u2018f1\u2019\u3001\u2018precision\u2019\u3001\u2018recall\u2019 \u3001\u2018roc_auc\u2019\u3001'neg_log_loss' \u6253\u5370\u7ed3\u679c\uff1a \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c: [ 1. 0.93333333 1. 1. 0.86666667 0.93333333 0.93333333 1. 1. 1. ] \u6a21\u578b\u7684\u4fdd\u5b58\u548c\u8f7d\u5165 \u00b6 \u6a21\u578b\u7684\u4fdd\u5b58\u548c\u8f7d\u5165\u65b9\u4fbf\u6211\u4eec\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4fdd\u5b58\u5728\u672c\u5730\u6216\u53d1\u9001\u5728\u7f51\u4e0a\uff0c\u8f7d\u5165\u6a21\u578b\u65b9\u4fbf\u6211\u4eec\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u8fdb\u884c\u6d4b\u8bd5\u3002 \u4f7f\u7528pickle\u53ef\u4ee5\u8fdb\u884c\u4fdd\u5b58\u4e0e\u8f7d\u5165 \u4e5f\u53ef\u4ee5\u4f7f\u7528sklearn\u81ea\u5e26\u7684\u51fd\u6570 import sklearn.externals as sk_externals sk_externals.joblib.dump(model,'model.pickle') #\u4fdd\u5b58 model = sk_externals.joblib.load('model.pickle') #\u8f7d\u5165 \u53c2\u8003\u7b80\u4e66: https://www.jianshu.com/p/731610dca805","title":"004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_1","text":"\u6211\u4eec\u83b7\u53d6\u7684\u6570\u636e\u4e2d\u5f88\u591a\u6570\u636e\u5f80\u5f80\u6709\u5f88\u591a\u7ef4\u5ea6\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7ef4\u5ea6\u90fd\u662f\u6709\u7528\u7684\uff0c\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u5bf9\u7ed3\u679c\u5f71\u54cd\u8f83\u5c0f\u7684\u7ef4\u5ea6\u820d\u53bb\uff0c\u4fdd\u7559\u5bf9\u7ed3\u679c\u5f71\u54cd\u8f83\u5927\u7684\u7ef4\u5ea6\u3002 PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09\u4e0eLDA\uff08\u7ebf\u6027\u8bc4\u4ef7\u5206\u6790\uff09\u662f\u7279\u5f81\u63d0\u53d6\u7684\u4e24\u79cd\u7ecf\u5178\u7b97\u6cd5\u3002PCA\u4e0eLDA\u672c\u8d28\u4e0a\u90fd\u662f\u5b66\u4e60\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\uff0c\u4f7f\u6837\u672c\u5728\u65b0\u7684\u5750\u6807\u7cfb\u4e0a\u7684\u8868\u793a\u5177\u6709\u76f8\u5e94\u7684\u7279\u6027\uff0c\u6837\u672c\u5728\u65b0\u5750\u6807\u7cfb\u7684\u5750\u6807\u76f8\u5f53\u4e8e\u65b0\u7684\u7279\u5f81\uff0c\u4fdd\u7559\u4e0b\u7684\u65b0\u7279\u5f81\u5e94\u5f53\u662f\u5bf9\u7ed3\u679c\u6709\u8f83\u5927\u5f71\u54cd\u7684\u7279\u5f81\u3002","title":"\u7279\u5f81\u63d0\u53d6"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#pca","text":"\u6700\u5927\u65b9\u5dee\u7406\u8bba\uff1a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u5177\u6709\u8f83\u5c0f\u7684\u65b9\u5dee PCA\u7684\u76ee\u6807\uff1a\u65b0\u5750\u6807\u7cfb\u4e0a\u6570\u636e\u7684\u65b9\u5dee\u8d8a\u5927\u8d8a\u597d PCA\u662f\u65e0\u76d1\u7763\u7684\u5b66\u4e60\u65b9\u6cd5 PCA\u5b9e\u73b0\u8d77\u6765\u5e76\u4e0d\u590d\u6742\uff08\u8fc7\u51e0\u5929\u5199\u4e00\u7bc7\u4f7f\u7528NumPy\u5b9e\u73b0\u7684PCA\uff09\uff0c\u4f46\u662f\u5728sklearn\u5c31\u66f4\u4e3a\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u98df\u7528skleran.decomposition\u5373\u53ef # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 21:54:33 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5bfc\u5165pca\u7684\u6a21\u5757 import sklearn.decomposition as sk_decomposition #\u5bfc\u5165\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u521b\u5efa\u6a21\u578b pca = sk_decomposition . PCA ( n_components = 'mle' , whiten = False , svd_solver = 'auto' ) #\u8bad\u7ec3\u6a21\u578b pca . fit ( iris_X ) # \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u5668\u53bb\u8f6c\u6362\u8bad\u7ec3\u6570\u636ex,\u8c03\u7528transform\u65b9\u6cd5 reduced_X = pca . transform ( iris_X ) #reduced_X\u4e3a\u964d\u7ef4\u540e\u7684\u6570\u636e print ( 'PCA:' ) print ( '\u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c\u5360\u603b\u65b9\u5dee\u503c\u7684\u6bd4\u4f8b' , pca . explained_variance_ratio_ ) print ( '\u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c' , pca . explained_variance_ ) print ( '\u964d\u7ef4\u540e\u7684\u7279\u5f81\u6570' , pca . n_components_ ) \u53c2\u6570\u8bf4\u660e\uff1a n_components\uff1a\u6307\u5b9a\u5e0c\u671bPCA\u964d\u7ef4\u540e\u7684\u7279\u5f81\u7ef4\u5ea6\u6570\u76ee(>1)\uff0c \u6307\u5b9a\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u548c\u6240\u5360\u7684\u6700\u5c0f\u6bd4\u4f8b\u9608\u503c\uff080-1\uff09\uff0c'mle'\u7528MLE\u7b97\u6cd5\u6839\u636e\u7279\u5f81\u7684\u65b9\u5dee\u5206\u5e03\u60c5\u51b5\u81ea\u5df1\u53bb\u9009\u62e9\u4e00\u5b9a\u6570\u91cf\u7684\u4e3b\u6210\u5206\u7279\u5f81\u6765\u964d\u7ef4 whiten\uff1a \u5224\u65ad\u662f\u5426\u8fdb\u884c\u767d\u5316\u3002\u767d\u5316\uff1a\u964d\u7ef4\u540e\u7684\u6570\u636e\u7684\u6bcf\u4e2a\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u8ba9\u65b9\u5dee\u90fd\u4e3a1 svd_solver\uff1a\u5947\u5f02\u503c\u5206\u89e3SVD\u7684\u65b9\u6cd5{\u2018auto\u2019, \u2018full\u2019, \u2018arpack\u2019, \u2018randomized\u2019} \u6253\u5370\u7ed3\u679c: \u4e0b\u9762\u6253\u5370\u7684\u5185\u5bb9\u53ea\u662f\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3pca\u7684\u53c2\u6570\uff0c\u5c31\u4e0d\u6253\u5370\u964d\u7ef4\u540e\u7684\u6570\u636e\u4e86\uff0c\u6253\u5370\u51fa\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002 PCA : \u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c\u5360\u603b\u65b9\u5dee\u503c\u7684\u6bd4\u4f8b [ 0.92461621 0.05301557 0.01718514 ] \u964d\u7ef4\u540e\u7684\u5404\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u503c [ 4.22484077 0.24224357 0.07852391 ] \u964d\u7ef4\u540e\u7684\u7279\u5f81\u6570 3","title":"PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#lda","text":"LDA\u57fa\u4e8e\u8d39\u820d\u5c14\u51c6\u5219\uff0c\u5373\u540c\u4e00\u7c7b\u6837\u672c\u5c3d\u53ef\u80fd\u805a\u5408\u5728\u4e00\u8d77\uff0c\u4e0d\u540c\u7c7b\u6837\u672c\u5e94\u8be5\u5c3d\u91cf\u6269\u6563\uff1b\u6216\u8005\u8bf4\uff0c\u540c\u7c7b\u5185\u5177\u6709\u8f83\u597d\u7684\u805a\u5408\u5ea6\uff0c\u7c7b\u522b\u95f4\u5177\u6709\u8f83\u597d\u7684\u6269\u6563\u5ea6\u3002 \u65e2\u7136\u6d89\u53ca\u5230\u4e86\u7c7b\u522b\uff0c\u90a3\u4e48LDA\u80af\u5b9a\u662f\u4e00\u4e2a\u6709\u76d1\u7763\u7b97\u6cd5\uff0c\u5176\u5b9eLDA\u65e2\u53ef\u4ee5\u505a\u7279\u5f81\u63d0\u53d6\u4e5f\u53ef\u4ee5\u505a\u5206\u7c7b\u3002 LDA\u5177\u4f53\u7684\u5b9e\u73b0\u6d41\u7a0b\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u76f4\u63a5\u770bskleran\u5982\u4f55\u5b9e\u73b0LDA\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Wed Apr 24 22:13:29 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets from sklearn.model_selection import train_test_split #\u5bfc\u5165\u4f7f\u7528:LDA\u7684\u6a21\u5757 import sklearn.discriminant_analysis as sk_discriminant_analysis #\u5bfc\u5165\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u5efa\u7acbLDA\u6a21\u578b lda = sk_discriminant_analysis . LinearDiscriminantAnalysis ( n_components = 2 ) #\u8bad\u7ec3\u6a21\u578b(\u4f7f\u7528\u8bad\u7ec3\u6570\u636e) lda . fit ( X_train , y_train ) reduced_X = lda . transform ( iris_X ) #reduced_X\u4e3a\u964d\u7ef4\u540e\u7684\u6570\u636e print ( 'LDA:' ) print ( 'LDA\u7684\u6570\u636e\u4e2d\u5fc3\u70b9:' , lda . means_ ) #\u4e2d\u5fc3\u70b9 print ( 'LDA\u505a\u5206\u7c7b\u65f6\u7684\u6b63\u786e\u7387:' , lda . score ( X_test , y_test )) #score\u662f\u6307\u5206\u7c7b\u7684\u6b63\u786e\u7387 print ( 'LDA\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3:' , lda . scalings_ ) #\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3 \u53c2\u6570\u8bf4\u660e\uff1a n_components\uff1a\u6307\u5b9a\u5e0c\u671bPCA\u964d\u7ef4\u540e\u7684\u7279\u5f81\u7ef4\u5ea6\u6570\u76ee(>1) svd_solver\uff1a\u5947\u5f02\u503c\u5206\u89e3SVD\u7684\u65b9\u6cd5{\u2018auto\u2019, \u2018full\u2019, \u2018arpack\u2019, \u2018randomized\u2019} \u6253\u5370\u7ed3\u679c: \u4e0b\u9762\u6253\u5370\u7684\u5185\u5bb9\u53ea\u662f\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3lda\u7684\u53c2\u6570\uff0c\u5c31\u4e0d\u6253\u5370\u964d\u7ef4\u540e\u7684\u6570\u636e\u4e86\uff0c\u6253\u5370\u51fa\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002 LDA : LDA\u7684\u6570\u636e\u4e2d\u5fc3\u70b9 : [[ 5.00294118 3.45588235 1.43823529 0.24411765 ] [ 5.96111111 2.78888889 4.35833333 1.36111111 ] [ 6.56857143 3. 5.55428571 2.03714286 ]] LDA\u505a\u5206\u7c7b\u65f6\u7684\u6b63\u786e\u7387 : 0.9777777777777777 LDA\u964d\u7ef4\u540e\u7279\u5f81\u7a7a\u95f4\u7684\u7c7b\u4e2d\u5fc3 : [[ - 0.67612774 0.08223592 ] [ - 1.69411935 2.00705368 ] [ 2.27193737 - 1.11662635 ] [ 2.95645633 3.1900014 ]]","title":"LDA\uff08\u7ebf\u6027\u8bc4\u4ef7\u5206\u6790\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_2","text":"\u673a\u5668\u5b66\u4e60\u5e38\u7528\u7684\u7b97\u6cd5\u4e5f\u5c31\u90a3\u51e0\u4e2a\uff0csklearn\u4e2d\u5bf9\u5176\u90fd\u505a\u4e86\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u5373\u53ef\u3002\u4e0b\u9762\u6bcf\u4e00\u4e2a\u7b97\u6cd5\u7684\u539f\u7406\u6211\u5c31\u4e0d\u7ec6\u8bb2\u4e86\uff0c\u53ea\u8bb2\u600e\u4e48\u7528. \u9996\u5148sklearn\u4e2d\u6240\u6709\u7684\u6a21\u578b\u90fd\u6709\u56db\u4e2a\u56fa\u5b9a\u4e14\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u5728PCA\u4e0eLDA\u4e2d\u6211\u4eec\u5df2\u7ecf\u7528\u5230\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684fit\u65b9\u6cd5\u3002 # \u62df\u5408\u6a21\u578b model . fit ( X_train , y_train ) # \u6a21\u578b\u9884\u6d4b model . predict ( X_test ) # \u83b7\u5f97\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570 model . get_params () # \u4e3a\u6a21\u578b\u8fdb\u884c\u6253\u5206 model . score ( data_X , data_y ) # \u56de\u5f52\u95ee\u9898\uff1a\u4ee5R2\u53c2\u6570\u4e3a\u6807\u51c6 \u5206\u7c7b\u95ee\u9898\uff1a\u4ee5\u51c6\u786e\u7387\u4e3a\u6807\u51c6","title":"\u5e38\u7528\u6a21\u578b"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_3","text":"\u7ebf\u6027\u56de\u5f52\u662f\u5229\u7528\u6570\u7406\u7edf\u8ba1\u4e2d\u56de\u5f52\u5206\u6790\uff0c\u6765\u786e\u5b9a\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u53d8\u91cf\u95f4\u76f8\u4e92\u4f9d\u8d56\u7684\u5b9a\u91cf\u5173\u7cfb\u7684\u4e00\u79cd\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\uff0c\u8fd0\u7528\u5341\u5206\u5e7f\u6cdb\u3002\u5176\u8868\u8fbe\u5f62\u5f0f\u4e3a y = w'x+e \uff0ce\u4e3a\u8bef\u5dee\u670d\u4ece\u5747\u503c\u4e3a0\u7684\u6b63\u6001\u5206\u5e03\u3002 \u56de\u5f52\u5206\u6790\u4e2d\uff0c\u53ea\u5305\u62ec\u4e00\u4e2a\u81ea\u53d8\u91cf\u548c\u4e00\u4e2a\u56e0\u53d8\u91cf\uff0c\u4e14\u4e8c\u8005\u7684\u5173\u7cfb\u53ef\u7528\u4e00\u6761\u76f4\u7ebf\u8fd1\u4f3c\u8868\u793a\uff0c\u8fd9\u79cd\u56de\u5f52\u5206\u6790\u79f0\u4e3a\u4e00\u5143\u7ebf\u6027\u56de\u5f52\u5206\u6790\u3002\u5982\u679c\u56de\u5f52\u5206\u6790\u4e2d\u5305\u62ec\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u81ea\u53d8\u91cf\uff0c\u4e14\u56e0\u53d8\u91cf\u548c\u81ea\u53d8\u91cf\u4e4b\u95f4\u662f\u7ebf\u6027\u5173\u7cfb\uff0c\u5219\u79f0\u4e3a\u591a\u5143\u7ebf\u6027\u56de\u5f52\u5206\u6790\u3002 \u5176\u5b9e\uff0c\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u7528\u4e00\u6761\u76f4\u7ebf\u53bb\u62df\u5408\u4e00\u5927\u5806\u6570\u636e\uff0c\u6700\u540e\u628a\u7cfb\u6570w\u548c\u622a\u8dddb\u7b97\u51fa\u6765\uff0c\u76f4\u7ebf\u4e5f\u5c31\u7b97\u51fa\u6765\u4e86\uff0c \u5c31\u53ef\u4ee5\u62ff\u53bb\u505a\u9884\u6d4b\u4e86\u3002 sklearn\u4e2d\u7ebf\u6027\u56de\u5f52\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u5b9e\u73b0\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002 \u7ebf\u6027\u56de\u5f52\u662f\u56de\u5f52\u95ee\u9898\uff0cscore\u4f7f\u7528R2\u7cfb\u6570\u505a\u4e3a\u8bc4\u4ef7\u6807\u51c6\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:47:00 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split import sklearn.linear_model as sk_linear #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train,X_test,y_train,y_test=train_test_split(iris_X,iris_Y,test_size=0.3) #\u521b\u5efa\u6a21\u578b model = sk_linear.LinearRegression(fit_intercept=True,normalize=False,copy_X=True,n_jobs=1) #\u8bad\u7ec3\u6a21\u578b model.fit(X_train,y_train) #\u8bc4\u4ef7\u6a21\u578b acc=model.score(X_test,y_test) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print('\u7ebf\u6027\u56de\u5f52:') print('\u622a\u8ddd:',model.intercept_) #\u8f93\u51fa\u622a\u8ddd print('\u7cfb\u6570:',model.coef_) #\u8f93\u51fa\u7cfb\u6570 print('\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7:',acc) \u53c2\u6570\u8bf4\u660e\uff1a fit_intercept\uff1a\u662f\u5426\u8ba1\u7b97\u622a\u8ddd\u3002False-\u6a21\u578b\u6ca1\u6709\u622a\u8ddd normalize\uff1a \u5f53fit_intercept\u8bbe\u7f6e\u4e3aFalse\u65f6\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u4e3a\u771f\uff0c\u5219\u56de\u5f52\u524d\u7684\u56de\u5f52\u7cfb\u6570X\u5c06\u901a\u8fc7\u51cf\u53bb\u5e73\u5747\u503c\u5e76\u9664\u4ee5l2-\u8303\u6570\u800c\u5f52\u4e00\u5316\u3002 copy_X\uff1a\u662f\u5426\u5bf9X\u6570\u7ec4\u8fdb\u884c\u590d\u5236,\u9ed8\u8ba4\u4e3aTrue n_jobs\uff1a\u6307\u5b9a\u7ebf\u7a0b\u6570 \u6253\u5370\u7ed3\u679c\uff1a \u7ebf\u6027\u56de\u5f52 : \u622a\u8ddd : 0.360007142807655 \u7cfb\u6570 : [ - 0.23016056 0.04521955 0.33913525 0.47029646 ] \u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7 : 0.9252305022245975","title":"\u7ebf\u6027\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_4","text":"logistic\u56de\u5f52\u662f\u4e00\u79cd\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\uff08generalized linear model\uff09\uff0c\u56e0\u6b64\u4e0e\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u5206\u6790\u6709\u5f88\u591a\u76f8\u540c\u4e4b\u5904\u3002\u5b83\u4eec\u7684\u6a21\u578b\u5f62\u5f0f\u57fa\u672c\u4e0a\u76f8\u540c\uff0c\u90fd\u5177\u6709 w\u2018x+b \uff0c\u5176\u4e2dw\u548cb\u662f\u5f85\u6c42\u53c2\u6570\uff0c\u5176\u533a\u522b\u5728\u4e8e\u4ed6\u4eec\u7684** \u56e0\u53d8\u91cf \u4e0d\u540c\uff0c\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u76f4\u63a5\u5c06w\u2018x+b\u4f5c\u4e3a\u56e0\u53d8\u91cf\uff0c\u5373y =w\u2018x+b\uff0c\u800clogistic\u56de\u5f52\u5219\u901a\u8fc7\u51fd\u6570L\u5c06w\u2018x+b\u5bf9\u5e94\u4e00\u4e2a\u9690\u72b6\u6001 p \uff0cp =L(w\u2018x+b),\u7136\u540e\u6839\u636ep \u4e0e1-p\u7684\u5927\u5c0f\u51b3\u5b9a\u56e0\u53d8\u91cf\u7684\u503c\u3002\u5982\u679cL\u662flogistic\u51fd\u6570\uff0c\u5c31\u662flogistic\u56de\u5f52\uff0c\u5982\u679cL\u662f\u591a\u9879\u5f0f\u51fd\u6570\u5c31\u662f\u591a\u9879\u5f0f\u56de\u5f52\u3002 \u8bf4\u4eba\u8bdd\uff1a**\u7ebf\u6027\u56de\u5f52\u662f\u56de\u5f52\uff0c\u903b\u8f91\u56de\u5f52\u662f\u5206\u7c7b\u3002\u903b\u8f91\u56de\u5f52\u901a\u8fc7logistic\u51fd\u6570\u7b97\u6982\u7387\uff0c\u7136\u540e\u7b97\u51fa\u6765\u4e00\u4e2a\u6837\u672c\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u6982\u7387\u8d8a\u5927\u8d8a\u53ef\u80fd\u662f\u8fd9\u4e2a\u7c7b\u7684\u6837\u672c \u3002 sklearn\u5bf9\u4e8e\u903b\u8f91\u56de\u5f52\u7684\u5b9e\u73b0\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\u3002 \u903b\u8f91\u56de\u5f52\u662f\u5206\u7c7b\u95ee\u9898\uff0cscore\u4f7f\u7528\u51c6\u786e\u7387\u505a\u4e3a\u8bc4\u4ef7\u6807\u51c6\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:53:41 2019 @author: zangz \"\"\" # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 09:47:00 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u903b\u8f91\u56de\u5f52\u7684\u5305 import sklearn.linear_model as sk_linear #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train,X_test,y_train,y_test=train_test_split(iris_X,iris_Y,test_size=0.3) #\u521b\u5efa\u6a21\u578b model = sk_linear.LogisticRegression(penalty='l2',dual=False,C=1.0,n_jobs=1,random_state=20,fit_intercept=True,solver='lbfgs') #\u8bad\u7ec3\u6a21\u578b model.fit(X_train,y_train) #\u8bc4\u4ef7\u6a21\u578b acc=model.score(X_test,y_test) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print('\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7:',acc) \u53c2\u6570\u8bf4\u660e\uff1a penalty\uff1a\u4f7f\u7528\u6307\u5b9a\u6b63\u5219\u5316\u9879\uff08\u9ed8\u8ba4\uff1al2\uff09 dual: n_samples > n_features\u53d6False\uff08\u9ed8\u8ba4\uff09 C\uff1a\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u53cd\uff0c\u503c\u8d8a\u5c0f\u6b63\u5219\u5316\u5f3a\u5ea6\u8d8a\u5927 n_jobs: \u6307\u5b9a\u7ebf\u7a0b\u6570 random_state\uff1a\u968f\u673a\u6570\u751f\u6210\u5668 fit_intercept: \u662f\u5426\u9700\u8981\u5e38\u91cf \u6253\u5370\u7ed3\u679c\uff1a \u903b\u8f91\u56de\u5f52\u6a21\u578b\u8bc4\u4ef7: 0.8","title":"\u903b\u8f91\u56de\u5f52"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_5","text":"\u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7684\u603b\u79f0\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5747\u4ee5\u8d1d\u53f6\u65af\u5b9a\u7406\u4e3a\u57fa\u7840\uff0c\u6545\u7edf\u79f0\u4e3a\u8d1d\u53f6\u65af\u5206\u7c7b\u3002 \u800c\u6734\u7d20\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u8d1d\u53f6\u65af\u5206\u7c7b\u4e2d\u6700\u7b80\u5355\uff0c\u4e5f\u662f\u5e38\u89c1\u7684\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5 \u9996\u5148\u6839\u636e\u6837\u672c\u4e2d\u5fc3\u5b9a\u7406\uff0c\u6982\u7387\u7b49\u4e8e\u9891\u7387\uff0c\u6240\u4ee5\u4e0b\u6587\u7684P\u662f\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6765\u7684 \u6734\u7d20\u8d1d\u53f6\u65af\u7684\u6838\u5fc3\u4fbf\u662f\u8d1d\u53f6\u65af\u516c\u5f0f\uff1aP(B|A)=P(A|B)P(B) / P(A) \u5373\u5728A\u6761\u4ef6\u4e0b\uff0cB\u53d1\u751f\u7684\u6982\u7387 \u6362\u4e2a\u89d2\u5ea6\uff1aP(\u7c7b\u522b|\u7279\u5f81)=P(\u7279\u5f81|\u7c7b\u522b)P(\u7c7b\u522b)/P(\u7279\u5f81) \u800c\u6211\u4eec\u6700\u540e\u8981\u6c42\u89e3\u7684\u5c31\u662fP(\u7c7b\u522b|\u7279\u5f81) \u4e3e\u4e00\u4e2a\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a \u6700\u540e\u4e00\u4e2a\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u6982\u7387\u90fd\u662f\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6765\u7684\uff0c\u6240\u4ee5P(B|A)\u53ef\u4ee5\u8ba1\u7b97\uff01 \u90a3\u4e48\uff01\u6211\u611f\u89c9\u6211\u90fd\u5199\u504f\u9898\u4e86\uff0c\u8fd9\u660e\u660e\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6982\u8ff0\u561b \u90a3\u4e48sklearn\u4e2d\u600e\u4e48\u5b9e\u73b0\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u8d1d\u53f6\u65af\u7684\u5305 import sklearn.naive_bayes as sk_bayes #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) model = sk_bayes . MultinomialNB ( alpha = 1.0 , fit_prior = True , class_prior = None ) #\u591a\u9879\u5f0f\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model = sk_bayes . BernoulliNB ( alpha = 1.0 , binarize = 0.0 , fit_prior = True , class_prior = None ) #\u4f2f\u52aa\u5229\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model = sk_bayes . GaussianNB () #\u9ad8\u65af\u5206\u5e03\u7684\u6734\u7d20\u8d1d\u53f6\u65af model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u6734\u7d20\u8d1d\u53f6\u65af(\u9ad8\u65af\u5206\u5e03)\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a alpha\uff1a\u5e73\u6ed1\u53c2\u6570 fit_prior\uff1a\u662f\u5426\u8981\u5b66\u4e60\u7c7b\u7684\u5148\u9a8c\u6982\u7387\uff1bfalse-\u4f7f\u7528\u7edf\u4e00\u7684\u5148\u9a8c\u6982\u7387 class_prior: \u662f\u5426\u6307\u5b9a\u7c7b\u7684\u5148\u9a8c\u6982\u7387\uff1b\u82e5\u6307\u5b9a\u5219\u4e0d\u80fd\u6839\u636e\u53c2\u6570\u8c03\u6574 binarize: \u4e8c\u503c\u5316\u7684\u9608\u503c\uff0c\u82e5\u4e3aNone\uff0c\u5219\u5047\u8bbe\u8f93\u5165\u7531\u4e8c\u8fdb\u5236\u5411\u91cf\u7ec4\u6210 \u6734\u7d20\u8d1d\u53f6\u65af\u5e38\u7528\u7684\u4e09\u4e2a\u6a21\u578b\u6709\uff1a \u9ad8\u65af\u6a21\u578b\uff1a\u5904\u7406\u7279\u5f81\u662f\u8fde\u7eed\u578b\u53d8\u91cf\u7684\u60c5\u51b5 \u591a\u9879\u5f0f\u6a21\u578b\uff1a\u6700\u5e38\u89c1\uff0c\u8981\u6c42\u7279\u5f81\u662f\u79bb\u6563\u6570\u636e \u4f2f\u52aa\u5229\u6a21\u578b\uff1a\u8981\u6c42\u7279\u5f81\u662f\u79bb\u6563\u7684\uff0c\u4e14\u4e3a\u5e03\u5c14\u7c7b\u578b\uff0c\u5373true\u548cfalse\uff0c\u6216\u80051\u548c0 \u6253\u5370\u7ed3\u679c\uff1a \u6734\u7d20\u8d1d\u53f6\u65af ( \u9ad8\u65af\u5206\u5e03 ) \u6a21\u578b\u8bc4\u4ef7 : 0.9777777777777777","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_6","text":"\u51b3\u7b56\u6811\u662f\u89e3\u51b3\u5206\u7c7b\u95ee\u9898 \u51b3\u7b56\u6811\u2014\u2014ID3\u7b97\u6cd5\u5b9e\u73b0 \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u4e0a\u4ee3\u7801 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u51b3\u7b56\u6811\u7684\u5305 import sklearn.tree as sk_tree #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efaID3\u7b97\u6cd5\u7684\u6a21\u578b model = sk_tree . DecisionTreeClassifier ( criterion = 'entropy' , max_depth = None , min_samples_split = 2 , min_samples_leaf = 1 , max_features = None , max_leaf_nodes = None , min_impurity_decrease = 0 ) #\u8bad\u7ec3\u6a21\u578b model . fit ( X_train , y_train ) #\u6a21\u578b\u7684\u8bc4\u4ef7 acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u51b3\u7b56\u6811\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a criterion \uff1a\u7279\u5f81\u9009\u62e9\u51c6\u5219gini/entropy max_depth\uff1a\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0cNone-\u5c3d\u91cf\u4e0b\u5206 min_samples_split\uff1a\u5206\u88c2\u5185\u90e8\u8282\u70b9\uff0c\u6240\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6811 min_samples_leaf\uff1a\u53f6\u5b50\u8282\u70b9\u6240\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6570 max_features: \u5bfb\u627e\u6700\u4f18\u5206\u5272\u70b9\u65f6\u7684\u6700\u5927\u7279\u5f81\u6570 max_leaf_nodes\uff1a\u4f18\u5148\u589e\u957f\u5230\u6700\u5927\u53f6\u5b50\u8282\u70b9\u6570 min_impurity_decrease\uff1a\u5982\u679c\u8fd9\u79cd\u5206\u79bb\u5bfc\u81f4\u6742\u8d28\u7684\u51cf\u5c11\u5927\u4e8e\u6216\u7b49\u4e8e\u8fd9\u4e2a\u503c\uff0c\u5219\u8282\u70b9\u5c06\u88ab\u62c6\u5206\u3002 \u6253\u5370\u7ed3\u679c\uff1a \u51b3\u7b56\u6811\u6a21\u578b\u8bc4\u4ef7 : 0.942857142857","title":"\u51b3\u7b56\u6811"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#svm","text":"\u652f\u6301\u5411\u91cf\u673a\u662f\u89e3\u51b3\u5206\u7c7b\u95ee\u9898 \u76ee\u7684\uff1a\u6c42\u89e3\u6700\u5927\u5316\u95f4\u9694 \u652f\u6301\u5411\u91cf\u673a\u5c06\u5411\u91cf\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\u91cc\uff0c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u5efa\u7acb\u6709\u4e00\u4e2a\u6700\u5927\u95f4\u9694\u8d85\u5e73\u9762\u3002\u5728\u5206\u5f00\u6570\u636e\u7684\u8d85\u5e73\u9762\u7684\u4e24\u8fb9\u5efa\u6709\u4e24\u4e2a\u4e92\u76f8\u5e73\u884c\u7684\u8d85\u5e73\u9762\u3002\u5efa\u7acb\u65b9\u5411\u5408\u9002\u7684\u5206\u9694\u8d85\u5e73\u9762\u4f7f\u4e24\u4e2a\u4e0e\u4e4b\u5e73\u884c\u7684\u8d85\u5e73\u9762\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u5316\u3002\u5176\u5047\u5b9a\u4e3a\uff0c\u5e73\u884c\u8d85\u5e73\u9762\u95f4\u7684\u8ddd\u79bb\u6216\u5dee\u8ddd\u8d8a\u5927\uff0c\u5206\u7c7b\u5668\u7684\u603b\u8bef\u5dee\u8d8a\u5c0f\u3002 SVM\u7684\u5173\u952e\u5728\u4e8e\u6838\u51fd\u6570 \u4e00\u53e5\u8bdd\u8bb2\u61c2\u6838\u51fd\u6570\uff1a\u4f4e\u7ef4\u65e0\u6cd5\u7ebf\u6027\u5212\u5206\u7684\u95ee\u9898\u653e\u5230\u9ad8\u7ef4\u5c31\u53ef\u4ee5\u7ebf\u6027\u5212\u5206\uff0c\u4e00\u822c\u7528\u9ad8\u65af\uff0c\u56e0\u4e3a\u6548\u679c\u7edd\u5bf9\u4e0d\u4f1a\u53d8\u5dee\uff01 SVM\u7b97\u6cd5\u601d\u8def\u5f88\u6e05\u6670\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u5f88\u590d\u6742 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165SVM\u7684\u5305 import sklearn.svm as sk_svm #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efaSVM\u7b97\u6cd5\u7684\u6a21\u578b model = sk_svm . SVC ( C = 1.0 , kernel = 'rbf' , gamma = 'auto' ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( 'SVM\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a C\uff1a\u8bef\u5dee\u9879\u7684\u60e9\u7f5a\u53c2\u6570C kernel\uff1a\u6838\u51fd\u6570\u9009\u62e9 \u9ed8\u8ba4\uff1arbf(\u9ad8\u65af\u6838\u51fd\u6570)\uff0c\u53ef\u9009\uff1a\u2018linear\u2019, \u2018poly\u2019, \u2018rbf\u2019, \u2018sigmoid\u2019, \u2018precomputed\u2019 gamma: \u6838\u76f8\u5173\u7cfb\u6570\u3002\u6d6e\u70b9\u6570\uff0cIf gamma is \u2018auto\u2019 then 1/n_features will be used instead.\u70b9\u5c06\u88ab\u62c6\u5206\u3002 \u6253\u5370\u7ed3\u679c\uff1a SVM\u6a21\u578b\u8bc4\u4ef7: 0.961904761905","title":"SVM(\u652f\u6301\u5411\u91cf\u673a\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_7","text":"\u8fd8\u5728\u611f\u6168\u56e0\u4e3a\u4e0d\u4f1atensorflow\u800c\u65e0\u6cd5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\uff1f\u8fd8\u5728\u7fa1\u6155\u795e\u7ecf\u7f51\u7edc\u7684\u60ca\u4eba\u6548\u679c?\u4e0d\u9700\u8981tf\uff0c\u4e0d\u9700\u8981caffe\uff0c\u4e0d\u9700\u8981pytorch\uff01\u53ea\u8981\u4e00\u53e5\u8bdd\uff0c\u4fbf\u53ef\u4ee5\u5b9e\u73b0\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff01\uff01\uff01 \u5728\u8fd9\u91cc\u8fd8\u662f\u7b80\u5355\u8bf4\u4e00\u4e0bM-P\u795e\u7ecf\u5143\u7684\u539f\u7406\uff1a \ud835\udc99\ud835\udc8a \u6765\u81ea\u7b2c\ud835\udc56\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u5165 \ud835\udc98\ud835\udc8a \u7b2c\ud835\udc56\u4e2a\u795e\u7ecf\u5143\u7684\u8fde\u63a5\u6743\u91cd \ud835\udf3d \u9608\u503c(threshold)\u6216\u79f0\u4e3a\u504f\u7f6e\uff08bias\uff09 \ud835\udc53 \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5e38\u7528\uff1asigmoid\uff0crelu\uff0ctanh\u7b49\u7b49 \u5bf9\u4e8e\u4e00\u4e2a\u795e\u7ecf\u5143\u6765\u8bf4\uff0c\u6709i\u4e2a\u8f93\u5165\uff0c\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6743\u91cd\uff08w\uff09\uff0c\u795e\u7ecf\u5143\u5177\u6709\u4e00\u4e2a\u504f\u7f6e\uff08\u9608\u503c\uff09\uff0c\u5c06\u6240\u6709\u7684i*w\u6c42\u548c\u540e\u51cf\u53bb\u9608\u503c\u5f97\u5230\u4e00\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6fc0\u6d3b\u51fd\u6570\u5c06\u6839\u636e\u8fd9\u4e2a\u53c2\u6570\u6765\u5224\u5b9a\u8fd9\u4e2a\u795e\u7ecf\u5143\u662f\u5426\u88ab\u6fc0\u6d3b\u3002 \u672c\u8d28\u4e0a, M-P\u795e\u7ecf\u5143=\u7ebf\u6027\u4e8c\u5206\u7c7b\u5668 \u90a3\u4e48\u4ec0\u4e48\u662f\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff1f \u7ebf\u6027\u4e0d\u53ef\u5206\uff1a\u4e00\u4e2a\u8d85\u5e73\u9762\u6ca1\u6cd5\u89e3\u51b3\u95ee\u9898\uff0c\u5c31\u7528\u4e24\u4e2a\u8d85\u5e73\u9762\u6765\u89e3\u51b3\uff0c\u4ec0\u4e48\uff1f\u8fd8\u4e0d\u884c\uff01\u90a3\u5c31\u518d\u589e\u52a0\u8d85\u5e73\u9762\u76f4\u5230\u89e3\u51b3\u95ee\u9898\u4e3a\u6b62\u3002 \u2014\u2014\u591a\u5c42\u795e\u7ecf\u7f51\u7edc \u6ca1\u9519\uff0c\u591a\u5c42\u795e\u7ecf\u5143\u5c31\u662f\u7528\u6765\u89e3\u51b3\u7ebf\u6027\u4e0d\u53ef\u5206\u95ee\u9898\u7684\u3002 \u90a3\u4e48\uff0csklearn\u4e2d\u5982\u4f55\u5b9e\u73b0\u5462\uff1f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165\u795e\u7ecf\u7f51\u7edc\u7684\u5305 import sklearn.neural_network as sk_nn #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #\u521b\u5efa\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u7684\u6a21\u578b model = sk_nn . MLPClassifier ( activation = 'tanh' , solver = 'adam' , alpha = 0.0001 , learning_rate = 'adaptive' , learning_rate_init = 0.001 , max_iter = 200 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( '\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a hidden_layer_sizes: \u5143\u7956 activation\uff1a\u6fc0\u6d3b\u51fd\u6570 {\u2018identity\u2019, \u2018logistic\u2019, \u2018tanh\u2019, \u2018relu\u2019}, \u9ed8\u8ba4 \u2018relu\u2019 solver \uff1a\u4f18\u5316\u7b97\u6cd5{\u2018lbfgs\u2019, \u2018sgd\u2019, \u2018Adam\u2019} alpha\uff1aL2\u60e9\u7f5a(\u6b63\u5219\u5316\u9879)\u53c2\u6570 learning_rate\uff1a\u5b66\u4e60\u7387 {\u2018constant\u2019, \u2018invscaling\u2019, \u2018adaptive\u2019} learning_rate_init\uff1a\u521d\u59cb\u5b66\u4e60\u7387\uff0c\u9ed8\u8ba40.001 max_iter\uff1a\u6700\u5927\u8fed\u4ee3\u6b21\u6570 \u9ed8\u8ba4200 \u7279\u522b\uff1a \u5b66\u4e60\u7387\u4e2d\u53c2\u6570\uff1a constant: \u6709\u2018learning_rate_init\u2019\u7ed9\u5b9a\u7684\u6052\u5b9a\u5b66\u4e60\u7387 incscaling\uff1a\u968f\u7740\u65f6\u95f4t\u4f7f\u7528\u2019power_t\u2019\u7684\u9006\u6807\u5ea6\u6307\u6570\u4e0d\u65ad\u964d\u4f4e\u5b66\u4e60\u7387 adaptive\uff1a\u53ea\u8981\u8bad\u7ec3\u635f\u8017\u5728\u4e0b\u964d\uff0c\u5c31\u4fdd\u6301\u5b66\u4e60\u7387\u4e3a\u2019learning_rate_init\u2019\u4e0d\u53d8 \u4f18\u5316\u7b97\u6cd5\u53c2\u6570\uff1a lbfgs\uff1aquasi-Newton\u65b9\u6cd5\u7684\u4f18\u5316\u5668 sgd\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d adam\uff1a Kingma, Diederik, and Jimmy Ba\u63d0\u51fa\u7684\u673a\u9047\u968f\u673a\u68af\u5ea6\u7684\u4f18\u5316\u5668 \u6253\u5370\u7ed3\u679c\uff1a\uff08\u795e\u7ecf\u7f51\u7edc\u7684\u786e\u725b\u903c\uff09 \u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8bc4\u4ef7: 0.980952380952","title":"\u795e\u7ecf\u7f51\u7edc"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#knnk-","text":"KNN\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u597d\u7528\uff0c\u4e5f\u975e\u5e38\u5e38\u7528\u7684\u5206\u7c7b\u7b97\u6cd5\u4e86\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u6613\u61c2\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u6ca1\u6709\u4e4b\u4e00\u3002\u7531\u4e8e\u7b97\u6cd5\u5148\u5929\u4f18\u52bf\uff0cKNN\u751a\u81f3\u4e0d\u9700\u8981\u8bad\u7ec3\u5c31\u53ef\u4ee5\u5f97\u5230\u975e\u5e38\u597d\u7684\u5206\u7c7b\u6548\u679c\u4e86\u3002 \u5728\u8bad\u7ec3\u96c6\u4e2d\u6570\u636e\u548c\u6807\u7b7e\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u6d4b\u8bd5\u6570\u636e\uff0c\u5c06\u6d4b\u8bd5\u6570\u636e\u7684\u7279\u5f81\u4e0e\u8bad\u7ec3\u96c6\u4e2d\u5bf9\u5e94\u7684\u7279\u5f81\u8fdb\u884c\u76f8\u4e92\u6bd4\u8f83\uff0c\u627e\u5230\u8bad\u7ec3\u96c6\u4e2d\u4e0e\u4e4b\u6700\u4e3a\u76f8\u4f3c\u7684\u524dK\u4e2a\u6570\u636e\uff0c\u5219\u8be5\u6d4b\u8bd5\u6570\u636e\u5bf9\u5e94\u7684\u7c7b\u522b\u5c31\u662fK\u4e2a\u6570\u636e\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\u5206\u7c7b\u3002 \u5176\u7b97\u6cd5\u7684\u63cf\u8ff0\u4e3a\uff1a 1.\u8ba1\u7b97\u6d4b\u8bd5\u6570\u636e\u4e0e\u5404\u4e2a\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1b 2.\u6309\u7167\u8ddd\u79bb\u7684\u9012\u589e\u5173\u7cfb\u8fdb\u884c\u6392\u5e8f\uff1b 3.\u9009\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684K\u4e2a\u70b9\uff1b 4.\u786e\u5b9a\u524dK\u4e2a\u70b9\u6240\u5728\u7c7b\u522b\u7684\u51fa\u73b0\u9891\u7387\uff1b 5.\u8fd4\u56de\u524dK\u4e2a\u70b9\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u522b\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u5206\u7c7b\u3002 (\u611f\u89c9\u53c8\u8bf4\u591a\u4e86...... - -!) \u5176\u5b9e\u8fd9\u4e2a\u7b97\u6cd5\u81ea\u5df1\u5b9e\u73b0\u8d77\u6765\u4e5f\u5c31\u53ea\u6709\u51e0\u884c\u4ee3\u7801\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u662f\u4f7f\u7528sklearn\u6765\u5b9e\u73b0\u3002 sklearn\u4e2d\u7684KNN\u53ef\u4ee5\u505a\u5206\u7c7b\u4e5f\u53ef\u4ee5\u505a\u56de\u5f52 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165KNN\u7684\u5305 import sklearn.neighbors as sk_neighbors #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris = datasets . load_iris () iris_X = iris . data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y = iris . target #\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u6570\u636e\u7684\u5207\u5272(7:3),\u6570\u636e\u4f1a\u88ab\u6253\u4e71 X_train , X_test , y_train , y_test = train_test_split ( iris_X , iris_Y , test_size = 0.3 ) #KNN\u5206\u7c7b\u6a21\u578b model = sk_neighbors . KNeighborsClassifier ( n_neighbors = 5 , n_jobs = 1 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u4e0e\u6807\u7b7e\u8fd4\u56de\u6b63\u786e\u7387\u7684\u5747\u503c print ( 'KNN\u6a21\u578b(\u5206\u7c7b)\u8bc4\u4ef7:' , acc ) new_X = ([[ 1 , 2 , 5 , 9 ]]) #\u4e8c\u7ef4 print ( model . predict ( new_X )) #\u6253\u5370\u9884\u6d4b\u7684\u7ed3\u679c #KNN\u56de\u5f52\u6a21\u578b model = sk_neighbors . KNeighborsRegressor ( n_neighbors = 5 , n_jobs = 1 ) model . fit ( X_train , y_train ) acc = model . score ( X_test , y_test ) #\u8fd4\u56de\u9884\u6d4b\u7684\u786e\u5b9a\u7cfb\u6570R2 print ( 'KNN\u6a21\u578b(\u56de\u5f52)\u8bc4\u4ef7:' , acc ) \u53c2\u6570\u8bf4\u660e\uff1a n_neighbors\uff1a \u4f7f\u7528\u90bb\u5c45\u7684\u6570\u76ee n_jobs\uff1a\u5e76\u884c\u4efb\u52a1\u6570 \u6253\u5370\u7ed3\u679c\uff1a KNN\u6a21\u578b ( \u5206\u7c7b ) \u8bc4\u4ef7 : 0.9777777777777777 [ 2 ] KNN\u6a21\u578b ( \u56de\u5f52 ) \u8bc4\u4ef7 : 0.9710843373493976","title":"KNN\uff08K-\u8fd1\u90bb\u7b97\u6cd5\uff09"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_8","text":"\u597d\u7684\uff0c\u7ec8\u4e8e\u8bf4\u5b8c\u4e86\u5e38\u7528\u6a21\u578b\uff0c\u611f\u89c9\u5b8c\u5168\u662f\u4e00\u4e2a\u7b97\u6cd5\u6982\u8ff0\u554ahhhhh \u65e2\u7136\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u6570\u636e\u7684\u83b7\u53d6\uff0c\u6a21\u578b\u7684\u5efa\u7acb\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u6b65\u4fbf\u662f\u9a8c\u8bc1\u6211\u4eec\u7684\u6a21\u578b \u5176\u5b9e\u4ea4\u53c9\u9a8c\u8bc1\u5e94\u8be5\u653e\u5728\u6570\u636e\u96c6\u7684\u5212\u5206\u90a3\u91cc\uff0c\u4f46\u662f\u4ed6\u53c8\u4e0e\u6a21\u578b\u7684\u9a8c\u8bc1\u7d27\u5bc6\u76f8\u5173\uff0c\u6240\u4ee5\u6211\u5c31\u6309\u7167\u7f16\u5199\u4ee3\u7801\u7684\u987a\u5e8f\u8fdb\u884c\u8bb2\u89e3\u4e86\u3002 \u9996\u5148\uff0c\u4ec0\u4e48\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff1f \u8fd9\u91cc\u5b8c\u5168\u5f15\u7528\u897f\u74dc\u4e66\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u4e66\u4e0a\u5199\u7684\u975e\u5e38\u6e05\u695a\uff01\uff01\uff01 \u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u5148\u5c06\u6570\u636e\u96c6D\u5212\u5206\u4e3ak\u4e2a\u5927\u5c0f\u76f8\u4f3c\u7684\u4e92\u65a5\u5b50\u96c6\uff0c\u6bcf\u4e2a\u5b50\u96c6Di\u90fd\u5c3d\u53ef\u80fd\u4fdd\u6301\u6570\u636e\u5206\u5e03\u7684\u4e00\u81f4\u6027\uff0c\u5373\u4eceD\u4e2d\u901a\u8fc7\u5206\u5c42\u91c7\u6837\u5f97\u5230\u3002\u7136\u540e\u6bcf\u6b21\u7528k-1\u4e2a\u5b50\u96c6\u7684\u5e76\u96c6\u505a\u4e3a\u8bad\u7ec3\u96c6\uff0c\u4f59\u4e0b\u7684\u5b50\u96c6\u505a\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u83b7\u5f97K\u7ec4\u8bad\u7ec3/\u6d4b\u8bd5\u96c6\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884ck\u6b21\u8bad\u7ec3\u548c\u6d4b\u8bd5\uff0c\u6700\u7ec8\u8fd4\u56de\u7684\u662f\u8fd9\u4e2ak\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u7684\u5747\u503c\u3002k\u901a\u5e38\u7684\u53d6\u503c\u662f10\uff0c\u5176\u4ed6\u5e38\u7528\u53d6\u503c\u4e3a2\uff0c5\uff0c20\u7b49\u3002 \u8fd9\u91cc\u4f7f\u7528KNN\u505a\u4e3a\u8bad\u7ec3\u6a21\u578b\uff0c\u91c7\u7528\u5341\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002 # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" import numpy as np #\u4ecesklearn\u4e2d\u5012\u5165\u6570\u636e\u96c6 from sklearn import datasets #\u5207\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u7684\u6a21\u5757 #from sklearn.cross_validation import train_test_split from sklearn.model_selection import train_test_split #\u5bfc\u5165KNN\u7684\u5305 import sklearn.neighbors as sk_neighbors #\u5bfc\u5165\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5305 import sklearn.model_selection as sk_model_selection #\u4f7f\u7528\u7684\u9e22\u5c3e\u82b1\u7684\u6570\u636e\u96c6 iris =datasets.load_iris() iris_X=iris.data #\u6570\u636e\u7684\u7279\u5f81(4\u4e2a\u5c5e\u6027) iris_Y=iris.target#\u6570\u636e\u7684\u6807\u7b7e(3\u4e2a\u5206\u7c7b,0,1,2) #\u521b\u5efa\u6a21\u578b model = sk_neighbors.KNeighborsClassifier(n_neighbors=5,n_jobs=1) #KNN\u5206\u7c7b #\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1 accs=sk_model_selection.cross_val_score(model, iris_X, y=iris_Y, scoring=None,cv=10, n_jobs=1) print('\u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c:',accs) \u53c2\u6570\u8bf4\u660e\uff1a model\uff1a\u62df\u5408\u6570\u636e\u7684\u6a21\u578b cv \uff1a \u5b50\u96c6\u4e2a\u6570 \u5c31\u662fk scoring: \u6253\u5206\u53c2\u6570 \u9ed8\u8ba4\u2018accuracy\u2019\u3001\u53ef\u9009\u2018f1\u2019\u3001\u2018precision\u2019\u3001\u2018recall\u2019 \u3001\u2018roc_auc\u2019\u3001'neg_log_loss' \u6253\u5370\u7ed3\u679c\uff1a \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c: [ 1. 0.93333333 1. 1. 0.86666667 0.93333333 0.93333333 1. 1. 1. ]","title":"\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"\u673a\u5668\u5b66\u4e60/004-sklearn\uff1a\u7279\u5f81\u63d0\u53d6\uff0c\u5e38\u7528\u6a21\u578b\uff0c\u4ea4\u53c9\u9a8c\u8bc1/#_9","text":"\u6a21\u578b\u7684\u4fdd\u5b58\u548c\u8f7d\u5165\u65b9\u4fbf\u6211\u4eec\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4fdd\u5b58\u5728\u672c\u5730\u6216\u53d1\u9001\u5728\u7f51\u4e0a\uff0c\u8f7d\u5165\u6a21\u578b\u65b9\u4fbf\u6211\u4eec\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u8fdb\u884c\u6d4b\u8bd5\u3002 \u4f7f\u7528pickle\u53ef\u4ee5\u8fdb\u884c\u4fdd\u5b58\u4e0e\u8f7d\u5165 \u4e5f\u53ef\u4ee5\u4f7f\u7528sklearn\u81ea\u5e26\u7684\u51fd\u6570 import sklearn.externals as sk_externals sk_externals.joblib.dump(model,'model.pickle') #\u4fdd\u5b58 model = sk_externals.joblib.load('model.pickle') #\u8f7d\u5165 \u53c2\u8003\u7b80\u4e66: https://www.jianshu.com/p/731610dca805","title":"\u6a21\u578b\u7684\u4fdd\u5b58\u548c\u8f7d\u5165"},{"location":"\u673a\u5668\u5b66\u4e60/005-sklearn\u4e4b\u4ea4\u53c9\u9a8c\u8bc1/","text":"\u8f6c\u8f7d\u4e8e\u83ab\u70e6python: https://morvanzhou.github.io/tutorials/machine-learning/sklearn/3-2-cross-validation1/ Sklearn \u4e2d\u7684 Cross Validation (\u4ea4\u53c9\u9a8c\u8bc1) __2.0\u7248\u672c\u6539\u4e3a\u4e86 sklearn.model_selection \u5bf9\u4e8e\u6211\u4eec\u9009\u62e9\u6b63\u786e\u7684 Model \u548c Model \u7684\u53c2\u6570\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\uff0c \u6709\u4e86\u4ed6\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u80fd\u76f4\u89c2\u7684\u770b\u51fa\u4e0d\u540c Model \u6216\u8005\u53c2\u6570\u5bf9\u7ed3\u6784\u51c6\u786e\u5ea6\u7684\u5f71\u54cd\u3002 Model \u57fa\u7840\u9a8c\u8bc1\u6cd5 \u00b6 from sklearn.datasets import load_iris # iris\u6570\u636e\u96c6 from sklearn.model_selection import train_test_split # \u5206\u5272\u6570\u636e\u6a21\u5757 from sklearn.neighbors import KNeighborsClassifier # K\u6700\u8fd1\u90bb(kNN\uff0ck-NearestNeighbor)\u5206\u7c7b\u7b97\u6cd5 #\u52a0\u8f7diris\u6570\u636e\u96c6 iris = load_iris () X = iris . data y = iris . target #\u5206\u5272\u6570\u636e\u5e76 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 4 ) #\u5efa\u7acb\u6a21\u578b knn = KNeighborsClassifier () #\u8bad\u7ec3\u6a21\u578b knn . fit ( X_train , y_train ) #\u5c06\u51c6\u786e\u7387\u6253\u5370\u51fa print ( \"\u51c6\u786e\u7387: \\n \" , knn . score ( X_test , y_test )) \u6267\u884c\u7ed3\u679c: \u51c6\u786e\u7387 : 0.9736842105263158 \u53ef\u4ee5\u770b\u5230\u57fa\u7840\u9a8c\u8bc1\u7684\u51c6\u786e\u7387\u4e3a0.9736842105263158 Model \u4ea4\u53c9\u9a8c\u8bc1\u6cd5(Cross Validation):\u627f\u63a5\u4e0a\u9762\u7684\u7a0b\u5e8f from sklearn.model_selection import cross_val_score # K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u6a21\u5757 #\u4f7f\u7528K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u6a21\u5757 scores = cross_val_score ( knn , X , y , cv = 5 , scoring = 'accuracy' ) #accuracy\u662f\u51c6\u786e\u7387\u7684\u610f\u601d #\u5c065\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387\u6253\u5370\u51fa print ( \"5\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387: \\n \" , scores ) #\u5c065\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u5e73\u5747\u7387\u6253\u5370\u51fa print ( \"\u5e73\u5747\u9884\u6d4b\u51c6\u786e\u7387: \\n \" , scores . mean ()) \u6267\u884c\u7ed3\u679c: 5 \u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387 : [ 0.96666667 1. 0.93333333 0.96666667 1. ] \u5e73\u5747\u9884\u6d4b\u51c6\u786e\u7387 : 0.9733333333333334 \u53ef\u4ee5\u770b\u5230\u4ea4\u53c9\u9a8c\u8bc1\u7684\u51c6\u786e\u5e73\u5747\u7387\u4e3a0.9733333333334 \u4ee5\u51c6\u786e\u7387(accuracy)\u5224\u65ad: \u4e00\u822c\u6765\u8bf4\u51c6\u786e\u7387(accuracy)\u4f1a\u7528\u4e8e\u5224\u65ad\u5206\u7c7b(Classification)\u6a21\u578b\u7684\u597d\u574f\u3002 #\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u770b\u4e00\u4e0b\u5206\u51e0\u7c7b(K)\u6bd4\u8f83\u597d import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 #\u5efa\u7acb\u6d4b\u8bd5\u53c2\u6570\u96c6 k_range = range ( 1 , 31 ) k_scores = [] #\u85c9\u7531\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u4e0d\u540c\u53c2\u6570\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\uff0c\u5e76\u8fd4\u56de\u4ea4\u53c9\u9a8c\u8bc1\u540e\u7684\u5e73\u5747\u51c6\u786e\u7387 for k in k_range : knn = KNeighborsClassifier ( n_neighbors = k ) #\u5faa\u73af\u5efa\u6a21 scores = cross_val_score ( knn , X , y , cv = 10 , scoring = 'accuracy' ) k_scores . append ( scores . mean ()) #\u53ef\u89c6\u5316\u6570\u636e plt . plot ( k_range , k_scores ) plt . xlabel ( 'Value of K for KNN' ) plt . ylabel ( 'Cross-Validated Accuracy' ) plt . show () \u6267\u884c\u7ed3\u679c: \u4ece\u56fe\u4e2d\u53ef\u4ee5\u5f97\u77e5\uff0c\u9009\u62e912~18\u7684k\u503c\u6700\u597d\u3002\u9ad8\u8fc718\u4e4b\u540e\uff0c\u51c6\u786e\u7387\u5f00\u59cb\u4e0b\u964d\u5219\u662f\u56e0\u4e3a\u8fc7\u62df\u5408(Over fitting)\u7684\u95ee\u9898\u3002 \u4ee5\u5e73\u5747\u65b9\u5dee(Mean squared error) \u4e00\u822c\u6765\u8bf4\u5e73\u5747\u65b9\u5dee(Mean squared error)\u4f1a\u7528\u4e8e\u5224\u65ad\u56de\u5f52(Regression)\u6a21\u578b\u7684\u597d\u574f import matplotlib.pyplot as plt k_range = range ( 1 , 31 ) k_scores = [] for k in k_range : knn = KNeighborsClassifier ( n_neighbors = k ) loss = - cross_val_score ( knn , X , y , cv = 10 , scoring = 'neg_mean_squared_error' ) #\u57280.20\u4e2dmean_squared_error\u88ab\u5f03\u7528\u6539\u4e3a\u4e86neg_mean_squared_error k_scores . append ( loss . mean ()) plt . plot ( k_range , k_scores ) plt . xlabel ( 'Value of K for KNN' ) plt . ylabel ( 'Cross-Validated MSE' ) plt . show () \u6267\u884c\u7ed3\u679c: \u7531\u56fe\u53ef\u4ee5\u5f97\u77e5\uff0c\u5e73\u5747\u65b9\u5dee\u8d8a\u4f4e\u8d8a\u597d\uff0c\u56e0\u6b64\u9009\u62e913~18\u5de6\u53f3\u7684K\u503c\u4f1a\u6700\u597d\u3002 sklearn.learning_curve (\u57280.20\u7248\u672c\u653e\u5230\u4e86sklearn.model_selection\u4e2d\u4e86)\u4e2d\u7684 learning curve( from sklearn.model_selection import learning_curve ) \u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u770b\u51fa\u6211\u4eec\u7684 model \u5b66\u4e60\u7684\u8fdb\u5ea6, \u5bf9\u6bd4\u53d1\u73b0\u6709\u6ca1\u6709 overfitting \u7684\u95ee\u9898. \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5bf9\u6211\u4eec\u7684 model \u8fdb\u884c\u8c03\u6574, \u514b\u670d overfitting \u7684\u95ee\u9898. Learning curve \u68c0\u89c6\u8fc7\u62df\u5408 \u52a0\u8f7d\u5bf9\u5e94\u6a21\u5757: from sklearn.model_selection import learning_curve #\u5b66\u4e60\u66f2\u7ebf\u6a21\u5757 from sklearn.datasets import load_digits #digits\u6570\u636e\u96c6 from sklearn.svm import SVC #Support Vector Classifier import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 import numpy as np \u52a0\u8f7ddigits\u6570\u636e\u96c6\uff0c\u5176\u5305\u542b\u7684\u662f\u624b\u5199\u4f53\u7684\u6570\u5b57\uff0c\u4ece0\u52309\u3002\u6570\u636e\u96c6\u603b\u5171\u67091797\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u753164\u4e2a\u7279\u5f81\u7ec4\u6210\uff0c \u5206\u522b\u4e3a\u5176\u624b\u5199\u4f53\u5bf9\u5e94\u76848\u00d78\u50cf\u7d20\u8868\u793a\uff0c\u6bcf\u4e2a\u7279\u5f81\u53d6\u503c0~16\u3002 digits = load_digits () #\u624b\u5199\u4f53\u7684\u6570\u5b57 X = digits . data #X\u6570\u636e y = digits . target #\u6807\u7b7ey \u89c2\u5bdf\u6837\u672c\u7531\u5c0f\u5230\u5927\u7684\u5b66\u4e60\u66f2\u7ebf\u53d8\u5316, \u91c7\u7528K\u6298\u4ea4\u53c9\u9a8c\u8bc1 cv=10, \u9009\u62e9\u5e73\u5747\u65b9\u5dee\u68c0\u89c6\u6a21\u578b\u6548\u80fd scoring='neg_mean_squared_error', \u6837\u672c\u7531\u5c0f\u5230\u5927\u5206\u62105\u8f6e\u68c0\u89c6\u5b66\u4e60\u66f2\u7ebf(10%, 25%, 50%, 75%, 100%): train_sizes , train_loss , test_loss = learning_curve ( SVC ( gamma = 0.001 ), X , y , cv = 10 , scoring = 'mean_squared_error' , train_sizes = [ 0.1 , 0.25 , 0.5 , 0.75 , 1 ]) #\u5e73\u5747\u6bcf\u4e00\u8f6e\u6240\u5f97\u5230\u7684\u5e73\u5747\u65b9\u5dee(\u51715\u8f6e\uff0c\u5206\u522b\u4e3a\u6837\u672c10%\u300125%\u300150%\u300175%\u3001100%) train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) \u53ef\u89c6\u5316\u56fe\u5f62: plt . plot ( train_sizes , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) plt . plot ( train_sizes , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"Training examples\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6574\u4e2a\u7684\u7a0b\u5e8f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" from sklearn.model_selection import learning_curve #\u5b66\u4e60\u66f2\u7ebf\u6a21\u5757 from sklearn.datasets import load_digits #digits\u6570\u636e\u96c6 from sklearn.svm import SVC #Support Vector Classifier import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 import numpy as np digits = load_digits () X = digits . data y = digits . target train_sizes , train_loss , test_loss = learning_curve ( SVC ( gamma = 0.001 ), X , y , cv = 10 , scoring = 'mean_squared_error' , #gamma\u503c\u7684\u5927\u5c0f\u6539\u53d8\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898 train_sizes = [ 0.1 , 0.25 , 0.5 , 0.75 , 1 ]) train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) plt . plot ( train_sizes , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) plt . plot ( train_sizes , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"Training examples\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6267\u884c\u7ed3\u679c: \u5f53gamma\u53d8\u4e3a0.01\u65f6: \u6267\u884c\u7ed3\u679c: \u5f53gamma\u53d8\u4e3a0.1\u65f6: \u6267\u884c\u7ed3\u679c: \u8fde\u7eed\u4e09\u8282\u7684\u4ea4\u53c9\u9a8c\u8bc1(cross validation)\u8ba9\u6211\u4eec\u77e5\u9053\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u9a8c\u8bc1\u662f\u6709\u591a\u4e48\u7684\u91cd\u8981, \u8fd9\u4e00\u6b21\u7684 sklearn \u4e2d\u6211\u4eec\u7528\u5230\u4e86sklearn.learning_curve(0.20\u4e2d\u5bfc\u5305\u6539\u53d8)\u5f53\u4e2d\u7684\u53e6\u5916\u4e00\u79cd, \u53eb\u505avalidation_curve,\u7528\u8fd9\u4e00\u79cd\u66f2\u7ebf\u6211\u4eec\u5c31\u80fd\u66f4\u52a0\u76f4\u89c2\u770b\u51fa\u6539\u53d8\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u7684\u65f6\u5019\u6709\u6ca1\u6709\u8fc7\u62df\u5408(overfitting)\u7684\u95ee\u9898\u4e86. \u8fd9\u4e5f\u662f\u53ef\u4ee5\u8ba9\u6211\u4eec\u66f4\u597d\u7684\u9009\u62e9\u53c2\u6570\u7684\u65b9\u6cd5. validation_curve \u68c0\u89c6\u8fc7\u62df\u5408 \u7ee7\u7eed\u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\uff0c\u5e76\u7a0d\u4f5c\u5c0f\u4fee\u6539\u5373\u53ef\u753b\u51fa\u56fe\u5f62\u3002\u8fd9\u6b21\u6211\u4eec\u6765\u9a8c\u8bc1SVC\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570 gamma \u5728\u4ec0\u4e48\u8303\u56f4\u5185\u80fd\u4f7f model \u4ea7\u751f\u597d\u7684\u7ed3\u679c. \u4ee5\u53ca\u8fc7\u62df\u5408\u548c gamma \u53d6\u503c\u7684\u5173\u7cfb. # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" from sklearn.model_selection import validation_curve #validation_curve\u6a21\u5757 from sklearn.datasets import load_digits from sklearn.svm import SVC import matplotlib.pyplot as plt import numpy as np #digits\u6570\u636e\u96c6(\u624b\u5199\u6570\u5b57) digits = load_digits () X = digits . data y = digits . target #\u5efa\u7acb\u53c2\u6570\u6d4b\u8bd5\u96c6 param_range = np . logspace ( - 6 , - 2.3 , 5 ) print ( param_range ) #\u4f7f\u7528validation_curve\u5feb\u901f\u627e\u51fa\u53c2\u6570\u5bf9\u6a21\u578b\u7684\u5f71\u54cd train_loss , test_loss = validation_curve ( SVC (), X , y , param_name = 'gamma' , param_range = param_range , cv = 10 , scoring = 'neg_mean_squared_error' ) #param_name='gamma'\u8868\u793a\u8981\u6539\u53d8SVC\u4e2d\u7684\u8fd9\u4e2agamma\u53c2\u6570 #param_range=param_range\u8868\u793a\u6539\u53d8\u540e\u7684\u53d6\u503c\u8303\u56f4\u662f\u540e\u9762\u8fd9\u4e2a #\u5e73\u5747\u6bcf\u4e00\u8f6e\u7684\u5e73\u5747\u65b9\u5dee train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) #\u53ef\u89c6\u5316\u56fe\u5f62 plt . plot ( param_range , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) #\u6a2a\u5750\u6807\u662fgamma\u7684\u503c,\u7eb5\u5750\u6807\u662floss\u503c plt . plot ( param_range , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"gamma\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6267\u884c\u7ed3\u679c: \u7531\u56fe\u4e2d\u53ef\u4ee5\u660e\u663e\u770b\u5230gamma\u503c\u5927\u4e8e0.001\uff0c\u6a21\u578b\u5c31\u4f1a\u6709\u8fc7\u62df\u5408(Overfitting)\u7684\u95ee\u9898\u3002","title":"005-sklearn\u4e4b\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"\u673a\u5668\u5b66\u4e60/005-sklearn\u4e4b\u4ea4\u53c9\u9a8c\u8bc1/#model","text":"from sklearn.datasets import load_iris # iris\u6570\u636e\u96c6 from sklearn.model_selection import train_test_split # \u5206\u5272\u6570\u636e\u6a21\u5757 from sklearn.neighbors import KNeighborsClassifier # K\u6700\u8fd1\u90bb(kNN\uff0ck-NearestNeighbor)\u5206\u7c7b\u7b97\u6cd5 #\u52a0\u8f7diris\u6570\u636e\u96c6 iris = load_iris () X = iris . data y = iris . target #\u5206\u5272\u6570\u636e\u5e76 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 4 ) #\u5efa\u7acb\u6a21\u578b knn = KNeighborsClassifier () #\u8bad\u7ec3\u6a21\u578b knn . fit ( X_train , y_train ) #\u5c06\u51c6\u786e\u7387\u6253\u5370\u51fa print ( \"\u51c6\u786e\u7387: \\n \" , knn . score ( X_test , y_test )) \u6267\u884c\u7ed3\u679c: \u51c6\u786e\u7387 : 0.9736842105263158 \u53ef\u4ee5\u770b\u5230\u57fa\u7840\u9a8c\u8bc1\u7684\u51c6\u786e\u7387\u4e3a0.9736842105263158 Model \u4ea4\u53c9\u9a8c\u8bc1\u6cd5(Cross Validation):\u627f\u63a5\u4e0a\u9762\u7684\u7a0b\u5e8f from sklearn.model_selection import cross_val_score # K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u6a21\u5757 #\u4f7f\u7528K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u6a21\u5757 scores = cross_val_score ( knn , X , y , cv = 5 , scoring = 'accuracy' ) #accuracy\u662f\u51c6\u786e\u7387\u7684\u610f\u601d #\u5c065\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387\u6253\u5370\u51fa print ( \"5\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387: \\n \" , scores ) #\u5c065\u6b21\u7684\u9884\u6d4b\u51c6\u786e\u5e73\u5747\u7387\u6253\u5370\u51fa print ( \"\u5e73\u5747\u9884\u6d4b\u51c6\u786e\u7387: \\n \" , scores . mean ()) \u6267\u884c\u7ed3\u679c: 5 \u6b21\u7684\u9884\u6d4b\u51c6\u786e\u7387 : [ 0.96666667 1. 0.93333333 0.96666667 1. ] \u5e73\u5747\u9884\u6d4b\u51c6\u786e\u7387 : 0.9733333333333334 \u53ef\u4ee5\u770b\u5230\u4ea4\u53c9\u9a8c\u8bc1\u7684\u51c6\u786e\u5e73\u5747\u7387\u4e3a0.9733333333334 \u4ee5\u51c6\u786e\u7387(accuracy)\u5224\u65ad: \u4e00\u822c\u6765\u8bf4\u51c6\u786e\u7387(accuracy)\u4f1a\u7528\u4e8e\u5224\u65ad\u5206\u7c7b(Classification)\u6a21\u578b\u7684\u597d\u574f\u3002 #\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u770b\u4e00\u4e0b\u5206\u51e0\u7c7b(K)\u6bd4\u8f83\u597d import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 #\u5efa\u7acb\u6d4b\u8bd5\u53c2\u6570\u96c6 k_range = range ( 1 , 31 ) k_scores = [] #\u85c9\u7531\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u4e0d\u540c\u53c2\u6570\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\uff0c\u5e76\u8fd4\u56de\u4ea4\u53c9\u9a8c\u8bc1\u540e\u7684\u5e73\u5747\u51c6\u786e\u7387 for k in k_range : knn = KNeighborsClassifier ( n_neighbors = k ) #\u5faa\u73af\u5efa\u6a21 scores = cross_val_score ( knn , X , y , cv = 10 , scoring = 'accuracy' ) k_scores . append ( scores . mean ()) #\u53ef\u89c6\u5316\u6570\u636e plt . plot ( k_range , k_scores ) plt . xlabel ( 'Value of K for KNN' ) plt . ylabel ( 'Cross-Validated Accuracy' ) plt . show () \u6267\u884c\u7ed3\u679c: \u4ece\u56fe\u4e2d\u53ef\u4ee5\u5f97\u77e5\uff0c\u9009\u62e912~18\u7684k\u503c\u6700\u597d\u3002\u9ad8\u8fc718\u4e4b\u540e\uff0c\u51c6\u786e\u7387\u5f00\u59cb\u4e0b\u964d\u5219\u662f\u56e0\u4e3a\u8fc7\u62df\u5408(Over fitting)\u7684\u95ee\u9898\u3002 \u4ee5\u5e73\u5747\u65b9\u5dee(Mean squared error) \u4e00\u822c\u6765\u8bf4\u5e73\u5747\u65b9\u5dee(Mean squared error)\u4f1a\u7528\u4e8e\u5224\u65ad\u56de\u5f52(Regression)\u6a21\u578b\u7684\u597d\u574f import matplotlib.pyplot as plt k_range = range ( 1 , 31 ) k_scores = [] for k in k_range : knn = KNeighborsClassifier ( n_neighbors = k ) loss = - cross_val_score ( knn , X , y , cv = 10 , scoring = 'neg_mean_squared_error' ) #\u57280.20\u4e2dmean_squared_error\u88ab\u5f03\u7528\u6539\u4e3a\u4e86neg_mean_squared_error k_scores . append ( loss . mean ()) plt . plot ( k_range , k_scores ) plt . xlabel ( 'Value of K for KNN' ) plt . ylabel ( 'Cross-Validated MSE' ) plt . show () \u6267\u884c\u7ed3\u679c: \u7531\u56fe\u53ef\u4ee5\u5f97\u77e5\uff0c\u5e73\u5747\u65b9\u5dee\u8d8a\u4f4e\u8d8a\u597d\uff0c\u56e0\u6b64\u9009\u62e913~18\u5de6\u53f3\u7684K\u503c\u4f1a\u6700\u597d\u3002 sklearn.learning_curve (\u57280.20\u7248\u672c\u653e\u5230\u4e86sklearn.model_selection\u4e2d\u4e86)\u4e2d\u7684 learning curve( from sklearn.model_selection import learning_curve ) \u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u770b\u51fa\u6211\u4eec\u7684 model \u5b66\u4e60\u7684\u8fdb\u5ea6, \u5bf9\u6bd4\u53d1\u73b0\u6709\u6ca1\u6709 overfitting \u7684\u95ee\u9898. \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5bf9\u6211\u4eec\u7684 model \u8fdb\u884c\u8c03\u6574, \u514b\u670d overfitting \u7684\u95ee\u9898. Learning curve \u68c0\u89c6\u8fc7\u62df\u5408 \u52a0\u8f7d\u5bf9\u5e94\u6a21\u5757: from sklearn.model_selection import learning_curve #\u5b66\u4e60\u66f2\u7ebf\u6a21\u5757 from sklearn.datasets import load_digits #digits\u6570\u636e\u96c6 from sklearn.svm import SVC #Support Vector Classifier import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 import numpy as np \u52a0\u8f7ddigits\u6570\u636e\u96c6\uff0c\u5176\u5305\u542b\u7684\u662f\u624b\u5199\u4f53\u7684\u6570\u5b57\uff0c\u4ece0\u52309\u3002\u6570\u636e\u96c6\u603b\u5171\u67091797\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u753164\u4e2a\u7279\u5f81\u7ec4\u6210\uff0c \u5206\u522b\u4e3a\u5176\u624b\u5199\u4f53\u5bf9\u5e94\u76848\u00d78\u50cf\u7d20\u8868\u793a\uff0c\u6bcf\u4e2a\u7279\u5f81\u53d6\u503c0~16\u3002 digits = load_digits () #\u624b\u5199\u4f53\u7684\u6570\u5b57 X = digits . data #X\u6570\u636e y = digits . target #\u6807\u7b7ey \u89c2\u5bdf\u6837\u672c\u7531\u5c0f\u5230\u5927\u7684\u5b66\u4e60\u66f2\u7ebf\u53d8\u5316, \u91c7\u7528K\u6298\u4ea4\u53c9\u9a8c\u8bc1 cv=10, \u9009\u62e9\u5e73\u5747\u65b9\u5dee\u68c0\u89c6\u6a21\u578b\u6548\u80fd scoring='neg_mean_squared_error', \u6837\u672c\u7531\u5c0f\u5230\u5927\u5206\u62105\u8f6e\u68c0\u89c6\u5b66\u4e60\u66f2\u7ebf(10%, 25%, 50%, 75%, 100%): train_sizes , train_loss , test_loss = learning_curve ( SVC ( gamma = 0.001 ), X , y , cv = 10 , scoring = 'mean_squared_error' , train_sizes = [ 0.1 , 0.25 , 0.5 , 0.75 , 1 ]) #\u5e73\u5747\u6bcf\u4e00\u8f6e\u6240\u5f97\u5230\u7684\u5e73\u5747\u65b9\u5dee(\u51715\u8f6e\uff0c\u5206\u522b\u4e3a\u6837\u672c10%\u300125%\u300150%\u300175%\u3001100%) train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) \u53ef\u89c6\u5316\u56fe\u5f62: plt . plot ( train_sizes , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) plt . plot ( train_sizes , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"Training examples\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6574\u4e2a\u7684\u7a0b\u5e8f # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" from sklearn.model_selection import learning_curve #\u5b66\u4e60\u66f2\u7ebf\u6a21\u5757 from sklearn.datasets import load_digits #digits\u6570\u636e\u96c6 from sklearn.svm import SVC #Support Vector Classifier import matplotlib.pyplot as plt #\u53ef\u89c6\u5316\u6a21\u5757 import numpy as np digits = load_digits () X = digits . data y = digits . target train_sizes , train_loss , test_loss = learning_curve ( SVC ( gamma = 0.001 ), X , y , cv = 10 , scoring = 'mean_squared_error' , #gamma\u503c\u7684\u5927\u5c0f\u6539\u53d8\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898 train_sizes = [ 0.1 , 0.25 , 0.5 , 0.75 , 1 ]) train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) plt . plot ( train_sizes , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) plt . plot ( train_sizes , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"Training examples\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6267\u884c\u7ed3\u679c: \u5f53gamma\u53d8\u4e3a0.01\u65f6: \u6267\u884c\u7ed3\u679c: \u5f53gamma\u53d8\u4e3a0.1\u65f6: \u6267\u884c\u7ed3\u679c: \u8fde\u7eed\u4e09\u8282\u7684\u4ea4\u53c9\u9a8c\u8bc1(cross validation)\u8ba9\u6211\u4eec\u77e5\u9053\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u9a8c\u8bc1\u662f\u6709\u591a\u4e48\u7684\u91cd\u8981, \u8fd9\u4e00\u6b21\u7684 sklearn \u4e2d\u6211\u4eec\u7528\u5230\u4e86sklearn.learning_curve(0.20\u4e2d\u5bfc\u5305\u6539\u53d8)\u5f53\u4e2d\u7684\u53e6\u5916\u4e00\u79cd, \u53eb\u505avalidation_curve,\u7528\u8fd9\u4e00\u79cd\u66f2\u7ebf\u6211\u4eec\u5c31\u80fd\u66f4\u52a0\u76f4\u89c2\u770b\u51fa\u6539\u53d8\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u7684\u65f6\u5019\u6709\u6ca1\u6709\u8fc7\u62df\u5408(overfitting)\u7684\u95ee\u9898\u4e86. \u8fd9\u4e5f\u662f\u53ef\u4ee5\u8ba9\u6211\u4eec\u66f4\u597d\u7684\u9009\u62e9\u53c2\u6570\u7684\u65b9\u6cd5. validation_curve \u68c0\u89c6\u8fc7\u62df\u5408 \u7ee7\u7eed\u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\uff0c\u5e76\u7a0d\u4f5c\u5c0f\u4fee\u6539\u5373\u53ef\u753b\u51fa\u56fe\u5f62\u3002\u8fd9\u6b21\u6211\u4eec\u6765\u9a8c\u8bc1SVC\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570 gamma \u5728\u4ec0\u4e48\u8303\u56f4\u5185\u80fd\u4f7f model \u4ea7\u751f\u597d\u7684\u7ed3\u679c. \u4ee5\u53ca\u8fc7\u62df\u5408\u548c gamma \u53d6\u503c\u7684\u5173\u7cfb. # -*- coding: utf-8 -*- \"\"\" Created on Thu Apr 25 10:44:43 2019 @author: zangz \"\"\" from sklearn.model_selection import validation_curve #validation_curve\u6a21\u5757 from sklearn.datasets import load_digits from sklearn.svm import SVC import matplotlib.pyplot as plt import numpy as np #digits\u6570\u636e\u96c6(\u624b\u5199\u6570\u5b57) digits = load_digits () X = digits . data y = digits . target #\u5efa\u7acb\u53c2\u6570\u6d4b\u8bd5\u96c6 param_range = np . logspace ( - 6 , - 2.3 , 5 ) print ( param_range ) #\u4f7f\u7528validation_curve\u5feb\u901f\u627e\u51fa\u53c2\u6570\u5bf9\u6a21\u578b\u7684\u5f71\u54cd train_loss , test_loss = validation_curve ( SVC (), X , y , param_name = 'gamma' , param_range = param_range , cv = 10 , scoring = 'neg_mean_squared_error' ) #param_name='gamma'\u8868\u793a\u8981\u6539\u53d8SVC\u4e2d\u7684\u8fd9\u4e2agamma\u53c2\u6570 #param_range=param_range\u8868\u793a\u6539\u53d8\u540e\u7684\u53d6\u503c\u8303\u56f4\u662f\u540e\u9762\u8fd9\u4e2a #\u5e73\u5747\u6bcf\u4e00\u8f6e\u7684\u5e73\u5747\u65b9\u5dee train_loss_mean = - np . mean ( train_loss , axis = 1 ) test_loss_mean = - np . mean ( test_loss , axis = 1 ) #\u53ef\u89c6\u5316\u56fe\u5f62 plt . plot ( param_range , train_loss_mean , 'o-' , color = \"r\" , label = \"Training\" ) #\u6a2a\u5750\u6807\u662fgamma\u7684\u503c,\u7eb5\u5750\u6807\u662floss\u503c plt . plot ( param_range , test_loss_mean , 'o-' , color = \"g\" , label = \"Cross-validation\" ) plt . xlabel ( \"gamma\" ) plt . ylabel ( \"Loss\" ) plt . legend ( loc = \"best\" ) plt . show () \u6267\u884c\u7ed3\u679c: \u7531\u56fe\u4e2d\u53ef\u4ee5\u660e\u663e\u770b\u5230gamma\u503c\u5927\u4e8e0.001\uff0c\u6a21\u578b\u5c31\u4f1a\u6709\u8fc7\u62df\u5408(Overfitting)\u7684\u95ee\u9898\u3002","title":"Model \u57fa\u7840\u9a8c\u8bc1\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/006-sklearn\u6a21\u578b\u7684\u4fdd\u5b58\u52a0\u8f7d/","text":"\u8fd9\u6b21\u4e3b\u8981\u4ecb\u7ecd\u4e24\u79cd\u4fdd\u5b58Model\u7684\u6a21\u5757pickle\u4e0ejoblib\u3002 \u4f7f\u7528 pickle \u4fdd\u5b58 \u00b6 \u9996\u5148\u7b80\u5355\u5efa\u7acb\u4e0e\u8bad\u7ec3\u4e00\u4e2a SVC Model\u3002 from sklearn import svm from sklearn import datasets clf = svm . SVC () iris = datasets . load_iris () X , y = iris . data , iris . target clf . fit ( X , y ) \u4f7f\u7528 pickle \u6765**\u4fdd\u5b58**\u4e0e**\u8bfb\u53d6**\u8bad\u7ec3\u597d\u7684Model\u3002 import pickle #pickle\u6a21\u5757 #\u4fdd\u5b58Model(\u6ce8:save\u6587\u4ef6\u5939\u8981\u9884\u5148\u5efa\u7acb\uff0c\u5426\u5219\u4f1a\u62a5\u9519) with open ( 'save/clf.pickle' , 'wb' ) as f : pickle . dump ( clf , f ) #\u8bfb\u53d6Model with open ( 'save/clf.pickle' , 'rb' ) as f : clf2 = pickle . load ( f ) #\u6d4b\u8bd5\u8bfb\u53d6\u540e\u7684Model print ( clf2 . predict ( X [ 0 : 1 ])) \u6267\u884c\u7ed3\u679c: # [0] \u4f7f\u7528 joblib \u4fdd\u5b58 \u00b6 joblib \u662f sklearn \u7684\u5916\u90e8\u6a21\u5757\u3002 from sklearn.externals import joblib #jbolib\u6a21\u5757 #\u4fdd\u5b58Model(\u6ce8:save\u6587\u4ef6\u5939\u8981\u9884\u5148\u5efa\u7acb\uff0c\u5426\u5219\u4f1a\u62a5\u9519) joblib . dump ( clf , 'save/clf.pkl' ) #\u8bfb\u53d6Model clf3 = joblib . load ( 'save/clf.pkl' ) #\u6d4b\u8bd5\u8bfb\u53d6\u540e\u7684Model print ( clf3 . predict ( X [ 0 : 1 ])) # [0] \u6700\u540e\u53ef\u4ee5\u77e5\u9053 joblib \u5728\u4f7f\u7528\u4e0a\u6bd4\u8f83\u5bb9\u6613\uff0c\u8bfb\u53d6\u901f\u5ea6\u4e5f\u76f8\u5bf9 pickle \u5feb","title":"006-sklearn\u6a21\u578b\u7684\u4fdd\u5b58\u52a0\u8f7d"},{"location":"\u673a\u5668\u5b66\u4e60/006-sklearn\u6a21\u578b\u7684\u4fdd\u5b58\u52a0\u8f7d/#pickle","text":"\u9996\u5148\u7b80\u5355\u5efa\u7acb\u4e0e\u8bad\u7ec3\u4e00\u4e2a SVC Model\u3002 from sklearn import svm from sklearn import datasets clf = svm . SVC () iris = datasets . load_iris () X , y = iris . data , iris . target clf . fit ( X , y ) \u4f7f\u7528 pickle \u6765**\u4fdd\u5b58**\u4e0e**\u8bfb\u53d6**\u8bad\u7ec3\u597d\u7684Model\u3002 import pickle #pickle\u6a21\u5757 #\u4fdd\u5b58Model(\u6ce8:save\u6587\u4ef6\u5939\u8981\u9884\u5148\u5efa\u7acb\uff0c\u5426\u5219\u4f1a\u62a5\u9519) with open ( 'save/clf.pickle' , 'wb' ) as f : pickle . dump ( clf , f ) #\u8bfb\u53d6Model with open ( 'save/clf.pickle' , 'rb' ) as f : clf2 = pickle . load ( f ) #\u6d4b\u8bd5\u8bfb\u53d6\u540e\u7684Model print ( clf2 . predict ( X [ 0 : 1 ])) \u6267\u884c\u7ed3\u679c: # [0]","title":"\u4f7f\u7528 pickle \u4fdd\u5b58"},{"location":"\u673a\u5668\u5b66\u4e60/006-sklearn\u6a21\u578b\u7684\u4fdd\u5b58\u52a0\u8f7d/#joblib","text":"joblib \u662f sklearn \u7684\u5916\u90e8\u6a21\u5757\u3002 from sklearn.externals import joblib #jbolib\u6a21\u5757 #\u4fdd\u5b58Model(\u6ce8:save\u6587\u4ef6\u5939\u8981\u9884\u5148\u5efa\u7acb\uff0c\u5426\u5219\u4f1a\u62a5\u9519) joblib . dump ( clf , 'save/clf.pkl' ) #\u8bfb\u53d6Model clf3 = joblib . load ( 'save/clf.pkl' ) #\u6d4b\u8bd5\u8bfb\u53d6\u540e\u7684Model print ( clf3 . predict ( X [ 0 : 1 ])) # [0] \u6700\u540e\u53ef\u4ee5\u77e5\u9053 joblib \u5728\u4f7f\u7528\u4e0a\u6bd4\u8f83\u5bb9\u6613\uff0c\u8bfb\u53d6\u901f\u5ea6\u4e5f\u76f8\u5bf9 pickle \u5feb","title":"\u4f7f\u7528 joblib \u4fdd\u5b58"},{"location":"\u673a\u5668\u5b66\u4e60/007-\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u7ef4\u6570\u707e\u96be/","text":"\u7ef4\u6570\u707e\u96be\u7684\u6df1\u5ea6\u7406\u89e3 \u00b6 \"curse of dimensionality\u201d\uff0c\u4e2d\u6587\u8bd1\u4e3a\u201c\u7ef4\u6570\u707e\u96be\u201d\uff0c\u8fd9\u5230\u5e95\u662f\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684\u201c\u707e\u96be\u201d\uff1f\u672c\u6587\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u8fd9\u4ee4\u4eba\u8ba8\u538c\u7684\u201ccurse of dimensionality\u201d\u4ee5\u53ca\u5b83\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u91cd\u8981\u6027\u3002 \u5047\u8bbe\u73b0\u5728\u6709\u4e00\u7ec4\u7167\u7247\uff0c\u6bcf\u4e00\u5f20\u7167\u7247\u91cc\u6709\u4e00\u53ea\u732b\u6216\u8005\u4e00\u6761\u72d7\u3002\u6211\u4eec\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a\u5206\u7c7b\u5668\u53ef\u4ee5\u81ea\u52a8\u5730\u5c06\u7167\u7247\u4e2d\u7684\u52a8\u7269\u8fa8\u522b\u5f00\u6765\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u9996\u5148\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u7167\u7247\u4e2d\u7684\u52a8\u7269\u7684\u7279\u5f81\u7528\u6570\u5b57\u7684\u5f62\u5f0f\u8868\u8fbe\u51fa\u6765\u3002\u732b\u4e0e\u72d7\u7684\u6700\u5927\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u6709\u4eba\u53ef\u80fd\u9996\u5148\u60f3\u5230\u732b\u4e0e\u72d7\u7684\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u6709\u4eba\u5219\u53ef\u80fd\u60f3\u5230\u732b\u4e0e\u72d7\u7684\u5927\u5c0f\u4e0d\u4e00\u6837\u3002\u5047\u8bbe\u4ece\u989c\u8272\u6765\u8fa8\u522b\u732b\u4e0e\u72d7\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e09\u4e2a\u7279\u5f81\uff1a\u7ea2\u8272\u7684\u5e73\u5747\u503c\uff0c\u7eff\u8272\u7684\u5e73\u5747\u503c\u548c\u84dd\u8272\u7684\u5e73\u5747\u503c\uff0c\u6765\u51b3\u5b9a\u7167\u7247\u4e2d\u7684\u52a8\u7269\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u7c7b\uff1a if 0 .5 * red + 0 .3 * green + 0 .2 * blue > 0 .6: return cat else : return dog \u4f46\u662f\uff0c\u4ec5\u4ec5\u901a\u8fc7\u8fd9\u4e09\u4e2a\u7279\u5f81\u8fdb\u884c\u5206\u7c7b\u53ef\u80fd\u65e0\u6cd5\u5f97\u5230\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u518d\u589e\u52a0\u4e00\u4e9b\u7279\u5f81\uff1a\u5927\u5c0f\uff0c\u7eb9\u7406\u7b49\u3002\u4e5f\u8bb8\u589e\u52a0\u7279\u5f81\u4e4b\u540e\uff0c\u5206\u7c7b\u7684\u7ed3\u679c\u4f1a\u6709\u6240\u63d0\u9ad8\u3002\u4f46\u662f\uff0c\u7279\u5f81\u662f\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff1f \u56fe1 \u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7ef4\u6570\u7684\u589e\u52a0\u4e0d\u5347\u53cd\u964d \u4ece\u56fe1\u53ef\u4ee5\u770b\u5230\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7279\u5f81\u4e2a\u6570\u7684\u53d8\u5316\u4e0d\u65ad\u589e\u52a0\uff0c\u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u6027\u80fd\u4e0d\u5347\u53cd\u964d\u3002\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u201c\u7ef4\u6570\u707e\u96be\u201d\u3002 \u7ee7\u7eed\u4e4b\u524d\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u5730\u7403\u4e0a\u732b\u548c\u72d7\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002\u7531\u4e8e\u6709\u9650\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u6211\u4eec\u4ec5\u4ec5\u9009\u53d6\u4e8610\u5f20\u7167\u7247\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c\u3002\u6211\u4eec\u7684\u76ee\u7684\u662f\u57fa\u4e8e\u8fd910\u5f20\u7167\u7247\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\u53ef\u4ee5\u5bf9\u5269\u4f59\u7684\u732b\u6216\u72d7\u7684\u7167\u7247\u8fdb\u884c\u6b63\u786e\u5206\u7c7b\u3002\u6211\u4eec\u4ece\u53ea\u7528\u4e00\u4e2a\u7279\u5f81\u6765\u8fa8\u522b\u732b\u548c\u72d7\u5f00\u59cb\uff1a \u4ece\u56fe2\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u7684\u8bdd\uff0c\u732b\u548c\u72d7\u51e0\u4e4e\u662f\u5747\u5300\u5206\u5e03\u5728\u8fd9\u6761\u7ebf\u6bb5\u4e0a\uff0c\u5f88\u96be\u5c0610\u5f20\u7167\u7247\u7ebf\u6027\u5206\u7c7b\u3002\u90a3\u4e48\uff0c\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\u7684\u60c5\u51b5\u4f1a\u600e\u4e48\u6837\uff1a \u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u4e00\u6761\u76f4\u7ebf\u5c06\u732b\u548c\u72d7\u5206\u5f00\u3002\u6240\u4ee5\uff0c\u8003\u8651\u9700\u8981\u518d\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\uff1a \u6b64\u65f6\uff0c\u6211\u4eec\u7ec8\u4e8e\u627e\u5230\u4e86\u4e00\u4e2a\u5e73\u9762\u5c06\u732b\u548c\u72d7\u5206\u5f00\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u65f6\uff0c\u5047\u8bbe\u7279\u5f81\u7a7a\u95f4\u662f\u957f\u5ea6\u4e3a5\u7684\u7ebf\u6bb5\uff0c\u5219\u6837\u672c\u5bc6\u5ea6\u662f10/5=2\u3002\u6709\u4e24\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u5927\u5c0f\u662f5*5=25\uff0c\u6837\u672c\u5bc6\u5ea6\u662f10/25=0.4\u3002\u6709\u4e09\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u5927\u5c0f\u662f5*5*5=125\uff0c\u6837\u672c\u5bc6\u5ea6\u662f10/125=0.08\u3002\u5982\u679c\u7ee7\u7eed\u589e\u52a0\u7279\u5f81\u6570\u91cf\uff0c\u6837\u672c\u5bc6\u5ea6\u4f1a\u66f4\u52a0\u7a00\u758f\uff0c\u4e5f\u5c31\u66f4\u5bb9\u6613\u627e\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\u5c06\u8bad\u7ec3\u6837\u672c\u5206\u5f00\u3002\u56e0\u4e3a\u968f\u7740\u7279\u5f81\u6570\u91cf\u8d8b\u5411\u4e8e\u65e0\u9650\u5927\uff0c\u6837\u672c\u5bc6\u5ea6\u975e\u5e38\u7a00\u758f\uff0c\u8bad\u7ec3\u6837\u672c\u88ab\u5206\u9519\u7684\u53ef\u80fd\u6027\u8d8b\u5411\u4e8e\u96f6\u3002 \u5f53\u6211\u4eec\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u7684\u5206\u7c7b\u7ed3\u679c\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u65f6\uff0c\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u51fa\u73b0\u4e86\uff1a \u4ece\u56fe5\u53ef\u4ee5\u770b\u5230\u5c06\u4e09\u7ef4\u7279\u5f81\u7a7a\u95f4\u6620\u5c04\u5230\u4e8c\u7ef4\u7279\u5f81\u7a7a\u95f4\u540e\u7684\u7ed3\u679c\u3002\u5c3d\u7ba1\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u65f6\u8bad\u7ec3\u6837\u672c\u7ebf\u6027\u53ef\u5206\uff0c\u4f46\u662f\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u540e\uff0c\u7ed3\u679c\u6b63\u597d\u76f8\u53cd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u589e\u52a0\u7279\u5f81\u6570\u91cf\u4f7f\u5f97\u9ad8\u7ef4\u7a7a\u95f4\u7ebf\u6027\u53ef\u5206\uff0c\u76f8\u5f53\u4e8e\u5728\u4f4e\u7ef4\u7a7a\u95f4\u5185\u8bad\u7ec3\u4e00\u4e2a\u590d\u6742\u7684\u975e\u7ebf\u6027\u5206\u7c7b\u5668\u3002 \u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u975e\u7ebf\u6027\u5206\u7c7b\u5668\u592a\u8fc7\u201c\u806a\u660e\u201d\uff0c\u4ec5\u4ec5\u5b66\u5230\u4e86\u4e00\u4e9b\u7279\u4f8b\u3002\u5982\u679c\u5c06\u5176\u7528\u6765\u8fa8\u522b\u90a3\u4e9b\u672a\u66fe\u51fa\u73b0\u5728\u8bad\u7ec3\u6837\u672c\u4e2d\u7684\u6d4b\u8bd5\u6837\u672c\u65f6\uff0c\u901a\u5e38\u7ed3\u679c\u4e0d\u592a\u7406\u60f3\u3002 \u8fd9\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5b66\u8fc7\u7684\u8fc7\u62df\u5408\u95ee\u9898. \u5c3d\u7ba1\u56fe6\u6240\u793a\u7684\u53ea\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u5206\u9519\u4e86\u4e00\u4e9b\u8bad\u7ec3\u6837\u672c\uff0c\u51c6\u786e\u7387\u4f3c\u4e4e\u6ca1\u6709\u56fe4\u7684\u9ad8\uff0c\u4f46\u662f\uff0c\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u7684**\u6cdb\u5316\u80fd\u529b**\u6bd4\u91c7\u75283\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u8981\u5f3a\u3002\u56e0\u4e3a\uff0c\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u5b66\u4e60\u5230\u7684\u4e0d\u53ea\u662f\u7279\u4f8b\uff0c\u800c\u662f\u4e00\u4e2a**\u6574\u4f53\u8d8b\u52bf**\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u672a\u66fe\u51fa\u73b0\u8fc7\u7684\u6837\u672c\u4e5f\u53ef\u4ee5\u6bd4\u8f83\u597d\u5730\u8fa8\u522b\u5f00\u6765\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u901a\u8fc7\u51cf\u5c11\u7279\u5f81\u6570\u91cf\uff0c\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u4ece\u800c\u907f\u514d**\u201c\u7ef4\u6570\u707e\u96be\u201d**\u3002 \u56fe7\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u8be0\u91ca\u4e86\u201c\u7ef4\u6570\u707e\u96be\u201d\u3002\u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7684\u503c\u57df\u662f0\u52301\uff0c\u6bcf\u4e00\u53ea\u732b\u548c\u72d7\u7684\u7279\u5f81\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bad\u7ec3\u6837\u672c\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768420%\u3002\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u4e3a\u4e86\u7ee7\u7eed\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\u5c31\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768445%(0.45^2=0.2)\u3002 \u7ee7\u7eed\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768458%(0.58^3=0.2)\u3002\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u4e3a\u4e86\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\uff0c\u5c31\u9700\u8981\u66f4\u591a\u7684\u8bad\u7ec3\u6837\u672c\u3002\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u901a\u8fc7\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7279\u5f81\u6570\u91cf\u8d8a\u591a\uff0c\u8bad\u7ec3\u6837\u672c\u5c31\u4f1a\u8d8a\u7a00\u758f\uff0c\u5206\u7c7b\u5668\u7684\u53c2\u6570\u4f30\u8ba1\u5c31\u4f1a\u8d8a\u4e0d\u51c6\u786e\uff0c\u66f4\u52a0\u5bb9\u6613\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\u3002\u201c\u7ef4\u6570\u707e\u96be\u201d\u7684\u53e6\u4e00\u4e2a\u5f71\u54cd\u662f\u8bad\u7ec3\u6837\u672c\u7684\u7a00\u758f\u6027\u5e76\u4e0d\u662f\u5747\u5300\u5206\u5e03\u7684\u3002\u5904\u4e8e\u4e2d\u5fc3\u4f4d\u7f6e\u7684\u8bad\u7ec3\u6837\u672c\u6bd4\u56db\u5468\u7684\u8bad\u7ec3\u6837\u672c\u66f4\u52a0\u7a00\u758f\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a\u4e8c\u7ef4\u7279\u5f81\u7a7a\u95f4\uff0c\u5982\u56fe8\u6240\u793a\u7684\u77e9\u5f62\uff0c\u5728\u77e9\u5f62\u5185\u90e8\u6709\u4e00\u4e2a\u5185\u5207\u7684\u5706\u5f62\u3002\u7531\u4e8e\u8d8a\u63a5\u8fd1\u5706\u5fc3\u7684\u6837\u672c\u8d8a\u7a00\u758f\uff0c\u56e0\u6b64\uff0c\u76f8\u6bd4\u4e8e\u5706\u5f62\u5185\u7684\u6837\u672c\uff0c\u90a3\u4e9b\u4f4d\u4e8e\u77e9\u5f62\u56db\u89d2\u7684\u6837\u672c\u66f4\u52a0\u96be\u4ee5\u5206\u7c7b\u3002\u90a3\u4e48\uff0c\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5706\u5f62\u7684\u9762\u79ef\u4f1a\u4e0d\u4f1a\u53d8\u5316\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u8d85\u7acb\u65b9\u4f53(hypercube)\u7684\u8fb9\u957fL=1\uff0c\u90a3\u4e48\u8ba1\u7b97\u534a\u5f84\u4e3a0.5\u7684\u8d85\u7403\u9762(hypersphere)\u7684\u4f53\u79ef(volume)\u7684\u516c\u5f0f\u4e3a\uff1a \u4ece\u56fe9\u53ef\u4ee5\u770b\u51fa\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8d85\u7403\u9762\u7684\u4f53\u79ef\u9010\u6e10\u51cf\u5c0f\u76f4\u81f3\u8d8b\u5411\u4e8e\u96f6\uff0c\u7136\u800c\u8d85\u7acb\u65b9\u4f53\u7684\u4f53\u79ef\u5374\u4e0d\u53d8\u3002\u8fd9\u4e2a\u7ed3\u679c\u6709\u70b9\u51fa\u4e4e\u610f\u6599\uff0c\u4f46\u90e8\u5206\u8bf4\u660e\u4e86\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u201c\u7ef4\u6570\u707e\u96be\u201d\uff1a\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5927\u591a\u6570\u7684\u8bad\u7ec3\u6837\u672c\u4f4d\u4e8e\u8d85\u7acb\u65b9\u4f53\u7684\u89d2\u843d\u3002 \u56fe10\u663e\u793a\u4e86\u4e0d\u540c\u7ef4\u5ea6\u4e0b\uff0c\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002\u57288\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5171\u67092^8=256\u4e2a\u89d2\u843d\uff0c\u800c98%\u7684\u6837\u672c\u5206\u5e03\u5728\u8fd9\u4e9b\u89d2\u843d\u3002\u968f\u7740\u7ef4\u5ea6\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u516c\u5f0f2\u5c06\u8d8b\u5411\u4e8e0\uff0c\u5176\u4e2d dist_{max} dist_{max} \u548c dist_{min} dist_{min} \u5206\u522b\u8868\u793a\u6837\u672c\u5230\u4e2d\u5fc3\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u8ddd\u79bb\u3002 \u56e0\u6b64\uff0c\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\u5bf9\u4e8e\u6837\u672c\u8ddd\u79bb\u7684\u5ea6\u91cf\u5931\u53bb\u610f\u4e49\u3002\u7531\u4e8e\u5206\u7c7b\u5668\u57fa\u672c\u90fd\u4f9d\u8d56\u4e8e\u5982Euclidean\u8ddd\u79bb(\u6b27\u5f0f\u8ddd\u79bb)\uff0cManhattan\u8ddd\u79bb(\u66fc\u54c8\u987f\u8ddd\u79bb)\u7b49\uff0c\u6240\u4ee5\u5728\u7279\u5f81\u6570\u91cf\u8fc7\u5927\u65f6\uff0c\u5206\u7c7b\u5668\u7684\u6027\u80fd\u5c31\u4f1a\u51fa\u73b0\u4e0b\u964d\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u5982\u4f55\u907f\u514d\u201c\u7ef4\u6570\u707e\u96be\u201d\uff1f\u56fe1\u663e\u793a\u4e86\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7279\u5f81\u4e2a\u6570\u7684\u53d8\u5316\u4e0d\u65ad\u589e\u52a0\uff0c\u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u6027\u80fd\u4e0d\u5347\u53cd\u964d\u3002\u8fd9\u91cc\u7684\u67d0\u4e00\u4e2a\u503c\u5230\u5e95\u662f\u591a\u5c11\u5462\uff1f \u76ee\u524d\uff0c\u8fd8\u6ca1\u6709\u65b9\u6cd5\u6765\u786e\u5b9a\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u8fd9\u4e2a\u9608\u503c\u662f\u591a\u5c11\uff0c\u8fd9\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\uff0c\u51b3\u7b56\u8fb9\u754c\u7684\u590d\u6742\u6027\u4ee5\u53ca\u5206\u7c7b\u5668\u7684\u7c7b\u578b\u3002 \u7406\u8bba\u4e0a\uff0c\u5982\u679c\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u65e0\u9650\u5927\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u5b58\u5728\u201c\u7ef4\u6570\u707e\u96be\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4efb\u610f\u591a\u7684\u7279\u5f81\u6765\u8bad\u7ec3\u5206\u7c7b\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u91c7\u7528\u8fc7\u591a\u7684\u7279\u5f81\u3002 \u6b64\u5916\uff0c\u90a3\u4e9b\u9700\u8981\u7cbe\u786e\u7684\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u7684\u5206\u7c7b\u5668\uff0c\u6bd4\u5982neural network\uff0cknn\uff0cdecision trees\u7b49\u7684\u6cdb\u5316\u80fd\u529b\u5f80\u5f80\u5e76\u4e0d\u662f\u5f88\u597d\uff0c\u66f4\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u5728\u8bbe\u8ba1\u8fd9\u4e9b\u5206\u7c7b\u5668\u65f6\u5e94\u5f53\u614e\u91cd\u8003\u8651\u7279\u5f81\u7684\u6570\u91cf\u3002\u76f8\u53cd\uff0c\u90a3\u4e9b\u6cdb\u5316\u80fd\u529b\u8f83\u597d\u7684\u5206\u7c7b\u5668\uff0c\u6bd4\u5982naive Bayesian\uff0clinear classifier\u7b49\uff0c\u53ef\u4ee5\u9002\u5f53\u589e\u52a0\u7279\u5f81\u7684\u6570\u91cf\u3002 \u5982\u679c\u7ed9\u5b9a\u4e86N\u4e2a\u7279\u5f81\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4ece\u4e2d\u9009\u51faM\u4e2a\u6700\u4f18\u7684\u7279\u5f81\uff1f\u6700\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\u662f\u5c1d\u8bd5\u6240\u6709\u7279\u5f81\u7684\u7ec4\u5408\uff0c\u4ece\u4e2d\u6311\u51faM\u4e2a\u6700\u4f18\u7684\u7279\u5f81\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u975e\u5e38\u82b1\u65f6\u95f4\u7684\uff0c\u6216\u8005\u8bf4\u4e0d\u53ef\u884c\u7684\u3002\u5176\u5b9e\uff0c\u5df2\u7ecf\u6709\u8bb8\u591a\u7279\u5f81\u9009\u62e9\u7b97\u6cd5( feature selection algorithms )\u6765\u5e2e\u52a9\u6211\u4eec\u786e\u5b9a\u7279\u5f81\u7684\u6570\u91cf\u4ee5\u53ca\u9009\u62e9\u7279\u5f81\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u7279\u5f81\u62bd\u53d6\u65b9\u6cd5( feature extraction methods )\uff0c\u6bd4\u5982 PCA \u7b49\u3002\u4ea4\u53c9\u9a8c\u8bc1( cross-validation )\u4e5f\u5e38\u5e38\u88ab\u7528\u4e8e\u68c0\u6d4b\u4e0e\u907f\u514d\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u53c2\u8003\u8d44\u6599\uff1a [1] Vincent Spruyt. The Curse of Dimensionality in classification. Computer vision for dummies. 2014. [ Link ]","title":"007-\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u7ef4\u6570\u707e\u96be"},{"location":"\u673a\u5668\u5b66\u4e60/007-\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u7ef4\u6570\u707e\u96be/#_1","text":"\"curse of dimensionality\u201d\uff0c\u4e2d\u6587\u8bd1\u4e3a\u201c\u7ef4\u6570\u707e\u96be\u201d\uff0c\u8fd9\u5230\u5e95\u662f\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684\u201c\u707e\u96be\u201d\uff1f\u672c\u6587\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u8fd9\u4ee4\u4eba\u8ba8\u538c\u7684\u201ccurse of dimensionality\u201d\u4ee5\u53ca\u5b83\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u91cd\u8981\u6027\u3002 \u5047\u8bbe\u73b0\u5728\u6709\u4e00\u7ec4\u7167\u7247\uff0c\u6bcf\u4e00\u5f20\u7167\u7247\u91cc\u6709\u4e00\u53ea\u732b\u6216\u8005\u4e00\u6761\u72d7\u3002\u6211\u4eec\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a\u5206\u7c7b\u5668\u53ef\u4ee5\u81ea\u52a8\u5730\u5c06\u7167\u7247\u4e2d\u7684\u52a8\u7269\u8fa8\u522b\u5f00\u6765\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u9996\u5148\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u7167\u7247\u4e2d\u7684\u52a8\u7269\u7684\u7279\u5f81\u7528\u6570\u5b57\u7684\u5f62\u5f0f\u8868\u8fbe\u51fa\u6765\u3002\u732b\u4e0e\u72d7\u7684\u6700\u5927\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u6709\u4eba\u53ef\u80fd\u9996\u5148\u60f3\u5230\u732b\u4e0e\u72d7\u7684\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u6709\u4eba\u5219\u53ef\u80fd\u60f3\u5230\u732b\u4e0e\u72d7\u7684\u5927\u5c0f\u4e0d\u4e00\u6837\u3002\u5047\u8bbe\u4ece\u989c\u8272\u6765\u8fa8\u522b\u732b\u4e0e\u72d7\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e09\u4e2a\u7279\u5f81\uff1a\u7ea2\u8272\u7684\u5e73\u5747\u503c\uff0c\u7eff\u8272\u7684\u5e73\u5747\u503c\u548c\u84dd\u8272\u7684\u5e73\u5747\u503c\uff0c\u6765\u51b3\u5b9a\u7167\u7247\u4e2d\u7684\u52a8\u7269\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u7c7b\uff1a if 0 .5 * red + 0 .3 * green + 0 .2 * blue > 0 .6: return cat else : return dog \u4f46\u662f\uff0c\u4ec5\u4ec5\u901a\u8fc7\u8fd9\u4e09\u4e2a\u7279\u5f81\u8fdb\u884c\u5206\u7c7b\u53ef\u80fd\u65e0\u6cd5\u5f97\u5230\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u518d\u589e\u52a0\u4e00\u4e9b\u7279\u5f81\uff1a\u5927\u5c0f\uff0c\u7eb9\u7406\u7b49\u3002\u4e5f\u8bb8\u589e\u52a0\u7279\u5f81\u4e4b\u540e\uff0c\u5206\u7c7b\u7684\u7ed3\u679c\u4f1a\u6709\u6240\u63d0\u9ad8\u3002\u4f46\u662f\uff0c\u7279\u5f81\u662f\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff1f \u56fe1 \u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7ef4\u6570\u7684\u589e\u52a0\u4e0d\u5347\u53cd\u964d \u4ece\u56fe1\u53ef\u4ee5\u770b\u5230\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7279\u5f81\u4e2a\u6570\u7684\u53d8\u5316\u4e0d\u65ad\u589e\u52a0\uff0c\u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u6027\u80fd\u4e0d\u5347\u53cd\u964d\u3002\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u201c\u7ef4\u6570\u707e\u96be\u201d\u3002 \u7ee7\u7eed\u4e4b\u524d\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u5730\u7403\u4e0a\u732b\u548c\u72d7\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002\u7531\u4e8e\u6709\u9650\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u6211\u4eec\u4ec5\u4ec5\u9009\u53d6\u4e8610\u5f20\u7167\u7247\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c\u3002\u6211\u4eec\u7684\u76ee\u7684\u662f\u57fa\u4e8e\u8fd910\u5f20\u7167\u7247\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\u53ef\u4ee5\u5bf9\u5269\u4f59\u7684\u732b\u6216\u72d7\u7684\u7167\u7247\u8fdb\u884c\u6b63\u786e\u5206\u7c7b\u3002\u6211\u4eec\u4ece\u53ea\u7528\u4e00\u4e2a\u7279\u5f81\u6765\u8fa8\u522b\u732b\u548c\u72d7\u5f00\u59cb\uff1a \u4ece\u56fe2\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u7684\u8bdd\uff0c\u732b\u548c\u72d7\u51e0\u4e4e\u662f\u5747\u5300\u5206\u5e03\u5728\u8fd9\u6761\u7ebf\u6bb5\u4e0a\uff0c\u5f88\u96be\u5c0610\u5f20\u7167\u7247\u7ebf\u6027\u5206\u7c7b\u3002\u90a3\u4e48\uff0c\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\u7684\u60c5\u51b5\u4f1a\u600e\u4e48\u6837\uff1a \u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u4e00\u6761\u76f4\u7ebf\u5c06\u732b\u548c\u72d7\u5206\u5f00\u3002\u6240\u4ee5\uff0c\u8003\u8651\u9700\u8981\u518d\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\uff1a \u6b64\u65f6\uff0c\u6211\u4eec\u7ec8\u4e8e\u627e\u5230\u4e86\u4e00\u4e2a\u5e73\u9762\u5c06\u732b\u548c\u72d7\u5206\u5f00\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u65f6\uff0c\u5047\u8bbe\u7279\u5f81\u7a7a\u95f4\u662f\u957f\u5ea6\u4e3a5\u7684\u7ebf\u6bb5\uff0c\u5219\u6837\u672c\u5bc6\u5ea6\u662f10/5=2\u3002\u6709\u4e24\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u5927\u5c0f\u662f5*5=25\uff0c\u6837\u672c\u5bc6\u5ea6\u662f10/25=0.4\u3002\u6709\u4e09\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7a7a\u95f4\u5927\u5c0f\u662f5*5*5=125\uff0c\u6837\u672c\u5bc6\u5ea6\u662f10/125=0.08\u3002\u5982\u679c\u7ee7\u7eed\u589e\u52a0\u7279\u5f81\u6570\u91cf\uff0c\u6837\u672c\u5bc6\u5ea6\u4f1a\u66f4\u52a0\u7a00\u758f\uff0c\u4e5f\u5c31\u66f4\u5bb9\u6613\u627e\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\u5c06\u8bad\u7ec3\u6837\u672c\u5206\u5f00\u3002\u56e0\u4e3a\u968f\u7740\u7279\u5f81\u6570\u91cf\u8d8b\u5411\u4e8e\u65e0\u9650\u5927\uff0c\u6837\u672c\u5bc6\u5ea6\u975e\u5e38\u7a00\u758f\uff0c\u8bad\u7ec3\u6837\u672c\u88ab\u5206\u9519\u7684\u53ef\u80fd\u6027\u8d8b\u5411\u4e8e\u96f6\u3002 \u5f53\u6211\u4eec\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u7684\u5206\u7c7b\u7ed3\u679c\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u65f6\uff0c\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u51fa\u73b0\u4e86\uff1a \u4ece\u56fe5\u53ef\u4ee5\u770b\u5230\u5c06\u4e09\u7ef4\u7279\u5f81\u7a7a\u95f4\u6620\u5c04\u5230\u4e8c\u7ef4\u7279\u5f81\u7a7a\u95f4\u540e\u7684\u7ed3\u679c\u3002\u5c3d\u7ba1\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u65f6\u8bad\u7ec3\u6837\u672c\u7ebf\u6027\u53ef\u5206\uff0c\u4f46\u662f\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u540e\uff0c\u7ed3\u679c\u6b63\u597d\u76f8\u53cd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u589e\u52a0\u7279\u5f81\u6570\u91cf\u4f7f\u5f97\u9ad8\u7ef4\u7a7a\u95f4\u7ebf\u6027\u53ef\u5206\uff0c\u76f8\u5f53\u4e8e\u5728\u4f4e\u7ef4\u7a7a\u95f4\u5185\u8bad\u7ec3\u4e00\u4e2a\u590d\u6742\u7684\u975e\u7ebf\u6027\u5206\u7c7b\u5668\u3002 \u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u975e\u7ebf\u6027\u5206\u7c7b\u5668\u592a\u8fc7\u201c\u806a\u660e\u201d\uff0c\u4ec5\u4ec5\u5b66\u5230\u4e86\u4e00\u4e9b\u7279\u4f8b\u3002\u5982\u679c\u5c06\u5176\u7528\u6765\u8fa8\u522b\u90a3\u4e9b\u672a\u66fe\u51fa\u73b0\u5728\u8bad\u7ec3\u6837\u672c\u4e2d\u7684\u6d4b\u8bd5\u6837\u672c\u65f6\uff0c\u901a\u5e38\u7ed3\u679c\u4e0d\u592a\u7406\u60f3\u3002 \u8fd9\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5b66\u8fc7\u7684\u8fc7\u62df\u5408\u95ee\u9898. \u5c3d\u7ba1\u56fe6\u6240\u793a\u7684\u53ea\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u5206\u9519\u4e86\u4e00\u4e9b\u8bad\u7ec3\u6837\u672c\uff0c\u51c6\u786e\u7387\u4f3c\u4e4e\u6ca1\u6709\u56fe4\u7684\u9ad8\uff0c\u4f46\u662f\uff0c\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u7684**\u6cdb\u5316\u80fd\u529b**\u6bd4\u91c7\u75283\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u8981\u5f3a\u3002\u56e0\u4e3a\uff0c\u91c7\u75282\u4e2a\u7279\u5f81\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u5b66\u4e60\u5230\u7684\u4e0d\u53ea\u662f\u7279\u4f8b\uff0c\u800c\u662f\u4e00\u4e2a**\u6574\u4f53\u8d8b\u52bf**\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u672a\u66fe\u51fa\u73b0\u8fc7\u7684\u6837\u672c\u4e5f\u53ef\u4ee5\u6bd4\u8f83\u597d\u5730\u8fa8\u522b\u5f00\u6765\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u901a\u8fc7\u51cf\u5c11\u7279\u5f81\u6570\u91cf\uff0c\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u4ece\u800c\u907f\u514d**\u201c\u7ef4\u6570\u707e\u96be\u201d**\u3002 \u56fe7\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u8be0\u91ca\u4e86\u201c\u7ef4\u6570\u707e\u96be\u201d\u3002\u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u65f6\uff0c\u7279\u5f81\u7684\u503c\u57df\u662f0\u52301\uff0c\u6bcf\u4e00\u53ea\u732b\u548c\u72d7\u7684\u7279\u5f81\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bad\u7ec3\u6837\u672c\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768420%\u3002\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u4e3a\u4e86\u7ee7\u7eed\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\u5c31\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768445%(0.45^2=0.2)\u3002 \u7ee7\u7eed\u589e\u52a0\u4e00\u4e2a\u7279\u5f81\u540e\uff0c\u9700\u8981\u732b\u548c\u72d7\u603b\u6570\u768458%(0.58^3=0.2)\u3002\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u4e3a\u4e86\u8986\u76d6\u7279\u5f81\u503c\u503c\u57df\u768420%\uff0c\u5c31\u9700\u8981\u66f4\u591a\u7684\u8bad\u7ec3\u6837\u672c\u3002\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u901a\u8fc7\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7279\u5f81\u6570\u91cf\u8d8a\u591a\uff0c\u8bad\u7ec3\u6837\u672c\u5c31\u4f1a\u8d8a\u7a00\u758f\uff0c\u5206\u7c7b\u5668\u7684\u53c2\u6570\u4f30\u8ba1\u5c31\u4f1a\u8d8a\u4e0d\u51c6\u786e\uff0c\u66f4\u52a0\u5bb9\u6613\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\u3002\u201c\u7ef4\u6570\u707e\u96be\u201d\u7684\u53e6\u4e00\u4e2a\u5f71\u54cd\u662f\u8bad\u7ec3\u6837\u672c\u7684\u7a00\u758f\u6027\u5e76\u4e0d\u662f\u5747\u5300\u5206\u5e03\u7684\u3002\u5904\u4e8e\u4e2d\u5fc3\u4f4d\u7f6e\u7684\u8bad\u7ec3\u6837\u672c\u6bd4\u56db\u5468\u7684\u8bad\u7ec3\u6837\u672c\u66f4\u52a0\u7a00\u758f\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a\u4e8c\u7ef4\u7279\u5f81\u7a7a\u95f4\uff0c\u5982\u56fe8\u6240\u793a\u7684\u77e9\u5f62\uff0c\u5728\u77e9\u5f62\u5185\u90e8\u6709\u4e00\u4e2a\u5185\u5207\u7684\u5706\u5f62\u3002\u7531\u4e8e\u8d8a\u63a5\u8fd1\u5706\u5fc3\u7684\u6837\u672c\u8d8a\u7a00\u758f\uff0c\u56e0\u6b64\uff0c\u76f8\u6bd4\u4e8e\u5706\u5f62\u5185\u7684\u6837\u672c\uff0c\u90a3\u4e9b\u4f4d\u4e8e\u77e9\u5f62\u56db\u89d2\u7684\u6837\u672c\u66f4\u52a0\u96be\u4ee5\u5206\u7c7b\u3002\u90a3\u4e48\uff0c\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5706\u5f62\u7684\u9762\u79ef\u4f1a\u4e0d\u4f1a\u53d8\u5316\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u8d85\u7acb\u65b9\u4f53(hypercube)\u7684\u8fb9\u957fL=1\uff0c\u90a3\u4e48\u8ba1\u7b97\u534a\u5f84\u4e3a0.5\u7684\u8d85\u7403\u9762(hypersphere)\u7684\u4f53\u79ef(volume)\u7684\u516c\u5f0f\u4e3a\uff1a \u4ece\u56fe9\u53ef\u4ee5\u770b\u51fa\u968f\u7740\u7279\u5f81\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8d85\u7403\u9762\u7684\u4f53\u79ef\u9010\u6e10\u51cf\u5c0f\u76f4\u81f3\u8d8b\u5411\u4e8e\u96f6\uff0c\u7136\u800c\u8d85\u7acb\u65b9\u4f53\u7684\u4f53\u79ef\u5374\u4e0d\u53d8\u3002\u8fd9\u4e2a\u7ed3\u679c\u6709\u70b9\u51fa\u4e4e\u610f\u6599\uff0c\u4f46\u90e8\u5206\u8bf4\u660e\u4e86\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u201c\u7ef4\u6570\u707e\u96be\u201d\uff1a\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5927\u591a\u6570\u7684\u8bad\u7ec3\u6837\u672c\u4f4d\u4e8e\u8d85\u7acb\u65b9\u4f53\u7684\u89d2\u843d\u3002 \u56fe10\u663e\u793a\u4e86\u4e0d\u540c\u7ef4\u5ea6\u4e0b\uff0c\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002\u57288\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5171\u67092^8=256\u4e2a\u89d2\u843d\uff0c\u800c98%\u7684\u6837\u672c\u5206\u5e03\u5728\u8fd9\u4e9b\u89d2\u843d\u3002\u968f\u7740\u7ef4\u5ea6\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u516c\u5f0f2\u5c06\u8d8b\u5411\u4e8e0\uff0c\u5176\u4e2d dist_{max} dist_{max} \u548c dist_{min} dist_{min} \u5206\u522b\u8868\u793a\u6837\u672c\u5230\u4e2d\u5fc3\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u8ddd\u79bb\u3002 \u56e0\u6b64\uff0c\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\u5bf9\u4e8e\u6837\u672c\u8ddd\u79bb\u7684\u5ea6\u91cf\u5931\u53bb\u610f\u4e49\u3002\u7531\u4e8e\u5206\u7c7b\u5668\u57fa\u672c\u90fd\u4f9d\u8d56\u4e8e\u5982Euclidean\u8ddd\u79bb(\u6b27\u5f0f\u8ddd\u79bb)\uff0cManhattan\u8ddd\u79bb(\u66fc\u54c8\u987f\u8ddd\u79bb)\u7b49\uff0c\u6240\u4ee5\u5728\u7279\u5f81\u6570\u91cf\u8fc7\u5927\u65f6\uff0c\u5206\u7c7b\u5668\u7684\u6027\u80fd\u5c31\u4f1a\u51fa\u73b0\u4e0b\u964d\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u5982\u4f55\u907f\u514d\u201c\u7ef4\u6570\u707e\u96be\u201d\uff1f\u56fe1\u663e\u793a\u4e86\u5206\u7c7b\u5668\u7684\u6027\u80fd\u968f\u7740\u7279\u5f81\u4e2a\u6570\u7684\u53d8\u5316\u4e0d\u65ad\u589e\u52a0\uff0c\u8fc7\u4e86\u67d0\u4e00\u4e2a\u503c\u540e\uff0c\u6027\u80fd\u4e0d\u5347\u53cd\u964d\u3002\u8fd9\u91cc\u7684\u67d0\u4e00\u4e2a\u503c\u5230\u5e95\u662f\u591a\u5c11\u5462\uff1f \u76ee\u524d\uff0c\u8fd8\u6ca1\u6709\u65b9\u6cd5\u6765\u786e\u5b9a\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u8fd9\u4e2a\u9608\u503c\u662f\u591a\u5c11\uff0c\u8fd9\u4f9d\u8d56\u4e8e\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\uff0c\u51b3\u7b56\u8fb9\u754c\u7684\u590d\u6742\u6027\u4ee5\u53ca\u5206\u7c7b\u5668\u7684\u7c7b\u578b\u3002 \u7406\u8bba\u4e0a\uff0c\u5982\u679c\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u65e0\u9650\u5927\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u5b58\u5728\u201c\u7ef4\u6570\u707e\u96be\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4efb\u610f\u591a\u7684\u7279\u5f81\u6765\u8bad\u7ec3\u5206\u7c7b\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u91c7\u7528\u8fc7\u591a\u7684\u7279\u5f81\u3002 \u6b64\u5916\uff0c\u90a3\u4e9b\u9700\u8981\u7cbe\u786e\u7684\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u7684\u5206\u7c7b\u5668\uff0c\u6bd4\u5982neural network\uff0cknn\uff0cdecision trees\u7b49\u7684\u6cdb\u5316\u80fd\u529b\u5f80\u5f80\u5e76\u4e0d\u662f\u5f88\u597d\uff0c\u66f4\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u5728\u8bbe\u8ba1\u8fd9\u4e9b\u5206\u7c7b\u5668\u65f6\u5e94\u5f53\u614e\u91cd\u8003\u8651\u7279\u5f81\u7684\u6570\u91cf\u3002\u76f8\u53cd\uff0c\u90a3\u4e9b\u6cdb\u5316\u80fd\u529b\u8f83\u597d\u7684\u5206\u7c7b\u5668\uff0c\u6bd4\u5982naive Bayesian\uff0clinear classifier\u7b49\uff0c\u53ef\u4ee5\u9002\u5f53\u589e\u52a0\u7279\u5f81\u7684\u6570\u91cf\u3002 \u5982\u679c\u7ed9\u5b9a\u4e86N\u4e2a\u7279\u5f81\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4ece\u4e2d\u9009\u51faM\u4e2a\u6700\u4f18\u7684\u7279\u5f81\uff1f\u6700\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\u662f\u5c1d\u8bd5\u6240\u6709\u7279\u5f81\u7684\u7ec4\u5408\uff0c\u4ece\u4e2d\u6311\u51faM\u4e2a\u6700\u4f18\u7684\u7279\u5f81\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u975e\u5e38\u82b1\u65f6\u95f4\u7684\uff0c\u6216\u8005\u8bf4\u4e0d\u53ef\u884c\u7684\u3002\u5176\u5b9e\uff0c\u5df2\u7ecf\u6709\u8bb8\u591a\u7279\u5f81\u9009\u62e9\u7b97\u6cd5( feature selection algorithms )\u6765\u5e2e\u52a9\u6211\u4eec\u786e\u5b9a\u7279\u5f81\u7684\u6570\u91cf\u4ee5\u53ca\u9009\u62e9\u7279\u5f81\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u7279\u5f81\u62bd\u53d6\u65b9\u6cd5( feature extraction methods )\uff0c\u6bd4\u5982 PCA \u7b49\u3002\u4ea4\u53c9\u9a8c\u8bc1( cross-validation )\u4e5f\u5e38\u5e38\u88ab\u7528\u4e8e\u68c0\u6d4b\u4e0e\u907f\u514d\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u53c2\u8003\u8d44\u6599\uff1a [1] Vincent Spruyt. The Curse of Dimensionality in classification. Computer vision for dummies. 2014. [ Link ]","title":"\u7ef4\u6570\u707e\u96be\u7684\u6df1\u5ea6\u7406\u89e3"},{"location":"\u673a\u5668\u5b66\u4e60/008-\u673a\u5668\u5b66\u4e60\u6982\u5ff5\u56de\u987e\u3001\u7cbe\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1-score\u3001\u51c6\u786e\u7387\u3001AUC\u3001ROC\u66f2\u7ebf/","text":"\u8f6c\u8f7d\u4e8e: https://www.jianshu.com/p/2ad360edd219 \u7cbe\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1-score\u3001\u51c6\u786e\u7387 \u9996\u5148\u6765\u4e00\u4e2a\u6211\u4eec\u719f\u6089\u7684\u6df7\u6dc6\u77e9\u9635\u7684\u56fe\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684\u6df7\u6dc6\u77e9\u9635\u7684\u56fe\uff1a Item \u8bf4\u660e \u9884\u6d4b\u6b63\u786e\u4e0e\u5426 TP \u5c06\u5b9e\u9645\u4e3a\u6b63\u6837\u4f8b\u9884\u6d4b\u4e3a\u6b63\u6837\u4f8b\u7684\u4e2a\u6570 \u5bf9\uff0c\u771f\u6b63\u7c7b TN \u5c06\u5b9e\u9645\u4e3a\u8d1f\u6837\u4f8b\u9884\u6d4b\u4e3a\u8d1f\u6837\u4f8b\u7684\u4e2a\u6570 \u5bf9\uff0c\u771f\u8d1f\u7c7b FP \u5c06\u5b9e\u9645\u4e3a\u6b63\u6837\u4f8b\u9884\u6d4b\u4e3a\u8d1f\u6837\u4f8b\u7684\u4e2a\u6570 \u9519\uff0c\u5047\u6b63\u7c7b FN \u5c06\u5b9e\u9645\u4e3a\u8d1f\u6837\u4f8b\u9884\u6d4b\u4e3a\u6b63\u6837\u4f8b\u7684\u4e2a\u6570 \u9519\uff0c\u5047\u8d1f\u7c7b TP+FP \u603b\u7684\u6837\u4f8b\u88ab\u9884\u6d4b\u4e3a**\u6b63\u6837\u4f8b**\u7684\u4e2a\u6570 FN+TN \u603b\u7684\u6837\u4f8b\u88ab\u9884\u6d4b\u4e3a**\u8d1f\u6837\u4f8b**\u7684\u4e2a\u6570 TP+FN \u5b9e\u9645\u7684\u6b63\u6837\u4f8b\u4e2a\u6570 FP+TN \u5b9e\u9645\u7684\u8d1f\u6837\u4f8b\u4e2a\u6570 \u4e0b\u6807\u5bf9\u4e00\u4e9b\u5ea6\u91cf\u7684\u6982\u5ff5\u548c\u516c\u5f0f\u8fdb\u884c\u8bf4\u660e \u6027\u80fd\u5ea6\u91cf \u516c\u5f0f \u8bf4\u660e \u7cbe\u786e\u7387(precision) \\frac{TP}{TP+FP} \\frac{TP}{TP+FP} \u5206\u6bcd\u4e3a\u9884\u6d4b\u4e3a\u6b63\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570 \u53ec\u56de\u7387(recall) \\frac{TP}{TP+FN} \\frac{TP}{TP+FN} \u5206\u6bcd\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570 F1-score \\frac{2TP}{2TP+FP+FN} \\frac{2TP}{2TP+FP+FN} \u6df7\u5408\u7684\u5ea6\u91cf\uff0c\u5bf9\u4e0d\u5e73\u8861\u7c7b\u522b\u975e\u5e38\u6709\u6548 \u51c6\u786e\u7387(accuracy) \\frac{TP+TN}{TP+FN+FP+FP} \\frac{TP+TN}{TP+FN+FP+FP} \u6a21\u578b\u7684\u6574\u4f53\u7684\u6027\u80fd\u7684\u8bc4\u4f30 Specificity \\frac{TN}{TN+FP} \\frac{TN}{TN+FP} \u5206\u6bcd\u4e3a\u5b9e\u9645\u8d1f\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u8d1f\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570 \u4e3e\u4e2a\u4f8b\u5b50\uff1a \u6211\u4eec\u5b9e\u9645\u670950\u4e2a\u6837\u4f8b\uff0c50\u4e2a\u8d1f\u6837\u4f8b\uff0c\u7136\u540e\u7ecf\u8fc7\u5206\u7c7b\u5668\u5206\u7c7b\u4e4b\u540e\u300250\u4e2a\u6b63\u6837\u4f8b\u4e2d\u670945\u4e2a\u9884\u6d4b\u4e3a\u6b63\u6837\u4f8b(\u9884\u6d4b\u51c6\u4e86)\uff0c5\u4e2a\u88ab\u9884\u6d4b\u6210\u4e3a\u4e86\u8d1f\u6837\u4f8b\u300250\u4e2a\u8d1f\u6837\u4f8b\u4e2d(\u9884\u6d4b\u9519\u8bef)\uff0c\u670940\u4e2a\u88ab\u9884\u6d4b\u4e3a\u4e86\u8d1f\u6837\u4f8b(\u9884\u6d4b\u51c6\u4e86)\uff0c10\u4e2a\u88ab\u9884\u6d4b\u4e3a\u4e86\u6b63\u6837\u4f8b(\u9884\u6d4b\u9519\u8bef)\u3002 \u5b9e\u9645\u60c5\u51b5 \u9884\u6d4b\u4e3a\u6b63 \u9884\u6d4b\u4e3a\u8d1f 50\u6b63 45 5 50\u8d1f 10 40 \u6839\u636e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\uff1a \u6027\u80fd\u5ea6\u91cf \u516c\u5f0f \u7cbe\u786e\u7387(precision) \\frac{TP}{TP+FP}=\\frac{45}{55}=0.82 \\frac{TP}{TP+FP}=\\frac{45}{55}=0.82 \u53ec\u56de\u7387(recall) \\frac{TP}{TP+FN}=\\frac{45}{50}=0.90 \\frac{TP}{TP+FN}=\\frac{45}{50}=0.90 F1-score \\frac{2TP}{2TP+FP+FN}=\\frac{2*45}{2*45+10+5}=0.86 \\frac{2TP}{2TP+FP+FN}=\\frac{2*45}{2*45+10+5}=0.86 \u51c6\u786e\u7387(accuracy) \\frac{TP+TN}{TP+FN+FP+FP}=\\frac{85}{100}=0.85 \\frac{TP+TN}{TP+FN+FP+FP}=\\frac{85}{100}=0.85 Specificity \\frac{TN}{TN+FP}=\\frac{40}{50}=0.80 \\frac{TN}{TN+FP}=\\frac{40}{50}=0.80 \u4e0b\u56fe\u5f88\u5f62\u8c61\u7684\u8bf4\u660e\u4e86\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8ba1\u7b97 ROC\u548cAUC\u66f2\u7ebf ROC = The receiver operating curve\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u53d7\u8bd5\u8005\u5de5\u4f5c\u66f2\u7ebf\uff0c\u8fd9\u6761\u66f2\u7ebf\u7684\u6a2a\u8f74\u4e3a\u5047\u6b63\u4f8b\u7387\u3001\u7eb5\u8f74\u662f\u771f\u6b63\u4f8b\u7387\u3002 \\begin{aligned} T P R &=\\frac{T P}{T P+F N} \\\\ T P R &=\\frac{F P}{T N+F N} \\end{aligned} \\begin{aligned} T P R &=\\frac{T P}{T P+F N} \\\\ T P R &=\\frac{F P}{T N+F N} \\end{aligned} AUC = the area under the receiving operating curve\u3002\u4e5f\u5c31\u4e0b\u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u7684\u533a\u57df \u7406\u60f3\u76ee\u6807\uff1aTPR=1\uff0cFPR=0,\u5373\u56fe\u4e2d(0,1)\u70b9\uff0c\u6545ROC\u66f2\u7ebf\u8d8a\u9760\u62e2(0,1)\u70b9\uff0c\u8d8a\u504f\u79bb45\u5ea6\u5bf9\u89d2\u7ebf\u8d8a\u597d\u3002","title":"008-\u673a\u5668\u5b66\u4e60\u6982\u5ff5\u56de\u987e\u3001\u7cbe\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1-score\u3001\u51c6\u786e\u7387\u3001AUC\u3001ROC\u66f2\u7ebf"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/","text":"\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba \u00b6 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\uff1a\u6a21\u578b\u3001\u7b56\u7565\u548c\u7b97\u6cd5\u3002 \u7edf\u8ba1\u5b66\u4e60 \u00b6 \u7edf\u8ba1\u5b66\u4e60 \u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\u7684\u4e00\u95e8\u79d1\u5b66\uff0c\u7edf\u8ba1\u5b66\u4e60\u4e5f\u79f0\u4e3a\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u7279\u70b9\uff1a \u7edf\u8ba1\u5b66\u4e60\u4ee5\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u4e3a\u5e73\u53f0\uff0c\u662f\u5efa\u7acb\u5728\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u4e0a\u7684\uff1b \u7edf\u8ba1\u5b66\u4e60\u4ee5\u6570\u636e\u4e3a\u7814\u7a76\u5bf9\u8c61\uff0c\u662f\u6570\u636e\u9a71\u52a8\u7684\u5b66\u79d1\uff1b \u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff1b \u7edf\u8ba1\u5b66\u4e60\u4ee5\u65b9\u6cd5\u4e3a\u4e2d\u5fc3\uff0c\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6784\u5efa\u6a21\u578b\u5e76\u5e94\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff1b \u7edf\u8ba1\u5b66\u4e60\u662f\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u4fe1\u606f\u8bba\u3001\u8ba1\u7b97\u7406\u8bba\u3001\u6700\u4f18\u5316\u53ca\u8ba1\u7b97\u673a\u7b49\u591a\u4e2a\u9886\u57df\u7684\u4ea4\u53c9\u5b66\u79d1\uff0c\u5e76\u4e14\u5728\u53d1\u5c55\u4e2d\u9010\u6b65\u5f62\u6210\u72ec\u81ea\u7684\u7406\u8bba\u4f53\u7cfb\u4e0e\u65b9\u6cd5\u8bba\u3002 \u5b66\u4e60 \uff1a\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u80fd\u591f\u901a\u8fc7\u6267\u884c\u67d0\u4e2a\u8fc7\u7a0b\u6539\u8fdb\u5b83\u7684\u6027\u80fd\uff0c\u8fd9\u5c31\u662f\u5b66\u4e60\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u5bf9\u8c61 \u00b6 \u7edf\u8ba1\u5b66\u4e60\u7684\u5bf9\u8c61\u662f \u6570\u636e \u3002\u5b83\u4ece\u6570\u636e\u51fa\u53d1\uff0c\u63d0\u53d6\u6570\u636e\u7684\u7279\u5f81\uff0c\u62bd\u8c61\u51fa\u6570\u636e\u7684\u6a21\u578b\uff0c\u53d1\u73b0\u6570\u636e\u4e2d\u7684\u77e5\u8bc6\uff0c\u53c8\u56de\u5230\u5bf9\u6570\u636e\u7684\u5206\u6790\u4e0e\u9884\u6d4b\u4e2d\u53bb\u3002\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u5c31\u662f\u7279\u5f81\uff0c\u800c\u7279\u5f81\u662f\u6700\u540e\u9700\u8981\u8f93\u5165\u5230\u6a21\u578b\u4e2d\u8fdb\u884c\u8bad\u7ec3\u7684\u591a\u7ef4\u6570\u636e\u5411\u91cf\uff0c\u5b83\u662f\u6765\u81ea\u4e8e\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e(\u5982\u6570\u5b57\u3001\u6587\u672c\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49)\u8f6c\u6362\uff0c\u8fd9\u4e2a\u8f6c\u6362\u7684\u8fc7\u7a0b\u5c31\u662f\u673a\u5668\u5b66\u4e60\u4e0e\u6570\u636e\u6316\u6398\u9886\u57df\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6b65\u9aa4:\u201c\u7279\u5f81\u5de5\u7a0b\u201d\u3002 \u7edf\u8ba1\u5b66\u4e60\u5173\u4e8e\u6570\u636e\u7684\u57fa\u672c\u5047\u8bbe\u662f\u540c\u7c7b\u6570\u636e\u5177\u6709\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\u6027\uff0c\u8fd9\u662f\u7edf\u8ba1\u5b66\u4e60\u7684\u524d\u63d0\u3002\u5728\u7edf\u8ba1\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u53d8\u91cf\u6216\u53d8\u91cf\u7ec4\u8868\u793a\u6570\u636e\u3002\u6570\u636e\u5206\u4e3a\u7531\u8fde\u7eed\u53d8\u91cf\u548c\u79bb\u6563\u53d8\u91cf\u8868\u793a\u7684\u5f62\u5f0f\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684 \u00b6 \u7edf\u8ba1\u5b66\u4e60\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff0c\u7279\u522b\u662f\u5bf9 \u672a\u77e5 \u65b0\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\u3002 \u5bf9\u6570\u636e\u7684\u9884\u6d4b\u4e0e\u5206\u6790\u662f\u901a\u8fc7\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5b9e\u73b0\u7684\u3002\u7edf\u8ba1\u5b66\u4e60\u603b\u7684\u76ee\u7684\u5c31\u662f\u8003\u8651\u5b66\u4e60\u4ec0\u4e48\u6837\u7684\u6a21\u578b\u548c\u5982\u4f55\u5b66\u4e60\u6a21\u578b\uff0c\u4ee5\u4f7f\u6a21\u578b\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u51c6\u786e\u7684\u9884\u6d4b\u4e0e\u5206\u6790\uff0c\u540c\u6837\u4e5f\u8981\u8003\u8651\u5c3d\u53ef\u80fd\u5730\u63d0\u9ad8\u5b66\u4e60\u6548\u7387\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u65b9\u6cd5 \u00b6 \u76d1\u7763\u5b66\u4e60\uff0c\u975e\u76d1\u7763\u5b66\u4e60\uff0c\u534a\u76d1\u7763\u5b66\u4e60\uff0c\u5f3a\u5316\u5b66\u4e60\u7b49\u7ec4\u6210\u3002 \u4ece\u7ed9\u5b9a\u7684\u3001\u6709\u9650\u7684\u3001\u7528\u4e8e\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f \u72ec\u7acb\u540c\u5206\u5e03 \u4ea7\u751f\u7684\uff1b\u5e76\u4e14\u5047\u8bbe\u8981\u5b66\u4e60\u7684\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u79f0\u4e3a \u5047\u8bbe\u7a7a\u95f4 \uff1b\u5e94\u7528\u67d0\u4e2a\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u77e5\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u7684\u8bc4\u4ef7\u51c6\u5219\u4e0b\u6709\u6700\u4f18\u7684\u9884\u6d4b\uff1b\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531\u7b97\u6cd5\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\u3001\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\u4ee5\u53ca\u6a21\u578b\u5b66\u4e60\u7684\u7b97\u6cd5\uff0c\u7edf\u79f0\u5176\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u7684\u4e09\u8981\u7d20\uff1a\u7b80\u79f0\u4e3a \u6a21\u578b \u3001 \u7b56\u7565 \u548c \u7b97\u6cd5 \u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u5f97\u5230\u4e00\u4e2a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\uff1b \u786e\u5b9a\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\uff0c\u5373\u5b66\u4e60\u6a21\u578b\u7684\u96c6\u5408\uff1b \u786e\u5b9a\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\uff0c\u5373\u5b66\u4e60\u7684\u7b56\u7565\uff1b \u5b9e\u73b0\u6c42\u89e3\u6700\u4f18\u6a21\u578b\u7684\u7b97\u6cd5\uff0c\u5373\u5b66\u4e60\u7684\u7b97\u6cd5\uff1b \u901a\u8fc7\u5b66\u4e60\u65b9\u6cd5\u9009\u62e9\u6700\u4f18\u6a21\u578b\uff1b \u901a\u8fc7\u5b66\u4e60\u7684\u6700\u4f18\u6a21\u578b\u5bf9\u65b0\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u548c\u5206\u6790\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u7814\u7a76 \u00b6 \u7814\u7a76\u5206\u4e3a\u65b9\u6cd5\u3001\u7406\u8bba\u548c\u5e94\u7528\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u91cd\u8981\u6027 \u00b6 \u7edf\u8ba1\u5b66\u4e60\u662f\u5904\u7406\u6d77\u91cf\u6570\u636e\u7684\u6709\u6548\u65b9\u6cd5\u3002 \u7edf\u8ba1\u5b66\u4e60\u662f\u8ba1\u7b97\u673a\u667a\u80fd\u5316\u7684\u6709\u6548\u624b\u6bb5\u3002 \u7edf\u8ba1\u5b66\u4e60\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u53d1\u5c55\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff08\u5c5e\u4e8e\u7cfb\u7edf\u3001\u8ba1\u7b97\u548c\u4fe1\u606f\u4e09\u8005\u4e2d\u7684\u4fe1\u606f\uff09\u3002 \u76d1\u7763\u5b66\u4e60 \u00b6 \u76d1\u7763\u5b66\u4e60\u7684\u4efb\u52a1\u662f\u5b66\u4e60\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u8f93\u5165\uff0c\u5bf9\u5176\u76f8\u5e94\u7684\u8f93\u51fa\u4f5c\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\u3002 \u57fa\u672c\u6982\u5ff5 \u00b6 \u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u5206\u522b\u79f0\u4e3a \u8f93\u5165\u7a7a\u95f4 \u4e0e \u8f93\u51fa\u7a7a\u95f4 \u3002\u6bcf\u4e2a\u5177\u4f53\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u901a\u5e38\u7531\u7279\u5f81\u5411\u91cf\u8868\u793a\u3002\u6240\u6709\u7279\u5f81\u5411\u91cf\u5b58\u5728\u7684\u7a7a\u95f4\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4\u3002 \u5728\u76d1\u7763\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u8f93\u5165\u4e0e\u8f93\u51fa\u770b\u4f5c\u662f\u5b9a\u4e49\u5728\u8f93\u5165\uff08\u7279\u5f81\uff09\u7a7a\u95f4\u4e0e\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d6\u503c\u3002\u76d1\u7763\u5b66\u4e60\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u4e2d\u5b66\u4e60\u6a21\u578b\uff0c\u5bf9\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u3002 \u4e0d\u540c\u7684\u9884\u6d4b\u4efb\u52a1\u7ed9\u4e88\u4e0d\u540c\u7684\u540d\u79f0\uff1a \u8f93\u5165\u53d8\u91cf\u4e0e\u8f93\u51fa\u53d8\u91cf\u5747\u4e3a\u8fde\u7eed\u53d8\u91cf\u7684\u9884\u6d4b\u95ee\u9898\u6210\u4e3a \u56de\u5f52\u95ee\u9898 \u3002 \u8f93\u51fa\u53d8\u91cf\u4e3a\u6709\u9650\u4e2a\u79bb\u6563\u53d8\u91cf\u7684\u9884\u6d4b\u95ee\u9898\u79f0\u4e3a \u5206\u7c7b\u95ee\u9898 \u3002 \u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u5747\u4e3a\u53d8\u91cf\u5e8f\u5217\u7684\u9884\u6d4b\u95ee\u9898\u79f0\u4e3a \u6807\u6ce8\u95ee\u9898 \u3002 \u76d1\u7763\u5b66\u4e60\u5047\u8bbe\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u968f\u673a\u53d8\u91cf {X} {X} \u548c {Y} {Y} \u9075\u5faa\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X, Y)} {P(X, Y)} \uff0c {P(X, Y)} {P(X, Y)} \u8868\u793a\u5206\u5e03\u51fd\u6570\uff0c\u6216\u5206\u5e03\u5bc6\u5ea6\u51fd\u6570\u3002\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5047\u8bbe\u8fd9\u4e00\u8054\u5408\u6982\u7387\u5206\u5e03\u5b58\u5728\uff0c\u4f46\u5bf9\u4e8e\u5b66\u4e60\u7cfb\u7edf\u6765\u8bf4\uff0c\u5177\u4f53\u5b9a\u4e49\u662f\u672a\u77e5\u7684\uff0c\u7edf\u8ba1\u5b66\u4e60\u5047\u8bbe\u6570\u5b66\u5b58\u5728\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\uff0c {X} {X} \u548c {Y} {Y} \u5177\u6709\u8054\u5408\u6982\u7387\u5206\u5e03\u7684\u5047\u8bbe\u5c31\u662f\u76d1\u7763\u5b66\u4e60\u5173\u4e8e\u6570\u636e\u7684\u5047\u8bbe\u3002 \u76d1\u7763\u5b66\u4e60\u7684\u76ee\u7684\u5728\u4e8e\u5b66\u4e60\u4e00\u4e2a\u7531\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04\uff0c\u8fd9\u4e2a\u6620\u5c04\u7531\u6a21\u578b\u6765\u8868\u793a\u3002\u5b66\u4e60\u7684\u76ee\u7684\u5c31\u5728\u4e8e\u627e\u5230\u6700\u597d\u7684\u8fd9\u6837\u7684\u6a21\u578b\u3002\u6a21\u578b\u5c5e\u4e8e\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u001c\u7a7a\u95f4\u7684\u6620\u5c04\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5c31\u662f\u5047\u8bbe\u7a7a\u95f4\u3002\u5047\u8bbe\u7a7a\u95f4\u7684\u786e\u5b9a\u4ee5\u4e3a\u7740\u5b66\u4e60\u8303\u56f4\u7684\u786e\u5b9a\u3002 \u6a21\u578b\u53ef\u4ee5\u662f\u6982\u7387\u6a21\u578b\u6216\u975e\u6982\u7387\u6a21\u578b\uff0c\u6709\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u6216\u51b3\u7b56\u51fd\u6570 {Y = f(X)} {Y = f(X)} \u8868\u793a\u3002 \u95ee\u9898\u7684\u5f62\u5f0f\u5316 \u00b6 \u7edf\u8ba1\u5b66\u4e60\u4e09\u8981\u7d20 \u00b6 \u65b9\u6cd5 = \u6a21\u578b + \u7b56\u7565 + \u7b97\u6cd5 \u6a21\u578b \uff1a\u5728\u76d1\u7763\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u5c31\u662f\u6240\u8981\u5b66\u4e60\u7684\u6761\u4ef6\u6982\u7387\u6216\u8005\u51b3\u7b56\u51fd\u6570\u3002\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u6216\u51b3\u7b56\u51fd\u6570\u3002 \u7b56\u7565 \uff1a\u4f7f\u7528\u4e00\u79cd\u4ec0\u4e48\u6837\u7684\u8bc4\u4ef7\uff0c\u5ea6\u91cf\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u5b66\u4e60\u597d\u574f\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u6839\u636e\u8fd9\u4e2a\u65b9\u6cd5\u53bb\u5b9e\u65bd\u7684\u8c03\u6574\u6a21\u578b\u7684\u53c2\u6570\uff0c\u4ee5\u671f\u671b\u8bad\u7ec3\u7684\u6a21\u578b\u5c06\u6765\u5bf9\u672a\u77e5\u7684\u6570\u636e\u5177\u6709\u6700\u597d\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002 \u7b97\u6cd5 \uff1a\u6a21\u578b\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\u3002\u5b83\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u6839\u636e\u5b66\u4e60\u7b56\u7565\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u62e9\u6700\u4f18\u6a21\u578b\uff0c\u6700\u540e\u8003\u8651\u7528\u4ec0\u4e48\u6837\u7684\u8ba1\u7b97\u65b9\u6cd5\u53bb\u6c42\u89e3\u8fd9\u4e2a\u6700\u4f18\u6a21\u578b\u3002 \u635f\u5931\u51fd\u6570\u548c\u98ce\u9669\u51fd\u6570 \u00b6 \u635f\u5931\u51fd\u6570(loss function)\u6216\u4ee3\u4ef7\u51fd\u6570(cost function)\u662f\u7528\u6765\u5ea6\u91cf\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u7684\u3002\u635f\u5931\u51fd\u6570\u662f {f(X)} {f(X)} \uff08\u9884\u6d4b\u503c\uff09\u548c {Y} {Y} \uff08\u771f\u5b9e\u503c\uff09\u4e4b\u95f4\u7684\u975e\u8d1f\u5b9e\u503c\u51fd\u6570\uff08\u56e0\u4e3a\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u503c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u662f\u975e\u8d1f\u7684\uff09\uff0c\u8bb0\u4f5c {L(Y, f (X))} {L(Y, f (X))} \u3002 {0-1} {0-1} \u635f\u5931\u51fd\u6570\uff1a { L(Y, f(X) = \\mathbb{I}[Y \\neq f(X)]} { L(Y, f(X) = \\mathbb{I}[Y \\neq f(X)]} \u5e73\u65b9\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = (|Y - f(X)|)^2} {L(Y, P(Y|X)) = (|Y - f(X)|)^2} \u7edd\u5bf9\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = |Y - f(X)|} {L(Y, P(Y|X)) = |Y - f(X)|} \u5bf9\u6570\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = -\\log P(Y|X)} {L(Y, P(Y|X)) = -\\log P(Y|X)} \u5f53\u7136\u8fd8\u5b58\u5728\u5176\u4ed6\u7684\u635f\u5931\u51fd\u6570\u6bd4\u5982\uff1a\u6307\u6570\u635f\u5931\u51fd\u6570\u6216\u8005Hinge Loss\u7b49\u3002 \u635f\u5931\u51fd\u6570\u503c\u8d8a\u5c0f\uff0c\u4ee3\u8868\u6a21\u578b\u8d8a\u597d\uff0c\u6a21\u578b\u51fa\u73b0\u7684\u8bef\u5dee\u8d8a\u5c0f\u3002\u7531\u4e8e\u6a21\u578b\u7684\u8f93\u5165\u3001\u8f93\u51fa {(X,Y)} {(X,Y)} \u662f\u968f\u673a\u53d8\u91cf\uff0c\u9075\u5faa\u8054\u5408\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u6240\u4ee5\u635f\u5931\u51fd\u6570\u7684\u671f\u671b\u662f\uff1a {R_{exp} = E_p[L(Y, f(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, f(X)) P(x, y)dxdy} {R_{exp} = E_p[L(Y, f(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, f(X)) P(x, y)dxdy} \u8fd9\u662f\u7406\u8bba\u4e0a\u6a21\u578b {f(X)} {f(X)} \u5173\u4e8e\u8054\u5408\u5206\u5e03 {P(X,Y)} {P(X,Y)} \u7684\u5e73\u5747\u610f\u4e49\u4e0b\u7684\u635f\u5931\uff0c\u79f0\u4e3a\u98ce\u9669\u51fd\u6570(risk function)\u6216\u671f\u671b\u635f\u5931(expected loss)\u3002 \u5b66\u4e60\u7684\u65e5\u6807\u5c31\u662f\u9009\u62e9\u671f\u671b\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u3002\u4e00\u65b9\u9762\u6839\u636e\u671f\u671b\u98ce\u9669\u6700\u5c0f\u5316\u6a21\u578b\u8981\u7528\u5230\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u53e6\u4e00\u65b9\u9762\u8054\u5408\u5206\u5e03\u53c8\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5\u76d1\u7763\u5b66\u4e60\u5c31\u6210\u4e3a\u4e00\u4e2a\u75c5\u6001\u95ee\u9898\u3002 \u5728\u6b64\u6211\u4eec\u63d0\u51fa\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\uff1a\u7ecf\u9a8c\u98ce\u9669\u3002\u6a21\u578b {f(x)} {f(x)} \u5173\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\u79f0\u4e3a\u7ecf\u9a8c\u98ce\u9669 (empirical risk) \u6216\u7ecf\u9a8c\u635f\u5931 (empirical loss)\uff0c\u8bb0\u505a {R_{emp}(f)} {R_{emp}(f)} \uff1a {R_{emp}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i))} {R_{emp}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i))} \u671f\u671b\u98ce\u9669 {R_{exp}(f)} {R_{exp}(f)} \u662f\u6a21\u578b\u5173\u4e8e\u8054\u5408\u5206\u5e03\u7684\u671f\u671b\u635f\u5931\uff0c\u7ecf\u9a8c\u98ce\u9669 {R_{emp}(f)} {R_{emp}(f)} \u662f\u6a21\u578b\u5173\u4e8e\u8bad\u7ec3\u6837\u672c\u96c6\u7684\u5e73\u5747\u635f\u5931\u3002\u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u5f53\u6837\u672c\u5bb9\u91cf {N} {N} \u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u8d8b\u4e8e\u671f\u671b\u98ce\u9669\u3002\u6240\u4ee5\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u7528\u7ecf\u9a8c\u98ce\u9669\u4f30\u8ba1\u671f\u671b\u98ce\u9669\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u73b0\u5b9e\u4e2d\u8bad\u7ec3\u6837\u672c\u6570\u76ee\u6709\u9650\uff0c\u751a\u81f3\u5f88\u5c0f\uff0c\u6240\u4ee5\u7528\u7ecf\u9a8c\u98ce\u9669\u4f30\u8ba1\u671f\u671b\u98ce\u9669\u5e38\u5e38\u5e76\u4e0d\u7406\u60f3\uff0c\u8981\u5bf9\u7ecf\u9a8c\u98ce\u9669\u8fdb\u884c\u4e00\u5b9a\u7684\u77eb\u6b63\u3002\u8fd9\u5c31\u5173\u7cfb\u5230\u76d1\u7763\u5b66\u4e60\u7684\u4e24\u4e2a\u57fa\u672c\u7b56\u7565\uff1a\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u548c\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u3002 \u5728\u5047\u8bbe\u7a7a\u95f4\u3001\u635f\u5931\u51fd\u6570\u4ee5\u53ca\u8bad\u7ec3\u6570\u636e\u96c6\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u7ecf\u9a8c\u98ce\u9669\u51fd\u6570\u5f0f\u5c31\u53ef\u4ee5\u786e\u5b9a\u3002\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 (empirical risk minimization, ERM) \u7684\u7b56\u7565\u8ba4\u4e3a\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u662f\u6700\u4f18\u7684\u6a21\u578b\u3002\u6839\u636e\u8fd9\u4e00\u7b56\u7565\uff0c\u6309\u7167\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u6c42\u6700\u4f18\u6a21\u578b\u5c31\u662f\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\uff1a {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} L(y_i, f(x_i))} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} L(y_i, f(x_i))} \u5176\u4e2d\uff0c {\\mathcal{F}} {\\mathcal{F}} \u662f\u5047\u8bbe\u7a7a\u95f4\u3002\u5f53\u6837\u672c\u5bb9\u91cf\u8db3\u591f\u5927\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u80fd\u4fdd\u8bc1\u6709\u5f88\u597d\u7684\u5b66\u4e60\u6548\u679c\uff0c\u5728\u73b0\u5b9e\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u6bd4\u5982\uff0c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u5c31\u662f\u98ce\u9669\u6700\u5c0f\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u5f53\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\u65f6\uff0c\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u5c31\u7b49\u4ef7\u4e8e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u5f53\u6837\u672c\u5bb9\u91cf\u5f88\u5c0f\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u5b66\u4e60\u7684\u6548\u679c\u672a\u5fc5\u5f88\u597d\uff0c\u4f1a\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002 \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316 (structural risk minimization, SRM) \u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408\u800c\u63d0\u51fa\u6765\u7684\u7b56\u7565\u3002\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7b49\u4ef7\u4e8e\u6b63\u5219\u5316 (regularization)\u3002\u7ed3\u6784\u98ce\u9669\u5728\u7ecf\u9a8c\u98ce\u9669\u4e0a\u52a0\u4e0a\u8868\u793a\u6a21\u578b\u590d\u6742\u5ea6\u7684\u6b63\u5219\u5316\u9879 (regula\u001crizer) \u6216\u7f5a\u9879 (penalty term)\u3002\u5728\u5047\u8bbe\u7a7a\u95f4\u3001\u635f\u5931\u51fd\u6570\u4ee5\u53ca\u8bad\u7ec3\u6570\u636e\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u98ce\u9669\u7684\u5b9a\u4e49\u662f\uff1a {R_{srm}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {R_{srm}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u5176\u4e2d\uff0c {J(f)} {J(f)} \u4e3a\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u662f\u5b9a\u4e49\u5728\u5047\u8bbe\u7a7a\u95f4 {\\mathcal{F}} {\\mathcal{F}} \u7684\u6cdb\u51fd\u3002\u6a21\u578b {f} {f} \u8d8a\u590d\u6742\uff0c\u590d\u6742\u5ea6 {J(f)} {J(f)} \u5c31\u8d8a\u5927\uff1b\u53cd\u4e4b\uff0c\u6a21\u578b {f} {f} \u8d8a\u7b80\u5355\uff0c\u590d\u6742\u5ea6 {J(f)} {J(f)} \u5c31\u8d8a\u5c0f\u3002\u590d\u6742\u5ea6\u8868\u793a\u4e86\u5bf9\u590d\u6742\u6a21\u578b\u7684\u60e9\u7f5a\u3002 {\\lambda \\geq 0} {\\lambda \\geq 0} \u662f\u7cfb\u6570\uff0c\u7528\u4ee5\u6743\u8861\u7ecf\u9a8c\u98ce\u9669\u548c\u6a21\u578b\u590d\u6742\u5ea6\u3002\u7ed3\u6784\u98ce\u9669\u5c0f\u9700\u8981\u7ecf\u9a8c\u98ce\u9669\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u540c\u65f6\u5c0f\u3002\u7ed3\u6784\u98ce\u9669\u5c0f\u7684\u6a21\u578b\u65fa\u65fa\u5bf9\u8bad\u7ec3\u6570\u636e\u4ee5\u53ca\u672a\u77e5\u7684\u6d4b\u8bd5\u6570\u636e\u6709\u8f83\u597d\u7684\u9884\u6d4b\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1\u4e2d\u6700\u5927\u540e\u9a8c\u6982\u7387 (maximum posterior probability estimation, MAP) \u5c31\u662f\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u5f53\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3001\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u3002\u6a21\u578b\u590d\u6742\u5ea6\u7531\u6a21\u578b\u7684\u5148\u9a8c\u6982\u7387\u6982\u7387\u8868\u793a\u65f6\uff0c\u7ed3\u6784\u98ce\u9669\u6700\u4e0b\u5316\u5c31\u7b49\u4e8e\u6700\u5927\u540e\u9a8c\u6982\u7387\u4f30\u8ba1\u3002 \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u7b56\u7565\u8ba4\u4e3a\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u662f\u6700\u4f18\u7684\u6a21\u578b\u3002\u6240\u4ee5\u6c42\u89e3\u6700\u4f18\u6a21\u578b\uff0c\u5c31\u662f\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\uff1a {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u56e0\u6b64\uff0c\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7ecf\u9a8c\u98ce\u9669\u6216\u8005\u7ed3\u6784\u98ce\u9669\u51fd\u6570\u6700\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u65f6\u7ecf\u9a8c\u6216\u7ed3\u6784\u98ce\u9669\u51fd\u6570\u662f\u6700\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u3002 \b \u7b97\u6cd5 \u00b6 \u5b66\u4e60\u6a21\u578b\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\u3002\u7edf\u8ba1\u5b66\u4e60\u95ee\u9898\u5f52\u7ed3\u4e3a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u7edf\u8ba1\u5b66\u4e60\u7684\u7b97\u6cd5\u6210\u4e3a\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\u7684\u7b97\u6cd5\u3002\u5982\u4f55\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u5e76\u4f7f\u5f97\u6c42\u89e3\u7684\u8fc7\u7a0b\u975e\u5e38\u9ad8\u6548\uff0c\u662f\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u95ee\u9898\u3002 \u6a21\u578b\u8bc4\u4f30\u548c\u6a21\u578b\u9009\u62e9 \u00b6 \u8bad\u7ec3\u8bef\u5dee\u4e0e\u6d4b\u8bd5\u8bef\u5dee \u00b6 \u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684\u662f\u4f7f\u5b66\u5230\u7684\u6a21\u578b\u4e0d\u4ec5\u5bf9\u5df2\u77e5\u6570\u636e\u800c\u4e14\u5bf9\u672a\u77e5\u6570\u636e\u90fd\u80fd\u6709\u5f88\u597d\u7684\u9884\u6d4b\u80fd\u529b\u3002\u4e0d\u540c\u7684\u5b66\u4e60\u65b9\u6cd5\u4f1a\u7ed9\u51fa\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5f53\u635f\u5931\u51fd\u6570\u7ed9\u5b9a\u65f6\uff0c\u57fa\u4e8e\u635f\u5931\u51fd\u6570\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u8bef\u5dee\u548c\u6a21\u578b\u7684\u6d4b\u8bd5\u8bef\u5dee\u5c31\u6210\u4e86\u5b66\u4e60\u65b9\u6cd5\u8bc4\u4f30\u7684\u6807\u51c6\u3002 \u5177\u4f53\u91c7\u7528\u7684\u635f\u5931\u51fd\u6570\u672a\u5fc5\u662f\u8bc4\u4f30\u65f6\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u3002 \u5047\u8bbe\u5b66\u4e60\u5230\u7684\u6a21\u578b\u662f {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \uff0c\u8bad\u7ec3\u8bef\u5dee\u662f\u6a21\u578b {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \u5173\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\uff1a {R_{emp}(\\hat{f}) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, \\hat{f}(x_i))} {R_{emp}(\\hat{f}) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, \\hat{f}(x_i))} \u5176\u4e2d\uff0c {N} {N} \u662f\u6837\u672c\u5bb9\u91cf\u3002 \u6d4b\u8bd5\u8bef\u5dee\u662f\u6a21\u578b {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \u5173\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\uff1a {e_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} L(y_i, \\hat{f}(x_i))} {e_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} L(y_i, \\hat{f}(x_i))} \u5176\u4e2d\uff0c {N'} {N'} \u662f\u6837\u672c\u5bb9\u91cf\u3002 \u5f53\u635f\u5931\u51fd\u6570\u662f {0-1} {0-1} \u635f\u5931\u51fd\u6570\u65f6\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5c31\u53d8\u6210\u4e86\u5e38\u89c1\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u7684\u8bef\u5dee\u7387\uff1a {r_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} \\mathbb{I}[y_i \\neq \\hat{f}(x_i)]} {r_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} \\mathbb{I}[y_i \\neq \\hat{f}(x_i)]} \u8fd9\u91cc {\\mathbb{I}} {\\mathbb{I}} \u662f\u6307\u793a\u51fd\u6570\uff0c\u5373 {y_i \\neq \\hat{f}(x_i)} {y_i \\neq \\hat{f}(x_i)} \u662f\u4e3a {1} {1} \uff0c\u5426\u5219\u4e3a {0} {0} \u3002 \u663e\u7136\uff0c {r_{test} + e_{test} = 1} {r_{test} + e_{test} = 1} \u8bad\u7ec3\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u5bf9\u5224\u65ad\u7ed9\u5b9a\u7684\u95ee\u9898\u662f\u4e0d\u662f\u4e00\u4e2a\u5bb9\u6613\u5b66\u4e60\u7684\u95ee\u9898\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u672c\u8d28\u4e0a\u4e0d\u91cd\u8981\u3002\u6d4b\u8bd5\u8bef\u5dee\u53cd\u6620\u4e86\u5b66\u4e60\u65b9\u6cd5\u5bf9\u672a\u77e5\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u5b66\u4e60\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\u3002\b\u663e\u7136\uff0c\u7ed9\u5b9a\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5c0f\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u597d\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u3002\u901a\u5e38\u5c06\u5b66\u4e60\u65b9\u6cd5\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\u6210\u4e3a\u6cdb\u5316\u80fd\u529b\u3002 \u8fc7\u62df\u5408\u4e0e\u6a21\u578b\u9009\u62e9 \u00b6 \u5f53\u5047\u8bbe\u7a7a\u95f4\u542b\u6709\u4e0d\u540c\u590d\u6742\u5ea6\u7684\u6a21\u578b\u65f6\uff0c\u5c31\u8981\u9762\u4e34\u6a21\u578b\u9009\u62e9\u7684\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u9009\u62e9\u6216\u5b66\u4e60\u4e00\u4e2a\u5408\u9002\u7684\u6a21\u578b\u3002\u5982\u679c\u5728\u5047\u8bbe\u7a7a\u95f4\u4e2d\u5b58\u5728 \u201c\u771f\u201d \u6a21\u578b\uff0c\u90a3\u4e48\u6240\u9009\u62e9\u7684\u6a21\u578b\u5e94\u8be5\u903c\u8fd1\u7f1c\u5bc6\u6027\u3002\u5177\u4f53\u5730\uff0c\u6240\u9009\u62e9\u7684\u6a21\u578b\u8981\u4e0e\u771f\u6a21\u578b\u7684\u53c2\u6570\u4e2a\u6570\u76f8\u540c\uff0c\u6240\u9009\u62e9\u7684\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u4e0e\u771f\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u76f8\u8fd1\u3002 \u5982\u679c\u4e00\u5473\u8ffd\u6c42\u63d0\u9ad8\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u9884\u4fa7\u80fd\u529b\uff0c\u6240\u9009\u6a21\u578b\u7684\u590d\u6742\u5ea6\u5219\u5f80\u5f80\u4f1a\u6bd4\u771f\u6a21\u578b\u66f4\u9ad8\u3002\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a \u8fc7\u62df\u5408 (over-fitting)\u3002\u8fc7\u62df\u5408\u662f\u6307\u5b66\u4e60\b\u65f6\u9009\u62e9\u7684\u6a21\u578b\u5305\u542b\u7684\u53c2\u6570\u8fc7\u591a\uff0c\u4ee5\u81f4\u4e8e\u51fa\u73b0\u8fd9\u4e00\u6a21\u578b\u5bf9\u5df1\u77e5\u6570\u636e\uff08\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\uff09\u9884\u6d4b\u5f97\u5f88\u597d\uff0c\u4f46\u5bf9\u672a\u77e5\u6570\u636e\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\uff09\u9884\u6d4b\u5f97\u5f88\u5dee\u7684\u73b0\u8c61\u3002 \u6a21\u578b\u9009\u62e9\u65e8\u5728\u907f\u514d\u8fc7\u62df\u5408\u5e76\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u3002 \u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1 \u00b6 \u6b63\u5219\u5316 \u00b6 \u6a21\u578b\u9009\u62e9\u7684\u5178\u578b\u65b9\u6cd5\u662f\u6b63\u5219\u5316\uff0c\u662f\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7b56\u7565\u7684\u5b9e\u73b0\uff0c\u662f\u5728\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u4e0a\u52a0\u4e00\u4e2a\u6b63\u5219\u5316\u9879\u6216\u7f5a\u9879\u3002 {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u6b63\u5219\u5316\u9879\u5728\u9762\u5bf9\u4e0d\u540c\u7684\u95ee\u9898\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u5f62\u5f0f\u3002\u6b63\u5219\u5316\u7684\u4f5c\u7528\u662f\u9009\u62e9\u7ecf\u9a8c\u98ce\u9669\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u540c\u65f6\u8f83\u5c0f\u7684\u6a21\u578b\u3002 \u6b63\u5219\u5316\u7b26\u5408\u5965\u5361\u59c6\u5243\u5200\u539f\u7406\uff0c \u5728\u6240\u6709\u53ef\u80fd\u9009\u62e9\u7684\u6a21\u578b\u4e2d\uff0c\u80fd\u591f\u5f88\u597d\u5730\u89e3\u91ca\u5df2\u77e5\u6570\u636e\u5e76\u4e14\u5341\u5206\u7b80\u5355\u624d\u662f\u6700\u597d\u7684\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u5e94\u8be5\u9009\u62e9\u7684\u6a21\u578b\u3002 \u4ece \u8d1d\u53f6\u65af\u4f30\u8ba1 \u7684\u89d2\u5ea6\u6765\u770b\uff0c \u6b63\u5219\u5316\u9879\u001b\u5bf9\u5e94\u4e8e\u6a21\u578b\u7684\u5148\u9a8c\u6982\u7387\u3002\u53ef\u4ee5\u5047\u8bbe\u590d\u6742\u7684\u6a21\u578b\u6709\u8f83\u5927\u7684\u5148\u9a8c\u6982\u7387\uff0c\u7b80\u5355\u7684\u6a21\u578b\u6709\u8f83\u5c0f\u7684\u5148\u9a8c\u6982\u7387\u3002 \u4ea4\u53c9\u9a8c\u8bc1 \u00b6 \u53e6\u4e00\u79cd\u5e38\u7528\u7684\u6a21\u578b\u9009\u62e9\u65b9\u6cd5\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u6837\u672c\u5145\u8db3\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u5c31\u662f\u968f\u673a\u5730\u5c06\u6570\u636e\u96c6\u5207\u6210\u4e09\u4efd\uff0c\u5206\u522b\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u8bad\u7ec3\u96c6\u7528\u6765\u8bad\u7ec3\u6a21\u578b\uff0c\u9a8c\u8bc1\u96c6\u7528\u4e8e\u6a21\u578b\u7684\u9009\u62e9\uff0c\u800c\u6d4b\u8bd5\u96c6\u7528\u4e8e\u6700\u7ec8\u5bf9\u5b66\u4e60\u65b9\u6cd5\u7684\u8bc4\u4f30\u3002\u5728\u5b66\u4e60\u5230\u7684\u4e0d\u540c\u590d\u6742\u5ea6\u7684\u6a21\u578b\u4e2d\uff0c\u9009\u62e9\u5bf9\u9a8c\u8bc1\u96c6\u6709\u6700\u5c0f\u9884\u6d4b\u8bef\u5dee\u7684\u6a21\u578b\u3002\u7531\u4e8e\u9a8c\u8bc1\u96c6\u6709\u8db3\u591f\u591a\u7684\u6570\u636e\uff0c\u7528\u5b83\u5bf9\u6a21\u578b\u8fdb\u884c\u9009\u62e9\u4e5f\u662f\u6700\u6709\u6548\u7684\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u8bb8\u591a\u5b9e\u9645\u95ee\u9898\u4e2d\uff0c\u6570\u636e\u662f\u4e0d\u5145\u8db3\u7684\uff0c\u4e3a\u4e86\u9009\u62e9\u597d\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u5f0f\uff0c\u57fa\u672c\u601d\u60f3\u662f \u91cd\u590d\u5229\u7528\u6570\u636e \uff1a\u628a\u7ed9\u5b9a\u7684\u6570\u636e\u8fdb\u884c\u5207\u5206\uff0c\u5c06\u5207\u5206\u7684\u6570\u636e\u96c6\u7ec4\u5408\u4e3a\u8bad\u7ec3\u96c6\u4e0e\u6d4b\u8bd5\u96c6\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u53cd\u590d\u5730\u8fdb\u884c\u8bad\u7ec3\u3001\u6d4b\u8bd5\u4ee5\u53ca\b\u6a21\u578b\u9009\u62e9\u3002 \u7b80\u5355\u4ea4\u53c9\u9a8c\u8bc1 \uff1a\u9996\u5148\u968f\u673a\u5730\u5c06\u5df1\u7ed9\u6570\u636e\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u53e6\u4e00\u90e8\u5206\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff1b\u7136\u540e\u7528\u8bad\u7ec3\u96c6\u5728\u5404\u79cd\u6761\u4ef6\u4e0b(\u4f8b\u5982\uff0c\u4e0d\u540c\u7684\u53c2\u6570\u4e2a\u6570)\u8bad\u7ec3\u6a21\u578b\uff0c\u4ece\u800c\u5f97\u5230\u4e0d\u540c\u7684\u6a21\u578b\uff1b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4ef7\u5404\u4e2a\u6a21\u578b\u7684\u6d4b\u8bd5\u8bef\u5dee\uff0c\u9009\u51fa\u6d4b\u8bd5\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b. k-\u6298\u4ea4\u53c9\u9a8c\u8bc1 (S-fold cross validation\uff09\uff1a\u9996\u5148\u968f\u673a\u5730\u5c06\u5df2\u7ed9\u6570\u636e\u5207\u5206\u4e3a {S} {S} \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5927\u5c0f\u76f8\u540c\u7684\u5b50\u96c6\uff1b\u7136\u540e\u5229\u7528 {S-1} {S-1} \u4e2a\u5b50\u96c6\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u5229\u7528\u4f59\u4e0b\u7684\u5b50\u96c6\u6d4b\u8bd5\u6a21\u578b\uff1b\u5c06\u8fd9\u4e00\u8fc7\u7a0b\u5bf9\u53ef\u80fd\u7684 {S} {S} \u79cd\u9009\u62e9\u91cd\u590d\u8fdb\u884c\uff1b\u6700\u540e\u9009\u51fa {S} {S} \u6b21\u8bc4\u6d4b\u4e2d\u5e73\u5747\u4fa7\u8bd5\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b. \u7559\u4e00\u6587\u53c9\u9a8c\u8bc1 (leave-one-out cross validation)\uff1a {k} {k} -\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u7279\u6b8a\u60c5\u5f62\u662f {k=N} {k=N} \uff0c {N} {N} \u662f\u7ed9\u5b9a\u6570\u636e\u96c6\u7684\u5bb9\u91cf\u3002 \u6cdb\u5316\u80fd\u529b \u00b6 \u6cdb\u5316\u8bef\u5dee \u00b6 \u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\u662f\u6307\u7531\u8be5\u5b66\u4e60\u5230\u7684\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u5b66\u4e60\u65b9\u6cd5\u672c\u8d28\u4e0a\u91cd\u8981\u7684\u6027\u8d28\u3002\u73b0\u5b9e\u4e2d\u91c7\u7528\u6700\u591a\u7684\u529e\u6cd5\u662f\u901a\u8fc7\u6d4b\u8bd5\u8bef\u5dee\u6765\u8bc4\u4ef7\u5b66\u4e60\u65b9\u6cd5\u7684\u7e41\u534e\u80fd\u529b\u3002\u4f46\u662f\u8fd9\u4f9d\u8d56\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u7531\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\u6709\u9650\uff0c\u5f88\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u53ef\u9760\u3002\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u4e0a\u5bf9\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u8fdb\u884c\u4e86\u5206\u6790\u3002 \u5b9a\u4e49 \b\uff1a\u5982\u679c\u5b66\u4e60\u5230\u7684\u6a21\u578b\u662f {\\hat{f}} {\\hat{f}} \uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u9884\u6d4b\u7684\u8bef\u5dee\u5373\u4e3a\u6cdb\u5316\u8bef\u5dee\uff1a {R_{exp}(\\hat{f}) = E_p[L(Y, \\hat{f}(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, \\hat{f}(X)) P(x, y)dxdy} {R_{exp}(\\hat{f}) = E_p[L(Y, \\hat{f}(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, \\hat{f}(X)) P(x, y)dxdy} \u6cdb\u5316\u8bef\u5dee\u53cd\u6620\u4e86\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u5982\u679c\u4e00\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6a21\u578b\u6bd4\u53e6\u4e00\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6a21\u578b\u5177\u6709\u66f4\u5c0f\u7684\u6cdb\u5316\u8bef\u5dee\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u5c31\u66f4\u6709\u6548\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6cdb\u5316\u8bef\u5dee\u5c31\u662f\u6240\u5b66\u4e60\u5230\u7684\u6a21\u578b\u7684\u671f\u671b\u98ce\u9669\u3002 \u6cdb\u5316\u8bef\u5dee\u4e0a\u754c \u00b6 \u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\u5206\u6790\u5f80\u5f80\u662f\u901a\u8fc7\u7814\u7a76\u6cdb\u5316\u8bef\u5dee\u7684\u6982\u7387\u4e0a\u754c\u8fdb\u884c\u7684\uff0c\u7b80\u79f0\u4e3a\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002\u5373\u901a\u8fc7\u6bd4\u8f83\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u6765\u6bd4\u8f83\u5b83\u4eec\u7684\u4f18\u52a3\u3002\u5177\u6709\u5982\u4e0b\u7684\u6027\u8d28\uff1a \u5f53\u6837\u672c\u5bb9\u91cf\u589e\u52a0\u65f6\uff0c\u6cdb\u5316\u4e0a\u754c\u8d8b\u4e8e {0} {0} \u3002 \u662f\u5047\u8bbe\u7a7a\u95f4\u5bb9\u91cf\u7684\u51fd\u6570\uff0c\u5047\u8bbe\u7a7a\u95f4\u5bb9\u91cf\u8d8a\u5927\uff0c\u6a21\u578b\u5c31\u8d8a\u96be\u5b66\uff0c\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u5c31\u8d8a\u5927\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\uff0c\u5206\u6790\u5982\u4e0b\uff1a \u6570\u636e\u96c6\u662f\u4ece\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X, Y)} {P(X, Y)} \u72ec\u7acb\u540c\u5206\u5e03\u4ea7\u751f\u7684\uff0c {X \\in R^n} {X \\in R^n} \uff0c {Y \\in \\{-1, +1\\}} {Y \\in \\{-1, +1\\}} \u3002\u5047\u8bbe\u7a7a\u95f4\u662f\u51fd\u6570\u7684\u6709\u9650\u96c6\u5408 {\\mathcal{F}} {\\mathcal{F}} \uff0c {d} {d} \u662f\u51fd\u6570\u4e2a\u6570\uff0c\u8bbe {f} {f} \u662f\u4ece {\\mathcal{F}} {\\mathcal{F}} \u4e2d\u9009\u53d6\u7684\u51fd\u6570\u3002\u635f\u5931\u51fd\u6570\u662f {0-1} {0-1} \u635f\u5931\uff0c\u5173\u4e8e {f} {f} \u7684\u671f\u671b\u98ce\u9669\u548c\u7ecf\u9a8c\u98ce\u9669\u5206\u522b\u662f\uff1a {R(f) = E[L(Y, f(X))]} {R(f) = E[L(Y, f(X))]} {\\hat{R}(f) = \\frac{1}{N} \\sum_{1}^{N} L(y_i, f(x_i))} {\\hat{R}(f) = \\frac{1}{N} \\sum_{1}^{N} L(y_i, f(x_i))} \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u51fd\u6570\u662f\uff1a {f_N = \\arg \\min_{f \\in \\mathcal{F}} \\hat{R}(f)} {f_N = \\arg \\min_{f \\in \\mathcal{F}} \\hat{R}(f)} \u4eba\u4eec\u66f4\u5173\u5fc3\u7684\u662f {f_N} {f_N} \u7684\u6cdb\u5316\u80fd\u529b\uff1a {R(f_N) = E[L(Y, f_N(X))]} {R(f_N) = E[L(Y, f_N(X))]} \u4e0b\u9762\u8ba8\u8bba\u4ece\u6709\u9650\u96c6\u5408 {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} \u4e2d\u4eba\u9009\u51fa\u7684\u51fd\u6570 {f} {f} \u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002 \u5bf9\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u5f53\u5047\u8bbe\u7a7a\u95f4\u662f\u6709\u9650\u4e2a\u51fd\u6570\u7684\u96c6\u5408 {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} \u65f6\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u51fd\u6570 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c\u81f3\u5c11\u4ee5\u6982\u7387 {1 - \\delta} {1 - \\delta} \uff0c\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u6210\u7acb\uff1a {R(f) \\le \\hat{R}(f) + \\epsilon(d,N,\\delta)} {R(f) \\le \\hat{R}(f) + \\epsilon(d,N,\\delta)} \u5176\u4e2d\uff0c {\\epsilon(d,N,\\delta) = \\sqrt{\\frac{1}{2N} \\Big(\\log d + \\log \\frac{1}{\\delta} \\Big)}} {\\epsilon(d,N,\\delta) = \\sqrt{\\frac{1}{2N} \\Big(\\log d + \\log \\frac{1}{\\delta} \\Big)}} \u4e0d\u7b49\u5f0f\u5de6\u8fb9\u662f\u6cdb\u5316\u8bef\u5dee\uff0c\u53f3\u8fb9\u5373\u4e3a\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002\u5728\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u4e2d\uff0c\u7b2c\u4e00\u9879\u662f\u8bad\u7ec3\u8bef\u5dee\uff0c\u8bad\u7ec3\u8bef\u5dee\u8d8a\u5c0f\uff0c\u6cdb\u5316\u8bef\u5dee\u4e5f\u8d8a\u5c0f\uff0c\u7b2c\u4e8c\u9879 {\\epsilon(d,N,\\delta)} {\\epsilon(d,N,\\delta)} \u662f {N} {N} \u7684\u5355\u8c03\u9012\u51cf\u51fd\u6570\uff0c\u5f53 {N} {N} \u8d8b\u4e8e\u65e0\u7a77\u662f\u8d8b\u4e8e {0} {0} \uff1b\u540c\u65f6\uff0c\u5b83\u4e5f\u662f {\\sqrt{\\log d}} {\\sqrt{\\log d}} \u9636\u7684\u51fd\u6570\uff0c\u5047\u8bbe\u7a7a\u95f4 {\\mathcal{F}} {\\mathcal{F}} \u5305\u542b\u7684\u51fd\u6570\u989d\u8d8a\u591a\uff0c\u5176\u503c\u4e5f\u8d8a\u5927\u3002 Hoeffding \u4e0d\u7b49\u5f0f\uff1a \u8bbe {S_n = \\sum_{i=1}^{N} X_i} {S_n = \\sum_{i=1}^{N} X_i} \u662f\u72ec\u7acb\u968f\u673a\u53d8\u91cf {X_1, X_2, \\cdots, X_n} {X_1, X_2, \\cdots, X_n} \u4e4b\u548c\uff0c {X_i \\in [a_i, b_i]} {X_i \\in [a_i, b_i]} \uff0c\u5219\u5bf9\u4efb\u610f\u7684 {t < 0} {t < 0} \uff0c\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u6210\u7acb\uff1a {P(S_n - ES_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(S_n - ES_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(ES_n - S_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(ES_n - S_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} \u5bf9\u4efb\u610f\u51fd\u6570 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c {\\hat{R}(f)} {\\hat{R}(f)} \u662f {N} {N} \u4e2a\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf {L(Y, f(X))} {L(Y, f(X))} \u7684\u6837\u672c\u5747\u503c\uff0c {R(f)} {R(f)} \u662f\u968f\u673a\u53d8\u91cf {L(Y, f(X))} {L(Y, f(X))} \u7684\u671f\u671b\u503c\uff0c\u5982\u679c\u635f\u5931\u51fd\u6570\u53d6\u503c\u4e8e\u533a\u95f4 {[0,1]} {[0,1]} \uff0c\u5373\u5bf9\u6240\u6709 {i} {i} \uff0c {[a_i, b_i] = [0,1]} {[a_i, b_i] = [0,1]} \uff0c\b\u5219\u6709\uff1a {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le \\exp(-2N\\epsilon^2)} {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le \\exp(-2N\\epsilon^2)} \u7531\u4e8e {\\mathcal{F} = \\{f_1, f_2, \\cdot, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdot, f_d\\}} \u662f\u4e00\u4e2a\u6709\u9650\u96c6\u5408\uff0c\u6545\uff1a {P(\\exists f \\in \\mathcal{F}: R(f) - \\hat{R}(f) \\ge \\epsilon) = P(\\bigcup_{f \\in \\mathcal{F}}) \\{R(f) - \\hat{R}(f) \\ge \\epsilon\\} \\le \\sum_{f \\in \\mathcal{F} }P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le d \\exp(-2N\\epsilon^2)} {P(\\exists f \\in \\mathcal{F}: R(f) - \\hat{R}(f) \\ge \\epsilon) = P(\\bigcup_{f \\in \\mathcal{F}}) \\{R(f) - \\hat{R}(f) \\ge \\epsilon\\} \\le \\sum_{f \\in \\mathcal{F} }P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le d \\exp(-2N\\epsilon^2)} \u6216\u8005\u7b49\u4ef7\u7684\uff0c\u5bf9\u4efb\u610f\u7684 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c\u6709\uff1a {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\ge 1 - d \\exp(-2N\\epsilon^2)} {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\ge 1 - d \\exp(-2N\\epsilon^2)} \u4ee4\uff1a {\\delta = d \\exp(-2N\\epsilon^2)} {\\delta = d \\exp(-2N\\epsilon^2)} \u5219\uff1a {P(R(f) < \\hat{R}(f) + \\epsilon) \\ge 1 - \\delta} {P(R(f) < \\hat{R}(f) + \\epsilon) \\ge 1 - \\delta} \u5219\u81f3\u5c11\u4ee5\u6982\u7387 {1 - \\delta} {1 - \\delta} \u6709 {R(f) < \\hat{R}(f) + \\epsilon} {R(f) < \\hat{R}(f) + \\epsilon} \u3002 \u4ece\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u53ef\u77e5\uff0c {R(f_N) \\le \\hat{R}(f_N) + \\epsilon(d, N, \\delta)} {R(f_N) \\le \\hat{R}(f_N) + \\epsilon(d, N, \\delta)} \u8bad\u7ec3\u8bef\u5dee\u8d8a\u5c0f\u7684\u6a21\u578b\uff0c\u5176\u6cdb\u5316\u8bef\u5dee\u4e5f\u4f1a\u5c0f\u3002 \u751f\u6210\u6a21\u578b\u4e0e\u5224\u522b\u6a21\u578b \u00b6 \u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u53c8\u53ef\u4ee5\u5206\u4e3a\u751f\u6210\u65b9\u6cd5(generative approach)\u548c\u5224\u522b\u65b9\u6cd5(discriminative approach)\u3002\u6240\u5b66\u5230\u7684\u6a21\u578b\u5206\u522b\u79f0\u4e3a\u751f\u6210\u6a21\u578b(geuemtive model)\u548c\u5224\u522b\u6a21\u578b(discriminative model)\u3002\u751f\u6210\u65b9\u6cd5\u7531\u6570\u636e\u5b66\u4e60\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u7136\u540e\u6c42\u51fa\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u4f5c\u4e3a\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u5373\u751f\u6210\u6a21\u578b\u3002 {P(Y|X) = \\frac{P(X, Y)}{P(X)}} {P(Y|X) = \\frac{P(X, Y)}{P(X)}} \u8fd9\u6837\u7684\u65b9\u6cd5\u4e4b\u6240\u4ee5\u79f0\u4e3a\u751f\u6210\u65b9\u6cd5\uff0c\u662f\u56e0\u4e3a\u6a21\u578b\u8868\u793a\u4e86\u7ed9\u5b9a\u8f93\u5165X\u4ea7\u751f\u8f93\u51faY\u7684\u751f\u6210\u5173\u7cfb.\u5178\u578b\u7684\u751f\u6210\u6a21\u578b\u6709:\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u548c\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u3002 \u5224\u522b\u65b9\u6cd5\u7531\u6570\u636e\u76f4\u63a5\u5b66\u4e60\u51b3\u7b56\u51fd\u6570 {f(X)} {f(X)} \u6216\u8005\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u4f5c\u4e3a\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u5373\u5224\u522b\u6a21\u578b.\u5224\u522b\u65b9\u6cd5\u5173\u5fc3\u7684\u662f\u5bf9\u7ed9\u5b9a\u7684\u8f93\u5165 {X} {X} \uff0c\u5e94\u8be5\u9884\u6d4b\u4ec0\u4e48\u6837\u7684\u8f93\u51fa {Y} {Y} \u3002\u5178\u578b\u7684\u5224\u522b\u6a21\u578b\u5305\u62eck\u8fd1\u90bb\u6cd5\u3001\u611f\u77e5\u673a\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8c1b\u56de\u5f52\u6a21\u578b\u3001\u6700\u5927\u5ae1\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u548c\u6761\u4ef6\u968f\u673a\u573a\u7b49\u3002 \u7ed9\u5b9a\u8f93\u5165 {X} {X} ,\u751f\u6210\u6a21\u578b\u4e0d\u80fd\u76f4\u63a5\u9884\u6d4b\u51fa\u8f93\u51fa\u7684 {y} {y} \uff0c\u9700\u8981\u8ba1\u7b97\u4e4b\u540e\uff0c\u518d\u6bd4\u8f83\uff08\u6216\u8005\u6c42\u51fa\u7684\u662f\u5404\u79cd\u8f93\u51fa\u53ef\u80fd\u6027\u7684\u6982\u7387\u503c\uff0c\u6700\u5927\u4f5c\u4e3a\u6700\u7ec8\u7684\u6c42\u89e3\u7ed3\u679c\uff09\uff0c\u800c\u5224\u522b\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u7ed9\u51fa\u9884\u6d4b\u7ed3\u679c {y} {y} ,\uff08\u5229\u7528\u5224\u65ad\u89c4\u5219\u6216\u8005\u65b9\u6cd5\uff09\u3002 \u751f\u6210\u65b9\u6cd5\u7684\u7279\u70b9\uff1a \u751f\u6210\u65b9\u6cd5\u53ef\u4ee5\u8fd8\u539f\u51fa\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u800c\u5224\u522b\u65b9\u6cd5\u5219\u4e0d\u80fd\uff1b \u751f\u6210\u65b9\u6cd5\u7684\u5b66\u4e60\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff0c\u5373\u5f53\u6837\u672c\u5bb9\u91cf\u589e\u52a0\u7684\u65f6\u5019\uff0c\u5b66\u5230\u7684\u6a21\u578b\u53ef\u4ee5\u66f4\u5feb\u5730\u6536\u655b\u4e8e\u771f\u5b9e\u6a21\u578b\uff1b \u5f53\u5b58\u5728\u9690\u53d8\u91cf\u65f6\uff0c\u4ecd\u53ef\u4ee5\u7528\u751f\u6210\u65b9\u6cd5\u5b66\u4e60\uff0c\u6b64\u65f6\u5224\u522b\u65b9\u6cd5\u5c31\u4e0d\u80fd\u7528\u3002 \u5224\u522b\u65b9\u6cd5\u7684\u7279\u70b9\uff1a \u76f4\u63a5\u5b66\u4e60\u7684\u662f\u6761\u4ef6\u6982\u7387 {P(Y|X)} {P(Y|X)} \u6216\u51b3\u7b56\u51fd\u6570 {f(X)} {f(X)} \uff0c\u76f4\u63a5\u9762\u5bf9\u9884\u6d4b\uff0c\u5f80\u5f80\u5b66\u4e60\u7684\u51c6\u786e\u7387\u66f4\u9ad8\uff1b \u7531\u4e8e\u76f4\u63a5\u5b66\u4e60 {P(Y|X)} {P(Y|X)} \u6216 {f(X)} {f(X)} \uff0c\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5404\u79cd\u7a0b\u5ea6\u4e0a\u7684\u62bd\u8c61\u3001\u5b9a\u4e49\u7279\u5f81\u5e76\u4f7f\u7528\u7279\u5f81\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b80\u5316\u5b66\u4e60\u95ee\u9898\u3002 \u5206\u7c7b\u95ee\u9898 \u00b6 TP(True Positive)\u2014\u2014\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570(d); FN(False Negative)\u2014\u2014\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570\u00a9; FP(False Positive)\u2014\u2014\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570(b): TN(True Negative)\u2014\u2014\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570(a). \u7cbe\u786e\u7387\uff1a {P(Positive)=\\frac{TP}{TP+FP}=\\frac{d}{d+b}} {P(Positive)=\\frac{TP}{TP+FP}=\\frac{d}{d+b}} \u53ec\u56de\u7387\uff1a {R(Positive)=\\frac{TP}{TP+FN}= \\frac{d}{d+c)}} {R(Positive)=\\frac{TP}{TP+FN}= \\frac{d}{d+c)}} {F1} {F1} \uff08\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5747\u503c\uff09\uff1a {F_1(Positive)= \\frac{2*P*R}{P+R}} {F_1(Positive)= \\frac{2*P*R}{P+R}} \u540c\u7406\u53ef\u4ee5\u6c42\u5f97 {P(Negative)} {P(Negative)} \u3001 {R(Negative)} {R(Negative)} \u3001 {F1(Negative)} {F1(Negative)} \u8fd9\u4e09\u79cd\u5ea6\u91cf\u4e00\u822c\u7528\u4e8e\u68c0\u6d4b\u6a21\u578b\u5bf9\u6bcf\u4e00\u7c7b\u522b\u7684\u68c0\u6d4b\u6216\u9884\u6d4b\u80fd\u529b\u3002 \u5bf9\u6a21\u578b\u6574\u4f53\u8bc4\u4f30\u5982\u6709\u51c6\u786e\u7387 {AC(accuracy)} {AC(accuracy)} \uff0c {AC= \\frac{a+d}{a+b+c+d}} {AC= \\frac{a+d}{a+b+c+d}} (\u5bf9\u89d2\u7ebf\u5143\u7d20\uff0c\u6b63\u7c7b\u548c\u8d1f\u7c7b\u90fd\u9884\u6d4b\u6b63\u786e\u7684\u6837\u672c\u6570)/(\u6837\u672c\u603b\u6570) \u8fd8\u6709 {ROC} {ROC} \u66f2\u7ebf\u7b49\u3002 \u6807\u6ce8\u95ee\u9898 \u00b6 \u6807\u6ce8\uff08tagging\uff09\u4e5f\u662f\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u6807\u6ce8\u95ee\u9898\u662f\u5206\u4e86\u95ee\u9898\u7684\u4e00\u4e2a\u63a8\u5e7f\uff0c\u6807\u51c6\u95ee\u9898\u53c8\u662f\u66f4\u590d\u6742\u7684\u7ed3\u6784\u9884\u6d4b\u95ee\u9898\u7684\u7b80\u5355\u5f62\u5f0f\u3002\u6807\u51c6\u95ee\u9898\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u89c2\u6d4b\u5e8f\u5217\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6807\u8bb0\u7cfb\u5217\u6216\u001b\u72b6\u6001\u5e8f\u5217\u3002\u6807\u6ce8\u95ee\u9898\u7684\u76ee\u6807\u5728\u4e8e\u5b66\u4e60\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u5b83\u80fd\u591f\u5bf9\u89c2\u6d4b\u5e8f\u5217\u7ed9\u51fa\u6807\u8bb0\u5e8f\u5217\u4f5c\u4e3a\u9884\u6d4b\u3002\u7279\u5f81\u5e8f\u5217\u7684\u957f\u5ea6\u8981\u8fdc\u5c0f\u4e8e\u7279\u5f81\u6837\u672c\u7684\u4e2a\u6570\u3002 \u8bc4\u4ef7\u6807\u6ce8\u6a21\u578b\u7684\u6307\u6807\u4e0e\u8bc4\u4ef7\u5206\u7c7b\u6a21\u578b\u7684\u6307\u6807\u4e00\u6837\uff0c\u5e38\u7528\u7684\u6709\u6807\u6ce8\u51c6\u786e\u7387\u3001\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\uff0c\u5b9a\u4e49\u4e0e\u5206\u7c7b\u6a21\u578b\u76f8\u540c\u3002\u4f46\u662f\uff0c\u6807\u6ce8\u95ee\u9898\u4e0e\u5206\u7c7b\u95ee\u9898\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\uff0c\u6807\u6ce8\u95ee\u9898\u7684\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u4e00\u4e2a\u6807\u7b7e\u5411\u91cf\uff0c\u5373\u5bf9\u6bcf\u4e00\u4e2a\u7279\u5f81\u90fd\u8fdb\u884c\u5c5e\u6027\u7684\u5224\u65ad\u3002 \u6807\u6ce8\u5e38\u7528\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6709\uff1a\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u3001\u6761\u4ef6\u968f\u673a\u573a\u3002 \u56de\u5f52\u95ee\u9898 \u00b6 \u56de\u5f52\u7528\u4e8e\u9884\u6d4b\u8f93\u5165\u53d8\u91cf\uff08\u81ea\u53d8\u91cf\uff09\u548c\u8f93\u51fa\u53d8\u91cf\uff08\u56e0\u53d8\u91cf\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7279\u522b\u662f\u5f53\u8f93\u5165\u53d8\u91cf\u7684\u503c\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8f93\u51fa\u53d8\u91cf\u7684\u503c\u968f\u4e4b\u53d1\u751f\u7684\u53d8\u5316\u3002\u56de\u5f52\u6a21\u578b\u6b63\u662f\u8868\u793a\u4ece\u8f93\u5165\u53d8\u91cf\u5230\u8f93\u51fa\u53d8\u91cf\u4e4b\u95f4\u6620\u5c04\u7684\u51fd\u6570\u3002\u56de\u5f52\u95ee\u9898\u7684\u5b66\u4e60\u7b49\u4ef7\u4e8e\u51fd\u6570\u62df\u5408\uff1a\u9009\u62e9\u4e00\u6761\u51fd\u6570\u66f2\u7ebf\u4f7f\u5176\u5f88\u597d\u5730\u62df\u5408\u5df2\u77e5\u6570\u636e\u4e14\u5f88\u597d\u5730\u9884\u6d4b\u672a\u77e5\u6570\u636e\u3002 \u56de\u5f52\u95ee\u9898\u6309\u7167\u8f93\u5165\u53d8\u91cf\u7684\u4e2a\u6570\uff0c\u5206\u4e3a\u4e00\u5143\u56de\u5f52\u548c\u591a\u5143\u56de\u5f52\uff1b\u6309\u7167\u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u7c7b\u578b\u5373\u6a21\u578b\u7684\u7c7b\u578b\uff0c\u5206\u4e3a\u7ebf\u6027\u56de\u5f52\u548c\u975e\u7ebf\u6027\u56de\u5f52\u3002 \u56de\u5f52\u5b66\u4e60\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u635f\u5931\u51fd\u6570\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u56de\u5f52\u95ee\u9898\u53ef\u4ee5\u7531\u8457\u540d\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08least squares\uff09\u6c42\u89e3\u3002 \u672c\u7ae0\u6982\u8981 \u00b6 \u7edf\u8ba1\u5b66\u4e60\u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u7684\u4e00\u95e8\u5b66\u79d1\u3002\u7edf\u8ba1\u5b66\u4e60\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20 \u2014\u2014\b\u2014\u2014 \u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\uff0c\u5bf9\u7406\u89e3\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u8d77\u5230\u4e86\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 \u672c\u4e66\u4e3b\u8981\u8ba8\u8bba\u76d1\u7763\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a\u4ece\u7ed9\u5b9a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff0c\u800c\u4e14\u5047\u8bbe\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u5047\u8bbe\u7a7a\u95f4\uff0c\u5e94\u7528\u67d0\u4e00\u4e2a\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u7ed9\u5b9a\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u77e5\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u8bc4\u4ef7\u6807\u51c6\u610f\u4e49\u4e0b\u6709\u6700\u51c6\u786e\u7684\u9884\u6d4b\u3002 \u7edf\u8ba1\u5b66\u4e60\u4e2d\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u6216\u8005\u8bf4\u63d0\u9ad8\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u662f\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002\u5982\u679c\u53ea\u8003\u8651\u51cf\u5c11\u8bad\u7ec3\u8bef\u5dee\uff0c\u5c31\u53ef\u80fd\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002\u6a21\u578b\u9009\u62e9\u7684\u65b9\u6cd5\u6709\u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b66\u4e60\u65b9\u6cd5\u6cdb\u5316\u80fd\u529b\u7684\u5206\u6790\u662f\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u7814\u7a76\u7684\u91cd\u8981\u8bfe\u9898\u3002 \u5206\u7c7b\u95ee\u9898\u3001\u6807\u6ce8\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u90fd\u662f\u76d1\u7763\u5b66\u4e60\u7684\u91cd\u8981\u4e2a\u95ee\u9898\u3002\u672c\u4e66\u8f83\u5c11\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u611f\u77e5\u673a\u3001 {k} {k} \u4e34\u8fd1\u6cd5\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8482\u56de\u5f52\u4e8e\u6700\u5927\u71b5\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u3001 {EM} {EM} \u7b97\u6cd5\u3001\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u548c\u6761\u4ef6\u968f\u673a\u573a\u3002\u8fd9\u4e9b\u65b9\u6cd5\u662f\u4e3b\u8981\u7684\u5206\u7c7b\u3001\u6807\u6ce8\u4ee5\u53ca\u56de\u5f52\u65b9\u6cd5\u3002\u4ed6\u4eec\u53c8\u53ef\u4ee5\u5f52\u7c7b\u4e3a\u751f\u6210\u65b9\u6cd5\u4e0e\u5224\u522b\u65b9\u6cd5\u3002 \u4e60\u9898 \u00b6 \u8bf4\u660e\u4f2f\u52aa\u5229\u6a21\u578b\u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4ee5\u53ca\u8d1d\u53f6\u65af\u4f30\u8ba1\u4e2d\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\u3002\u4f2f\u52aa\u5229\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u53d6\u503c\u4e3a {0} {0} \u4e0e {1} {1} \u7684\u968f\u673a\u53d8\u91cf\u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002\u5047\u8bbe\u89c2\u6d4b\u5230\u4f2f\u52aa\u5229\u6a21\u578b {n} {n} \u6b21\u72ec\u7acb\u7684\u6570\u636e\u751f\u6210\u7ed3\u679c\uff0c\u5176\u4e2d {k} {k} \u6b21\u7684\u7ed3\u679c\u4e3a {1} {1} \uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6216\u8d1d\u53f6\u65af\u63a8\u7406\u6765\u4f30\u8ba1\u7ed3\u679c\u4e3a {1} {1} \u7684\u6982\u7387\u3002 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u7684\u4e09\u8981\u7d20\u662f\u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\u3002 \u4f2f\u52aa\u5229\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u53d6\u503c\u4e3a {0} {0} \u4e0e {1} {1} \u7684\u968f\u673a\u53d8\u91cf\u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002 \u7edf\u8ba1\u5b66\u5206\u4e3a\u4e24\u6d3e\uff1a\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u548c\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u3002\u4e24\u8005\u7684\u4e0d\u540c\u4e3b\u8981\u662f\uff0c\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u8ba4\u4e3a\u6a21\u578b\u5df2\u5b9a\uff0c\u53c2\u6570\u672a\u77e5\uff0c\u53c2\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u53ea\u662f\u8fd8\u4e0d\u77e5\u9053\uff1b\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u662f\u901a\u8fc7\u89c2\u5bdf\u5230\u7684\u73b0\u8c61\u5bf9\u6982\u7387\u5206\u5e03\u4e2d\u7684\u4e3b\u89c2\u8ba4\u5b9a\u4e0d\u65ad\u8fdb\u884c\u4fee\u6b63\u3002 \u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u548c\u8d1d\u53f6\u65af\u4f30\u8ba1\u7684\u6a21\u578b\u90fd\u662f\u4f2f\u52aa\u5229\u6a21\u578b\u4e5f\u5c31\u662f\u6761\u4ef6\u6982\u7387\u6a21\u578b\uff1b\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u7528\u7684\u662f\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u7684\u7b56\u7565\uff0c\u8d1d\u53f6\u65af\u4f30\u8ba1\u7528\u7684\u662f\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u7684\u7b56\u7565\uff1b\u4e3a\u4e86\u5f97\u5230\u4f7f\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u7684\u53c2\u6570\u503c\uff0c\u4f7f\u7528\u7684\u7b97\u6cd5\u90fd\u662f\u5bf9\u7ecf\u9a8c\u98ce\u9669\u6c42\u5bfc\uff0c\u4f7f\u5bfc\u6570\u4e3a {0} {0} \u3002 \u5b9a\u4e49\u968f\u673a\u53d8\u91cf {A} {A} \u4e3a\u4e00\u6b21\u4f2f\u52aa\u5229\u8bd5\u9a8c\u7684\u7ed3\u679c\uff0c {A} {A} \u7684\u53d6\u503c\u4e3a {\\{0,1\\}} {\\{0,1\\}} \uff0c\u6982\u7387\u5206\u5e03\u4e3a {P(A)} {P(A)} \uff1a {P(A=1)=\\theta \\ , \\ P(A=0)=1-\\theta} {P(A=1)=\\theta \\ , \\ P(A=0)=1-\\theta} \u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff1a {L(\\theta)=\\prod_{i=1}^{n}P(A_i)=\\theta^k(1-\\theta)^{n-k}} {L(\\theta)=\\prod_{i=1}^{n}P(A_i)=\\theta^k(1-\\theta)^{n-k}} {A_i} {A_i} \u4ee3\u8868\u7b2c {i} {i} \u6b21\u968f\u673a\u8bd5\u9a8c\u3002 {\\theta=arg\\max \\limits_\\theta L(\\theta)=\\frac{k}{n}} {\\theta=arg\\max \\limits_\\theta L(\\theta)=\\frac{k}{n}} {P(\\theta|A_1,A_2,...,A_n)=\\frac{P(A_1,A_2,...A_n|\\theta)\\pi(\\theta)}{P(A_1,A_2,...,A_n)}} {P(\\theta|A_1,A_2,...,A_n)=\\frac{P(A_1,A_2,...A_n|\\theta)\\pi(\\theta)}{P(A_1,A_2,...,A_n)}} \u6839\u636e\u89c2\u5bdf\u5230\u7684\u7ed3\u679c\u4fee\u6b63 {\\theta} {\\theta} \uff0c\u4e5f\u5c31\u662f\u5047\u8bbe {\\theta} {\\theta} \u662f\u968f\u673a\u53d8\u91cf\uff0c\u03b8\u670d\u4ece\u03b2\u5206\u5e03\uff0c\u6709\u5f88\u591a\u4e2a\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u6211\u4eec\u8981\u53d6\u7684\u503c\u65f6\u5728\u5df2\u77e5\u89c2\u5bdf\u7ed3\u679c\u7684\u6761\u4ef6\u4e0b\u4f7f\u03b8\u51fa\u73b0\u6982\u7387\u6700\u5927\u7684\u503c\u3002\u4e0a\u5f0f\u5206\u6bcd\u662f\u4e0d\u53d8\u7684\uff0c\u6c42\u5206\u5b50\u6700\u5927\u5c31\u53ef\u4ee5\u3002 {\\theta = arg\\max \\limits_\\theta {P(A_1,A_2,...A_n|\\theta)P(\\theta)} = arg\\max \\limits_\\theta {\\prod_{i=1}^{n}P(A_i|\\theta)P(\\theta)} =arg \\max \\limits_\\theta {\\theta^k(1-\\theta)^{n-k}\\theta^{a-1}(1-\\theta)^{b-1}}=\\frac{k+(a-1)}{n+(a-1)+(b-1)}} {\\theta = arg\\max \\limits_\\theta {P(A_1,A_2,...A_n|\\theta)P(\\theta)} = arg\\max \\limits_\\theta {\\prod_{i=1}^{n}P(A_i|\\theta)P(\\theta)} =arg \\max \\limits_\\theta {\\theta^k(1-\\theta)^{n-k}\\theta^{a-1}(1-\\theta)^{b-1}}=\\frac{k+(a-1)}{n+(a-1)+(b-1)}} \u901a\u8fc7\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u63a8\u5bfc\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002\u8bc1\u660e\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\uff0c\u5f53\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u7b49\u4ef7\u4e8e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u6761\u4ef6\u6982\u7387\u5206\u5e03\u6a21\u578b\u4e0b\uff0c\u5f53\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\u4e3a\uff1a {\\min \\frac{1}{N} -\\log P(y_i|x_i;\\theta)} {\\min \\frac{1}{N} -\\log P(y_i|x_i;\\theta)} \u5176\u4e2d\uff0c {\\theta \\in \\mathbb{R^n}} {\\theta \\in \\mathbb{R^n}} \u8868\u793a\u6a21\u578b\u53c2\u6570\u3002 \u7531\u7ecf\u9a8c\u5316\u98ce\u9669\u6700\u5c0f\u5316\uff0c\u6709\uff1a {\\hat{\\theta}_{ERM} = \\arg \\min_{\\theta \\in \\mathbb{R^n}} \\frac{1}{N} \\sum_{i=1}^{N} -\\log P(y_i|x_i;\\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_i|x_i;\\theta)} {\\hat{\\theta}_{ERM} = \\arg \\min_{\\theta \\in \\mathbb{R^n}} \\frac{1}{N} \\sum_{i=1}^{N} -\\log P(y_i|x_i;\\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_i|x_i;\\theta)} \u800c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a {\\max P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) } {\\max P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) } \u5047\u8bbe\u6837\u672c\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u5219\u6709\uff1a {P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\frac{P(y_1, y_2, \\cdots, y_N,x_1, x_2, \\cdots, x_N; \\theta)}{P(x_1, x_2, \\cdots, x_N; \\theta)} = \\frac{\\prod_{i=1}^{N} P(y_i, x_i;\\theta)}{\\prod_{i=1}^{N} P(x_i;\\theta)} = \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} {P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\frac{P(y_1, y_2, \\cdots, y_N,x_1, x_2, \\cdots, x_N; \\theta)}{P(x_1, x_2, \\cdots, x_N; \\theta)} = \\frac{\\prod_{i=1}^{N} P(y_i, x_i;\\theta)}{\\prod_{i=1}^{N} P(x_i;\\theta)} = \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} \u4ece\u800c\uff0c {\\hat{\\theta}_{ML} = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} {\\hat{\\theta}_{ML} = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} \\prod_{i=1}^{N} P(y_i|x_i;\\theta)}","title":"009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_1","text":"\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\uff1a\u6a21\u578b\u3001\u7b56\u7565\u548c\u7b97\u6cd5\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_2","text":"\u7edf\u8ba1\u5b66\u4e60 \u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\u7684\u4e00\u95e8\u79d1\u5b66\uff0c\u7edf\u8ba1\u5b66\u4e60\u4e5f\u79f0\u4e3a\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u7279\u70b9\uff1a \u7edf\u8ba1\u5b66\u4e60\u4ee5\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u4e3a\u5e73\u53f0\uff0c\u662f\u5efa\u7acb\u5728\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u4e0a\u7684\uff1b \u7edf\u8ba1\u5b66\u4e60\u4ee5\u6570\u636e\u4e3a\u7814\u7a76\u5bf9\u8c61\uff0c\u662f\u6570\u636e\u9a71\u52a8\u7684\u5b66\u79d1\uff1b \u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff1b \u7edf\u8ba1\u5b66\u4e60\u4ee5\u65b9\u6cd5\u4e3a\u4e2d\u5fc3\uff0c\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6784\u5efa\u6a21\u578b\u5e76\u5e94\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff1b \u7edf\u8ba1\u5b66\u4e60\u662f\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u4fe1\u606f\u8bba\u3001\u8ba1\u7b97\u7406\u8bba\u3001\u6700\u4f18\u5316\u53ca\u8ba1\u7b97\u673a\u7b49\u591a\u4e2a\u9886\u57df\u7684\u4ea4\u53c9\u5b66\u79d1\uff0c\u5e76\u4e14\u5728\u53d1\u5c55\u4e2d\u9010\u6b65\u5f62\u6210\u72ec\u81ea\u7684\u7406\u8bba\u4f53\u7cfb\u4e0e\u65b9\u6cd5\u8bba\u3002 \u5b66\u4e60 \uff1a\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u80fd\u591f\u901a\u8fc7\u6267\u884c\u67d0\u4e2a\u8fc7\u7a0b\u6539\u8fdb\u5b83\u7684\u6027\u80fd\uff0c\u8fd9\u5c31\u662f\u5b66\u4e60\u3002","title":"\u7edf\u8ba1\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_3","text":"\u7edf\u8ba1\u5b66\u4e60\u7684\u5bf9\u8c61\u662f \u6570\u636e \u3002\u5b83\u4ece\u6570\u636e\u51fa\u53d1\uff0c\u63d0\u53d6\u6570\u636e\u7684\u7279\u5f81\uff0c\u62bd\u8c61\u51fa\u6570\u636e\u7684\u6a21\u578b\uff0c\u53d1\u73b0\u6570\u636e\u4e2d\u7684\u77e5\u8bc6\uff0c\u53c8\u56de\u5230\u5bf9\u6570\u636e\u7684\u5206\u6790\u4e0e\u9884\u6d4b\u4e2d\u53bb\u3002\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u5c31\u662f\u7279\u5f81\uff0c\u800c\u7279\u5f81\u662f\u6700\u540e\u9700\u8981\u8f93\u5165\u5230\u6a21\u578b\u4e2d\u8fdb\u884c\u8bad\u7ec3\u7684\u591a\u7ef4\u6570\u636e\u5411\u91cf\uff0c\u5b83\u662f\u6765\u81ea\u4e8e\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e(\u5982\u6570\u5b57\u3001\u6587\u672c\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49)\u8f6c\u6362\uff0c\u8fd9\u4e2a\u8f6c\u6362\u7684\u8fc7\u7a0b\u5c31\u662f\u673a\u5668\u5b66\u4e60\u4e0e\u6570\u636e\u6316\u6398\u9886\u57df\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6b65\u9aa4:\u201c\u7279\u5f81\u5de5\u7a0b\u201d\u3002 \u7edf\u8ba1\u5b66\u4e60\u5173\u4e8e\u6570\u636e\u7684\u57fa\u672c\u5047\u8bbe\u662f\u540c\u7c7b\u6570\u636e\u5177\u6709\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\u6027\uff0c\u8fd9\u662f\u7edf\u8ba1\u5b66\u4e60\u7684\u524d\u63d0\u3002\u5728\u7edf\u8ba1\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u53d8\u91cf\u6216\u53d8\u91cf\u7ec4\u8868\u793a\u6570\u636e\u3002\u6570\u636e\u5206\u4e3a\u7531\u8fde\u7eed\u53d8\u91cf\u548c\u79bb\u6563\u53d8\u91cf\u8868\u793a\u7684\u5f62\u5f0f\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u5bf9\u8c61"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_4","text":"\u7edf\u8ba1\u5b66\u4e60\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\uff0c\u7279\u522b\u662f\u5bf9 \u672a\u77e5 \u65b0\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u4e0e\u5206\u6790\u3002 \u5bf9\u6570\u636e\u7684\u9884\u6d4b\u4e0e\u5206\u6790\u662f\u901a\u8fc7\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5b9e\u73b0\u7684\u3002\u7edf\u8ba1\u5b66\u4e60\u603b\u7684\u76ee\u7684\u5c31\u662f\u8003\u8651\u5b66\u4e60\u4ec0\u4e48\u6837\u7684\u6a21\u578b\u548c\u5982\u4f55\u5b66\u4e60\u6a21\u578b\uff0c\u4ee5\u4f7f\u6a21\u578b\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u51c6\u786e\u7684\u9884\u6d4b\u4e0e\u5206\u6790\uff0c\u540c\u6837\u4e5f\u8981\u8003\u8651\u5c3d\u53ef\u80fd\u5730\u63d0\u9ad8\u5b66\u4e60\u6548\u7387\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_5","text":"\u76d1\u7763\u5b66\u4e60\uff0c\u975e\u76d1\u7763\u5b66\u4e60\uff0c\u534a\u76d1\u7763\u5b66\u4e60\uff0c\u5f3a\u5316\u5b66\u4e60\u7b49\u7ec4\u6210\u3002 \u4ece\u7ed9\u5b9a\u7684\u3001\u6709\u9650\u7684\u3001\u7528\u4e8e\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f \u72ec\u7acb\u540c\u5206\u5e03 \u4ea7\u751f\u7684\uff1b\u5e76\u4e14\u5047\u8bbe\u8981\u5b66\u4e60\u7684\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u79f0\u4e3a \u5047\u8bbe\u7a7a\u95f4 \uff1b\u5e94\u7528\u67d0\u4e2a\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u77e5\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u7684\u8bc4\u4ef7\u51c6\u5219\u4e0b\u6709\u6700\u4f18\u7684\u9884\u6d4b\uff1b\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531\u7b97\u6cd5\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\u3001\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\u4ee5\u53ca\u6a21\u578b\u5b66\u4e60\u7684\u7b97\u6cd5\uff0c\u7edf\u79f0\u5176\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u7684\u4e09\u8981\u7d20\uff1a\u7b80\u79f0\u4e3a \u6a21\u578b \u3001 \u7b56\u7565 \u548c \u7b97\u6cd5 \u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u5f97\u5230\u4e00\u4e2a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\uff1b \u786e\u5b9a\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\uff0c\u5373\u5b66\u4e60\u6a21\u578b\u7684\u96c6\u5408\uff1b \u786e\u5b9a\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\uff0c\u5373\u5b66\u4e60\u7684\u7b56\u7565\uff1b \u5b9e\u73b0\u6c42\u89e3\u6700\u4f18\u6a21\u578b\u7684\u7b97\u6cd5\uff0c\u5373\u5b66\u4e60\u7684\u7b97\u6cd5\uff1b \u901a\u8fc7\u5b66\u4e60\u65b9\u6cd5\u9009\u62e9\u6700\u4f18\u6a21\u578b\uff1b \u901a\u8fc7\u5b66\u4e60\u7684\u6700\u4f18\u6a21\u578b\u5bf9\u65b0\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u548c\u5206\u6790\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u65b9\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_6","text":"\u7814\u7a76\u5206\u4e3a\u65b9\u6cd5\u3001\u7406\u8bba\u548c\u5e94\u7528\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u7814\u7a76"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_7","text":"\u7edf\u8ba1\u5b66\u4e60\u662f\u5904\u7406\u6d77\u91cf\u6570\u636e\u7684\u6709\u6548\u65b9\u6cd5\u3002 \u7edf\u8ba1\u5b66\u4e60\u662f\u8ba1\u7b97\u673a\u667a\u80fd\u5316\u7684\u6709\u6548\u624b\u6bb5\u3002 \u7edf\u8ba1\u5b66\u4e60\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u53d1\u5c55\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff08\u5c5e\u4e8e\u7cfb\u7edf\u3001\u8ba1\u7b97\u548c\u4fe1\u606f\u4e09\u8005\u4e2d\u7684\u4fe1\u606f\uff09\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u91cd\u8981\u6027"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_8","text":"\u76d1\u7763\u5b66\u4e60\u7684\u4efb\u52a1\u662f\u5b66\u4e60\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u8f93\u5165\uff0c\u5bf9\u5176\u76f8\u5e94\u7684\u8f93\u51fa\u4f5c\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\u3002","title":"\u76d1\u7763\u5b66\u4e60"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_9","text":"\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u53d6\u503c\u7684\u96c6\u5408\u5206\u522b\u79f0\u4e3a \u8f93\u5165\u7a7a\u95f4 \u4e0e \u8f93\u51fa\u7a7a\u95f4 \u3002\u6bcf\u4e2a\u5177\u4f53\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u901a\u5e38\u7531\u7279\u5f81\u5411\u91cf\u8868\u793a\u3002\u6240\u6709\u7279\u5f81\u5411\u91cf\u5b58\u5728\u7684\u7a7a\u95f4\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4\u3002 \u5728\u76d1\u7763\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u8f93\u5165\u4e0e\u8f93\u51fa\u770b\u4f5c\u662f\u5b9a\u4e49\u5728\u8f93\u5165\uff08\u7279\u5f81\uff09\u7a7a\u95f4\u4e0e\u8f93\u51fa\u7a7a\u95f4\u4e0a\u7684\u968f\u673a\u53d6\u503c\u3002\u76d1\u7763\u5b66\u4e60\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u4e2d\u5b66\u4e60\u6a21\u578b\uff0c\u5bf9\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u3002 \u4e0d\u540c\u7684\u9884\u6d4b\u4efb\u52a1\u7ed9\u4e88\u4e0d\u540c\u7684\u540d\u79f0\uff1a \u8f93\u5165\u53d8\u91cf\u4e0e\u8f93\u51fa\u53d8\u91cf\u5747\u4e3a\u8fde\u7eed\u53d8\u91cf\u7684\u9884\u6d4b\u95ee\u9898\u6210\u4e3a \u56de\u5f52\u95ee\u9898 \u3002 \u8f93\u51fa\u53d8\u91cf\u4e3a\u6709\u9650\u4e2a\u79bb\u6563\u53d8\u91cf\u7684\u9884\u6d4b\u95ee\u9898\u79f0\u4e3a \u5206\u7c7b\u95ee\u9898 \u3002 \u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u5747\u4e3a\u53d8\u91cf\u5e8f\u5217\u7684\u9884\u6d4b\u95ee\u9898\u79f0\u4e3a \u6807\u6ce8\u95ee\u9898 \u3002 \u76d1\u7763\u5b66\u4e60\u5047\u8bbe\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u968f\u673a\u53d8\u91cf {X} {X} \u548c {Y} {Y} \u9075\u5faa\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X, Y)} {P(X, Y)} \uff0c {P(X, Y)} {P(X, Y)} \u8868\u793a\u5206\u5e03\u51fd\u6570\uff0c\u6216\u5206\u5e03\u5bc6\u5ea6\u51fd\u6570\u3002\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5047\u8bbe\u8fd9\u4e00\u8054\u5408\u6982\u7387\u5206\u5e03\u5b58\u5728\uff0c\u4f46\u5bf9\u4e8e\u5b66\u4e60\u7cfb\u7edf\u6765\u8bf4\uff0c\u5177\u4f53\u5b9a\u4e49\u662f\u672a\u77e5\u7684\uff0c\u7edf\u8ba1\u5b66\u4e60\u5047\u8bbe\u6570\u5b66\u5b58\u5728\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\uff0c {X} {X} \u548c {Y} {Y} \u5177\u6709\u8054\u5408\u6982\u7387\u5206\u5e03\u7684\u5047\u8bbe\u5c31\u662f\u76d1\u7763\u5b66\u4e60\u5173\u4e8e\u6570\u636e\u7684\u5047\u8bbe\u3002 \u76d1\u7763\u5b66\u4e60\u7684\u76ee\u7684\u5728\u4e8e\u5b66\u4e60\u4e00\u4e2a\u7531\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04\uff0c\u8fd9\u4e2a\u6620\u5c04\u7531\u6a21\u578b\u6765\u8868\u793a\u3002\u5b66\u4e60\u7684\u76ee\u7684\u5c31\u5728\u4e8e\u627e\u5230\u6700\u597d\u7684\u8fd9\u6837\u7684\u6a21\u578b\u3002\u6a21\u578b\u5c5e\u4e8e\u8f93\u5165\u7a7a\u95f4\u5230\u8f93\u51fa\u001c\u7a7a\u95f4\u7684\u6620\u5c04\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5c31\u662f\u5047\u8bbe\u7a7a\u95f4\u3002\u5047\u8bbe\u7a7a\u95f4\u7684\u786e\u5b9a\u4ee5\u4e3a\u7740\u5b66\u4e60\u8303\u56f4\u7684\u786e\u5b9a\u3002 \u6a21\u578b\u53ef\u4ee5\u662f\u6982\u7387\u6a21\u578b\u6216\u975e\u6982\u7387\u6a21\u578b\uff0c\u6709\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u6216\u51b3\u7b56\u51fd\u6570 {Y = f(X)} {Y = f(X)} \u8868\u793a\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_10","text":"","title":"\u95ee\u9898\u7684\u5f62\u5f0f\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_11","text":"\u65b9\u6cd5 = \u6a21\u578b + \u7b56\u7565 + \u7b97\u6cd5 \u6a21\u578b \uff1a\u5728\u76d1\u7763\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u5c31\u662f\u6240\u8981\u5b66\u4e60\u7684\u6761\u4ef6\u6982\u7387\u6216\u8005\u51b3\u7b56\u51fd\u6570\u3002\u6a21\u578b\u7684\u5047\u8bbe\u7a7a\u95f4\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u6216\u51b3\u7b56\u51fd\u6570\u3002 \u7b56\u7565 \uff1a\u4f7f\u7528\u4e00\u79cd\u4ec0\u4e48\u6837\u7684\u8bc4\u4ef7\uff0c\u5ea6\u91cf\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u5b66\u4e60\u597d\u574f\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u6839\u636e\u8fd9\u4e2a\u65b9\u6cd5\u53bb\u5b9e\u65bd\u7684\u8c03\u6574\u6a21\u578b\u7684\u53c2\u6570\uff0c\u4ee5\u671f\u671b\u8bad\u7ec3\u7684\u6a21\u578b\u5c06\u6765\u5bf9\u672a\u77e5\u7684\u6570\u636e\u5177\u6709\u6700\u597d\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002 \u7b97\u6cd5 \uff1a\u6a21\u578b\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\u3002\u5b83\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u6839\u636e\u5b66\u4e60\u7b56\u7565\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u62e9\u6700\u4f18\u6a21\u578b\uff0c\u6700\u540e\u8003\u8651\u7528\u4ec0\u4e48\u6837\u7684\u8ba1\u7b97\u65b9\u6cd5\u53bb\u6c42\u89e3\u8fd9\u4e2a\u6700\u4f18\u6a21\u578b\u3002","title":"\u7edf\u8ba1\u5b66\u4e60\u4e09\u8981\u7d20"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_12","text":"\u635f\u5931\u51fd\u6570(loss function)\u6216\u4ee3\u4ef7\u51fd\u6570(cost function)\u662f\u7528\u6765\u5ea6\u91cf\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u7684\u3002\u635f\u5931\u51fd\u6570\u662f {f(X)} {f(X)} \uff08\u9884\u6d4b\u503c\uff09\u548c {Y} {Y} \uff08\u771f\u5b9e\u503c\uff09\u4e4b\u95f4\u7684\u975e\u8d1f\u5b9e\u503c\u51fd\u6570\uff08\u56e0\u4e3a\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u503c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u662f\u975e\u8d1f\u7684\uff09\uff0c\u8bb0\u4f5c {L(Y, f (X))} {L(Y, f (X))} \u3002 {0-1} {0-1} \u635f\u5931\u51fd\u6570\uff1a { L(Y, f(X) = \\mathbb{I}[Y \\neq f(X)]} { L(Y, f(X) = \\mathbb{I}[Y \\neq f(X)]} \u5e73\u65b9\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = (|Y - f(X)|)^2} {L(Y, P(Y|X)) = (|Y - f(X)|)^2} \u7edd\u5bf9\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = |Y - f(X)|} {L(Y, P(Y|X)) = |Y - f(X)|} \u5bf9\u6570\u635f\u5931\u51fd\u6570\uff1a {L(Y, P(Y|X)) = -\\log P(Y|X)} {L(Y, P(Y|X)) = -\\log P(Y|X)} \u5f53\u7136\u8fd8\u5b58\u5728\u5176\u4ed6\u7684\u635f\u5931\u51fd\u6570\u6bd4\u5982\uff1a\u6307\u6570\u635f\u5931\u51fd\u6570\u6216\u8005Hinge Loss\u7b49\u3002 \u635f\u5931\u51fd\u6570\u503c\u8d8a\u5c0f\uff0c\u4ee3\u8868\u6a21\u578b\u8d8a\u597d\uff0c\u6a21\u578b\u51fa\u73b0\u7684\u8bef\u5dee\u8d8a\u5c0f\u3002\u7531\u4e8e\u6a21\u578b\u7684\u8f93\u5165\u3001\u8f93\u51fa {(X,Y)} {(X,Y)} \u662f\u968f\u673a\u53d8\u91cf\uff0c\u9075\u5faa\u8054\u5408\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u6240\u4ee5\u635f\u5931\u51fd\u6570\u7684\u671f\u671b\u662f\uff1a {R_{exp} = E_p[L(Y, f(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, f(X)) P(x, y)dxdy} {R_{exp} = E_p[L(Y, f(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, f(X)) P(x, y)dxdy} \u8fd9\u662f\u7406\u8bba\u4e0a\u6a21\u578b {f(X)} {f(X)} \u5173\u4e8e\u8054\u5408\u5206\u5e03 {P(X,Y)} {P(X,Y)} \u7684\u5e73\u5747\u610f\u4e49\u4e0b\u7684\u635f\u5931\uff0c\u79f0\u4e3a\u98ce\u9669\u51fd\u6570(risk function)\u6216\u671f\u671b\u635f\u5931(expected loss)\u3002 \u5b66\u4e60\u7684\u65e5\u6807\u5c31\u662f\u9009\u62e9\u671f\u671b\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u3002\u4e00\u65b9\u9762\u6839\u636e\u671f\u671b\u98ce\u9669\u6700\u5c0f\u5316\u6a21\u578b\u8981\u7528\u5230\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u53e6\u4e00\u65b9\u9762\u8054\u5408\u5206\u5e03\u53c8\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5\u76d1\u7763\u5b66\u4e60\u5c31\u6210\u4e3a\u4e00\u4e2a\u75c5\u6001\u95ee\u9898\u3002 \u5728\u6b64\u6211\u4eec\u63d0\u51fa\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\uff1a\u7ecf\u9a8c\u98ce\u9669\u3002\u6a21\u578b {f(x)} {f(x)} \u5173\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\u79f0\u4e3a\u7ecf\u9a8c\u98ce\u9669 (empirical risk) \u6216\u7ecf\u9a8c\u635f\u5931 (empirical loss)\uff0c\u8bb0\u505a {R_{emp}(f)} {R_{emp}(f)} \uff1a {R_{emp}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i))} {R_{emp}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i))} \u671f\u671b\u98ce\u9669 {R_{exp}(f)} {R_{exp}(f)} \u662f\u6a21\u578b\u5173\u4e8e\u8054\u5408\u5206\u5e03\u7684\u671f\u671b\u635f\u5931\uff0c\u7ecf\u9a8c\u98ce\u9669 {R_{emp}(f)} {R_{emp}(f)} \u662f\u6a21\u578b\u5173\u4e8e\u8bad\u7ec3\u6837\u672c\u96c6\u7684\u5e73\u5747\u635f\u5931\u3002\u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u5f53\u6837\u672c\u5bb9\u91cf {N} {N} \u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u8d8b\u4e8e\u671f\u671b\u98ce\u9669\u3002\u6240\u4ee5\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u7528\u7ecf\u9a8c\u98ce\u9669\u4f30\u8ba1\u671f\u671b\u98ce\u9669\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u73b0\u5b9e\u4e2d\u8bad\u7ec3\u6837\u672c\u6570\u76ee\u6709\u9650\uff0c\u751a\u81f3\u5f88\u5c0f\uff0c\u6240\u4ee5\u7528\u7ecf\u9a8c\u98ce\u9669\u4f30\u8ba1\u671f\u671b\u98ce\u9669\u5e38\u5e38\u5e76\u4e0d\u7406\u60f3\uff0c\u8981\u5bf9\u7ecf\u9a8c\u98ce\u9669\u8fdb\u884c\u4e00\u5b9a\u7684\u77eb\u6b63\u3002\u8fd9\u5c31\u5173\u7cfb\u5230\u76d1\u7763\u5b66\u4e60\u7684\u4e24\u4e2a\u57fa\u672c\u7b56\u7565\uff1a\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u548c\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u3002 \u5728\u5047\u8bbe\u7a7a\u95f4\u3001\u635f\u5931\u51fd\u6570\u4ee5\u53ca\u8bad\u7ec3\u6570\u636e\u96c6\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u7ecf\u9a8c\u98ce\u9669\u51fd\u6570\u5f0f\u5c31\u53ef\u4ee5\u786e\u5b9a\u3002\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 (empirical risk minimization, ERM) \u7684\u7b56\u7565\u8ba4\u4e3a\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u662f\u6700\u4f18\u7684\u6a21\u578b\u3002\u6839\u636e\u8fd9\u4e00\u7b56\u7565\uff0c\u6309\u7167\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u6c42\u6700\u4f18\u6a21\u578b\u5c31\u662f\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\uff1a {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} L(y_i, f(x_i))} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} L(y_i, f(x_i))} \u5176\u4e2d\uff0c {\\mathcal{F}} {\\mathcal{F}} \u662f\u5047\u8bbe\u7a7a\u95f4\u3002\u5f53\u6837\u672c\u5bb9\u91cf\u8db3\u591f\u5927\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u80fd\u4fdd\u8bc1\u6709\u5f88\u597d\u7684\u5b66\u4e60\u6548\u679c\uff0c\u5728\u73b0\u5b9e\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u6bd4\u5982\uff0c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u5c31\u662f\u98ce\u9669\u6700\u5c0f\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u5f53\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\u65f6\uff0c\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u5c31\u7b49\u4ef7\u4e8e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u5f53\u6837\u672c\u5bb9\u91cf\u5f88\u5c0f\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u5b66\u4e60\u7684\u6548\u679c\u672a\u5fc5\u5f88\u597d\uff0c\u4f1a\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002 \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316 (structural risk minimization, SRM) \u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408\u800c\u63d0\u51fa\u6765\u7684\u7b56\u7565\u3002\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7b49\u4ef7\u4e8e\u6b63\u5219\u5316 (regularization)\u3002\u7ed3\u6784\u98ce\u9669\u5728\u7ecf\u9a8c\u98ce\u9669\u4e0a\u52a0\u4e0a\u8868\u793a\u6a21\u578b\u590d\u6742\u5ea6\u7684\u6b63\u5219\u5316\u9879 (regula\u001crizer) \u6216\u7f5a\u9879 (penalty term)\u3002\u5728\u5047\u8bbe\u7a7a\u95f4\u3001\u635f\u5931\u51fd\u6570\u4ee5\u53ca\u8bad\u7ec3\u6570\u636e\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u98ce\u9669\u7684\u5b9a\u4e49\u662f\uff1a {R_{srm}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {R_{srm}(f) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u5176\u4e2d\uff0c {J(f)} {J(f)} \u4e3a\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u662f\u5b9a\u4e49\u5728\u5047\u8bbe\u7a7a\u95f4 {\\mathcal{F}} {\\mathcal{F}} \u7684\u6cdb\u51fd\u3002\u6a21\u578b {f} {f} \u8d8a\u590d\u6742\uff0c\u590d\u6742\u5ea6 {J(f)} {J(f)} \u5c31\u8d8a\u5927\uff1b\u53cd\u4e4b\uff0c\u6a21\u578b {f} {f} \u8d8a\u7b80\u5355\uff0c\u590d\u6742\u5ea6 {J(f)} {J(f)} \u5c31\u8d8a\u5c0f\u3002\u590d\u6742\u5ea6\u8868\u793a\u4e86\u5bf9\u590d\u6742\u6a21\u578b\u7684\u60e9\u7f5a\u3002 {\\lambda \\geq 0} {\\lambda \\geq 0} \u662f\u7cfb\u6570\uff0c\u7528\u4ee5\u6743\u8861\u7ecf\u9a8c\u98ce\u9669\u548c\u6a21\u578b\u590d\u6742\u5ea6\u3002\u7ed3\u6784\u98ce\u9669\u5c0f\u9700\u8981\u7ecf\u9a8c\u98ce\u9669\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u540c\u65f6\u5c0f\u3002\u7ed3\u6784\u98ce\u9669\u5c0f\u7684\u6a21\u578b\u65fa\u65fa\u5bf9\u8bad\u7ec3\u6570\u636e\u4ee5\u53ca\u672a\u77e5\u7684\u6d4b\u8bd5\u6570\u636e\u6709\u8f83\u597d\u7684\u9884\u6d4b\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1\u4e2d\u6700\u5927\u540e\u9a8c\u6982\u7387 (maximum posterior probability estimation, MAP) \u5c31\u662f\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u5f53\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3001\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u3002\u6a21\u578b\u590d\u6742\u5ea6\u7531\u6a21\u578b\u7684\u5148\u9a8c\u6982\u7387\u6982\u7387\u8868\u793a\u65f6\uff0c\u7ed3\u6784\u98ce\u9669\u6700\u4e0b\u5316\u5c31\u7b49\u4e8e\u6700\u5927\u540e\u9a8c\u6982\u7387\u4f30\u8ba1\u3002 \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u7b56\u7565\u8ba4\u4e3a\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u7684\u6a21\u578b\u662f\u6700\u4f18\u7684\u6a21\u578b\u3002\u6240\u4ee5\u6c42\u89e3\u6700\u4f18\u6a21\u578b\uff0c\u5c31\u662f\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\uff1a {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u56e0\u6b64\uff0c\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7ecf\u9a8c\u98ce\u9669\u6216\u8005\u7ed3\u6784\u98ce\u9669\u51fd\u6570\u6700\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u65f6\u7ecf\u9a8c\u6216\u7ed3\u6784\u98ce\u9669\u51fd\u6570\u662f\u6700\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u3002 \b","title":"\u635f\u5931\u51fd\u6570\u548c\u98ce\u9669\u51fd\u6570"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_13","text":"\u5b66\u4e60\u6a21\u578b\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\u3002\u7edf\u8ba1\u5b66\u4e60\u95ee\u9898\u5f52\u7ed3\u4e3a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u7edf\u8ba1\u5b66\u4e60\u7684\u7b97\u6cd5\u6210\u4e3a\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\u7684\u7b97\u6cd5\u3002\u5982\u4f55\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u5e76\u4f7f\u5f97\u6c42\u89e3\u7684\u8fc7\u7a0b\u975e\u5e38\u9ad8\u6548\uff0c\u662f\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u95ee\u9898\u3002","title":"\u7b97\u6cd5"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_14","text":"","title":"\u6a21\u578b\u8bc4\u4f30\u548c\u6a21\u578b\u9009\u62e9"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_15","text":"\u7edf\u8ba1\u5b66\u4e60\u7684\u76ee\u7684\u662f\u4f7f\u5b66\u5230\u7684\u6a21\u578b\u4e0d\u4ec5\u5bf9\u5df2\u77e5\u6570\u636e\u800c\u4e14\u5bf9\u672a\u77e5\u6570\u636e\u90fd\u80fd\u6709\u5f88\u597d\u7684\u9884\u6d4b\u80fd\u529b\u3002\u4e0d\u540c\u7684\u5b66\u4e60\u65b9\u6cd5\u4f1a\u7ed9\u51fa\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5f53\u635f\u5931\u51fd\u6570\u7ed9\u5b9a\u65f6\uff0c\u57fa\u4e8e\u635f\u5931\u51fd\u6570\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u8bef\u5dee\u548c\u6a21\u578b\u7684\u6d4b\u8bd5\u8bef\u5dee\u5c31\u6210\u4e86\u5b66\u4e60\u65b9\u6cd5\u8bc4\u4f30\u7684\u6807\u51c6\u3002 \u5177\u4f53\u91c7\u7528\u7684\u635f\u5931\u51fd\u6570\u672a\u5fc5\u662f\u8bc4\u4f30\u65f6\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u3002 \u5047\u8bbe\u5b66\u4e60\u5230\u7684\u6a21\u578b\u662f {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \uff0c\u8bad\u7ec3\u8bef\u5dee\u662f\u6a21\u578b {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \u5173\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\uff1a {R_{emp}(\\hat{f}) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, \\hat{f}(x_i))} {R_{emp}(\\hat{f}) = \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, \\hat{f}(x_i))} \u5176\u4e2d\uff0c {N} {N} \u662f\u6837\u672c\u5bb9\u91cf\u3002 \u6d4b\u8bd5\u8bef\u5dee\u662f\u6a21\u578b {Y = \\hat{f}(X)} {Y = \\hat{f}(X)} \u5173\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u5e73\u5747\u635f\u5931\uff1a {e_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} L(y_i, \\hat{f}(x_i))} {e_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} L(y_i, \\hat{f}(x_i))} \u5176\u4e2d\uff0c {N'} {N'} \u662f\u6837\u672c\u5bb9\u91cf\u3002 \u5f53\u635f\u5931\u51fd\u6570\u662f {0-1} {0-1} \u635f\u5931\u51fd\u6570\u65f6\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5c31\u53d8\u6210\u4e86\u5e38\u89c1\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u7684\u8bef\u5dee\u7387\uff1a {r_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} \\mathbb{I}[y_i \\neq \\hat{f}(x_i)]} {r_{test} = \\frac{1}{N'} \\sum_{i=1}^{N'} \\mathbb{I}[y_i \\neq \\hat{f}(x_i)]} \u8fd9\u91cc {\\mathbb{I}} {\\mathbb{I}} \u662f\u6307\u793a\u51fd\u6570\uff0c\u5373 {y_i \\neq \\hat{f}(x_i)} {y_i \\neq \\hat{f}(x_i)} \u662f\u4e3a {1} {1} \uff0c\u5426\u5219\u4e3a {0} {0} \u3002 \u663e\u7136\uff0c {r_{test} + e_{test} = 1} {r_{test} + e_{test} = 1} \u8bad\u7ec3\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u5bf9\u5224\u65ad\u7ed9\u5b9a\u7684\u95ee\u9898\u662f\u4e0d\u662f\u4e00\u4e2a\u5bb9\u6613\u5b66\u4e60\u7684\u95ee\u9898\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u672c\u8d28\u4e0a\u4e0d\u91cd\u8981\u3002\u6d4b\u8bd5\u8bef\u5dee\u53cd\u6620\u4e86\u5b66\u4e60\u65b9\u6cd5\u5bf9\u672a\u77e5\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u5b66\u4e60\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\u3002\b\u663e\u7136\uff0c\u7ed9\u5b9a\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5c0f\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u597d\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u3002\u901a\u5e38\u5c06\u5b66\u4e60\u65b9\u6cd5\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\u6210\u4e3a\u6cdb\u5316\u80fd\u529b\u3002","title":"\u8bad\u7ec3\u8bef\u5dee\u4e0e\u6d4b\u8bd5\u8bef\u5dee"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_16","text":"\u5f53\u5047\u8bbe\u7a7a\u95f4\u542b\u6709\u4e0d\u540c\u590d\u6742\u5ea6\u7684\u6a21\u578b\u65f6\uff0c\u5c31\u8981\u9762\u4e34\u6a21\u578b\u9009\u62e9\u7684\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u9009\u62e9\u6216\u5b66\u4e60\u4e00\u4e2a\u5408\u9002\u7684\u6a21\u578b\u3002\u5982\u679c\u5728\u5047\u8bbe\u7a7a\u95f4\u4e2d\u5b58\u5728 \u201c\u771f\u201d \u6a21\u578b\uff0c\u90a3\u4e48\u6240\u9009\u62e9\u7684\u6a21\u578b\u5e94\u8be5\u903c\u8fd1\u7f1c\u5bc6\u6027\u3002\u5177\u4f53\u5730\uff0c\u6240\u9009\u62e9\u7684\u6a21\u578b\u8981\u4e0e\u771f\u6a21\u578b\u7684\u53c2\u6570\u4e2a\u6570\u76f8\u540c\uff0c\u6240\u9009\u62e9\u7684\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u4e0e\u771f\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u76f8\u8fd1\u3002 \u5982\u679c\u4e00\u5473\u8ffd\u6c42\u63d0\u9ad8\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u9884\u4fa7\u80fd\u529b\uff0c\u6240\u9009\u6a21\u578b\u7684\u590d\u6742\u5ea6\u5219\u5f80\u5f80\u4f1a\u6bd4\u771f\u6a21\u578b\u66f4\u9ad8\u3002\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a \u8fc7\u62df\u5408 (over-fitting)\u3002\u8fc7\u62df\u5408\u662f\u6307\u5b66\u4e60\b\u65f6\u9009\u62e9\u7684\u6a21\u578b\u5305\u542b\u7684\u53c2\u6570\u8fc7\u591a\uff0c\u4ee5\u81f4\u4e8e\u51fa\u73b0\u8fd9\u4e00\u6a21\u578b\u5bf9\u5df1\u77e5\u6570\u636e\uff08\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\uff09\u9884\u6d4b\u5f97\u5f88\u597d\uff0c\u4f46\u5bf9\u672a\u77e5\u6570\u636e\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\uff09\u9884\u6d4b\u5f97\u5f88\u5dee\u7684\u73b0\u8c61\u3002 \u6a21\u578b\u9009\u62e9\u65e8\u5728\u907f\u514d\u8fc7\u62df\u5408\u5e76\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u3002","title":"\u8fc7\u62df\u5408\u4e0e\u6a21\u578b\u9009\u62e9"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_17","text":"","title":"\u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_18","text":"\u6a21\u578b\u9009\u62e9\u7684\u5178\u578b\u65b9\u6cd5\u662f\u6b63\u5219\u5316\uff0c\u662f\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7b56\u7565\u7684\u5b9e\u73b0\uff0c\u662f\u5728\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u4e0a\u52a0\u4e00\u4e2a\u6b63\u5219\u5316\u9879\u6216\u7f5a\u9879\u3002 {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} {\\min_{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L(y_i, f(x_i)) + \\lambda J(f)} \u6b63\u5219\u5316\u9879\u5728\u9762\u5bf9\u4e0d\u540c\u7684\u95ee\u9898\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u5f62\u5f0f\u3002\u6b63\u5219\u5316\u7684\u4f5c\u7528\u662f\u9009\u62e9\u7ecf\u9a8c\u98ce\u9669\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u540c\u65f6\u8f83\u5c0f\u7684\u6a21\u578b\u3002 \u6b63\u5219\u5316\u7b26\u5408\u5965\u5361\u59c6\u5243\u5200\u539f\u7406\uff0c \u5728\u6240\u6709\u53ef\u80fd\u9009\u62e9\u7684\u6a21\u578b\u4e2d\uff0c\u80fd\u591f\u5f88\u597d\u5730\u89e3\u91ca\u5df2\u77e5\u6570\u636e\u5e76\u4e14\u5341\u5206\u7b80\u5355\u624d\u662f\u6700\u597d\u7684\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u5e94\u8be5\u9009\u62e9\u7684\u6a21\u578b\u3002 \u4ece \u8d1d\u53f6\u65af\u4f30\u8ba1 \u7684\u89d2\u5ea6\u6765\u770b\uff0c \u6b63\u5219\u5316\u9879\u001b\u5bf9\u5e94\u4e8e\u6a21\u578b\u7684\u5148\u9a8c\u6982\u7387\u3002\u53ef\u4ee5\u5047\u8bbe\u590d\u6742\u7684\u6a21\u578b\u6709\u8f83\u5927\u7684\u5148\u9a8c\u6982\u7387\uff0c\u7b80\u5355\u7684\u6a21\u578b\u6709\u8f83\u5c0f\u7684\u5148\u9a8c\u6982\u7387\u3002","title":"\u6b63\u5219\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_19","text":"\u53e6\u4e00\u79cd\u5e38\u7528\u7684\u6a21\u578b\u9009\u62e9\u65b9\u6cd5\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u6837\u672c\u5145\u8db3\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u5c31\u662f\u968f\u673a\u5730\u5c06\u6570\u636e\u96c6\u5207\u6210\u4e09\u4efd\uff0c\u5206\u522b\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u8bad\u7ec3\u96c6\u7528\u6765\u8bad\u7ec3\u6a21\u578b\uff0c\u9a8c\u8bc1\u96c6\u7528\u4e8e\u6a21\u578b\u7684\u9009\u62e9\uff0c\u800c\u6d4b\u8bd5\u96c6\u7528\u4e8e\u6700\u7ec8\u5bf9\u5b66\u4e60\u65b9\u6cd5\u7684\u8bc4\u4f30\u3002\u5728\u5b66\u4e60\u5230\u7684\u4e0d\u540c\u590d\u6742\u5ea6\u7684\u6a21\u578b\u4e2d\uff0c\u9009\u62e9\u5bf9\u9a8c\u8bc1\u96c6\u6709\u6700\u5c0f\u9884\u6d4b\u8bef\u5dee\u7684\u6a21\u578b\u3002\u7531\u4e8e\u9a8c\u8bc1\u96c6\u6709\u8db3\u591f\u591a\u7684\u6570\u636e\uff0c\u7528\u5b83\u5bf9\u6a21\u578b\u8fdb\u884c\u9009\u62e9\u4e5f\u662f\u6700\u6709\u6548\u7684\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u8bb8\u591a\u5b9e\u9645\u95ee\u9898\u4e2d\uff0c\u6570\u636e\u662f\u4e0d\u5145\u8db3\u7684\uff0c\u4e3a\u4e86\u9009\u62e9\u597d\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u5f0f\uff0c\u57fa\u672c\u601d\u60f3\u662f \u91cd\u590d\u5229\u7528\u6570\u636e \uff1a\u628a\u7ed9\u5b9a\u7684\u6570\u636e\u8fdb\u884c\u5207\u5206\uff0c\u5c06\u5207\u5206\u7684\u6570\u636e\u96c6\u7ec4\u5408\u4e3a\u8bad\u7ec3\u96c6\u4e0e\u6d4b\u8bd5\u96c6\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u53cd\u590d\u5730\u8fdb\u884c\u8bad\u7ec3\u3001\u6d4b\u8bd5\u4ee5\u53ca\b\u6a21\u578b\u9009\u62e9\u3002 \u7b80\u5355\u4ea4\u53c9\u9a8c\u8bc1 \uff1a\u9996\u5148\u968f\u673a\u5730\u5c06\u5df1\u7ed9\u6570\u636e\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u53e6\u4e00\u90e8\u5206\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff1b\u7136\u540e\u7528\u8bad\u7ec3\u96c6\u5728\u5404\u79cd\u6761\u4ef6\u4e0b(\u4f8b\u5982\uff0c\u4e0d\u540c\u7684\u53c2\u6570\u4e2a\u6570)\u8bad\u7ec3\u6a21\u578b\uff0c\u4ece\u800c\u5f97\u5230\u4e0d\u540c\u7684\u6a21\u578b\uff1b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4ef7\u5404\u4e2a\u6a21\u578b\u7684\u6d4b\u8bd5\u8bef\u5dee\uff0c\u9009\u51fa\u6d4b\u8bd5\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b. k-\u6298\u4ea4\u53c9\u9a8c\u8bc1 (S-fold cross validation\uff09\uff1a\u9996\u5148\u968f\u673a\u5730\u5c06\u5df2\u7ed9\u6570\u636e\u5207\u5206\u4e3a {S} {S} \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5927\u5c0f\u76f8\u540c\u7684\u5b50\u96c6\uff1b\u7136\u540e\u5229\u7528 {S-1} {S-1} \u4e2a\u5b50\u96c6\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u5229\u7528\u4f59\u4e0b\u7684\u5b50\u96c6\u6d4b\u8bd5\u6a21\u578b\uff1b\u5c06\u8fd9\u4e00\u8fc7\u7a0b\u5bf9\u53ef\u80fd\u7684 {S} {S} \u79cd\u9009\u62e9\u91cd\u590d\u8fdb\u884c\uff1b\u6700\u540e\u9009\u51fa {S} {S} \u6b21\u8bc4\u6d4b\u4e2d\u5e73\u5747\u4fa7\u8bd5\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b. \u7559\u4e00\u6587\u53c9\u9a8c\u8bc1 (leave-one-out cross validation)\uff1a {k} {k} -\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u7279\u6b8a\u60c5\u5f62\u662f {k=N} {k=N} \uff0c {N} {N} \u662f\u7ed9\u5b9a\u6570\u636e\u96c6\u7684\u5bb9\u91cf\u3002","title":"\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_20","text":"","title":"\u6cdb\u5316\u80fd\u529b"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_21","text":"\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\u662f\u6307\u7531\u8be5\u5b66\u4e60\u5230\u7684\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u662f\u5b66\u4e60\u65b9\u6cd5\u672c\u8d28\u4e0a\u91cd\u8981\u7684\u6027\u8d28\u3002\u73b0\u5b9e\u4e2d\u91c7\u7528\u6700\u591a\u7684\u529e\u6cd5\u662f\u901a\u8fc7\u6d4b\u8bd5\u8bef\u5dee\u6765\u8bc4\u4ef7\u5b66\u4e60\u65b9\u6cd5\u7684\u7e41\u534e\u80fd\u529b\u3002\u4f46\u662f\u8fd9\u4f9d\u8d56\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u7531\u4e8e\u6d4b\u8bd5\u6570\u636e\u96c6\u6709\u9650\uff0c\u5f88\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u53ef\u9760\u3002\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u4e0a\u5bf9\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u8fdb\u884c\u4e86\u5206\u6790\u3002 \u5b9a\u4e49 \b\uff1a\u5982\u679c\u5b66\u4e60\u5230\u7684\u6a21\u578b\u662f {\\hat{f}} {\\hat{f}} \uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u9884\u6d4b\u7684\u8bef\u5dee\u5373\u4e3a\u6cdb\u5316\u8bef\u5dee\uff1a {R_{exp}(\\hat{f}) = E_p[L(Y, \\hat{f}(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, \\hat{f}(X)) P(x, y)dxdy} {R_{exp}(\\hat{f}) = E_p[L(Y, \\hat{f}(X))] = \\int_{\\mathcal{X \\times Y}} L(Y, \\hat{f}(X)) P(x, y)dxdy} \u6cdb\u5316\u8bef\u5dee\u53cd\u6620\u4e86\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u5982\u679c\u4e00\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6a21\u578b\u6bd4\u53e6\u4e00\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6a21\u578b\u5177\u6709\u66f4\u5c0f\u7684\u6cdb\u5316\u8bef\u5dee\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u5c31\u66f4\u6709\u6548\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6cdb\u5316\u8bef\u5dee\u5c31\u662f\u6240\u5b66\u4e60\u5230\u7684\u6a21\u578b\u7684\u671f\u671b\u98ce\u9669\u3002","title":"\u6cdb\u5316\u8bef\u5dee"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_22","text":"\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\u5206\u6790\u5f80\u5f80\u662f\u901a\u8fc7\u7814\u7a76\u6cdb\u5316\u8bef\u5dee\u7684\u6982\u7387\u4e0a\u754c\u8fdb\u884c\u7684\uff0c\u7b80\u79f0\u4e3a\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002\u5373\u901a\u8fc7\u6bd4\u8f83\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5\u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u6765\u6bd4\u8f83\u5b83\u4eec\u7684\u4f18\u52a3\u3002\u5177\u6709\u5982\u4e0b\u7684\u6027\u8d28\uff1a \u5f53\u6837\u672c\u5bb9\u91cf\u589e\u52a0\u65f6\uff0c\u6cdb\u5316\u4e0a\u754c\u8d8b\u4e8e {0} {0} \u3002 \u662f\u5047\u8bbe\u7a7a\u95f4\u5bb9\u91cf\u7684\u51fd\u6570\uff0c\u5047\u8bbe\u7a7a\u95f4\u5bb9\u91cf\u8d8a\u5927\uff0c\u6a21\u578b\u5c31\u8d8a\u96be\u5b66\uff0c\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u5c31\u8d8a\u5927\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\uff0c\u5206\u6790\u5982\u4e0b\uff1a \u6570\u636e\u96c6\u662f\u4ece\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X, Y)} {P(X, Y)} \u72ec\u7acb\u540c\u5206\u5e03\u4ea7\u751f\u7684\uff0c {X \\in R^n} {X \\in R^n} \uff0c {Y \\in \\{-1, +1\\}} {Y \\in \\{-1, +1\\}} \u3002\u5047\u8bbe\u7a7a\u95f4\u662f\u51fd\u6570\u7684\u6709\u9650\u96c6\u5408 {\\mathcal{F}} {\\mathcal{F}} \uff0c {d} {d} \u662f\u51fd\u6570\u4e2a\u6570\uff0c\u8bbe {f} {f} \u662f\u4ece {\\mathcal{F}} {\\mathcal{F}} \u4e2d\u9009\u53d6\u7684\u51fd\u6570\u3002\u635f\u5931\u51fd\u6570\u662f {0-1} {0-1} \u635f\u5931\uff0c\u5173\u4e8e {f} {f} \u7684\u671f\u671b\u98ce\u9669\u548c\u7ecf\u9a8c\u98ce\u9669\u5206\u522b\u662f\uff1a {R(f) = E[L(Y, f(X))]} {R(f) = E[L(Y, f(X))]} {\\hat{R}(f) = \\frac{1}{N} \\sum_{1}^{N} L(y_i, f(x_i))} {\\hat{R}(f) = \\frac{1}{N} \\sum_{1}^{N} L(y_i, f(x_i))} \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u51fd\u6570\u662f\uff1a {f_N = \\arg \\min_{f \\in \\mathcal{F}} \\hat{R}(f)} {f_N = \\arg \\min_{f \\in \\mathcal{F}} \\hat{R}(f)} \u4eba\u4eec\u66f4\u5173\u5fc3\u7684\u662f {f_N} {f_N} \u7684\u6cdb\u5316\u80fd\u529b\uff1a {R(f_N) = E[L(Y, f_N(X))]} {R(f_N) = E[L(Y, f_N(X))]} \u4e0b\u9762\u8ba8\u8bba\u4ece\u6709\u9650\u96c6\u5408 {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} \u4e2d\u4eba\u9009\u51fa\u7684\u51fd\u6570 {f} {f} \u7684\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002 \u5bf9\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u5f53\u5047\u8bbe\u7a7a\u95f4\u662f\u6709\u9650\u4e2a\u51fd\u6570\u7684\u96c6\u5408 {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdots, f_d\\}} \u65f6\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u51fd\u6570 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c\u81f3\u5c11\u4ee5\u6982\u7387 {1 - \\delta} {1 - \\delta} \uff0c\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u6210\u7acb\uff1a {R(f) \\le \\hat{R}(f) + \\epsilon(d,N,\\delta)} {R(f) \\le \\hat{R}(f) + \\epsilon(d,N,\\delta)} \u5176\u4e2d\uff0c {\\epsilon(d,N,\\delta) = \\sqrt{\\frac{1}{2N} \\Big(\\log d + \\log \\frac{1}{\\delta} \\Big)}} {\\epsilon(d,N,\\delta) = \\sqrt{\\frac{1}{2N} \\Big(\\log d + \\log \\frac{1}{\\delta} \\Big)}} \u4e0d\u7b49\u5f0f\u5de6\u8fb9\u662f\u6cdb\u5316\u8bef\u5dee\uff0c\u53f3\u8fb9\u5373\u4e3a\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u3002\u5728\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u4e2d\uff0c\u7b2c\u4e00\u9879\u662f\u8bad\u7ec3\u8bef\u5dee\uff0c\u8bad\u7ec3\u8bef\u5dee\u8d8a\u5c0f\uff0c\u6cdb\u5316\u8bef\u5dee\u4e5f\u8d8a\u5c0f\uff0c\u7b2c\u4e8c\u9879 {\\epsilon(d,N,\\delta)} {\\epsilon(d,N,\\delta)} \u662f {N} {N} \u7684\u5355\u8c03\u9012\u51cf\u51fd\u6570\uff0c\u5f53 {N} {N} \u8d8b\u4e8e\u65e0\u7a77\u662f\u8d8b\u4e8e {0} {0} \uff1b\u540c\u65f6\uff0c\u5b83\u4e5f\u662f {\\sqrt{\\log d}} {\\sqrt{\\log d}} \u9636\u7684\u51fd\u6570\uff0c\u5047\u8bbe\u7a7a\u95f4 {\\mathcal{F}} {\\mathcal{F}} \u5305\u542b\u7684\u51fd\u6570\u989d\u8d8a\u591a\uff0c\u5176\u503c\u4e5f\u8d8a\u5927\u3002 Hoeffding \u4e0d\u7b49\u5f0f\uff1a \u8bbe {S_n = \\sum_{i=1}^{N} X_i} {S_n = \\sum_{i=1}^{N} X_i} \u662f\u72ec\u7acb\u968f\u673a\u53d8\u91cf {X_1, X_2, \\cdots, X_n} {X_1, X_2, \\cdots, X_n} \u4e4b\u548c\uff0c {X_i \\in [a_i, b_i]} {X_i \\in [a_i, b_i]} \uff0c\u5219\u5bf9\u4efb\u610f\u7684 {t < 0} {t < 0} \uff0c\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u6210\u7acb\uff1a {P(S_n - ES_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(S_n - ES_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(ES_n - S_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} {P(ES_n - S_n \\ge t) \\le \\exp \\Big(\\frac{-2t^2}{\\sum_{i=1}^{n} (b_i - a_i)^2} \\Big)} \u5bf9\u4efb\u610f\u51fd\u6570 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c {\\hat{R}(f)} {\\hat{R}(f)} \u662f {N} {N} \u4e2a\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf {L(Y, f(X))} {L(Y, f(X))} \u7684\u6837\u672c\u5747\u503c\uff0c {R(f)} {R(f)} \u662f\u968f\u673a\u53d8\u91cf {L(Y, f(X))} {L(Y, f(X))} \u7684\u671f\u671b\u503c\uff0c\u5982\u679c\u635f\u5931\u51fd\u6570\u53d6\u503c\u4e8e\u533a\u95f4 {[0,1]} {[0,1]} \uff0c\u5373\u5bf9\u6240\u6709 {i} {i} \uff0c {[a_i, b_i] = [0,1]} {[a_i, b_i] = [0,1]} \uff0c\b\u5219\u6709\uff1a {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le \\exp(-2N\\epsilon^2)} {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le \\exp(-2N\\epsilon^2)} \u7531\u4e8e {\\mathcal{F} = \\{f_1, f_2, \\cdot, f_d\\}} {\\mathcal{F} = \\{f_1, f_2, \\cdot, f_d\\}} \u662f\u4e00\u4e2a\u6709\u9650\u96c6\u5408\uff0c\u6545\uff1a {P(\\exists f \\in \\mathcal{F}: R(f) - \\hat{R}(f) \\ge \\epsilon) = P(\\bigcup_{f \\in \\mathcal{F}}) \\{R(f) - \\hat{R}(f) \\ge \\epsilon\\} \\le \\sum_{f \\in \\mathcal{F} }P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le d \\exp(-2N\\epsilon^2)} {P(\\exists f \\in \\mathcal{F}: R(f) - \\hat{R}(f) \\ge \\epsilon) = P(\\bigcup_{f \\in \\mathcal{F}}) \\{R(f) - \\hat{R}(f) \\ge \\epsilon\\} \\le \\sum_{f \\in \\mathcal{F} }P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\le d \\exp(-2N\\epsilon^2)} \u6216\u8005\u7b49\u4ef7\u7684\uff0c\u5bf9\u4efb\u610f\u7684 {f \\in \\mathcal{F}} {f \\in \\mathcal{F}} \uff0c\u6709\uff1a {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\ge 1 - d \\exp(-2N\\epsilon^2)} {P(R(f) - \\hat{R}(f) \\ge \\epsilon) \\ge 1 - d \\exp(-2N\\epsilon^2)} \u4ee4\uff1a {\\delta = d \\exp(-2N\\epsilon^2)} {\\delta = d \\exp(-2N\\epsilon^2)} \u5219\uff1a {P(R(f) < \\hat{R}(f) + \\epsilon) \\ge 1 - \\delta} {P(R(f) < \\hat{R}(f) + \\epsilon) \\ge 1 - \\delta} \u5219\u81f3\u5c11\u4ee5\u6982\u7387 {1 - \\delta} {1 - \\delta} \u6709 {R(f) < \\hat{R}(f) + \\epsilon} {R(f) < \\hat{R}(f) + \\epsilon} \u3002 \u4ece\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c\u53ef\u77e5\uff0c {R(f_N) \\le \\hat{R}(f_N) + \\epsilon(d, N, \\delta)} {R(f_N) \\le \\hat{R}(f_N) + \\epsilon(d, N, \\delta)} \u8bad\u7ec3\u8bef\u5dee\u8d8a\u5c0f\u7684\u6a21\u578b\uff0c\u5176\u6cdb\u5316\u8bef\u5dee\u4e5f\u4f1a\u5c0f\u3002","title":"\u6cdb\u5316\u8bef\u5dee\u4e0a\u754c"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_23","text":"\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u53c8\u53ef\u4ee5\u5206\u4e3a\u751f\u6210\u65b9\u6cd5(generative approach)\u548c\u5224\u522b\u65b9\u6cd5(discriminative approach)\u3002\u6240\u5b66\u5230\u7684\u6a21\u578b\u5206\u522b\u79f0\u4e3a\u751f\u6210\u6a21\u578b(geuemtive model)\u548c\u5224\u522b\u6a21\u578b(discriminative model)\u3002\u751f\u6210\u65b9\u6cd5\u7531\u6570\u636e\u5b66\u4e60\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u7136\u540e\u6c42\u51fa\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u4f5c\u4e3a\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u5373\u751f\u6210\u6a21\u578b\u3002 {P(Y|X) = \\frac{P(X, Y)}{P(X)}} {P(Y|X) = \\frac{P(X, Y)}{P(X)}} \u8fd9\u6837\u7684\u65b9\u6cd5\u4e4b\u6240\u4ee5\u79f0\u4e3a\u751f\u6210\u65b9\u6cd5\uff0c\u662f\u56e0\u4e3a\u6a21\u578b\u8868\u793a\u4e86\u7ed9\u5b9a\u8f93\u5165X\u4ea7\u751f\u8f93\u51faY\u7684\u751f\u6210\u5173\u7cfb.\u5178\u578b\u7684\u751f\u6210\u6a21\u578b\u6709:\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u548c\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u3002 \u5224\u522b\u65b9\u6cd5\u7531\u6570\u636e\u76f4\u63a5\u5b66\u4e60\u51b3\u7b56\u51fd\u6570 {f(X)} {f(X)} \u6216\u8005\u6761\u4ef6\u6982\u7387\u5206\u5e03 {P(Y|X)} {P(Y|X)} \u4f5c\u4e3a\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u5373\u5224\u522b\u6a21\u578b.\u5224\u522b\u65b9\u6cd5\u5173\u5fc3\u7684\u662f\u5bf9\u7ed9\u5b9a\u7684\u8f93\u5165 {X} {X} \uff0c\u5e94\u8be5\u9884\u6d4b\u4ec0\u4e48\u6837\u7684\u8f93\u51fa {Y} {Y} \u3002\u5178\u578b\u7684\u5224\u522b\u6a21\u578b\u5305\u62eck\u8fd1\u90bb\u6cd5\u3001\u611f\u77e5\u673a\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8c1b\u56de\u5f52\u6a21\u578b\u3001\u6700\u5927\u5ae1\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u548c\u6761\u4ef6\u968f\u673a\u573a\u7b49\u3002 \u7ed9\u5b9a\u8f93\u5165 {X} {X} ,\u751f\u6210\u6a21\u578b\u4e0d\u80fd\u76f4\u63a5\u9884\u6d4b\u51fa\u8f93\u51fa\u7684 {y} {y} \uff0c\u9700\u8981\u8ba1\u7b97\u4e4b\u540e\uff0c\u518d\u6bd4\u8f83\uff08\u6216\u8005\u6c42\u51fa\u7684\u662f\u5404\u79cd\u8f93\u51fa\u53ef\u80fd\u6027\u7684\u6982\u7387\u503c\uff0c\u6700\u5927\u4f5c\u4e3a\u6700\u7ec8\u7684\u6c42\u89e3\u7ed3\u679c\uff09\uff0c\u800c\u5224\u522b\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u7ed9\u51fa\u9884\u6d4b\u7ed3\u679c {y} {y} ,\uff08\u5229\u7528\u5224\u65ad\u89c4\u5219\u6216\u8005\u65b9\u6cd5\uff09\u3002 \u751f\u6210\u65b9\u6cd5\u7684\u7279\u70b9\uff1a \u751f\u6210\u65b9\u6cd5\u53ef\u4ee5\u8fd8\u539f\u51fa\u8054\u5408\u6982\u7387\u5206\u5e03 {P(X,Y)} {P(X,Y)} \uff0c\u800c\u5224\u522b\u65b9\u6cd5\u5219\u4e0d\u80fd\uff1b \u751f\u6210\u65b9\u6cd5\u7684\u5b66\u4e60\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff0c\u5373\u5f53\u6837\u672c\u5bb9\u91cf\u589e\u52a0\u7684\u65f6\u5019\uff0c\u5b66\u5230\u7684\u6a21\u578b\u53ef\u4ee5\u66f4\u5feb\u5730\u6536\u655b\u4e8e\u771f\u5b9e\u6a21\u578b\uff1b \u5f53\u5b58\u5728\u9690\u53d8\u91cf\u65f6\uff0c\u4ecd\u53ef\u4ee5\u7528\u751f\u6210\u65b9\u6cd5\u5b66\u4e60\uff0c\u6b64\u65f6\u5224\u522b\u65b9\u6cd5\u5c31\u4e0d\u80fd\u7528\u3002 \u5224\u522b\u65b9\u6cd5\u7684\u7279\u70b9\uff1a \u76f4\u63a5\u5b66\u4e60\u7684\u662f\u6761\u4ef6\u6982\u7387 {P(Y|X)} {P(Y|X)} \u6216\u51b3\u7b56\u51fd\u6570 {f(X)} {f(X)} \uff0c\u76f4\u63a5\u9762\u5bf9\u9884\u6d4b\uff0c\u5f80\u5f80\u5b66\u4e60\u7684\u51c6\u786e\u7387\u66f4\u9ad8\uff1b \u7531\u4e8e\u76f4\u63a5\u5b66\u4e60 {P(Y|X)} {P(Y|X)} \u6216 {f(X)} {f(X)} \uff0c\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5404\u79cd\u7a0b\u5ea6\u4e0a\u7684\u62bd\u8c61\u3001\u5b9a\u4e49\u7279\u5f81\u5e76\u4f7f\u7528\u7279\u5f81\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b80\u5316\u5b66\u4e60\u95ee\u9898\u3002","title":"\u751f\u6210\u6a21\u578b\u4e0e\u5224\u522b\u6a21\u578b"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_24","text":"TP(True Positive)\u2014\u2014\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570(d); FN(False Negative)\u2014\u2014\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570\u00a9; FP(False Positive)\u2014\u2014\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570(b): TN(True Negative)\u2014\u2014\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570(a). \u7cbe\u786e\u7387\uff1a {P(Positive)=\\frac{TP}{TP+FP}=\\frac{d}{d+b}} {P(Positive)=\\frac{TP}{TP+FP}=\\frac{d}{d+b}} \u53ec\u56de\u7387\uff1a {R(Positive)=\\frac{TP}{TP+FN}= \\frac{d}{d+c)}} {R(Positive)=\\frac{TP}{TP+FN}= \\frac{d}{d+c)}} {F1} {F1} \uff08\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5747\u503c\uff09\uff1a {F_1(Positive)= \\frac{2*P*R}{P+R}} {F_1(Positive)= \\frac{2*P*R}{P+R}} \u540c\u7406\u53ef\u4ee5\u6c42\u5f97 {P(Negative)} {P(Negative)} \u3001 {R(Negative)} {R(Negative)} \u3001 {F1(Negative)} {F1(Negative)} \u8fd9\u4e09\u79cd\u5ea6\u91cf\u4e00\u822c\u7528\u4e8e\u68c0\u6d4b\u6a21\u578b\u5bf9\u6bcf\u4e00\u7c7b\u522b\u7684\u68c0\u6d4b\u6216\u9884\u6d4b\u80fd\u529b\u3002 \u5bf9\u6a21\u578b\u6574\u4f53\u8bc4\u4f30\u5982\u6709\u51c6\u786e\u7387 {AC(accuracy)} {AC(accuracy)} \uff0c {AC= \\frac{a+d}{a+b+c+d}} {AC= \\frac{a+d}{a+b+c+d}} (\u5bf9\u89d2\u7ebf\u5143\u7d20\uff0c\u6b63\u7c7b\u548c\u8d1f\u7c7b\u90fd\u9884\u6d4b\u6b63\u786e\u7684\u6837\u672c\u6570)/(\u6837\u672c\u603b\u6570) \u8fd8\u6709 {ROC} {ROC} \u66f2\u7ebf\u7b49\u3002","title":"\u5206\u7c7b\u95ee\u9898"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_25","text":"\u6807\u6ce8\uff08tagging\uff09\u4e5f\u662f\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u6807\u6ce8\u95ee\u9898\u662f\u5206\u4e86\u95ee\u9898\u7684\u4e00\u4e2a\u63a8\u5e7f\uff0c\u6807\u51c6\u95ee\u9898\u53c8\u662f\u66f4\u590d\u6742\u7684\u7ed3\u6784\u9884\u6d4b\u95ee\u9898\u7684\u7b80\u5355\u5f62\u5f0f\u3002\u6807\u51c6\u95ee\u9898\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u89c2\u6d4b\u5e8f\u5217\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6807\u8bb0\u7cfb\u5217\u6216\u001b\u72b6\u6001\u5e8f\u5217\u3002\u6807\u6ce8\u95ee\u9898\u7684\u76ee\u6807\u5728\u4e8e\u5b66\u4e60\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u5b83\u80fd\u591f\u5bf9\u89c2\u6d4b\u5e8f\u5217\u7ed9\u51fa\u6807\u8bb0\u5e8f\u5217\u4f5c\u4e3a\u9884\u6d4b\u3002\u7279\u5f81\u5e8f\u5217\u7684\u957f\u5ea6\u8981\u8fdc\u5c0f\u4e8e\u7279\u5f81\u6837\u672c\u7684\u4e2a\u6570\u3002 \u8bc4\u4ef7\u6807\u6ce8\u6a21\u578b\u7684\u6307\u6807\u4e0e\u8bc4\u4ef7\u5206\u7c7b\u6a21\u578b\u7684\u6307\u6807\u4e00\u6837\uff0c\u5e38\u7528\u7684\u6709\u6807\u6ce8\u51c6\u786e\u7387\u3001\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\uff0c\u5b9a\u4e49\u4e0e\u5206\u7c7b\u6a21\u578b\u76f8\u540c\u3002\u4f46\u662f\uff0c\u6807\u6ce8\u95ee\u9898\u4e0e\u5206\u7c7b\u95ee\u9898\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\uff0c\u6807\u6ce8\u95ee\u9898\u7684\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u4e00\u4e2a\u6807\u7b7e\u5411\u91cf\uff0c\u5373\u5bf9\u6bcf\u4e00\u4e2a\u7279\u5f81\u90fd\u8fdb\u884c\u5c5e\u6027\u7684\u5224\u65ad\u3002 \u6807\u6ce8\u5e38\u7528\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6709\uff1a\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u3001\u6761\u4ef6\u968f\u673a\u573a\u3002","title":"\u6807\u6ce8\u95ee\u9898"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_26","text":"\u56de\u5f52\u7528\u4e8e\u9884\u6d4b\u8f93\u5165\u53d8\u91cf\uff08\u81ea\u53d8\u91cf\uff09\u548c\u8f93\u51fa\u53d8\u91cf\uff08\u56e0\u53d8\u91cf\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7279\u522b\u662f\u5f53\u8f93\u5165\u53d8\u91cf\u7684\u503c\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8f93\u51fa\u53d8\u91cf\u7684\u503c\u968f\u4e4b\u53d1\u751f\u7684\u53d8\u5316\u3002\u56de\u5f52\u6a21\u578b\u6b63\u662f\u8868\u793a\u4ece\u8f93\u5165\u53d8\u91cf\u5230\u8f93\u51fa\u53d8\u91cf\u4e4b\u95f4\u6620\u5c04\u7684\u51fd\u6570\u3002\u56de\u5f52\u95ee\u9898\u7684\u5b66\u4e60\u7b49\u4ef7\u4e8e\u51fd\u6570\u62df\u5408\uff1a\u9009\u62e9\u4e00\u6761\u51fd\u6570\u66f2\u7ebf\u4f7f\u5176\u5f88\u597d\u5730\u62df\u5408\u5df2\u77e5\u6570\u636e\u4e14\u5f88\u597d\u5730\u9884\u6d4b\u672a\u77e5\u6570\u636e\u3002 \u56de\u5f52\u95ee\u9898\u6309\u7167\u8f93\u5165\u53d8\u91cf\u7684\u4e2a\u6570\uff0c\u5206\u4e3a\u4e00\u5143\u56de\u5f52\u548c\u591a\u5143\u56de\u5f52\uff1b\u6309\u7167\u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u7c7b\u578b\u5373\u6a21\u578b\u7684\u7c7b\u578b\uff0c\u5206\u4e3a\u7ebf\u6027\u56de\u5f52\u548c\u975e\u7ebf\u6027\u56de\u5f52\u3002 \u56de\u5f52\u5b66\u4e60\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u635f\u5931\u51fd\u6570\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u56de\u5f52\u95ee\u9898\u53ef\u4ee5\u7531\u8457\u540d\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08least squares\uff09\u6c42\u89e3\u3002","title":"\u56de\u5f52\u95ee\u9898"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_27","text":"\u7edf\u8ba1\u5b66\u4e60\u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u7684\u4e00\u95e8\u5b66\u79d1\u3002\u7edf\u8ba1\u5b66\u4e60\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20 \u2014\u2014\b\u2014\u2014 \u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\uff0c\u5bf9\u7406\u89e3\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u8d77\u5230\u4e86\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 \u672c\u4e66\u4e3b\u8981\u8ba8\u8bba\u76d1\u7763\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a\u4ece\u7ed9\u5b9a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff0c\u800c\u4e14\u5047\u8bbe\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u5047\u8bbe\u7a7a\u95f4\uff0c\u5e94\u7528\u67d0\u4e00\u4e2a\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u7ed9\u5b9a\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u77e5\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u8bc4\u4ef7\u6807\u51c6\u610f\u4e49\u4e0b\u6709\u6700\u51c6\u786e\u7684\u9884\u6d4b\u3002 \u7edf\u8ba1\u5b66\u4e60\u4e2d\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u6216\u8005\u8bf4\u63d0\u9ad8\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u662f\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002\u5982\u679c\u53ea\u8003\u8651\u51cf\u5c11\u8bad\u7ec3\u8bef\u5dee\uff0c\u5c31\u53ef\u80fd\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002\u6a21\u578b\u9009\u62e9\u7684\u65b9\u6cd5\u6709\u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b66\u4e60\u65b9\u6cd5\u6cdb\u5316\u80fd\u529b\u7684\u5206\u6790\u662f\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u7814\u7a76\u7684\u91cd\u8981\u8bfe\u9898\u3002 \u5206\u7c7b\u95ee\u9898\u3001\u6807\u6ce8\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u90fd\u662f\u76d1\u7763\u5b66\u4e60\u7684\u91cd\u8981\u4e2a\u95ee\u9898\u3002\u672c\u4e66\u8f83\u5c11\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u611f\u77e5\u673a\u3001 {k} {k} \u4e34\u8fd1\u6cd5\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8482\u56de\u5f52\u4e8e\u6700\u5927\u71b5\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u3001 {EM} {EM} \u7b97\u6cd5\u3001\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u548c\u6761\u4ef6\u968f\u673a\u573a\u3002\u8fd9\u4e9b\u65b9\u6cd5\u662f\u4e3b\u8981\u7684\u5206\u7c7b\u3001\u6807\u6ce8\u4ee5\u53ca\u56de\u5f52\u65b9\u6cd5\u3002\u4ed6\u4eec\u53c8\u53ef\u4ee5\u5f52\u7c7b\u4e3a\u751f\u6210\u65b9\u6cd5\u4e0e\u5224\u522b\u65b9\u6cd5\u3002","title":"\u672c\u7ae0\u6982\u8981"},{"location":"\u673a\u5668\u5b66\u4e60/009-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8be6\u7ec6/#_28","text":"\u8bf4\u660e\u4f2f\u52aa\u5229\u6a21\u578b\u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u4ee5\u53ca\u8d1d\u53f6\u65af\u4f30\u8ba1\u4e2d\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\u3002\u4f2f\u52aa\u5229\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u53d6\u503c\u4e3a {0} {0} \u4e0e {1} {1} \u7684\u968f\u673a\u53d8\u91cf\u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002\u5047\u8bbe\u89c2\u6d4b\u5230\u4f2f\u52aa\u5229\u6a21\u578b {n} {n} \u6b21\u72ec\u7acb\u7684\u6570\u636e\u751f\u6210\u7ed3\u679c\uff0c\u5176\u4e2d {k} {k} \u6b21\u7684\u7ed3\u679c\u4e3a {1} {1} \uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6216\u8d1d\u53f6\u65af\u63a8\u7406\u6765\u4f30\u8ba1\u7ed3\u679c\u4e3a {1} {1} \u7684\u6982\u7387\u3002 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u7684\u4e09\u8981\u7d20\u662f\u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\u3002 \u4f2f\u52aa\u5229\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u53d6\u503c\u4e3a {0} {0} \u4e0e {1} {1} \u7684\u968f\u673a\u53d8\u91cf\u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002 \u7edf\u8ba1\u5b66\u5206\u4e3a\u4e24\u6d3e\uff1a\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u548c\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u3002\u4e24\u8005\u7684\u4e0d\u540c\u4e3b\u8981\u662f\uff0c\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u8ba4\u4e3a\u6a21\u578b\u5df2\u5b9a\uff0c\u53c2\u6570\u672a\u77e5\uff0c\u53c2\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u53ea\u662f\u8fd8\u4e0d\u77e5\u9053\uff1b\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u662f\u901a\u8fc7\u89c2\u5bdf\u5230\u7684\u73b0\u8c61\u5bf9\u6982\u7387\u5206\u5e03\u4e2d\u7684\u4e3b\u89c2\u8ba4\u5b9a\u4e0d\u65ad\u8fdb\u884c\u4fee\u6b63\u3002 \u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u548c\u8d1d\u53f6\u65af\u4f30\u8ba1\u7684\u6a21\u578b\u90fd\u662f\u4f2f\u52aa\u5229\u6a21\u578b\u4e5f\u5c31\u662f\u6761\u4ef6\u6982\u7387\u6a21\u578b\uff1b\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u7528\u7684\u662f\u7ecf\u5178\u7edf\u8ba1\u5b66\u6d3e\u7684\u7b56\u7565\uff0c\u8d1d\u53f6\u65af\u4f30\u8ba1\u7528\u7684\u662f\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u6d3e\u7684\u7b56\u7565\uff1b\u4e3a\u4e86\u5f97\u5230\u4f7f\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u7684\u53c2\u6570\u503c\uff0c\u4f7f\u7528\u7684\u7b97\u6cd5\u90fd\u662f\u5bf9\u7ecf\u9a8c\u98ce\u9669\u6c42\u5bfc\uff0c\u4f7f\u5bfc\u6570\u4e3a {0} {0} \u3002 \u5b9a\u4e49\u968f\u673a\u53d8\u91cf {A} {A} \u4e3a\u4e00\u6b21\u4f2f\u52aa\u5229\u8bd5\u9a8c\u7684\u7ed3\u679c\uff0c {A} {A} \u7684\u53d6\u503c\u4e3a {\\{0,1\\}} {\\{0,1\\}} \uff0c\u6982\u7387\u5206\u5e03\u4e3a {P(A)} {P(A)} \uff1a {P(A=1)=\\theta \\ , \\ P(A=0)=1-\\theta} {P(A=1)=\\theta \\ , \\ P(A=0)=1-\\theta} \u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff1a {L(\\theta)=\\prod_{i=1}^{n}P(A_i)=\\theta^k(1-\\theta)^{n-k}} {L(\\theta)=\\prod_{i=1}^{n}P(A_i)=\\theta^k(1-\\theta)^{n-k}} {A_i} {A_i} \u4ee3\u8868\u7b2c {i} {i} \u6b21\u968f\u673a\u8bd5\u9a8c\u3002 {\\theta=arg\\max \\limits_\\theta L(\\theta)=\\frac{k}{n}} {\\theta=arg\\max \\limits_\\theta L(\\theta)=\\frac{k}{n}} {P(\\theta|A_1,A_2,...,A_n)=\\frac{P(A_1,A_2,...A_n|\\theta)\\pi(\\theta)}{P(A_1,A_2,...,A_n)}} {P(\\theta|A_1,A_2,...,A_n)=\\frac{P(A_1,A_2,...A_n|\\theta)\\pi(\\theta)}{P(A_1,A_2,...,A_n)}} \u6839\u636e\u89c2\u5bdf\u5230\u7684\u7ed3\u679c\u4fee\u6b63 {\\theta} {\\theta} \uff0c\u4e5f\u5c31\u662f\u5047\u8bbe {\\theta} {\\theta} \u662f\u968f\u673a\u53d8\u91cf\uff0c\u03b8\u670d\u4ece\u03b2\u5206\u5e03\uff0c\u6709\u5f88\u591a\u4e2a\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u6211\u4eec\u8981\u53d6\u7684\u503c\u65f6\u5728\u5df2\u77e5\u89c2\u5bdf\u7ed3\u679c\u7684\u6761\u4ef6\u4e0b\u4f7f\u03b8\u51fa\u73b0\u6982\u7387\u6700\u5927\u7684\u503c\u3002\u4e0a\u5f0f\u5206\u6bcd\u662f\u4e0d\u53d8\u7684\uff0c\u6c42\u5206\u5b50\u6700\u5927\u5c31\u53ef\u4ee5\u3002 {\\theta = arg\\max \\limits_\\theta {P(A_1,A_2,...A_n|\\theta)P(\\theta)} = arg\\max \\limits_\\theta {\\prod_{i=1}^{n}P(A_i|\\theta)P(\\theta)} =arg \\max \\limits_\\theta {\\theta^k(1-\\theta)^{n-k}\\theta^{a-1}(1-\\theta)^{b-1}}=\\frac{k+(a-1)}{n+(a-1)+(b-1)}} {\\theta = arg\\max \\limits_\\theta {P(A_1,A_2,...A_n|\\theta)P(\\theta)} = arg\\max \\limits_\\theta {\\prod_{i=1}^{n}P(A_i|\\theta)P(\\theta)} =arg \\max \\limits_\\theta {\\theta^k(1-\\theta)^{n-k}\\theta^{a-1}(1-\\theta)^{b-1}}=\\frac{k+(a-1)}{n+(a-1)+(b-1)}} \u901a\u8fc7\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u63a8\u5bfc\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002\u8bc1\u660e\u6a21\u578b\u662f\u6761\u4ef6\u6982\u7387\u5206\u5e03\uff0c\u5f53\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u7b49\u4ef7\u4e8e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u6761\u4ef6\u6982\u7387\u5206\u5e03\u6a21\u578b\u4e0b\uff0c\u5f53\u635f\u5931\u51fd\u6570\u662f\u5bf9\u6570\u635f\u5931\u51fd\u6570\u65f6\uff0c\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\u4e3a\uff1a {\\min \\frac{1}{N} -\\log P(y_i|x_i;\\theta)} {\\min \\frac{1}{N} -\\log P(y_i|x_i;\\theta)} \u5176\u4e2d\uff0c {\\theta \\in \\mathbb{R^n}} {\\theta \\in \\mathbb{R^n}} \u8868\u793a\u6a21\u578b\u53c2\u6570\u3002 \u7531\u7ecf\u9a8c\u5316\u98ce\u9669\u6700\u5c0f\u5316\uff0c\u6709\uff1a {\\hat{\\theta}_{ERM} = \\arg \\min_{\\theta \\in \\mathbb{R^n}} \\frac{1}{N} \\sum_{i=1}^{N} -\\log P(y_i|x_i;\\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_i|x_i;\\theta)} {\\hat{\\theta}_{ERM} = \\arg \\min_{\\theta \\in \\mathbb{R^n}} \\frac{1}{N} \\sum_{i=1}^{N} -\\log P(y_i|x_i;\\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_i|x_i;\\theta)} \u800c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a {\\max P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) } {\\max P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) } \u5047\u8bbe\u6837\u672c\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u5219\u6709\uff1a {P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\frac{P(y_1, y_2, \\cdots, y_N,x_1, x_2, \\cdots, x_N; \\theta)}{P(x_1, x_2, \\cdots, x_N; \\theta)} = \\frac{\\prod_{i=1}^{N} P(y_i, x_i;\\theta)}{\\prod_{i=1}^{N} P(x_i;\\theta)} = \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} {P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\frac{P(y_1, y_2, \\cdots, y_N,x_1, x_2, \\cdots, x_N; \\theta)}{P(x_1, x_2, \\cdots, x_N; \\theta)} = \\frac{\\prod_{i=1}^{N} P(y_i, x_i;\\theta)}{\\prod_{i=1}^{N} P(x_i;\\theta)} = \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} \u4ece\u800c\uff0c {\\hat{\\theta}_{ML} = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} \\prod_{i=1}^{N} P(y_i|x_i;\\theta)} {\\hat{\\theta}_{ML} = \\arg \\max_{\\theta \\in \\mathbb{R^n}} P(y_1, y_2, \\cdots, y_N|x_1, x_2, \\cdots, x_N; \\theta) = \\arg \\max_{\\theta \\in \\mathbb{R^n}} \\prod_{i=1}^{N} P(y_i|x_i;\\theta)}","title":"\u4e60\u9898"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/","text":"\u7b2c1\u7ae0 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba \u00b6 1\uff0e\u7edf\u8ba1\u5b66\u4e60\u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u7684\u4e00\u95e8\u5b66\u79d1\u3002\u7edf\u8ba1\u5b66\u4e60\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002 2\uff0e\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\u2014\u2014\u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\uff0c\u5bf9\u7406\u89e3\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u8d77\u5230\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 3\uff0e\u672c\u4e66\u4e3b\u8981\u8ba8\u8bba\u76d1\u7763\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a\u4ece\u7ed9\u5b9a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u51fa\u53d1\uff0c \u5047\u8bbe\u6570\u636e\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff0c\u800c\u4e14\u5047\u8bbe\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u5047\u8bbe\u7a7a\u95f4\uff0c\u5e94\u7528\u67d0\u4e00\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u7ed9\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u77e5\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u8bc4\u4ef7\u6807\u51c6\u610f\u4e49\u4e0b\u6709\u6700\u51c6\u786e\u7684\u9884\u6d4b\u3002 4\uff0e\u7edf\u8ba1\u5b66\u4e60\u4e2d\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u6216\u8005\u8bf4\u63d0\u9ad8\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u662f\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002\u5982\u679c\u53ea\u8003\u8651\u51cf\u5c11\u8bad\u7ec3\u8bef\u5dee\uff0c\u5c31\u53ef\u80fd\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002\u6a21\u578b\u9009\u62e9\u7684\u65b9\u6cd5\u6709\u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b66\u4e60\u65b9\u6cd5\u6cdb\u5316\u80fd\u529b\u7684\u5206\u6790\u662f\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u7814\u7a76\u7684\u91cd\u8981\u8bfe\u9898\u3002 5\uff0e\u5206\u7c7b\u95ee\u9898\u3001\u6807\u6ce8\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u90fd\u662f\u76d1\u7763\u5b66\u4e60\u7684\u91cd\u8981\u95ee\u9898\u3002\u672c\u4e66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u611f\u77e5\u673a\u3001 k k \u8fd1\u90bb\u6cd5\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8c1b\u56de\u5f52\u4e0e\u6700\u5927\u71b5\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u3001EM\u7b97\u6cd5\u3001\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u548c\u6761\u4ef6\u968f\u673a\u573a\u3002\u8fd9\u4e9b\u65b9\u6cd5\u662f\u4e3b\u8981\u7684\u5206\u7c7b\u3001\u6807\u6ce8\u4ee5\u53ca\u56de\u5f52\u65b9\u6cd5\u3002\u5b83\u4eec\u53c8\u53ef\u4ee5\u5f52\u7c7b\u4e3a\u751f\u6210\u65b9\u6cd5\u4e0e\u5224\u522b\u65b9\u6cd5\u3002 \u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u62df\u548c\u66f2\u7ebf \u00b6 \u9ad8\u65af\u4e8e1823\u5e74\u5728\u8bef\u5dee e_1,\u2026,e_n e_1,\u2026,e_n \u72ec\u7acb\u540c\u5206\u5e03\u7684\u5047\u5b9a\u4e0b,\u8bc1\u660e\u4e86\u6700\u5c0f\u4e8c\u4e58\u65b9\u6cd5\u7684\u4e00\u4e2a\u6700\u4f18\u6027\u8d28: \u5728\u6240\u6709\u65e0\u504f\u7684\u7ebf\u6027\u4f30\u8ba1\u7c7b\u4e2d,\u6700\u5c0f\u4e8c\u4e58\u65b9\u6cd5\u662f\u5176\u4e2d\u65b9\u5dee\u6700\u5c0f\u7684\uff01 \u5bf9\u4e8e\u6570\u636e (x_i, y_i) (i=1, 2, 3...,m) (x_i, y_i) (i=1, 2, 3...,m) \u62df\u5408\u51fa\u51fd\u6570 h(x) h(x) \u6709\u8bef\u5dee\uff0c\u5373\u6b8b\u5dee\uff1a r_i=h(x_i)-y_i r_i=h(x_i)-y_i \u6b64\u65f6 L2 L2 \u8303\u6570(\u6b8b\u5dee\u5e73\u65b9\u548c)\u6700\u5c0f\u65f6\uff0c h(x) h(x) \u548c y y \u76f8\u4f3c\u5ea6\u6700\u9ad8\uff0c\u66f4\u62df\u5408 \u4e00\u822c\u7684 H(x) H(x) \u4e3a n n \u6b21\u7684\u591a\u9879\u5f0f\uff0c H(x)=w_0+w_1x+w_2x^2+...w_nx^n H(x)=w_0+w_1x+w_2x^2+...w_nx^n w(w_0,w_1,w_2,...,w_n) w(w_0,w_1,w_2,...,w_n) \u4e3a\u53c2\u6570 \u6700\u5c0f\u4e8c\u4e58\u6cd5\u5c31\u662f\u8981\u627e\u5230\u4e00\u7ec4 w(w_0,w_1,w_2,...,w_n) w(w_0,w_1,w_2,...,w_n) \uff0c\u4f7f\u5f97 \\sum_{i=1}^n(h(x_i)-y_i)^2 \\sum_{i=1}^n(h(x_i)-y_i)^2 (\u6b8b\u5dee\u5e73\u65b9\u548c) \u6700\u5c0f \u5373\uff0c\u6c42 min\\sum_{i=1}^n(h(x_i)-y_i)^2 min\\sum_{i=1}^n(h(x_i)-y_i)^2 \u4e3e\u4f8b\uff1a\u6211\u4eec\u7528\u76ee\u6807\u51fd\u6570 y=sin2{\\pi}x y=sin2{\\pi}x , \u52a0\u4e0a\u4e00\u4e2a\u6b63\u6001\u5206\u5e03\u7684\u566a\u97f3\u5e72\u6270\uff0c\u7528\u591a\u9879\u5f0f\u53bb\u62df\u5408\u3010\u4f8b1.1 11\u9875\u3011 import numpy as np import scipy as sp #\u7ebf\u6027\u4ee3\u6570\u7684\u5904\u7406\u5305 from scipy.optimize import leastsq import matplotlib.pyplot as plt % matplotlib inline ps: numpy.poly1d([1,2,3]) \u751f\u6210 1x^2+2x^1+3x^0 1x^2+2x^1+3x^0 * # \u76ee\u6807\u51fd\u6570 def real_func ( x ): return np . sin ( 2 * np . pi * x ) # \u591a\u9879\u5f0f def fit_func ( p , x ): #p\u662f\u4e00\u4e2a\u5217\u8868 f = np . poly1d ( p ) return f ( x ) # \u6b8b\u5dee def residuals_func ( p , x , y ): ret = fit_func ( p , x ) - y return ret # \u5341\u4e2a\u70b9 x = np . linspace ( 0 , 1 , 10 ) x_points = np . linspace ( 0 , 1 , 1000 ) # \u52a0\u4e0a\u6b63\u6001\u5206\u5e03\u566a\u97f3\u7684\u76ee\u6807\u51fd\u6570\u7684\u503c y_ = real_func ( x ) y = [ np . random . normal ( 0 , 0.1 ) + y1 for y1 in y_ ] def fitting ( M = 0 ): \"\"\" M \u4e3a \u591a\u9879\u5f0f\u7684\u6b21\u6570 \"\"\" # \u968f\u673a\u521d\u59cb\u5316\u591a\u9879\u5f0f\u53c2\u6570 p_init = np . random . rand ( M + 1 ) # \u6700\u5c0f\u4e8c\u4e58\u6cd5 p_lsq = leastsq ( residuals_func , p_init , args = ( x , y )) #Scipy\u4e2d\u6700\u5c0f\u4e8c\u4e58\u51fd\u6570leastsq\uff08\uff09.\u8bef\u5dee\u51fd\u6570,\u53c2\u6570,\u6837\u672c print ( 'Fitting Parameters:' , p_lsq [ 0 ]) # \u53ef\u89c6\u5316 plt . plot ( x_points , real_func ( x_points ), label = 'real' ) plt . plot ( x_points , fit_func ( p_lsq [ 0 ], x_points ), label = 'fitted curve' ) plt . plot ( x , y , 'bo' , label = 'noise' ) plt . legend () return p_lsq M=0 \u00b6 # M=0 p_lsq_0 = fitting ( M = 0 ) Fitting Parameters: [0.01170132] M=1 \u00b6 # M=1 p_lsq_1 = fitting ( M = 1 ) Fitting Parameters: [-1.35280561 0.68810412] M=3 \u00b6 # M=3 p_lsq_3 = fitting ( M = 3 ) Fitting Parameters: [ 2.05388434e+01 -3.06589850e+01 1.01873054e+01 2.34964215e-04] M=9 \u00b6 # M=9 p_lsq_9 = fitting ( M = 9 ) Fitting Parameters: [-7.82939078e+03 3.69175896e+04 -7.35800852e+04 8.04229659e+04 -5.22984941e+04 2.05368707e+04 -4.69766563e+03 5.47021480e+02 -1.88778866e+01 5.93666711e-02] \u5f53M=9\u65f6\uff0c\u591a\u9879\u5f0f\u66f2\u7ebf\u901a\u8fc7\u4e86\u6bcf\u4e2a\u6570\u636e\u70b9\uff0c\u4f46\u662f\u9020\u6210\u4e86\u8fc7\u62df\u5408 \u6b63\u5219\u5316 \u00b6 \u7ed3\u679c\u663e\u793a\u8fc7\u62df\u5408\uff0c \u5f15\u5165\u6b63\u5219\u5316\u9879(regularizer)\uff0c\u964d\u4f4e\u8fc7\u62df\u5408 Q(x)=\\sum_{i=1}^n(h(x_i)-y_i)^2+\\lambda||w||^2 Q(x)=\\sum_{i=1}^n(h(x_i)-y_i)^2+\\lambda||w||^2 \u3002 \u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u635f\u5931\uff0c\u6b63\u5219\u5316\u53ef\u4ee5\u662f\u53c2\u6570\u5411\u91cf\u7684L2\u8303\u6570,\u4e5f\u53ef\u4ee5\u662fL1\u8303\u6570\u3002 L1: regularization*abs(p) L2: 0.5 * regularization * np.square(p) regularization = 0.0001 def residuals_func_regularization ( p , x , y ): ret = fit_func ( p , x ) - y ret = np . append ( ret , np . sqrt ( 0.5 * regularization * np . square ( p ))) # L2\u8303\u6570\u4f5c\u4e3a\u6b63\u5219\u5316\u9879 return ret # \u6700\u5c0f\u4e8c\u4e58\u6cd5,\u52a0\u6b63\u5219\u5316\u9879 p_init = np . random . rand ( 9 + 1 ) p_lsq_regularization = leastsq ( residuals_func_regularization , p_init , args = ( x , y )) plt . plot ( x_points , real_func ( x_points ), label = 'real' ) plt . plot ( x_points , fit_func ( p_lsq_9 [ 0 ], x_points ), label = 'fitted curve' ) plt . plot ( x_points , fit_func ( p_lsq_regularization [ 0 ], x_points ), label = 'regularization' ) plt . plot ( x , y , 'bo' , label = 'noise' ) plt . legend () <matplotlib.legend.Legend at 0x1a6b7b22da0>","title":"010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#1","text":"1\uff0e\u7edf\u8ba1\u5b66\u4e60\u662f\u5173\u4e8e\u8ba1\u7b97\u673a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u6982\u7387\u7edf\u8ba1\u6a21\u578b\u5e76\u8fd0\u7528\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u7684\u4e00\u95e8\u5b66\u79d1\u3002\u7edf\u8ba1\u5b66\u4e60\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002 2\uff0e\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20\u2014\u2014\u6a21\u578b\u3001\u7b56\u7565\u3001\u7b97\u6cd5\uff0c\u5bf9\u7406\u89e3\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u8d77\u5230\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 3\uff0e\u672c\u4e66\u4e3b\u8981\u8ba8\u8bba\u76d1\u7763\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a\u4ece\u7ed9\u5b9a\u6709\u9650\u7684\u8bad\u7ec3\u6570\u636e\u51fa\u53d1\uff0c \u5047\u8bbe\u6570\u636e\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff0c\u800c\u4e14\u5047\u8bbe\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u5047\u8bbe\u7a7a\u95f4\uff0c\u5e94\u7528\u67d0\u4e00\u8bc4\u4ef7\u51c6\u5219\uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u6a21\u578b\uff0c\u4f7f\u5b83\u5bf9\u5df2\u7ed9\u8bad\u7ec3\u6570\u636e\u53ca\u672a\u77e5\u6d4b\u8bd5\u6570\u636e\u5728\u7ed9\u5b9a\u8bc4\u4ef7\u6807\u51c6\u610f\u4e49\u4e0b\u6709\u6700\u51c6\u786e\u7684\u9884\u6d4b\u3002 4\uff0e\u7edf\u8ba1\u5b66\u4e60\u4e2d\uff0c\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u6216\u8005\u8bf4\u63d0\u9ad8\u5b66\u4e60\u7684\u6cdb\u5316\u80fd\u529b\u662f\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002\u5982\u679c\u53ea\u8003\u8651\u51cf\u5c11\u8bad\u7ec3\u8bef\u5dee\uff0c\u5c31\u53ef\u80fd\u4ea7\u751f\u8fc7\u62df\u5408\u73b0\u8c61\u3002\u6a21\u578b\u9009\u62e9\u7684\u65b9\u6cd5\u6709\u6b63\u5219\u5316\u4e0e\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b66\u4e60\u65b9\u6cd5\u6cdb\u5316\u80fd\u529b\u7684\u5206\u6790\u662f\u7edf\u8ba1\u5b66\u4e60\u7406\u8bba\u7814\u7a76\u7684\u91cd\u8981\u8bfe\u9898\u3002 5\uff0e\u5206\u7c7b\u95ee\u9898\u3001\u6807\u6ce8\u95ee\u9898\u548c\u56de\u5f52\u95ee\u9898\u90fd\u662f\u76d1\u7763\u5b66\u4e60\u7684\u91cd\u8981\u95ee\u9898\u3002\u672c\u4e66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5305\u62ec\u611f\u77e5\u673a\u3001 k k \u8fd1\u90bb\u6cd5\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u3001\u51b3\u7b56\u6811\u3001\u903b\u8f91\u65af\u8c1b\u56de\u5f52\u4e0e\u6700\u5927\u71b5\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\u3001\u63d0\u5347\u65b9\u6cd5\u3001EM\u7b97\u6cd5\u3001\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u548c\u6761\u4ef6\u968f\u673a\u573a\u3002\u8fd9\u4e9b\u65b9\u6cd5\u662f\u4e3b\u8981\u7684\u5206\u7c7b\u3001\u6807\u6ce8\u4ee5\u53ca\u56de\u5f52\u65b9\u6cd5\u3002\u5b83\u4eec\u53c8\u53ef\u4ee5\u5f52\u7c7b\u4e3a\u751f\u6210\u65b9\u6cd5\u4e0e\u5224\u522b\u65b9\u6cd5\u3002","title":"\u7b2c1\u7ae0 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#_1","text":"\u9ad8\u65af\u4e8e1823\u5e74\u5728\u8bef\u5dee e_1,\u2026,e_n e_1,\u2026,e_n \u72ec\u7acb\u540c\u5206\u5e03\u7684\u5047\u5b9a\u4e0b,\u8bc1\u660e\u4e86\u6700\u5c0f\u4e8c\u4e58\u65b9\u6cd5\u7684\u4e00\u4e2a\u6700\u4f18\u6027\u8d28: \u5728\u6240\u6709\u65e0\u504f\u7684\u7ebf\u6027\u4f30\u8ba1\u7c7b\u4e2d,\u6700\u5c0f\u4e8c\u4e58\u65b9\u6cd5\u662f\u5176\u4e2d\u65b9\u5dee\u6700\u5c0f\u7684\uff01 \u5bf9\u4e8e\u6570\u636e (x_i, y_i) (i=1, 2, 3...,m) (x_i, y_i) (i=1, 2, 3...,m) \u62df\u5408\u51fa\u51fd\u6570 h(x) h(x) \u6709\u8bef\u5dee\uff0c\u5373\u6b8b\u5dee\uff1a r_i=h(x_i)-y_i r_i=h(x_i)-y_i \u6b64\u65f6 L2 L2 \u8303\u6570(\u6b8b\u5dee\u5e73\u65b9\u548c)\u6700\u5c0f\u65f6\uff0c h(x) h(x) \u548c y y \u76f8\u4f3c\u5ea6\u6700\u9ad8\uff0c\u66f4\u62df\u5408 \u4e00\u822c\u7684 H(x) H(x) \u4e3a n n \u6b21\u7684\u591a\u9879\u5f0f\uff0c H(x)=w_0+w_1x+w_2x^2+...w_nx^n H(x)=w_0+w_1x+w_2x^2+...w_nx^n w(w_0,w_1,w_2,...,w_n) w(w_0,w_1,w_2,...,w_n) \u4e3a\u53c2\u6570 \u6700\u5c0f\u4e8c\u4e58\u6cd5\u5c31\u662f\u8981\u627e\u5230\u4e00\u7ec4 w(w_0,w_1,w_2,...,w_n) w(w_0,w_1,w_2,...,w_n) \uff0c\u4f7f\u5f97 \\sum_{i=1}^n(h(x_i)-y_i)^2 \\sum_{i=1}^n(h(x_i)-y_i)^2 (\u6b8b\u5dee\u5e73\u65b9\u548c) \u6700\u5c0f \u5373\uff0c\u6c42 min\\sum_{i=1}^n(h(x_i)-y_i)^2 min\\sum_{i=1}^n(h(x_i)-y_i)^2 \u4e3e\u4f8b\uff1a\u6211\u4eec\u7528\u76ee\u6807\u51fd\u6570 y=sin2{\\pi}x y=sin2{\\pi}x , \u52a0\u4e0a\u4e00\u4e2a\u6b63\u6001\u5206\u5e03\u7684\u566a\u97f3\u5e72\u6270\uff0c\u7528\u591a\u9879\u5f0f\u53bb\u62df\u5408\u3010\u4f8b1.1 11\u9875\u3011 import numpy as np import scipy as sp #\u7ebf\u6027\u4ee3\u6570\u7684\u5904\u7406\u5305 from scipy.optimize import leastsq import matplotlib.pyplot as plt % matplotlib inline ps: numpy.poly1d([1,2,3]) \u751f\u6210 1x^2+2x^1+3x^0 1x^2+2x^1+3x^0 * # \u76ee\u6807\u51fd\u6570 def real_func ( x ): return np . sin ( 2 * np . pi * x ) # \u591a\u9879\u5f0f def fit_func ( p , x ): #p\u662f\u4e00\u4e2a\u5217\u8868 f = np . poly1d ( p ) return f ( x ) # \u6b8b\u5dee def residuals_func ( p , x , y ): ret = fit_func ( p , x ) - y return ret # \u5341\u4e2a\u70b9 x = np . linspace ( 0 , 1 , 10 ) x_points = np . linspace ( 0 , 1 , 1000 ) # \u52a0\u4e0a\u6b63\u6001\u5206\u5e03\u566a\u97f3\u7684\u76ee\u6807\u51fd\u6570\u7684\u503c y_ = real_func ( x ) y = [ np . random . normal ( 0 , 0.1 ) + y1 for y1 in y_ ] def fitting ( M = 0 ): \"\"\" M \u4e3a \u591a\u9879\u5f0f\u7684\u6b21\u6570 \"\"\" # \u968f\u673a\u521d\u59cb\u5316\u591a\u9879\u5f0f\u53c2\u6570 p_init = np . random . rand ( M + 1 ) # \u6700\u5c0f\u4e8c\u4e58\u6cd5 p_lsq = leastsq ( residuals_func , p_init , args = ( x , y )) #Scipy\u4e2d\u6700\u5c0f\u4e8c\u4e58\u51fd\u6570leastsq\uff08\uff09.\u8bef\u5dee\u51fd\u6570,\u53c2\u6570,\u6837\u672c print ( 'Fitting Parameters:' , p_lsq [ 0 ]) # \u53ef\u89c6\u5316 plt . plot ( x_points , real_func ( x_points ), label = 'real' ) plt . plot ( x_points , fit_func ( p_lsq [ 0 ], x_points ), label = 'fitted curve' ) plt . plot ( x , y , 'bo' , label = 'noise' ) plt . legend () return p_lsq","title":"\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u62df\u548c\u66f2\u7ebf"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#m0","text":"# M=0 p_lsq_0 = fitting ( M = 0 ) Fitting Parameters: [0.01170132]","title":"M=0"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#m1","text":"# M=1 p_lsq_1 = fitting ( M = 1 ) Fitting Parameters: [-1.35280561 0.68810412]","title":"M=1"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#m3","text":"# M=3 p_lsq_3 = fitting ( M = 3 ) Fitting Parameters: [ 2.05388434e+01 -3.06589850e+01 1.01873054e+01 2.34964215e-04]","title":"M=3"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#m9","text":"# M=9 p_lsq_9 = fitting ( M = 9 ) Fitting Parameters: [-7.82939078e+03 3.69175896e+04 -7.35800852e+04 8.04229659e+04 -5.22984941e+04 2.05368707e+04 -4.69766563e+03 5.47021480e+02 -1.88778866e+01 5.93666711e-02] \u5f53M=9\u65f6\uff0c\u591a\u9879\u5f0f\u66f2\u7ebf\u901a\u8fc7\u4e86\u6bcf\u4e2a\u6570\u636e\u70b9\uff0c\u4f46\u662f\u9020\u6210\u4e86\u8fc7\u62df\u5408","title":"M=9"},{"location":"\u673a\u5668\u5b66\u4e60/010-\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5--\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u6982\u8bba\u8981\u70b9\u52a0\u4ee3\u7801/#_2","text":"\u7ed3\u679c\u663e\u793a\u8fc7\u62df\u5408\uff0c \u5f15\u5165\u6b63\u5219\u5316\u9879(regularizer)\uff0c\u964d\u4f4e\u8fc7\u62df\u5408 Q(x)=\\sum_{i=1}^n(h(x_i)-y_i)^2+\\lambda||w||^2 Q(x)=\\sum_{i=1}^n(h(x_i)-y_i)^2+\\lambda||w||^2 \u3002 \u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u635f\u5931\uff0c\u6b63\u5219\u5316\u53ef\u4ee5\u662f\u53c2\u6570\u5411\u91cf\u7684L2\u8303\u6570,\u4e5f\u53ef\u4ee5\u662fL1\u8303\u6570\u3002 L1: regularization*abs(p) L2: 0.5 * regularization * np.square(p) regularization = 0.0001 def residuals_func_regularization ( p , x , y ): ret = fit_func ( p , x ) - y ret = np . append ( ret , np . sqrt ( 0.5 * regularization * np . square ( p ))) # L2\u8303\u6570\u4f5c\u4e3a\u6b63\u5219\u5316\u9879 return ret # \u6700\u5c0f\u4e8c\u4e58\u6cd5,\u52a0\u6b63\u5219\u5316\u9879 p_init = np . random . rand ( 9 + 1 ) p_lsq_regularization = leastsq ( residuals_func_regularization , p_init , args = ( x , y )) plt . plot ( x_points , real_func ( x_points ), label = 'real' ) plt . plot ( x_points , fit_func ( p_lsq_9 [ 0 ], x_points ), label = 'fitted curve' ) plt . plot ( x_points , fit_func ( p_lsq_regularization [ 0 ], x_points ), label = 'regularization' ) plt . plot ( x , y , 'bo' , label = 'noise' ) plt . legend () <matplotlib.legend.Legend at 0x1a6b7b22da0>","title":"\u6b63\u5219\u5316"},{"location":"\u673a\u5668\u5b66\u4e60/011-\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee-\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3/","text":"\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee/\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3 \u00b6 \u5728\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6a21\u578b\u65f6,\u5bf9\u4e8e\u6570\u636e\u96c6\u7684\u5212\u5206\u5176\u5b9e\u662f\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6b65\u9aa4.\u5982\u679c\u6570\u636e\u96c6\u5212\u5206\u51fa\u73b0\u95ee\u9898,\u90a3\u4e48\u5c06\u4f1a\u5bfc\u81f4**\u6a21\u578b\u8fc7\u62df\u5408(over fitting)\u6216\u8005\u6b20\u62df\u5408(under fitting)**.\u6bd4\u5982\u4e00\u6b21\u82f9\u679c\u54c1\u8d28\u5224\u65ad\u6a21\u578b\u8bad\u7ec3\u4e2d,\u521a\u597d\u628a\u5177\u6709\u6591\u70b9\u5c5e\u6027\u7684\u597d\u82f9\u679c\u5168\u90e8\u5212\u5206\u5230\u4e86train_data\u4e2d,\u90a3\u4e48\u8fd9\u6b21\u8bad\u7ec3\u4f1a\u7531\u6b64\u5bfc\u81f4\u8fc7\u62df\u5408\u7684\u53d1\u751f. \u90a3\u4e48\u5982\u4f55\u66f4\u597d\u5730\u8bc4\u4f30\u6a21\u578b,\u4ece\u800c\u6839\u636e\u8bc4\u4f30\u7ed3\u679c\u8fdb\u884c\u6a21\u578b\u5224\u65ad\u5462? \u00b6 \u5f53\u7136\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u91c7\u7528\u9f0e\u9f0e\u5927\u540d\u7684K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5. \u5728K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u4e2d\u4e5f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898,k\u5982\u4f55\u53d6\u503c? k\u53d6\u503c\u8d8a\u5927,\u5373\u6837\u672c\u88ab\u5212\u5206\u7528\u6765\u8bad\u7ec3\u7684\u6b21\u6570\u4e5f\u5c31\u8d8a\u591a,\u4fdd\u8bc1\u4e86\u5145\u5206\u5229\u7528\u6240\u6709\u7684\u6837\u672c. \u5e26\u6765\u7684\u540e\u679c\u662f\u7531\u504f\u5deebias\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u964d\u4f4e, \u7531\u65b9\u5deevariance\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u589e\u52a0,\u540c\u65f6\u8fd8\u589e\u52a0\u4e86\u8ba1\u7b97\u91cf.\u603b\u7684\u6765\u8bf4\u5c31\u662f\u8fc7\u62df\u5408(over fitting). k\u503c\u53d6\u5f97\u8d8a\u5c0f,\u5373\u6837\u672c\u88ab\u5212\u5206\u7528\u6765\u8bad\u7ec3\u7684\u6b21\u6570\u4e5f\u5c31\u8d8a\u5c11,\u6ca1\u6709\u4fdd\u8bc1\u6837\u672c\u88ab\u5145\u5206\u5229\u7528,\u6b64\u65f6,\u6a21\u578b\u8fd8\u6ca1\u6709\u5b66\u5230\u8db3\u591f\u591a\u7684\u4fe1\u606f. \u5e26\u6765\u7684\u540e\u679c\u662f\u7531\u504f\u5deebias\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u589e\u52a0, \u7531\u65b9\u5deevariance\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u964d\u4f4e.\u603b\u7684\u6765\u8bf4\u5c31\u662f\u6b20\u62df\u5408(under fitting). \u6839\u636e\u7ecf\u9a8c,k\u4e00\u822c\u53d65\u6216\u800510. \u504f\u5dee\u548c\u53cd\u5dee\u53c8\u662f\u4ec0\u4e48\u5462? \u4e00\u5f20\u56fe\u5c31\u80fd\u770b\u61c2. \u504f\u5dee(bias)\u8861\u91cf\u7684\u662f\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u7a0b\u5ea6(\u6b20\u62df\u5408\u662f\u5bfc\u81f4\u504f\u5dee\u7684\u4e3b\u8981\u539f\u56e0\u504f\u5dee\u8d8a\u5927,\u5373\u8bad\u7ec3\u7684\u7ed3\u679c\u79bb\u771f\u5b9e\u6837\u672c\u5c31\u5dee\u8fdc): \u504f\u5dee\u8fc7\u4e8e\u4f4e,\u4ec5\u4ee3\u8868\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u5b8c\u7f8e\u62df\u5408,\u610f\u5473\u7740\u6a21\u578b\u5341\u5206\u590d\u6742,\u5df2\u7ecf\u8fc7\u62df\u5408(overfitting).\u4e00\u65e6\u6570\u636e\u6709\u4efb\u4f55\u7684\u98ce\u5439\u8349\u52a8,\u6a21\u578b\u5c31\u4f1a\u8ddf\u7740\u53d1\u751f\u663e\u8457\u53d8\u5316,\u8bf4\u660e\u6a21\u578b\u5e76\u4e0d\u5177\u6709\u666e\u9002\u6027,\u5df2\u7ecf\u8fc7\u4e8e\u590d\u6742\u4e86. \u504f\u5dee\u8d8a\u9ad8\u8bf4\u660e\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u8fd8\u4e0d\u5230\u4f4d,\u6a21\u578b\u8fd8\u8fc7\u4e8e\u7b80\u964b,\u5c5e\u4e8e\u6b20\u62df\u5408.\u5bfc\u81f4\u8fd9\u4e00\u60c5\u51b5\u53d1\u751f\u7684\u4e3b\u8981\u539f\u56e0\u4e00\u822c\u662f\u5bf9\u95ee\u9898\u672c\u8eab\u7684\u5047\u8bbe\u4e0d\u6b63\u786e(\u4f8b\u5982\u4e8c\u9636\u591a\u9879\u5f0f\u56de\u5f52\u62df\u5408\u7684\u95ee\u9898,\u91c7\u7528\u4e86\u4e00\u9636\u7ebf\u6027\u56de\u5f52\u8fdb\u884c\u89e3\u51b3),\u4ea6\u6216\u8005\u662f\u5bf9\u4e8e\u7279\u5f81\u7684\u9009\u53d6\u51fa\u73b0\u95ee\u9898(\u4f8b\u5982\u9884\u6d4b\u5b66\u751f\u6210\u7ee9,\u9009\u7528\u7684\u7279\u5f81\u5374\u662f\u5b66\u751f\u540d\u5b57). \u65b9\u5dee(variance)\u63cf\u8ff0\u7684\u662f\u8bad\u7ec3\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0,\u5373\u4e3b\u8981\u662f\u6cdb\u5316\u6027\u80fd\u7684\u4f53\u73b0, \u65b9\u5dee\u8d8a\u5927\u8bf4\u660e\u6a21\u578b\u8d8a\u590d\u6742\u8d8a\u662f\u8fc7\u62df\u5408,\u5bb9\u6613\u53d7\u5230\u6270\u52a8. \u56e0\u6b64,\u8981\u6c42variance\u8d8a\u5c0f\u8d8a\u597d.\u4e3a\u4e86\u964d\u4f4e\u65b9\u5dee,\u5c31\u9700\u8981\u7b80\u5316\u6a21\u578b,\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570,\u4f46\u662f\u8fd9\u6837\u53c8\u5bb9\u6613\u6b20\u62df\u5408(under fitting). \u56e0\u6b64\u53ef\u4ee5\u53d1\u73b0\u504f\u5dee\u548c\u65b9\u5dee\u662f\u4e0d\u53ef\u80fd\u540c\u65f6\u6700\u4f18\u7684,\u53ea\u80fd\u5c3d\u91cf\u9009\u62e9\u51fa\u6cdb\u5316\u8bef\u5deeError\u6700\u5c0f\u7684\u7ec4\u5408,\u56e0\u4e3a\u6cdb\u5316Error = Bias + Variance. \u6709\u4e00\u4e9b\u7b97\u6cd5\u5929\u751f\u5c31\u662f\u9ad8\u65b9\u5dee\u7684\u7b97\u6cd5:KNN \u901a\u5e38\u6765\u8bf4,\u975e\u53c2\u6570\u5b66\u4e60\u901a\u5e38\u90fd\u662f\u9ad8\u65b9\u5dee\u7b97\u6cd5.\u56e0\u4e3a\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u975e\u5e38\u654f\u611f. \u6709\u4e00\u4e9b\u7b97\u6cd5\u5929\u751f\u5c31\u662f\u9ad8\u504f\u5dee\u7b97\u6cd5:\u7ebf\u6027\u56de\u5f52 \u53c2\u6570\u5b66\u4e60\u901a\u5e38\u90fd\u662f\u9ad8\u504f\u5dee\u7b97\u6cd5.\u56e0\u4e3a\u9009\u53d6\u65f6\u6a21\u578b\u672c\u8eab\u5177\u6709\u6781\u5f3a\u7684\u5047\u8bbe\u6027. \u4f46\u662f,\u5927\u591a\u6570\u7b97\u6cd5\u5177\u6709\u76f8\u5e94\u7684\u53c2\u6570,\u53ef\u4ee5\u8c03\u6574\u504f\u5dee\u548c\u65b9\u5dee.\u4f8b\u5982KNN\u4e2d\u7684k\u548c\u7ebf\u6027\u56de\u5f52\u4e2d\u7684\u7279\u5f81\u7684\u9636\u6570. \u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218,\u6765\u81ea\u4e8e\u65b9\u5dee! \u56e0\u4e3a\u8fc7\u62df\u5408\u95ee\u9898\u662f\u6a21\u578b\u8bad\u7ec3\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898. \u89e3\u51b3\u9ad8\u65b9\u5dee\u7684\u624b\u6bb5: \u964d\u4f4e\u6a21\u578b\u590d\u6742\u5ea6 : \u9632\u6b62\u8fc7\u62df\u5408 \u51cf\u5c11\u6570\u636e\u7ef4\u5ea6,\u964d\u566a : \u5c3d\u91cf\u51cf\u5c11\u7b97\u6cd5\u5b66\u4e60\u5230\u7684\u566a\u97f3\u4fe1\u606f \u589e\u52a0\u6837\u672c\u6570\u76ee : \u7b97\u6cd5\u6a21\u578b\u592a\u8fc7\u590d\u6742\u65f6,\u5fc5\u8981\u7684\u53c2\u6570\u8fc7\u591a,\u4f46\u662f\u6837\u672c\u6570\u76ee\u592a\u5c11,\u4e0d\u8db3\u4ee5\u5b66\u4e60\u5230\u6700\u4f18\u7684\u53c2\u6570. \u4f7f\u7528\u9a8c\u8bc1\u96c6 : \u589e\u52a0\u6837\u672c\u62c6\u5206\u6570\u91cf,\u7efc\u5408\u8bc4\u4ef7\u6a21\u578b. \u6a21\u578b\u6b63\u5219\u5316: \u6700\u5e38\u89c1\u4e5f\u662f\u6700\u91cd\u8981\u7684\u9650\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u624b\u6bb5. \u53c2\u8003: https://www.zhihu.com/question/27068705","title":"011-\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee-\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3"},{"location":"\u673a\u5668\u5b66\u4e60/011-\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee-\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3/#_1","text":"\u5728\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6a21\u578b\u65f6,\u5bf9\u4e8e\u6570\u636e\u96c6\u7684\u5212\u5206\u5176\u5b9e\u662f\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6b65\u9aa4.\u5982\u679c\u6570\u636e\u96c6\u5212\u5206\u51fa\u73b0\u95ee\u9898,\u90a3\u4e48\u5c06\u4f1a\u5bfc\u81f4**\u6a21\u578b\u8fc7\u62df\u5408(over fitting)\u6216\u8005\u6b20\u62df\u5408(under fitting)**.\u6bd4\u5982\u4e00\u6b21\u82f9\u679c\u54c1\u8d28\u5224\u65ad\u6a21\u578b\u8bad\u7ec3\u4e2d,\u521a\u597d\u628a\u5177\u6709\u6591\u70b9\u5c5e\u6027\u7684\u597d\u82f9\u679c\u5168\u90e8\u5212\u5206\u5230\u4e86train_data\u4e2d,\u90a3\u4e48\u8fd9\u6b21\u8bad\u7ec3\u4f1a\u7531\u6b64\u5bfc\u81f4\u8fc7\u62df\u5408\u7684\u53d1\u751f.","title":"\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee/\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3"},{"location":"\u673a\u5668\u5b66\u4e60/011-\u5173\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u504f\u5dee-\u65b9\u5dee\u7684\u4e00\u8fde\u4e32\u7406\u89e3/#_2","text":"\u5f53\u7136\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u91c7\u7528\u9f0e\u9f0e\u5927\u540d\u7684K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5. \u5728K\u6298\u4ea4\u53c9\u9a8c\u8bc1\u4e2d\u4e5f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898,k\u5982\u4f55\u53d6\u503c? k\u53d6\u503c\u8d8a\u5927,\u5373\u6837\u672c\u88ab\u5212\u5206\u7528\u6765\u8bad\u7ec3\u7684\u6b21\u6570\u4e5f\u5c31\u8d8a\u591a,\u4fdd\u8bc1\u4e86\u5145\u5206\u5229\u7528\u6240\u6709\u7684\u6837\u672c. \u5e26\u6765\u7684\u540e\u679c\u662f\u7531\u504f\u5deebias\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u964d\u4f4e, \u7531\u65b9\u5deevariance\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u589e\u52a0,\u540c\u65f6\u8fd8\u589e\u52a0\u4e86\u8ba1\u7b97\u91cf.\u603b\u7684\u6765\u8bf4\u5c31\u662f\u8fc7\u62df\u5408(over fitting). k\u503c\u53d6\u5f97\u8d8a\u5c0f,\u5373\u6837\u672c\u88ab\u5212\u5206\u7528\u6765\u8bad\u7ec3\u7684\u6b21\u6570\u4e5f\u5c31\u8d8a\u5c11,\u6ca1\u6709\u4fdd\u8bc1\u6837\u672c\u88ab\u5145\u5206\u5229\u7528,\u6b64\u65f6,\u6a21\u578b\u8fd8\u6ca1\u6709\u5b66\u5230\u8db3\u591f\u591a\u7684\u4fe1\u606f. \u5e26\u6765\u7684\u540e\u679c\u662f\u7531\u504f\u5deebias\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u589e\u52a0, \u7531\u65b9\u5deevariance\u5e26\u6765\u7684\u6cdb\u5316\u8bef\u5dee\u964d\u4f4e.\u603b\u7684\u6765\u8bf4\u5c31\u662f\u6b20\u62df\u5408(under fitting). \u6839\u636e\u7ecf\u9a8c,k\u4e00\u822c\u53d65\u6216\u800510. \u504f\u5dee\u548c\u53cd\u5dee\u53c8\u662f\u4ec0\u4e48\u5462? \u4e00\u5f20\u56fe\u5c31\u80fd\u770b\u61c2. \u504f\u5dee(bias)\u8861\u91cf\u7684\u662f\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u7a0b\u5ea6(\u6b20\u62df\u5408\u662f\u5bfc\u81f4\u504f\u5dee\u7684\u4e3b\u8981\u539f\u56e0\u504f\u5dee\u8d8a\u5927,\u5373\u8bad\u7ec3\u7684\u7ed3\u679c\u79bb\u771f\u5b9e\u6837\u672c\u5c31\u5dee\u8fdc): \u504f\u5dee\u8fc7\u4e8e\u4f4e,\u4ec5\u4ee3\u8868\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u5b8c\u7f8e\u62df\u5408,\u610f\u5473\u7740\u6a21\u578b\u5341\u5206\u590d\u6742,\u5df2\u7ecf\u8fc7\u62df\u5408(overfitting).\u4e00\u65e6\u6570\u636e\u6709\u4efb\u4f55\u7684\u98ce\u5439\u8349\u52a8,\u6a21\u578b\u5c31\u4f1a\u8ddf\u7740\u53d1\u751f\u663e\u8457\u53d8\u5316,\u8bf4\u660e\u6a21\u578b\u5e76\u4e0d\u5177\u6709\u666e\u9002\u6027,\u5df2\u7ecf\u8fc7\u4e8e\u590d\u6742\u4e86. \u504f\u5dee\u8d8a\u9ad8\u8bf4\u660e\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u8fd8\u4e0d\u5230\u4f4d,\u6a21\u578b\u8fd8\u8fc7\u4e8e\u7b80\u964b,\u5c5e\u4e8e\u6b20\u62df\u5408.\u5bfc\u81f4\u8fd9\u4e00\u60c5\u51b5\u53d1\u751f\u7684\u4e3b\u8981\u539f\u56e0\u4e00\u822c\u662f\u5bf9\u95ee\u9898\u672c\u8eab\u7684\u5047\u8bbe\u4e0d\u6b63\u786e(\u4f8b\u5982\u4e8c\u9636\u591a\u9879\u5f0f\u56de\u5f52\u62df\u5408\u7684\u95ee\u9898,\u91c7\u7528\u4e86\u4e00\u9636\u7ebf\u6027\u56de\u5f52\u8fdb\u884c\u89e3\u51b3),\u4ea6\u6216\u8005\u662f\u5bf9\u4e8e\u7279\u5f81\u7684\u9009\u53d6\u51fa\u73b0\u95ee\u9898(\u4f8b\u5982\u9884\u6d4b\u5b66\u751f\u6210\u7ee9,\u9009\u7528\u7684\u7279\u5f81\u5374\u662f\u5b66\u751f\u540d\u5b57). \u65b9\u5dee(variance)\u63cf\u8ff0\u7684\u662f\u8bad\u7ec3\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0,\u5373\u4e3b\u8981\u662f\u6cdb\u5316\u6027\u80fd\u7684\u4f53\u73b0, \u65b9\u5dee\u8d8a\u5927\u8bf4\u660e\u6a21\u578b\u8d8a\u590d\u6742\u8d8a\u662f\u8fc7\u62df\u5408,\u5bb9\u6613\u53d7\u5230\u6270\u52a8. \u56e0\u6b64,\u8981\u6c42variance\u8d8a\u5c0f\u8d8a\u597d.\u4e3a\u4e86\u964d\u4f4e\u65b9\u5dee,\u5c31\u9700\u8981\u7b80\u5316\u6a21\u578b,\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570,\u4f46\u662f\u8fd9\u6837\u53c8\u5bb9\u6613\u6b20\u62df\u5408(under fitting). \u56e0\u6b64\u53ef\u4ee5\u53d1\u73b0\u504f\u5dee\u548c\u65b9\u5dee\u662f\u4e0d\u53ef\u80fd\u540c\u65f6\u6700\u4f18\u7684,\u53ea\u80fd\u5c3d\u91cf\u9009\u62e9\u51fa\u6cdb\u5316\u8bef\u5deeError\u6700\u5c0f\u7684\u7ec4\u5408,\u56e0\u4e3a\u6cdb\u5316Error = Bias + Variance. \u6709\u4e00\u4e9b\u7b97\u6cd5\u5929\u751f\u5c31\u662f\u9ad8\u65b9\u5dee\u7684\u7b97\u6cd5:KNN \u901a\u5e38\u6765\u8bf4,\u975e\u53c2\u6570\u5b66\u4e60\u901a\u5e38\u90fd\u662f\u9ad8\u65b9\u5dee\u7b97\u6cd5.\u56e0\u4e3a\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u975e\u5e38\u654f\u611f. \u6709\u4e00\u4e9b\u7b97\u6cd5\u5929\u751f\u5c31\u662f\u9ad8\u504f\u5dee\u7b97\u6cd5:\u7ebf\u6027\u56de\u5f52 \u53c2\u6570\u5b66\u4e60\u901a\u5e38\u90fd\u662f\u9ad8\u504f\u5dee\u7b97\u6cd5.\u56e0\u4e3a\u9009\u53d6\u65f6\u6a21\u578b\u672c\u8eab\u5177\u6709\u6781\u5f3a\u7684\u5047\u8bbe\u6027. \u4f46\u662f,\u5927\u591a\u6570\u7b97\u6cd5\u5177\u6709\u76f8\u5e94\u7684\u53c2\u6570,\u53ef\u4ee5\u8c03\u6574\u504f\u5dee\u548c\u65b9\u5dee.\u4f8b\u5982KNN\u4e2d\u7684k\u548c\u7ebf\u6027\u56de\u5f52\u4e2d\u7684\u7279\u5f81\u7684\u9636\u6570. \u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218,\u6765\u81ea\u4e8e\u65b9\u5dee! \u56e0\u4e3a\u8fc7\u62df\u5408\u95ee\u9898\u662f\u6a21\u578b\u8bad\u7ec3\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898. \u89e3\u51b3\u9ad8\u65b9\u5dee\u7684\u624b\u6bb5: \u964d\u4f4e\u6a21\u578b\u590d\u6742\u5ea6 : \u9632\u6b62\u8fc7\u62df\u5408 \u51cf\u5c11\u6570\u636e\u7ef4\u5ea6,\u964d\u566a : \u5c3d\u91cf\u51cf\u5c11\u7b97\u6cd5\u5b66\u4e60\u5230\u7684\u566a\u97f3\u4fe1\u606f \u589e\u52a0\u6837\u672c\u6570\u76ee : \u7b97\u6cd5\u6a21\u578b\u592a\u8fc7\u590d\u6742\u65f6,\u5fc5\u8981\u7684\u53c2\u6570\u8fc7\u591a,\u4f46\u662f\u6837\u672c\u6570\u76ee\u592a\u5c11,\u4e0d\u8db3\u4ee5\u5b66\u4e60\u5230\u6700\u4f18\u7684\u53c2\u6570. \u4f7f\u7528\u9a8c\u8bc1\u96c6 : \u589e\u52a0\u6837\u672c\u62c6\u5206\u6570\u91cf,\u7efc\u5408\u8bc4\u4ef7\u6a21\u578b. \u6a21\u578b\u6b63\u5219\u5316: \u6700\u5e38\u89c1\u4e5f\u662f\u6700\u91cd\u8981\u7684\u9650\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u624b\u6bb5. \u53c2\u8003: https://www.zhihu.com/question/27068705","title":"\u90a3\u4e48\u5982\u4f55\u66f4\u597d\u5730\u8bc4\u4f30\u6a21\u578b,\u4ece\u800c\u6839\u636e\u8bc4\u4f30\u7ed3\u679c\u8fdb\u884c\u6a21\u578b\u5224\u65ad\u5462?"},{"location":"\u673a\u5668\u5b66\u4e60/012-Keras\u4f7f\u7528tensorboard\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u8e29\u8fc7\u7684\u5751/","text":"\u300aPython\u6df1\u5ea6\u5b66\u4e60\u300b\u770b\u5230\u7b2c\u4e03\u7ae0\uff0c\u7531\u4e8e\u65f6\u95f4\u8de8\u5ea6\u8f83\u5927\uff0c\u524d\u9762\u5185\u5bb9\u6709\u70b9\u8bb0\u4e0d\u592a\u6e05\u695a\u4e86\uff0c\u597d\u5728\u6f14\u793a\u4ee3\u7801\u90fd\u6328\u7740\u8fd0\u884c\u6210\u529f\u4e86\u4e00\u904d\uff0c\u4e5f\u53c2\u7167\u6559\u7a0b\u4f7f\u7528CNN\u5199\u4e86\u4e2a\u7b80\u5355\u7684\u9a8c\u8bc1\u7801\u8bc6\u522b\u6a21\u578b\u51fa\u6765\u3002 \u5728\u4f7f\u7528tensorboard\u505a\u53ef\u89c6\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u4e00\u4e9b\u5751\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e0b\u89e3\u51b3\u95ee\u9898\u7684\u5fc3\u8def\u5386\u7a0b\uff0c\u540e\u9762\u6362\u7535\u8111\u7684\u8bdd\u4e5f\u6709\u4e2a\u53c2\u8003\uff1a \u95ee\u9898\u4e00\uff1aNo module named 'google.protobuf.pyext' \u00b6 \u89e3\u51b3\u65b9\u5f0f\uff1a \u7ba1\u7406\u5458\u6a21\u5f0f\u6253\u5f00cmd : pip install protobuf -i https://pypi.tuna.tsinghua.edu.cn/simple \u5f53\u7136pip\u6e90\u53ef\u4ee5\u9009\u4e2a\u81ea\u5df1\u559c\u6b22\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u5199\u7684\u554a \u4f46\u4e8b\u5b9e\u4e0a\u786e\u5b9e\u56f0\u6270\u4e86\u6211\u4e00\u4e24\u4e2a\u5c0f\u65f6\uff0c\u4e4b\u524d\u603b\u89c9\u5f97\u662fgoogle\u5305\u51fa\u4e86\u95ee\u9898\uff0c\u600e\u4e48\u88c5\u90fd\u6ca1\u6cd5\u89e3\u51b3\u3002\u5c34\u5c2c\uff0c\u5148\u6302\u5230\u8fd9\u91cc\u8d77\u8b66\u793a\u4f5c\u7528\u5427\uff01 \u95ee\u9898\u4e8c\uff1aAllocation of 6400000000 exceeds 10% of system memory. \u00b6 \u5570\u55e6\uff1a\u4e4b\u524d\u5355\u72ec\u4f7f\u7528\u4e00\u7ef4\u5377\u79ef\u8bad\u7ec3imdb\u7684\u65f6\u5019\u8fd0\u884c\u8fd8\u6bd4\u8f83\u6b63\u5e38\uff0c\u600e\u4e48\u6dfb\u52a0\u4e86callback\u540e\u5c31\u5185\u5b58\u4e0d\u8db3\u4e86\u5462\u3002\u770b\u6765\u4f7f\u7528tensorboard\u56de\u8c03\u662f\u4e00\u4ef6\u5360\u7528\u5185\u5b58\u633a\u9ad8\u7684\u64cd\u4f5c\u3002\u56de\u53bb\u5bf9\u6bd4\u4e86\u4e00\u4e0b\uff0c\u6f14\u793a\u4ee3\u7801\u7684max_features\u4e5f\u6bd4\u4e4b\u524d\u7684\u5927\u4e86\u4e00\u500d\uff0c\u96be\u602a\u6211\u7684\u5c0f\u5185\u5b58\u7b14\u8bb0\u672c\u6709\u70b9\u5403\u4e0d\u6d88\u4e86\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1amax_features = 500, \u51cf\u5c11\u7279\u5f81\u6570\u91cf\uff0c\u4ece\u800c\u51cf\u5c11\u7f51\u7edc\u7684\u5927\u5c0f\u3002 \u5bf9\uff0c\u8fd9\u91cc\u8fd8\u662f\u628a\u4e66\u4e2d\u4ee3\u7801\u4fee\u6539\u7684\u5730\u65b9\u6807\u6ce8\u4e00\u4e0b\u5427\uff1a import keras from keras import layers from keras.datasets import imdb from keras.preprocessing import sequence max_features = 500 # \u539f\u6587\u4e3a2000 max_len = 500 ( x_train , y_train ), ( x_test , y_test ) = imdb . load_data ( num_words = max_features ) x_train = sequence . pad_sequences ( x_train , maxlen = max_len ) x_test = sequence . pad_sequences ( x_test , maxlen = max_len ) model = keras . models . Sequential () model . add ( layers . Embedding ( max_features , 128 , input_length = max_len , name = 'embed' )) model . add ( layers . Conv1D ( 32 , 7 , activation = 'relu' )) model . add ( layers . MaxPooling1D ( 5 )) model . add ( layers . Conv1D ( 32 , 7 , activation = 'relu' )) model . add ( layers . GlobalMaxPooling1D ()) model . add ( layers . Dense ( 1 )) model . summary () model . compile ( optimizer = 'rmsprop' , loss = 'binary_crossentropy' , metrics = [ 'acc' ]) callbacks = [ keras . callbacks . TensorBoard ( log_dir = 'my_log_dir' , histogram_freq = 1 , embeddings_freq = 1 , embeddings_data = x_train [: 100 ] . astype ( \"float32\" ) )] history = model . fit ( x_train , y_train , epochs = 20 , batch_size = 128 , validation_split = 0.2 , callbacks = callbacks ) \u95ee\u9898\u4e09\uff1aValueError: To visualize embeddings, embeddings_data must be provided. \u00b6 \u5570\u5506\uff1a\u5b57\u9762\u610f\u601d\u5e94\u8be5\u662f\u56de\u6389\u7684TensorBoard\u7c7b\u4e2d\u6ca1\u6709\u6307\u5b9a embeddings_data\u7684\u503c\uff0c\u6309\u7406\u8bf4\u8fd9\u4e48\u7ecf\u5178\u7684\u4e66\u5e94\u8be5\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u7248\u672c\u7684\u5dee\u5f02\u5427\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1a\u6dfb\u52a0embeddings_data=x_train\u8bd5\u8bd5... \u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u8fd9\u6b21\u7684\u9519\u8bef\u6bd4\u8f83\u660e\u663e\uff0cembeddings_data\u9700\u8981\u662ffloat\u7c7b\u578b\u7684\uff0c\u800c\u6211\u4eec\u7684x_train\u8fd8\u662fint32\u3002\u4f7f\u7528astype\u8f6c\u6362\u6210float\u7c7b\u578b\u518d\u6b21\u586b\u5199\u53c2\u6570\u3002 \u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u7ec8\u4e8e\u5230\u4e86~\u6d4f\u89c8\u5668\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee tensorboard\uff0c\u4f7f\u7528PCA\u8ba1\u7b97\u51faEmbedding \u7684\u7ed3\u679c\uff0c\u7ed3\u679c\u5927\u6982\u5c31\u662f\u4e0b\u9762\u7684\u6837\u5b50\uff08\u8fd8\u662f\u6709\u4e9b\u9177\u70ab\u7684\u561b\uff09\u3002","title":"012-Keras\u4f7f\u7528tensorboard\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u8e29\u8fc7\u7684\u5751"},{"location":"\u673a\u5668\u5b66\u4e60/012-Keras\u4f7f\u7528tensorboard\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u8e29\u8fc7\u7684\u5751/#no-module-named-googleprotobufpyext","text":"\u89e3\u51b3\u65b9\u5f0f\uff1a \u7ba1\u7406\u5458\u6a21\u5f0f\u6253\u5f00cmd : pip install protobuf -i https://pypi.tuna.tsinghua.edu.cn/simple \u5f53\u7136pip\u6e90\u53ef\u4ee5\u9009\u4e2a\u81ea\u5df1\u559c\u6b22\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u5199\u7684\u554a \u4f46\u4e8b\u5b9e\u4e0a\u786e\u5b9e\u56f0\u6270\u4e86\u6211\u4e00\u4e24\u4e2a\u5c0f\u65f6\uff0c\u4e4b\u524d\u603b\u89c9\u5f97\u662fgoogle\u5305\u51fa\u4e86\u95ee\u9898\uff0c\u600e\u4e48\u88c5\u90fd\u6ca1\u6cd5\u89e3\u51b3\u3002\u5c34\u5c2c\uff0c\u5148\u6302\u5230\u8fd9\u91cc\u8d77\u8b66\u793a\u4f5c\u7528\u5427\uff01","title":"\u95ee\u9898\u4e00\uff1aNo module named 'google.protobuf.pyext'"},{"location":"\u673a\u5668\u5b66\u4e60/012-Keras\u4f7f\u7528tensorboard\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u8e29\u8fc7\u7684\u5751/#allocation-of-6400000000-exceeds-10-of-system-memory","text":"\u5570\u55e6\uff1a\u4e4b\u524d\u5355\u72ec\u4f7f\u7528\u4e00\u7ef4\u5377\u79ef\u8bad\u7ec3imdb\u7684\u65f6\u5019\u8fd0\u884c\u8fd8\u6bd4\u8f83\u6b63\u5e38\uff0c\u600e\u4e48\u6dfb\u52a0\u4e86callback\u540e\u5c31\u5185\u5b58\u4e0d\u8db3\u4e86\u5462\u3002\u770b\u6765\u4f7f\u7528tensorboard\u56de\u8c03\u662f\u4e00\u4ef6\u5360\u7528\u5185\u5b58\u633a\u9ad8\u7684\u64cd\u4f5c\u3002\u56de\u53bb\u5bf9\u6bd4\u4e86\u4e00\u4e0b\uff0c\u6f14\u793a\u4ee3\u7801\u7684max_features\u4e5f\u6bd4\u4e4b\u524d\u7684\u5927\u4e86\u4e00\u500d\uff0c\u96be\u602a\u6211\u7684\u5c0f\u5185\u5b58\u7b14\u8bb0\u672c\u6709\u70b9\u5403\u4e0d\u6d88\u4e86\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1amax_features = 500, \u51cf\u5c11\u7279\u5f81\u6570\u91cf\uff0c\u4ece\u800c\u51cf\u5c11\u7f51\u7edc\u7684\u5927\u5c0f\u3002 \u5bf9\uff0c\u8fd9\u91cc\u8fd8\u662f\u628a\u4e66\u4e2d\u4ee3\u7801\u4fee\u6539\u7684\u5730\u65b9\u6807\u6ce8\u4e00\u4e0b\u5427\uff1a import keras from keras import layers from keras.datasets import imdb from keras.preprocessing import sequence max_features = 500 # \u539f\u6587\u4e3a2000 max_len = 500 ( x_train , y_train ), ( x_test , y_test ) = imdb . load_data ( num_words = max_features ) x_train = sequence . pad_sequences ( x_train , maxlen = max_len ) x_test = sequence . pad_sequences ( x_test , maxlen = max_len ) model = keras . models . Sequential () model . add ( layers . Embedding ( max_features , 128 , input_length = max_len , name = 'embed' )) model . add ( layers . Conv1D ( 32 , 7 , activation = 'relu' )) model . add ( layers . MaxPooling1D ( 5 )) model . add ( layers . Conv1D ( 32 , 7 , activation = 'relu' )) model . add ( layers . GlobalMaxPooling1D ()) model . add ( layers . Dense ( 1 )) model . summary () model . compile ( optimizer = 'rmsprop' , loss = 'binary_crossentropy' , metrics = [ 'acc' ]) callbacks = [ keras . callbacks . TensorBoard ( log_dir = 'my_log_dir' , histogram_freq = 1 , embeddings_freq = 1 , embeddings_data = x_train [: 100 ] . astype ( \"float32\" ) )] history = model . fit ( x_train , y_train , epochs = 20 , batch_size = 128 , validation_split = 0.2 , callbacks = callbacks )","title":"\u95ee\u9898\u4e8c\uff1aAllocation of 6400000000 exceeds 10% of system memory."},{"location":"\u673a\u5668\u5b66\u4e60/012-Keras\u4f7f\u7528tensorboard\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u8e29\u8fc7\u7684\u5751/#valueerror-to-visualize-embeddings-embeddings_data-must-be-provided","text":"\u5570\u5506\uff1a\u5b57\u9762\u610f\u601d\u5e94\u8be5\u662f\u56de\u6389\u7684TensorBoard\u7c7b\u4e2d\u6ca1\u6709\u6307\u5b9a embeddings_data\u7684\u503c\uff0c\u6309\u7406\u8bf4\u8fd9\u4e48\u7ecf\u5178\u7684\u4e66\u5e94\u8be5\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u7248\u672c\u7684\u5dee\u5f02\u5427\u3002 \u89e3\u51b3\u65b9\u5f0f\uff1a\u6dfb\u52a0embeddings_data=x_train\u8bd5\u8bd5... \u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u8fd9\u6b21\u7684\u9519\u8bef\u6bd4\u8f83\u660e\u663e\uff0cembeddings_data\u9700\u8981\u662ffloat\u7c7b\u578b\u7684\uff0c\u800c\u6211\u4eec\u7684x_train\u8fd8\u662fint32\u3002\u4f7f\u7528astype\u8f6c\u6362\u6210float\u7c7b\u578b\u518d\u6b21\u586b\u5199\u53c2\u6570\u3002 \u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u7ec8\u4e8e\u5230\u4e86~\u6d4f\u89c8\u5668\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee tensorboard\uff0c\u4f7f\u7528PCA\u8ba1\u7b97\u51faEmbedding \u7684\u7ed3\u679c\uff0c\u7ed3\u679c\u5927\u6982\u5c31\u662f\u4e0b\u9762\u7684\u6837\u5b50\uff08\u8fd8\u662f\u6709\u4e9b\u9177\u70ab\u7684\u561b\uff09\u3002","title":"\u95ee\u9898\u4e09\uff1aValueError: To visualize embeddings, embeddings_data must be provided."},{"location":"\u673a\u5668\u5b66\u4e60/013 \u8fdb\u5165tensorboard/","text":"\u8fdb\u5165tensorboard\u7684\u547d\u4ee4 tensorboard --logdir=callbacks","title":"013 \u8fdb\u5165tensorboard"}]}